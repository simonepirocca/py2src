{"total_count": 537, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/aaugustin/websockets/issues/816", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/816/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/816/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/816/events", "html_url": "https://github.com/aaugustin/websockets/issues/816", "id": 681525493, "node_id": "MDU6SXNzdWU2ODE1MjU0OTM=", "number": 816, "title": "unsupport http version http/1.0", "user": {"login": "chppppp", "id": 7140485, "node_id": "MDQ6VXNlcjcxNDA0ODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7140485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chppppp", "html_url": "https://github.com/chppppp", "followers_url": "https://api.github.com/users/chppppp/followers", "following_url": "https://api.github.com/users/chppppp/following{/other_user}", "gists_url": "https://api.github.com/users/chppppp/gists{/gist_id}", "starred_url": "https://api.github.com/users/chppppp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chppppp/subscriptions", "organizations_url": "https://api.github.com/users/chppppp/orgs", "repos_url": "https://api.github.com/users/chppppp/repos", "events_url": "https://api.github.com/users/chppppp/events{/privacy}", "received_events_url": "https://api.github.com/users/chppppp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-19T03:52:26Z", "updated_at": "2020-08-20T20:06:45Z", "closed_at": "2020-08-20T20:06:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n  File \"/home/hook/.local/lib/python3.8/site-packages/websockets/client.py\", line 101, in read_http_response\r\n    status_code, reason, headers = await read_response(self.reader)\r\n  File \"/home/hook/.local/lib/python3.8/site-packages/websockets/http.py\", line 149, in read_response\r\n    raise ValueError(f\"unsupported HTTP version: {d(version)}\")\r\nValueError: unsupported HTTP version: HTTP/1.0\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"blindsqli.py\", line 9, in <module>\r\n    asyncio.get_event_loop().run_until_complete(\r\n  File \"/usr/lib/python3.8/asyncio/base_events.py\", line 616, in run_until_complete\r\n    return future.result()\r\n  File \"blindsqli.py\", line 5, in hello\r\n    async with websockets.connect(uri) as websocket:\r\n  File \"/home/hook/.local/lib/python3.8/site-packages/websockets/client.py\", line 517, in __aenter__\r\n    return await self\r\n  File \"/home/hook/.local/lib/python3.8/site-packages/websockets/client.py\", line 542, in __await_impl__\r\n    await protocol.handshake(\r\n  File \"/home/hook/.local/lib/python3.8/site-packages/websockets/client.py\", line 290, in handshake\r\n    status_code, response_headers = await self.read_http_response()\r\n  File \"/home/hook/.local/lib/python3.8/site-packages/websockets/client.py\", line 103, in read_http_response\r\n    raise InvalidMessage(\"did not receive a valid HTTP response\") from exc\r\nwebsockets.exceptions.InvalidMessage: did not receive a valid HTTP response\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/814", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/814/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/814/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/814/events", "html_url": "https://github.com/aaugustin/websockets/issues/814", "id": 680007661, "node_id": "MDU6SXNzdWU2ODAwMDc2NjE=", "number": 814, "title": "How can i manually check the handshake for the server?", "user": {"login": "Directory", "id": 26686708, "node_id": "MDQ6VXNlcjI2Njg2NzA4", "avatar_url": "https://avatars3.githubusercontent.com/u/26686708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Directory", "html_url": "https://github.com/Directory", "followers_url": "https://api.github.com/users/Directory/followers", "following_url": "https://api.github.com/users/Directory/following{/other_user}", "gists_url": "https://api.github.com/users/Directory/gists{/gist_id}", "starred_url": "https://api.github.com/users/Directory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Directory/subscriptions", "organizations_url": "https://api.github.com/users/Directory/orgs", "repos_url": "https://api.github.com/users/Directory/repos", "events_url": "https://api.github.com/users/Directory/events{/privacy}", "received_events_url": "https://api.github.com/users/Directory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-17T07:17:17Z", "updated_at": "2020-08-21T03:27:57Z", "closed_at": "2020-08-20T20:10:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "For my application the client is public and i want to obfuscate the handshake further and increase security. This is how I'm serving my application.\r\n```py\r\nasync def connection_handler(connection: websockets.server.WebSocketServerProtocol, path: str):\r\n    pass\r\n\r\nstart_server = websockets.serve(connection_handler, '0.0.0.0', 1234)\r\nasyncio.get_event_loop().run_until_complete(start_server)\r\nasyncio.get_event_loop().run_forever()\r\n```\r\nThe problem is `websockets.serve()` is too good. It automates everything. Any client can connect and will finish the handshake and establish the connection before it can be manually checked. I want to be able to check the http request and have the library verify that its a proper handshake request, but have custom code to check stuff like headers, url paths, etc and then decide if it should finish the handshake and continue on or send back a 403 response (or just ungracefully close the low level tcp socket underneath without response, idrc at that point since if this would ever happen then its not my real client and it can ~profanity removed~).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/813", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/813/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/813/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/813/events", "html_url": "https://github.com/aaugustin/websockets/issues/813", "id": 679775029, "node_id": "MDU6SXNzdWU2Nzk3NzUwMjk=", "number": 813, "title": " How can I send a message to all clients connected to the server?", "user": {"login": "tlwsn", "id": 37672465, "node_id": "MDQ6VXNlcjM3NjcyNDY1", "avatar_url": "https://avatars2.githubusercontent.com/u/37672465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlwsn", "html_url": "https://github.com/tlwsn", "followers_url": "https://api.github.com/users/tlwsn/followers", "following_url": "https://api.github.com/users/tlwsn/following{/other_user}", "gists_url": "https://api.github.com/users/tlwsn/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlwsn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlwsn/subscriptions", "organizations_url": "https://api.github.com/users/tlwsn/orgs", "repos_url": "https://api.github.com/users/tlwsn/repos", "events_url": "https://api.github.com/users/tlwsn/events{/privacy}", "received_events_url": "https://api.github.com/users/tlwsn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-16T15:34:45Z", "updated_at": "2020-08-17T05:53:31Z", "closed_at": "2020-08-17T05:53:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to create a simple chat, so I want to know how can I send a message to all clients connected to the server", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/811", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/811/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/811/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/811/events", "html_url": "https://github.com/aaugustin/websockets/issues/811", "id": 678393866, "node_id": "MDU6SXNzdWU2NzgzOTM4NjY=", "number": 811, "title": "The websocket send sometimes report \"connection closed\" when using reuse_port", "user": {"login": "jiangjianping", "id": 14144270, "node_id": "MDQ6VXNlcjE0MTQ0Mjcw", "avatar_url": "https://avatars0.githubusercontent.com/u/14144270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiangjianping", "html_url": "https://github.com/jiangjianping", "followers_url": "https://api.github.com/users/jiangjianping/followers", "following_url": "https://api.github.com/users/jiangjianping/following{/other_user}", "gists_url": "https://api.github.com/users/jiangjianping/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiangjianping/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiangjianping/subscriptions", "organizations_url": "https://api.github.com/users/jiangjianping/orgs", "repos_url": "https://api.github.com/users/jiangjianping/repos", "events_url": "https://api.github.com/users/jiangjianping/events{/privacy}", "received_events_url": "https://api.github.com/users/jiangjianping/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-08-13T12:21:07Z", "updated_at": "2020-08-20T20:32:39Z", "closed_at": "2020-08-19T06:07:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running websocket servers in CentOS 7, kernal version is  3.10.0. I hope to support large connections in one server.\r\n  \r\nThere is no problem to use one instance for ssl port 443. When use two more instances in the same port with reuse_port=True. After running about two minutes, the websocket may report \"connection closed\" (code=1000, no reason) when send the message to client. At that time, from client side, the websocket connection is still alive with normal ping/pong exchange.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/807", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/807/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/807/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/807/events", "html_url": "https://github.com/aaugustin/websockets/issues/807", "id": 667299557, "node_id": "MDU6SXNzdWU2NjcyOTk1NTc=", "number": 807, "title": "What is the right way to recv responses?", "user": {"login": "altonotch", "id": 36417387, "node_id": "MDQ6VXNlcjM2NDE3Mzg3", "avatar_url": "https://avatars3.githubusercontent.com/u/36417387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/altonotch", "html_url": "https://github.com/altonotch", "followers_url": "https://api.github.com/users/altonotch/followers", "following_url": "https://api.github.com/users/altonotch/following{/other_user}", "gists_url": "https://api.github.com/users/altonotch/gists{/gist_id}", "starred_url": "https://api.github.com/users/altonotch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/altonotch/subscriptions", "organizations_url": "https://api.github.com/users/altonotch/orgs", "repos_url": "https://api.github.com/users/altonotch/repos", "events_url": "https://api.github.com/users/altonotch/events{/privacy}", "received_events_url": "https://api.github.com/users/altonotch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-28T19:02:18Z", "updated_at": "2020-07-28T21:08:53Z", "closed_at": "2020-07-28T21:08:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is something I don't understand about how to get a response messages, probably due to lack of understanding how asycio works.\r\n\r\nCurrently I have following code: \r\n\r\n```\r\nasync def send_message(conn, message):\r\n    await conn.send(payload)\r\n    return await conn.recv()\r\n```\r\n\r\nThis works fine for one call, but fails for multiple concurrent calls with error:\r\n\r\n```\r\ncannot call recv while another coroutine is already waiting for the next message\r\n```\r\n\r\nI tried using ```asyncio.wait_for``` and ```asyncio.ensure_future``` but it all fails with same error. One request succeeds the rest fail. \r\n\r\nWhat would be the best way to send a message and receive a response?\r\nAny help would be highly appreciated \ud83d\ude4f ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/805", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/805/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/805/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/805/events", "html_url": "https://github.com/aaugustin/websockets/issues/805", "id": 665493042, "node_id": "MDU6SXNzdWU2NjU0OTMwNDI=", "number": 805, "title": "How to force close?", "user": {"login": "yunyuyuan", "id": 45785585, "node_id": "MDQ6VXNlcjQ1Nzg1NTg1", "avatar_url": "https://avatars2.githubusercontent.com/u/45785585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yunyuyuan", "html_url": "https://github.com/yunyuyuan", "followers_url": "https://api.github.com/users/yunyuyuan/followers", "following_url": "https://api.github.com/users/yunyuyuan/following{/other_user}", "gists_url": "https://api.github.com/users/yunyuyuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/yunyuyuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yunyuyuan/subscriptions", "organizations_url": "https://api.github.com/users/yunyuyuan/orgs", "repos_url": "https://api.github.com/users/yunyuyuan/repos", "events_url": "https://api.github.com/users/yunyuyuan/events{/privacy}", "received_events_url": "https://api.github.com/users/yunyuyuan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-25T01:53:01Z", "updated_at": "2020-07-26T20:59:00Z", "closed_at": "2020-07-26T20:59:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to force close a websocket that locked by `await`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/804", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/804/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/804/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/804/events", "html_url": "https://github.com/aaugustin/websockets/issues/804", "id": 664666120, "node_id": "MDU6SXNzdWU2NjQ2NjYxMjA=", "number": 804, "title": "from plugin import websocket", "user": {"login": "meengithub", "id": 47240581, "node_id": "MDQ6VXNlcjQ3MjQwNTgx", "avatar_url": "https://avatars3.githubusercontent.com/u/47240581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meengithub", "html_url": "https://github.com/meengithub", "followers_url": "https://api.github.com/users/meengithub/followers", "following_url": "https://api.github.com/users/meengithub/following{/other_user}", "gists_url": "https://api.github.com/users/meengithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/meengithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meengithub/subscriptions", "organizations_url": "https://api.github.com/users/meengithub/orgs", "repos_url": "https://api.github.com/users/meengithub/repos", "events_url": "https://api.github.com/users/meengithub/events{/privacy}", "received_events_url": "https://api.github.com/users/meengithub/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943708, "node_id": "MDU6TGFiZWwzMzk0MzcwOA==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/invalid", "name": "invalid", "color": "f9d0c4", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T18:01:19Z", "updated_at": "2020-07-24T18:01:13Z", "closed_at": "2020-07-23T19:13:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "from plugin import websocket\r\n\r\nThis code is given the below error\r\n\r\nModuleNotFoundError: No module named 'plugin'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/802", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/802/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/802/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/802/events", "html_url": "https://github.com/aaugustin/websockets/issues/802", "id": 664313914, "node_id": "MDU6SXNzdWU2NjQzMTM5MTQ=", "number": 802, "title": "Cannot add brackets to IPv6 address", "user": {"login": "TomisderMeister", "id": 25561316, "node_id": "MDQ6VXNlcjI1NTYxMzE2", "avatar_url": "https://avatars1.githubusercontent.com/u/25561316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TomisderMeister", "html_url": "https://github.com/TomisderMeister", "followers_url": "https://api.github.com/users/TomisderMeister/followers", "following_url": "https://api.github.com/users/TomisderMeister/following{/other_user}", "gists_url": "https://api.github.com/users/TomisderMeister/gists{/gist_id}", "starred_url": "https://api.github.com/users/TomisderMeister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TomisderMeister/subscriptions", "organizations_url": "https://api.github.com/users/TomisderMeister/orgs", "repos_url": "https://api.github.com/users/TomisderMeister/repos", "events_url": "https://api.github.com/users/TomisderMeister/events{/privacy}", "received_events_url": "https://api.github.com/users/TomisderMeister/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943705, "node_id": "MDU6TGFiZWwzMzk0MzcwNQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-23T09:06:13Z", "updated_at": "2020-07-27T09:14:56Z", "closed_at": "2020-07-26T19:39:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello Everyone,\r\nI tried to set brackets after a full ipv6 address, because otherwise the server not accept my connection.\r\n**Is there anyway how this is possible with the given arguments?**\r\nAs i understand the source code message get lost after parsing the uri.\r\nI fixed the problem temporaly by editing **client.py** in line **253** and adding the brackets manually.\r\nfrom:\r\n`request_headers[\"Host\"] = f\"{wsuri.host}:{wsuri.port}\"`\r\nto:\r\n`request_headers[\"Host\"] = f\"[{wsuri.host}]:{wsuri.port}\"`\r\nAfter this everything works fine.\r\nIf you could provide me with a more accurate solution, I would be really glad.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/800", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/800/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/800/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/800/events", "html_url": "https://github.com/aaugustin/websockets/issues/800", "id": 662274471, "node_id": "MDU6SXNzdWU2NjIyNzQ0NzE=", "number": 800, "title": "Error: The Future belongs to a different loop", "user": {"login": "JonahKr", "id": 38377070, "node_id": "MDQ6VXNlcjM4Mzc3MDcw", "avatar_url": "https://avatars2.githubusercontent.com/u/38377070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonahKr", "html_url": "https://github.com/JonahKr", "followers_url": "https://api.github.com/users/JonahKr/followers", "following_url": "https://api.github.com/users/JonahKr/following{/other_user}", "gists_url": "https://api.github.com/users/JonahKr/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonahKr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonahKr/subscriptions", "organizations_url": "https://api.github.com/users/JonahKr/orgs", "repos_url": "https://api.github.com/users/JonahKr/repos", "events_url": "https://api.github.com/users/JonahKr/events{/privacy}", "received_events_url": "https://api.github.com/users/JonahKr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-20T21:18:53Z", "updated_at": "2020-07-26T20:58:50Z", "closed_at": "2020-07-26T20:58:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there \ud83d\udc4b \r\nLet me describe my setup really quick.\r\nThere is a mqtt listener running at all times subscribed to certain topics.\r\nIn the Event of an message a function gets executed. (Async or \"normal\" doesn't matter)\r\n\r\nBefore the start of the mqtt client, i can create my websocket client and everything works perfectly fine.\r\nThe second i start it though, all websocket calls become impossible meaning that the tasks never end.\r\n\r\nI assume this has something to do with the recv function and a loop behind it to detect new incoming messages...\r\n\r\n```py\r\nasync def intent_handle(intent):\r\n    logger.debug(await hass.ws.fetch_services())\r\n    return EndSession(\"\")\r\n```\r\nAt the point where the message is called the first time, it freezes... If i exit the script, following error gets thrown:\r\n```\r\n[ERROR:2020-07-20 23:16:18,508] asyncio: Task was destroyed but it is pending!\r\ntask: <Task pending name='Task-11' coro=<WebSocketCommonProtocol.close_connection() done, defined at C:\\Users\\jonah\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\websockets\\protocol.py:1153> wait_for=<Future pending cb=[<TaskWakeupMethWrapper object at 0x03E20280>()]> cb=[gather.<locals>._done_callback() at C:\\Users\\jonah\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\asyncio\\tasks.py:751]>\r\nException ignored in: <function _ProactorBasePipeTransport.__del__ at 0x0388D2B0>\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\jonah\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\asyncio\\proactor_events.py\", line 116, in __del__\r\n    self.close()\r\n  File \"C:\\Users\\jonah\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\asyncio\\proactor_events.py\", line 108, in close\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"C:\\Users\\jonah\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\asyncio\\base_events.py\", line 719, in call_soon\r\n    self._check_closed()\r\n  File \"C:\\Users\\jonah\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\asyncio\\base_events.py\", line 508, in _check_closed       \r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\n[ERROR:2020-07-20 23:16:18,513] asyncio: Task was destroyed but it is pending!\r\ntask: <Task pending name='Task-6' coro=<WebSocketCommonProtocol.close_connection() running at C:\\Users\\jonah\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\websockets\\protocol.py:1179> wait_for=<Future pending cb=[<TaskWakeupMethWrapper object at 0x03BC00A0>()]> cb=[gather.<locals>._done_callback() at C:\\Users\\jonah\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\asyncio\\tasks.py:751]>\r\nException ignored in: <coroutine object WebSocketCommonProtocol.close_connection at 0x03E50628>\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\jonah\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\websockets\\protocol.py\", line 1206, in close_connection\r\n    if await self.wait_for_connection_lost():\r\n  File \"C:\\Users\\jonah\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\websockets\\protocol.py\", line 1226, in wait_for_connection_lost\r\n    await asyncio.wait_for(\r\n  File \"C:\\Users\\jonah\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\asyncio\\tasks.py\", line 448, in wait_for\r\n    loop = events.get_running_loop()\r\nRuntimeError: no running event loop\r\n```\r\n\r\nThat means somehow, it isn't able to fetch the future as far as i understand it.\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/797", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/797/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/797/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/797/events", "html_url": "https://github.com/aaugustin/websockets/issues/797", "id": 659511910, "node_id": "MDU6SXNzdWU2NTk1MTE5MTA=", "number": 797, "title": "Best way to cancel websocket.recv", "user": {"login": "srkunze", "id": 1389648, "node_id": "MDQ6VXNlcjEzODk2NDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1389648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srkunze", "html_url": "https://github.com/srkunze", "followers_url": "https://api.github.com/users/srkunze/followers", "following_url": "https://api.github.com/users/srkunze/following{/other_user}", "gists_url": "https://api.github.com/users/srkunze/gists{/gist_id}", "starred_url": "https://api.github.com/users/srkunze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srkunze/subscriptions", "organizations_url": "https://api.github.com/users/srkunze/orgs", "repos_url": "https://api.github.com/users/srkunze/repos", "events_url": "https://api.github.com/users/srkunze/events{/privacy}", "received_events_url": "https://api.github.com/users/srkunze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-07-17T18:32:39Z", "updated_at": "2020-07-19T18:19:59Z", "closed_at": "2020-07-19T06:57:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it possible to somehow be able to make cancelation easier? The following raises an exception:\r\n\r\n``` python\r\nasync with websockets.connect(uri) as websocket:\r\n    while True:\r\n        await asyncio.wait([recv, canceled.wait()], return_when=asyncio.FIRST_COMPLETED)\r\n        if canceled.is_set():\r\n            break\r\n```\r\n\r\n``` python\r\nTask exception was never retrieved\r\nfuture: <Task finished coro=<WebSocketCommonProtocol.recv() done, defined at .../lib/python3.6/site-packages/websockets/protocol.py:443> exception=ConnectionClosedOK('code = 1000 (OK), no reason',)>\r\nTraceback (most recent call last):\r\n  File \".../lib/python3.6/site-packages/websockets/protocol.py\", line 509, in recv\r\n    await self.ensure_open()\r\n  File \".../lib/python3.6/site-packages/websockets/protocol.py\", line 803, in ensure_open\r\n    raise self.connection_closed_exc()\r\nwebsockets.exceptions.ConnectionClosedOK: code = 1000 (OK), no reason\r\n```\r\n\r\nAfter some research, I found the following work-around including some wrapping and manually cancelation:\r\n\r\n``` python\r\nasync with websockets.connect(uri) as websocket:\r\n    while True:\r\n        recv = asyncio.Task(websocket.recv())\r\n        await asyncio.wait([recv, canceled.wait()], return_when=asyncio.FIRST_COMPLETED)\r\n        if canceled.is_set():\r\n            recv.cancel()\r\n            break\r\n```\r\n\r\nThis was my first naive version without cancalation. And I actually would love to return to some similar form of this:\r\n\r\n``` python\r\nasync with websockets.connect(uri) as websocket:\r\n    while True:\r\n        data = await websocket.recv()\r\n```\r\n\r\nMaybe something such as this, where canceled=asyncio.Event():\r\n\r\n``` python\r\nasync with websockets.connect(uri) as websocket:\r\n    while not canceled.is_set():\r\n        data = await websocket.recv([canceled], default=None)\r\n```\r\n\r\nMaybe, there is a better concept of cancelation I am unaware of.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/796", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/796/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/796/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/796/events", "html_url": "https://github.com/aaugustin/websockets/issues/796", "id": 656365432, "node_id": "MDU6SXNzdWU2NTYzNjU0MzI=", "number": 796, "title": "Support for multiple ssl contexts on same port", "user": {"login": "villekr", "id": 26829960, "node_id": "MDQ6VXNlcjI2ODI5OTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/26829960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villekr", "html_url": "https://github.com/villekr", "followers_url": "https://api.github.com/users/villekr/followers", "following_url": "https://api.github.com/users/villekr/following{/other_user}", "gists_url": "https://api.github.com/users/villekr/gists{/gist_id}", "starred_url": "https://api.github.com/users/villekr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villekr/subscriptions", "organizations_url": "https://api.github.com/users/villekr/orgs", "repos_url": "https://api.github.com/users/villekr/repos", "events_url": "https://api.github.com/users/villekr/events{/privacy}", "received_events_url": "https://api.github.com/users/villekr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-14T06:32:31Z", "updated_at": "2020-07-26T11:43:21Z", "closed_at": "2020-07-26T11:43:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "(This is a question)\r\n\r\nI need to support both server side ssl certificates as well as mutual client and server side certificates for connection attempts. Currently I'm serving those on different ports as shown below. Is it possible to configure websockets server so that it can accept both types of connections on same port?\r\n\r\n# WebSocket server with server side certificates\r\nssl_context = ssl.SSLContext(ssl.PROTOCOL_TLS_SERVER)\r\n(ssl_context creation omiitted for clarity)\r\nserver = await websockets.serve(on_connect, listen_addr, 9998, ssl=ssl_context)\r\n\r\n# WebSocket server with mutual (client and server) certificates\r\nssl_context = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH)\r\nssl_context.verify_mode = ssl.CERT_REQUIRED\r\n(ssl_context creation omiitted for clarity)\r\nserver = await websockets.serve(on_connect, listen_addr, 9999, ssl=ssl_context)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/794", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/794/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/794/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/794/events", "html_url": "https://github.com/aaugustin/websockets/issues/794", "id": 651121084, "node_id": "MDU6SXNzdWU2NTExMjEwODQ=", "number": 794, "title": "Receiving binary data fails for non-ASCII values", "user": {"login": "avitase", "id": 654273, "node_id": "MDQ6VXNlcjY1NDI3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/654273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avitase", "html_url": "https://github.com/avitase", "followers_url": "https://api.github.com/users/avitase/followers", "following_url": "https://api.github.com/users/avitase/following{/other_user}", "gists_url": "https://api.github.com/users/avitase/gists{/gist_id}", "starred_url": "https://api.github.com/users/avitase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avitase/subscriptions", "organizations_url": "https://api.github.com/users/avitase/orgs", "repos_url": "https://api.github.com/users/avitase/repos", "events_url": "https://api.github.com/users/avitase/events{/privacy}", "received_events_url": "https://api.github.com/users/avitase/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943708, "node_id": "MDU6TGFiZWwzMzk0MzcwOA==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/invalid", "name": "invalid", "color": "f9d0c4", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-05T18:28:25Z", "updated_at": "2020-07-05T19:30:31Z", "closed_at": "2020-07-05T19:00:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have this test client:\r\n```\r\n#!/usr/bin/env python3\r\n\r\nimport asyncio\r\nimport websockets\r\n\r\nasync def run(port):\r\n    uri = f'ws://localhost:{port}'\r\n    async with websockets.connect(uri) as websocket:\r\n        msg = await websocket.recv()\r\n        print(f\"> {msg:b}\")\r\n\r\nif __name__ == '__main__':\r\n    asyncio.get_event_loop().run_until_complete(run(8888))\r\n```\r\nthat I want to receive raw bytes but `websocket.recv()` fails and throws:\r\n```\r\nTraceback (most recent call last):\r\n  File \"[...] python3.8/site-packages/websockets/protocol.py\", line 827, in transfer_data\r\n    message = await self.read_message()\r\n  File \"[...] python3.8/site-packages/websockets/protocol.py\", line 910, in read_message\r\n    return frame.data.decode(\"utf-8\") if text else frame.data\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 1: invalid start byte\r\n```\r\nIs there a way to change the decoder? I already had a look at the [documentation of `recv`](https://websockets.readthedocs.io/en/stable/api.html#websockets.protocol.WebSocketCommonProtocol.recv) and \r\nfound that it apparently can return bytes, so obviously I am missing a configuration step (?)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/793", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/793/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/793/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/793/events", "html_url": "https://github.com/aaugustin/websockets/issues/793", "id": 647944059, "node_id": "MDU6SXNzdWU2NDc5NDQwNTk=", "number": 793, "title": "How can i use java to connect websockets server?", "user": {"login": "JyCAydon", "id": 41415004, "node_id": "MDQ6VXNlcjQxNDE1MDA0", "avatar_url": "https://avatars2.githubusercontent.com/u/41415004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JyCAydon", "html_url": "https://github.com/JyCAydon", "followers_url": "https://api.github.com/users/JyCAydon/followers", "following_url": "https://api.github.com/users/JyCAydon/following{/other_user}", "gists_url": "https://api.github.com/users/JyCAydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/JyCAydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JyCAydon/subscriptions", "organizations_url": "https://api.github.com/users/JyCAydon/orgs", "repos_url": "https://api.github.com/users/JyCAydon/repos", "events_url": "https://api.github.com/users/JyCAydon/events{/privacy}", "received_events_url": "https://api.github.com/users/JyCAydon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-30T07:40:31Z", "updated_at": "2020-06-30T07:50:14Z", "closed_at": "2020-06-30T07:50:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nimport socket\r\nimport time\r\nimport threading\r\nfrom pyaudio import PyAudio, paInt16\r\n\r\npa = PyAudio()\r\nstream = pa.open(\r\n    rate=16000,\r\n    channels=1,\r\n    format=paInt16,\r\n    input=True,\r\n    frames_per_buffer=160\r\n)\r\n\r\nhost = '192.168.1.79'\r\nport = 2700\r\n\r\naddr = (host, port)\r\n\r\nserver_desc = socket.socket()\r\nserver_desc.connect(addr)\r\naddress = server_desc.getsockname()\r\n\r\n\r\nclass reader(threading.Thread):\r\n    def __init__(self, conn):\r\n        threading.Thread.__init__(self)\r\n        self.conn = conn\r\n        self.isconnect = True\r\n\r\n    def run(self):\r\n        # start = time.clock()\r\n        while self.isconnect:\r\n            msg = self.conn.recv(256)\r\n            if len(msg) == 0:\r\n                break\r\n            print(msg.decode('utf-8'), end='')\r\n            # start = time.clock()\r\n\r\n\r\naudio = stream.read(160)\r\nmtx = reader(server_desc)\r\nmtx.start()\r\ntime_wait = 0\r\n\r\nwhile audio:\r\n    try:\r\n        server_desc.sendall(audio)\r\n        audio = stream.read(160)\r\n    except KeyboardInterrupt:\r\n        mtx.isconnect = False\r\n        server_desc.shutdown(1)\r\n        server_desc.close()\r\n        stream.stop_stream()\r\n        stream.close()\r\n        break\r\n\r\n```\r\n\r\nI try to use `socket` to connect the websockets server.But i got HTTP/1.1 400 Bad Request.\r\n```\r\nHTTP/1.1 400 Bad Request\r\nDate: Tue, 30 Jun 2020 07:44:50 GMT\r\nServer: Python/3.7 websockets/7.0\r\nContent-Length: 23\r\nContent-Type: text/plain\r\nConnection: close\r\n```\r\nHow can i use other language to connect websockets server.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/792", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/792/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/792/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/792/events", "html_url": "https://github.com/aaugustin/websockets/issues/792", "id": 647286695, "node_id": "MDU6SXNzdWU2NDcyODY2OTU=", "number": 792, "title": "Best Practise for handeling different messages via one connection?", "user": {"login": "JonahKr", "id": 38377070, "node_id": "MDQ6VXNlcjM4Mzc3MDcw", "avatar_url": "https://avatars2.githubusercontent.com/u/38377070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JonahKr", "html_url": "https://github.com/JonahKr", "followers_url": "https://api.github.com/users/JonahKr/followers", "following_url": "https://api.github.com/users/JonahKr/following{/other_user}", "gists_url": "https://api.github.com/users/JonahKr/gists{/gist_id}", "starred_url": "https://api.github.com/users/JonahKr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JonahKr/subscriptions", "organizations_url": "https://api.github.com/users/JonahKr/orgs", "repos_url": "https://api.github.com/users/JonahKr/repos", "events_url": "https://api.github.com/users/JonahKr/events{/privacy}", "received_events_url": "https://api.github.com/users/JonahKr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-29T11:28:42Z", "updated_at": "2020-06-30T21:04:14Z", "closed_at": "2020-06-30T07:54:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there \ud83d\udc4b,\r\n\r\nAt first, i like this library very much... it workes flawlessly.\r\nI was wondering wether there is a best practise for handeling different Messages/events recieved by a client at random intervals with each one needing to invoke a different method.\r\nI am working with the Home Assistant Websocket API and different Eventsubscriptions are handled via a ID in the message.\r\nSo there are \"Rest-Like\" Calls (Request -> Response) both sharing the same ID\r\nAnd Events which you can subscribe to.\r\n\r\nMaybe i need to switch to a callback based library? And if so, do you have any recommendations?\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/791", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/791/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/791/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/791/events", "html_url": "https://github.com/aaugustin/websockets/issues/791", "id": 647238610, "node_id": "MDU6SXNzdWU2NDcyMzg2MTA=", "number": 791, "title": "Could you add an example of client can input multi times?", "user": {"login": "archerhu77", "id": 26179312, "node_id": "MDQ6VXNlcjI2MTc5MzEy", "avatar_url": "https://avatars0.githubusercontent.com/u/26179312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/archerhu77", "html_url": "https://github.com/archerhu77", "followers_url": "https://api.github.com/users/archerhu77/followers", "following_url": "https://api.github.com/users/archerhu77/following{/other_user}", "gists_url": "https://api.github.com/users/archerhu77/gists{/gist_id}", "starred_url": "https://api.github.com/users/archerhu77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/archerhu77/subscriptions", "organizations_url": "https://api.github.com/users/archerhu77/orgs", "repos_url": "https://api.github.com/users/archerhu77/repos", "events_url": "https://api.github.com/users/archerhu77/events{/privacy}", "received_events_url": "https://api.github.com/users/archerhu77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-29T08:57:17Z", "updated_at": "2020-06-30T07:57:26Z", "closed_at": "2020-06-30T07:57:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "1.I make the client can input serval time, but couldn't detect disconnect from client. How can I handle client disconnect?\r\n\r\nimport asyncio\r\nimport pathlib\r\nimport ssl\r\nimport websockets\r\n\r\nasync def recv_msg(websocket):\r\n    while True:\r\n        recv_text = await websocket.recv()\r\n        response_text = f\"your submit context: {recv_text}\"\r\n        await websocket.send(response_text)\r\n\r\nasync def main_logic(websocket, path):\r\n    # await check_permit(websocket)\r\n    await recv_msg(websocket)\r\n\r\nssl_context = ssl.SSLContext(ssl.PROTOCOL_TLS_SERVER)\r\nlocalhost_pem = pathlib.Path(__file__).with_name(\"localhost.pem\")\r\nssl_context.load_cert_chain(localhost_pem)\r\nstart_server = websockets.serve(main_logic, 'localhost', 8765, ssl=ssl_context)\r\nasyncio.get_event_loop().run_until_complete(start_server)\r\nasyncio.get_event_loop().run_forever()\r\n\r\n2.How can we make server.py can send message to some client when connected?(Sometimes server need to send system message to client without client send message to server.)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/790", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/790/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/790/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/790/events", "html_url": "https://github.com/aaugustin/websockets/issues/790", "id": 647163369, "node_id": "MDU6SXNzdWU2NDcxNjMzNjk=", "number": 790, "title": "How can I generate my .pem file?", "user": {"login": "archerhu77", "id": 26179312, "node_id": "MDQ6VXNlcjI2MTc5MzEy", "avatar_url": "https://avatars0.githubusercontent.com/u/26179312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/archerhu77", "html_url": "https://github.com/archerhu77", "followers_url": "https://api.github.com/users/archerhu77/followers", "following_url": "https://api.github.com/users/archerhu77/following{/other_user}", "gists_url": "https://api.github.com/users/archerhu77/gists{/gist_id}", "starred_url": "https://api.github.com/users/archerhu77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/archerhu77/subscriptions", "organizations_url": "https://api.github.com/users/archerhu77/orgs", "repos_url": "https://api.github.com/users/archerhu77/repos", "events_url": "https://api.github.com/users/archerhu77/events{/privacy}", "received_events_url": "https://api.github.com/users/archerhu77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-29T06:49:23Z", "updated_at": "2020-06-29T07:23:55Z", "closed_at": "2020-06-29T07:10:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are some article tell us how to generate private key, but generate centificate. Can you tell me the right way to generate my own private key and certificate? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/789", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/789/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/789/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/789/events", "html_url": "https://github.com/aaugustin/websockets/issues/789", "id": 644629197, "node_id": "MDU6SXNzdWU2NDQ2MjkxOTc=", "number": 789, "title": "Can a proxy be used? I am behind some http_proxy_host when in office.", "user": {"login": "lzlgboy", "id": 8021712, "node_id": "MDQ6VXNlcjgwMjE3MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8021712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lzlgboy", "html_url": "https://github.com/lzlgboy", "followers_url": "https://api.github.com/users/lzlgboy/followers", "following_url": "https://api.github.com/users/lzlgboy/following{/other_user}", "gists_url": "https://api.github.com/users/lzlgboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/lzlgboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lzlgboy/subscriptions", "organizations_url": "https://api.github.com/users/lzlgboy/orgs", "repos_url": "https://api.github.com/users/lzlgboy/repos", "events_url": "https://api.github.com/users/lzlgboy/events{/privacy}", "received_events_url": "https://api.github.com/users/lzlgboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-24T13:47:05Z", "updated_at": "2020-06-24T19:10:28Z", "closed_at": "2020-06-24T19:10:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "As the title. I tried to connect the websockets behind a proxy, but no success.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/781", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/781/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/781/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/781/events", "html_url": "https://github.com/aaugustin/websockets/issues/781", "id": 638391045, "node_id": "MDU6SXNzdWU2MzgzOTEwNDU=", "number": 781, "title": "Strange Websocket error at coro=<RPCSession._throttled_request() with a 1005 code", "user": {"login": "PavlosTze", "id": 19330987, "node_id": "MDQ6VXNlcjE5MzMwOTg3", "avatar_url": "https://avatars2.githubusercontent.com/u/19330987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PavlosTze", "html_url": "https://github.com/PavlosTze", "followers_url": "https://api.github.com/users/PavlosTze/followers", "following_url": "https://api.github.com/users/PavlosTze/following{/other_user}", "gists_url": "https://api.github.com/users/PavlosTze/gists{/gist_id}", "starred_url": "https://api.github.com/users/PavlosTze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PavlosTze/subscriptions", "organizations_url": "https://api.github.com/users/PavlosTze/orgs", "repos_url": "https://api.github.com/users/PavlosTze/repos", "events_url": "https://api.github.com/users/PavlosTze/events{/privacy}", "received_events_url": "https://api.github.com/users/PavlosTze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-14T17:04:52Z", "updated_at": "2020-06-14T19:42:32Z", "closed_at": "2020-06-14T19:42:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am currently using ElectrumX 1.15.0 with Protocol version 1.4.2 for Bitcoin and Websockets 8.1. I was trying to debug another issue and I got the following in my way. I need to mention that the following error did **not** cause my server to crash, but when I tried to reproduce it multiple times it eventually crashed but with a different exception.\r\n\r\nCoin: Bitcoin (happens with BitcoinSV as well)\r\nElectrumX: latest (1.15.0 with Protocol version 1.4.2)\r\nServices: RPC, WebSockets 8.1\r\nOS: Ubuntu 18.04 (in Docker)\r\n\r\n**I was testing it with artillery.io in a local REGTEST enviroment, setup:**\r\n1) `npm install -g artillery `\r\n2) `vim test.yml`\r\n3) In test.yml insert the following: \r\n```\r\nconfig:\r\n  target: \"ws://XXXX:XXX\"\r\n  tls:\r\n    rejectUnauthorized: false\r\n  plugins:\r\n    fuzzer: {}\r\n  phases:\r\n    - duration: 60\r\n      arrivalRate: 20\r\nsubprotocols:\r\n    - json\r\nscenarios:\r\n  - engine: \"ws\"\r\n    flow:\r\n      - send: '{\"id\":0,\"method\":\"server.version\",\"params\":[\"1.18.8-dev_289_android\",\"1.4.2\"]}'\r\n      - send: '{\"id\":1,\"method\":\"blockchain.headers.subscribe\"}'\r\n      - send: '{\"id\":2,\"method\":\"blockchain.scripthash.subscribe\",\"params\":[\"963c7985bf4123e2d650c707458d6f731b2a0de6ffebbbcb3198f973aecb52c5\"]}'\r\n      - send: '{\"id\":3,\"method\":\"blockchain.scripthash.subscribe\",\"params\":[\"578b41ac4333609a6216b0595d88df72070e734fcbd6ec58c3f2b6900d1f14cf\"]}'\r\n      - send: '{\"id\":4,\"method\":\"blockchain.scripthash.subscribe\",\"params\":[\"6be90d7a1835ad86fa647e429e7e4f849c8da575abbcbf77178b4e80008217ba\"]}'\r\n      - send: '{\"id\":5,\"method\":\"blockchain.scripthash.subscribe\",\"params\":[\"fc9794b06359653b29a2425f16401dba7e18e2f59ba63275d8146f2e420b8f59\"]}'\r\n```\r\n4) `artillery run test.yml`\r\n\r\n\r\n**The error logs are the following:**\r\n\r\n```\r\nINFO:electrumx:ElectrumX server starting\r\nINFO:electrumx:logging level: DEBUG\r\nINFO:Controller:Python version: 3.9.0b3 (default, Jun 12 2020, 00:52:24)  [GCC 9.3.0]\r\nINFO:Controller:software version: ElectrumX 1.15.0\r\nINFO:Controller:aiorpcX version: 0.18.4\r\nINFO:Controller:supported protocol versions: 1.4-1.4.2\r\nINFO:Controller:event loop policy: None\r\nINFO:Controller:reorg limit is 8,000 blocks\r\nINFO:Daemon:daemon #1 at node:19001/ (current)\r\nINFO:DB:switching current directory to /data\r\nINFO:DB:using leveldb for DB backend\r\nERROR:Daemon:starting up checking blocks.  Retrying occasionally...\r\nINFO:Daemon:running normally\r\nINFO:DB:created new database\r\nINFO:DB:creating metadata directory\r\nINFO:DB:UTXO DB version: 8\r\nINFO:DB:coin: BitcoinSegwit\r\nINFO:DB:network: regtest\r\nINFO:DB:height: -1\r\nINFO:DB:tip: 0000000000000000000000000000000000000000000000000000000000000000\r\nINFO:DB:tx count: 0\r\nINFO:DB:flushing DB cache at 1,200 MB\r\nINFO:DB:sync time so far: 00s\r\nINFO:History:history DB version: 1\r\nINFO:History:flush count: 0\r\nINFO:SessionManager:RPC server listening on 0.0.0.0:8000\r\nINFO:Prefetcher:catching up to daemon height 0 (1 blocks behind)\r\nINFO:Prefetcher:verified genesis block with hash 0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\r\nINFO:BlockProcessor:our height: 0 daemon: 0 UTXOs 0MB hist 0MB\r\nINFO:BlockProcessor:caught up to height 0\r\nINFO:DB:flushed filesystem data in 0.00s\r\nINFO:History:flushed history in 0.0s for 0 addrs\r\nINFO:DB:flushed 1 blocks with 0 txs, 0 UTXO adds, 0 spends in 0.0s, committing...\r\nINFO:DB:flush #1 took 0.0s.  Height 0 txs: 0 (+0)\r\nINFO:DB:tx/sec since genesis: 0, since last flush: 1\r\nINFO:DB:sync time: 00s  ETA: -1d 23h 59m\r\nINFO:BlockProcessor:ElectrumX 1.15.0 synced to height 0\r\nINFO:DB:closing DBs to re-open for serving\r\nINFO:DB:opened UTXO DB (for sync: False)\r\nINFO:DB:UTXO DB version: 8\r\nINFO:DB:coin: BitcoinSegwit\r\nINFO:DB:network: regtest\r\nINFO:DB:height: 0\r\nINFO:DB:tip: 0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\r\nINFO:DB:tx count: 0\r\nINFO:History:history DB version: 1\r\nINFO:History:flush count: 1\r\nINFO:DB:populating header merkle cache...\r\nINFO:MemPool:beginning processing of daemon mempool.  This can take some time...\r\nINFO:DB:header merkle cache populated in 0.0s\r\nINFO:SessionManager:max session count: 1,000\r\nINFO:SessionManager:session timeout: 600 seconds\r\nINFO:SessionManager:session cost hard limit 10,000\r\nINFO:SessionManager:session cost soft limit 1,000\r\nINFO:SessionManager:bandwidth unit cost 5,000\r\nINFO:SessionManager:request sleep 2,500ms\r\nINFO:SessionManager:request timeout 30s\r\nINFO:SessionManager:initial concurrent 10\r\nINFO:SessionManager:max response size 1,000,000 bytes\r\nINFO:ElectrumX:[265] WS 172.18.0.1:51658, 0 total\r\nINFO:ElectrumX:[266] WS 172.18.0.1:51662, 0 total\r\nINFO:ElectrumX:[267] WS 172.18.0.1:51666, 0 total\r\nTask exception was never retrieved\r\nfuture: <Task finished name='Task-3565' coro=<RPCSession._process_messages() done, defined at /usr/local/lib/python3.9/site-packages/aiorpcX-0.18.4-py3.9.egg/aiorpcx/session.py:432> exception=ConnectionClosedError('code = 1005 (no status code [internal]), no reason')>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.9/site-packages/aiorpcX-0.18.4-py3.9.egg/aiorpcx/session.py\", line 435, in _process_messages\r\n    message = await recv_message()\r\n  File \"/usr/local/lib/python3.9/site-packages/aiorpcX-0.18.4-py3.9.egg/aiorpcx/websocket.py\", line 63, in recv_message\r\n    message = await self.websocket.recv()\r\n  File \"/usr/local/lib/python3.9/site-packages/websockets/protocol.py\", line 509, in recv\r\n    await self.ensure_open()\r\n  File \"/usr/local/lib/python3.9/site-packages/websockets/protocol.py\", line 812, in ensure_open\r\n    raise self.connection_closed_exc()\r\nwebsockets.exceptions.ConnectionClosedError: code = 1005 (no status code [internal]), no reason\r\nTask exception was never retrieved\r\nfuture: <Task finished name='Task-3569' coro=<RPCSession._throttled_request() done, defined at /usr/local/lib/python3.9/site-packages/aiorpcX-0.18.4-py3.9.egg/aiorpcx/session.py:458> exception=ConnectionClosedError('code = 1005 (no status code [internal]), no reason')>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.9/site-packages/aiorpcX-0.18.4-py3.9.egg/aiorpcx/session.py\", line 488, in _throttled_request\r\n    await self._send_message(message)\r\n  File \"/usr/local/lib/python3.9/site-packages/aiorpcX-0.18.4-py3.9.egg/aiorpcx/session.py\", line 153, in _send_message\r\n    await self.transport.write(message)\r\n  File \"/usr/local/lib/python3.9/site-packages/aiorpcX-0.18.4-py3.9.egg/aiorpcx/websocket.py\", line 85, in write\r\n    await self.websocket.send(framed_message)\r\n  File \"/usr/local/lib/python3.9/site-packages/websockets/protocol.py\", line 555, in send\r\n    await self.ensure_open()\r\n  File \"/usr/local/lib/python3.9/site-packages/websockets/protocol.py\", line 812, in ensure_open\r\n    raise self.connection_closed_exc()\r\nwebsockets.exceptions.ConnectionClosedError: code = 1005 (no status code [internal]), no reason\r\n```\r\n\r\nI noticed that these errors occur for:\r\n`      - send: '{\"id\":any_id,\"method\":\"blockchain.scripthash.subscribe\",\"params\":[\"put_anything_valid_here\"]}'`\r\nand again, not all the times. Sometimes they take place, others don't, what I have observed is that they don't take place that much at the start of the server.\r\n\r\nAny ideas what is causing this type of behavior?\r\n\r\nPS: I have posted it on the ElectrumX error as well because I'm not sure if the issue is in websockets or ElectrumX.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/775", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/775/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/775/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/775/events", "html_url": "https://github.com/aaugustin/websockets/issues/775", "id": 637600872, "node_id": "MDU6SXNzdWU2Mzc2MDA4NzI=", "number": 775, "title": "[QUESTION] Working with extra_headers for WebSocket authentication.", "user": {"login": "PyPatel", "id": 24595575, "node_id": "MDQ6VXNlcjI0NTk1NTc1", "avatar_url": "https://avatars1.githubusercontent.com/u/24595575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PyPatel", "html_url": "https://github.com/PyPatel", "followers_url": "https://api.github.com/users/PyPatel/followers", "following_url": "https://api.github.com/users/PyPatel/following{/other_user}", "gists_url": "https://api.github.com/users/PyPatel/gists{/gist_id}", "starred_url": "https://api.github.com/users/PyPatel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PyPatel/subscriptions", "organizations_url": "https://api.github.com/users/PyPatel/orgs", "repos_url": "https://api.github.com/users/PyPatel/repos", "events_url": "https://api.github.com/users/PyPatel/events{/privacy}", "received_events_url": "https://api.github.com/users/PyPatel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-12T09:01:03Z", "updated_at": "2020-06-16T19:11:26Z", "closed_at": "2020-06-13T09:24:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Deleted...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/774", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/774/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/774/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/774/events", "html_url": "https://github.com/aaugustin/websockets/issues/774", "id": 635896256, "node_id": "MDU6SXNzdWU2MzU4OTYyNTY=", "number": 774, "title": "Why do docs show 'await server.close()' if close() is not awaitable?", "user": {"login": "chmedly", "id": 8793863, "node_id": "MDQ6VXNlcjg3OTM4NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/8793863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chmedly", "html_url": "https://github.com/chmedly", "followers_url": "https://api.github.com/users/chmedly/followers", "following_url": "https://api.github.com/users/chmedly/following{/other_user}", "gists_url": "https://api.github.com/users/chmedly/gists{/gist_id}", "starred_url": "https://api.github.com/users/chmedly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chmedly/subscriptions", "organizations_url": "https://api.github.com/users/chmedly/orgs", "repos_url": "https://api.github.com/users/chmedly/repos", "events_url": "https://api.github.com/users/chmedly/events{/privacy}", "received_events_url": "https://api.github.com/users/chmedly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-10T03:22:20Z", "updated_at": "2020-06-14T07:13:21Z", "closed_at": "2020-06-14T07:13:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "My question/report here springs from my question on Stack Overflow. [Start and Stop Server?](https://stackoverflow.com/questions/62205620/asyncio-how-can-i-stop-and-restart-server-without-stopping-event-loop?noredirect=1#comment110127484_62205620)\r\nI find that awaiting `server.close()` throw an error.  And awaiting `server.wait_closed()` never returns.  \r\n\r\nI can't seem to figure out how to cause the code to block until the server is officially closed.  \r\nAnd revisiting the websockets documentation doesn't clear this up.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/773", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/773/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/773/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/773/events", "html_url": "https://github.com/aaugustin/websockets/issues/773", "id": 634794250, "node_id": "MDU6SXNzdWU2MzQ3OTQyNTA=", "number": 773, "title": "[QUESTION] Handling ConnectionClosedError in counter.py example", "user": {"login": "leonh", "id": 57818, "node_id": "MDQ6VXNlcjU3ODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/57818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leonh", "html_url": "https://github.com/leonh", "followers_url": "https://api.github.com/users/leonh/followers", "following_url": "https://api.github.com/users/leonh/following{/other_user}", "gists_url": "https://api.github.com/users/leonh/gists{/gist_id}", "starred_url": "https://api.github.com/users/leonh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leonh/subscriptions", "organizations_url": "https://api.github.com/users/leonh/orgs", "repos_url": "https://api.github.com/users/leonh/repos", "events_url": "https://api.github.com/users/leonh/events{/privacy}", "received_events_url": "https://api.github.com/users/leonh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-08T17:14:55Z", "updated_at": "2020-06-13T09:27:12Z", "closed_at": "2020-06-13T09:27:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI have been using the **counter.py** example as a test simulating clients arriving quickly and leaving quickly using artillery testing tool.\r\n\r\nmy config for artillery is \r\n\r\n\r\n```\r\nconfig:\r\n    target: \"ws://0.0.0.0:6789\"\r\n    ensure:\r\n      maxErrorRate: 1\r\n    phases:\r\n      - duration: 10\r\n        arrivalCount: 20\r\n        name: \"Warming up\"\r\n      - duration: 60\r\n        arrivalCount: 500\r\n        name: \"Max load\"\r\nscenarios:\r\n  - engine: ws\r\n    flow:\r\n      - think: 90\r\n```\r\n1 html ui arrival\r\n20 arrivals in 20seconds\r\n500 arrivals in the first minute \r\n\r\nconnections stay open for 90 seconds\r\nconnections disconnect in order of arrival\r\n\r\nI am monitoring the process of clients arriving and leaving via the html UI part of the counter demo. Which remains connect throughout the test.\r\n\r\nI notice that the clients arrive in a fairly predictable way no major problems with html UI incrementing the counter and number of users online as clients arrive.\r\n\r\nHowever when the client leave I see many of this type of error (below). \r\nThe UI becomes very slow in updating increments to the counter during the period clients are disconnecting.\r\n\r\nIs there any way to improve the handling of client disconnections?\r\n\r\n\r\n```\r\nERROR:asyncio:Task exception was never retrieved\r\nfuture: <Task finished name='Task-276734' coro=<WebSocketCommonProtocol.send() done, defined at /Users/leon/envs/kinto/lib/python3.8/site-packages/websockets/protocol.py:521> exception=ConnectionClosedError('code = 1005 (no status code [internal]), no reason') created at /Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/tasks.py:424>\r\nsource_traceback: Object created at (most recent call last):\r\n  File \"websockets_counter.py\", line 77, in <module>\r\n    asyncio.get_event_loop().run_forever()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py\", line 567, in run_forever\r\n    self._run_once()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/base_events.py\", line 1847, in _run_once\r\n    handle._run()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/events.py\", line 81, in _run\r\n    self._context.run(self._callback, *self._args)\r\n  File \"/Users/leon/envs/kinto/lib/python3.8/site-packages/websockets/server.py\", line 191, in handler\r\n    await self.ws_handler(self, path)\r\n  File \"websockets_counter.py\", line 71, in counter\r\n    await unregister(websocket)\r\n  File \"websockets_counter.py\", line 50, in unregister\r\n    await notify_users()\r\n  File \"websockets_counter.py\", line 38, in notify_users\r\n    await asyncio.wait([user.send(message) for user in USERS])\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/tasks.py\", line 424, in wait\r\n    fs = {ensure_future(f, loop=loop) for f in set(fs)}\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/tasks.py\", line 424, in <setcomp>\r\n    fs = {ensure_future(f, loop=loop) for f in set(fs)}\r\nTraceback (most recent call last):\r\n  File \"/Users/leon/envs/kinto/lib/python3.8/site-packages/websockets/protocol.py\", line 555, in send\r\n    await self.ensure_open()\r\n  File \"/Users/leon/envs/kinto/lib/python3.8/site-packages/websockets/protocol.py\", line 812, in ensure_open\r\n    raise self.connection_closed_exc()\r\nwebsockets.exceptions.ConnectionClosedError: code = 1005 (no status code [internal]), no reason\r\n```\r\n\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/770", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/770/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/770/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/770/events", "html_url": "https://github.com/aaugustin/websockets/issues/770", "id": 624317557, "node_id": "MDU6SXNzdWU2MjQzMTc1NTc=", "number": 770, "title": "Robot Framework and websockets integration results a RuntimeError exception", "user": {"login": "danashevskiy", "id": 13414177, "node_id": "MDQ6VXNlcjEzNDE0MTc3", "avatar_url": "https://avatars1.githubusercontent.com/u/13414177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danashevskiy", "html_url": "https://github.com/danashevskiy", "followers_url": "https://api.github.com/users/danashevskiy/followers", "following_url": "https://api.github.com/users/danashevskiy/following{/other_user}", "gists_url": "https://api.github.com/users/danashevskiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/danashevskiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danashevskiy/subscriptions", "organizations_url": "https://api.github.com/users/danashevskiy/orgs", "repos_url": "https://api.github.com/users/danashevskiy/repos", "events_url": "https://api.github.com/users/danashevskiy/events{/privacy}", "received_events_url": "https://api.github.com/users/danashevskiy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-25T13:57:59Z", "updated_at": "2020-05-31T19:32:32Z", "closed_at": "2020-05-31T19:32:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to use `websockets` lib for test creation with the help of Robot Framework application. RF can import standard python class and use it's methods as test steps/actions. The issue is during test execution, I receive `[ ERROR ] Task was destroyed but it is pending!`, `RuntimeError: Event loop is closed`. These errors and exceptions do not affect test execution but they waste my test logs and reports.\r\nThe simplified python class which I import in test:\r\n```python3\r\nclass WebsocketSubscription:\r\n\r\n    #library can be used only in the context of a test case\r\n    ROBOT_LIBRARY_SCOPE = 'TEST'\r\n\r\n    def __init__(self, adr):\r\n        self.adr = adr\r\n        self._ws = None\r\n        self\r\n        self._loop = asyncio.new_event_loop()\r\n        asyncio.set_event_loop(self._loop)\r\n        self._loop.run_until_complete(self._ws_connect())\r\n\r\n    async def _ws_connect(self):\r\n        self._ws = await websockets.connect(self.adr)\r\n\r\n    async def _ws_close(self):\r\n        await self._ws.close()\r\n\r\n    def ws_close(self):\r\n        self._loop.run_until_complete(self._ws_close())\r\n        self._loop.close()\r\n```\r\nRobot framework test case:\r\n```\r\n*** Settings ***\r\nLibrary\t\t../../libs/Tester.py\r\n\r\n*** Test Cases ***\r\nImport Library\t\tTester.WebsocketSubscription\tws://[en53:6ab7:383:2::5]:8000/\r\nWs Close\r\n```\r\n\r\nTest execution log:\r\n```bash\r\n==============================================================================\r\nTest                                                               \r\n==============================================================================\r\nTest       \t\t\t\t\t\t\t      | PASS |\r\n------------------------------------------------------------------------------\r\n[ ERROR ] Task was destroyed but it is pending!\r\ntask: <Task pending coro=<WebSocketCommonProtocol.transfer_data() done, defined at /home/dena/.local/lib/python3.7/site-packages/websockets/protocol.py:818> wait_for=<Future pending cb=[<TaskWakeupMethWrapper object at 0x7fbb63af12d0>()]> cb=[<TaskWakeupMethWrapper object at 0x7fbb63af1390>()]>\r\n[ ERROR ] Task was destroyed but it is pending!\r\ntask: <Task pending coro=<WebSocketCommonProtocol.keepalive_ping() done, defined at /home/dena/.local/lib/python3.7/site-packages/websockets/protocol.py:1103> wait_for=<Future pending cb=[<TaskWakeupMethWrapper object at 0x7fbb63af1350>()]>>\r\n[ ERROR ] Task was destroyed but it is pending!\r\ntask: <Task pending coro=<WebSocketCommonProtocol.close_connection() done, defined at /home/dena/.local/lib/python3.7/site-packages/websockets/protocol.py:1153> wait_for=<Task pending coro=<WebSocketCommonProtocol.transfer_data() done, defined at /home/dena/.local/lib/python3.7/site-packages/websockets/protocol.py:818> wait_for=<Future pending cb=[<TaskWakeupMethWrapper object at 0x7fbb63af12d0>()]> cb=[<TaskWakeupMethWrapper object at 0x7fbb63af1390>()]>>\r\nException ignored in: <coroutine object WebSocketCommonProtocol.close_connection at 0x7fbb63b3c0e0>\r\nTraceback (most recent call last):\r\n  File \"/home/dena/.local/lib/python3.7/site-packages/websockets/protocol.py\", line 1204, in close_connection\r\n    self.transport.close()\r\n  File \"/usr/lib/python3.7/asyncio/selector_events.py\", line 653, in close\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"/usr/lib/python3.7/asyncio/base_events.py\", line 683, in call_soon\r\n    self._check_closed()\r\n  File \"/usr/lib/python3.7/asyncio/base_events.py\", line 475, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\nTest                                                                 | PASS |\r\n1 critical test, 1 passed, 0 failed\r\n1 test total, 1 passed, 0 failed\r\n```\r\n\r\nSome observations:\r\n* Removing `Ws Close` (actual `WebsocketSubscription` class method) from test case and leaving only `Import Library...` (which creates `WebsocketSubscription` class instance) will disable these errors. \r\n* At first I got the same errors on class constructor execution (`Import Library...`) but `asyncio.set_event_loop(self._loop)` desabled them\r\n\r\nCould somebody please help me to identify reason of the issue?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/764", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/764/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/764/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/764/events", "html_url": "https://github.com/aaugustin/websockets/issues/764", "id": 619992147, "node_id": "MDU6SXNzdWU2MTk5OTIxNDc=", "number": 764, "title": "Can create_proto be a callable in websockets.client.connect", "user": {"login": "finkandreas", "id": 15714790, "node_id": "MDQ6VXNlcjE1NzE0Nzkw", "avatar_url": "https://avatars3.githubusercontent.com/u/15714790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finkandreas", "html_url": "https://github.com/finkandreas", "followers_url": "https://api.github.com/users/finkandreas/followers", "following_url": "https://api.github.com/users/finkandreas/following{/other_user}", "gists_url": "https://api.github.com/users/finkandreas/gists{/gist_id}", "starred_url": "https://api.github.com/users/finkandreas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finkandreas/subscriptions", "organizations_url": "https://api.github.com/users/finkandreas/orgs", "repos_url": "https://api.github.com/users/finkandreas/repos", "events_url": "https://api.github.com/users/finkandreas/events{/privacy}", "received_events_url": "https://api.github.com/users/finkandreas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T07:58:14Z", "updated_at": "2020-07-26T20:49:12Z", "closed_at": "2020-07-26T20:49:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently playing with websockets and I'm a little bit confused about the `create_proto` parameter to `websockets.client.client`. On the website it is mentioned that it can be a Callable which returns a WebSocketClientProtocol, so I thought that his function definition should be fine:\r\n```\r\ndef _make_proto(self, *, origin: Optional[websockets.Origin],\r\n              extensions: Optional[Sequence[websockets.extensions.base.ClientExtensionFactory]],\r\n              subprotocols: Optional[Sequence[websockets.Subprotocol]],\r\n              extra_headers: websockets.http.HeadersLike,\r\n              **kwargs: Any) -> websockets.WebSocketClientProtocol:\r\n    # do_something\r\n    return websockets.client.WebSocketClientProtocol(origin=origin, extensions=extensions, subprotocols=subprotocols, extra_headers=extra_headers, **kwargs)\r\n```\r\nand passing it like this to a connect:\r\n```\r\nmy_websocket = await websockets.connect(my_uri, create_protocol=_make_proto)\r\n```\r\nThis works fine, but it throws an error with mypy:\r\n```\r\nwebsocket_test.py:46: error: Argument \"create_protocol\" to \"Connect\" has incompatible type \"Callable[[NamedArg(Optional[Origin], 'origin'), NamedArg(Optional[Sequence[ClientExtensionFactory]], 'extensions'), NamedArg(Optional[Sequence[Subprotocol]], 'subprotocols'), NamedArg(Union[Headers, Mapping[str, str], Iterable[Tuple[str, str]]], 'extra_headers'), KwArg(Any)], WebSocketClientProtocol]\"; expected \"Optional[Type[WebSocketClientProtocol]]\"\r\n```\r\nIs it an incorrect usage of the `create_protocol` parameter or is the type annotation incomplete?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/762", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/762/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/762/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/762/events", "html_url": "https://github.com/aaugustin/websockets/issues/762", "id": 619977922, "node_id": "MDU6SXNzdWU2MTk5Nzc5MjI=", "number": 762, "title": "DeprecationWarning when running the tests on py3.9", "user": {"login": "DavidBord", "id": 3276118, "node_id": "MDQ6VXNlcjMyNzYxMTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3276118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidBord", "html_url": "https://github.com/DavidBord", "followers_url": "https://api.github.com/users/DavidBord/followers", "following_url": "https://api.github.com/users/DavidBord/following{/other_user}", "gists_url": "https://api.github.com/users/DavidBord/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidBord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidBord/subscriptions", "organizations_url": "https://api.github.com/users/DavidBord/orgs", "repos_url": "https://api.github.com/users/DavidBord/repos", "events_url": "https://api.github.com/users/DavidBord/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidBord/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-18T07:34:33Z", "updated_at": "2020-05-23T11:01:15Z", "closed_at": "2020-05-23T11:01:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`python -W default -m unittest\r\n................................./Users/db/venvs/websockets39/lib/python3.9/site-packages/websockets-8.1-py3.9-macosx-10.15-x86_64.egg/websockets/server.py:716: DeprecationWarning: The explicit passing of coroutine objects to asyncio.wait() is deprecated since Python 3.8, and scheduled for removal in Python 3.11.\r\n  await asyncio.wait(\r\n../Users/db/venvs/websockets39/lib/python3.9/site-packages/websockets-8.1-py3.9-macosx-10.15-x86_64.egg/websockets/server.py:716: DeprecationWarning: The explicit passing of coroutine objects to asyncio.wait() is deprecated since Python 3.8, and scheduled for removal in Python 3.11.\r\n  await asyncio.wait(\r\n...../Users/db/venvs/websockets39/lib/python3.9/site-packages/websockets-8.1-py3.9-macosx-10.15-x86_64.egg/websockets/server.py:716: DeprecationWarning: The explicit passing of coroutine objects to asyncio.wait() is deprecated since Python 3.8, and scheduled for removal in Python 3.11.\r\n  await asyncio.wait(\r\n........................................../Users/db/venvs/websockets39/lib/python3.9/site-packages/websockets-8.1-py3.9-macosx-10.15-x86_64.egg/websockets/server.py:716: DeprecationWarning: The explicit passing of coroutine objects to asyncio.wait() is deprecated since Python 3.8, and scheduled for removal in Python 3.11.\r\n  await asyncio.wait(\r\n./Users/db/venvs/websockets39/lib/python3.9/site-packages/websockets-8.1-py3.9-macosx-10.15-x86_64.egg/websockets/server.py:716: DeprecationWarning: The explicit passing of coroutine objects to asyncio.wait() is deprecated since Python 3.8, and scheduled for removal in Python 3.11.\r\n  await asyncio.wait(\r\n.....`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/760", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/760/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/760/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/760/events", "html_url": "https://github.com/aaugustin/websockets/issues/760", "id": 618197479, "node_id": "MDU6SXNzdWU2MTgxOTc0Nzk=", "number": 760, "title": "TypeError: 'Lock' object is not iterable on py3.9", "user": {"login": "DavidBord", "id": 3276118, "node_id": "MDQ6VXNlcjMyNzYxMTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3276118?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidBord", "html_url": "https://github.com/DavidBord", "followers_url": "https://api.github.com/users/DavidBord/followers", "following_url": "https://api.github.com/users/DavidBord/following{/other_user}", "gists_url": "https://api.github.com/users/DavidBord/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidBord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidBord/subscriptions", "organizations_url": "https://api.github.com/users/DavidBord/orgs", "repos_url": "https://api.github.com/users/DavidBord/repos", "events_url": "https://api.github.com/users/DavidBord/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidBord/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-14T12:40:52Z", "updated_at": "2020-05-16T18:24:02Z", "closed_at": "2020-05-16T18:24:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As can be seen in the errors from Sanic build: https://travis-ci.org/github/huge-success/sanic/jobs/686952886\r\nThat's probably because of this py3.9 change: https://github.com/python/cpython/commit/90d9ba6ef10af32e8dfe0649789c3a8ccf419e95", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/759", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/759/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/759/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/759/events", "html_url": "https://github.com/aaugustin/websockets/issues/759", "id": 617631323, "node_id": "MDU6SXNzdWU2MTc2MzEzMjM=", "number": 759, "title": "Is there a way to disable all logging or make it optional?", "user": {"login": "DobroAlex", "id": 23741647, "node_id": "MDQ6VXNlcjIzNzQxNjQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/23741647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DobroAlex", "html_url": "https://github.com/DobroAlex", "followers_url": "https://api.github.com/users/DobroAlex/followers", "following_url": "https://api.github.com/users/DobroAlex/following{/other_user}", "gists_url": "https://api.github.com/users/DobroAlex/gists{/gist_id}", "starred_url": "https://api.github.com/users/DobroAlex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DobroAlex/subscriptions", "organizations_url": "https://api.github.com/users/DobroAlex/orgs", "repos_url": "https://api.github.com/users/DobroAlex/repos", "events_url": "https://api.github.com/users/DobroAlex/events{/privacy}", "received_events_url": "https://api.github.com/users/DobroAlex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-13T17:36:18Z", "updated_at": "2020-05-14T09:13:57Z", "closed_at": "2020-05-14T09:13:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Greetings. I have pretty extensive logging in my app and I don't want WebSockets to show any of its logging. Is there a proper way to disable it? \r\n\r\nI came up with the following solution:\r\nThere is logging setup method in the app context creation there I add the following code:\r\n`\r\nfor logger_name in {'websockets.protocol', 'websockets.server', 'websockets.client'}:\r\n    logging.getLogger(logger_name).disabled = True\r\n`\r\n\r\nBut I don't think of the usage of string constants as something good and this feels totally barbarous way to disable the logging. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/758", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/758/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/758/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/758/events", "html_url": "https://github.com/aaugustin/websockets/issues/758", "id": 616853108, "node_id": "MDU6SXNzdWU2MTY4NTMxMDg=", "number": 758, "title": "How to call recv() from two coroutines concurrently", "user": {"login": "ocurero", "id": 2606647, "node_id": "MDQ6VXNlcjI2MDY2NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2606647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ocurero", "html_url": "https://github.com/ocurero", "followers_url": "https://api.github.com/users/ocurero/followers", "following_url": "https://api.github.com/users/ocurero/following{/other_user}", "gists_url": "https://api.github.com/users/ocurero/gists{/gist_id}", "starred_url": "https://api.github.com/users/ocurero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ocurero/subscriptions", "organizations_url": "https://api.github.com/users/ocurero/orgs", "repos_url": "https://api.github.com/users/ocurero/repos", "events_url": "https://api.github.com/users/ocurero/events{/privacy}", "received_events_url": "https://api.github.com/users/ocurero/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T18:04:35Z", "updated_at": "2020-05-14T13:41:05Z", "closed_at": "2020-05-14T13:40:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nReading through the changelog I read that since version 7.0 recv() fails if two coroutines call recv() concurrently. I know the answer may be obvious, just asking for clarification.\r\nDo we need to protect recv() with a asyncio.lock to prevent two coroutines to call it concurrently? \r\n\r\nLike this: \r\n\r\n```\r\nrecv_lock = asyncio.Lock()\r\n# ws is defined somewhere\r\n\r\nasync def send_receive():\r\n    await ws.send('hi')\r\n    async with recv_lock:\r\n        response = await ws.recv()\r\n```\r\n\r\nThanks!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/756", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/756/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/756/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/756/events", "html_url": "https://github.com/aaugustin/websockets/issues/756", "id": 613250398, "node_id": "MDU6SXNzdWU2MTMyNTAzOTg=", "number": 756, "title": "max_size of messages in bytes or chars?", "user": {"login": "pembeci", "id": 2614837, "node_id": "MDQ6VXNlcjI2MTQ4Mzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2614837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pembeci", "html_url": "https://github.com/pembeci", "followers_url": "https://api.github.com/users/pembeci/followers", "following_url": "https://api.github.com/users/pembeci/following{/other_user}", "gists_url": "https://api.github.com/users/pembeci/gists{/gist_id}", "starred_url": "https://api.github.com/users/pembeci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pembeci/subscriptions", "organizations_url": "https://api.github.com/users/pembeci/orgs", "repos_url": "https://api.github.com/users/pembeci/repos", "events_url": "https://api.github.com/users/pembeci/events{/privacy}", "received_events_url": "https://api.github.com/users/pembeci/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 279143600, "node_id": "MDU6TGFiZWwyNzkxNDM2MDA=", "url": "https://api.github.com/repos/aaugustin/websockets/labels/documentation", "name": "documentation", "color": "009800", "default": true, "description": null}, {"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-05-06T11:33:17Z", "updated_at": "2020-05-14T13:37:24Z", "closed_at": "2020-05-10T21:17:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Documentation first states:\r\n\r\n> The max_size parameter enforces the maximum size for incoming messages in bytes.\r\n\r\nThen for `max_queue`:\r\n\r\n> Since Python can use up to 4 bytes of memory to represent a single character, each connection may use up to 4 * max_size * max_queue bytes of memory to store incoming messages.\r\n\r\nbut if `max_size `was already in bytes why are we multiplying with 4? We should do this if max_size was specifiying number of chars in unicode string. I am confused.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/755", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/755/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/755/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/755/events", "html_url": "https://github.com/aaugustin/websockets/issues/755", "id": 612818775, "node_id": "MDU6SXNzdWU2MTI4MTg3NzU=", "number": 755, "title": "connectting to a specific path", "user": {"login": "LucaPaterlini", "id": 2988412, "node_id": "MDQ6VXNlcjI5ODg0MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2988412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucaPaterlini", "html_url": "https://github.com/LucaPaterlini", "followers_url": "https://api.github.com/users/LucaPaterlini/followers", "following_url": "https://api.github.com/users/LucaPaterlini/following{/other_user}", "gists_url": "https://api.github.com/users/LucaPaterlini/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucaPaterlini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucaPaterlini/subscriptions", "organizations_url": "https://api.github.com/users/LucaPaterlini/orgs", "repos_url": "https://api.github.com/users/LucaPaterlini/repos", "events_url": "https://api.github.com/users/LucaPaterlini/events{/privacy}", "received_events_url": "https://api.github.com/users/LucaPaterlini/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-05T18:50:13Z", "updated_at": "2020-05-17T19:38:35Z", "closed_at": "2020-05-17T19:38:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am reading the tutorial on how to use it.\r\nAfter reading it I have been left wondering \r\n\r\nhttps://websockets.readthedocs.io/en/stable/intro.html\r\n\r\nhow can I create a WebSocket on a specific path say /sub/hi\r\n\r\nThanks in advance for the response", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/753", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/753/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/753/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/753/events", "html_url": "https://github.com/aaugustin/websockets/issues/753", "id": 610452668, "node_id": "MDU6SXNzdWU2MTA0NTI2Njg=", "number": 753, "title": " I can use it only as a client to connect to an API?", "user": {"login": "mvalino0201", "id": 59507461, "node_id": "MDQ6VXNlcjU5NTA3NDYx", "avatar_url": "https://avatars2.githubusercontent.com/u/59507461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvalino0201", "html_url": "https://github.com/mvalino0201", "followers_url": "https://api.github.com/users/mvalino0201/followers", "following_url": "https://api.github.com/users/mvalino0201/following{/other_user}", "gists_url": "https://api.github.com/users/mvalino0201/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvalino0201/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvalino0201/subscriptions", "organizations_url": "https://api.github.com/users/mvalino0201/orgs", "repos_url": "https://api.github.com/users/mvalino0201/repos", "events_url": "https://api.github.com/users/mvalino0201/events{/privacy}", "received_events_url": "https://api.github.com/users/mvalino0201/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-30T23:21:31Z", "updated_at": "2020-05-03T08:30:57Z", "closed_at": "2020-05-03T08:30:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nI want to change the way I connect to a websocket, looking for efficiency. I'm not a developer, and I'm having a hard time understanding if websockets is the way to go.\r\n\r\nI currently connect using websocket\r\n\r\n        self.socket = websocket.WebSocketApp(self.session.wsUrl,\r\n                                             on_message=self.on_message,\r\n                                             on_error=self.on_error,\r\n                                             on_close=self.on_close,\r\n                                             on_open=self.on_open,\r\n                                             header=self.session.authtoken)\r\n        self.startSocket()\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/752", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/752/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/752/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/752/events", "html_url": "https://github.com/aaugustin/websockets/issues/752", "id": 607517479, "node_id": "MDU6SXNzdWU2MDc1MTc0Nzk=", "number": 752, "title": "Websockets and multiprocessing", "user": {"login": "slavestys", "id": 1379718, "node_id": "MDQ6VXNlcjEzNzk3MTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1379718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slavestys", "html_url": "https://github.com/slavestys", "followers_url": "https://api.github.com/users/slavestys/followers", "following_url": "https://api.github.com/users/slavestys/following{/other_user}", "gists_url": "https://api.github.com/users/slavestys/gists{/gist_id}", "starred_url": "https://api.github.com/users/slavestys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slavestys/subscriptions", "organizations_url": "https://api.github.com/users/slavestys/orgs", "repos_url": "https://api.github.com/users/slavestys/repos", "events_url": "https://api.github.com/users/slavestys/events{/privacy}", "received_events_url": "https://api.github.com/users/slavestys/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-27T12:42:25Z", "updated_at": "2020-07-27T02:31:46Z", "closed_at": "2020-07-26T19:58:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can i use websockets with multiprocessing? \r\nFor example, the main process accepts new connections and passes them to other processes. Further work takes place in other processes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/749", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/749/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/749/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/749/events", "html_url": "https://github.com/aaugustin/websockets/issues/749", "id": 603197766, "node_id": "MDU6SXNzdWU2MDMxOTc3NjY=", "number": 749, "title": "How can I use same query for every client", "user": {"login": "mikesmichael", "id": 9534827, "node_id": "MDQ6VXNlcjk1MzQ4Mjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9534827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikesmichael", "html_url": "https://github.com/mikesmichael", "followers_url": "https://api.github.com/users/mikesmichael/followers", "following_url": "https://api.github.com/users/mikesmichael/following{/other_user}", "gists_url": "https://api.github.com/users/mikesmichael/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikesmichael/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikesmichael/subscriptions", "organizations_url": "https://api.github.com/users/mikesmichael/orgs", "repos_url": "https://api.github.com/users/mikesmichael/repos", "events_url": "https://api.github.com/users/mikesmichael/events{/privacy}", "received_events_url": "https://api.github.com/users/mikesmichael/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-20T12:24:06Z", "updated_at": "2020-04-20T18:53:28Z", "closed_at": "2020-04-20T12:59:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to have only one database connection in my websocket and return this information to each client connected. Is it possible to do that?\r\n\r\nThere is my current code:\r\n\r\n```\r\nimport asyncio\r\nimport aiopg\r\nimport websockets\r\nimport logging\r\nimport sys\r\nimport configparser\r\n\r\nconfig = configparser.ConfigParser()\r\nconfig.read('config/config.ini')\r\n\r\nlogging.basicConfig(stream=sys.stdout, level=logging.DEBUG)\r\nlogger = logging.getLogger('websockets.server')\r\nlogger2 = logging.getLogger('asyncio')\r\nlogger2.setLevel(logging.DEBUG)\r\nlogger.addHandler(logging.StreamHandler())\r\nlogger2.addHandler(logging.StreamHandler())\r\n\r\nasync def listen(websocket, path):\r\n\r\n    async with aiopg.create_pool(config.get('default', 'connexion_bd'), maxsize=1, pool_recycle=0) as pool:\r\n        async with pool.acquire() as conn1:\r\n            async with conn1.cursor() as cur:\r\n\r\n                await cur.execute(config.get('default', 'pg_listen'))\r\n                while True:\r\n                    msg = await conn1.notifies.get()\r\n                    if msg.payload == 'finish':\r\n                        return\r\n                    else:\r\n                        await websocket.send(msg.payload)\r\n\r\n\r\nstart_server = websockets.serve(listen, 'localhost', config.getint('default', 'port_websocket_server'))\r\n\r\nasyncio.get_event_loop().run_until_complete(start_server)\r\nasyncio.get_event_loop().run_forever()\r\n```\r\n\r\nCurrently, every time a client listen on my websocket, I got a new connection in my database. Every client will get same content so I don't need them to connect to database, only my websocket.\r\n\r\nI try to split my code (connect on another websocket who is connecting on this one) but I got the same problem. \r\n\r\nAny hints will be appreciated.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/748", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/748/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/748/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/748/events", "html_url": "https://github.com/aaugustin/websockets/issues/748", "id": 601521687, "node_id": "MDU6SXNzdWU2MDE1MjE2ODc=", "number": 748, "title": "Are there any recommended approaches for queuing websockets? websockets.exceptions.ConnectionClosedOK: code = 1000 (OK), no reason", "user": {"login": "animesh-sharama", "id": 22367876, "node_id": "MDQ6VXNlcjIyMzY3ODc2", "avatar_url": "https://avatars1.githubusercontent.com/u/22367876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/animesh-sharama", "html_url": "https://github.com/animesh-sharama", "followers_url": "https://api.github.com/users/animesh-sharama/followers", "following_url": "https://api.github.com/users/animesh-sharama/following{/other_user}", "gists_url": "https://api.github.com/users/animesh-sharama/gists{/gist_id}", "starred_url": "https://api.github.com/users/animesh-sharama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/animesh-sharama/subscriptions", "organizations_url": "https://api.github.com/users/animesh-sharama/orgs", "repos_url": "https://api.github.com/users/animesh-sharama/repos", "events_url": "https://api.github.com/users/animesh-sharama/events{/privacy}", "received_events_url": "https://api.github.com/users/animesh-sharama/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-16T21:55:18Z", "updated_at": "2020-04-20T07:13:22Z", "closed_at": "2020-04-20T07:13:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a question regarding storing multiple websockets in a queue and then processing those websockets.\r\n\r\nBelow is the code\r\n```\r\nimport asyncio\r\nimport logging\r\nimport os\r\n\r\nimport websockets\r\n\r\nlogging.basicConfig(level=logging.INFO)\r\n\r\n\r\nclass Server:\r\n    my_queue = asyncio.Queue()\r\n\r\n    async def register(self, websocket):\r\n        await self.my_queue.put(websocket)\r\n        logging.info(f'{websocket.remote_address} connects.')\r\n        if self.my_queue.qsize() >= 3:\r\n            while not self.my_queue.empty():\r\n                websocket = await self.my_queue.get()\r\n                await websocket.send('Welcome 3 clients')\r\n\r\n    async def unregister(self, websocket):\r\n        if websocket.closed:\r\n            logging.info(f'{websocket.remote_address} disconnects.')\r\n\r\n    async def process(self):\r\n        pass\r\n\r\n    async def ws_handler(self, websocket, path):\r\n        await self.register(websocket)\r\n        try:\r\n            await self.process()\r\n        finally:\r\n            await self.unregister(websocket)\r\n\r\n\r\nasyncio.get_event_loop().run_until_complete(\r\n    websockets.serve(Server().ws_handler, 'localhost', int(os.environ['PORT'])))\r\nprint('server started at port:', os.environ['PORT'])\r\nasyncio.get_event_loop().run_forever()\r\n\r\n```\r\nWhen I run the server I keep on getting the error\r\n```\r\nERROR:websockets.server:Error in connection handler\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/dist-packages/websockets/server.py\", line 191, in handler\r\n    await self.ws_handler(self, path)\r\n  File \"tmp.py\", line 30, in ws_handler\r\n    try:\r\n  File \"tmp.py\", line 20, in register\r\n  File \"/usr/local/lib/python3.7/dist-packages/websockets/protocol.py\", line 555, in send\r\n    await self.ensure_open()\r\n  File \"/usr/local/lib/python3.7/dist-packages/websockets/protocol.py\", line 803, in ensure_open\r\n    raise self.connection_closed_exc()\r\nwebsockets.exceptions.ConnectionClosedOK: code = 1000 (OK), no reason\r\n```\r\nLooking into the exception code [doc](https://github.com/aaugustin/websockets/issues/new)\r\ndidn't helped much, it works well with one client the problem starts when I starting queuing them up?\r\n\r\nIs there any recommended approaches for queuing websockets?\r\n\r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/747", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/747/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/747/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/747/events", "html_url": "https://github.com/aaugustin/websockets/issues/747", "id": 599924271, "node_id": "MDU6SXNzdWU1OTk5MjQyNzE=", "number": 747, "title": "Cannot rapidly emit events from the server", "user": {"login": "RaviGhaghada", "id": 41049832, "node_id": "MDQ6VXNlcjQxMDQ5ODMy", "avatar_url": "https://avatars1.githubusercontent.com/u/41049832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RaviGhaghada", "html_url": "https://github.com/RaviGhaghada", "followers_url": "https://api.github.com/users/RaviGhaghada/followers", "following_url": "https://api.github.com/users/RaviGhaghada/following{/other_user}", "gists_url": "https://api.github.com/users/RaviGhaghada/gists{/gist_id}", "starred_url": "https://api.github.com/users/RaviGhaghada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RaviGhaghada/subscriptions", "organizations_url": "https://api.github.com/users/RaviGhaghada/orgs", "repos_url": "https://api.github.com/users/RaviGhaghada/repos", "events_url": "https://api.github.com/users/RaviGhaghada/events{/privacy}", "received_events_url": "https://api.github.com/users/RaviGhaghada/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943708, "node_id": "MDU6TGFiZWwzMzk0MzcwOA==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/invalid", "name": "invalid", "color": "f9d0c4", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-14T23:44:21Z", "updated_at": "2020-04-20T07:14:02Z", "closed_at": "2020-04-15T01:14:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working on an application that sends video (in the form of a screenshot) from a server to a client (let's assume there's just one client for now). The client receives that screenshot and displays it.\r\n\r\nPreviously I had a working version where the client would send an event to the server to request for each screenshot individually but it was slow (obviously). So I threw the video/screenshot emitting part to another threading so that it would keep sending video forever and ever and ever...\r\n\r\nUnfortunately, the sio.emit thing doesn't really emit anything. I've spent all my free time in the past 2 weeks to fix this so I was wondering if someone could give me an idea of how to rapidly emit events from the server?\r\n\r\n```\r\n#!/usr/bin/python3\r\n\r\nimport eventlet\r\nimport socketio\r\nfrom serverwindow import Serverwindow\r\nfrom pynput.keyboard import Key, Controller\r\nimport threading\r\n\r\ncontroller = Controller()\r\n\r\nsio = socketio.Server()\r\nsw = Serverwindow() # basically a pygame window + ability to take screenshots\r\napp = socketio.WSGIApp(\r\n    sio\r\n)\r\n\r\n\r\nclass Sender (threading.Thread):\r\n    def __init__(self):\r\n        threading.Thread.__init__(self)\r\n    def run(self):\r\n        global sio\r\n        while True:# replace sw.get_screenshot() with some random string\r\n            sio.emit('video', sw.get_screenshot()) \r\n\r\n@sio.event\r\ndef connect(sid, environ):\r\n    print(\"connect \", sid)\r\n\r\n@sio.on(\"keypress\")\r\ndef keypress(sid, data):\r\n    controller.press(data)\r\n\r\n@sio.on(\"keyrelease\")\r\ndef keyrelease(sid, data):\r\n    controller.release(data)\r\n\r\n\r\n@sio.event\r\ndef disconnect(sid):\r\n    print(\"disconnect \", sid)\r\n\r\nif __name__ == \"__main__\":\r\n    s = Sender()\r\n    s.start()\r\n    eventlet.wsgi.server(eventlet.listen((\"\", 5000)), app)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/746", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/746/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/746/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/746/events", "html_url": "https://github.com/aaugustin/websockets/issues/746", "id": 598748237, "node_id": "MDU6SXNzdWU1OTg3NDgyMzc=", "number": 746, "title": "how can i  keep long live connection", "user": {"login": "onemoretwice", "id": 35497410, "node_id": "MDQ6VXNlcjM1NDk3NDEw", "avatar_url": "https://avatars0.githubusercontent.com/u/35497410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/onemoretwice", "html_url": "https://github.com/onemoretwice", "followers_url": "https://api.github.com/users/onemoretwice/followers", "following_url": "https://api.github.com/users/onemoretwice/following{/other_user}", "gists_url": "https://api.github.com/users/onemoretwice/gists{/gist_id}", "starred_url": "https://api.github.com/users/onemoretwice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/onemoretwice/subscriptions", "organizations_url": "https://api.github.com/users/onemoretwice/orgs", "repos_url": "https://api.github.com/users/onemoretwice/repos", "events_url": "https://api.github.com/users/onemoretwice/events{/privacy}", "received_events_url": "https://api.github.com/users/onemoretwice/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-13T08:22:38Z", "updated_at": "2020-04-14T07:38:52Z", "closed_at": "2020-04-13T08:28:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/745", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/745/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/745/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/745/events", "html_url": "https://github.com/aaugustin/websockets/issues/745", "id": 598346335, "node_id": "MDU6SXNzdWU1OTgzNDYzMzU=", "number": 745, "title": "Open a websocket in Python and keep it open", "user": {"login": "castillo92", "id": 37965565, "node_id": "MDQ6VXNlcjM3OTY1NTY1", "avatar_url": "https://avatars1.githubusercontent.com/u/37965565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/castillo92", "html_url": "https://github.com/castillo92", "followers_url": "https://api.github.com/users/castillo92/followers", "following_url": "https://api.github.com/users/castillo92/following{/other_user}", "gists_url": "https://api.github.com/users/castillo92/gists{/gist_id}", "starred_url": "https://api.github.com/users/castillo92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/castillo92/subscriptions", "organizations_url": "https://api.github.com/users/castillo92/orgs", "repos_url": "https://api.github.com/users/castillo92/repos", "events_url": "https://api.github.com/users/castillo92/events{/privacy}", "received_events_url": "https://api.github.com/users/castillo92/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-11T20:36:08Z", "updated_at": "2020-04-12T23:15:04Z", "closed_at": "2020-04-11T21:00:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to make a script that connect to a websocket, write something in it and then keeps it, without closing the connection, because at the next second, I will write again.\r\n\r\nTo make it, I followed the docs of [library \"websockets\" for Python](https://websockets.readthedocs.io/en/stable/intro.html#basic-example), but I can not undestand how to make it possible because I see in the websocket server monitor how this script is connecting and disconnecting every second, and it not should be, but I do not know how to make it.\r\n\r\nThis behaviour is for `async with websockets.connect(f\"ws://{host}:{port}\") as ws:` but I am not sure.\r\n\r\n\r\nI used python3.7 and library websockets8.1\r\n\r\n```\r\n#!/usr/bin/python3\r\n# -*- coding: UTF-8 -*-\r\n\r\n# Libraries used\r\nimport time\r\nimport asyncio\r\nimport websockets\r\n\r\n# Function to write in websocket\r\nasync def produce(message: str, host: str, port: int) -> None:\r\n\tasync with websockets.connect(f\"ws://{host}:{port}\") as ws:\r\n\t\tawait ws.send(message)\r\n\t\tprint(\"> {}\".format(message))\r\n\t\tresponse = await ws.recv()\r\n\t\tprint(\"< {}\".format(response))\r\n\r\n\r\n\r\n# Websocket parameters\r\nwsHost='localhost'\r\nwsPort=54682\r\n\r\n\r\ndef main():\r\n\titeration = 0\r\n\t\r\n\twhile True:\r\n\t\ttry:\r\n\t\t\titeration = iteration + 1\r\n\t\t\tasyncio.run(produce(str(iteration), wsHost, wsPort))\r\n\t\t\ttime.sleep(1)\r\n\t\t\t\r\n\t\texcept Exception as e:\r\n\t\t\tprint(e)\r\n\r\nif __name__ == \"__main__\":\r\n\tmain()\r\n```\r\n\r\n\r\nPD: I reduce my real code to this super simple code, because I can not make calls to `await ws.recv()` outside of `async def produce(.....)`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/743", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/743/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/743/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/743/events", "html_url": "https://github.com/aaugustin/websockets/issues/743", "id": 596914682, "node_id": "MDU6SXNzdWU1OTY5MTQ2ODI=", "number": 743, "title": "Consider accepting 4107 bytes for request maximum accepted line size", "user": {"login": "thomasleveil", "id": 42300, "node_id": "MDQ6VXNlcjQyMzAw", "avatar_url": "https://avatars2.githubusercontent.com/u/42300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasleveil", "html_url": "https://github.com/thomasleveil", "followers_url": "https://api.github.com/users/thomasleveil/followers", "following_url": "https://api.github.com/users/thomasleveil/following{/other_user}", "gists_url": "https://api.github.com/users/thomasleveil/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasleveil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasleveil/subscriptions", "organizations_url": "https://api.github.com/users/thomasleveil/orgs", "repos_url": "https://api.github.com/users/thomasleveil/repos", "events_url": "https://api.github.com/users/thomasleveil/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasleveil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-08T23:06:11Z", "updated_at": "2020-07-26T19:11:31Z", "closed_at": "2020-07-26T19:11:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The code responsible for parsing a line from the request [raises `SecurityError(\"line too long\")`](https://github.com/aaugustin/websockets/blob/139085fe2624192a5a6c72b1e5db211dcec6ced1/src/websockets/http.py#L216) when the size is greater than [`MAX_LINE = 4096`](https://github.com/aaugustin/websockets/blob/139085fe2624192a5a6c72b1e5db211dcec6ced1/src/websockets/http.py#L37)\r\n\r\nPlease consider increasing `MAX_LINE` to `4107` bytes.\r\n\r\n# Rationale \r\n\r\nWhile the HTTP protocol does not specify limits for [request-line size](https://tools.ietf.org/html/rfc7230#section-3.1.1), [header size](https://tools.ietf.org/html/rfc7230#section-3.2.5) or [cookie size](https://tools.ietf.org/html/rfc2965#section-5.3), server implementations do (for security reasons). User agents also implement limits for the maximum size of a request-line, header, cookie, ...\r\n\r\nSo how to choose a reasonable limit for the maximum size a server implementation could enforce when parsing a requests ? We must consider what maximum sizes are enforced by popular recent user agents (let say Firefox and Chrome). \r\n\r\nIt is safe to assume that the most frequently oversized line in a HTTP request is the one for the cookie header, since website developers tend to abuse this storage facility. On the [browsercookielimits](http://browsercookielimits.squawky.net/) website, we can discover that cookie value limits for popular browsers are : \r\n- Chrome : 4096 bytes\r\n- Firefox : 4097 bytes\r\n\r\nIf we want to accept any requests made from those browsers even when they include a cookie reaching the user agent limit, we on the server side must consider accepting a request line of **4107 bytes** : \r\n\r\n```\r\ncookie: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\r\\n\r\n\\__ 8 _/\\___________ 4097 ____________/\\_2/    = 4107\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/742", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/742/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/742/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/742/events", "html_url": "https://github.com/aaugustin/websockets/issues/742", "id": 595413146, "node_id": "MDU6SXNzdWU1OTU0MTMxNDY=", "number": 742, "title": "Bussiness", "user": {"login": "albertibistein", "id": 63065830, "node_id": "MDQ6VXNlcjYzMDY1ODMw", "avatar_url": "https://avatars2.githubusercontent.com/u/63065830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertibistein", "html_url": "https://github.com/albertibistein", "followers_url": "https://api.github.com/users/albertibistein/followers", "following_url": "https://api.github.com/users/albertibistein/following{/other_user}", "gists_url": "https://api.github.com/users/albertibistein/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertibistein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertibistein/subscriptions", "organizations_url": "https://api.github.com/users/albertibistein/orgs", "repos_url": "https://api.github.com/users/albertibistein/repos", "events_url": "https://api.github.com/users/albertibistein/events{/privacy}", "received_events_url": "https://api.github.com/users/albertibistein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-06T20:40:17Z", "updated_at": "2020-04-06T20:45:32Z", "closed_at": "2020-04-06T20:45:32Z", "author_association": "NONE", "active_lock_reason": "spam", "body": "Hello ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/741", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/741/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/741/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/741/events", "html_url": "https://github.com/aaugustin/websockets/issues/741", "id": 595180553, "node_id": "MDU6SXNzdWU1OTUxODA1NTM=", "number": 741, "title": "Websocket handshake fails with \"did not receive a valid HTTP response\"", "user": {"login": "nardew", "id": 28791551, "node_id": "MDQ6VXNlcjI4NzkxNTUx", "avatar_url": "https://avatars2.githubusercontent.com/u/28791551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nardew", "html_url": "https://github.com/nardew", "followers_url": "https://api.github.com/users/nardew/followers", "following_url": "https://api.github.com/users/nardew/following{/other_user}", "gists_url": "https://api.github.com/users/nardew/gists{/gist_id}", "starred_url": "https://api.github.com/users/nardew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nardew/subscriptions", "organizations_url": "https://api.github.com/users/nardew/orgs", "repos_url": "https://api.github.com/users/nardew/repos", "events_url": "https://api.github.com/users/nardew/events{/privacy}", "received_events_url": "https://api.github.com/users/nardew/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-06T14:49:02Z", "updated_at": "2020-04-09T13:09:52Z", "closed_at": "2020-04-08T20:47:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am facing an issue I cannot get around. While initiating a websocket connection, the handshake fails with error specified below (the error is related to a specific websocket endpoint, other endpoints work). Interestingly enough, when I try to open the connection via other clients (I tried a chrome extension and online websocket.org), the connection is opened properly, hence I assume the issue on the client side. On the other hand, the exception says the connection was reset by peer. I analyzed the request headers between `websockets` and the other client and they more or less matched. I even tried to match them 1:1 (where applicable) using `extra_headers` but to no avail.\r\n\r\nThanks for any help.\r\n\r\nwebsockets 8.1\r\nPython 3.7.5\r\nMacOS Catalyna 10.15.4 (19E266), same for AmazonLinux\r\n\r\n`client - state = CONNECTING\r\nclient - event = connection_made(<_SelectorSocketTransport fd=9 read=idle write=<idle, bufsize=0>>)\r\nclient > GET /spotWS HTTP/1.1\r\nclient > Headers([('Host', 'ws.btse.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'PDwE3zjU2jM1MoMNQBVRIg=='), ('Sec-WebSocket-Version', '13'), \r\n('User-Agent', 'Python/3.7 websockets/8.1')])\r\nclient - event = connection_lost([Errno 54] Connection reset by peer)\r\nclient - state = CLOSED\r\nclient x code = 1006, reason = [no reason]\r\n\r\n...\r\n\r\nTraceback (most recent call last):\r\n  File \"../lib/python3.7/site-packages/websockets/client.py\", line 101, in read_http_response\r\n    status_code, reason, headers = await read_response(self.reader)\r\n  File \"../lib/python3.7/site-packages/websockets/http.py\", line 139, in read_response\r\n    status_line = await read_line(stream)\r\n  File \"../lib/python3.7/site-packages/websockets/http.py\", line 213, in read_line\r\n    line = await stream.readline()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/streams.py\", line 496, in readline\r\n    line = await self.readuntil(sep)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/streams.py\", line 588, in readuntil\r\n    await self._wait_for_data('readuntil')\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/streams.py\", line 473, in _wait_for_data\r\n    await self._waiter\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/selector_events.py\", line 804, in _read_ready__data_received\r\n    data = self._sock.recv(self.max_size)\r\nConnectionResetError: [Errno 54] Connection reset by peer\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n...  \r\nFile \"/Users/nardew/Development/python_venv/cryptolib/lib/python3.7/site-packages/websockets/client.py\", line 519, in __aenter__\r\n    return await self\r\n  File \"/Users/nardew/Development/python_venv/cryptolib/lib/python3.7/site-packages/websockets/client.py\", line 549, in __await_impl__\r\n    extra_headers=protocol.extra_headers,\r\n  File \"/Users/nardew/Development/python_venv/cryptolib/lib/python3.7/site-packages/websockets/client.py\", line 292, in handshake\r\n    status_code, response_headers = await self.read_http_response()\r\n  File \"/Users/nardew/Development/python_venv/cryptolib/lib/python3.7/site-packages/websockets/client.py\", line 105, in read_http_response\r\n    raise InvalidMessage(\"did not receive a valid HTTP response\") from exc\r\nwebsockets.exceptions.InvalidMessage: did not receive a valid HTTP response`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/740", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/740/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/740/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/740/events", "html_url": "https://github.com/aaugustin/websockets/issues/740", "id": 593534874, "node_id": "MDU6SXNzdWU1OTM1MzQ4NzQ=", "number": 740, "title": "Apparently contradicting messages in debug logs", "user": {"login": "Gobot1234", "id": 50501825, "node_id": "MDQ6VXNlcjUwNTAxODI1", "avatar_url": "https://avatars2.githubusercontent.com/u/50501825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gobot1234", "html_url": "https://github.com/Gobot1234", "followers_url": "https://api.github.com/users/Gobot1234/followers", "following_url": "https://api.github.com/users/Gobot1234/following{/other_user}", "gists_url": "https://api.github.com/users/Gobot1234/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gobot1234/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gobot1234/subscriptions", "organizations_url": "https://api.github.com/users/Gobot1234/orgs", "repos_url": "https://api.github.com/users/Gobot1234/repos", "events_url": "https://api.github.com/users/Gobot1234/events{/privacy}", "received_events_url": "https://api.github.com/users/Gobot1234/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943708, "node_id": "MDU6TGFiZWwzMzk0MzcwOA==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/invalid", "name": "invalid", "color": "f9d0c4", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-03T17:32:29Z", "updated_at": "2020-04-09T00:30:03Z", "closed_at": "2020-04-08T20:56:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nCurrently I am trying to connect to a Steam CM server in a ``websockets.client.WebSocketClientProtocol`` subclass. When reading information from the debug log I receive this info:\r\n\r\n```py\r\nDEBUG:websockets.protocol:client - state = CONNECTING\r\nDEBUG:websockets.protocol:client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x107478e90>)\r\nDEBUG:websockets.client:client > GET /cmsocket/ HTTP/1.1\r\nDEBUG:websockets.client:client > Headers([('Host', 'cm2-par1.cm.steampowered.com:27022'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', '/not too sure if you can do stuff with this'), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.7 websockets/8.1')])\r\nDEBUG:websockets.protocol:client - event = data_received(<129 bytes>)\r\nDEBUG:websockets.client:client < HTTP/1.1 101 Switching Protocols\r\nDEBUG:websockets.client:client < Headers([('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Accept', 'again not too sure if you can do stuff with this')])\r\nDEBUG:websockets.protocol:client - state = OPEN\r\n```\r\nThis specifies that the connection is open, however when printing self.state in ``protocol.py`` it says it is ``State.CONNECTING`` in ``ensure_open`` I am aware it says \r\n> Control may only reach this point in buggy third-party subclasses.\r\n\r\nBut I am unaware what exactly is wrong with [this (my source code)](https://gist.github.com/81ba3d6dfe3354aa3cef5923536d9f36)?\r\n[The full error](https://gist.github.com/87ea1835ca51dc5848a73fd4fc13637f)\r\n\r\nSystem Info:\r\n----------------\r\nPython version: 3.7.5 (v3.7.5:5c02a39a0b)\r\nLibrary version: 8.1\r\nOS: macOS Catalina 10.15.2 (19C57)\r\n\r\nThank you :D\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/739", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/739/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/739/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/739/events", "html_url": "https://github.com/aaugustin/websockets/issues/739", "id": 590546317, "node_id": "MDU6SXNzdWU1OTA1NDYzMTc=", "number": 739, "title": "How to read response body when server rejects connection", "user": {"login": "nosalan", "id": 2273250, "node_id": "MDQ6VXNlcjIyNzMyNTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2273250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nosalan", "html_url": "https://github.com/nosalan", "followers_url": "https://api.github.com/users/nosalan/followers", "following_url": "https://api.github.com/users/nosalan/following{/other_user}", "gists_url": "https://api.github.com/users/nosalan/gists{/gist_id}", "starred_url": "https://api.github.com/users/nosalan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nosalan/subscriptions", "organizations_url": "https://api.github.com/users/nosalan/orgs", "repos_url": "https://api.github.com/users/nosalan/repos", "events_url": "https://api.github.com/users/nosalan/events{/privacy}", "received_events_url": "https://api.github.com/users/nosalan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-30T19:46:56Z", "updated_at": "2020-07-26T20:53:44Z", "closed_at": "2020-07-26T20:53:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some WebSocket servers return BadRequest with details in body when something is wrong with websocket request. The `connect` method throws `InvalidStatusCode` exception but only status code is included there. Is it possible to read the response body in such case? \r\nThere is a low level [read-response](https://websockets.readthedocs.io/en/stable/_modules/websockets/http.html#read_response) function but I don't know from where to get the `asyncio.StreamReader` parameter it requires.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/737", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/737/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/737/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/737/events", "html_url": "https://github.com/aaugustin/websockets/issues/737", "id": 586126771, "node_id": "MDU6SXNzdWU1ODYxMjY3NzE=", "number": 737, "title": "Checking TLS version and cipher suites during handshake", "user": {"login": "MarcMueltin", "id": 4791110, "node_id": "MDQ6VXNlcjQ3OTExMTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4791110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcMueltin", "html_url": "https://github.com/MarcMueltin", "followers_url": "https://api.github.com/users/MarcMueltin/followers", "following_url": "https://api.github.com/users/MarcMueltin/following{/other_user}", "gists_url": "https://api.github.com/users/MarcMueltin/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcMueltin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcMueltin/subscriptions", "organizations_url": "https://api.github.com/users/MarcMueltin/orgs", "repos_url": "https://api.github.com/users/MarcMueltin/repos", "events_url": "https://api.github.com/users/MarcMueltin/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcMueltin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-23T11:11:07Z", "updated_at": "2020-07-26T19:56:27Z", "closed_at": "2020-07-26T19:56:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI'm trying to figure out how to specifically catch and log a connection error that occurs when the TLS server doesn't have a valid TLS version or a valid cipher suite. I am currently implementing a protocol that demands that I need to log security events, among them InvalidTLSVersion and InvalidTLSCipherSuite.\r\n\r\nI tried to invoke such a situation by editing the server-side cipher suite in such a way that it doesn't match the client-side cipher suite. As a result, the only output I get from websockets is this:\r\n\r\n\"WebSocket connection closed with ConnectionResetError: \"\r\n\r\nNot even a hint what exactly when wrong. Sure, the TCP connection wasn't available because the handshake must have failed. But I would have expected an InvalidHandshake exception instead of a ConnectionResetError.\r\n\r\nCan you please advise me on the steps I need to implement in order to find out whether or not \r\n\r\n- the server uses a correct TLS version\r\n- the server uses a cipher suite that matches the client's cipher suite\r\n\r\nI thought that logging the websockets events with \r\n\r\n`logger = logging.getLogger('websockets')\r\n logger.setLevel(logging.DEBUG)\r\n logger.addHandler(logging.StreamHandler())`\r\n\r\nwould be more informative, but all I get is the above statement about the ConnectionResetError.\r\n\r\nAny help is much appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/736", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/736/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/736/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/736/events", "html_url": "https://github.com/aaugustin/websockets/issues/736", "id": 582086143, "node_id": "MDU6SXNzdWU1ODIwODYxNDM=", "number": 736, "title": "Howto client: is WebSocket connected?", "user": {"login": "adriansev", "id": 378882, "node_id": "MDQ6VXNlcjM3ODg4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/378882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adriansev", "html_url": "https://github.com/adriansev", "followers_url": "https://api.github.com/users/adriansev/followers", "following_url": "https://api.github.com/users/adriansev/following{/other_user}", "gists_url": "https://api.github.com/users/adriansev/gists{/gist_id}", "starred_url": "https://api.github.com/users/adriansev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adriansev/subscriptions", "organizations_url": "https://api.github.com/users/adriansev/orgs", "repos_url": "https://api.github.com/users/adriansev/repos", "events_url": "https://api.github.com/users/adriansev/events{/privacy}", "received_events_url": "https://api.github.com/users/adriansev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-16T08:09:51Z", "updated_at": "2020-03-16T21:32:07Z", "closed_at": "2020-03-16T21:32:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! What is the proper way to check if my (client) side is still connected (in the case of keep-alive present)?   \r\nIs it enough something like `if wb:` or just ping/pong before sending a message?\r\n(or put the message sending in a try and if exception redo the connection and try again?)\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/735", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/735/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/735/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/735/events", "html_url": "https://github.com/aaugustin/websockets/issues/735", "id": 580272212, "node_id": "MDU6SXNzdWU1ODAyNzIyMTI=", "number": 735, "title": "Websocket reconnect", "user": {"login": "aledisi", "id": 34454516, "node_id": "MDQ6VXNlcjM0NDU0NTE2", "avatar_url": "https://avatars3.githubusercontent.com/u/34454516?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aledisi", "html_url": "https://github.com/aledisi", "followers_url": "https://api.github.com/users/aledisi/followers", "following_url": "https://api.github.com/users/aledisi/following{/other_user}", "gists_url": "https://api.github.com/users/aledisi/gists{/gist_id}", "starred_url": "https://api.github.com/users/aledisi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aledisi/subscriptions", "organizations_url": "https://api.github.com/users/aledisi/orgs", "repos_url": "https://api.github.com/users/aledisi/repos", "events_url": "https://api.github.com/users/aledisi/events{/privacy}", "received_events_url": "https://api.github.com/users/aledisi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943708, "node_id": "MDU6TGFiZWwzMzk0MzcwOA==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/invalid", "name": "invalid", "color": "f9d0c4", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-12T23:07:40Z", "updated_at": "2020-03-16T21:35:07Z", "closed_at": "2020-03-16T21:34:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm developing an Ionic project with Ionic 5.\r\nI created a Service that manage a websocket connection to node websocket server that pass to my app some data. All works good and data on my page is updated correctly.\r\nNow I'm becoming crazy trying to create a reconnect function that reconnect after node server shutdown.\r\n\r\n\r\nTHIS IS MY SERVICE CODE in Ionic project:\r\n\r\n```\r\n\r\n`import { Injectable } from '@angular/core';\r\n\r\nconst WS_IP_ADDRESS = 'ws://192.168.43.42:3001/';\r\n\r\n//Websocket connection\r\nexport var ws = new WebSocket(WS_IP_ADDRESS);\r\n\r\n//JSON\r\nvar JSON_Data = '{\"mbServer_Status\": \"disconnected\", \"values\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]}';\r\nexport var MBData = JSON.parse(JSON_Data);\r\nvar JSON_WSComm = '{\"status\": \"disconnected\"}';\r\nexport var WSComm = JSON.parse(JSON_WSComm);\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WSCommService {\r\n\r\n  constructor() { }\r\n}\r\n\r\n//Verify ws connection status and set status var for pages\r\nconst socketOpenListener = (event) =>{\r\n  WSComm.status=\"connected\";\r\n}\r\nconst socketCloseListener = (event) =>{\r\n  WSComm.status=\"disconnected\";\r\n}\r\nws.addEventListener('open', socketOpenListener);\r\nws.addEventListener('close', socketCloseListener);\r\n\r\n\r\n// Try to reconnect\r\nsetInterval(function () {\r\n  // console.log(MBData.mbServer_Status);\r\n  if (WSComm.status==\"disconnected\"){\r\n    ws.removeEventListener('open', socketOpenListener);\r\n    ws.removeEventListener('close', socketCloseListener);\r\n    ws = new WebSocket(WS_IP_ADDRESS);\r\n    ws.addEventListener('open', socketOpenListener);\r\n    ws.addEventListener('close', socketCloseListener);\r\n  }\r\n}, 5000)\r\n\r\n\r\n//Parse data from server\r\nws.onmessage = function(msg){\r\n  // console.log(MBData.mbServer_Status);\r\n  MBData=JSON.parse(msg.data);\r\n}\r\n`\r\n\r\n```\r\n\r\nWhen the client reconnect after a node close and reopen, my app reconnect (the server log a new connection), I can send data from my client to the server, but the server didn't send data to the app. \r\nThe ws.send function is executed but nothing happen in my app.\r\n\r\nTHIS IS MY NODE SERVER:\r\n\r\n\r\n\r\n```\r\n`'use strict'\r\n\r\n/////////////************* DECLARATION **************//////////////\r\n\r\n// NODE MODULES\r\nconst WebSocket = require('ws');\r\nconst modbus = require('jsmodbus')\r\nconst net = require('net')\r\nlet app = require('express')();\r\nlet http = require('http').Server(app);\r\n\r\n// CONNECTIONS\r\nconst wss = new WebSocket.Server({ port: 3001 });\r\n\r\n// VARIABLES\r\nvar i = 0;\r\nvar j = 99;\r\nvar l= 0;\r\nvar readValues = new Array(10);\r\nvar host = '';\r\nvar port = '';\r\nvar datatoclient = \"\";\r\nvar datafromclient =\"\";\r\n\r\n//JSON\r\nconst MBServer_Params = '{\"host\": \"0.0.0.0\", \"port\": \"0\"}';\r\nconst obj_MBServer_Params = JSON.parse(MBServer_Params);\r\nconst JSONData = '{\"mbServer_Status\": \"disconnected\", \"values\": [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]}';\r\nconst MBData = JSON.parse(JSONData);\r\n\r\n///////////////////////////////////////////////////////////////////\r\n\r\n\r\n//////////////************* WEB SOCKET **************//////////////\r\n\r\n//Websocket connection and msg function\r\nwss.on('connection', function connection(ws) {\r\n\r\n  console.log(\"Connesso con Android... \");\r\n  MBData.mbServer_Status=\"disconnected\";\r\n\r\n  //Parsing messaggi\r\n  ws.onmessage = function(msg){\r\n    //Parse Connection params in JSON format\r\n    datafromclient=JSON.parse(msg.data);\r\n    console.log(datafromclient.host);\r\n    console.log(datafromclient.port);\r\n    obj_MBServer_Params.host=datafromclient.host;\r\n    obj_MBServer_Params.port=datafromclient.port;\r\n  };\r\n  \r\n  //Send periodically data to client in JSON format\r\n  setInterval(function () {\r\n    if (j<99) {\r\n      ws.send(JSON.stringify(MBData));\r\n      console.log(MBData);\r\n    }\r\n  }, 500)\r\n\r\n});\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////////////\r\n\r\n\r\n////////////////************* MODBUS **************////////////////\r\n\r\n//Polling holding registers\r\nsetInterval(function () {\r\n\r\n  if (obj_MBServer_Params.host!='0.0.0.0' && obj_MBServer_Params.port!='0'){\r\n    j=0;\r\n    const options = {\r\n      'host' : obj_MBServer_Params.host,\r\n      'port' : obj_MBServer_Params.port\r\n    }\r\n    const socket = new net.Socket()\r\n    const client = new modbus.client.TCP(socket);  \r\n\r\n    //Read holding register function\r\n    socket.on('connect', function () {\r\n      client.readHoldingRegisters(0, 10)\r\n        .then(function (resp) {\r\n          MBData.mbServer_Status=\"connected\";\r\n          //  console.log(MBData);\r\n          for (i = 0; i < 10; i++) {\r\n            MBData.values[i] = resp.response._body.valuesAsArray[i];\r\n          }\r\n          socket.end()\r\n        }).catch(function () {\r\n          MBData.mbServer_Status=\"disconnected\";\r\n          console.error(require('util').inspect(arguments, {\r\n            depth: null\r\n          }))\r\n          socket.end()\r\n        })\r\n    })\r\n\r\n    //Log connection error\r\n    socket.on('error', function(){\r\n      MBData.mbServer_Status=\"disconnected\";\r\n      // console.log(MBData);\r\n      // console.error;\r\n    })\r\n\r\n    //Modbus connection\r\n    socket.connect(options)\r\n  }\r\n}, 2000)\r\n\r\n///////////////////////////////////////////////////////////////////\r\n```\r\n\r\n```\r\n\r\n\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/734", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/734/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/734/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/734/events", "html_url": "https://github.com/aaugustin/websockets/issues/734", "id": 580251593, "node_id": "MDU6SXNzdWU1ODAyNTE1OTM=", "number": 734, "title": "Unclear error report: giving dictionary as argument to send() causes \"IncompleteReadError: 0 bytes read on a total of 2 expected bytes\"", "user": {"login": "TrulyBright", "id": 36768503, "node_id": "MDQ6VXNlcjM2NzY4NTAz", "avatar_url": "https://avatars2.githubusercontent.com/u/36768503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TrulyBright", "html_url": "https://github.com/TrulyBright", "followers_url": "https://api.github.com/users/TrulyBright/followers", "following_url": "https://api.github.com/users/TrulyBright/following{/other_user}", "gists_url": "https://api.github.com/users/TrulyBright/gists{/gist_id}", "starred_url": "https://api.github.com/users/TrulyBright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TrulyBright/subscriptions", "organizations_url": "https://api.github.com/users/TrulyBright/orgs", "repos_url": "https://api.github.com/users/TrulyBright/repos", "events_url": "https://api.github.com/users/TrulyBright/events{/privacy}", "received_events_url": "https://api.github.com/users/TrulyBright/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-12T22:09:09Z", "updated_at": "2020-07-26T19:49:43Z", "closed_at": "2020-07-26T19:49:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I had the same problem in #579 some hours ago and finally managed to find the cause.\r\n\r\nThe error occurs when the code below runs:\r\n```\r\nasync def handler(ws, path):\r\n  await ws.send({'foo': 'bar'})\r\n```\r\nBut it doesn't if we wrap the dict with ```json.dumps()```:\r\n```\r\nasync def handler(ws, path):\r\n  await ws.send(json.dumps({'foo': 'bar'}))\r\n```\r\nIt was not easy to find the cause since the error report was unclear. I think it is better to show clear error like ```TypeError: type 'dict' was given to send() which doesn't accept that type as argument```, not the unclear message in the title.\r\n\r\nThis solution is not applicable to #579. vgoklani had the error though all data to send are wrapped with ```json.dumps()```. It seems the IncompleteReadError has plural causes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/733", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/733/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/733/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/733/events", "html_url": "https://github.com/aaugustin/websockets/issues/733", "id": 577497333, "node_id": "MDU6SXNzdWU1Nzc0OTczMzM=", "number": 733, "title": "Assigning websocket to anything but localhost throws errno 99", "user": {"login": "LinuxRocks2000", "id": 30090985, "node_id": "MDQ6VXNlcjMwMDkwOTg1", "avatar_url": "https://avatars1.githubusercontent.com/u/30090985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LinuxRocks2000", "html_url": "https://github.com/LinuxRocks2000", "followers_url": "https://api.github.com/users/LinuxRocks2000/followers", "following_url": "https://api.github.com/users/LinuxRocks2000/following{/other_user}", "gists_url": "https://api.github.com/users/LinuxRocks2000/gists{/gist_id}", "starred_url": "https://api.github.com/users/LinuxRocks2000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LinuxRocks2000/subscriptions", "organizations_url": "https://api.github.com/users/LinuxRocks2000/orgs", "repos_url": "https://api.github.com/users/LinuxRocks2000/repos", "events_url": "https://api.github.com/users/LinuxRocks2000/events{/privacy}", "received_events_url": "https://api.github.com/users/LinuxRocks2000/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943708, "node_id": "MDU6TGFiZWwzMzk0MzcwOA==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/invalid", "name": "invalid", "color": "f9d0c4", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-08T13:01:10Z", "updated_at": "2020-03-10T06:03:30Z", "closed_at": "2020-03-10T06:03:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am working on a simple websocket server to run in parallel with a socket server, for a very basic web app. I have written an HTML site, programmed the socket server, and all that, but when I run the websocket server (regardless of whether or not the socket server was running) it gives me this error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 1062, in create_server\r\n    sock.bind(sa)\r\nOSError: [Errno 99] Cannot assign requested address\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/awesome/desk/programs/python_dnd_server/mywebsocketserver.py\", line 15, in <module>\r\n    asyncio.get_event_loop().run_until_complete(server)\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 484, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/lib/python3.6/asyncio/tasks.py\", line 537, in _wrap_awaitable\r\n    return (yield from awaitable.__await__())\r\n  File \"/home/awesome/.local/lib/python3.6/site-packages/websockets/server.py\", line 965, in __await_impl__\r\n    server = await self._create_server()\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 1066, in create_server\r\n    % (sa, err.strerror.lower()))\r\nOSError: [Errno 99] error while attempting to bind on address ('2600:1700:8000:ff00:ab7b:cc80:d82d:e6f2', 2344, 0, 0): cannot assign requested address\r\n```\r\nHere is my websocket server code:\r\n```\r\nimport asyncio\r\nimport json\r\nimport websockets\r\nconfigfile=open(\"config.json\")\r\nconfig=json.loads(configfile.read())\r\nconfigfile.close()\r\ntick=0\r\nprint(\"This is a websocket server only. Run the actual server to push html data.\")\r\nprint(config[\"address\"])\r\nasync def system(websocket,path):\r\n    print(\"Run\")\r\n    async for x in websocket:\r\n        await websocket.send_all(x)\r\nserver=websockets.serve(system,config[\"address\"],2344)\r\nasyncio.get_event_loop().run_until_complete(server)\r\nasyncio.get_event_loop().run_forever()\r\n```\r\n\r\nThanks, from LinuxRocks2000!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/732", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/732/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/732/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/732/events", "html_url": "https://github.com/aaugustin/websockets/issues/732", "id": 577112072, "node_id": "MDU6SXNzdWU1NzcxMTIwNzI=", "number": 732, "title": "Websockets server throws TypeError", "user": {"login": "CmdrNorthpaw", "id": 30018896, "node_id": "MDQ6VXNlcjMwMDE4ODk2", "avatar_url": "https://avatars1.githubusercontent.com/u/30018896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CmdrNorthpaw", "html_url": "https://github.com/CmdrNorthpaw", "followers_url": "https://api.github.com/users/CmdrNorthpaw/followers", "following_url": "https://api.github.com/users/CmdrNorthpaw/following{/other_user}", "gists_url": "https://api.github.com/users/CmdrNorthpaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/CmdrNorthpaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CmdrNorthpaw/subscriptions", "organizations_url": "https://api.github.com/users/CmdrNorthpaw/orgs", "repos_url": "https://api.github.com/users/CmdrNorthpaw/repos", "events_url": "https://api.github.com/users/CmdrNorthpaw/events{/privacy}", "received_events_url": "https://api.github.com/users/CmdrNorthpaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943708, "node_id": "MDU6TGFiZWwzMzk0MzcwOA==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/invalid", "name": "invalid", "color": "f9d0c4", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-06T18:51:45Z", "updated_at": "2020-03-07T07:32:44Z", "closed_at": "2020-03-07T07:32:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running a Websockets server throws the following error: \r\n\r\n```\r\nERROR:websockets.server:Error in connection handler\r\nTraceback (most recent call last):\r\n  File \"/home/user/.local/lib/python3.8/site-packages/websockets/server.py\", line 191, in handler\r\n    await self.ws_handler(self, path)\r\nTypeError: reciever() takes 0 positional arguments but 2 were given`\r\n```\r\n\r\nI'm running Python 3.8 on a Raspberry Pi 4B with Manjaro ARM.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/730", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/730/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/730/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/730/events", "html_url": "https://github.com/aaugustin/websockets/issues/730", "id": 572948262, "node_id": "MDU6SXNzdWU1NzI5NDgyNjI=", "number": 730, "title": "is there a way to bind to a local ip upon client connect", "user": {"login": "iofo", "id": 55444033, "node_id": "MDQ6VXNlcjU1NDQ0MDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/55444033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iofo", "html_url": "https://github.com/iofo", "followers_url": "https://api.github.com/users/iofo/followers", "following_url": "https://api.github.com/users/iofo/following{/other_user}", "gists_url": "https://api.github.com/users/iofo/gists{/gist_id}", "starred_url": "https://api.github.com/users/iofo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iofo/subscriptions", "organizations_url": "https://api.github.com/users/iofo/orgs", "repos_url": "https://api.github.com/users/iofo/repos", "events_url": "https://api.github.com/users/iofo/events{/privacy}", "received_events_url": "https://api.github.com/users/iofo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-28T19:08:55Z", "updated_at": "2020-02-29T22:09:04Z", "closed_at": "2020-02-29T22:08:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to be able to specify the local IP address of my client websocket connection.\r\nThis would involve a bind socket call prior to socket connect.\r\nIs there a way to specify this when calling connect.\r\nThanks,\r\nTom\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/728", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/728/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/728/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/728/events", "html_url": "https://github.com/aaugustin/websockets/issues/728", "id": 569141171, "node_id": "MDU6SXNzdWU1NjkxNDExNzE=", "number": 728, "title": "[Question] Websocket connection issue ", "user": {"login": "fbove", "id": 17007814, "node_id": "MDQ6VXNlcjE3MDA3ODE0", "avatar_url": "https://avatars3.githubusercontent.com/u/17007814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fbove", "html_url": "https://github.com/fbove", "followers_url": "https://api.github.com/users/fbove/followers", "following_url": "https://api.github.com/users/fbove/following{/other_user}", "gists_url": "https://api.github.com/users/fbove/gists{/gist_id}", "starred_url": "https://api.github.com/users/fbove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fbove/subscriptions", "organizations_url": "https://api.github.com/users/fbove/orgs", "repos_url": "https://api.github.com/users/fbove/repos", "events_url": "https://api.github.com/users/fbove/events{/privacy}", "received_events_url": "https://api.github.com/users/fbove/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-21T19:28:43Z", "updated_at": "2020-02-27T00:02:53Z", "closed_at": "2020-02-27T00:02:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Connection is lost after getting this console error:\r\n```\r\nsocket.send() raised exception.\r\n```\r\nAnd a disconnection on websocket server is being triggered, with code 1006.\r\n\r\n#### Environment\r\nWebsocket server is a Django 2.2.5 with Django Channels 2.4.0 over Daphne.\r\nPython websockets is being used only as a client. Other clients are connected using Javascript WebSocket w/o any issue.\r\n\r\n#### Implementation\r\n```python\r\nfrom asyncio import get_event_loop\r\nfrom asyncio.futures import TimeoutError as ConnectionTimeoutError\r\nfrom json import dumps\r\nfrom logging import getLogger\r\n\r\nfrom websockets import connect as WSConnect\r\n\r\nWS_URI = 'ws://application:8000/ws'\r\n\r\nlogger = getLogger(__name__)\r\n\r\nclass WS:\r\n    def __init__(self, ws=None, key=None):\r\n        self.ws = ws\r\n        self.key = key\r\n\r\n    @staticmethod\r\n    def connect(key: str):\r\n        async def _connect():\r\n            ws = await WSConnect(f'{WS_URI}/notifications/?key={key}')\r\n            await ws.send(dumps({\r\n                'command': 'join',\r\n                'room': key,\r\n                'message': 'Engine Joining!'\r\n            }))\r\n            return WS(ws, key)\r\n        try:\r\n            return get_event_loop().run_until_complete(_connect())\r\n        except ConnectionTimeoutError as ex:\r\n            logger.error(\r\n                f'Connection Timeout Error in WebSocket connect: {str(ex)}')\r\n            return WS()\r\n        except Exception as ex:\r\n            logger.error(f'Error in WebSocket connect: {str(ex)}')\r\n            return WS()\r\n\r\n    def sendMsg(self, message=''):\r\n        async def _sendMsg():\r\n            return await self.ws.send(dumps({\r\n                'command': 'send',\r\n                'room': self.key,\r\n                'type': 0,\r\n                'message': message,\r\n            }))\r\n        try:\r\n            if self.ws is None or self.ws.closed:\r\n                logger.error('WebSocket client is not stablished.')\r\n            return get_event_loop().run_until_complete(_sendMsg())\r\n        except ConnectionTimeoutError as ex:\r\n            logger.error(\r\n                f'Connection Timeout Error in WebSocket sendMsg: {str(ex)}')\r\n        except Exception as ex:\r\n            logger.error(f'Error in WebSocket sendMsg: {str(ex)}')\r\n\r\nws = WS.connect(key=key)\r\nws.sendMsg('something')\r\n```\r\n\r\nTried changing timeout and the connection prevails for a bit longer, but it eventually logs the console exception when trying to send something.\r\n```python\r\nWSConnect(\r\n    f'{WS_URI}/notifications/?key={key}',\r\n    ping_interval=5, ping_timeout=3\r\n)\r\n```\r\n\r\nAn issue that may be related is [socket.send() raised exception](https://github.com/aaugustin/websockets/issues/84), but I'm not really sure.\r\n\r\nAlso checked [What does ConnectionClosedError: code = 1006 mean?](https://websockets.readthedocs.io/en/stable/faq.html#what-does-connectionclosederror-code-1006-mean), but websocket server is not behind a proxy nor a load balancer. In my case it's a docker-compose stack on a local machine, so connection between containers is not an issue.\r\n\r\nIt may be related with keeping the connection alive when it is idle for more than 30-40 seconds?\r\nHow can this be solved? Isn't it handle internally by websockets library with ping pongs?\r\n\r\nThanks in advanced.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/727", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/727/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/727/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/727/events", "html_url": "https://github.com/aaugustin/websockets/issues/727", "id": 566052793, "node_id": "MDU6SXNzdWU1NjYwNTI3OTM=", "number": 727, "title": "Send message to a single connected client from the server directly", "user": {"login": "JeremyVarghese", "id": 54882431, "node_id": "MDQ6VXNlcjU0ODgyNDMx", "avatar_url": "https://avatars2.githubusercontent.com/u/54882431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeremyVarghese", "html_url": "https://github.com/JeremyVarghese", "followers_url": "https://api.github.com/users/JeremyVarghese/followers", "following_url": "https://api.github.com/users/JeremyVarghese/following{/other_user}", "gists_url": "https://api.github.com/users/JeremyVarghese/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeremyVarghese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeremyVarghese/subscriptions", "organizations_url": "https://api.github.com/users/JeremyVarghese/orgs", "repos_url": "https://api.github.com/users/JeremyVarghese/repos", "events_url": "https://api.github.com/users/JeremyVarghese/events{/privacy}", "received_events_url": "https://api.github.com/users/JeremyVarghese/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-17T04:45:08Z", "updated_at": "2020-02-21T21:45:51Z", "closed_at": "2020-02-17T09:36:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way of initiating a message to a connected client as opposed to replying to a message from a client? So far, from the examples, I have got a working program if the client starts the conversation. I need the exchange to start from the server side. How would one go about executing it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/726", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/726/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/726/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/726/events", "html_url": "https://github.com/aaugustin/websockets/issues/726", "id": 565880310, "node_id": "MDU6SXNzdWU1NjU4ODAzMTA=", "number": 726, "title": "How to listen to terminate signal on windows?", "user": {"login": "iLLiCiTiT", "id": 43494761, "node_id": "MDQ6VXNlcjQzNDk0NzYx", "avatar_url": "https://avatars2.githubusercontent.com/u/43494761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iLLiCiTiT", "html_url": "https://github.com/iLLiCiTiT", "followers_url": "https://api.github.com/users/iLLiCiTiT/followers", "following_url": "https://api.github.com/users/iLLiCiTiT/following{/other_user}", "gists_url": "https://api.github.com/users/iLLiCiTiT/gists{/gist_id}", "starred_url": "https://api.github.com/users/iLLiCiTiT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iLLiCiTiT/subscriptions", "organizations_url": "https://api.github.com/users/iLLiCiTiT/orgs", "repos_url": "https://api.github.com/users/iLLiCiTiT/repos", "events_url": "https://api.github.com/users/iLLiCiTiT/events{/privacy}", "received_events_url": "https://api.github.com/users/iLLiCiTiT/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-16T10:03:52Z", "updated_at": "2020-02-16T20:55:12Z", "closed_at": "2020-02-16T18:52:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Question:\r\nI would like to run websockets server or clinet on windows but there is not support to `add_signal_handler`. Is there way to terminate websockets loop on windows with handling `SIGTERM` or `SIGINT` when `run_forever()` is called? Didn't found that in documentation and none of my attempts worked, but I'm not experienced with async and coroutins much. Code snippet would be best (if it's possible).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/725", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/725/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/725/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/725/events", "html_url": "https://github.com/aaugustin/websockets/issues/725", "id": 564899781, "node_id": "MDU6SXNzdWU1NjQ4OTk3ODE=", "number": 725, "title": "Websocket server returns error 1011 but the version I'm using doesn't have docs for that error", "user": {"login": "CmdrNorthpaw", "id": 30018896, "node_id": "MDQ6VXNlcjMwMDE4ODk2", "avatar_url": "https://avatars1.githubusercontent.com/u/30018896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CmdrNorthpaw", "html_url": "https://github.com/CmdrNorthpaw", "followers_url": "https://api.github.com/users/CmdrNorthpaw/followers", "following_url": "https://api.github.com/users/CmdrNorthpaw/following{/other_user}", "gists_url": "https://api.github.com/users/CmdrNorthpaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/CmdrNorthpaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CmdrNorthpaw/subscriptions", "organizations_url": "https://api.github.com/users/CmdrNorthpaw/orgs", "repos_url": "https://api.github.com/users/CmdrNorthpaw/repos", "events_url": "https://api.github.com/users/CmdrNorthpaw/events{/privacy}", "received_events_url": "https://api.github.com/users/CmdrNorthpaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-13T19:24:42Z", "updated_at": "2020-02-16T18:51:05Z", "closed_at": "2020-02-16T17:05:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using websockets to implement an asynchronous socket server for my program. Because the client end of this program doesn't run constantly (it connects to the server, uploads some data and then disconnects), I was getting the following error:\r\n\r\n`websockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1011 (unexpected error), no reason`\r\n\r\nNow according to the docs error 1011 is caused when the server sends a ping to the client, doesn't receive a pong and errors out (which causes problems with my program as the client isn't constantly connected to the server). Although you can get around this by setting ping_timeout to None, when I did this more errors were thrown.\r\n\r\nSo I did some digging and I found that because I've been using discord.py in my program (which itself uses websockets), I was being restricted to v6.0 of the library instead of v8.2, which is the version the docs were written for. But when I looked in that version of the docs, there wasn't anything about error 1011 at all. And there's also seemingly no way to stop the ping from timing out (in this version of the library). So how can I stop the server from shutting itself down simply because nothing is connecting to it?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/724", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/724/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/724/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/724/events", "html_url": "https://github.com/aaugustin/websockets/issues/724", "id": 558582468, "node_id": "MDU6SXNzdWU1NTg1ODI0Njg=", "number": 724, "title": "Enabling debugging increase the message size", "user": {"login": "adriansev", "id": 378882, "node_id": "MDQ6VXNlcjM3ODg4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/378882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adriansev", "html_url": "https://github.com/adriansev", "followers_url": "https://api.github.com/users/adriansev/followers", "following_url": "https://api.github.com/users/adriansev/following{/other_user}", "gists_url": "https://api.github.com/users/adriansev/gists{/gist_id}", "starred_url": "https://api.github.com/users/adriansev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adriansev/subscriptions", "organizations_url": "https://api.github.com/users/adriansev/orgs", "repos_url": "https://api.github.com/users/adriansev/repos", "events_url": "https://api.github.com/users/adriansev/events{/privacy}", "received_events_url": "https://api.github.com/users/adriansev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-01T19:03:54Z", "updated_at": "2020-07-26T20:17:23Z", "closed_at": "2020-07-26T19:57:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Is is expected that the enabling the debug mode for websocket would increase the message size? I have a situation for a quite big answer that i can receive without problem but with debugging enabled i get this:    \r\n``` \r\nDEBUG:websockets.protocol:client - event = data_received(<8196 bytes>)\r\nDEBUG:websockets.protocol:client - event = data_received(<8196 bytes>)\r\nDEBUG:websockets.protocol:client ! failing OPEN WebSocket connection with code 1009\r\nDEBUG:websockets.protocol:client - state = CLOSING\r\nDEBUG:websockets.protocol:client > Frame(fin=True, opcode=8, data=b'\\x03\\xf1', rsv1=False, rsv2=False, rsv3=False)\r\nDEBUG:websockets.protocol:client ! timed out waiting for TCP close\r\nDEBUG:websockets.protocol:client x closing TCP connection\r\nDEBUG:websockets.protocol:client ! timed out waiting for TCP close\r\nDEBUG:websockets.protocol:client x aborting TCP connection\r\nDEBUG:websockets.protocol:client - event = connection_lost(None)\r\nDEBUG:websockets.protocol:client - state = CLOSED\r\nDEBUG:websockets.protocol:client x code = 1006, reason = [no reason]\r\nERROR:root:code = 1006 (connection closed abnormally [internal]), no reason\r\nTraceback (most recent call last):\r\n  File \"/home/adrian/.local/lib/python3.7/site-packages/websockets/protocol.py\", line 827, in transfer_data\r\n    message = await self.read_message()\r\n  File \"/home/adrian/.local/lib/python3.7/site-packages/websockets/protocol.py\", line 950, in read_message\r\n    frame = await self.read_data_frame(max_size=max_size)\r\n  File \"/home/adrian/.local/lib/python3.7/site-packages/websockets/protocol.py\", line 971, in read_data_frame\r\n    frame = await self.read_frame(max_size)\r\n  File \"/home/adrian/.local/lib/python3.7/site-packages/websockets/protocol.py\", line 1051, in read_frame\r\n    extensions=self.extensions,\r\n  File \"/home/adrian/.local/lib/python3.7/site-packages/websockets/framing.py\", line 127, in read\r\n    f\"payload length exceeds size limit ({length} > {max_size} bytes)\"\r\nwebsockets.exceptions.PayloadTooBig: payload length exceeds size limit (8192 > 0 bytes)\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/adrian/bin/alien.py\", line 1159, in SendMsg_json\r\n    result = await wb.recv()\r\n  File \"/home/adrian/.local/lib/python3.7/site-packages/websockets/protocol.py\", line 509, in recv\r\n    await self.ensure_open()\r\n  File \"/home/adrian/.local/lib/python3.7/site-packages/websockets/protocol.py\", line 812, in ensure_open\r\n    raise self.connection_closed_exc()\r\nwebsockets.exceptions.ConnectionClosedError: code = 1006 (connection closed abnormally [internal]), no reason\r\nDEBUG:root:SendMsg_json:: Websocket connection was closed while waiting the answer. Either network problem or ALIENPY_TIMEOUT should be set >20s\r\nDEBUG:root:WB ping failed!!!\r\nERROR:root:code = 1006 (connection closed abnormally [internal]), no reason\r\n```\r\nAny idea why debugging would increase the message size? (i had 16MiB, going to 17 solved the problem). Can i monitor/record the message sizes that the client receive?\r\nThank you!\r\n\r\n\r\n   \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/723", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/723/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/723/events", "html_url": "https://github.com/aaugustin/websockets/issues/723", "id": 554356759, "node_id": "MDU6SXNzdWU1NTQzNTY3NTk=", "number": 723, "title": "Can't get simultaneous messages", "user": {"login": "ehriq", "id": 1031474, "node_id": "MDQ6VXNlcjEwMzE0NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1031474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehriq", "html_url": "https://github.com/ehriq", "followers_url": "https://api.github.com/users/ehriq/followers", "following_url": "https://api.github.com/users/ehriq/following{/other_user}", "gists_url": "https://api.github.com/users/ehriq/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehriq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehriq/subscriptions", "organizations_url": "https://api.github.com/users/ehriq/orgs", "repos_url": "https://api.github.com/users/ehriq/repos", "events_url": "https://api.github.com/users/ehriq/events{/privacy}", "received_events_url": "https://api.github.com/users/ehriq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-23T19:26:00Z", "updated_at": "2020-01-24T10:35:35Z", "closed_at": "2020-01-24T10:35:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the [interactive client](https://websockets.readthedocs.io/en/stable/intro.html#one-more-thing), I sent a message to a server, and then received two simultaneous messages, both messages are displayed correctly. \r\n\r\nBut implementing my code, using:\r\n```\r\nasync def get_data():\r\n    async with websockets.connect(uri) as ws:        \r\n        b = json.dumps({  \r\n            \"data\": '1234'\r\n        })        \r\n        await ws.send(b)\r\n        async for message in ws:\r\n            print(message)\r\n\r\nm = asyncio.get_event_loop().run_until_complete(get_data())\r\n```\r\nit only returns the last message. And I can't find a way to get the first message sent.\r\n\r\nIt's expected? How can I read the first message?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/722", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/722/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/722/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/722/events", "html_url": "https://github.com/aaugustin/websockets/issues/722", "id": 553423245, "node_id": "MDU6SXNzdWU1NTM0MjMyNDU=", "number": 722, "title": "growing number of threads", "user": {"login": "adrug1", "id": 33422446, "node_id": "MDQ6VXNlcjMzNDIyNDQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/33422446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adrug1", "html_url": "https://github.com/adrug1", "followers_url": "https://api.github.com/users/adrug1/followers", "following_url": "https://api.github.com/users/adrug1/following{/other_user}", "gists_url": "https://api.github.com/users/adrug1/gists{/gist_id}", "starred_url": "https://api.github.com/users/adrug1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adrug1/subscriptions", "organizations_url": "https://api.github.com/users/adrug1/orgs", "repos_url": "https://api.github.com/users/adrug1/repos", "events_url": "https://api.github.com/users/adrug1/events{/privacy}", "received_events_url": "https://api.github.com/users/adrug1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-22T09:47:20Z", "updated_at": "2020-01-23T20:48:39Z", "closed_at": "2020-01-23T20:48:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "This example forces an exception immediately after the connection. In logs, the connection shuts down correctly. Still, I end up creating a new thread upon every connection - the docs suggest everything should shut down nicely when I exit the context manager.\r\n\r\nCode:\r\n```import websockets\r\nimport asyncio\r\nimport logging\r\nuri = \"wss://echo.websocket.org\"\r\n\r\nlogging.basicConfig(format='%(asctime)s %(levelname)s %(name)s: %(message)s')\r\nlogger = logging.getLogger('websockets')\r\nlogger.setLevel(logging.DEBUG)\r\n\r\nasync def ws():\r\n    while True:\r\n        async with websockets.connect(uri=uri) as websocket:\r\n            try:\r\n                raise ValueError\r\n            except:\r\n                print('Exception thrown')\r\n            print('Exiting...')\r\n\r\nasync def main():\r\n    ws_task_error = loop.create_task(ws())\r\n    await asyncio.wait([ws_task_error], return_when=asyncio.FIRST_EXCEPTION)\r\n\r\nif __name__ == '__main__':\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(main())\r\n```\r\n\r\nOutput:\r\n\r\n```2020-01-21 10:44:04,710 DEBUG websockets.protocol: client - state = CONNECTING\r\n2020-01-21 10:44:04,908 DEBUG websockets.protocol: client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x00000210389E6828>)\r\n2020-01-21 10:44:05,001 DEBUG websockets.protocol: client - state = OPEN\r\nException thrown\r\nExiting...\r\n2020-01-21 10:44:05,003 DEBUG websockets.protocol: client - state = CLOSING\r\n2020-01-21 10:44:05,003 DEBUG websockets.protocol: client > Frame(fin=True, opcode=8, data=b'\\x03\\xe8', rsv1=False, rsv2=False, rsv3=False)\r\n2020-01-21 10:44:05,098 DEBUG websockets.protocol: client < Frame(fin=True, opcode=8, data=b'\\x03\\xe8', rsv1=False, rsv2=False, rsv3=False)\r\n2020-01-21 10:44:05,099 DEBUG websockets.protocol: client - event = connection_lost(None)\r\n2020-01-21 10:44:05,100 DEBUG websockets.protocol: client - state = CLOSED\r\n2020-01-21 10:44:05,100 DEBUG websockets.protocol: client x code = 1000, reason = [no reason]\r\n2020-01-21 10:44:05,100 DEBUG websockets.protocol: client x closing TCP connection\r\n2020-01-21 10:44:05,193 DEBUG websockets.protocol: client - state = CONNECTING\r\n2020-01-21 10:44:05,393 DEBUG websockets.protocol: client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x0000021038AB2908>)\r\n2020-01-21 10:44:05,482 DEBUG websockets.protocol: client - state = OPEN\r\nException thrown\r\nExiting...\r\n2020-01-21 10:44:05,489 DEBUG websockets.protocol: client - state = CLOSING\r\n2020-01-21 10:44:05,489 DEBUG websockets.protocol: client > Frame(fin=True, opcode=8, data=b'\\x03\\xe8', rsv1=False, rsv2=False, rsv3=False)\r\n2020-01-21 10:44:05,580 DEBUG websockets.protocol: client < Frame(fin=True, opcode=8, data=b'\\x03\\xe8', rsv1=False, rsv2=False, rsv3=False)\r\n2020-01-21 10:44:05,581 DEBUG websockets.protocol: client - event = connection_lost(None)\r\n2020-01-21 10:44:05,582 DEBUG websockets.protocol: client - state = CLOSED\r\n2020-01-21 10:44:05,582 DEBUG websockets.protocol: client x code = 1000, reason = [no reason]\r\n2020-01-21 10:44:05,583 DEBUG websockets.protocol: client x closing TCP connection\r\n2020-01-21 10:44:05,670 DEBUG websockets.protocol: client - state = CONNECTING\r\n2020-01-21 10:44:05,863 DEBUG websockets.protocol: client - event = connection_made(<asyncio.sslproto._SSLProtocolTransport object at 0x0000021038AB2B70>)\r\n2020-01-21 10:44:05,950 DEBUG websockets.protocol: client - state = OPEN\r\nException thrown\r\nExiting...\r\n2020-01-21 10:44:05,953 DEBUG websockets.protocol: client - state = CLOSING\r\n2020-01-21 10:44:05,953 DEBUG websockets.protocol: client > Frame(fin=True, opcode=8, data=b'\\x03\\xe8', rsv1=False, rsv2=False, rsv3=False)\r\n2020-01-21 10:44:06,036 DEBUG websockets.protocol: client < Frame(fin=True, opcode=8, data=b'\\x03\\xe8', rsv1=False, rsv2=False, rsv3=False)\r\n2020-01-21 10:44:06,037 DEBUG websockets.protocol: client - event = connection_lost(None)\r\n2020-01-21 10:44:06,037 DEBUG websockets.protocol: client - state = CLOSED\r\n2020-01-21 10:44:06,038 DEBUG websockets.protocol: client x code = 1000, reason = [no reason]\r\n2020-01-21 10:44:06,039 DEBUG websockets.protocol: client x closing TCP connection\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/721", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/721/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/721/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/721/events", "html_url": "https://github.com/aaugustin/websockets/issues/721", "id": 550972963, "node_id": "MDU6SXNzdWU1NTA5NzI5NjM=", "number": 721, "title": "Get socket or ssl_context from WebSocketClientProtocol?", "user": {"login": "adriansev", "id": 378882, "node_id": "MDQ6VXNlcjM3ODg4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/378882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adriansev", "html_url": "https://github.com/adriansev", "followers_url": "https://api.github.com/users/adriansev/followers", "following_url": "https://api.github.com/users/adriansev/following{/other_user}", "gists_url": "https://api.github.com/users/adriansev/gists{/gist_id}", "starred_url": "https://api.github.com/users/adriansev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adriansev/subscriptions", "organizations_url": "https://api.github.com/users/adriansev/orgs", "repos_url": "https://api.github.com/users/adriansev/repos", "events_url": "https://api.github.com/users/adriansev/events{/privacy}", "received_events_url": "https://api.github.com/users/adriansev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-16T18:15:06Z", "updated_at": "2020-01-18T08:49:37Z", "closed_at": "2020-01-17T12:09:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Is there a way to recover the socket or ssl_context from client WebSocketClientProtocol?\r\nI would like to identify the client certificate used to make the connection but i have only the created websocket connection. I tried to look with inspect and list various object from within but no luck so far.\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/719", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/719/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/719/events", "html_url": "https://github.com/aaugustin/websockets/issues/719", "id": 550089960, "node_id": "MDU6SXNzdWU1NTAwODk5NjA=", "number": 719, "title": "relation of ping_interval with ping_timeout", "user": {"login": "adriansev", "id": 378882, "node_id": "MDQ6VXNlcjM3ODg4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/378882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adriansev", "html_url": "https://github.com/adriansev", "followers_url": "https://api.github.com/users/adriansev/followers", "following_url": "https://api.github.com/users/adriansev/following{/other_user}", "gists_url": "https://api.github.com/users/adriansev/gists{/gist_id}", "starred_url": "https://api.github.com/users/adriansev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adriansev/subscriptions", "organizations_url": "https://api.github.com/users/adriansev/orgs", "repos_url": "https://api.github.com/users/adriansev/repos", "events_url": "https://api.github.com/users/adriansev/events{/privacy}", "received_events_url": "https://api.github.com/users/adriansev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-15T10:13:31Z", "updated_at": "2020-01-16T08:01:17Z", "closed_at": "2020-01-15T21:27:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Is there (or is it required) any relation between ping_interval and ping_timeout?\r\nIf i have a ping_interval of 10 and ping_timeout of 20 are the pongs strictly linked to the ping that was send, so if the ping_timeout is reached, is for the ping from 20s ago?\r\nIs there any recommendation about this? (like keep them the same size?)\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/717", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/717/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/717/events", "html_url": "https://github.com/aaugustin/websockets/issues/717", "id": 549031438, "node_id": "MDU6SXNzdWU1NDkwMzE0Mzg=", "number": 717, "title": "send() doesn't raise a exceptions.ConnectionClosed() like recv() does", "user": {"login": "MaartenUreel", "id": 1901942, "node_id": "MDQ6VXNlcjE5MDE5NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1901942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaartenUreel", "html_url": "https://github.com/MaartenUreel", "followers_url": "https://api.github.com/users/MaartenUreel/followers", "following_url": "https://api.github.com/users/MaartenUreel/following{/other_user}", "gists_url": "https://api.github.com/users/MaartenUreel/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaartenUreel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaartenUreel/subscriptions", "organizations_url": "https://api.github.com/users/MaartenUreel/orgs", "repos_url": "https://api.github.com/users/MaartenUreel/repos", "events_url": "https://api.github.com/users/MaartenUreel/events{/privacy}", "received_events_url": "https://api.github.com/users/MaartenUreel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-13T16:10:16Z", "updated_at": "2020-01-14T21:48:58Z", "closed_at": "2020-01-14T20:06:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are building something that passes on events from an event system to a websocket.\r\nBecause events keep coming, we want to keep the websocket open for as long as possible, instead of opening/closing the connection for every event.\r\n\r\nHowever, if we restart the server in between, it is not detected.\r\n\r\nI tried something like this;\r\n```python\r\n# Send to websocket\r\ntry:\r\n    await ws_connections[domain].send(raw_json_event)\r\nexcept (websockets.exceptions.ConnectionClosed, KeyError) as ex:\r\nlogging.info(\r\n    \"Received ex of type %s, restart WebSocket connection\", type(ex)\r\n)\r\n\r\n# (Re-)connect to websocket\r\nuri = FS_ESL_WEBSOCKET_URI % ws_channel\r\n\r\nws_connections[domain] = await websockets.connect(uri)\r\nlogging.info(\"Created websocket connection to channel %s\", uri)\r\n\r\n# (Re-)send message\r\nawait ws_connections[domain].send(raw_json_event)\r\n```\r\n\r\nThat doesn't do it. If I add recv() after every send():\r\n```python\r\ntry:\r\n    await ws_connections[domain].send(raw_json_event)\r\n    await ws_connections[domain].recv()\r\nexcept (websockets.exceptions.ConnectionClosed, KeyError) as ex:\r\n``` \r\n\r\nThen the exception gets thrown. However that means that I'm receiving the event that I sent every time, while I don't need it. Wouldn't this cause needless overhead? Is there a more efficient way to handle this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/716", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/716/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/716/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/716/events", "html_url": "https://github.com/aaugustin/websockets/issues/716", "id": 546868959, "node_id": "MDU6SXNzdWU1NDY4Njg5NTk=", "number": 716, "title": "Block forever if connection closed then try to reconnect", "user": {"login": "zmrenwu", "id": 13174219, "node_id": "MDQ6VXNlcjEzMTc0MjE5", "avatar_url": "https://avatars2.githubusercontent.com/u/13174219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zmrenwu", "html_url": "https://github.com/zmrenwu", "followers_url": "https://api.github.com/users/zmrenwu/followers", "following_url": "https://api.github.com/users/zmrenwu/following{/other_user}", "gists_url": "https://api.github.com/users/zmrenwu/gists{/gist_id}", "starred_url": "https://api.github.com/users/zmrenwu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zmrenwu/subscriptions", "organizations_url": "https://api.github.com/users/zmrenwu/orgs", "repos_url": "https://api.github.com/users/zmrenwu/repos", "events_url": "https://api.github.com/users/zmrenwu/events{/privacy}", "received_events_url": "https://api.github.com/users/zmrenwu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943708, "node_id": "MDU6TGFiZWwzMzk0MzcwOA==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/invalid", "name": "invalid", "color": "f9d0c4", "default": true, "description": ""}, {"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-08T13:43:43Z", "updated_at": "2020-01-25T17:01:31Z", "closed_at": "2020-01-25T17:00:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. Connecting to an echo server: ws://demos.kaazing.com/echo\r\n2. Sending message and receive back periodically\r\n3. Turning off the Internet, therefore connection to ws://demos.kaazing.com/echo closed\r\n4. Disconnection detected and try to restart above task\r\n5. Recover the internet connection\r\n6. Block forever at `await close()` or `await connect()` (if skip await close()).\r\n\r\nLet me show you a simple example:\r\n\r\n```python\r\nimport asyncio\r\nimport logging\r\nimport random\r\nimport websockets\r\n\r\nlogger = logging.getLogger(\"websockets\")\r\nlogger.setLevel(logging.DEBUG)\r\nlogger.addHandler(logging.StreamHandler())\r\n\r\n\r\nclass ReconnectExample:\r\n    def __init__(self):\r\n        self.sock = None\r\n        self.uri = \"ws://demos.kaazing.com/echo\"\r\n        self.consume_task = None\r\n\r\n    async def connect(self):\r\n        self.sock = await websockets.connect(self.uri, close_timeout=3)\r\n        logger.info(\"Connect -> %s successfully.\", self.uri)\r\n\r\n    async def consume(self):\r\n        try:\r\n            while True:\r\n                await self.sock.send(\"hello \" + str(random.randint(1, 100)))\r\n                msg = await self.sock.recv()\r\n                print(msg)\r\n                await asyncio.sleep(3)\r\n        except websockets.ConnectionClosedError as e:\r\n            logger.exception(e)\r\n            logger.info(\"Detect websocket connection closed, restating...\")\r\n\r\n            cnt = 3\r\n            while cnt > 0:\r\n                try:\r\n                    await asyncio.wait_for(self.restart(), timeout=5)\r\n                    break\r\n                except asyncio.TimeoutError:\r\n                    logger.debug(\"Restarting failed, retry (%s times left)\", cnt)\r\n                    cnt -= 1\r\n\r\n    async def start(self):\r\n        await self.connect()\r\n        self.consume_task = asyncio.create_task(self.consume())\r\n        logger.info(\"Started!\")\r\n\r\n    async def stop(self):\r\n        try:\r\n            self.consume_task.cancel()\r\n        except asyncio.CancelledError:\r\n            logger.debug(\"Consume task has already been cancelled.\")\r\n        # await self.sock.close()\r\n        logger.info(\"Stopped!\")\r\n\r\n    async def restart(self):\r\n        await self.stop()\r\n        await self.start()\r\n        logger.info(\"Restarted!\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app = ReconnectExample()\r\n    loop = asyncio.get_event_loop()\r\n    loop.set_debug(True)\r\n\r\n    try:\r\n        loop.create_task(app.start())\r\n        loop.run_forever()\r\n    except Exception as e:\r\n        print(e)\r\n    finally:\r\n        loop.close()\r\n\r\n```\r\n\r\nThe debug logs:\r\n```\r\nclient - state = CONNECTING\r\nclient - event = connection_made(<_SelectorSocketTransport fd=648 read=idle write=<idle, bufsize=0>>)\r\nclient > GET /echo HTTP/1.1\r\nclient > Headers([('Host', 'demos.kaazing.com'), ('Upgrade', 'websocket'), ('Connection', 'Upgrade'), ('Sec-WebSocket-Key', 'XyaKAATatv8patdukWrdfQ=='), ('Sec-WebSocket-Version', '13'), ('Sec-WebSocket-Extensions', 'permessage-deflate; client_max_window_bits'), ('User-Agent', 'Python/3.7 websockets/8.1')])\r\nclient - event = data_received(<201 bytes>)\r\nclient < HTTP/1.1 101 Web Socket Protocol Handshake\r\nclient < Headers([('Connection', 'Upgrade'), ('Date', 'Wed, 08 Jan 2020 13:07:14 GMT'), ('Sec-WebSocket-Accept', 'b3QRd3fV+zebEMJDbEb+14lTdw0='), ('Server', 'Kaazing Gateway'), ('Upgrade', 'websocket')])\r\nclient - state = OPEN\r\nConnect -> ws://demos.kaazing.com/echo successfully.\r\nStarted!\r\nclient > Frame(fin=True, opcode=1, data=b'hello 59', rsv1=False, rsv2=False, rsv3=False)\r\nhello 59\r\nclient - event = data_received(<10 bytes>)\r\nclient < Frame(fin=True, opcode=1, data=b'hello 59', rsv1=False, rsv2=False, rsv3=False)\r\nclient > Frame(fin=True, opcode=1, data=b'hello 36', rsv1=False, rsv2=False, rsv3=False)\r\nclient - event = data_received(<10 bytes>)\r\nhello 36\r\nclient < Frame(fin=True, opcode=1, data=b'hello 36', rsv1=False, rsv2=False, rsv3=False)\r\nclient > Frame(fin=True, opcode=1, data=b'hello 49', rsv1=False, rsv2=False, rsv3=False)\r\nclient - event = data_received(<10 bytes>)\r\nclient < Frame(fin=True, opcode=1, data=b'hello 49', rsv1=False, rsv2=False, rsv3=False)\r\nhello 49\r\nclient > Frame(fin=True, opcode=1, data=b'hello 53', rsv1=False, rsv2=False, rsv3=False)\r\nclient > Frame(fin=True, opcode=9, data=b'+\\xa9j7', rsv1=False, rsv2=False, rsv3=False)\r\nclient - event = connection_lost([WinError 10054] An existing connection was forcibly closed by the remote host)\r\nclient - state = CLOSED\r\nclient x code = 1006, reason = [no reason]\r\nclient - aborted pending ping: 2ba96a37\r\nclient ! failing CLOSED WebSocket connection with code 1006\r\ncode = 1006 (connection closed abnormally [internal]), no reason\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\user\\.virtualenvs\\intella-yEnSJRcR\\lib\\site-packages\\websockets\\protocol.py\", line 827, in transfer_data\r\n    message = await self.read_message()\r\n  File \"C:\\Users\\user\\.virtualenvs\\intella-yEnSJRcR\\lib\\site-packages\\websockets\\protocol.py\", line 895, in read_message\r\n    frame = await self.read_data_frame(max_size=self.max_size)\r\n  File \"C:\\Users\\user\\.virtualenvs\\intella-yEnSJRcR\\lib\\site-packages\\websockets\\protocol.py\", line 971, in read_data_frame\r\n    frame = await self.read_frame(max_size)\r\n  File \"C:\\Users\\user\\.virtualenvs\\intella-yEnSJRcR\\lib\\site-packages\\websockets\\protocol.py\", line 1051, in read_frame\r\n    extensions=self.extensions,\r\n  File \"C:\\Users\\user\\.virtualenvs\\intella-yEnSJRcR\\lib\\site-packages\\websockets\\framing.py\", line 105, in read\r\n    data = await reader(2)\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\Lib\\asyncio\\streams.py\", line 679, in readexactly\r\n    await self._wait_for_data('readexactly')\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\Lib\\asyncio\\streams.py\", line 473, in _wait_for_data\r\n    await self._waiter\r\n  File \"C:\\Users\\user\\AppData\\Local\\Programs\\Python\\Python37\\Lib\\asyncio\\selector_events.py\", line 804, in _read_ready__data_received\r\n    data = self._sock.recv(self.max_size)\r\nConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:/Users/user/SpaceLocal/Workspace/L_Work/intella/intella/reconnect_test.py\", line 25, in consume\r\n    msg = await self.sock.recv()\r\n  File \"C:\\Users\\user\\.virtualenvs\\intella-yEnSJRcR\\lib\\site-packages\\websockets\\protocol.py\", line 509, in recv\r\n    await self.ensure_open()\r\n  File \"C:\\Users\\user\\.virtualenvs\\intella-yEnSJRcR\\lib\\site-packages\\websockets\\protocol.py\", line 803, in ensure_open\r\n    raise self.connection_closed_exc()\r\nwebsockets.exceptions.ConnectionClosedError: code = 1006 (connection closed abnormally [internal]), no reason\r\nDetect websocket connection closed, restating...\r\nStopped!\r\n(blocked at await self.connect() forever)\r\n```\r\n\r\nLooks like `await asyncio.wait_for(self.restart(), timeout=5)` doesn't throw the TimeoutError.\r\n```\r\n            while cnt > 0:\r\n                try:\r\n                    await asyncio.wait_for(self.restart(), timeout=5)\r\n                    break\r\n                except asyncio.TimeoutError:\r\n                    logger.debug(\"Restarting failed, retry (%s times left)\", cnt)\r\n                    cnt -= 1\r\n```\r\nThe expected behavior is restart the app after recovering the internet connection or failed after 3 times retrying.\r\nWhat's the problem, I have no idea how to debug it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/715", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/715/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/715/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/715/events", "html_url": "https://github.com/aaugustin/websockets/issues/715", "id": 545347208, "node_id": "MDU6SXNzdWU1NDUzNDcyMDg=", "number": 715, "title": "AttributeError: module 'websockets' has no attribute 'send'", "user": {"login": "sxv", "id": 1425091, "node_id": "MDQ6VXNlcjE0MjUwOTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1425091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sxv", "html_url": "https://github.com/sxv", "followers_url": "https://api.github.com/users/sxv/followers", "following_url": "https://api.github.com/users/sxv/following{/other_user}", "gists_url": "https://api.github.com/users/sxv/gists{/gist_id}", "starred_url": "https://api.github.com/users/sxv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sxv/subscriptions", "organizations_url": "https://api.github.com/users/sxv/orgs", "repos_url": "https://api.github.com/users/sxv/repos", "events_url": "https://api.github.com/users/sxv/events{/privacy}", "received_events_url": "https://api.github.com/users/sxv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-04T23:55:40Z", "updated_at": "2020-01-05T19:58:33Z", "closed_at": "2020-01-05T19:58:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Fresh install. Trying out the browser example:\r\n```\r\n#!/usr/bin/env python\r\n\r\n# WS server that sends messages at random intervals\r\n\r\nimport asyncio\r\nimport datetime\r\nimport random\r\nimport websockets\r\n\r\nasync def time(websocket, path):\r\n    while True:\r\n        now = datetime.datetime.utcnow().isoformat() + \"Z\"\r\n        await websockets.send(now)\r\n        await asyncio.sleep(random.random() * 3)\r\n\r\nstart_server = websockets.serve(time, \"127.0.0.1\", 5678)\r\n\r\nasyncio.get_event_loop().run_until_complete(start_server)\r\nasyncio.get_event_loop().run_forever()\r\n```\r\n\r\nWhen webpage is loaded, server fails with:\r\n\r\n```\r\npython serverws.py \r\nError in connection handler\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/websockets/server.py\", line 191, in handler\r\n    await self.ws_handler(self, path)\r\n  File \"serverws.py\", line 11, in time\r\n    await websockets.send(now)\r\nAttributeError: module 'websockets' has no attribute 'send'\r\n```\r\n\r\nI confirmed that this attribute / function doesn't exist manually in the command-line. Ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/714", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/714/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/714/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/714/events", "html_url": "https://github.com/aaugustin/websockets/issues/714", "id": 544382313, "node_id": "MDU6SXNzdWU1NDQzODIzMTM=", "number": 714, "title": "SSL package cannot be installed", "user": {"login": "warcayac", "id": 7342885, "node_id": "MDQ6VXNlcjczNDI4ODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7342885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/warcayac", "html_url": "https://github.com/warcayac", "followers_url": "https://api.github.com/users/warcayac/followers", "following_url": "https://api.github.com/users/warcayac/following{/other_user}", "gists_url": "https://api.github.com/users/warcayac/gists{/gist_id}", "starred_url": "https://api.github.com/users/warcayac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/warcayac/subscriptions", "organizations_url": "https://api.github.com/users/warcayac/orgs", "repos_url": "https://api.github.com/users/warcayac/repos", "events_url": "https://api.github.com/users/warcayac/events{/privacy}", "received_events_url": "https://api.github.com/users/warcayac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-01T17:51:17Z", "updated_at": "2020-01-01T19:39:42Z", "closed_at": "2020-01-01T19:39:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Python 3.8 on Ubuntu-WSL. I'm trying to install package SSL but it is not possible:\r\n\r\n```\r\nSyntaxError: Missing parentheses in call to 'print'. Did you mean print('looking for', f)?\r\n----------------------------------------\r\nERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output.\r\n\r\n```\r\nThis is 'cause SSL package is not updated to work with Python 3.* however in your tutorial, you are working with it, how is it possible?\r\n\r\nCould you update your tutorial? or tell us, how did you get to install SSL package with Python 3.*? and what requirements  are needed (OS, etc.) for this packages can be installed?\r\n\r\nThanks in advance.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/713", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/713/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/713/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/713/events", "html_url": "https://github.com/aaugustin/websockets/issues/713", "id": 544109911, "node_id": "MDU6SXNzdWU1NDQxMDk5MTE=", "number": 713, "title": "About async websocket client ?", "user": {"login": "phpmaple", "id": 3366943, "node_id": "MDQ6VXNlcjMzNjY5NDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3366943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phpmaple", "html_url": "https://github.com/phpmaple", "followers_url": "https://api.github.com/users/phpmaple/followers", "following_url": "https://api.github.com/users/phpmaple/following{/other_user}", "gists_url": "https://api.github.com/users/phpmaple/gists{/gist_id}", "starred_url": "https://api.github.com/users/phpmaple/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phpmaple/subscriptions", "organizations_url": "https://api.github.com/users/phpmaple/orgs", "repos_url": "https://api.github.com/users/phpmaple/repos", "events_url": "https://api.github.com/users/phpmaple/events{/privacy}", "received_events_url": "https://api.github.com/users/phpmaple/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-31T07:06:58Z", "updated_at": "2019-12-31T14:09:19Z", "closed_at": "2019-12-31T07:15:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just confused when I need used async websocket client, and just in websocket client, because sync websocket client same to this, after every step need await", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/711", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/711/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/711/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/711/events", "html_url": "https://github.com/aaugustin/websockets/issues/711", "id": 542333643, "node_id": "MDU6SXNzdWU1NDIzMzM2NDM=", "number": 711, "title": "version 8.1 wheel for arm", "user": {"login": "transfluxus", "id": 1574219, "node_id": "MDQ6VXNlcjE1NzQyMTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1574219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/transfluxus", "html_url": "https://github.com/transfluxus", "followers_url": "https://api.github.com/users/transfluxus/followers", "following_url": "https://api.github.com/users/transfluxus/following{/other_user}", "gists_url": "https://api.github.com/users/transfluxus/gists{/gist_id}", "starred_url": "https://api.github.com/users/transfluxus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/transfluxus/subscriptions", "organizations_url": "https://api.github.com/users/transfluxus/orgs", "repos_url": "https://api.github.com/users/transfluxus/repos", "events_url": "https://api.github.com/users/transfluxus/events{/privacy}", "received_events_url": "https://api.github.com/users/transfluxus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-25T12:26:36Z", "updated_at": "2019-12-25T15:16:50Z", "closed_at": "2019-12-25T15:16:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI just tried to install the recent version on a raspberry pi but for version 8.1 there is no arm wheel. Will that be available at some point?\r\n\r\nMerry Xmas! :) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/710", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/710/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/710/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/710/events", "html_url": "https://github.com/aaugustin/websockets/issues/710", "id": 541500751, "node_id": "MDU6SXNzdWU1NDE1MDA3NTE=", "number": 710, "title": "websockets.exceptions.ConnectionClosedError in very minimalistic example", "user": {"login": "juergendrachta", "id": 24944956, "node_id": "MDQ6VXNlcjI0OTQ0OTU2", "avatar_url": "https://avatars1.githubusercontent.com/u/24944956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/juergendrachta", "html_url": "https://github.com/juergendrachta", "followers_url": "https://api.github.com/users/juergendrachta/followers", "following_url": "https://api.github.com/users/juergendrachta/following{/other_user}", "gists_url": "https://api.github.com/users/juergendrachta/gists{/gist_id}", "starred_url": "https://api.github.com/users/juergendrachta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/juergendrachta/subscriptions", "organizations_url": "https://api.github.com/users/juergendrachta/orgs", "repos_url": "https://api.github.com/users/juergendrachta/repos", "events_url": "https://api.github.com/users/juergendrachta/events{/privacy}", "received_events_url": "https://api.github.com/users/juergendrachta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-22T21:03:51Z", "updated_at": "2019-12-22T22:11:16Z", "closed_at": "2019-12-22T22:11:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "For getting to know the websockets package, I started with a very minimal example with fails with an `ConnectionClosedError` after ~10 s.\r\nI'm using Python 3.7. \r\nI suspected, that there might be somewhere a timeout, but I haven't found anything. As far as I understood the docs, the connection should stay alive?\r\n\r\nserver.py\r\n```python\r\nimport websockets\r\nimport asyncio\r\n\r\n\r\nasync def main(ws, _):\r\n    while(True):\r\n        msg = await ws.recv()\r\n        print(msg)\r\n\r\n\r\nstart_server = websockets.serve(main, \"localhost\", \"1236\")\r\n\r\nasyncio.get_event_loop().run_until_complete(start_server)\r\nasyncio.get_event_loop().run_forever()\r\n```\r\nclient.py\r\n```python\r\nimport asyncio\r\nimport websockets\r\n\r\n\r\nasync def main():\r\n    uri = \"ws://localhost:1236\"\r\n    async with websockets.connect(uri) as ws:\r\n        while True:\r\n            await ws.send(input())\r\n\r\n\r\nasyncio.get_event_loop().run_until_complete(main())\r\n```\r\n\r\nThe full error reads\r\n```\r\nError in connection handler\r\nTraceback (most recent call last):\r\n  File \"***lib/python3.7/site-packages/websockets/protocol.py\", line 827, in transfer_data\r\n    message = await self.read_message()\r\n  File \"***lib/python3.7/site-packages/websockets/protocol.py\", line 895, in read_message\r\n    frame = await self.read_data_frame(max_size=self.max_size)\r\n  File \"***lib/python3.7/site-packages/websockets/protocol.py\", line 971, in read_data_frame\r\n    frame = await self.read_frame(max_size)\r\n  File \"***lib/python3.7/site-packages/websockets/protocol.py\", line 1051, in read_frame\r\n    extensions=self.extensions,\r\n  File \"***lib/python3.7/site-packages/websockets/framing.py\", line 105, in read\r\n    data = await reader(2)\r\n  File \"***lib/python3.7/asyncio/streams.py\", line 679, in readexactly\r\n    await self._wait_for_data('readexactly')\r\n  File \"***lib/python3.7/asyncio/streams.py\", line 473, in _wait_for_data\r\n    await self._waiter\r\nconcurrent.futures._base.CancelledError\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"***lib/python3.7/site-packages/websockets/server.py\", line 191, in handler\r\n    await self.ws_handler(self, path)\r\n  File \"/home/juergen/projects/poker/src/server/min_ex_server2.py\", line 14, in main\r\n    msg = await ws.recv()\r\n  File \"***lib/python3.7/site-packages/websockets/protocol.py\", line 509, in recv\r\n    await self.ensure_open()\r\n  File \"***lib/python3.7/site-packages/websockets/protocol.py\", line 812, in ensure_open\r\n    raise self.connection_closed_exc()\r\nwebsockets.exceptions.ConnectionClosedError: code = 1006 (connection closed abnormally [internal]), no reason\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/709", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/709/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/709/events", "html_url": "https://github.com/aaugustin/websockets/issues/709", "id": 541116385, "node_id": "MDU6SXNzdWU1NDExMTYzODU=", "number": 709, "title": "Exceptions stalling on high incoming traffic", "user": {"login": "timakro", "id": 8438790, "node_id": "MDQ6VXNlcjg0Mzg3OTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8438790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timakro", "html_url": "https://github.com/timakro", "followers_url": "https://api.github.com/users/timakro/followers", "following_url": "https://api.github.com/users/timakro/following{/other_user}", "gists_url": "https://api.github.com/users/timakro/gists{/gist_id}", "starred_url": "https://api.github.com/users/timakro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timakro/subscriptions", "organizations_url": "https://api.github.com/users/timakro/orgs", "repos_url": "https://api.github.com/users/timakro/repos", "events_url": "https://api.github.com/users/timakro/events{/privacy}", "received_events_url": "https://api.github.com/users/timakro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-20T17:47:26Z", "updated_at": "2019-12-20T20:51:22Z", "closed_at": "2019-12-20T20:51:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was at the start of writing a websocket client processing high amounts of incoming data from an external API when I noticed this unusual behavior. Exceptions thrown in the scope of the connection context manager after the high traffic started would cause the client to hang for 30 seconds until the client terminated and the traceback was printed. I managed to get the same behavior with a server running locally written with the websockets lib. Here's a minimal example to reproduce the problem:\r\n\r\nClient:\r\n\r\n```python\r\nimport asyncio\r\nimport websockets\r\n\r\nasync def hello():\r\n    uri = \"ws://localhost:8765\"\r\n    async with websockets.connect(uri) as websocket:\r\n        raise Exception(\"Bug!\")\r\n\r\nasyncio.get_event_loop().run_until_complete(hello())\r\n```\r\n\r\nServer:\r\n\r\n```python\r\nimport asyncio\r\nimport websockets\r\n\r\nasync def echo(websocket, path):\r\n    while True:\r\n        await websocket.send(\"flood\")\r\n\r\nstart_server = websockets.serve(echo, \"localhost\", 8765)\r\n\r\nasyncio.get_event_loop().run_until_complete(start_server)\r\nasyncio.get_event_loop().run_forever()\r\n```\r\n\r\nPython version: 3.8.0\r\nResult: Client hangs for 30 seconds until printing the traceback and exiting\r\nExcepted result: Client should print the traceback and exit immediately\r\n\r\nThis is mostly a problem while developing. Imagine writing logic to parse the incoming data and having to wait 30 seconds for each test to see what mistake you've made.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/708", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/708/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/708/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/708/events", "html_url": "https://github.com/aaugustin/websockets/issues/708", "id": 538215697, "node_id": "MDU6SXNzdWU1MzgyMTU2OTc=", "number": 708, "title": "Object oriented Websocket Client and Server example", "user": {"login": "pravindamodaran", "id": 52913244, "node_id": "MDQ6VXNlcjUyOTEzMjQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/52913244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pravindamodaran", "html_url": "https://github.com/pravindamodaran", "followers_url": "https://api.github.com/users/pravindamodaran/followers", "following_url": "https://api.github.com/users/pravindamodaran/following{/other_user}", "gists_url": "https://api.github.com/users/pravindamodaran/gists{/gist_id}", "starred_url": "https://api.github.com/users/pravindamodaran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pravindamodaran/subscriptions", "organizations_url": "https://api.github.com/users/pravindamodaran/orgs", "repos_url": "https://api.github.com/users/pravindamodaran/repos", "events_url": "https://api.github.com/users/pravindamodaran/events{/privacy}", "received_events_url": "https://api.github.com/users/pravindamodaran/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 279143600, "node_id": "MDU6TGFiZWwyNzkxNDM2MDA=", "url": "https://api.github.com/repos/aaugustin/websockets/labels/documentation", "name": "documentation", "color": "009800", "default": true, "description": null}, {"id": 505975878, "node_id": "MDU6TGFiZWw1MDU5NzU4Nzg=", "url": "https://api.github.com/repos/aaugustin/websockets/labels/help%20wanted", "name": "help wanted", "color": "c5def5", "default": true, "description": ""}, {"id": 1176567006, "node_id": "MDU6TGFiZWwxMTc2NTY3MDA2", "url": "https://api.github.com/repos/aaugustin/websockets/labels/low%20priority", "name": "low priority", "color": "b3f799", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-16T06:40:15Z", "updated_at": "2020-07-26T20:16:43Z", "closed_at": "2020-07-26T20:16:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to implement object oriented Websocket client and server. Since `websockets` is completely coroutine based, I'm finding it difficult to go ahead with implementation. Is it possible to wrap it around classes? Are there any examples of using it in this way?  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/707", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/707/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/707/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/707/events", "html_url": "https://github.com/aaugustin/websockets/issues/707", "id": 537961289, "node_id": "MDU6SXNzdWU1Mzc5NjEyODk=", "number": 707, "title": "how can i receive data when i am sending data continually?", "user": {"login": "loongWB", "id": 28645135, "node_id": "MDQ6VXNlcjI4NjQ1MTM1", "avatar_url": "https://avatars3.githubusercontent.com/u/28645135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loongWB", "html_url": "https://github.com/loongWB", "followers_url": "https://api.github.com/users/loongWB/followers", "following_url": "https://api.github.com/users/loongWB/following{/other_user}", "gists_url": "https://api.github.com/users/loongWB/gists{/gist_id}", "starred_url": "https://api.github.com/users/loongWB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loongWB/subscriptions", "organizations_url": "https://api.github.com/users/loongWB/orgs", "repos_url": "https://api.github.com/users/loongWB/repos", "events_url": "https://api.github.com/users/loongWB/events{/privacy}", "received_events_url": "https://api.github.com/users/loongWB/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-14T20:24:05Z", "updated_at": "2019-12-16T10:51:47Z", "closed_at": "2019-12-16T10:51:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "while True:\r\n                print(await ws.recv())\r\n                await ws.send(queue.get())\r\n                await asyncio.sleep(0.01)\r\n\r\nwhy does it go wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/706", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/706/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/706/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/706/events", "html_url": "https://github.com/aaugustin/websockets/issues/706", "id": 537955525, "node_id": "MDU6SXNzdWU1Mzc5NTU1MjU=", "number": 706, "title": "how can i receive data when i am sending data continually?", "user": {"login": "loongWB", "id": 28645135, "node_id": "MDQ6VXNlcjI4NjQ1MTM1", "avatar_url": "https://avatars3.githubusercontent.com/u/28645135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loongWB", "html_url": "https://github.com/loongWB", "followers_url": "https://api.github.com/users/loongWB/followers", "following_url": "https://api.github.com/users/loongWB/following{/other_user}", "gists_url": "https://api.github.com/users/loongWB/gists{/gist_id}", "starred_url": "https://api.github.com/users/loongWB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loongWB/subscriptions", "organizations_url": "https://api.github.com/users/loongWB/orgs", "repos_url": "https://api.github.com/users/loongWB/repos", "events_url": "https://api.github.com/users/loongWB/events{/privacy}", "received_events_url": "https://api.github.com/users/loongWB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-14T19:34:58Z", "updated_at": "2019-12-14T20:20:09Z", "closed_at": "2019-12-14T20:20:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/705", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/705/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/705/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/705/events", "html_url": "https://github.com/aaugustin/websockets/issues/705", "id": 537350771, "node_id": "MDU6SXNzdWU1MzczNTA3NzE=", "number": 705, "title": "Port sharing: Bad Gateway: /health/", "user": {"login": "enp", "id": 114859, "node_id": "MDQ6VXNlcjExNDg1OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/114859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/enp", "html_url": "https://github.com/enp", "followers_url": "https://api.github.com/users/enp/followers", "following_url": "https://api.github.com/users/enp/following{/other_user}", "gists_url": "https://api.github.com/users/enp/gists{/gist_id}", "starred_url": "https://api.github.com/users/enp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/enp/subscriptions", "organizations_url": "https://api.github.com/users/enp/orgs", "repos_url": "https://api.github.com/users/enp/repos", "events_url": "https://api.github.com/users/enp/events{/privacy}", "received_events_url": "https://api.github.com/users/enp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-13T05:05:13Z", "updated_at": "2019-12-14T19:06:30Z", "closed_at": "2019-12-14T19:06:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nTried to use example of port sharing  from  https://websockets.readthedocs.io/en/stable/deployment.html#port-sharing as is, but received:\r\n\r\n```\r\n$ curl http://127.0.0.1:8765/health/\r\nBad Gateway: /health/\r\n```\r\n\r\nCan you fix please or advice something?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/703", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/703/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/703/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/703/events", "html_url": "https://github.com/aaugustin/websockets/issues/703", "id": 537024409, "node_id": "MDU6SXNzdWU1MzcwMjQ0MDk=", "number": 703, "title": "Why does the client in this test setup disconnect after exactly 40 seconds", "user": {"login": "kramer65", "id": 596581, "node_id": "MDQ6VXNlcjU5NjU4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kramer65", "html_url": "https://github.com/kramer65", "followers_url": "https://api.github.com/users/kramer65/followers", "following_url": "https://api.github.com/users/kramer65/following{/other_user}", "gists_url": "https://api.github.com/users/kramer65/gists{/gist_id}", "starred_url": "https://api.github.com/users/kramer65/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kramer65/subscriptions", "organizations_url": "https://api.github.com/users/kramer65/orgs", "repos_url": "https://api.github.com/users/kramer65/repos", "events_url": "https://api.github.com/users/kramer65/events{/privacy}", "received_events_url": "https://api.github.com/users/kramer65/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-12T14:49:16Z", "updated_at": "2019-12-16T20:21:25Z", "closed_at": "2019-12-16T12:59:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to start using websockets for receiving a (fairly high volume) data stream. So I  set up a simple test setup as follows:\r\n\r\n`server.py`:\r\n\r\n```\r\nimport asyncio\r\nimport websockets\r\nfrom time import sleep\r\n\r\nasync def hello(websocket, path):\r\n    for i in range(10000):\r\n        await websocket.send(\"xxxxxxxxxxxxxxxxxxx\")\r\n        print(i)\r\n        sleep(1)\r\n\r\nstart_server = websockets.serve(hello, \"localhost\", 8181)\r\n\r\nasyncio.get_event_loop().run_until_complete(start_server)\r\nasyncio.get_event_loop().run_forever()\r\n```\r\n\r\n`client.py`:\r\n\r\n```\r\nimport asyncio\r\nimport websockets\r\n\r\n\r\nasync def consumer_handler():\r\n    uri = \"ws://localhost:8181\"\r\n    async with websockets.connect(uri) as websocket:\r\n        counter = 1\r\n        async for message in websocket:\r\n            print(counter, message)\r\n            counter += 1\r\n\r\nasyncio.get_event_loop().run_until_complete(consumer_handler())\r\n```\r\n\r\nThe weird thing is that after 40 seconds (40 messages) the client stops printing received messages while the server continues to print sent messages. And after another 20 seconds (by now the server is at message 60) both the client and the server stop with the following error:\r\n\r\n    websockets.exceptions.ConnectionClosedError: code = 1006 (connection closed abnormally [internal]), no reason\r\n\r\n- I tested whether it was because of the message size, by increasing the message size tenfold. But it still stops after 40 messages\r\n- I then tested whether it was because of the number of messages, by speeding up the sent messages tenfold `sleep(0.1)`. When I do this, the client stops after message 398 (and always after exactly message 398). When I set `sleep(0.01)` it stops around 3825 (or 3822 or 3826 etc.)\r\n\r\nI'm running this on Ubuntu 19.10 and also verified the same behaviour on MacOS.\r\n\r\nDoes anybody know why this stops after 40 seconds? Am I missing a setting somewhere?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/702", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/702/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/702/events", "html_url": "https://github.com/aaugustin/websockets/issues/702", "id": 536699409, "node_id": "MDU6SXNzdWU1MzY2OTk0MDk=", "number": 702, "title": "Portforwarding not working", "user": {"login": "infyDavis", "id": 48572544, "node_id": "MDQ6VXNlcjQ4NTcyNTQ0", "avatar_url": "https://avatars3.githubusercontent.com/u/48572544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/infyDavis", "html_url": "https://github.com/infyDavis", "followers_url": "https://api.github.com/users/infyDavis/followers", "following_url": "https://api.github.com/users/infyDavis/following{/other_user}", "gists_url": "https://api.github.com/users/infyDavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/infyDavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/infyDavis/subscriptions", "organizations_url": "https://api.github.com/users/infyDavis/orgs", "repos_url": "https://api.github.com/users/infyDavis/repos", "events_url": "https://api.github.com/users/infyDavis/events{/privacy}", "received_events_url": "https://api.github.com/users/infyDavis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-12T01:10:44Z", "updated_at": "2019-12-12T20:05:26Z", "closed_at": "2019-12-12T20:05:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the simple echo server running remotely and trying to portforward the websocket port to my local machine. I try to run the client locally to send and receive a message but I keep getting this error.\r\n\r\n``OSError: [Errno 10049] Connect call failed ('0.0.0.0', 8765)```\r\n\r\nI'm basically using the simple server and client scripts found in the readme.\r\n\r\nIf i run the same server and client script on the remote server, it works. just not when I try to portforward the port.\r\n\r\nIs there anything I have to change about the server?\r\n\r\nHere is the server code:\r\n\r\n```\r\n#!/usr/bin/env python\r\n\r\n# WS server example\r\n\r\nimport asyncio\r\nimport websockets\r\n\r\nasync def hello(websocket, path):\r\n    name = await websocket.recv()\r\n    print(f\"< {name}\")\r\n\r\n    greeting = f\"Hello {name}!\"\r\n\r\n    await websocket.send(greeting)\r\n    print(f\"> {greeting}\")\r\n\r\nheader = {'Access-Control-Allow-Origin' : '*'}\r\nstart_server = websockets.serve(hello, \"0.0.0.0\", 8765, extra_headers=header)\r\n\r\nasyncio.get_event_loop().run_until_complete(start_server)\r\nasyncio.get_event_loop().run_forever()\r\n\r\n```\r\n\r\nAnd here is the client I'm using:\r\n```\r\n#!/usr/bin/env python\r\n\r\n# WS client example\r\n\r\nimport asyncio\r\nimport websockets\r\n\r\nasync def hello():\r\n    uri = \"ws://0.0.0.0:8765\"\r\n    async with websockets.connect(uri) as websocket:\r\n        #name = input(\"What's your name? \")\r\n        name = 'Davis'\r\n\r\n        await websocket.send(name)\r\n        print(f\"> {name}\")\r\n\r\n        greeting = await websocket.recv()\r\n        print(f\"< {greeting}\")\r\n\r\nasyncio.get_event_loop().run_until_complete(hello())\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/701", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/701/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/701/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/701/events", "html_url": "https://github.com/aaugustin/websockets/issues/701", "id": 536486564, "node_id": "MDU6SXNzdWU1MzY0ODY1NjQ=", "number": 701, "title": "How to safely write async code that saves to a Django db?", "user": {"login": "kramer65", "id": 596581, "node_id": "MDQ6VXNlcjU5NjU4MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/596581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kramer65", "html_url": "https://github.com/kramer65", "followers_url": "https://api.github.com/users/kramer65/followers", "following_url": "https://api.github.com/users/kramer65/following{/other_user}", "gists_url": "https://api.github.com/users/kramer65/gists{/gist_id}", "starred_url": "https://api.github.com/users/kramer65/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kramer65/subscriptions", "organizations_url": "https://api.github.com/users/kramer65/orgs", "repos_url": "https://api.github.com/users/kramer65/repos", "events_url": "https://api.github.com/users/kramer65/events{/privacy}", "received_events_url": "https://api.github.com/users/kramer65/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-11T16:37:40Z", "updated_at": "2019-12-12T20:07:58Z", "closed_at": "2019-12-12T10:50:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "From a Django project I want to use this library to connect to an external websocket endpoint which will provide a constant data stream. Since the stream is rather high volume I would like to use an async way of doing this. In the Django Channels project [I read](https://channels.readthedocs.io/en/latest/tutorial/part_2.html) that\r\n\r\n> any asynchronous consumer must be careful to avoid directly performing blocking operations, such as accessing a Django model.\r\n\r\nOn [this page](https://channels.readthedocs.io/en/latest/topics/databases.html) a way of saving models to the database in an async way is explained using the Django Channels `database_sync_to_async` method.\r\n\r\nWhat is the way of doing this using this websockets lib?\r\n\r\nDoes anybody know of any example code showing how to save models async while keeping it thread safe?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/700", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/700/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/700/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/700/events", "html_url": "https://github.com/aaugustin/websockets/issues/700", "id": 535531581, "node_id": "MDU6SXNzdWU1MzU1MzE1ODE=", "number": 700, "title": "Unable to unregister clients when using a queue based consumer/producer", "user": {"login": "hjpotter92", "id": 3393533, "node_id": "MDQ6VXNlcjMzOTM1MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3393533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjpotter92", "html_url": "https://github.com/hjpotter92", "followers_url": "https://api.github.com/users/hjpotter92/followers", "following_url": "https://api.github.com/users/hjpotter92/following{/other_user}", "gists_url": "https://api.github.com/users/hjpotter92/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjpotter92/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjpotter92/subscriptions", "organizations_url": "https://api.github.com/users/hjpotter92/orgs", "repos_url": "https://api.github.com/users/hjpotter92/repos", "events_url": "https://api.github.com/users/hjpotter92/events{/privacy}", "received_events_url": "https://api.github.com/users/hjpotter92/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-12-10T06:50:10Z", "updated_at": "2019-12-12T20:04:19Z", "closed_at": "2019-12-10T08:04:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Taking inspiration from [this post][1], I built a small threaded websocket server:\r\n\r\n```python\r\nclass WebsocketServer:\r\n    def __init__(self, db_session=None):\r\n        self.loop = asyncio.new_event_loop()\r\n        self.db_session = db_session\r\n        self.clients = set()\r\n\r\n    def serve_forever(self):\r\n        asyncio.set_event_loop(self.loop)\r\n        server = websockets.serve(self.handler, '', Config.SERVER_PORT)\r\n        print(f\"Started websocket server on {Config.SERVER_PORT}\")\r\n        asyncio.get_event_loop().run_until_complete(server)\r\n        asyncio.get_event_loop().run_forever()\r\n\r\n    async def handler(self, websocket, path):\r\n        print(f\"Received websocket client on {path}\")\r\n        self.clients.add(websocket)\r\n        loop = asyncio.get_event_loop()\r\n        master = SessionService(websocket, self.db_session)\r\n        await master.send_session()\r\n        try:\r\n            while True:\r\n                listener_task = asyncio.ensure_future(master.get_message())\r\n                producer_task = asyncio.ensure_future(master.produce())\r\n                done, pending = await asyncio.wait(\r\n                    [listener_task, producer_task],\r\n                    return_when=asyncio.FIRST_COMPLETED,\r\n                )\r\n                if listener_task in done:\r\n                    await master.consume()\r\n                else:\r\n                    listener_task.cancel()\r\n                if producer_task in done:\r\n                    if producer_task.result():\r\n                        await master.send_message()\r\n                else:\r\n                    print(\"Cancelling producer\")\r\n                    producer_task.cancel()\r\n        finally:\r\n            self.clients.remove(websocket)\r\n```\r\n\r\nwhere `SessionService` class creates and maintains websocket sessions inside a db.\r\n\r\n```python\r\nclass SessionService:\r\n    def __init__(self, websocket, db):\r\n        self.incoming = asyncio.Queue()\r\n        self.outgoing = asyncio.Queue()\r\n        self.ws = websocket\r\n        self.db = db\r\n\r\n    async def send_session(self):\r\n        session = self._create_object(\r\n            Session,\r\n            ip_addr=self.ws.remote_address[0],\r\n        )\r\n        await self.ws.send(f'{{\"session_id\": \"{session.id}\"}}')\r\n\r\n    async def get_message(self):\r\n        self.incoming.append(self.ws.recv())\r\n\r\n    async def send_message(self):\r\n        self.ws.send(self.outgoing.pop(0))\r\n\r\n    async def consume(self):\r\n        self.outgoing.append(self.incoming.pop(0))\r\n\r\n    async def produce(self):\r\n        if self.outgoing:\r\n            return True\r\n```\r\n\r\nIn this, while new clients are getting added to the `clients` set, disconnected clients are not being removed.\r\n\r\nAm I doing something wrong? I think this is due to the `while True:` block just inside my `try-finally` clause.\r\n\r\n  [1]: https://stackoverflow.com/q/40723047/1190388", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/699", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/699/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/699/events", "html_url": "https://github.com/aaugustin/websockets/issues/699", "id": 534543569, "node_id": "MDU6SXNzdWU1MzQ1NDM1Njk=", "number": 699, "title": "Increasing number of asyncio tasks causing memory leak", "user": {"login": "levesquejf", "id": 28109127, "node_id": "MDQ6VXNlcjI4MTA5MTI3", "avatar_url": "https://avatars0.githubusercontent.com/u/28109127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/levesquejf", "html_url": "https://github.com/levesquejf", "followers_url": "https://api.github.com/users/levesquejf/followers", "following_url": "https://api.github.com/users/levesquejf/following{/other_user}", "gists_url": "https://api.github.com/users/levesquejf/gists{/gist_id}", "starred_url": "https://api.github.com/users/levesquejf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/levesquejf/subscriptions", "organizations_url": "https://api.github.com/users/levesquejf/orgs", "repos_url": "https://api.github.com/users/levesquejf/repos", "events_url": "https://api.github.com/users/levesquejf/events{/privacy}", "received_events_url": "https://api.github.com/users/levesquejf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-08T13:41:52Z", "updated_at": "2019-12-25T15:27:24Z", "closed_at": "2019-12-25T15:27:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Websockets client that is always running. Once in a while, the client is disconnected from the server. It\u2019s either because of network issues between the client and the server or because it is connected for too long and the client just reconnects to balance the charge on the servers. The client automatically reconnects to the server. I am using the `websockets.connect()` context to build the connection.\r\n\r\nAfter a few weeks, the number of asyncio tasks is very high. When I list the tasks with `asyncio.Task.all_tasks()`, I see hundreds of websocket finished tasks:\r\n\r\n- `WebSocketCommonProtocol.close_connection()`\r\n- `WebSocketCommonProtocol.transfer_data()`\r\n\r\nI am running Python 3.6.9 and Websockets 8.1. Any idea what could be the cause and how to troubleshoot further?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/698", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/698/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/698/events", "html_url": "https://github.com/aaugustin/websockets/issues/698", "id": 534407396, "node_id": "MDU6SXNzdWU1MzQ0MDczOTY=", "number": 698, "title": "How to send and receive messages at the same time on server", "user": {"login": "YayuanZhang", "id": 16955513, "node_id": "MDQ6VXNlcjE2OTU1NTEz", "avatar_url": "https://avatars3.githubusercontent.com/u/16955513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YayuanZhang", "html_url": "https://github.com/YayuanZhang", "followers_url": "https://api.github.com/users/YayuanZhang/followers", "following_url": "https://api.github.com/users/YayuanZhang/following{/other_user}", "gists_url": "https://api.github.com/users/YayuanZhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/YayuanZhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YayuanZhang/subscriptions", "organizations_url": "https://api.github.com/users/YayuanZhang/orgs", "repos_url": "https://api.github.com/users/YayuanZhang/repos", "events_url": "https://api.github.com/users/YayuanZhang/events{/privacy}", "received_events_url": "https://api.github.com/users/YayuanZhang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-07T14:19:46Z", "updated_at": "2019-12-08T16:58:25Z", "closed_at": "2019-12-08T16:58:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I want to implement a function which can  send and receive messages to a client in one connection at  the same time on server. However, in the the ' while True' loop of the recv logic, the 'websocket.recv()' in fact blocks the loop.\r\n\r\n```\r\nasync def echo(websocket, path):\r\n    while True:\r\n        recv_text=await websocket.recv()\r\n      #I don't know how to add the send logic here \r\n      #bcause I don't know how to how to make the websocket.recv() none-blocking\r\n\r\nasyncio.get_event_loop().run_until_complete(\r\n    websockets.serve(echo, 'localhost', 8765))\r\nasyncio.get_event_loop().run_forever()\r\n\r\n```\r\n\r\nI tried some ways to solve the question, using multiple tasks, threadings but all failed.\r\nFinally it comes out as follows\r\n\r\n```\r\nasync def echo(websocket, path):\r\n    while True:\r\n        try:\r\n            recv_text=await asyncio.wait_for(websocket.recv(), timeout=0)\r\n        except (asyncio.TimeoutError, ConnectionRefusedError):\r\n            print('timeout')\r\n        websocket.send('some other messages')\r\n\r\nasyncio.get_event_loop().run_until_complete(\r\n    websockets.serve(echo, 'localhost', 8765))\r\nasyncio.get_event_loop().run_forever()\r\n```\r\n\r\nIt works. However,  I'm confused why it works.  Is there a more elegant way to realize the function? Hope I made myself clear.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/697", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/697/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/697/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/697/events", "html_url": "https://github.com/aaugustin/websockets/issues/697", "id": 531838647, "node_id": "MDU6SXNzdWU1MzE4Mzg2NDc=", "number": 697, "title": "async with websockets.connect(uri) as ws:\u5199\u5728\u5faa\u73af\u5916\u90e8\uff0130\u79d2\u5de6\u53f3\u5c31\u65ad\u5f00\u8fde\u63a5\uff0c\u62a51006\u9519\u8bef\uff01", "user": {"login": "yazhoushi", "id": 31174313, "node_id": "MDQ6VXNlcjMxMTc0MzEz", "avatar_url": "https://avatars1.githubusercontent.com/u/31174313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yazhoushi", "html_url": "https://github.com/yazhoushi", "followers_url": "https://api.github.com/users/yazhoushi/followers", "following_url": "https://api.github.com/users/yazhoushi/following{/other_user}", "gists_url": "https://api.github.com/users/yazhoushi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yazhoushi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yazhoushi/subscriptions", "organizations_url": "https://api.github.com/users/yazhoushi/orgs", "repos_url": "https://api.github.com/users/yazhoushi/repos", "events_url": "https://api.github.com/users/yazhoushi/events{/privacy}", "received_events_url": "https://api.github.com/users/yazhoushi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-12-03T09:19:41Z", "updated_at": "2019-12-09T09:19:36Z", "closed_at": "2019-12-03T13:56:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n```\r\nasync def get_res():\r\n    uri = \"wss://ws.cs.ws/v3/\"\r\n    async with websockets.connect(uri) as ws:\r\n        i = 0\r\n        while 1:\r\n            st = time.time()\r\n            # async with websockets.connect(uri) as websocket:\r\n            await asyncio.sleep(1)\r\n            req = {\"id\": random.randint(0, 99999),}\r\n            await ws.send(json.dumps(req))\r\n            res = await ws.recv()\r\n            print(json.loads(res))\r\n            i = i+1\r\n            print('time\uff1a',i,time.time()-st)\r\n```\r\n\r\n\u6211\u5c31\u60f3\u8fd9\u4e2aws\u4e00\u76f4\u662f\u8fde\u63a5\u7684\u72b6\u6001\uff01\u4e3a\u4ec0\u4e4830\u79d2\u5de6\u53f3\u5c31\u65ad\u5f00\u4e86\uff01async with websockets.connect(uri) as ws\u5728\u5faa\u73af\u5185\u90e8,\u90a3\u4e48\u6bcf\u4e00\u6b21\u5faa\u73af\u90fd\u4f1a\u5efa\u7acb\u4e00\u4e2aws", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/696", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/696/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/696/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/696/events", "html_url": "https://github.com/aaugustin/websockets/issues/696", "id": 530745545, "node_id": "MDU6SXNzdWU1MzA3NDU1NDU=", "number": 696, "title": "Persistent Connections", "user": {"login": "Trogious", "id": 16444439, "node_id": "MDQ6VXNlcjE2NDQ0NDM5", "avatar_url": "https://avatars0.githubusercontent.com/u/16444439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Trogious", "html_url": "https://github.com/Trogious", "followers_url": "https://api.github.com/users/Trogious/followers", "following_url": "https://api.github.com/users/Trogious/following{/other_user}", "gists_url": "https://api.github.com/users/Trogious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Trogious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Trogious/subscriptions", "organizations_url": "https://api.github.com/users/Trogious/orgs", "repos_url": "https://api.github.com/users/Trogious/repos", "events_url": "https://api.github.com/users/Trogious/events{/privacy}", "received_events_url": "https://api.github.com/users/Trogious/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-01T15:04:48Z", "updated_at": "2019-12-01T17:07:30Z", "closed_at": "2019-12-01T17:07:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add support for persistent connections on the server side, such that the server does not close the connection after client request is handled (see [here](https://github.com/aaugustin/websockets/blob/910f417c9179150c5ab4b44c7361dbf1e51ec322/src/websockets/server.py#L201)). This decreases the volume of necessary TCP traffic for long lived connections and allows push type communication to the client.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/695", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/695/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/695/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/695/events", "html_url": "https://github.com/aaugustin/websockets/issues/695", "id": 530191897, "node_id": "MDU6SXNzdWU1MzAxOTE4OTc=", "number": 695, "title": "Happy Eyeballs connection with websocket?", "user": {"login": "adriansev", "id": 378882, "node_id": "MDQ6VXNlcjM3ODg4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/378882?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adriansev", "html_url": "https://github.com/adriansev", "followers_url": "https://api.github.com/users/adriansev/followers", "following_url": "https://api.github.com/users/adriansev/following{/other_user}", "gists_url": "https://api.github.com/users/adriansev/gists{/gist_id}", "starred_url": "https://api.github.com/users/adriansev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adriansev/subscriptions", "organizations_url": "https://api.github.com/users/adriansev/orgs", "repos_url": "https://api.github.com/users/adriansev/repos", "events_url": "https://api.github.com/users/adriansev/events{/privacy}", "received_events_url": "https://api.github.com/users/adriansev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-11-29T07:16:23Z", "updated_at": "2019-12-31T09:24:55Z", "closed_at": "2019-12-31T09:24:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Is there a way to use a Happy Eyeballs connection when doing the websocket connection?\r\ni see one implementation in asyncio https://bugs.python.org/issue33530 but it seems is python 3.8 only (and i have to maintain 3.6 compatibility)\r\nAlso i see as a separate package https://pypi.org/project/async-stagger/\r\nbut the async.create_* should be replaced with the async_stagger.create_connection()\r\nIs there a way and are developers interested to make websockets use async_stagger.create_connection() if the module is found?\r\nThank you!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/694", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/694/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/694/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/694/events", "html_url": "https://github.com/aaugustin/websockets/issues/694", "id": 526222820, "node_id": "MDU6SXNzdWU1MjYyMjI4MjA=", "number": 694, "title": "How to catch websockets disconnect event\uff1f", "user": {"login": "zxcvbnm3057", "id": 48760372, "node_id": "MDQ6VXNlcjQ4NzYwMzcy", "avatar_url": "https://avatars0.githubusercontent.com/u/48760372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zxcvbnm3057", "html_url": "https://github.com/zxcvbnm3057", "followers_url": "https://api.github.com/users/zxcvbnm3057/followers", "following_url": "https://api.github.com/users/zxcvbnm3057/following{/other_user}", "gists_url": "https://api.github.com/users/zxcvbnm3057/gists{/gist_id}", "starred_url": "https://api.github.com/users/zxcvbnm3057/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zxcvbnm3057/subscriptions", "organizations_url": "https://api.github.com/users/zxcvbnm3057/orgs", "repos_url": "https://api.github.com/users/zxcvbnm3057/repos", "events_url": "https://api.github.com/users/zxcvbnm3057/events{/privacy}", "received_events_url": "https://api.github.com/users/zxcvbnm3057/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-20T21:22:10Z", "updated_at": "2019-11-21T09:18:09Z", "closed_at": "2019-11-21T09:18:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I made a list to save connected websocket, but I don't know how to remove it when a connect shut down by remote. Any help?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/693", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/693/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/693/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/693/events", "html_url": "https://github.com/aaugustin/websockets/issues/693", "id": 524109174, "node_id": "MDU6SXNzdWU1MjQxMDkxNzQ=", "number": 693, "title": "OSError: [Errno 10048] error while attempting to bind on address (address, port)", "user": {"login": "sangensong", "id": 37362613, "node_id": "MDQ6VXNlcjM3MzYyNjEz", "avatar_url": "https://avatars0.githubusercontent.com/u/37362613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sangensong", "html_url": "https://github.com/sangensong", "followers_url": "https://api.github.com/users/sangensong/followers", "following_url": "https://api.github.com/users/sangensong/following{/other_user}", "gists_url": "https://api.github.com/users/sangensong/gists{/gist_id}", "starred_url": "https://api.github.com/users/sangensong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sangensong/subscriptions", "organizations_url": "https://api.github.com/users/sangensong/orgs", "repos_url": "https://api.github.com/users/sangensong/repos", "events_url": "https://api.github.com/users/sangensong/events{/privacy}", "received_events_url": "https://api.github.com/users/sangensong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-18T03:13:10Z", "updated_at": "2019-11-18T14:22:49Z", "closed_at": "2019-11-18T14:22:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I attemp to open two server with a (address, port) pair, the one for send message, the other one for recv message. Can you provide a solutions. Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/692", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/692/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/692/events", "html_url": "https://github.com/aaugustin/websockets/issues/692", "id": 522992923, "node_id": "MDU6SXNzdWU1MjI5OTI5MjM=", "number": 692, "title": "Potential issue with wheel on Pypi", "user": {"login": "josh-stableprice", "id": 46674140, "node_id": "MDQ6VXNlcjQ2Njc0MTQw", "avatar_url": "https://avatars2.githubusercontent.com/u/46674140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh-stableprice", "html_url": "https://github.com/josh-stableprice", "followers_url": "https://api.github.com/users/josh-stableprice/followers", "following_url": "https://api.github.com/users/josh-stableprice/following{/other_user}", "gists_url": "https://api.github.com/users/josh-stableprice/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh-stableprice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh-stableprice/subscriptions", "organizations_url": "https://api.github.com/users/josh-stableprice/orgs", "repos_url": "https://api.github.com/users/josh-stableprice/repos", "events_url": "https://api.github.com/users/josh-stableprice/events{/privacy}", "received_events_url": "https://api.github.com/users/josh-stableprice/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-14T17:11:11Z", "updated_at": "2019-11-16T19:32:56Z", "closed_at": "2019-11-16T19:32:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know if this is an issue with PipEnv or if there is an issue with the wheel on Pypi. Thought I would raise this to let you know just in case. \r\n\r\n```\r\nInstalling dependencies from Pipfile.lock (fb1a30)\u2026\r\nAn error occurred while installing websockets==8.1 --hash=sha256:0e4fb4de42701340bd2353bb2eee45314651caa6ccee80dbd5f5d5978888fed5 --hash=sha256:20891f0dddade307ffddf593c733a3fdb6b83e6f9eef85908113e628fa5a8308 --hash=sha256:2db62a9142e88535038a6bcfea70ef9447696ea77891aebb730a333a51ed559a --hash=sha256:3762791ab8b38948f0c4d281c8b2ddfa99b7e510e46bd8dfa942a5fff621068c --hash=sha256:3db87421956f1b0779a7564915875ba774295cc86e81bc671631379371af1170 --hash=sha256:4f9f7d28ce1d8f1295717c2c25b732c2bc0645db3215cf757551c392177d7cb8 --hash=sha256:5c65d2da8c6bce0fca2528f69f44b2f977e06954c8512a952222cea50dad430f --hash=sha256:7ff46d441db78241f4c6c27b3868c9ae71473fe03341340d2dfdbe8d79310acc --hash=sha256:965889d9f0e2a75edd81a07592d0ced54daa5b0785f57dc429c378edbcffe779 --hash=sha256:9b248ba3dd8a03b1a10b19efe7d4f7fa41d158fdaa95e2cf65af5a7b95a4f989 --hash=sha256:ce85b06a10fc65e6143518b96d3dca27b081a740bae261c2fb20375801a9d56d! Will try again.\r\n  \ud83d\udc0d   \u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589\u2589 161/161 \u2014 00:01:02\r\nInstalling initially failed dependencies\u2026\r\n[pipenv.exceptions.InstallError]:   File \"/home/ubuntu/STABLE_VENV/lib/python3.6/site-packages/pipenv/core.py\", line 2611, in do_sync\r\n[pipenv.exceptions.InstallError]:       system=system,\r\n[pipenv.exceptions.InstallError]:   File \"/home/ubuntu/STABLE_VENV/lib/python3.6/site-packages/pipenv/core.py\", line 1253, in do_init\r\n[pipenv.exceptions.InstallError]:       pypi_mirror=pypi_mirror,\r\n[pipenv.exceptions.InstallError]:   File \"/home/ubuntu/STABLE_VENV/lib/python3.6/site-packages/pipenv/core.py\", line 859, in do_install_dependencies\r\n[pipenv.exceptions.InstallError]:       retry_list, procs, failed_deps_queue, requirements_dir, **install_kwargs\r\n[pipenv.exceptions.InstallError]:   File \"/home/ubuntu/STABLE_VENV/lib/python3.6/site-packages/pipenv/core.py\", line 763, in batch_install\r\n[pipenv.exceptions.InstallError]:       _cleanup_procs(procs, not blocking, failed_deps_queue, retry=retry)\r\n[pipenv.exceptions.InstallError]:   File \"/home/ubuntu/STABLE_VENV/lib/python3.6/site-packages/pipenv/core.py\", line 681, in _cleanup_procs\r\n[pipenv.exceptions.InstallError]:       raise exceptions.InstallError(c.dep.name, extra=err_lines)\r\n[pipenv.exceptions.InstallError]: ['Collecting websockets==8.1 (from -r /tmp/pipenv-zhqlrrf7-requirements/pipenv-ackax304-requirement.txt (line 1))', '  Using cached https://files.pythonhosted.org/packages/bb/d9/856af84843912e2853b1b6e898ac8b802989fcf9ecf8e8445a1da263bf3b/websockets-8.1-cp36-cp36m-manylinux2010_x86_64.whl']\r\n[pipenv.exceptions.InstallError]: ['THESE PACKAGES DO NOT MATCH THE HASHES FROM THE REQUIREMENTS FILE. If you have updated the package versions, please update the hashes. Otherwise, examine the package contents carefully; someone may have tampered with them.', '    websockets==8.1 from https://files.pythonhosted.org/packages/bb/d9/856af84843912e2853b1b6e898ac8b802989fcf9ecf8e8445a1da263bf3b/websockets-8.1-cp36-cp36m-manylinux2010_x86_64.whl#sha256=1d3f1bf059d04a4e0eb4985a887d49195e15ebabc42364f4eb564b1d065793f5 (from -r /tmp/pipenv-zhqlrrf7-requirements/pipenv-ackax304-requirement.txt (line 1)):', '        Expected sha256 0e4fb4de42701340bd2353bb2eee45314651caa6ccee80dbd5f5d5978888fed5', '        Expected     or 20891f0dddade307ffddf593c733a3fdb6b83e6f9eef85908113e628fa5a8308', '        Expected     or 2db62a9142e88535038a6bcfea70ef9447696ea77891aebb730a333a51ed559a', '        Expected     or 3762791ab8b38948f0c4d281c8b2ddfa99b7e510e46bd8dfa942a5fff621068c', '        Expected     or 3db87421956f1b0779a7564915875ba774295cc86e81bc671631379371af1170', '        Expected     or 4f9f7d28ce1d8f1295717c2c25b732c2bc0645db3215cf757551c392177d7cb8', '        Expected     or 5c65d2da8c6bce0fca2528f69f44b2f977e06954c8512a952222cea50dad430f', '        Expected     or 7ff46d441db78241f4c6c27b3868c9ae71473fe03341340d2dfdbe8d79310acc', '        Expected     or 965889d9f0e2a75edd81a07592d0ced54daa5b0785f57dc429c378edbcffe779', '        Expected     or 9b248ba3dd8a03b1a10b19efe7d4f7fa41d158fdaa95e2cf65af5a7b95a4f989', '        Expected     or ce85b06a10fc65e6143518b96d3dca27b081a740bae261c2fb20375801a9d56d', '             Got        1d3f1bf059d04a4e0eb4985a887d49195e15ebabc42364f4eb564b1d065793f5']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/691", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/691/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/691/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/691/events", "html_url": "https://github.com/aaugustin/websockets/issues/691", "id": 522938596, "node_id": "MDU6SXNzdWU1MjI5Mzg1OTY=", "number": 691, "title": "Is there schema requirement for redirection URL ?", "user": {"login": "anthrax-0", "id": 2195542, "node_id": "MDQ6VXNlcjIxOTU1NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2195542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthrax-0", "html_url": "https://github.com/anthrax-0", "followers_url": "https://api.github.com/users/anthrax-0/followers", "following_url": "https://api.github.com/users/anthrax-0/following{/other_user}", "gists_url": "https://api.github.com/users/anthrax-0/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthrax-0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthrax-0/subscriptions", "organizations_url": "https://api.github.com/users/anthrax-0/orgs", "repos_url": "https://api.github.com/users/anthrax-0/repos", "events_url": "https://api.github.com/users/anthrax-0/events{/privacy}", "received_events_url": "https://api.github.com/users/anthrax-0/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-14T15:39:18Z", "updated_at": "2020-07-26T20:13:43Z", "closed_at": "2020-07-26T20:13:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using websockets to connect to some third-party server and sometimes we get redirects from it.\r\n It seems there is an ambiguity in the RFC about redirects. If the server redirects using 3xx response with HTTP(S) schema in URL returned - what is the best behaviour?\r\n Given that https://tools.ietf.org/html/rfc6455#section-4.2.1 also says that opening handshake can have \"Request-URI\" that can be an absolute HTTP/HTTPS URI, I'm not sure if current behaviour of raising InvalidURI exception without configurable handling on it is the best choice?\r\n Is there some best practice on it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/688", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/688/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/688/events", "html_url": "https://github.com/aaugustin/websockets/issues/688", "id": 518223694, "node_id": "MDU6SXNzdWU1MTgyMjM2OTQ=", "number": 688, "title": "When would websocket.remote_address be None?", "user": {"login": "CaledoniaProject", "id": 1357701, "node_id": "MDQ6VXNlcjEzNTc3MDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1357701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CaledoniaProject", "html_url": "https://github.com/CaledoniaProject", "followers_url": "https://api.github.com/users/CaledoniaProject/followers", "following_url": "https://api.github.com/users/CaledoniaProject/following{/other_user}", "gists_url": "https://api.github.com/users/CaledoniaProject/gists{/gist_id}", "starred_url": "https://api.github.com/users/CaledoniaProject/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CaledoniaProject/subscriptions", "organizations_url": "https://api.github.com/users/CaledoniaProject/orgs", "repos_url": "https://api.github.com/users/CaledoniaProject/repos", "events_url": "https://api.github.com/users/CaledoniaProject/events{/privacy}", "received_events_url": "https://api.github.com/users/CaledoniaProject/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 279143600, "node_id": "MDU6TGFiZWwyNzkxNDM2MDA=", "url": "https://api.github.com/repos/aaugustin/websockets/labels/documentation", "name": "documentation", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-06T04:08:29Z", "updated_at": "2019-11-16T19:38:11Z", "closed_at": "2019-11-16T19:38:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a simple chat server, in onSocket method I cache the websocket object for later use. At sometimes later, `websocket.remote_address` become None (The websocket object is still present, e.g `<websockets.server.WebSocketServerProtocol object at 0x7efcdcaefeb8`)\r\n\r\nSo when would this attribute be None?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/687", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/687/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/687/events", "html_url": "https://github.com/aaugustin/websockets/issues/687", "id": 518094714, "node_id": "MDU6SXNzdWU1MTgwOTQ3MTQ=", "number": 687, "title": "Error code 1006", "user": {"login": "LanDeQuHuXi", "id": 23261898, "node_id": "MDQ6VXNlcjIzMjYxODk4", "avatar_url": "https://avatars1.githubusercontent.com/u/23261898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LanDeQuHuXi", "html_url": "https://github.com/LanDeQuHuXi", "followers_url": "https://api.github.com/users/LanDeQuHuXi/followers", "following_url": "https://api.github.com/users/LanDeQuHuXi/following{/other_user}", "gists_url": "https://api.github.com/users/LanDeQuHuXi/gists{/gist_id}", "starred_url": "https://api.github.com/users/LanDeQuHuXi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LanDeQuHuXi/subscriptions", "organizations_url": "https://api.github.com/users/LanDeQuHuXi/orgs", "repos_url": "https://api.github.com/users/LanDeQuHuXi/repos", "events_url": "https://api.github.com/users/LanDeQuHuXi/events{/privacy}", "received_events_url": "https://api.github.com/users/LanDeQuHuXi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-05T22:35:17Z", "updated_at": "2019-11-06T10:04:16Z", "closed_at": "2019-11-06T10:04:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there anyway to get more specific error messages?\r\nMy application is suffering from some abnormal close issues and the error message does not really help. \r\nThis application has some heavy traffic, using DEBUG mode might not be a good idea.\r\n\r\n**Version 8.0.2**\r\n\r\nThe error log is as follows:\r\n**On server side**\r\n```\r\n2019-11-05 22:11:26,991 websocket.server.handler [ERROR]: \r\nTraceback (most recent call last):\r\n  File \"/root/.local/lib/python3.6/site-packages/websockets/protocol.py\", line 795, in transfer_data\r\n    message = await self.read_message()\r\n  File \"/root/.local/lib/python3.6/site-packages/websockets/protocol.py\", line 863, in read_message\r\n    frame = await self.read_data_frame(max_size=self.max_size)\r\n  File \"/root/.local/lib/python3.6/site-packages/websockets/protocol.py\", line 938, in read_data_frame\r\n    frame = await self.read_frame(max_size)\r\n  File \"/root/.local/lib/python3.6/site-packages/websockets/protocol.py\", line 1018, in read_frame\r\n    extensions=self.extensions,\r\n  File \"/root/.local/lib/python3.6/site-packages/websockets/framing.py\", line 121, in read\r\n    data = await reader(2)\r\n  File \"/usr/local/lib/python3.6/asyncio/streams.py\", line 672, in readexactly\r\n    raise IncompleteReadError(incomplete, n)\r\nasyncio.streams.IncompleteReadError: 0 bytes read on a total of 2 expected bytes\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/app/server/__init__.py\", line 60, in listen_streams\r\n    await websocket.send(ujson.dumps(one_action))\r\n  File \"/root/.local/lib/python3.6/site-packages/websockets/protocol.py\", line 530, in send\r\n    await self.ensure_open()\r\n  File \"/root/.local/lib/python3.6/site-packages/websockets/protocol.py\", line 771, in ensure_open\r\n    raise self.connection_closed_exc()\r\nwebsockets.exceptions.ConnectionClosedError: code = 1006 (connection closed abnormally [internal]), no reason\r\n```\r\n**On the client side:**\r\n```\r\nUnexpected exception in keepalive ping task\r\nTraceback (most recent call last):\r\n  File \"/home/ec2-user/env/lib64/python3.7/site-packages/websockets/protocol.py\", line 989, in keepalive_ping\r\n    ping_waiter, self.ping_timeout, loop=self.loop\r\n  File \"/usr/lib64/python3.7/asyncio/tasks.py\", line 442, in wait_for\r\n    return fut.result()\r\nwebsockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1006 (connection closed abnormally [internal]), no reason\r\nError in data transfer\r\nTraceback (most recent call last):\r\n  File \"/home/ec2-user/env/lib64/python3.7/site-packages/websockets/protocol.py\", line 674, in transfer_data\r\n    message = yield from self.read_message()\r\n  File \"/home/ec2-user/env/lib64/python3.7/site-packages/websockets/protocol.py\", line 742, in read_message\r\n    frame = yield from self.read_data_frame(max_size=self.max_size)\r\n  File \"/home/ec2-user/env/lib64/python3.7/site-packages/websockets/protocol.py\", line 835, in read_data_frame\r\n    yield from self.pong(frame.data)\r\n  File \"/home/ec2-user/env/lib64/python3.7/site-packages/websockets/protocol.py\", line 614, in pong\r\n    yield from self.ensure_open()\r\n  File \"/home/ec2-user/env/lib64/python3.7/site-packages/websockets/protocol.py\", line 646, in ensure_open\r\n    ) from self.transfer_data_exc\r\nwebsockets.exceptions.ConnectionClosed: WebSocket connection is closed: code = 1006 (connection closed abnormally [internal]), no reason\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/682", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/682/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/682/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/682/events", "html_url": "https://github.com/aaugustin/websockets/issues/682", "id": 512655317, "node_id": "MDU6SXNzdWU1MTI2NTUzMTc=", "number": 682, "title": "AttributeError: module 'http' has no attribute 'HTTPStatus'", "user": {"login": "CodeM01", "id": 47262039, "node_id": "MDQ6VXNlcjQ3MjYyMDM5", "avatar_url": "https://avatars1.githubusercontent.com/u/47262039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodeM01", "html_url": "https://github.com/CodeM01", "followers_url": "https://api.github.com/users/CodeM01/followers", "following_url": "https://api.github.com/users/CodeM01/following{/other_user}", "gists_url": "https://api.github.com/users/CodeM01/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodeM01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodeM01/subscriptions", "organizations_url": "https://api.github.com/users/CodeM01/orgs", "repos_url": "https://api.github.com/users/CodeM01/repos", "events_url": "https://api.github.com/users/CodeM01/events{/privacy}", "received_events_url": "https://api.github.com/users/CodeM01/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-25T18:26:47Z", "updated_at": "2019-10-27T17:11:17Z", "closed_at": "2019-10-27T17:11:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have tried to install and unistall the websockets module but whenever I import it, it throws an error. What do I need to do to stop this error?\r\n\r\nI have tried to install and unistall the websockets module from pip install websockets and pip uninstall websockets.\r\n\r\nHere is the error :\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\x\\PycharmProjects\\NewProject\\RawDiscordBot\\client.py\", line 1, in <module>\r\n    import websockets\r\n  File \"C:\\Users\\x\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\websockets\\__init__.py\", line 3, in <module>\r\n    from .auth import *\r\n  File \"C:\\Users\\x\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\websockets\\auth.py\", line 12, in <module>\r\n    from .exceptions import InvalidHeader\r\n  File \"C:\\Users\\x\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\websockets\\exceptions.py\", line 294, in <module>\r\n    class AbortHandshake(InvalidHandshake):\r\n  File \"C:\\Users\\x\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\websockets\\exceptions.py\", line 305, in AbortHandshake\r\n    self, status: http.HTTPStatus, headers: HeadersLike, body: bytes = b\"\"\r\nAttributeError: module 'http' has no attribute 'HTTPStatus'\r\n[Finished in 0.907s]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/681", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/681/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/681/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/681/events", "html_url": "https://github.com/aaugustin/websockets/issues/681", "id": 506363834, "node_id": "MDU6SXNzdWU1MDYzNjM4MzQ=", "number": 681, "title": "Make a release with Python 3.8 compatibility", "user": {"login": "aaugustin", "id": 788910, "node_id": "MDQ6VXNlcjc4ODkxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/788910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaugustin", "html_url": "https://github.com/aaugustin", "followers_url": "https://api.github.com/users/aaugustin/followers", "following_url": "https://api.github.com/users/aaugustin/following{/other_user}", "gists_url": "https://api.github.com/users/aaugustin/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaugustin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaugustin/subscriptions", "organizations_url": "https://api.github.com/users/aaugustin/orgs", "repos_url": "https://api.github.com/users/aaugustin/repos", "events_url": "https://api.github.com/users/aaugustin/events{/privacy}", "received_events_url": "https://api.github.com/users/aaugustin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-13T18:43:50Z", "updated_at": "2019-11-12T20:56:17Z", "closed_at": "2019-11-01T13:41:16Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/679", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/679/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/679/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/679/events", "html_url": "https://github.com/aaugustin/websockets/issues/679", "id": 503608808, "node_id": "MDU6SXNzdWU1MDM2MDg4MDg=", "number": 679, "title": "mypy: Module has no attribute \"connect\"  [attr-defined]", "user": {"login": "antonagestam", "id": 218551, "node_id": "MDQ6VXNlcjIxODU1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/218551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antonagestam", "html_url": "https://github.com/antonagestam", "followers_url": "https://api.github.com/users/antonagestam/followers", "following_url": "https://api.github.com/users/antonagestam/following{/other_user}", "gists_url": "https://api.github.com/users/antonagestam/gists{/gist_id}", "starred_url": "https://api.github.com/users/antonagestam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antonagestam/subscriptions", "organizations_url": "https://api.github.com/users/antonagestam/orgs", "repos_url": "https://api.github.com/users/antonagestam/repos", "events_url": "https://api.github.com/users/antonagestam/events{/privacy}", "received_events_url": "https://api.github.com/users/antonagestam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943707, "node_id": "MDU6TGFiZWwzMzk0MzcwNw==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/enhancement", "name": "enhancement", "color": "0052cc", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-07T18:12:16Z", "updated_at": "2019-10-14T20:24:27Z", "closed_at": "2019-10-14T20:24:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As of mypy 0.730 using `no_implicit_reexport = True` errors are reported when importing names from the top-level module. I'm guessing this is due to mypy not being able infer the dynamic contents of `__all__`, and instead having relied on inferring the imports previous to 0.730.\r\n\r\nWould you be open to a pull request that hard-codes the contents of `__all__` instead of building it dynamically from the __all__s of submodules?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/677", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/677/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/677/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/677/events", "html_url": "https://github.com/aaugustin/websockets/issues/677", "id": 503339006, "node_id": "MDU6SXNzdWU1MDMzMzkwMDY=", "number": 677, "title": "Invalid Response ", "user": {"login": "irfangerard44", "id": 26153974, "node_id": "MDQ6VXNlcjI2MTUzOTc0", "avatar_url": "https://avatars1.githubusercontent.com/u/26153974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irfangerard44", "html_url": "https://github.com/irfangerard44", "followers_url": "https://api.github.com/users/irfangerard44/followers", "following_url": "https://api.github.com/users/irfangerard44/following{/other_user}", "gists_url": "https://api.github.com/users/irfangerard44/gists{/gist_id}", "starred_url": "https://api.github.com/users/irfangerard44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irfangerard44/subscriptions", "organizations_url": "https://api.github.com/users/irfangerard44/orgs", "repos_url": "https://api.github.com/users/irfangerard44/repos", "events_url": "https://api.github.com/users/irfangerard44/events{/privacy}", "received_events_url": "https://api.github.com/users/irfangerard44/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-07T09:39:39Z", "updated_at": "2019-10-07T09:40:43Z", "closed_at": "2019-10-07T09:40:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/674", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/674/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/674/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/674/events", "html_url": "https://github.com/aaugustin/websockets/issues/674", "id": 499874497, "node_id": "MDU6SXNzdWU0OTk4NzQ0OTc=", "number": 674, "title": "please add the support to transfer file and binary data.", "user": {"login": "qcq", "id": 8703631, "node_id": "MDQ6VXNlcjg3MDM2MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/8703631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qcq", "html_url": "https://github.com/qcq", "followers_url": "https://api.github.com/users/qcq/followers", "following_url": "https://api.github.com/users/qcq/following{/other_user}", "gists_url": "https://api.github.com/users/qcq/gists{/gist_id}", "starred_url": "https://api.github.com/users/qcq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qcq/subscriptions", "organizations_url": "https://api.github.com/users/qcq/orgs", "repos_url": "https://api.github.com/users/qcq/repos", "events_url": "https://api.github.com/users/qcq/events{/privacy}", "received_events_url": "https://api.github.com/users/qcq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-29T07:46:49Z", "updated_at": "2019-09-29T09:25:27Z", "closed_at": "2019-09-29T09:25:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to based on this to develop one chat app, seems websockets has no api to indicate the data type,  like file or binary.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/673", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/673/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/673/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/673/events", "html_url": "https://github.com/aaugustin/websockets/issues/673", "id": 499006749, "node_id": "MDU6SXNzdWU0OTkwMDY3NDk=", "number": 673, "title": "Documentation: Launching server in a separate event loop", "user": {"login": "galleon", "id": 259772, "node_id": "MDQ6VXNlcjI1OTc3Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/259772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/galleon", "html_url": "https://github.com/galleon", "followers_url": "https://api.github.com/users/galleon/followers", "following_url": "https://api.github.com/users/galleon/following{/other_user}", "gists_url": "https://api.github.com/users/galleon/gists{/gist_id}", "starred_url": "https://api.github.com/users/galleon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/galleon/subscriptions", "organizations_url": "https://api.github.com/users/galleon/orgs", "repos_url": "https://api.github.com/users/galleon/repos", "events_url": "https://api.github.com/users/galleon/events{/privacy}", "received_events_url": "https://api.github.com/users/galleon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-26T17:01:17Z", "updated_at": "2019-10-05T08:47:49Z", "closed_at": "2019-10-05T08:47:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "newbie question. I have a use-case for which I need to launch my server.\r\n\r\nI have the following code derived from tuto:\r\n\r\n```\r\nimport asyncio\r\nimport websockets\r\nimport socket\r\nfrom threading import Thread\r\n\r\nasync def hello(websocket, path):\r\n    name = await websocket.recv()\r\n    print(f\"< {name}\")\r\n    greeting = f\"Hello {name}!\"\r\n    await websocket.send(greeting)\r\n    print(f\"> {greeting}\")\r\n\r\ndef start_loop(loop):\r\n    asyncio.set_event_loop(loop)\r\n    loop.run_forever()\r\n\r\n# Get host and port from config file\r\nserver_host = socket.gethostname()\r\nserver_port = 8081  # random.randint(10000, 60000)\r\n\r\nprint('server_host: ' + server_host)\r\n\r\n# start a new event loop\r\nnew_loop = asyncio.new_event_loop()\r\nt = Thread(target=start_loop, args=(new_loop,))\r\nt.start()\r\n\r\nstart_server = websockets.serve(hello, server_host, server_port, loop=new_loop)\r\n\r\nprint(\"Server launched\")\r\n\r\nasync def hello():\r\n    uri = \"ws://{}:{}\".format(server_host, server_port)\r\n    async with websockets.connect(uri) as websocket:\r\n        name = input(\"What's your name? \")\r\n\r\n        await websocket.send(name)\r\n        print(f\"> {name}\")\r\n\r\n        greeting = await websocket.recv()\r\n        print(f\"< {greeting}\")\r\n\r\nasyncio.get_event_loop().run_until_complete(hello())\r\n```\r\n\r\nThe server seems to start nut the client does not connect. Any idea what I am doing wrong ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/672", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/672/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/672/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/672/events", "html_url": "https://github.com/aaugustin/websockets/issues/672", "id": 497013306, "node_id": "MDU6SXNzdWU0OTcwMTMzMDY=", "number": 672, "title": "asyncio.CancelledError replaced with InvalidMessage", "user": {"login": "LasseBlaauwbroek", "id": 1413089, "node_id": "MDQ6VXNlcjE0MTMwODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1413089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LasseBlaauwbroek", "html_url": "https://github.com/LasseBlaauwbroek", "followers_url": "https://api.github.com/users/LasseBlaauwbroek/followers", "following_url": "https://api.github.com/users/LasseBlaauwbroek/following{/other_user}", "gists_url": "https://api.github.com/users/LasseBlaauwbroek/gists{/gist_id}", "starred_url": "https://api.github.com/users/LasseBlaauwbroek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LasseBlaauwbroek/subscriptions", "organizations_url": "https://api.github.com/users/LasseBlaauwbroek/orgs", "repos_url": "https://api.github.com/users/LasseBlaauwbroek/repos", "events_url": "https://api.github.com/users/LasseBlaauwbroek/events{/privacy}", "received_events_url": "https://api.github.com/users/LasseBlaauwbroek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943705, "node_id": "MDU6TGFiZWwzMzk0MzcwNQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-23T10:24:14Z", "updated_at": "2019-11-16T19:41:09Z", "closed_at": "2019-11-16T19:41:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the snippet below, there is a try except block that catches all exceptions, including a `asyncio.CancelledError` if the task is cancelled. This exception should be reraised so that parent tasks also know about the cancellation.\r\n\r\nhttps://github.com/aaugustin/websockets/blob/46ddc64b3ab02f38579880a812b9c04da6d89ae1/src/websockets/client.py#L101-L104\r\n\r\nAt least I suggest adding the following snippet:\r\n```python\r\nexcept asyncio.CancelledError:\r\n    raise\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/668", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/668/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/668/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/668/events", "html_url": "https://github.com/aaugustin/websockets/issues/668", "id": 487377600, "node_id": "MDU6SXNzdWU0ODczNzc2MDA=", "number": 668, "title": "websockets.exceptions.PayloadTooBig: payload length exceeds size limit", "user": {"login": "CoderMudy", "id": 13300173, "node_id": "MDQ6VXNlcjEzMzAwMTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/13300173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CoderMudy", "html_url": "https://github.com/CoderMudy", "followers_url": "https://api.github.com/users/CoderMudy/followers", "following_url": "https://api.github.com/users/CoderMudy/following{/other_user}", "gists_url": "https://api.github.com/users/CoderMudy/gists{/gist_id}", "starred_url": "https://api.github.com/users/CoderMudy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CoderMudy/subscriptions", "organizations_url": "https://api.github.com/users/CoderMudy/orgs", "repos_url": "https://api.github.com/users/CoderMudy/repos", "events_url": "https://api.github.com/users/CoderMudy/events{/privacy}", "received_events_url": "https://api.github.com/users/CoderMudy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943709, "node_id": "MDU6TGFiZWwzMzk0MzcwOQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-30T09:14:51Z", "updated_at": "2019-08-30T15:38:26Z", "closed_at": "2019-08-30T15:37:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "how can  i make max_zise bigger.or else way solve this\r\nwhen the file size < 1M it's ok,but when it > 1 M it's wrong\r\ni write server by go and client with python ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/667", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/667/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/667/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/667/events", "html_url": "https://github.com/aaugustin/websockets/issues/667", "id": 487354445, "node_id": "MDU6SXNzdWU0ODczNTQ0NDU=", "number": 667, "title": "cannot import name 'Deque'?", "user": {"login": "Xonxt", "id": 5681661, "node_id": "MDQ6VXNlcjU2ODE2NjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5681661?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xonxt", "html_url": "https://github.com/Xonxt", "followers_url": "https://api.github.com/users/Xonxt/followers", "following_url": "https://api.github.com/users/Xonxt/following{/other_user}", "gists_url": "https://api.github.com/users/Xonxt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xonxt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xonxt/subscriptions", "organizations_url": "https://api.github.com/users/Xonxt/orgs", "repos_url": "https://api.github.com/users/Xonxt/repos", "events_url": "https://api.github.com/users/Xonxt/events{/privacy}", "received_events_url": "https://api.github.com/users/Xonxt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-30T08:23:41Z", "updated_at": "2019-09-11T12:58:18Z", "closed_at": "2019-09-11T12:58:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Been using websockets on my PC for a while, no problems.\r\n\r\nHad to briefly test something on another colleague's PC, told him to also install this package, but he's having a weird exception, just when trying to `import websockets`. Here's the trace:\r\n\r\n```\r\n>>> import websockets\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\%username%\\AppData\\Roaming\\Python\\Python36\\site-packages\\websockets\\__init__.py\", line 3, in <module>\r\n    from .auth import *\r\n  File \"C:\\Users\\%username%\\AppData\\Roaming\\Python\\Python36\\site-packages\\websockets\\auth.py\", line 15, in <module>\r\n    from .server import HTTPResponse, WebSocketServerProtocol\r\n  File \"C:\\Users\\%username%\\AppData\\Roaming\\Python\\Python36\\site-packages\\websockets\\server.py\", line 49, in <module>\r\n    from .protocol import WebSocketCommonProtocol\r\n  File \"C:\\Users\\%username%\\AppData\\Roaming\\Python\\Python36\\site-packages\\websockets\\protocol.py\", line 18, in <module>\r\n    from typing import (\r\nImportError: cannot import name 'Deque'\r\n```\r\n\r\nWe're both using Python 3.6. I was using **websockets 7.0** before, but the colleagues installed the newest 8.0.2. I then also updated to the newest version, yet I still have no problems, while the colleague does.\r\n\r\nAny idea what that could be?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/666", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/666/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/666/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/666/events", "html_url": "https://github.com/aaugustin/websockets/issues/666", "id": 485484430, "node_id": "MDU6SXNzdWU0ODU0ODQ0MzA=", "number": 666, "title": "subprotocols malformed ", "user": {"login": "rsska", "id": 11054627, "node_id": "MDQ6VXNlcjExMDU0NjI3", "avatar_url": "https://avatars3.githubusercontent.com/u/11054627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsska", "html_url": "https://github.com/rsska", "followers_url": "https://api.github.com/users/rsska/followers", "following_url": "https://api.github.com/users/rsska/following{/other_user}", "gists_url": "https://api.github.com/users/rsska/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsska/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsska/subscriptions", "organizations_url": "https://api.github.com/users/rsska/orgs", "repos_url": "https://api.github.com/users/rsska/repos", "events_url": "https://api.github.com/users/rsska/events{/privacy}", "received_events_url": "https://api.github.com/users/rsska/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-26T22:28:32Z", "updated_at": "2019-08-29T10:11:03Z", "closed_at": "2019-08-27T07:19:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Very new to many things so I apologies if this is not a bug.  ( -but would greatly appreciate being pointed to some examples  using protocols, custom extension and custom headers on client and sever implementation).\r\n\r\nOn the client side when I try \r\n```\r\nwebsockets.connect(uri,subprotocols=\r\nwebsockets.headers.build_subprotocol(['One','Two']) \r\n)\r\n```\r\n\r\nThe header received by the server look like:\r\n\r\n> Sec-WebSocket-Version: 13\r\n> Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits\r\n> Sec-WebSocket-Protocol: O, n, e, ,,  , T, w, o\r\n> User-Agent: Python/3.7 websockets/8.0.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/665", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/665/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/665/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/665/events", "html_url": "https://github.com/aaugustin/websockets/issues/665", "id": 485398576, "node_id": "MDU6SXNzdWU0ODUzOTg1NzY=", "number": 665, "title": "Handling `errorError -3 while decompressing data: invalid distance too far` error", "user": {"login": "bsergean", "id": 11857745, "node_id": "MDQ6VXNlcjExODU3NzQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/11857745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsergean", "html_url": "https://github.com/bsergean", "followers_url": "https://api.github.com/users/bsergean/followers", "following_url": "https://api.github.com/users/bsergean/following{/other_user}", "gists_url": "https://api.github.com/users/bsergean/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsergean/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsergean/subscriptions", "organizations_url": "https://api.github.com/users/bsergean/orgs", "repos_url": "https://api.github.com/users/bsergean/repos", "events_url": "https://api.github.com/users/bsergean/events{/privacy}", "received_events_url": "https://api.github.com/users/bsergean/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-26T19:14:38Z", "updated_at": "2019-09-23T16:24:14Z", "closed_at": "2019-09-23T07:17:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Problem\r\n\r\nI am getting this error quite a bit in production: `errorwebsockets.extensions.permessage_deflate in decode errorError -3 while decompressing data: invalid distance too far`\r\n\r\n![stacktrace](https://user-images.githubusercontent.com/11857745/63716132-1768b400-c7fa-11e9-8b53-2fba038bf1e0.png)\r\n\r\nMy per message deflate settings are:\r\n\r\n```\r\nPerMessageDeflate(remote_no_context_takeover=False, local_no_context_takeover=False, remote_max_window_bits=15, local_max_window_bits=15)\r\n```\r\n\r\nThe data to be decompressed is relatively small: `[26, 92, 39, 167, 24, 89, 90, 32, 15, 212, 140, 158, 156, 50, 122, 114, 202]`.\r\n\r\nI am getting a bunch of those errors and I'm not too sure on how to fix it, help troubleshoot it. Some internet threads suggest that this can be fixed by upgrading zlib. I have a feeling that the bug is more likely to be in my C++ websocket client code.\r\n\r\nThe client code talking to my websockets based server (cobra)[https://github.com/machinezone/cobra] is written in C++. Here are the [zlib](https://github.com/machinezone/IXWebSocket/blob/master/ixwebsocket/IXWebSocketPerMessageDeflateCodec.cpp) bits.\r\n\r\nThere is a thread about window size of [size 8](https://bugs.chromium.org/p/chromium/issues/detail?id=691074) being bogus. I don't think this is my problem because I am setting \r\n\r\n## Ideas\r\n\r\n1. I am thinking about setting a User Agent that report the OS Version + zlib version used, to see if this has anything to do with a platform specific bug.\r\n2. Having the server advertize a smaller max_window_bits (14 instead of 15, or 13, etc...)\r\n3. Should an exception be caught in the websocket transfer data code ? Should there be a new websockets dedicated 'DeflateDecodingError' ? All the messages contains a platform id. I don't currently have what I'd call a 'global' asyncio exception handler. Maybe I need one to handle that case.\r\n4. Making sure that my library (IXWebSocket) is autobahn compliant. I've looked at your compliance sub-folder, but I couldn't find anything related to the zlib extension there.\r\n\r\nThanks for any hints.\r\n\r\nSome random links:\r\n\r\n* [android ndk zlib notes](https://github.com/android-ndk/ndk/issues/230)\r\n* [zlib changelog](https://www.zlib.net/ChangeLog.txt)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/663", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/663/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/663/events", "html_url": "https://github.com/aaugustin/websockets/issues/663", "id": 482343744, "node_id": "MDU6SXNzdWU0ODIzNDM3NDQ=", "number": 663, "title": "ERROR:root:code = 1006 (connection closed abnormally [internal]), no reason", "user": {"login": "KasraAhmadi", "id": 47658955, "node_id": "MDQ6VXNlcjQ3NjU4OTU1", "avatar_url": "https://avatars1.githubusercontent.com/u/47658955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KasraAhmadi", "html_url": "https://github.com/KasraAhmadi", "followers_url": "https://api.github.com/users/KasraAhmadi/followers", "following_url": "https://api.github.com/users/KasraAhmadi/following{/other_user}", "gists_url": "https://api.github.com/users/KasraAhmadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/KasraAhmadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KasraAhmadi/subscriptions", "organizations_url": "https://api.github.com/users/KasraAhmadi/orgs", "repos_url": "https://api.github.com/users/KasraAhmadi/repos", "events_url": "https://api.github.com/users/KasraAhmadi/events{/privacy}", "received_events_url": "https://api.github.com/users/KasraAhmadi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-19T14:24:58Z", "updated_at": "2019-08-23T05:17:07Z", "closed_at": "2019-08-23T05:17:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got this error when the client starts to send data to server. before sending data everything is fine.\r\nHow can i fix it? \r\nThanks in advance\r\n\r\n ```\r\nwebsockets.exceptions.ConnectionClosedError: code = 1006 (connection closed abnormally [internal]), no reason\r\nERROR:asyncio:Future exception was never retrieved\r\nfuture: <Future finished exception=ConnectionClosedError('code = 1006 (connection closed abnormally [internal]), no reason')>\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/websockets/protocol.py\", line 796, in transfer_data\r\n    message = await self.read_message()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/websockets/protocol.py\", line 864, in read_message\r\n    frame = await self.read_data_frame(max_size=self.max_size)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/websockets/protocol.py\", line 939, in read_data_frame\r\n    frame = await self.read_frame(max_size)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/websockets/protocol.py\", line 1019, in read_frame\r\n    extensions=self.extensions,\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/websockets/framing.py\", line 121, in read\r\n    data = await reader(2)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/streams.py\", line 677, in readexactly\r\n    raise IncompleteReadError(incomplete, n)\r\nasyncio.streams.IncompleteReadError: 0 bytes read on a total of 2 expected bytes\r\nThe above exception was the direct cause of the following exception:\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/661", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/661/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/661/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/661/events", "html_url": "https://github.com/aaugustin/websockets/issues/661", "id": 476648997, "node_id": "MDU6SXNzdWU0NzY2NDg5OTc=", "number": 661, "title": "ConnectionClosed exception closes wrong clients.", "user": {"login": "AFO-UYI", "id": 27667148, "node_id": "MDQ6VXNlcjI3NjY3MTQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/27667148?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AFO-UYI", "html_url": "https://github.com/AFO-UYI", "followers_url": "https://api.github.com/users/AFO-UYI/followers", "following_url": "https://api.github.com/users/AFO-UYI/following{/other_user}", "gists_url": "https://api.github.com/users/AFO-UYI/gists{/gist_id}", "starred_url": "https://api.github.com/users/AFO-UYI/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AFO-UYI/subscriptions", "organizations_url": "https://api.github.com/users/AFO-UYI/orgs", "repos_url": "https://api.github.com/users/AFO-UYI/repos", "events_url": "https://api.github.com/users/AFO-UYI/events{/privacy}", "received_events_url": "https://api.github.com/users/AFO-UYI/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-05T04:20:41Z", "updated_at": "2019-08-11T06:26:53Z", "closed_at": "2019-08-11T06:26:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following code:\r\n\r\n```python\r\n    async def register(self, websocket, _):\r\n        identify_client = self.get_new_id()\r\n        self.clients[identify_client] = websocket\r\n        await self.listen(identify_client)\r\n\r\n    async def listen(self, terminal):\r\n        try:\r\n            async for message in self.clients[terminal]:\r\n                for client in self.clients.values():\r\n                    await client.send(message)\r\n                    print(\"self.clients #1: \", self.clients)\r\n        except websockets.exceptions.ConnectionClosed:\r\n            print('closing a client with the id: ', terminal)\r\n            await self.clients[terminal].close()\r\n            del self.clients[terminal]\r\n            print(\"self.clients #2: \", self.clients)\r\n```\r\n\r\nWhen a connection is closed from the client, the listen function doesnt perform the except block until another message from another client is recieved, and close the connection of that another client.\r\n\r\nThe output of that code is:\r\n```python\r\nun nuevo id:  xhCrfGSPixjPB25urfWUF4luAiDx7u    # a connection is perform\r\n# the client send 2 messages and clients dict is printed\r\nself.clients #1:  {'xhCrfGSPixjPB25urfWUF4luAiDx7u': <websockets.server.WebSo...>}  \r\nself.clients #1:  {'xhCrfGSPixjPB25urfWUF4luAiDx7u': <websockets.server.WebSo...>}  \r\n# after 2 messages the client close the connection\r\nun nuevo id:  YE2Tj0PgGO7lFZaRnaFHFRlsmlcdsn # another client connection\r\nclosing a client with the id:  YE2Tj0PgGO7lFZaRnaFHFRlsmlcdsn \r\n# closed connection by first client is performed when the second \r\n# client sends a message and the connection close is from the second client.\r\nself.clients #2:  {'xhCrfGSPixjPB25urfWUF4luAiDx7u': <websockets.server.WebSo...>}  \r\n# the connecion with the first client id is still alive and the second client\r\n# connection was closed\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/660", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/660/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/660/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/660/events", "html_url": "https://github.com/aaugustin/websockets/issues/660", "id": 475600911, "node_id": "MDU6SXNzdWU0NzU2MDA5MTE=", "number": 660, "title": "Poor server performance on raspberry pi", "user": {"login": "Coimbra1984", "id": 16028898, "node_id": "MDQ6VXNlcjE2MDI4ODk4", "avatar_url": "https://avatars1.githubusercontent.com/u/16028898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Coimbra1984", "html_url": "https://github.com/Coimbra1984", "followers_url": "https://api.github.com/users/Coimbra1984/followers", "following_url": "https://api.github.com/users/Coimbra1984/following{/other_user}", "gists_url": "https://api.github.com/users/Coimbra1984/gists{/gist_id}", "starred_url": "https://api.github.com/users/Coimbra1984/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Coimbra1984/subscriptions", "organizations_url": "https://api.github.com/users/Coimbra1984/orgs", "repos_url": "https://api.github.com/users/Coimbra1984/repos", "events_url": "https://api.github.com/users/Coimbra1984/events{/privacy}", "received_events_url": "https://api.github.com/users/Coimbra1984/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-01T10:24:19Z", "updated_at": "2019-08-26T11:07:40Z", "closed_at": "2019-08-11T06:27:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm profiling a simple websocket server on a raspberry pi 3B+.\r\niperf3 shows a possible througput of ~300Mbits/s. However if I setup a simple server like this:\r\n\r\n```\r\nimport asyncio\r\nimport websockets\r\nimport numpy\r\n\r\nasync def serve(ws, path):\r\n    blob = numpy.random.randint(0,255,size=100000,dtype=numpy.uint8)\r\n    blob = blob.tobytes()\r\n    while True:\r\n        await ws.send(blob)\r\n\r\nstart_server = websockets.serve(serve, \"0.0.0.0\", 8765)\r\nasyncio.get_event_loop().run_until_complete(start_server)\r\nasyncio.get_event_loop().run_forever()\r\n```\r\n\r\nI only get a throughput of ~18Mbits/s with a Windows10 LAN (cable) websocket client.\r\nI see that CPU usage goes to 100% on the raspberry side (python3.5. wesockets V7.0).\r\n\r\nIf I switch sides (PC is server, raspberry is client), I do achieve a much higher throughput of ~200Mbits/s.\r\n\r\nIs this an exepcted behaviour? Or is there a chance to get the server achieve a higher throughput?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/659", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/659/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/659/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/659/events", "html_url": "https://github.com/aaugustin/websockets/issues/659", "id": 475135016, "node_id": "MDU6SXNzdWU0NzUxMzUwMTY=", "number": 659, "title": "Unable to pass custom socket into websockets.serve()", "user": {"login": "michelneumann", "id": 2844350, "node_id": "MDQ6VXNlcjI4NDQzNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2844350?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michelneumann", "html_url": "https://github.com/michelneumann", "followers_url": "https://api.github.com/users/michelneumann/followers", "following_url": "https://api.github.com/users/michelneumann/following{/other_user}", "gists_url": "https://api.github.com/users/michelneumann/gists{/gist_id}", "starred_url": "https://api.github.com/users/michelneumann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michelneumann/subscriptions", "organizations_url": "https://api.github.com/users/michelneumann/orgs", "repos_url": "https://api.github.com/users/michelneumann/repos", "events_url": "https://api.github.com/users/michelneumann/events{/privacy}", "received_events_url": "https://api.github.com/users/michelneumann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 33943705, "node_id": "MDU6TGFiZWwzMzk0MzcwNQ==", "url": "https://api.github.com/repos/aaugustin/websockets/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-31T13:08:53Z", "updated_at": "2019-07-31T19:16:37Z", "closed_at": "2019-07-31T18:44:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to pass a custom socket using the `sock` parameter of the `websockets.server.serve()` function, the assertion check at https://github.com/aaugustin/websockets/blob/master/src/websockets/server.py#L933 raises an exception because of the missing `port` parameter. However when setting the `port` parameter in the `serve()` function explicitly, an exception is raised saying it is not possible to specify a custom socket and and port. I was upgrading from version 7.0.0 to 8.0.1 where the error occurs. Thanks for looking into it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aaugustin/websockets/issues/657", "repository_url": "https://api.github.com/repos/aaugustin/websockets", "labels_url": "https://api.github.com/repos/aaugustin/websockets/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/aaugustin/websockets/issues/657/comments", "events_url": "https://api.github.com/repos/aaugustin/websockets/issues/657/events", "html_url": "https://github.com/aaugustin/websockets/issues/657", "id": 473307388, "node_id": "MDU6SXNzdWU0NzMzMDczODg=", "number": 657, "title": "Interactive client appears to miss `__main__` file", "user": {"login": "Tmpod", "id": 35771816, "node_id": "MDQ6VXNlcjM1NzcxODE2", "avatar_url": "https://avatars2.githubusercontent.com/u/35771816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tmpod", "html_url": "https://github.com/Tmpod", "followers_url": "https://api.github.com/users/Tmpod/followers", "following_url": "https://api.github.com/users/Tmpod/following{/other_user}", "gists_url": "https://api.github.com/users/Tmpod/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tmpod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tmpod/subscriptions", "organizations_url": "https://api.github.com/users/Tmpod/orgs", "repos_url": "https://api.github.com/users/Tmpod/repos", "events_url": "https://api.github.com/users/Tmpod/events{/privacy}", "received_events_url": "https://api.github.com/users/Tmpod/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-26T11:12:33Z", "updated_at": "2019-07-31T18:36:26Z", "closed_at": "2019-07-31T18:36:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Was scrolling through the documentation today and found out about the interactive client, however, when doing the exact command shown in the docs it failed due to package not havig the `__main__` file. \r\n\r\nI ran: `python3.7 -m websockets wss://echo.websocket.org/`\r\nAnd got: `/usr/local/bin/python3.7: No module named websockets.__main__; 'websockets' is a package and cannot be directly executed`\r\n\r\nI just checked the repo, and indeed you have the file, so I'm not sure what's going on here.", "performed_via_github_app": null, "score": 1.0}]}