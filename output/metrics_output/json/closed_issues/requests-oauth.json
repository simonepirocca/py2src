{"total_count": 20, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/46", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/46/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/46/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/46", "id": 208151227, "node_id": "MDU6SXNzdWUyMDgxNTEyMjc=", "number": 46, "title": "Does this package support Python 3?", "user": {"login": "cclauss", "id": 3709715, "node_id": "MDQ6VXNlcjM3MDk3MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cclauss", "html_url": "https://github.com/cclauss", "followers_url": "https://api.github.com/users/cclauss/followers", "following_url": "https://api.github.com/users/cclauss/following{/other_user}", "gists_url": "https://api.github.com/users/cclauss/gists{/gist_id}", "starred_url": "https://api.github.com/users/cclauss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cclauss/subscriptions", "organizations_url": "https://api.github.com/users/cclauss/orgs", "repos_url": "https://api.github.com/users/cclauss/repos", "events_url": "https://api.github.com/users/cclauss/events{/privacy}", "received_events_url": "https://api.github.com/users/cclauss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-16T15:19:45Z", "updated_at": "2017-02-17T20:59:36Z", "closed_at": "2017-02-17T20:59:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/32", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/32/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/32/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/32", "id": 5126002, "node_id": "MDU6SXNzdWU1MTI2MDAy", "number": 32, "title": "POST with utf-8 not correctly catched", "user": {"login": "akhenakh", "id": 218430, "node_id": "MDQ6VXNlcjIxODQzMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/218430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akhenakh", "html_url": "https://github.com/akhenakh", "followers_url": "https://api.github.com/users/akhenakh/followers", "following_url": "https://api.github.com/users/akhenakh/following{/other_user}", "gists_url": "https://api.github.com/users/akhenakh/gists{/gist_id}", "starred_url": "https://api.github.com/users/akhenakh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akhenakh/subscriptions", "organizations_url": "https://api.github.com/users/akhenakh/orgs", "repos_url": "https://api.github.com/users/akhenakh/repos", "events_url": "https://api.github.com/users/akhenakh/events{/privacy}", "received_events_url": "https://api.github.com/users/akhenakh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-06-18T15:13:29Z", "updated_at": "2012-06-22T13:18:48Z", "closed_at": "2012-06-21T07:11:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The reason #31 does not work seems to be the same problem I have.\n\nI worked on a [httpie fork for oauth](https://github.com/akhenakh/httpie) and httpie is building all requests with:\nContent-Type: application/x-www-form-urlencoded; charset=utf-8 \n\nThe following test in your code will not work correctly as it only test for equality with \"Content-Type: application/x-www-form-urlencoded\".\nThen the POST data will disappear in the signature, here is a simple patch (one line) that's why I'm posting here.\n\n```\ndiff --git a/oauth_hook/hook.py b/oauth_hook/hook.py\nindex b4042fd..3a85a8b 100644\n--- a/oauth_hook/hook.py\n+++ b/oauth_hook/hook.py\n@@ -71,7 +71,7 @@ class OAuthHook(object):\n         \"\"\"\n         # See issues #10 and #12\n         if ('Content-Type' not in request.headers or \\\n-            request.headers.get('Content-Type') == 'application/x-www-form-urlencoded') \\\n+            request.headers.get('Content-Type').startswith('application/x-www-form-urlencoded')) \\\n             and not isinstance(request.data, basestring):\n             data_and_params = dict(request.data.items() + request.params.items())\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/31", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/31/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/31/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/31", "id": 5046270, "node_id": "MDU6SXNzdWU1MDQ2Mjcw", "number": 31, "title": "Trouble POSTing UTF-8 data", "user": {"login": "samtardif", "id": 355908, "node_id": "MDQ6VXNlcjM1NTkwOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/355908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samtardif", "html_url": "https://github.com/samtardif", "followers_url": "https://api.github.com/users/samtardif/followers", "following_url": "https://api.github.com/users/samtardif/following{/other_user}", "gists_url": "https://api.github.com/users/samtardif/gists{/gist_id}", "starred_url": "https://api.github.com/users/samtardif/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samtardif/subscriptions", "organizations_url": "https://api.github.com/users/samtardif/orgs", "repos_url": "https://api.github.com/users/samtardif/repos", "events_url": "https://api.github.com/users/samtardif/events{/privacy}", "received_events_url": "https://api.github.com/users/samtardif/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-06-13T12:28:03Z", "updated_at": "2012-06-21T07:16:36Z", "closed_at": "2012-06-21T07:16:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having some trouble POSTing UTF-8 content to Bitbucket's REST API. I see there are no tests covering UTF-8 content, so would like to get this verified.\n\nIf I make a POST request with the vanilla Requests library using a hardcoded auth=('un','pw) in my session I can submit content containing UTF-8 characters. If I make the same POST request via an authenticated session using requests-oauth Bitbucket gives me a 500 response. POST requests via requests-oauth that do not include UTF-8 content work just fine.\n\nGeneral approach is:\n\nclient = requests.session(hooks={\n  'pre_request': OAuthHook(access_token = tok,\n    access_token_secret = sec)\n})\nclient.post(url, data=request.form)\n\nI've verified the exact same content being sent works via curl and via a vanilla Requests library client.post(), so something seems funny with requests-oauth's handling of unicode content. Any thoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/26", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/26/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/26/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/26", "id": 4656821, "node_id": "MDU6SXNzdWU0NjU2ODIx", "number": 26, "title": "AttributeError in urllib.py raised using requests-oauth and Imgur's API", "user": {"login": "ollieglass", "id": 311098, "node_id": "MDQ6VXNlcjMxMTA5OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/311098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollieglass", "html_url": "https://github.com/ollieglass", "followers_url": "https://api.github.com/users/ollieglass/followers", "following_url": "https://api.github.com/users/ollieglass/following{/other_user}", "gists_url": "https://api.github.com/users/ollieglass/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollieglass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollieglass/subscriptions", "organizations_url": "https://api.github.com/users/ollieglass/orgs", "repos_url": "https://api.github.com/users/ollieglass/repos", "events_url": "https://api.github.com/users/ollieglass/events{/privacy}", "received_events_url": "https://api.github.com/users/ollieglass/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-05-19T21:23:03Z", "updated_at": "2012-06-20T15:29:12Z", "closed_at": "2012-06-20T15:29:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm calling the [Imgur API](http://api.imgur.com/resources_auth) and seeing \"AttributeError: 'list' object has no attribute 'rstrip'\" raised by urllib.py\n\nI've documented it here https://gist.github.com/2732412 \n\nAny ideas?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/25", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/25/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/25/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/25", "id": 4574939, "node_id": "MDU6SXNzdWU0NTc0OTM5", "number": 25, "title": "Breaks with requests==0.12.1.", "user": {"login": "bryanhelmig", "id": 534177, "node_id": "MDQ6VXNlcjUzNDE3Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/534177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanhelmig", "html_url": "https://github.com/bryanhelmig", "followers_url": "https://api.github.com/users/bryanhelmig/followers", "following_url": "https://api.github.com/users/bryanhelmig/following{/other_user}", "gists_url": "https://api.github.com/users/bryanhelmig/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanhelmig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanhelmig/subscriptions", "organizations_url": "https://api.github.com/users/bryanhelmig/orgs", "repos_url": "https://api.github.com/users/bryanhelmig/repos", "events_url": "https://api.github.com/users/bryanhelmig/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanhelmig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-05-14T23:31:26Z", "updated_at": "2012-05-16T17:46:31Z", "closed_at": "2012-05-16T17:46:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like it expects `._enc_params` on `Request` and also the `.add_to_header()` is missing on the new CookieJar as it is a `dict`. I believe the former is fixed in dev, but the latter still exists.\n\nCan provide more details, but basically, upgrading to 0.12.1 should result in the same Exceptions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/20", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/20/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/20/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/20", "id": 3668416, "node_id": "MDU6SXNzdWUzNjY4NDE2", "number": 20, "title": "OauthHook not passing in oauth_* to Request in auth_header=False", "user": {"login": "mapmyfitness", "id": 1426322, "node_id": "MDEyOk9yZ2FuaXphdGlvbjE0MjYzMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1426322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mapmyfitness", "html_url": "https://github.com/mapmyfitness", "followers_url": "https://api.github.com/users/mapmyfitness/followers", "following_url": "https://api.github.com/users/mapmyfitness/following{/other_user}", "gists_url": "https://api.github.com/users/mapmyfitness/gists{/gist_id}", "starred_url": "https://api.github.com/users/mapmyfitness/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mapmyfitness/subscriptions", "organizations_url": "https://api.github.com/users/mapmyfitness/orgs", "repos_url": "https://api.github.com/users/mapmyfitness/repos", "events_url": "https://api.github.com/users/mapmyfitness/events{/privacy}", "received_events_url": "https://api.github.com/users/mapmyfitness/received_events", "type": "Organization", "site_admin": false}, "labels": [{"id": 1516057, "node_id": "MDU6TGFiZWwxNTE2MDU3", "url": "https://api.github.com/repos/maraujop/requests-oauth/labels/fixed", "name": "fixed", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2012-03-15T16:05:19Z", "updated_at": "2012-05-16T14:43:06Z", "closed_at": "2012-05-16T14:43:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "We're writing a nostest framework against our web service API using requests and requests-oauth where our API\n\nIn the setUp():\n\n``` python\n...\n        if self.auth == \"oauth\":\n            oauth_hook = OAuthHook(self.access_token, self.access_token_secret, \n                                   self.consumer_key, self.consumer_secret, \n                                   header_auth=False)\n            self.client = requests.session(hooks={'pre_request': oauth_hook})\n        else:\n            self.client = requests\n...\n```\n\nand then the method that makes the API webservice call:\n\n``` python\n...\n            # Handle POST vs. GET\n            if method == 'POST':\n                data = self.append_auth(data=data) # doesn't do anything if 'oauth'\n                req = self.client.post(url, data=data, allow_redirects=True)\n            else:\n                url = self.append_auth(url=url) # doesn't do anything if 'oauth'\n                req = self.client.get(url, allow_redirects=True)\n...\n```\n\nOur API authenticates the oauth_\\* parameters through the HTTP request however when I output the API result, it's not showing the oauth_\\* parameters passed through.\n\n``` python\nprint \"req.request=\", req.request.__dict__\n```\n\nNote that when I do the header_auth=True, I do see the headers {Authorization...} int the request.\n\ni.e,\nI'm testing http://my.webservice.com/get?foo=bar\n\nI would expect your oauthhook to do the following:\n\nhttp://my.webservice.com/get?foo=bar&oauth_token=xxx&oauth_signature=xxx&oauth_nonce=xxx...etc...\n\nBut that's not what I'm seeing.  Am I missing something?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/18", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/18/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/18/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/18", "id": 3527580, "node_id": "MDU6SXNzdWUzNTI3NTgw", "number": 18, "title": "Determining if consumer_key/secret exist", "user": {"login": "michaelhelmick", "id": 352270, "node_id": "MDQ6VXNlcjM1MjI3MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/352270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelhelmick", "html_url": "https://github.com/michaelhelmick", "followers_url": "https://api.github.com/users/michaelhelmick/followers", "following_url": "https://api.github.com/users/michaelhelmick/following{/other_user}", "gists_url": "https://api.github.com/users/michaelhelmick/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelhelmick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelhelmick/subscriptions", "organizations_url": "https://api.github.com/users/michaelhelmick/orgs", "repos_url": "https://api.github.com/users/michaelhelmick/repos", "events_url": "https://api.github.com/users/michaelhelmick/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelhelmick/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1516057, "node_id": "MDU6TGFiZWwxNTE2MDU3", "url": "https://api.github.com/repos/maraujop/requests-oauth/labels/fixed", "name": "fixed", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2012-03-06T17:06:27Z", "updated_at": "2012-05-16T14:43:58Z", "closed_at": "2012-05-16T14:43:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Say I set\n\n``` python\nOAuthHook.consumer_key = 'my_consumer_key'\nOAuthHook.consumer_secret = 'my_consumer_secret'\n```\n\nIt'd be nice if there was a way to determine if consumer_key and consumer_secret were set.\n\nIn my case, I want to use a request.session with a hook-pre_request of OAuthHook() using the key/secret if they are set AND if the oauth_token/secret is set when someone initializes my class, I want to then have request.session use the hook-pre_request also passing the oauth_token/secret\n\nLet me know if you need me to elaborate more?\n\nSomething like:\n\n``` python\nif OAuthHook.consumer_key is not None and OAuthHook.consumer_secret is not None:\n    self.client = requests.session(hooks={'pre_request': OAuthHook()})\n\nif oauth_token and oauth_secret:  # These are the ones that are passed in my init from maybe a recored in the db\n    oauth_hook = OAuthHook(self.oauth_token, self.oauth_secret)\n    self.client = requests.session(hooks={'pre_request': oauth_hook})\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/17", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/17/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/17/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/17", "id": 3375281, "node_id": "MDU6SXNzdWUzMzc1Mjgx", "number": 17, "title": "fix for issue #12 breaks GET request with params", "user": {"login": "joeshaw", "id": 39916, "node_id": "MDQ6VXNlcjM5OTE2", "avatar_url": "https://avatars2.githubusercontent.com/u/39916?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joeshaw", "html_url": "https://github.com/joeshaw", "followers_url": "https://api.github.com/users/joeshaw/followers", "following_url": "https://api.github.com/users/joeshaw/following{/other_user}", "gists_url": "https://api.github.com/users/joeshaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/joeshaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joeshaw/subscriptions", "organizations_url": "https://api.github.com/users/joeshaw/orgs", "repos_url": "https://api.github.com/users/joeshaw/repos", "events_url": "https://api.github.com/users/joeshaw/events{/privacy}", "received_events_url": "https://api.github.com/users/joeshaw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1516057, "node_id": "MDU6TGFiZWwxNTE2MDU3", "url": "https://api.github.com/repos/maraujop/requests-oauth/labels/fixed", "name": "fixed", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2012-02-24T16:41:47Z", "updated_at": "2012-05-16T14:43:46Z", "closed_at": "2012-05-16T14:43:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Doing a simple GET request passing in `params` when `header_auth` is False breaks.  Ie,\n\n```\nsession.get(\"http://www.example.com\", params={\"foo\": \"bar\"})\n```\n\nThis is because `get_normalized_parameters()` only sets `request.data_and_params` if the Content-Type is `application/x-www-form-urlencoded` or `request.data` is a basestring.  For most GET requests neither is true: Content-Type is unset and `request.data` is None because there is no body.  (Things may work if you pass in the values as `data` because this sends a body, but sending a body with a GET request is considered bad form.)\n\nWhen `header_auth` is False, `__call__()` replaces the `request.url` with a call to `to_url()`, which iterates over the values in the now-unset `request.data_and_params`.  As a result, your parameters are never passed through.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/16", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/16/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/16/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/16", "id": 3224853, "node_id": "MDU6SXNzdWUzMjI0ODUz", "number": 16, "title": "OAuth verifier fails signature with header_auth=True", "user": {"login": "samuraisam", "id": 101497, "node_id": "MDQ6VXNlcjEwMTQ5Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/101497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuraisam", "html_url": "https://github.com/samuraisam", "followers_url": "https://api.github.com/users/samuraisam/followers", "following_url": "https://api.github.com/users/samuraisam/following{/other_user}", "gists_url": "https://api.github.com/users/samuraisam/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuraisam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuraisam/subscriptions", "organizations_url": "https://api.github.com/users/samuraisam/orgs", "repos_url": "https://api.github.com/users/samuraisam/repos", "events_url": "https://api.github.com/users/samuraisam/events{/privacy}", "received_events_url": "https://api.github.com/users/samuraisam/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1516057, "node_id": "MDU6TGFiZWwxNTE2MDU3", "url": "https://api.github.com/repos/maraujop/requests-oauth/labels/fixed", "name": "fixed", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-02-14T19:39:58Z", "updated_at": "2012-05-16T14:43:26Z", "closed_at": "2012-05-16T14:43:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "When fetching the access token using header auth, the signature base is incorrectly computed.\n\nDoesn't work:\n\n```\n# create an oauth hook with the consumer and request token values\nhook = OAuthHook(..., header_auth=True)\nhook.token.verifier = get_verifier_from_redirect(previous_request)\nsesh = requests.session(hooks={'pre_request': hook})\nsesh.get('http://something.com/oauth/access_token').content == 'Invalid signing base'\n```\n\nDoes work:\n\n```\n# create an oauth hook with the consumer and request token values\nhook = OAuthHook(...)\nsesh = requests.session(hooks={'pre_request': hook})\nsesh.get('http://something.com/oauth/access_token', \n          params={'oauth_verifier': get_verifier_from_redirect(previous_request)})\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/15", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/15/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/15/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/15", "id": 3210634, "node_id": "MDU6SXNzdWUzMjEwNjM0", "number": 15, "title": "Oauth2", "user": {"login": "surfeurX", "id": 68894, "node_id": "MDQ6VXNlcjY4ODk0", "avatar_url": "https://avatars2.githubusercontent.com/u/68894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/surfeurX", "html_url": "https://github.com/surfeurX", "followers_url": "https://api.github.com/users/surfeurX/followers", "following_url": "https://api.github.com/users/surfeurX/following{/other_user}", "gists_url": "https://api.github.com/users/surfeurX/gists{/gist_id}", "starred_url": "https://api.github.com/users/surfeurX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/surfeurX/subscriptions", "organizations_url": "https://api.github.com/users/surfeurX/orgs", "repos_url": "https://api.github.com/users/surfeurX/repos", "events_url": "https://api.github.com/users/surfeurX/events{/privacy}", "received_events_url": "https://api.github.com/users/surfeurX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-02-13T22:40:33Z", "updated_at": "2012-03-06T09:35:41Z", "closed_at": "2012-03-05T21:26:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone, \n\ndoes requests-oauth will support OAuth 2.0 in the future? \n\nthank you\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/14", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/14/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/14/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/14", "id": 3189345, "node_id": "MDU6SXNzdWUzMTg5MzQ1", "number": 14, "title": "access_token is ignored when access_token_secret is not passed", "user": {"login": "fletom", "id": 127497, "node_id": "MDQ6VXNlcjEyNzQ5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/127497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fletom", "html_url": "https://github.com/fletom", "followers_url": "https://api.github.com/users/fletom/followers", "following_url": "https://api.github.com/users/fletom/following{/other_user}", "gists_url": "https://api.github.com/users/fletom/gists{/gist_id}", "starred_url": "https://api.github.com/users/fletom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fletom/subscriptions", "organizations_url": "https://api.github.com/users/fletom/orgs", "repos_url": "https://api.github.com/users/fletom/repos", "events_url": "https://api.github.com/users/fletom/events{/privacy}", "received_events_url": "https://api.github.com/users/fletom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1516057, "node_id": "MDU6TGFiZWwxNTE2MDU3", "url": "https://api.github.com/repos/maraujop/requests-oauth/labels/fixed", "name": "fixed", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-02-12T05:40:33Z", "updated_at": "2012-05-16T14:44:08Z", "closed_at": "2012-05-16T14:44:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "In some cases, such as Step 3 of https://dev.twitter.com/docs/auth/implementing-sign-twitter only the access_token is required. Right now the workaround is passing an empty string, which is ugly and non-obvious.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/13", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/13/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/13/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/13", "id": 3188975, "node_id": "MDU6SXNzdWUzMTg4OTc1", "number": 13, "title": "Implement OAuth callbacks in authentication headers", "user": {"login": "fletom", "id": 127497, "node_id": "MDQ6VXNlcjEyNzQ5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/127497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fletom", "html_url": "https://github.com/fletom", "followers_url": "https://api.github.com/users/fletom/followers", "following_url": "https://api.github.com/users/fletom/following{/other_user}", "gists_url": "https://api.github.com/users/fletom/gists{/gist_id}", "starred_url": "https://api.github.com/users/fletom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fletom/subscriptions", "organizations_url": "https://api.github.com/users/fletom/orgs", "repos_url": "https://api.github.com/users/fletom/repos", "events_url": "https://api.github.com/users/fletom/events{/privacy}", "received_events_url": "https://api.github.com/users/fletom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1516057, "node_id": "MDU6TGFiZWwxNTE2MDU3", "url": "https://api.github.com/repos/maraujop/requests-oauth/labels/fixed", "name": "fixed", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2012-02-12T03:24:01Z", "updated_at": "2012-05-16T14:43:35Z", "closed_at": "2012-05-16T14:43:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "See: https://dev.twitter.com/docs/auth/implementing-sign-twitter\n\nI am working on this in my fork ATM.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/12", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/12/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/12/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/12", "id": 3188203, "node_id": "MDU6SXNzdWUzMTg4MjAz", "number": 12, "title": "No support for string data", "user": {"login": "immunda", "id": 524365, "node_id": "MDQ6VXNlcjUyNDM2NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/524365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/immunda", "html_url": "https://github.com/immunda", "followers_url": "https://api.github.com/users/immunda/followers", "following_url": "https://api.github.com/users/immunda/following{/other_user}", "gists_url": "https://api.github.com/users/immunda/gists{/gist_id}", "starred_url": "https://api.github.com/users/immunda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/immunda/subscriptions", "organizations_url": "https://api.github.com/users/immunda/orgs", "repos_url": "https://api.github.com/users/immunda/repos", "events_url": "https://api.github.com/users/immunda/events{/privacy}", "received_events_url": "https://api.github.com/users/immunda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1516057, "node_id": "MDU6TGFiZWwxNTE2MDU3", "url": "https://api.github.com/repos/maraujop/requests-oauth/labels/fixed", "name": "fixed", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2012-02-11T23:51:53Z", "updated_at": "2012-05-10T09:00:53Z", "closed_at": "2012-05-10T09:00:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is what I think gldnspud's pull request was in reference to.\n\nIf you provide a string instead of a dict as the data arg to the request, then 'get_normalized_parameters()'  will cause an exception when it tries to access 'request.data.items()'; which is a string not a dict.\n\nThis behaviour is supported by the requests library: \"There are many times that you want to send data that is not form-encoded. If you pass in a string instead of a dict, that data will be posted directly\".\n\nI'm not sure on the best solution to this - I'm using a solution similar to gldnspud's, but am checking the whether request.data is a basestring instance rather than checking the \"Content-Type\" header explicitly.\n\nThanks, Phil.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/9", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/9/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/9/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/9", "id": 2595687, "node_id": "MDU6SXNzdWUyNTk1Njg3", "number": 9, "title": "Does not work with file uploads", "user": {"login": "nisc", "id": 141336, "node_id": "MDQ6VXNlcjE0MTMzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/141336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nisc", "html_url": "https://github.com/nisc", "followers_url": "https://api.github.com/users/nisc/followers", "following_url": "https://api.github.com/users/nisc/following{/other_user}", "gists_url": "https://api.github.com/users/nisc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nisc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nisc/subscriptions", "organizations_url": "https://api.github.com/users/nisc/orgs", "repos_url": "https://api.github.com/users/nisc/repos", "events_url": "https://api.github.com/users/nisc/events{/privacy}", "received_events_url": "https://api.github.com/users/nisc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2011-12-18T23:50:48Z", "updated_at": "2011-12-22T12:09:56Z", "closed_at": "2011-12-22T12:09:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've created the \"client\" object as described in your documentation.\n\n```\nclient = requests.session(hooks={'pre_request': oauth_hook})\n```\n\nHowever, when I try to upload a file to a server using `client.post(URL, files={'filename':open('filename')})`, the token and signature are not sent to the server. (I've used WIreshark to inspect the network traffic.)\n\nHence, the upload fails because of missing authentication.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/8", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/8/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/8/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/8", "id": 2365167, "node_id": "MDU6SXNzdWUyMzY1MTY3", "number": 8, "title": "x.encode('utf-8') may raise UnicodeDecodeError", "user": {"login": "jqxl0205", "id": 337358, "node_id": "MDQ6VXNlcjMzNzM1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/337358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jqxl0205", "html_url": "https://github.com/jqxl0205", "followers_url": "https://api.github.com/users/jqxl0205/followers", "following_url": "https://api.github.com/users/jqxl0205/following{/other_user}", "gists_url": "https://api.github.com/users/jqxl0205/gists{/gist_id}", "starred_url": "https://api.github.com/users/jqxl0205/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jqxl0205/subscriptions", "organizations_url": "https://api.github.com/users/jqxl0205/orgs", "repos_url": "https://api.github.com/users/jqxl0205/repos", "events_url": "https://api.github.com/users/jqxl0205/events{/privacy}", "received_events_url": "https://api.github.com/users/jqxl0205/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-11-28T08:54:07Z", "updated_at": "2011-12-19T10:15:24Z", "closed_at": "2011-12-19T10:15:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "see here https://github.com/maraujop/requests-oauth/blob/dev/oauth_hook/auth.py#L23\n\nx.encode('utf-8') may raise UnicodeDecodeError for in request  self.data 's value is encoded to utf-8\n\nso, here should do like this\n\n``` python\nx.encode('utf-8') if isinstance(x, unicode) else x\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/7", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/7/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/7/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/7", "id": 2365117, "node_id": "MDU6SXNzdWUyMzY1MTE3", "number": 7, "title": "to_utf8_if_string not defined", "user": {"login": "jqxl0205", "id": 337358, "node_id": "MDQ6VXNlcjMzNzM1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/337358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jqxl0205", "html_url": "https://github.com/jqxl0205", "followers_url": "https://api.github.com/users/jqxl0205/followers", "following_url": "https://api.github.com/users/jqxl0205/following{/other_user}", "gists_url": "https://api.github.com/users/jqxl0205/gists{/gist_id}", "starred_url": "https://api.github.com/users/jqxl0205/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jqxl0205/subscriptions", "organizations_url": "https://api.github.com/users/jqxl0205/orgs", "repos_url": "https://api.github.com/users/jqxl0205/repos", "events_url": "https://api.github.com/users/jqxl0205/events{/privacy}", "received_events_url": "https://api.github.com/users/jqxl0205/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-11-28T08:47:32Z", "updated_at": "2011-12-19T10:15:10Z", "closed_at": "2011-12-19T10:15:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "see here https://github.com/maraujop/requests-oauth/blob/dev/oauth_hook/auth.py#L28\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/6", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/6/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/6/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/6", "id": 2287916, "node_id": "MDU6SXNzdWUyMjg3OTE2", "number": 6, "title": "Retrieving a request_token from Twitter fails with Requests-oauth 0.2.2 and Requests 0.8.1\r\n", "user": {"login": "ctoth", "id": 236552, "node_id": "MDQ6VXNlcjIzNjU1Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/236552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctoth", "html_url": "https://github.com/ctoth", "followers_url": "https://api.github.com/users/ctoth/followers", "following_url": "https://api.github.com/users/ctoth/following{/other_user}", "gists_url": "https://api.github.com/users/ctoth/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctoth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctoth/subscriptions", "organizations_url": "https://api.github.com/users/ctoth/orgs", "repos_url": "https://api.github.com/users/ctoth/repos", "events_url": "https://api.github.com/users/ctoth/events{/privacy}", "received_events_url": "https://api.github.com/users/ctoth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2011-11-19T11:23:07Z", "updated_at": "2012-01-17T11:05:41Z", "closed_at": "2012-01-17T11:05:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Previously, posting to https://api.twitter.com/oauth/request_token with a consumer key and secret provided would give back a useable request token. It now gives a rather useless http 401 error:\n\n``` python\n>>> r=t.client.post('https://api.twitter.com/oauth/request_token')\n>>> r\n<Response [401]>\n>>> r.content\nu'Failed to validate oauth signature and token'\n>>> r.request.headers\n{'Content-Type': 'application/x-www-form-urlencoded', 'Accept-Encoding': 'identi\nty, deflate, compress, gzip', 'Accept': '*/*', 'User-Agent': 'python-requests/0.\n8.1'}\n>>> r.request.params\n{'oauth_nonce': '69262010', 'oauth_timestamp': '1321701553', 'oauth_consumer_key\n': 'Iay3HXuKW3lYQ1REEKnWg', 'oauth_signature_method': 'HMAC-SHA1', 'oauth_versio\nn': '1.0', 'oauth_signature': 'wcPIt0x1G0MpE+eO9NNQUwruRP8='}\n>>> r.request.data\n{}\n>>> r.request.cookies\n{'guest_id': 'v1%3A132170155381775185', '_twitter_sess': 'BAh7CDoPY3JlYXRlZF9hdG\nwrCJo2jbszAToHaWQiJTU5MWVjNmJjYjRiZTA1%250AMmRhM2UxMDZlNWM4Yjk2MWE1IgpmbGFzaElDO\nidBY3Rpb25Db250cm9sbGVy%250AOjpGbGFzaDo6Rmxhc2hIYXNoewAGOgpAdXNlZHsA--1ba7fb8449\nbec52a105b50b825a4623c35a2fe07', 'k': '10.35.56.136.1321701553810853'}\n>>>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/5", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/5/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/5/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/5", "id": 2256143, "node_id": "MDU6SXNzdWUyMjU2MTQz", "number": 5, "title": "Requests 0.8 breaks requests-oauth", "user": {"login": "idan", "id": 22723, "node_id": "MDQ6VXNlcjIyNzIz", "avatar_url": "https://avatars0.githubusercontent.com/u/22723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idan", "html_url": "https://github.com/idan", "followers_url": "https://api.github.com/users/idan/followers", "following_url": "https://api.github.com/users/idan/following{/other_user}", "gists_url": "https://api.github.com/users/idan/gists{/gist_id}", "starred_url": "https://api.github.com/users/idan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idan/subscriptions", "organizations_url": "https://api.github.com/users/idan/orgs", "repos_url": "https://api.github.com/users/idan/repos", "events_url": "https://api.github.com/users/idan/events{/privacy}", "received_events_url": "https://api.github.com/users/idan/received_events", "type": "User", "site_admin": true}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-11-16T13:21:07Z", "updated_at": "2011-11-17T13:03:26Z", "closed_at": "2011-11-17T13:03:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears that 0.8 breaks something in requests-oauth.\n\nconsider the following code:\n\n``` python\n# I'm assuming you have CONSUMER_KEY, CONSUMER_SECRET,\n# TWITTER_TOKEN, TWITTER_SECRET already.\n\nimport requests\nfrom oauth_hook.hook import OAuthHook\nOAuthHook.consumer_key = CONSUMER_KEY\nOAuthHook.consumer_secret = CONSUMER_SECRET\nhook = OAuthHook(TWITTER_TOKEN, TWITTER_SECRET)\n\nclient = requests.session(hooks={'pre_request': hook})\n\nr1 = client.get('http://api.twitter.com/1/account/rate_limit_status.json')\nprint(r1)\n\nr2 = client.get('http://api.twitter.com/1/account/verify_credentials.json')\nprint(r2)\n```\n\nWith requests 0.7.6, both requests return 200. With 0.8.x, the 2nd (and subsequent request) return HTTP/500.\n\nI checked with keep-alive disabled, but it doesn't solve the issue. :(\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/4", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/4/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/4/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/4", "id": 2157233, "node_id": "MDU6SXNzdWUyMTU3MjMz", "number": 4, "title": "Use new authentication system", "user": {"login": "ken-reitz", "id": 119893, "node_id": "MDQ6VXNlcjExOTg5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/119893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ken-reitz", "html_url": "https://github.com/ken-reitz", "followers_url": "https://api.github.com/users/ken-reitz/followers", "following_url": "https://api.github.com/users/ken-reitz/following{/other_user}", "gists_url": "https://api.github.com/users/ken-reitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ken-reitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ken-reitz/subscriptions", "organizations_url": "https://api.github.com/users/ken-reitz/orgs", "repos_url": "https://api.github.com/users/ken-reitz/repos", "events_url": "https://api.github.com/users/ken-reitz/events{/privacy}", "received_events_url": "https://api.github.com/users/ken-reitz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-11-06T18:20:08Z", "updated_at": "2012-01-13T18:00:52Z", "closed_at": "2012-01-13T18:00:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://docs.python-requests.org/en/latest/user/advanced/#custom-authentication\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/maraujop/requests-oauth/issues/3", "repository_url": "https://api.github.com/repos/maraujop/requests-oauth", "labels_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/3/comments", "events_url": "https://api.github.com/repos/maraujop/requests-oauth/issues/3/events", "html_url": "https://github.com/maraujop/requests-oauth/issues/3", "id": 1923494, "node_id": "MDU6SXNzdWUxOTIzNDk0", "number": 3, "title": "Support oAuth calls without provided access token.", "user": {"login": "ctoth", "id": 236552, "node_id": "MDQ6VXNlcjIzNjU1Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/236552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctoth", "html_url": "https://github.com/ctoth", "followers_url": "https://api.github.com/users/ctoth/followers", "following_url": "https://api.github.com/users/ctoth/following{/other_user}", "gists_url": "https://api.github.com/users/ctoth/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctoth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctoth/subscriptions", "organizations_url": "https://api.github.com/users/ctoth/orgs", "repos_url": "https://api.github.com/users/ctoth/repos", "events_url": "https://api.github.com/users/ctoth/events{/privacy}", "received_events_url": "https://api.github.com/users/ctoth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2011-10-16T22:03:59Z", "updated_at": "2011-10-30T10:14:48Z", "closed_at": "2011-10-30T10:14:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, some oAuth calls require a consumer key and secret to be set, but are made without an access token. I refer specifically to the Twitter oAuth web flow login process where one must request an authentication URI to forward a user to before possessing a key and secret. Currently the hook does not support this.\n", "performed_via_github_app": null, "score": 1.0}]}