{"total_count": 42, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/taynaud/python-louvain/issues/64", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/64/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/64/events", "html_url": "https://github.com/taynaud/python-louvain/issues/64", "id": 602635257, "node_id": "MDU6SXNzdWU2MDI2MzUyNTc=", "number": 64, "title": "How does 'best_partition' handle a mix of negative and positive weights? ", "user": {"login": "jolespin", "id": 9061708, "node_id": "MDQ6VXNlcjkwNjE3MDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9061708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jolespin", "html_url": "https://github.com/jolespin", "followers_url": "https://api.github.com/users/jolespin/followers", "following_url": "https://api.github.com/users/jolespin/following{/other_user}", "gists_url": "https://api.github.com/users/jolespin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jolespin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jolespin/subscriptions", "organizations_url": "https://api.github.com/users/jolespin/orgs", "repos_url": "https://api.github.com/users/jolespin/repos", "events_url": "https://api.github.com/users/jolespin/events{/privacy}", "received_events_url": "https://api.github.com/users/jolespin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-19T06:22:52Z", "updated_at": "2020-05-23T14:48:01Z", "closed_at": "2020-05-23T12:43:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to create a graph where the weights range continuously from -1 to 1.  How does your louvain algorithm handle negative weights?  Does it force them into everything into the positive realm?  For example, -1 to 1 would be forced into 0 and 2?  In particular, I'm using correlation values as weights so 0 should be a weight of 0 while negative 1 should represent repulsive forces and 1 should represent attractive forces. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/62", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/62/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/62/events", "html_url": "https://github.com/taynaud/python-louvain/issues/62", "id": 590264548, "node_id": "MDU6SXNzdWU1OTAyNjQ1NDg=", "number": 62, "title": "`igraph` based modularity with Louvain is very different compared to the modularity with Louvain of `python-louvain`", "user": {"login": "seralouk", "id": 25902670, "node_id": "MDQ6VXNlcjI1OTAyNjcw", "avatar_url": "https://avatars0.githubusercontent.com/u/25902670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seralouk", "html_url": "https://github.com/seralouk", "followers_url": "https://api.github.com/users/seralouk/followers", "following_url": "https://api.github.com/users/seralouk/following{/other_user}", "gists_url": "https://api.github.com/users/seralouk/gists{/gist_id}", "starred_url": "https://api.github.com/users/seralouk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seralouk/subscriptions", "organizations_url": "https://api.github.com/users/seralouk/orgs", "repos_url": "https://api.github.com/users/seralouk/repos", "events_url": "https://api.github.com/users/seralouk/events{/privacy}", "received_events_url": "https://api.github.com/users/seralouk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-30T12:50:16Z", "updated_at": "2020-03-30T13:36:55Z", "closed_at": "2020-03-30T13:36:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the same graph, `igraph` based modularity with Louvain is very different compared to the modularity with Louvain of `python-louvain`. Why?\r\n\r\n```\r\nimport numpy as np\r\nfrom igraph import *\r\nnp.random.seed(9)\r\n\r\nA = abs(np.random.rand(10,10))\r\nnp.fill_diagonal(A,0.0)\r\n\r\n# igraph\r\ngraph = Graph.Weighted_Adjacency(A.tolist(), mode=ADJ_UNDIRECTED, attr=\"weight\", loops=False)\r\nLouvain = graph.community_multilevel(weights=graph.es['weight'], return_levels=False)\r\nmodularity = graph.modularity(Louvain, weights=graph.es['weight'])\r\nprint(modularity)\r\n\r\n# Networkx\r\n#https://python-louvain.readthedocs.io/en/latest/\r\n\r\nimport networkx as nx\r\nimport community\r\n\r\nG = nx.from_numpy_array(A)\r\nLouvain = community.best_partition(G, weight='weight')\r\nmodularity = community.modularity(Louvain, G, weight='weight')\r\nprint(modularity)\r\n\r\n0.0004091584057449027\r\n0.046707336056903956\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/61", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/61/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/61/events", "html_url": "https://github.com/taynaud/python-louvain/issues/61", "id": 589781957, "node_id": "MDU6SXNzdWU1ODk3ODE5NTc=", "number": 61, "title": "Weird high modularity for random graph", "user": {"login": "seralouk", "id": 25902670, "node_id": "MDQ6VXNlcjI1OTAyNjcw", "avatar_url": "https://avatars0.githubusercontent.com/u/25902670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seralouk", "html_url": "https://github.com/seralouk", "followers_url": "https://api.github.com/users/seralouk/followers", "following_url": "https://api.github.com/users/seralouk/following{/other_user}", "gists_url": "https://api.github.com/users/seralouk/gists{/gist_id}", "starred_url": "https://api.github.com/users/seralouk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seralouk/subscriptions", "organizations_url": "https://api.github.com/users/seralouk/orgs", "repos_url": "https://api.github.com/users/seralouk/repos", "events_url": "https://api.github.com/users/seralouk/events{/privacy}", "received_events_url": "https://api.github.com/users/seralouk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-29T12:35:05Z", "updated_at": "2020-04-01T18:25:28Z", "closed_at": "2020-04-01T18:25:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the same graph and I estimate the modularity of the graph using the louvain community detection algorithm.\r\n\r\nThe modularity value based on `networkx` is positive whereas based on `igraph` module is negative.\r\nI would expect these values to be close enough (not identical due to potential algorithm implementation differences).\r\n\r\nFor the `networkx` graph I use `python-louvain` (https://python-louvain.readthedocs.io/en/latest/api.html).\r\n\r\nFor the `igraph` graph, I use `community_multilevel`.\r\n\r\n```\r\nimport community\r\nimport networkx as nx\r\nimport numpy as np\r\nfrom igraph import *\r\nnp.random.seed(9)\r\n\r\nA = np.random.rand(10,10)\r\nA = np.abs(A)\r\n\r\ngraph = nx.from_numpy_matrix(A, create_using=None)\r\npartition = community.best_partition(graph)\r\noutputModularity = community.modularity(partition, graph, weight='weight')\r\nprint(outputModularity)\r\n\r\ngraph = Graph.Weighted_Adjacency(A.tolist(), mode=ADJ_UNDIRECTED, attr=\"weight\", loops=False)\r\nimplementLouvain = graph.community_multilevel(weights=graph.es['weight'], return_levels=False)\r\noutputModularity = graph.modularity(implementLouvain)\r\nprint(outputModularity)\r\n\r\n0.1641230548235743\r\n-0.053333333333333344\r\n```\r\n\r\nThe graph (A) is random so I guess the negative value is the correct one.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/60", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/60/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/60/events", "html_url": "https://github.com/taynaud/python-louvain/issues/60", "id": 571244401, "node_id": "MDU6SXNzdWU1NzEyNDQ0MDE=", "number": 60, "title": "MemoryError on large graphs", "user": {"login": "GillesVandewiele", "id": 5750603, "node_id": "MDQ6VXNlcjU3NTA2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5750603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GillesVandewiele", "html_url": "https://github.com/GillesVandewiele", "followers_url": "https://api.github.com/users/GillesVandewiele/followers", "following_url": "https://api.github.com/users/GillesVandewiele/following{/other_user}", "gists_url": "https://api.github.com/users/GillesVandewiele/gists{/gist_id}", "starred_url": "https://api.github.com/users/GillesVandewiele/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GillesVandewiele/subscriptions", "organizations_url": "https://api.github.com/users/GillesVandewiele/orgs", "repos_url": "https://api.github.com/users/GillesVandewiele/repos", "events_url": "https://api.github.com/users/GillesVandewiele/events{/privacy}", "received_events_url": "https://api.github.com/users/GillesVandewiele/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-26T10:52:52Z", "updated_at": "2020-04-06T12:06:57Z", "closed_at": "2020-04-06T12:06:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have been getting `MemoryError`s when applying the community detection on large graphs (a few hundred thousands of nodes). The problem appeared to be in the `np.random.permutation` call. We managed to fix this by applying a dirty patch which switches the np.random.permutation to use itertools.permutations:\r\n```\r\nimport numpy as np\r\nimport community\r\nimport itertools\r\n\r\ndef check_random_state(seed):\r\n    return np.random\r\ncommunity.community_louvain.check_random_state = check_random_state\r\nnp.random.permutation = lambda x: next(itertools.permutations(x))\r\n\r\n```\r\n\r\nThis is of course far from a clean solution, as the random_state is no longer used.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/58", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/58/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/58/events", "html_url": "https://github.com/taynaud/python-louvain/issues/58", "id": 535599884, "node_id": "MDU6SXNzdWU1MzU1OTk4ODQ=", "number": 58, "title": "Inclusion of directed graph?", "user": {"login": "DonaldTsang", "id": 10583082, "node_id": "MDQ6VXNlcjEwNTgzMDgy", "avatar_url": "https://avatars1.githubusercontent.com/u/10583082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DonaldTsang", "html_url": "https://github.com/DonaldTsang", "followers_url": "https://api.github.com/users/DonaldTsang/followers", "following_url": "https://api.github.com/users/DonaldTsang/following{/other_user}", "gists_url": "https://api.github.com/users/DonaldTsang/gists{/gist_id}", "starred_url": "https://api.github.com/users/DonaldTsang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DonaldTsang/subscriptions", "organizations_url": "https://api.github.com/users/DonaldTsang/orgs", "repos_url": "https://api.github.com/users/DonaldTsang/repos", "events_url": "https://api.github.com/users/DonaldTsang/events{/privacy}", "received_events_url": "https://api.github.com/users/DonaldTsang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-10T09:26:46Z", "updated_at": "2020-04-06T11:36:58Z", "closed_at": "2020-04-06T11:36:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to include https://github.com/nicolasdugue/DirectedLouvain as an option?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/57", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/57/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/57/events", "html_url": "https://github.com/taynaud/python-louvain/issues/57", "id": 530215863, "node_id": "MDU6SXNzdWU1MzAyMTU4NjM=", "number": 57, "title": "How to trace the process of community evolution?", "user": {"login": "tomorrow1pan", "id": 21055561, "node_id": "MDQ6VXNlcjIxMDU1NTYx", "avatar_url": "https://avatars2.githubusercontent.com/u/21055561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomorrow1pan", "html_url": "https://github.com/tomorrow1pan", "followers_url": "https://api.github.com/users/tomorrow1pan/followers", "following_url": "https://api.github.com/users/tomorrow1pan/following{/other_user}", "gists_url": "https://api.github.com/users/tomorrow1pan/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomorrow1pan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomorrow1pan/subscriptions", "organizations_url": "https://api.github.com/users/tomorrow1pan/orgs", "repos_url": "https://api.github.com/users/tomorrow1pan/repos", "events_url": "https://api.github.com/users/tomorrow1pan/events{/privacy}", "received_events_url": "https://api.github.com/users/tomorrow1pan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-29T08:26:32Z", "updated_at": "2020-04-06T11:51:29Z", "closed_at": "2020-04-06T11:51:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks @taynaud ! Very appreciate this projects. It helps me a lot.\r\n\r\nNow the problem is when I study these communities how to evolve (new nodes and relationships will be added into the graph with time), it will generate new community ids everytime.  I failed to fix ids on these existing communities to trace the process of community evolution. \r\n\r\nFor example, this month I find a community **{'a': 1, 'b': 1, 'c': 1, 'd': 1}**. It has four nodes: 'a', 'b', 'c', 'd'. **A week later, New nodes, 'e' and 'f', join this community**. But when I  restart the code, I get a community **{'a': 2, 'b': 2, 'c': 2, 'd': 2, 'e': 2, 'f': 2}**.  It's difficult to know the community 1 and community 2 are the same community actually, just in diffrent time. How can I solve this problem? \r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/56", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/56/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/56/events", "html_url": "https://github.com/taynaud/python-louvain/issues/56", "id": 524151501, "node_id": "MDU6SXNzdWU1MjQxNTE1MDE=", "number": 56, "title": "Does this support weighted graph?", "user": {"login": "neverUseThisName", "id": 36028079, "node_id": "MDQ6VXNlcjM2MDI4MDc5", "avatar_url": "https://avatars1.githubusercontent.com/u/36028079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neverUseThisName", "html_url": "https://github.com/neverUseThisName", "followers_url": "https://api.github.com/users/neverUseThisName/followers", "following_url": "https://api.github.com/users/neverUseThisName/following{/other_user}", "gists_url": "https://api.github.com/users/neverUseThisName/gists{/gist_id}", "starred_url": "https://api.github.com/users/neverUseThisName/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neverUseThisName/subscriptions", "organizations_url": "https://api.github.com/users/neverUseThisName/orgs", "repos_url": "https://api.github.com/users/neverUseThisName/repos", "events_url": "https://api.github.com/users/neverUseThisName/events{/privacy}", "received_events_url": "https://api.github.com/users/neverUseThisName/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-18T05:52:27Z", "updated_at": "2020-04-06T09:12:08Z", "closed_at": "2020-04-06T09:12:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "The demo in readme work in an unweighted graph. Does this support weighted graphs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/55", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/55/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/55/events", "html_url": "https://github.com/taynaud/python-louvain/issues/55", "id": 500335708, "node_id": "MDU6SXNzdWU1MDAzMzU3MDg=", "number": 55, "title": "modularity for multigraph", "user": {"login": "XiaoxiaLin", "id": 7916863, "node_id": "MDQ6VXNlcjc5MTY4NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7916863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XiaoxiaLin", "html_url": "https://github.com/XiaoxiaLin", "followers_url": "https://api.github.com/users/XiaoxiaLin/followers", "following_url": "https://api.github.com/users/XiaoxiaLin/following{/other_user}", "gists_url": "https://api.github.com/users/XiaoxiaLin/gists{/gist_id}", "starred_url": "https://api.github.com/users/XiaoxiaLin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XiaoxiaLin/subscriptions", "organizations_url": "https://api.github.com/users/XiaoxiaLin/orgs", "repos_url": "https://api.github.com/users/XiaoxiaLin/repos", "events_url": "https://api.github.com/users/XiaoxiaLin/events{/privacy}", "received_events_url": "https://api.github.com/users/XiaoxiaLin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-30T15:00:49Z", "updated_at": "2020-04-06T12:00:11Z", "closed_at": "2020-04-06T12:00:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The current modularity function in community_louvain.py will always set the edge_weight to 1 in case of multigraph. \r\n\r\n```\r\nfor node in graph:\r\n        com = partition[node]\r\n        deg[com] = deg.get(com, 0.) + graph.degree(node, weight=weight)\r\n        for neighbor, datas in graph[node].items():\r\n            edge_weight = datas.get(weight, 1)\r\n            if partition[neighbor] == com:\r\n                if neighbor == node:\r\n                    inc[com] = inc.get(com, 0.) + float(edge_weight)\r\n                else:\r\n                    inc[com] = inc.get(com, 0.) + float(edge_weight) / 2.\r\n```\r\n\r\nFor multigraph, we would need edge keys to get the weight:\r\n```\r\nfor node in graph:\r\n    com = partition[node]\r\n    deg[com] = deg.get(com, 0.) + graph.degree(node, weight=weight)\r\n    for neighbor, v in graph[node].items():\r\n        for _, datas in v.items():\r\n            edge_weight = datas.get(weight, 1)\r\n            if partition[neighbor] == com:\r\n                if neighbor == node:\r\n                    inc[com] = inc.get(com, 0.) + float(edge_weight)\r\n                else:\r\n                    inc[com] = inc.get(com, 0.) + float(edge_weight) / 2.\r\n```\r\nDoes it make sense?  Is the current best_partition function only work for Graph, and not MultiGraph?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/54", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/54/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/54/events", "html_url": "https://github.com/taynaud/python-louvain/issues/54", "id": 492676282, "node_id": "MDU6SXNzdWU0OTI2NzYyODI=", "number": 54, "title": "Mean weight for induced_graph", "user": {"login": "Kawue", "id": 18120038, "node_id": "MDQ6VXNlcjE4MTIwMDM4", "avatar_url": "https://avatars1.githubusercontent.com/u/18120038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kawue", "html_url": "https://github.com/Kawue", "followers_url": "https://api.github.com/users/Kawue/followers", "following_url": "https://api.github.com/users/Kawue/following{/other_user}", "gists_url": "https://api.github.com/users/Kawue/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kawue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kawue/subscriptions", "organizations_url": "https://api.github.com/users/Kawue/orgs", "repos_url": "https://api.github.com/users/Kawue/repos", "events_url": "https://api.github.com/users/Kawue/events{/privacy}", "received_events_url": "https://api.github.com/users/Kawue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-12T09:00:45Z", "updated_at": "2020-04-06T12:00:44Z", "closed_at": "2020-04-06T12:00:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there an easy way to compute the mean weight for the induced graph instead of the sum?\r\nCurrently I used a modified version, which adds a counter value in the edge attribute dict to calculate the mean later when I need it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/53", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/53/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/53/events", "html_url": "https://github.com/taynaud/python-louvain/issues/53", "id": 488335491, "node_id": "MDU6SXNzdWU0ODgzMzU0OTE=", "number": 53, "title": "Adding a CITATION file.", "user": {"login": "Nikoleta-v3", "id": 19708408, "node_id": "MDQ6VXNlcjE5NzA4NDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/19708408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nikoleta-v3", "html_url": "https://github.com/Nikoleta-v3", "followers_url": "https://api.github.com/users/Nikoleta-v3/followers", "following_url": "https://api.github.com/users/Nikoleta-v3/following{/other_user}", "gists_url": "https://api.github.com/users/Nikoleta-v3/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nikoleta-v3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nikoleta-v3/subscriptions", "organizations_url": "https://api.github.com/users/Nikoleta-v3/orgs", "repos_url": "https://api.github.com/users/Nikoleta-v3/repos", "events_url": "https://api.github.com/users/Nikoleta-v3/events{/privacy}", "received_events_url": "https://api.github.com/users/Nikoleta-v3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-02T23:18:36Z", "updated_at": "2020-05-23T11:41:51Z", "closed_at": "2020-05-23T11:41:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am currently using your library for one of my research projects. I was wondering if you would be interested in creating a citation file so the library can be cited.\r\n\r\nHere is a very good blog post on why/who citing your software is good practice: https://www.software.ac.uk/blog/2016-10-06-encouraging-citation-software-introducing-citation-files\r\n\r\nLet me know if you would like me to open a pull request \ud83d\udc4d", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/52", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/52/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/52/events", "html_url": "https://github.com/taynaud/python-louvain/issues/52", "id": 482860084, "node_id": "MDU6SXNzdWU0ODI4NjAwODQ=", "number": 52, "title": "What can cause different results in communities detected after scaling edge weights of a graph?", "user": {"login": "magdalini-anastasiadou", "id": 34912305, "node_id": "MDQ6VXNlcjM0OTEyMzA1", "avatar_url": "https://avatars3.githubusercontent.com/u/34912305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magdalini-anastasiadou", "html_url": "https://github.com/magdalini-anastasiadou", "followers_url": "https://api.github.com/users/magdalini-anastasiadou/followers", "following_url": "https://api.github.com/users/magdalini-anastasiadou/following{/other_user}", "gists_url": "https://api.github.com/users/magdalini-anastasiadou/gists{/gist_id}", "starred_url": "https://api.github.com/users/magdalini-anastasiadou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magdalini-anastasiadou/subscriptions", "organizations_url": "https://api.github.com/users/magdalini-anastasiadou/orgs", "repos_url": "https://api.github.com/users/magdalini-anastasiadou/repos", "events_url": "https://api.github.com/users/magdalini-anastasiadou/events{/privacy}", "received_events_url": "https://api.github.com/users/magdalini-anastasiadou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-20T13:26:08Z", "updated_at": "2019-11-23T20:53:53Z", "closed_at": "2019-11-23T20:53:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that if I change all the edge weights in the graph with the same value, community.best_partition doesn't always result to the same communities.\r\n\r\nI used the same random state in all cases and the graph is exactly the same just that instead of all edge weights to be equal to 1 for example they may be equal to 5. \r\nFor example, in the example case bellow where I change each weight to 5 the modularity of the communities found is 0.332470647645499 whereas with the communities from the initial graph is 0.334869334679965 and the adjusted rand score = 0.676 between them. \r\n\r\nThe definition of modularity cancels out this factor that multiplies the adjacency matrix and as I read about the algorithm I can't find a step that should change the result. What causes that difference?  Is it a numerical error?  Or the method somehow depends on the scale of the values of edge weights?\r\n\r\nI asked also at stackoveflow  [https://stackoverflow.com/questions/57560866/what-can-cause-different-results-in-communities-detected-after-scaling-edge-weig](https://stackoverflow.com/questions/57560866/what-can-cause-different-results-in-communities-detected-after-scaling-edge-weig). Below is an example, I've noticed the same behavior in other graphs too.\r\n`\r\n\r\n    import networkx as nx\r\n    import community\r\n\r\n    from sklearn.metrics import adjusted_rand_score\r\n\r\n\r\n    def main():\r\n        g = nx.davis_southern_women_graph()\r\n        nodes = g.nodes()\r\n        clusters_init = community.best_partition(g, random_state=10)\r\n        print(\"modularity with initial clusters = %.15f\" % community.modularity(clusters_init, g))\r\n\r\n        labels_init = [clusters_init[n] for n in nodes]\r\n        for num in range(1, 9):\r\n\r\n            for u, v in g.edges():\r\n                g[u][v][\"weight\"] = num\r\n\r\n            clusters = community.best_partition(g, random_state=10)\r\n            labels = [clusters[n] for n in nodes]\r\n            print(\"value of edge weight = %d,\" % num, \"modularity = %.15f,\" % community.modularity(clusters, g),\r\n                  \"modularity with initial clusters = %.15f,\" % community.modularity(clusters_init, g),\r\n                  \"adjusted rand score = %.3f\" % adjusted_rand_score(labels_pred=labels, labels_true=labels_init))\r\n\r\n\r\n    if __name__ == \"__main__\":\r\n        main()\r\n`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/50", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/50/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/50/events", "html_url": "https://github.com/taynaud/python-louvain/issues/50", "id": 455379701, "node_id": "MDU6SXNzdWU0NTUzNzk3MDE=", "number": 50, "title": "Community module not found", "user": {"login": "Ronneesley", "id": 29005089, "node_id": "MDQ6VXNlcjI5MDA1MDg5", "avatar_url": "https://avatars2.githubusercontent.com/u/29005089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ronneesley", "html_url": "https://github.com/Ronneesley", "followers_url": "https://api.github.com/users/Ronneesley/followers", "following_url": "https://api.github.com/users/Ronneesley/following{/other_user}", "gists_url": "https://api.github.com/users/Ronneesley/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ronneesley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ronneesley/subscriptions", "organizations_url": "https://api.github.com/users/Ronneesley/orgs", "repos_url": "https://api.github.com/users/Ronneesley/repos", "events_url": "https://api.github.com/users/Ronneesley/events{/privacy}", "received_events_url": "https://api.github.com/users/Ronneesley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-12T19:14:46Z", "updated_at": "2019-06-12T19:17:59Z", "closed_at": "2019-06-12T19:17:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run *main.py* I get:\r\n  File \"PATH/GraphRNN/utils.py\", line 13, in <module>\r\n    **import community**\r\nModuleNotFoundError: **No module named 'community'**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/49", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/49/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/49/events", "html_url": "https://github.com/taynaud/python-louvain/issues/49", "id": 448396409, "node_id": "MDU6SXNzdWU0NDgzOTY0MDk=", "number": 49, "title": "reading digraph with weights from file", "user": {"login": "rkatriel-mdsol", "id": 3606500, "node_id": "MDQ6VXNlcjM2MDY1MDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3606500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkatriel-mdsol", "html_url": "https://github.com/rkatriel-mdsol", "followers_url": "https://api.github.com/users/rkatriel-mdsol/followers", "following_url": "https://api.github.com/users/rkatriel-mdsol/following{/other_user}", "gists_url": "https://api.github.com/users/rkatriel-mdsol/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkatriel-mdsol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkatriel-mdsol/subscriptions", "organizations_url": "https://api.github.com/users/rkatriel-mdsol/orgs", "repos_url": "https://api.github.com/users/rkatriel-mdsol/repos", "events_url": "https://api.github.com/users/rkatriel-mdsol/events{/privacy}", "received_events_url": "https://api.github.com/users/rkatriel-mdsol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-25T01:06:31Z", "updated_at": "2020-05-23T16:20:57Z", "closed_at": "2020-05-23T12:45:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm getting the following error from community.best_partition when passing it a weighted graph that is read from a file:\r\n\r\nTypeError: unsupported operand type(s) for +: 'int' and 'str'\r\n\r\nThe code is as follows\r\n\r\nimport community\r\nimport networkx.drawing.nx_pydot as pd\r\nimport networkx as nx\r\nG = nx.Graph(pd.read_dot('data.gv'))\r\npartition = community.best_partition(G)\r\n\r\nHere is what an edge looks like in the input file (data.gv)\r\n\r\n\t\"A\" -> \"B\" [weight=10.0];\r\n\r\nSurprisingly, I don't get this error when I set the weight in the program as follows\r\n\r\nG = nx.Graph()\r\nG.add_edge('A', 'B', weight=10.0)\r\n\r\nThis appears to be a subtle bug in the louvain package (it doesn't properly handle the weights when imported from a dot file).\r\n\r\nThanks,\r\nRon\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/48", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/48/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/48/events", "html_url": "https://github.com/taynaud/python-louvain/issues/48", "id": 438101584, "node_id": "MDU6SXNzdWU0MzgxMDE1ODQ=", "number": 48, "title": "failed on jupyter ", "user": {"login": "gg4u", "id": 284214, "node_id": "MDQ6VXNlcjI4NDIxNA==", "avatar_url": "https://avatars0.githubusercontent.com/u/284214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gg4u", "html_url": "https://github.com/gg4u", "followers_url": "https://api.github.com/users/gg4u/followers", "following_url": "https://api.github.com/users/gg4u/following{/other_user}", "gists_url": "https://api.github.com/users/gg4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/gg4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gg4u/subscriptions", "organizations_url": "https://api.github.com/users/gg4u/orgs", "repos_url": "https://api.github.com/users/gg4u/repos", "events_url": "https://api.github.com/users/gg4u/events{/privacy}", "received_events_url": "https://api.github.com/users/gg4u/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-28T21:22:25Z", "updated_at": "2020-04-06T09:25:54Z", "closed_at": "2020-04-06T09:25:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed it on jupyter, but failed to import:\r\n\r\n```\r\nimport community\r\npart = community.best_partition(g)\r\nmod = community.modularity(part,g)\r\n\r\nAttributeError: module 'community' has no attribute 'best_partition'\r\n```\r\n\r\nAny solution for this?\r\n\r\n(Would you consider rename the module as per the pip install distribution - or from networkx import louvain ? )", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/47", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/47/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/47/events", "html_url": "https://github.com/taynaud/python-louvain/issues/47", "id": 426112265, "node_id": "MDU6SXNzdWU0MjYxMTIyNjU=", "number": 47, "title": "why isn't the resolution used in `__modularity(status)`?", "user": {"login": "alexbovet", "id": 13571973, "node_id": "MDQ6VXNlcjEzNTcxOTcz", "avatar_url": "https://avatars2.githubusercontent.com/u/13571973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexbovet", "html_url": "https://github.com/alexbovet", "followers_url": "https://api.github.com/users/alexbovet/followers", "following_url": "https://api.github.com/users/alexbovet/following{/other_user}", "gists_url": "https://api.github.com/users/alexbovet/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexbovet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexbovet/subscriptions", "organizations_url": "https://api.github.com/users/alexbovet/orgs", "repos_url": "https://api.github.com/users/alexbovet/repos", "events_url": "https://api.github.com/users/alexbovet/events{/privacy}", "received_events_url": "https://api.github.com/users/alexbovet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-27T18:12:16Z", "updated_at": "2020-04-06T12:23:06Z", "closed_at": "2020-04-06T12:23:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI suspect that there is a bug when the resolution is different than 1.0, but I might have missed something in the implementation.\r\n\r\nShouldn't the function `__modularity()` use the resolution parameter when computing the modularity?\r\nEspecially since it is used to break the loop in `__one_level()` : \r\n```\r\n        new_mod = __modularity(status)\r\n        if new_mod - cur_mod < __MIN:\r\n            break\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/43", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/43/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/43/events", "html_url": "https://github.com/taynaud/python-louvain/issues/43", "id": 422657554, "node_id": "MDU6SXNzdWU0MjI2NTc1NTQ=", "number": 43, "title": "generate_dendrogram() : ValueError: Bad node degree (-4.0)", "user": {"login": "Mataivic", "id": 23168771, "node_id": "MDQ6VXNlcjIzMTY4Nzcx", "avatar_url": "https://avatars1.githubusercontent.com/u/23168771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mataivic", "html_url": "https://github.com/Mataivic", "followers_url": "https://api.github.com/users/Mataivic/followers", "following_url": "https://api.github.com/users/Mataivic/following{/other_user}", "gists_url": "https://api.github.com/users/Mataivic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mataivic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mataivic/subscriptions", "organizations_url": "https://api.github.com/users/Mataivic/orgs", "repos_url": "https://api.github.com/users/Mataivic/repos", "events_url": "https://api.github.com/users/Mataivic/events{/privacy}", "received_events_url": "https://api.github.com/users/Mataivic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-19T10:38:57Z", "updated_at": "2019-03-22T10:16:46Z", "closed_at": "2019-03-22T10:16:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI tried to run the `generate_dendrogram()` function on a network and it raise a `ValueError: Bad node degree (-4.0)` : \r\n\r\n```\r\n~/miniconda2/envs/env_python3/lib/python3.6/site-packages/community/community_louvain.py in generate_dendrogram(graph, part_init, weight, resolution, randomize, random_state)\r\n    343     current_graph = graph.copy()\r\n    344     status = Status()\r\n--> 345     status.init(current_graph, weight, part_init)\r\n    346     status_list = list()\r\n    347     __one_level(current_graph, status, weight, resolution, random_state)\r\n\r\n~/miniconda2/envs/env_python3/lib/python3.6/site-packages/community/community_status.py in init(self, graph, weight, part)\r\n     51                 if deg < 0:\r\n     52                     error = \"Bad node degree ({})\".format(deg)\r\n---> 53                     raise ValueError(error)\r\n     54                 self.degrees[count] = deg\r\n     55                 self.gdegrees[node] = deg\r\n\r\nValueError: Bad node degree (-4.0)\r\n```\r\n\r\nI don't understand why, because if I loop through my nodes like this :\r\n```\r\n>>> degrees = my_network.degree()\r\n>>> dict(degrees).values()\r\ndict_values([8, 5, 26, 6, 28, 31, 31, 28, 45, 28, 8, 35, 40, 12, 24, 13, 34, 20, 31, 16, 11, 37, 37, 12, 26, 27, 7, 12, 26, 39, 39, 35, 7, 28, 19, 11, 21, 28, 19, 24, 28, 31, 7, 27, 10, 23, 29, 25, 15, 33, 11, 2, 29, 11, 12, 3, 27, 10, 12, 26, 19, 17, 25, 13, 2, 27, 31, 23, 22, 21, 10, 26, 10, 30, 9, 2, 14, 31, 29, 25, 10, 18, 23, 12])\r\n```\r\nThey all have a positive degree. The negative values appears if I set the option 'weights', a it seems to be set in the algorihtm code :\r\n```\r\n>>> degrees = graph.degree(weight='weight')\r\n>>> dict(degrees).values()\r\ndict_values([1, 0, 3, 0, 4, 5, 3, 4, 2, 2, -1, 1, 1, 3, 1, 3, 1, 0, 2, 2, 2, 4, 2, 1, -3, -1, 4, 3, 2, 2, 0, 2, 3, 0, 1, 4, 2, 4, 4, 6, 3, 4, 3, 4, 6, 2, 1, 2, 3, 5, 1, 1, 3, 6, 1, 3, 2, 4, 7, 3, 4, 5, -2, 4, 3, 0, -1, 3, 2, 4, 4, 6, 5, 4, 1, 3, 3, 3, 3, 3, 3, 1, 2, 6])\r\n```\r\n I'm rather new to graph theory and I don't understand what's happening. What I'm I missing there ? The edges of my network are not weighted (the adjacency matrix is a binary matrix).\r\n\r\nThanks.\r\n\r\n***Edit*** : I resolved the problem by setting weight='None'. I guess it's now more a question for networkX coders to know why it is possible to put a weight on supposedly unweighted graphs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/42", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/42/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/42/events", "html_url": "https://github.com/taynaud/python-louvain/issues/42", "id": 421758186, "node_id": "MDU6SXNzdWU0MjE3NTgxODY=", "number": 42, "title": "is_isomorphic: error", "user": {"login": "andreacortis", "id": 5497036, "node_id": "MDQ6VXNlcjU0OTcwMzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5497036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreacortis", "html_url": "https://github.com/andreacortis", "followers_url": "https://api.github.com/users/andreacortis/followers", "following_url": "https://api.github.com/users/andreacortis/following{/other_user}", "gists_url": "https://api.github.com/users/andreacortis/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreacortis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreacortis/subscriptions", "organizations_url": "https://api.github.com/users/andreacortis/orgs", "repos_url": "https://api.github.com/users/andreacortis/repos", "events_url": "https://api.github.com/users/andreacortis/events{/privacy}", "received_events_url": "https://api.github.com/users/andreacortis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-16T02:07:50Z", "updated_at": "2020-05-23T12:14:51Z", "closed_at": "2020-05-23T12:14:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am trying to figure out if this is a versioning problem or simply a bug.\r\nThanks\r\n\r\nAndrea\r\n\r\n```\r\n(py36) Gundam:~ andreacortis$ ipython\r\nPython 3.6.2 (default, Jul 17 2017, 16:44:45) \r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 6.1.0 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: import networkx \r\n   ...: import community \r\n   ...: print(f'networkx.__version__ = {networkx.__version__}')\r\n   ...: print(f'community.__version__ = {community.__version__}')\r\n   ...: n = 5\r\n   ...: g = networkx.complete_graph(2*n)\r\n   ...: part = dict([])\r\n   ...: for node in g.nodes() :\r\n   ...:     part[node] = node % 2\r\n   ...: ind = community.induced_graph(part, g)\r\n   ...: goal = networkx.Graph()\r\n   ...: goal.add_weighted_edges_from([(0,1,n*n),(0,0,n*(n-1)/2), (1, 1, n*(n-1)/2)])  # NOQA\r\n   ...: networkx.is_isomorphic(int, goal)\r\n   ...: \r\nnetworkx.__version__ = 2.2\r\ncommunity.__version__ = 0.13\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-1-60e856d1a473> in <module>()\r\n     11 goal = networkx.Graph()\r\n     12 goal.add_weighted_edges_from([(0,1,n*n),(0,0,n*(n-1)/2), (1, 1, n*(n-1)/2)])  # NOQA\r\n---> 13 networkx.is_isomorphic(int, goal)\r\n\r\n~/Envs/py36/lib/python3.6/site-packages/networkx/algorithms/isomorphism/isomorph.py in is_isomorphic(G1, G2, node_match, edge_match)\r\n    228        http://amalfi.dis.unina.it/graph/db/papers/vf-algorithm.pdf\r\n    229     \"\"\"\r\n--> 230     if G1.is_directed() and G2.is_directed():\r\n    231         GM = nx.algorithms.isomorphism.DiGraphMatcher\r\n    232     elif (not G1.is_directed()) and (not G2.is_directed()):\r\n\r\nAttributeError: type object 'int' has no attribute 'is_directed'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/41", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/41/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/41/events", "html_url": "https://github.com/taynaud/python-louvain/issues/41", "id": 420909346, "node_id": "MDU6SXNzdWU0MjA5MDkzNDY=", "number": 41, "title": "Different partitions on Python 2.7 vs Python 3 and one bug", "user": {"login": "skatsikeas", "id": 15046023, "node_id": "MDQ6VXNlcjE1MDQ2MDIz", "avatar_url": "https://avatars1.githubusercontent.com/u/15046023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skatsikeas", "html_url": "https://github.com/skatsikeas", "followers_url": "https://api.github.com/users/skatsikeas/followers", "following_url": "https://api.github.com/users/skatsikeas/following{/other_user}", "gists_url": "https://api.github.com/users/skatsikeas/gists{/gist_id}", "starred_url": "https://api.github.com/users/skatsikeas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skatsikeas/subscriptions", "organizations_url": "https://api.github.com/users/skatsikeas/orgs", "repos_url": "https://api.github.com/users/skatsikeas/repos", "events_url": "https://api.github.com/users/skatsikeas/events{/privacy}", "received_events_url": "https://api.github.com/users/skatsikeas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-14T09:24:33Z", "updated_at": "2020-04-06T09:32:08Z", "closed_at": "2020-04-06T09:32:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running the same code in both Python 2.7 and Python 3.7 and although I get the same communities, the characteristics of the communities differ. For example, the size (in nodes) of each community is smaller on Python 3.7 compared to 2.7. Is there an explanation behind this? Please note that **I am using v0.11** of python-louvain.\r\n\r\nI also believe that I have found a bug on v0.13:\r\nsince randomize on best_partition() is a boolean, why is the default value 'None'?\r\nhttps://github.com/taynaud/python-louvain/blob/381b7db8196f43de98d5279746173b50fbb2bea9/community/community_louvain.py#L161-L166\r\n\r\nThe reason why I do not use v0.13 is because on each run I get different communities and I believe the above bug is to blame.\r\n\r\nAny feedback on those two issues would be really helpful for me.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/38", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/38/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/38/events", "html_url": "https://github.com/taynaud/python-louvain/issues/38", "id": 407647531, "node_id": "MDU6SXNzdWU0MDc2NDc1MzE=", "number": 38, "title": "float() argument must be a string or a number, not 'DegreeView'", "user": {"login": "idimitriadis", "id": 9929412, "node_id": "MDQ6VXNlcjk5Mjk0MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9929412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idimitriadis", "html_url": "https://github.com/idimitriadis", "followers_url": "https://api.github.com/users/idimitriadis/followers", "following_url": "https://api.github.com/users/idimitriadis/following{/other_user}", "gists_url": "https://api.github.com/users/idimitriadis/gists{/gist_id}", "starred_url": "https://api.github.com/users/idimitriadis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idimitriadis/subscriptions", "organizations_url": "https://api.github.com/users/idimitriadis/orgs", "repos_url": "https://api.github.com/users/idimitriadis/repos", "events_url": "https://api.github.com/users/idimitriadis/events{/privacy}", "received_events_url": "https://api.github.com/users/idimitriadis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-07T11:10:24Z", "updated_at": "2020-04-06T12:29:37Z", "closed_at": "2020-04-06T12:29:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I have created an undirected attributed graph with ~300K nodes that works fine with all the networkx modules. I am trying to use the community_louvain.best partition algorithm but i keep getting the error:\r\n\r\n> line 50, in init\r\n    deg = float(graph.degree(node, weight=weight))\r\nTypeError: float() argument must be a string or a number, not 'DegreeView'\r\n\r\nI tried to see what is wrong and i found out that when calling the graph.degree function networkx returns an int if you are searching for a specific node and a DegreeView object if you are searching for a bunch of nodes. I guess that this is not covered by the already available implementation? \r\nI use networkx 2.2 and python_louvain 0.13. \r\nAnybody that faces the same issue? \r\n\r\nThank you in advance!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/37", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/37/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/37/events", "html_url": "https://github.com/taynaud/python-louvain/issues/37", "id": 401404950, "node_id": "MDU6SXNzdWU0MDE0MDQ5NTA=", "number": 37, "title": "Modularity are not the same in the same graph with different node labels", "user": {"login": "zhmh163", "id": 18723361, "node_id": "MDQ6VXNlcjE4NzIzMzYx", "avatar_url": "https://avatars2.githubusercontent.com/u/18723361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhmh163", "html_url": "https://github.com/zhmh163", "followers_url": "https://api.github.com/users/zhmh163/followers", "following_url": "https://api.github.com/users/zhmh163/following{/other_user}", "gists_url": "https://api.github.com/users/zhmh163/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhmh163/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhmh163/subscriptions", "organizations_url": "https://api.github.com/users/zhmh163/orgs", "repos_url": "https://api.github.com/users/zhmh163/repos", "events_url": "https://api.github.com/users/zhmh163/events{/privacy}", "received_events_url": "https://api.github.com/users/zhmh163/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-21T15:34:19Z", "updated_at": "2020-05-23T12:47:45Z", "closed_at": "2020-05-23T12:47:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am confusing that I got different modularity in the same graph with different node labels. First, I got one modularity 0.382 in my network. Then I rename the node labels based on some sorted and I got 0.412. Anyone can tell me the reason? For simplicity, I test the karate club network and find the same problem. Here is an example for my code. \r\n#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nimport community\r\nimport networkx as nx\r\n\r\nG1 = nx.karate_club_graph()\r\n\r\n#rename nodes id\r\nG2=nx.Graph()\r\nindex={}\r\nid=0\r\nfor (i,j) in G1.edges():\r\n    if i not in index.keys():\r\n        index[i]=id\r\n        id=id+1\r\n    if j not in index.keys():\r\n        index[j]=id\r\n        id=id+1\r\n    G2.add_edge(index[i], index[j])\r\n# calculate the modularity    \r\npartition1 = community.best_partition(G1)\r\nQ1 = community.modularity(partition1,G1)\r\n\r\npartition2=community.best_partition(G2)\r\nQ2 = community.modularity(partition2,G2)\r\n\r\nprint len(G1),len(G2)\r\nprint G1.number_of_edges(), G2.number_of_edges()\r\nprint Q1,Q2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/35", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/35/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/35/events", "html_url": "https://github.com/taynaud/python-louvain/issues/35", "id": 395177900, "node_id": "MDU6SXNzdWUzOTUxNzc5MDA=", "number": 35, "title": "Random state does not work with graph with mixed node types", "user": {"login": "taynaud", "id": 1381568, "node_id": "MDQ6VXNlcjEzODE1Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1381568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taynaud", "html_url": "https://github.com/taynaud", "followers_url": "https://api.github.com/users/taynaud/followers", "following_url": "https://api.github.com/users/taynaud/following{/other_user}", "gists_url": "https://api.github.com/users/taynaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/taynaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taynaud/subscriptions", "organizations_url": "https://api.github.com/users/taynaud/orgs", "repos_url": "https://api.github.com/users/taynaud/repos", "events_url": "https://api.github.com/users/taynaud/events{/privacy}", "received_events_url": "https://api.github.com/users/taynaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-02T08:33:10Z", "updated_at": "2020-04-06T09:41:35Z", "closed_at": "2020-04-06T09:41:35Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Hey, so it turns out that this change makes the package not work for some graphs, because the list returned by numpy RandomState.permutation sometimes does not contain the same items that were in the list passed to it.  The particular case that I ran into was that my networkx graph has some nodes whose labels are strings and others whose labels are integers, but the RandomState.permutation was turning all of them into strings, which then caused a KeyError.  It seems like replacing `random_state.permutation(list(graph.nodes()))` with `random_state.permutation(np.array(graph.nodes(), dtype=object))` might solve this problem.\r\n\r\n_Originally posted by @akenney in https://github.com/taynaud/python-louvain/commit/ed63d74f152ce9ff7febe1459319d719a7f32f0c#commitcomment-31809462_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/34", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/34/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/34/events", "html_url": "https://github.com/taynaud/python-louvain/issues/34", "id": 394789281, "node_id": "MDU6SXNzdWUzOTQ3ODkyODE=", "number": 34, "title": "Question about the formula", "user": {"login": "zhqu1148980644", "id": 29366130, "node_id": "MDQ6VXNlcjI5MzY2MTMw", "avatar_url": "https://avatars2.githubusercontent.com/u/29366130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhqu1148980644", "html_url": "https://github.com/zhqu1148980644", "followers_url": "https://api.github.com/users/zhqu1148980644/followers", "following_url": "https://api.github.com/users/zhqu1148980644/following{/other_user}", "gists_url": "https://api.github.com/users/zhqu1148980644/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhqu1148980644/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhqu1148980644/subscriptions", "organizations_url": "https://api.github.com/users/zhqu1148980644/orgs", "repos_url": "https://api.github.com/users/zhqu1148980644/repos", "events_url": "https://api.github.com/users/zhqu1148980644/events{/privacy}", "received_events_url": "https://api.github.com/users/zhqu1148980644/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-29T11:53:37Z", "updated_at": "2019-01-03T08:51:40Z", "closed_at": "2019-01-03T08:51:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Why it's not \r\n`result += in_degree / 2. * links - ((degree / (2. * links)) ** 2)`\r\nhttps://github.com/taynaud/python-louvain/blob/381b7db8196f43de98d5279746173b50fbb2bea9/community/community_louvain.py#L544-L545\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/33", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/33/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/33/events", "html_url": "https://github.com/taynaud/python-louvain/issues/33", "id": 381453660, "node_id": "MDU6SXNzdWUzODE0NTM2NjA=", "number": 33, "title": "fileformat", "user": {"login": "cosai", "id": 9643839, "node_id": "MDQ6VXNlcjk2NDM4Mzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/9643839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cosai", "html_url": "https://github.com/cosai", "followers_url": "https://api.github.com/users/cosai/followers", "following_url": "https://api.github.com/users/cosai/following{/other_user}", "gists_url": "https://api.github.com/users/cosai/gists{/gist_id}", "starred_url": "https://api.github.com/users/cosai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cosai/subscriptions", "organizations_url": "https://api.github.com/users/cosai/orgs", "repos_url": "https://api.github.com/users/cosai/repos", "events_url": "https://api.github.com/users/cosai/events{/privacy}", "received_events_url": "https://api.github.com/users/cosai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-16T05:35:37Z", "updated_at": "2018-11-28T14:41:01Z", "closed_at": "2018-11-28T14:41:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nCan you give an example file format in the description? You stated something about C implementation? Where is that implementation? How can I learn the file format? At least can you post some links?\r\n\r\nregards\r\n\r\ncosai", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/31", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/31/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/31/events", "html_url": "https://github.com/taynaud/python-louvain/issues/31", "id": 375320700, "node_id": "MDU6SXNzdWUzNzUzMjA3MDA=", "number": 31, "title": "community.best_partition on completely isolated nodes graph ", "user": {"login": "deter3", "id": 11637246, "node_id": "MDQ6VXNlcjExNjM3MjQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/11637246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deter3", "html_url": "https://github.com/deter3", "followers_url": "https://api.github.com/users/deter3/followers", "following_url": "https://api.github.com/users/deter3/following{/other_user}", "gists_url": "https://api.github.com/users/deter3/gists{/gist_id}", "starred_url": "https://api.github.com/users/deter3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deter3/subscriptions", "organizations_url": "https://api.github.com/users/deter3/orgs", "repos_url": "https://api.github.com/users/deter3/repos", "events_url": "https://api.github.com/users/deter3/events{/privacy}", "received_events_url": "https://api.github.com/users/deter3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-30T04:53:51Z", "updated_at": "2018-11-28T14:41:15Z", "closed_at": "2018-11-28T14:41:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am processing lots of hashtags networkx graphs , trying to find the community . The procedure needs to remove lots of hashtags . Some time the detected communities has tag name as cluster label .  I found out if the graph has 100% isolated nodes as below image  , then cluster label will be nodes name . \r\n![image on 2018-10-30 12 42 35 pm](https://user-images.githubusercontent.com/11637246/47696634-a04aa980-dc42-11e8-82cd-3b243f66e45c.jpg)\r\n\r\nIf there is any connected nodes , then the detected communities has normal cluster label as 0,1,2,3 etc .  see image below . \r\n![image on 2018-10-30 12 47 32 pm](https://user-images.githubusercontent.com/11637246/47696673-cb34fd80-dc42-11e8-919d-a32d0f3ee735.jpg)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/29", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/29/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/29/events", "html_url": "https://github.com/taynaud/python-louvain/issues/29", "id": 367655793, "node_id": "MDU6SXNzdWUzNjc2NTU3OTM=", "number": 29, "title": "Can't set random state", "user": {"login": "pavlin-policar", "id": 5758119, "node_id": "MDQ6VXNlcjU3NTgxMTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5758119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pavlin-policar", "html_url": "https://github.com/pavlin-policar", "followers_url": "https://api.github.com/users/pavlin-policar/followers", "following_url": "https://api.github.com/users/pavlin-policar/following{/other_user}", "gists_url": "https://api.github.com/users/pavlin-policar/gists{/gist_id}", "starred_url": "https://api.github.com/users/pavlin-policar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pavlin-policar/subscriptions", "organizations_url": "https://api.github.com/users/pavlin-policar/orgs", "repos_url": "https://api.github.com/users/pavlin-policar/repos", "events_url": "https://api.github.com/users/pavlin-policar/events{/privacy}", "received_events_url": "https://api.github.com/users/pavlin-policar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-08T06:44:21Z", "updated_at": "2018-10-26T12:12:08Z", "closed_at": "2018-10-26T12:12:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, there is no way to set and use a fixed random seed. We have only two options: either completely random or completely deterministic. Looking at the code, we can probably set a random seed by setting the global random seed for python's `random` module, but that's not very clean and could affect other parts of our project code.\r\n\r\nIt would be great if we could set a `random_state` parameter, much like scikit-learn allows us to do for randomized algorithms.\r\n\r\nOne concern is backward compatibility. If we add a `random_state` parameter, then `randomize` no longer makes sense, and should be removed. One possibility would be to keep `randomize` for a while and adding a deprication warning, having it be equivalent to `random_state=None`, and then eventually removing it altogether.\r\n\r\nIs this something you would be willing to include in the library? If so, I would be willing to implement this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/27", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/27/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/27/events", "html_url": "https://github.com/taynaud/python-louvain/issues/27", "id": 360355801, "node_id": "MDU6SXNzdWUzNjAzNTU4MDE=", "number": 27, "title": "no module named '__main__.community_status; '__main__' is not a package", "user": {"login": "jb110", "id": 43275664, "node_id": "MDQ6VXNlcjQzMjc1NjY0", "avatar_url": "https://avatars1.githubusercontent.com/u/43275664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jb110", "html_url": "https://github.com/jb110", "followers_url": "https://api.github.com/users/jb110/followers", "following_url": "https://api.github.com/users/jb110/following{/other_user}", "gists_url": "https://api.github.com/users/jb110/gists{/gist_id}", "starred_url": "https://api.github.com/users/jb110/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jb110/subscriptions", "organizations_url": "https://api.github.com/users/jb110/orgs", "repos_url": "https://api.github.com/users/jb110/repos", "events_url": "https://api.github.com/users/jb110/events{/privacy}", "received_events_url": "https://api.github.com/users/jb110/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-14T15:38:27Z", "updated_at": "2018-09-24T13:35:46Z", "closed_at": "2018-09-24T13:35:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run this program I get this error message, please can you explain why? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/26", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/26/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/26/events", "html_url": "https://github.com/taynaud/python-louvain/issues/26", "id": 353095820, "node_id": "MDU6SXNzdWUzNTMwOTU4MjA=", "number": 26, "title": "Usage with external datasets", "user": {"login": "w4bo", "id": 18005592, "node_id": "MDQ6VXNlcjE4MDA1NTky", "avatar_url": "https://avatars1.githubusercontent.com/u/18005592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/w4bo", "html_url": "https://github.com/w4bo", "followers_url": "https://api.github.com/users/w4bo/followers", "following_url": "https://api.github.com/users/w4bo/following{/other_user}", "gists_url": "https://api.github.com/users/w4bo/gists{/gist_id}", "starred_url": "https://api.github.com/users/w4bo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/w4bo/subscriptions", "organizations_url": "https://api.github.com/users/w4bo/orgs", "repos_url": "https://api.github.com/users/w4bo/repos", "events_url": "https://api.github.com/users/w4bo/events{/privacy}", "received_events_url": "https://api.github.com/users/w4bo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-22T19:40:29Z", "updated_at": "2018-11-28T14:51:23Z", "closed_at": "2018-11-28T14:51:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIt should be useful to add working (and runnable) examples with external datasets (e.g., csv), such that it is easier to understand how things works and how results should be interpreted", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/25", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/25/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/25/events", "html_url": "https://github.com/taynaud/python-louvain/issues/25", "id": 347418703, "node_id": "MDU6SXNzdWUzNDc0MTg3MDM=", "number": 25, "title": "How to reproduce 'consistent' partitions?", "user": {"login": "judekurn", "id": 35122362, "node_id": "MDQ6VXNlcjM1MTIyMzYy", "avatar_url": "https://avatars3.githubusercontent.com/u/35122362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/judekurn", "html_url": "https://github.com/judekurn", "followers_url": "https://api.github.com/users/judekurn/followers", "following_url": "https://api.github.com/users/judekurn/following{/other_user}", "gists_url": "https://api.github.com/users/judekurn/gists{/gist_id}", "starred_url": "https://api.github.com/users/judekurn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/judekurn/subscriptions", "organizations_url": "https://api.github.com/users/judekurn/orgs", "repos_url": "https://api.github.com/users/judekurn/repos", "events_url": "https://api.github.com/users/judekurn/events{/privacy}", "received_events_url": "https://api.github.com/users/judekurn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-03T14:29:01Z", "updated_at": "2018-08-04T15:40:02Z", "closed_at": "2018-08-04T15:35:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I reproduce the same partitions everytime I run best_partition? \r\n\r\nI use best_partition to produce community clusters for my research and wrote an entire chapter on the result. But when I restart the notebook, I got a different number of partitions with different memberships. That means, I cannot 'reproduce' the result I have written and my entire chapter is no longer reproducible. How can I recreate the partitions which I found previously? Btw, this problem happens on a graph with 131 nodes, but works fine (i.e. reproducible) for a graph with 51 nodes. Thanks.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/24", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/24/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/24/events", "html_url": "https://github.com/taynaud/python-louvain/issues/24", "id": 344137666, "node_id": "MDU6SXNzdWUzNDQxMzc2NjY=", "number": 24, "title": "Value Error", "user": {"login": "dalwar23", "id": 5631766, "node_id": "MDQ6VXNlcjU2MzE3NjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5631766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dalwar23", "html_url": "https://github.com/dalwar23", "followers_url": "https://api.github.com/users/dalwar23/followers", "following_url": "https://api.github.com/users/dalwar23/following{/other_user}", "gists_url": "https://api.github.com/users/dalwar23/gists{/gist_id}", "starred_url": "https://api.github.com/users/dalwar23/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dalwar23/subscriptions", "organizations_url": "https://api.github.com/users/dalwar23/orgs", "repos_url": "https://api.github.com/users/dalwar23/repos", "events_url": "https://api.github.com/users/dalwar23/events{/privacy}", "received_events_url": "https://api.github.com/users/dalwar23/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-24T17:44:37Z", "updated_at": "2018-10-28T07:50:53Z", "closed_at": "2018-10-28T07:50:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to compile a simple community detection on karate club data with both C++ and python.\r\nHere is what I did:\r\n\r\nDownloaded - [This C++ version of Louvain from Source Forge](http://sourceforge.net/projects/louvain/files/louvain-generic.tar.gz/download\r\n)\r\nAlso downloaded - karate club data from [here](https://sourceforge.net/p/louvain/code/ci/default/tree/sample_networks/karate.txt) \r\nrun command - `make all`\r\nonce done, `./convert -i karate_club.txt -o karate_club.bin`\r\n\r\nI cloned the repo of python-Louvain and run\r\n`sudo python setup.py install`\r\n\r\nI also run `sudo python setup.py test`\r\n\r\nEverything is okay till this point\r\n\r\nWhen I run\r\n`community karate_club.bin`\r\nIt shows following -\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/community\", line 26, in <module>\r\n    main()\r\n  File \"/usr/local/bin/community\", line 14, in main\r\n    print(str(modularity(partition, graph_file)), file=sys.stderr)\r\n  File \"/usr/local/lib/python2.7/dist-packages/community/community_louvain.py\", line 116, in modularity\r\n    raise ValueError(\"A graph without link has an undefined modularity\")\r\nValueError: A graph without link has an undefined modularity\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/22", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/22/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/22/events", "html_url": "https://github.com/taynaud/python-louvain/issues/22", "id": 324120999, "node_id": "MDU6SXNzdWUzMjQxMjA5OTk=", "number": 22, "title": "Dendrogram Question", "user": {"login": "leomaurodesenv", "id": 11961778, "node_id": "MDQ6VXNlcjExOTYxNzc4", "avatar_url": "https://avatars2.githubusercontent.com/u/11961778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leomaurodesenv", "html_url": "https://github.com/leomaurodesenv", "followers_url": "https://api.github.com/users/leomaurodesenv/followers", "following_url": "https://api.github.com/users/leomaurodesenv/following{/other_user}", "gists_url": "https://api.github.com/users/leomaurodesenv/gists{/gist_id}", "starred_url": "https://api.github.com/users/leomaurodesenv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leomaurodesenv/subscriptions", "organizations_url": "https://api.github.com/users/leomaurodesenv/orgs", "repos_url": "https://api.github.com/users/leomaurodesenv/repos", "events_url": "https://api.github.com/users/leomaurodesenv/events{/privacy}", "received_events_url": "https://api.github.com/users/leomaurodesenv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 425718922, "node_id": "MDU6TGFiZWw0MjU3MTg5MjI=", "url": "https://api.github.com/repos/taynaud/python-louvain/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-17T17:43:00Z", "updated_at": "2018-12-07T01:14:35Z", "closed_at": "2018-05-23T11:34:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nI want to know it is possible to explore all dendrogram levels.\r\nLike one to one node in each level, also plot this.\r\n\r\nI'm trying to understanding `generate_dendrogram()`, but have some difficulties.\r\nWhat means each `partition_at_level()` of the generated dendrogram?\r\n\r\nThanks for all!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/20", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/20/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/20/events", "html_url": "https://github.com/taynaud/python-louvain/issues/20", "id": 302278221, "node_id": "MDU6SXNzdWUzMDIyNzgyMjE=", "number": 20, "title": "Add version information accessible from the package", "user": {"login": "taynaud", "id": 1381568, "node_id": "MDQ6VXNlcjEzODE1Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1381568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taynaud", "html_url": "https://github.com/taynaud", "followers_url": "https://api.github.com/users/taynaud/followers", "following_url": "https://api.github.com/users/taynaud/following{/other_user}", "gists_url": "https://api.github.com/users/taynaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/taynaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taynaud/subscriptions", "organizations_url": "https://api.github.com/users/taynaud/orgs", "repos_url": "https://api.github.com/users/taynaud/repos", "events_url": "https://api.github.com/users/taynaud/events{/privacy}", "received_events_url": "https://api.github.com/users/taynaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "taynaud", "id": 1381568, "node_id": "MDQ6VXNlcjEzODE1Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1381568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taynaud", "html_url": "https://github.com/taynaud", "followers_url": "https://api.github.com/users/taynaud/followers", "following_url": "https://api.github.com/users/taynaud/following{/other_user}", "gists_url": "https://api.github.com/users/taynaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/taynaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taynaud/subscriptions", "organizations_url": "https://api.github.com/users/taynaud/orgs", "repos_url": "https://api.github.com/users/taynaud/repos", "events_url": "https://api.github.com/users/taynaud/events{/privacy}", "received_events_url": "https://api.github.com/users/taynaud/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "taynaud", "id": 1381568, "node_id": "MDQ6VXNlcjEzODE1Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1381568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taynaud", "html_url": "https://github.com/taynaud", "followers_url": "https://api.github.com/users/taynaud/followers", "following_url": "https://api.github.com/users/taynaud/following{/other_user}", "gists_url": "https://api.github.com/users/taynaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/taynaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taynaud/subscriptions", "organizations_url": "https://api.github.com/users/taynaud/orgs", "repos_url": "https://api.github.com/users/taynaud/repos", "events_url": "https://api.github.com/users/taynaud/events{/privacy}", "received_events_url": "https://api.github.com/users/taynaud/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-03-05T12:16:58Z", "updated_at": "2018-05-22T11:38:40Z", "closed_at": "2018-05-22T11:38:40Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/18", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/18/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/18/events", "html_url": "https://github.com/taynaud/python-louvain/issues/18", "id": 285018206, "node_id": "MDU6SXNzdWUyODUwMTgyMDY=", "number": 18, "title": "AttributeError: 'Graph' object has no attribute 'edges_iter'", "user": {"login": "aminKMT", "id": 34927740, "node_id": "MDQ6VXNlcjM0OTI3NzQw", "avatar_url": "https://avatars3.githubusercontent.com/u/34927740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aminKMT", "html_url": "https://github.com/aminKMT", "followers_url": "https://api.github.com/users/aminKMT/followers", "following_url": "https://api.github.com/users/aminKMT/following{/other_user}", "gists_url": "https://api.github.com/users/aminKMT/gists{/gist_id}", "starred_url": "https://api.github.com/users/aminKMT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aminKMT/subscriptions", "organizations_url": "https://api.github.com/users/aminKMT/orgs", "repos_url": "https://api.github.com/users/aminKMT/repos", "events_url": "https://api.github.com/users/aminKMT/events{/privacy}", "received_events_url": "https://api.github.com/users/aminKMT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-29T01:25:42Z", "updated_at": "2019-04-14T15:34:42Z", "closed_at": "2018-05-22T11:49:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \r\nI'm using mapmatcher python code, but when I run it with both my data and test data it gives me the attribute error (AttributeError: 'Graph' object has no attribute 'edges_iter'). I updated my networkx by pip install, but it still did not work and I got the same error. could you please let me know how I can solve it.\r\nThanks,\r\nIn the following you can see what I got in python:\r\n\r\ntrack size:14\r\nNumber of segments: 745\r\nC:\\Users\\amin.keramati\\Desktop\\tPRROMTO2\\AminShp\\testSegments.shp\r\ngraph size (excluding unconnected parts): 573\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\amin.keramati\\Desktop\\tPRROMTO2\\mapmatcher\\mapmatcher11.py\", line 510, in <module>\r\n    opt = mapMatch(trackname, roadname, 20, 10, 50)\r\n  File \"C:\\Users\\amin.keramati\\Desktop\\tPRROMTO2\\mapmatcher\\mapmatcher11.py\", line 87, in mapMatch\r\n    graph = getNetworkGraph(segments,lengths)\r\n  File \"C:\\Users\\amin.keramati\\Desktop\\tPRROMTO2\\mapmatcher\\mapmatcher11.py\", line 469, in getNetworkGraph\r\n    for n0, n1 in sg.edges_iter():\r\nAttributeError: 'Graph' object has no attribute 'edges_iter'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/16", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/16/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/16/events", "html_url": "https://github.com/taynaud/python-louvain/issues/16", "id": 275015554, "node_id": "MDU6SXNzdWUyNzUwMTU1NTQ=", "number": 16, "title": "How to cite", "user": {"login": "jcatumba", "id": 1387668, "node_id": "MDQ6VXNlcjEzODc2Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1387668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcatumba", "html_url": "https://github.com/jcatumba", "followers_url": "https://api.github.com/users/jcatumba/followers", "following_url": "https://api.github.com/users/jcatumba/following{/other_user}", "gists_url": "https://api.github.com/users/jcatumba/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcatumba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcatumba/subscriptions", "organizations_url": "https://api.github.com/users/jcatumba/orgs", "repos_url": "https://api.github.com/users/jcatumba/repos", "events_url": "https://api.github.com/users/jcatumba/events{/privacy}", "received_events_url": "https://api.github.com/users/jcatumba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-17T22:29:18Z", "updated_at": "2017-11-20T14:11:50Z", "closed_at": "2017-11-20T14:11:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I want to add a citation to this software. What should I put? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/12", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/12/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/12/events", "html_url": "https://github.com/taynaud/python-louvain/issues/12", "id": 239085851, "node_id": "MDU6SXNzdWUyMzkwODU4NTE=", "number": 12, "title": "miscalculation of modularity", "user": {"login": "mainulquraishi", "id": 14335238, "node_id": "MDQ6VXNlcjE0MzM1MjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/14335238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mainulquraishi", "html_url": "https://github.com/mainulquraishi", "followers_url": "https://api.github.com/users/mainulquraishi/followers", "following_url": "https://api.github.com/users/mainulquraishi/following{/other_user}", "gists_url": "https://api.github.com/users/mainulquraishi/gists{/gist_id}", "starred_url": "https://api.github.com/users/mainulquraishi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mainulquraishi/subscriptions", "organizations_url": "https://api.github.com/users/mainulquraishi/orgs", "repos_url": "https://api.github.com/users/mainulquraishi/repos", "events_url": "https://api.github.com/users/mainulquraishi/events{/privacy}", "received_events_url": "https://api.github.com/users/mainulquraishi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-28T08:14:21Z", "updated_at": "2017-07-27T14:47:06Z", "closed_at": "2017-07-27T14:47:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://stackoverflow.com/questions/44789566/bug-in-community-package", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/11", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/11/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/11/events", "html_url": "https://github.com/taynaud/python-louvain/issues/11", "id": 232823716, "node_id": "MDU6SXNzdWUyMzI4MjM3MTY=", "number": 11, "title": "How can I get the first status of the communities?", "user": {"login": "ricklovelisa", "id": 11552198, "node_id": "MDQ6VXNlcjExNTUyMTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/11552198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ricklovelisa", "html_url": "https://github.com/ricklovelisa", "followers_url": "https://api.github.com/users/ricklovelisa/followers", "following_url": "https://api.github.com/users/ricklovelisa/following{/other_user}", "gists_url": "https://api.github.com/users/ricklovelisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ricklovelisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ricklovelisa/subscriptions", "organizations_url": "https://api.github.com/users/ricklovelisa/orgs", "repos_url": "https://api.github.com/users/ricklovelisa/repos", "events_url": "https://api.github.com/users/ricklovelisa/events{/privacy}", "received_events_url": "https://api.github.com/users/ricklovelisa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-01T09:47:48Z", "updated_at": "2017-06-02T16:19:23Z", "closed_at": "2017-06-02T16:19:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I get the first status of the communities?\r\nI can just get the final communities, but I want get every status of the communities, How can I get them? or I have to modify the method?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/10", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/10/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/10/events", "html_url": "https://github.com/taynaud/python-louvain/issues/10", "id": 231577636, "node_id": "MDU6SXNzdWUyMzE1Nzc2MzY=", "number": 10, "title": "Change log for version 0.7", "user": {"login": "KirstieJane", "id": 3626306, "node_id": "MDQ6VXNlcjM2MjYzMDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3626306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KirstieJane", "html_url": "https://github.com/KirstieJane", "followers_url": "https://api.github.com/users/KirstieJane/followers", "following_url": "https://api.github.com/users/KirstieJane/following{/other_user}", "gists_url": "https://api.github.com/users/KirstieJane/gists{/gist_id}", "starred_url": "https://api.github.com/users/KirstieJane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KirstieJane/subscriptions", "organizations_url": "https://api.github.com/users/KirstieJane/orgs", "repos_url": "https://api.github.com/users/KirstieJane/repos", "events_url": "https://api.github.com/users/KirstieJane/events{/privacy}", "received_events_url": "https://api.github.com/users/KirstieJane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-26T09:46:38Z", "updated_at": "2017-06-01T14:58:48Z", "closed_at": "2017-06-01T14:58:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Wooo! A new version of  `community`! Thank you! \ud83d\ude4c \u2728 \r\n\r\nLooking through I can see a `resolution` parameter in the [best_partition](https://github.com/taynaud/python-louvain/blob/master/community/community_louvain.py#L133) command that I don't remember being in the previous version? Am I right or do I have poor memory on that front?\r\n\r\nI think that this equivalent to the `gamma` option that's used as part of the Brain Connectivity Toolbox [community_louvain.m](https://sites.google.com/site/bctnet/measures/list#TOC-Clustering-and-Community-Structure) code.\r\n\r\nMore generally, is there a changelog that I can take a look through to see what has updated?\r\n\r\nThank you again for this really helpful module!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/9", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/9/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/9/events", "html_url": "https://github.com/taynaud/python-louvain/issues/9", "id": 226206292, "node_id": "MDU6SXNzdWUyMjYyMDYyOTI=", "number": 9, "title": "Some tests are flaky", "user": {"login": "taynaud", "id": 1381568, "node_id": "MDQ6VXNlcjEzODE1Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1381568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taynaud", "html_url": "https://github.com/taynaud", "followers_url": "https://api.github.com/users/taynaud/followers", "following_url": "https://api.github.com/users/taynaud/following{/other_user}", "gists_url": "https://api.github.com/users/taynaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/taynaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taynaud/subscriptions", "organizations_url": "https://api.github.com/users/taynaud/orgs", "repos_url": "https://api.github.com/users/taynaud/repos", "events_url": "https://api.github.com/users/taynaud/events{/privacy}", "received_events_url": "https://api.github.com/users/taynaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-04T08:13:28Z", "updated_at": "2017-05-21T08:49:05Z", "closed_at": "2017-05-21T08:49:05Z", "author_association": "OWNER", "active_lock_reason": null, "body": "One test sometimes fail, see if we can make this deterministic", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/6", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/6/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/6/events", "html_url": "https://github.com/taynaud/python-louvain/issues/6", "id": 215694159, "node_id": "MDU6SXNzdWUyMTU2OTQxNTk=", "number": 6, "title": "AttributeError: 'module' object has no attribute 'generate_dendogram'", "user": {"login": "JingWangPanda", "id": 15112060, "node_id": "MDQ6VXNlcjE1MTEyMDYw", "avatar_url": "https://avatars0.githubusercontent.com/u/15112060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JingWangPanda", "html_url": "https://github.com/JingWangPanda", "followers_url": "https://api.github.com/users/JingWangPanda/followers", "following_url": "https://api.github.com/users/JingWangPanda/following{/other_user}", "gists_url": "https://api.github.com/users/JingWangPanda/gists{/gist_id}", "starred_url": "https://api.github.com/users/JingWangPanda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JingWangPanda/subscriptions", "organizations_url": "https://api.github.com/users/JingWangPanda/orgs", "repos_url": "https://api.github.com/users/JingWangPanda/repos", "events_url": "https://api.github.com/users/JingWangPanda/events{/privacy}", "received_events_url": "https://api.github.com/users/JingWangPanda/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-21T10:40:48Z", "updated_at": "2017-04-02T08:57:50Z", "closed_at": "2017-04-02T08:57:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "(en1) wifiroam076032:python-louvain-master wangjing$ community karate.bin\r\nTraceback (most recent call last):\r\n  File \"/Users/wangjing/virtualenv_files/en1/bin/community\", line 4, in <module>\r\n    __import__('pkg_resources').run_script('python-louvain==0.4', 'community')\r\n  File \"/Users/wangjing/virtualenv_files/en1/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 738, in run_script\r\n    self.require(requires)[0].run_script(script_name, ns)\r\n  File \"/Users/wangjing/virtualenv_files/en1/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 1506, in run_script\r\n    exec(script_code, namespace, namespace)\r\n  File \"/Users/wangjing/virtualenv_files/en1/lib/python2.7/site-packages/python_louvain-0.4-py2.7.egg/EGG-INFO/scripts/community\", line 5, in <module>\r\n    \r\nAttributeError: 'module' object has no attribute 'generate_dendogram'\r\n\r\n\r\n\r\nHow can I solve this problem? please.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/5", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/5/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/5/events", "html_url": "https://github.com/taynaud/python-louvain/issues/5", "id": 212660836, "node_id": "MDU6SXNzdWUyMTI2NjA4MzY=", "number": 5, "title": "How to get two communities", "user": {"login": "jmmcd", "id": 167942, "node_id": "MDQ6VXNlcjE2Nzk0Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/167942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmmcd", "html_url": "https://github.com/jmmcd", "followers_url": "https://api.github.com/users/jmmcd/followers", "following_url": "https://api.github.com/users/jmmcd/following{/other_user}", "gists_url": "https://api.github.com/users/jmmcd/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmmcd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmmcd/subscriptions", "organizations_url": "https://api.github.com/users/jmmcd/orgs", "repos_url": "https://api.github.com/users/jmmcd/repos", "events_url": "https://api.github.com/users/jmmcd/events{/privacy}", "received_events_url": "https://api.github.com/users/jmmcd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-08T07:40:50Z", "updated_at": "2017-03-08T16:02:49Z", "closed_at": "2017-03-08T16:02:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to find the two communities in the Karate Club graph. I think I should be able to use `partition_at_level` but I must be missing something!\r\n\r\n```\r\nG = nx.karate_club_graph()\r\n\r\nprint(community.best_partition(G)) # we get 3 communities \"by default\"\r\n\r\ndendrogram = community.generate_dendrogram(G)\r\nprint(community.partition_at_level(dendrogram, 0)) # we get 6 \r\nprint(community.partition_at_level(dendrogram, 1)) # we get 4\r\nprint(community.partition_at_level(dendrogram, 2)) # IndexError\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/4", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/4/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/4/events", "html_url": "https://github.com/taynaud/python-louvain/issues/4", "id": 203861897, "node_id": "MDU6SXNzdWUyMDM4NjE4OTc=", "number": 4, "title": "Better documentation", "user": {"login": "taynaud", "id": 1381568, "node_id": "MDQ6VXNlcjEzODE1Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1381568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taynaud", "html_url": "https://github.com/taynaud", "followers_url": "https://api.github.com/users/taynaud/followers", "following_url": "https://api.github.com/users/taynaud/following{/other_user}", "gists_url": "https://api.github.com/users/taynaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/taynaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taynaud/subscriptions", "organizations_url": "https://api.github.com/users/taynaud/orgs", "repos_url": "https://api.github.com/users/taynaud/repos", "events_url": "https://api.github.com/users/taynaud/events{/privacy}", "received_events_url": "https://api.github.com/users/taynaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-29T10:20:30Z", "updated_at": "2017-04-02T09:03:42Z", "closed_at": "2017-04-02T09:03:42Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Need to improve documentation to reflect better the module name", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/3", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/3/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/3/events", "html_url": "https://github.com/taynaud/python-louvain/issues/3", "id": 203861617, "node_id": "MDU6SXNzdWUyMDM4NjE2MTc=", "number": 3, "title": "Incompatibility with latest version of Networkx", "user": {"login": "taynaud", "id": 1381568, "node_id": "MDQ6VXNlcjEzODE1Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1381568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taynaud", "html_url": "https://github.com/taynaud", "followers_url": "https://api.github.com/users/taynaud/followers", "following_url": "https://api.github.com/users/taynaud/following{/other_user}", "gists_url": "https://api.github.com/users/taynaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/taynaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taynaud/subscriptions", "organizations_url": "https://api.github.com/users/taynaud/orgs", "repos_url": "https://api.github.com/users/taynaud/repos", "events_url": "https://api.github.com/users/taynaud/events{/privacy}", "received_events_url": "https://api.github.com/users/taynaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2017-01-29T10:13:05Z", "updated_at": "2020-05-23T12:46:39Z", "closed_at": "2020-05-23T12:46:39Z", "author_association": "OWNER", "active_lock_reason": null, "body": "\r\n\r\nnetworkx==2.0 implements G.edges() instead of G.edges_iter(). When would you provide a version with updated best_partition() code that will be compatible with that change?\r\n\r\nFile \"/usr/local/lib/python2.7/site-packages/community/community_louvain.py\", line 203, in best_partition dendo = generate_dendrogram(graph, partition, weight, resolution) File \"/usr/local/lib/python2.7/site-packages/community/community_louvain.py\", line 285, in generate_dendrogram current_graph = induced_graph(partition, current_graph, weight) File \"/usr/local/lib/python2.7/site-packages/community/community_louvain.py\", line 339, in induced_graph for node1, node2, datas in graph.edges_iter(data=True): AttributeError: 'Graph' object has no attribute 'edges_iter'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/taynaud/python-louvain/issues/2", "repository_url": "https://api.github.com/repos/taynaud/python-louvain", "labels_url": "https://api.github.com/repos/taynaud/python-louvain/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/taynaud/python-louvain/issues/2/comments", "events_url": "https://api.github.com/repos/taynaud/python-louvain/issues/2/events", "html_url": "https://github.com/taynaud/python-louvain/issues/2", "id": 203861446, "node_id": "MDU6SXNzdWUyMDM4NjE0NDY=", "number": 2, "title": "Allow randomization", "user": {"login": "taynaud", "id": 1381568, "node_id": "MDQ6VXNlcjEzODE1Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1381568?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taynaud", "html_url": "https://github.com/taynaud", "followers_url": "https://api.github.com/users/taynaud/followers", "following_url": "https://api.github.com/users/taynaud/following{/other_user}", "gists_url": "https://api.github.com/users/taynaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/taynaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taynaud/subscriptions", "organizations_url": "https://api.github.com/users/taynaud/orgs", "repos_url": "https://api.github.com/users/taynaud/repos", "events_url": "https://api.github.com/users/taynaud/events{/privacy}", "received_events_url": "https://api.github.com/users/taynaud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-29T10:07:50Z", "updated_at": "2017-06-03T08:45:47Z", "closed_at": "2017-06-03T08:45:47Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://bitbucket.org/taynaud/python-louvain/issues/31/allow-randomization", "performed_via_github_app": null, "score": 1.0}]}