{"total_count": 128, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/419", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/419/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/419/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/419", "id": 678448549, "node_id": "MDU6SXNzdWU2Nzg0NDg1NDk=", "number": 419, "title": "Is it possible to change the response_type? ", "user": {"login": "viperfx", "id": 328257, "node_id": "MDQ6VXNlcjMyODI1Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/328257?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viperfx", "html_url": "https://github.com/viperfx", "followers_url": "https://api.github.com/users/viperfx/followers", "following_url": "https://api.github.com/users/viperfx/following{/other_user}", "gists_url": "https://api.github.com/users/viperfx/gists{/gist_id}", "starred_url": "https://api.github.com/users/viperfx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viperfx/subscriptions", "organizations_url": "https://api.github.com/users/viperfx/orgs", "repos_url": "https://api.github.com/users/viperfx/repos", "events_url": "https://api.github.com/users/viperfx/events{/privacy}", "received_events_url": "https://api.github.com/users/viperfx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-13T13:43:54Z", "updated_at": "2020-08-13T15:40:31Z", "closed_at": "2020-08-13T15:40:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "For Azure Devops the response_type needs to be \"Assertion\".\r\n\r\nIve tried overriding with kwargs, but its not allowing me, either as the OAuth2Session init, or the authorization_url method", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/415", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/415/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/415/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/415", "id": 643380344, "node_id": "MDU6SXNzdWU2NDMzODAzNDQ=", "number": 415, "title": "Invalid Client ID", "user": {"login": "pablospizzamiglio", "id": 2845728, "node_id": "MDQ6VXNlcjI4NDU3Mjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2845728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pablospizzamiglio", "html_url": "https://github.com/pablospizzamiglio", "followers_url": "https://api.github.com/users/pablospizzamiglio/followers", "following_url": "https://api.github.com/users/pablospizzamiglio/following{/other_user}", "gists_url": "https://api.github.com/users/pablospizzamiglio/gists{/gist_id}", "starred_url": "https://api.github.com/users/pablospizzamiglio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pablospizzamiglio/subscriptions", "organizations_url": "https://api.github.com/users/pablospizzamiglio/orgs", "repos_url": "https://api.github.com/users/pablospizzamiglio/repos", "events_url": "https://api.github.com/users/pablospizzamiglio/events{/privacy}", "received_events_url": "https://api.github.com/users/pablospizzamiglio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-22T21:45:34Z", "updated_at": "2020-06-23T12:43:33Z", "closed_at": "2020-06-23T12:43:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nI was trying to run some examples for OAuth2 since it's my first time implementing OAuth with Python and found out an issue while doing so.\r\n\r\nI'm not sure if it's my fault or an updated API from Google is complaining about this:\r\n\r\n```python\r\nfrom requests_oauthlib import OAuth2Session\r\n\r\nclient_id = \"<client_id>.apps.googleusercontent.com\",\r\nclient_secret = \"<client_secret>\"\r\nredirect_uri = \"http://localhost\"\r\n\r\nscope = [\r\n    \"https://www.googleapis.com/auth/userinfo.email\",\r\n    # \"https://www.googleapis.com/auth/userinfo.profile\",\r\n]\r\n\r\nauthorization_base_url = \"https://accounts.google.com/o/oauth2/v2/auth\"\r\ntoken_url = \"https://www.googleapis.com/oauth2/v4/token\"\r\n\r\noauth = OAuth2Session(client_id, redirect_uri=redirect_uri, scope=scope)\r\n\r\nauthorization_url, state = oauth.authorization_url(\r\n    authorization_base_url,\r\n    # access_type and prompt are Google specific extra\r\n    # parameters.\r\n    access_type=\"offline\",\r\n    prompt=\"select_account\",\r\n)\r\n\r\nprint(f\"Please go to {authorization_url}\")\r\n\r\nauthorization_response = input(\"Enter the full callback URL\")\r\n\r\ntoken = oauth.fetch_token(\r\n    token_url,\r\n    # include_client_id=True, # Saw this one in another post but didn't work either\r\n    authorization_response=authorization_response,\r\n    # Google specific extra parameter used for client\r\n    # authentication\r\n    client_secret=client_secret,\r\n)\r\n\r\nr = oauth.get(\"https://www.googleapis.com/oauth2/v1/userinfo\")\r\n\r\nprint(r)\r\n```\r\n\r\nWhat I did found out is that the `authorization_url` wraps the `client_id` like this `('<client_id>', )` which ends up encoded between `%28%27` and `%27%2C%29` and being sent to Google's endpoint. If I remove such characters then the flow works successfully.\r\n\r\nHope it helps someone!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/414", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/414/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/414/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/414", "id": 640752253, "node_id": "MDU6SXNzdWU2NDA3NTIyNTM=", "number": 414, "title": "Should passing 'state' to authorization_url() also update self._state", "user": {"login": "mattbaker-digital", "id": 8330291, "node_id": "MDQ6VXNlcjgzMzAyOTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8330291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattbaker-digital", "html_url": "https://github.com/mattbaker-digital", "followers_url": "https://api.github.com/users/mattbaker-digital/followers", "following_url": "https://api.github.com/users/mattbaker-digital/following{/other_user}", "gists_url": "https://api.github.com/users/mattbaker-digital/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattbaker-digital/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattbaker-digital/subscriptions", "organizations_url": "https://api.github.com/users/mattbaker-digital/orgs", "repos_url": "https://api.github.com/users/mattbaker-digital/repos", "events_url": "https://api.github.com/users/mattbaker-digital/events{/privacy}", "received_events_url": "https://api.github.com/users/mattbaker-digital/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-17T21:25:40Z", "updated_at": "2020-07-21T21:40:38Z", "closed_at": "2020-07-21T21:40:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "If state is not passed to OAuth2Session.authorization_url() a new state value is generated and assigned to self._state.\r\nIf state is passed to authorization_url() then self._state is not updated.\r\n\r\nIs this behaviour correct? Should self._state also be updated to match the authorization_url() passed state value?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/406", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/406/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/406/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/406", "id": 597062572, "node_id": "MDU6SXNzdWU1OTcwNjI1NzI=", "number": 406, "title": "`LegacyApplicationClient` should honor default scopes in `prepare_request_body`", "user": {"login": "smarie", "id": 3236794, "node_id": "MDQ6VXNlcjMyMzY3OTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3236794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smarie", "html_url": "https://github.com/smarie", "followers_url": "https://api.github.com/users/smarie/followers", "following_url": "https://api.github.com/users/smarie/following{/other_user}", "gists_url": "https://api.github.com/users/smarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/smarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smarie/subscriptions", "organizations_url": "https://api.github.com/users/smarie/orgs", "repos_url": "https://api.github.com/users/smarie/repos", "events_url": "https://api.github.com/users/smarie/events{/privacy}", "received_events_url": "https://api.github.com/users/smarie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-09T06:52:07Z", "updated_at": "2020-04-09T08:47:50Z", "closed_at": "2020-04-09T08:47:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "If `scope=None` is provided (default), the `self.scope` field should be used instead. This is not the case currently. I'll push a PR", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/403", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/403/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/403/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/403/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/403", "id": 590718517, "node_id": "MDU6SXNzdWU1OTA3MTg1MTc=", "number": 403, "title": "ValueError: Unsupported token type: User Access Token", "user": {"login": "thiras", "id": 5150432, "node_id": "MDQ6VXNlcjUxNTA0MzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5150432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thiras", "html_url": "https://github.com/thiras", "followers_url": "https://api.github.com/users/thiras/followers", "following_url": "https://api.github.com/users/thiras/following{/other_user}", "gists_url": "https://api.github.com/users/thiras/gists{/gist_id}", "starred_url": "https://api.github.com/users/thiras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thiras/subscriptions", "organizations_url": "https://api.github.com/users/thiras/orgs", "repos_url": "https://api.github.com/users/thiras/repos", "events_url": "https://api.github.com/users/thiras/events{/privacy}", "received_events_url": "https://api.github.com/users/thiras/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-31T01:39:09Z", "updated_at": "2020-06-21T14:32:24Z", "closed_at": "2020-03-31T17:18:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I've got some error after successfully obtain a token from eBay. \r\n\r\nAs you can see at its [documentation](https://developer.ebay.com/api-docs/static/oauth-auth-code-grant-request.html) eBay returns `\"token_type\": \"User Access Token\"`\r\n\r\nAfter getting the token without having a problem, when I try to request anything from its endpoint I get;\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/home/thiras/.local/share/virtualenvs/rpi-order-data-sync-tA0i1rrc/bin/rods\", line 11, in <module>\r\n    load_entry_point('rpi-order-data-sync', 'console_scripts', 'rods')()\r\n  File \"/home/thiras/.local/share/virtualenvs/rpi-order-data-sync-tA0i1rrc/lib/python3.8/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/thiras/.local/share/virtualenvs/rpi-order-data-sync-tA0i1rrc/lib/python3.8/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/thiras/.local/share/virtualenvs/rpi-order-data-sync-tA0i1rrc/lib/python3.8/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/home/thiras/.local/share/virtualenvs/rpi-order-data-sync-tA0i1rrc/lib/python3.8/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/thiras/.local/share/virtualenvs/rpi-order-data-sync-tA0i1rrc/lib/python3.8/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/thiras/HDD/freelancer/contentassasin/rpi-order-data-sync/rpi_order_data_sync/main.py\", line 132, in sync_ebay_orders\r\n    orders = ebay.get(\r\n  File \"/home/thiras/.local/share/virtualenvs/rpi-order-data-sync-tA0i1rrc/lib/python3.8/site-packages/requests/sessions.py\", line 543, in get\r\n    return self.request('GET', url, **kwargs)\r\n  File \"/home/thiras/.local/share/virtualenvs/rpi-order-data-sync-tA0i1rrc/lib/python3.8/site-packages/requests_oauthlib/oauth2_session.py\", line 477, in request\r\n    url, headers, data = self._client.add_token(\r\n  File \"/home/thiras/.local/share/virtualenvs/rpi-order-data-sync-tA0i1rrc/lib/python3.8/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 192, in add_token\r\n    raise ValueError(\"Unsupported token type: %s\" % self.token_type)\r\nValueError: Unsupported token type: User Access Token \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/395", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/395/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/395/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/395", "id": 552608892, "node_id": "MDU6SXNzdWU1NTI2MDg4OTI=", "number": 395, "title": "Persist sessions/cookies with database", "user": {"login": "danjenson", "id": 4793438, "node_id": "MDQ6VXNlcjQ3OTM0Mzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4793438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danjenson", "html_url": "https://github.com/danjenson", "followers_url": "https://api.github.com/users/danjenson/followers", "following_url": "https://api.github.com/users/danjenson/following{/other_user}", "gists_url": "https://api.github.com/users/danjenson/gists{/gist_id}", "starred_url": "https://api.github.com/users/danjenson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danjenson/subscriptions", "organizations_url": "https://api.github.com/users/danjenson/orgs", "repos_url": "https://api.github.com/users/danjenson/repos", "events_url": "https://api.github.com/users/danjenson/events{/privacy}", "received_events_url": "https://api.github.com/users/danjenson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-21T03:49:38Z", "updated_at": "2020-04-09T15:12:41Z", "closed_at": "2020-04-09T15:12:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've built a flask app  that runs on Google App Engine and uses requests-oauthlib. I understand that requests-oauthlib uses requests.Session for session persistence. How can I back session persistence with a database? I'm worried that if my app gets a lot of traffic, it will autoscale and sessions will get mixed up between instances. I'd like to database-persist session information so it is multiprocess-safe.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/383", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/383/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/383/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/383", "id": 489478299, "node_id": "MDU6SXNzdWU0ODk0NzgyOTk=", "number": 383, "title": "oauthlib.oauth2.rfc6749.errors.InsecureTransportError: (insecure_transport) OAuth 2 MUST utilize https.", "user": {"login": "Chitrank-Dixit", "id": 1781313, "node_id": "MDQ6VXNlcjE3ODEzMTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1781313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chitrank-Dixit", "html_url": "https://github.com/Chitrank-Dixit", "followers_url": "https://api.github.com/users/Chitrank-Dixit/followers", "following_url": "https://api.github.com/users/Chitrank-Dixit/following{/other_user}", "gists_url": "https://api.github.com/users/Chitrank-Dixit/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chitrank-Dixit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chitrank-Dixit/subscriptions", "organizations_url": "https://api.github.com/users/Chitrank-Dixit/orgs", "repos_url": "https://api.github.com/users/Chitrank-Dixit/repos", "events_url": "https://api.github.com/users/Chitrank-Dixit/events{/privacy}", "received_events_url": "https://api.github.com/users/Chitrank-Dixit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-05T01:18:49Z", "updated_at": "2019-09-05T07:00:05Z", "closed_at": "2019-09-05T07:00:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello Devs,\r\n\r\nI am trying to use this library for Google Oauth2 flow with PKCE. But first I am trying to get access tokens using this API. I am using the example given on this link: \r\nhttps://requests-oauthlib.readthedocs.io/en/latest/examples/google.html\r\n\r\nBut I am getting\r\n\r\n`oauthlib.oauth2.rfc6749.errors.InsecureTransportError: (insecure_transport) OAuth 2 MUST utilize https.`\r\n\r\nI am getting this error when I am using \r\n`redirect_uri = 'http://127.0.0.1:8000/misc/callback/'`\r\n\r\nIs there any way I can test it locally and do not get the insecure_transport error?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/377", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/377/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/377/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/377", "id": 481648050, "node_id": "MDU6SXNzdWU0ODE2NDgwNTA=", "number": 377, "title": "access_token field added to request url when oauth2_access_token already present", "user": {"login": "jtroussard", "id": 17488893, "node_id": "MDQ6VXNlcjE3NDg4ODkz", "avatar_url": "https://avatars0.githubusercontent.com/u/17488893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtroussard", "html_url": "https://github.com/jtroussard", "followers_url": "https://api.github.com/users/jtroussard/followers", "following_url": "https://api.github.com/users/jtroussard/following{/other_user}", "gists_url": "https://api.github.com/users/jtroussard/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtroussard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtroussard/subscriptions", "organizations_url": "https://api.github.com/users/jtroussard/orgs", "repos_url": "https://api.github.com/users/jtroussard/repos", "events_url": "https://api.github.com/users/jtroussard/events{/privacy}", "received_events_url": "https://api.github.com/users/jtroussard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-16T14:53:33Z", "updated_at": "2020-02-17T21:06:35Z", "closed_at": "2020-02-17T21:06:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to make a request for a LinkedIn resource I was recieving an unpermitted field error. \r\n\r\n> b'{\"serviceErrorCode\":100,\"message\":\"Unpermitted fields present in PARAMETER: Data Processing Exception while processing fields [/access_token]\",\"status\":403}\r\n\r\nManual review of the URL revealed 2 access token related fields:\r\n\r\n1. `oauth2_access_token`\r\n2. `access_token`\r\n\r\nLooking at the OAuth2-Requests source code in `requests-oauthlib/requests_oauthlib/oauth2_session.py`, the `access_token` field is added to the url right before making the final request via the `add_token()` method.\r\n\r\nI imagine there is a mechanism in place to prevent the behavior but I could not find it? My solution was to copy a modified version of the `oauth2_session.py` module into my project with this dirty fix inside the `request()` method.\r\n\r\n```python\r\nold_version_url = url\r\nurl, headers, data = self._client.add_token(url, \r\n        http_method=method, body=data, headers=headers)\r\nif \"&access_token=\" in url:\r\n    url = old_version_url\r\n```\r\n\r\nIs there an official way to modify this behavior? Is this a bug? Please advise.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/359", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/359/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/359/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/359", "id": 399560180, "node_id": "MDU6SXNzdWUzOTk1NjAxODA=", "number": 359, "title": "release 1.2.0 forces oauthlib-3.0.0 which breaks Flask-OAuthlib", "user": {"login": "robnagler", "id": 5495179, "node_id": "MDQ6VXNlcjU0OTUxNzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5495179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robnagler", "html_url": "https://github.com/robnagler", "followers_url": "https://api.github.com/users/robnagler/followers", "following_url": "https://api.github.com/users/robnagler/following{/other_user}", "gists_url": "https://api.github.com/users/robnagler/gists{/gist_id}", "starred_url": "https://api.github.com/users/robnagler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robnagler/subscriptions", "organizations_url": "https://api.github.com/users/robnagler/orgs", "repos_url": "https://api.github.com/users/robnagler/repos", "events_url": "https://api.github.com/users/robnagler/events{/privacy}", "received_events_url": "https://api.github.com/users/robnagler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-15T22:17:08Z", "updated_at": "2019-01-18T16:02:25Z", "closed_at": "2019-01-18T16:02:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just did normal pip install and got a conflict. Flask-OAuthlib request < oauthlib-3.0.0.\r\n\r\nSince 1.2.0 is a minor release, it would seem like a bad idea to force a change to a major release of oauthlib.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/356", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/356/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/356/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/356", "id": 397889305, "node_id": "MDU6SXNzdWUzOTc4ODkzMDU=", "number": 356, "title": "oauthlib-3.0.0 is released", "user": {"login": "prometheanfire", "id": 1869923, "node_id": "MDQ6VXNlcjE4Njk5MjM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1869923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prometheanfire", "html_url": "https://github.com/prometheanfire", "followers_url": "https://api.github.com/users/prometheanfire/followers", "following_url": "https://api.github.com/users/prometheanfire/following{/other_user}", "gists_url": "https://api.github.com/users/prometheanfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/prometheanfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prometheanfire/subscriptions", "organizations_url": "https://api.github.com/users/prometheanfire/orgs", "repos_url": "https://api.github.com/users/prometheanfire/repos", "events_url": "https://api.github.com/users/prometheanfire/events{/privacy}", "received_events_url": "https://api.github.com/users/prometheanfire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-10T15:43:25Z", "updated_at": "2019-01-14T18:23:14Z", "closed_at": "2019-01-14T18:23:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "requests-oauthlib is incompatible.  Mind raising the limit (if tests pass) and making a new release (1.1.1 at this point)?\r\n\r\noauthlib[signedtoken]>=2.1.0,<3.0.0\r\n\r\nhttps://github.com/requests/requests-oauthlib/commit/1b9fe1a630eb1c91bf12fd70aa2e10ca74ffc0b6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/338", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/338/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/338/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/338", "id": 379427395, "node_id": "MDU6SXNzdWUzNzk0MjczOTU=", "number": 338, "title": "Error when using from python3", "user": {"login": "muhsinalungal", "id": 26205626, "node_id": "MDQ6VXNlcjI2MjA1NjI2", "avatar_url": "https://avatars0.githubusercontent.com/u/26205626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/muhsinalungal", "html_url": "https://github.com/muhsinalungal", "followers_url": "https://api.github.com/users/muhsinalungal/followers", "following_url": "https://api.github.com/users/muhsinalungal/following{/other_user}", "gists_url": "https://api.github.com/users/muhsinalungal/gists{/gist_id}", "starred_url": "https://api.github.com/users/muhsinalungal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/muhsinalungal/subscriptions", "organizations_url": "https://api.github.com/users/muhsinalungal/orgs", "repos_url": "https://api.github.com/users/muhsinalungal/repos", "events_url": "https://api.github.com/users/muhsinalungal/events{/privacy}", "received_events_url": "https://api.github.com/users/muhsinalungal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-10T14:37:02Z", "updated_at": "2019-02-24T22:20:28Z", "closed_at": "2019-01-11T17:48:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please look into the following Screenshot, I am getting the error from the basic library itself.\r\n\r\nfrom requests_oauthlib import OAuth1Session\r\n  File \"/home/cintanalap6u/.local/lib/python3.6/site-packages/requests_oauthlib/__init__.py\", line 11, in <module>\r\n    if requests.__version__ < '2.0.0':\r\nTypeError: '<' not supported between instances of 'module' and 'str'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/336", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/336/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/336/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/336", "id": 372214547, "node_id": "MDU6SXNzdWUzNzIyMTQ1NDc=", "number": 336, "title": "OAuth2Session should implement AuthBase", "user": {"login": "aparamon", "id": 2229284, "node_id": "MDQ6VXNlcjIyMjkyODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2229284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aparamon", "html_url": "https://github.com/aparamon", "followers_url": "https://api.github.com/users/aparamon/followers", "following_url": "https://api.github.com/users/aparamon/following{/other_user}", "gists_url": "https://api.github.com/users/aparamon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aparamon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aparamon/subscriptions", "organizations_url": "https://api.github.com/users/aparamon/orgs", "repos_url": "https://api.github.com/users/aparamon/repos", "events_url": "https://api.github.com/users/aparamon/events{/privacy}", "received_events_url": "https://api.github.com/users/aparamon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-20T13:58:41Z", "updated_at": "2019-01-30T19:59:05Z", "closed_at": "2019-01-30T19:59:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, `OAuth2Session` supports many useful features like auto-refreshing tokens and compliance hooks; `OAuth2` implements more natural `AuthBase` interface but lacks advanced features.\r\n\r\nIt is proposed that `OAuth2Session` additionally supports `AuthBase` interface:\r\n1. User authorizes and fetches tokens using `OAuth2Session` methods.\r\n2. User accesses resources using `request.Session().request(..., auth=auth_session, ...)`.\r\n\r\n`OAuth2` class may be left as is or aliased to `OAuth2Session`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/332", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/332/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/332/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/332", "id": 368860911, "node_id": "MDU6SXNzdWUzNjg4NjA5MTE=", "number": 332, "title": "Changes to LinkedIn tutorial ", "user": {"login": "bootrino", "id": 22624099, "node_id": "MDQ6VXNlcjIyNjI0MDk5", "avatar_url": "https://avatars0.githubusercontent.com/u/22624099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bootrino", "html_url": "https://github.com/bootrino", "followers_url": "https://api.github.com/users/bootrino/followers", "following_url": "https://api.github.com/users/bootrino/following{/other_user}", "gists_url": "https://api.github.com/users/bootrino/gists{/gist_id}", "starred_url": "https://api.github.com/users/bootrino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bootrino/subscriptions", "organizations_url": "https://api.github.com/users/bootrino/orgs", "repos_url": "https://api.github.com/users/bootrino/repos", "events_url": "https://api.github.com/users/bootrino/events{/privacy}", "received_events_url": "https://api.github.com/users/bootrino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-10T21:24:02Z", "updated_at": "2020-02-17T21:12:22Z", "closed_at": "2020-02-17T21:12:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like LinkedIn is making some changes that probably need to result in changes to the LinkedIn tutorial:\r\n\r\nhttps://developer.linkedin.com/blog/posts/2018/redirecting-oauth-uas", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/330", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/330/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/330/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/330", "id": 359261099, "node_id": "MDU6SXNzdWUzNTkyNjEwOTk=", "number": 330, "title": "`client_id` from session not used in fetch_token", "user": {"login": "jvanasco", "id": 204779, "node_id": "MDQ6VXNlcjIwNDc3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/204779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvanasco", "html_url": "https://github.com/jvanasco", "followers_url": "https://api.github.com/users/jvanasco/followers", "following_url": "https://api.github.com/users/jvanasco/following{/other_user}", "gists_url": "https://api.github.com/users/jvanasco/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvanasco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvanasco/subscriptions", "organizations_url": "https://api.github.com/users/jvanasco/orgs", "repos_url": "https://api.github.com/users/jvanasco/repos", "events_url": "https://api.github.com/users/jvanasco/events{/privacy}", "received_events_url": "https://api.github.com/users/jvanasco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-11T23:32:23Z", "updated_at": "2018-09-13T20:25:08Z", "closed_at": "2018-09-13T20:25:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I got tripped up with the example doc on using fetch_token from the overview\r\n\r\nhttps://requests-oauthlib.readthedocs.io/en/latest/\r\n\r\n    github = OAuth2Session(client_id, state=session['oauth_state'])\r\n    token = github.fetch_token(token_url, client_secret=client_secret,\r\n                               authorization_response=request.url)\r\n\r\nThis doesn't seem to work against custom servers that require a client_id. The logic in `fetch_token` doesn't pull the `client_id` off the session, and consequently it's not sent upstream:\r\n\r\nhttps://github.com/requests/requests-oauthlib/blob/master/requests_oauthlib/oauth2_session.py#L200\r\n\r\nit looks like we can just add 2 lines as a fallback condition to pull the client_id out:\r\n \r\n         client_id = kwargs.get('client_id', '')\r\n    +    if not client_id and isinstance(self._client, WebApplicationClient):\r\n    +        client_id = self._client.client_id\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/328", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/328/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/328/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/328", "id": 357824514, "node_id": "MDU6SXNzdWUzNTc4MjQ1MTQ=", "number": 328, "title": "Throwing insecure transport error when environment variables debug and ouathlib_insecure_transport are both set to 1", "user": {"login": "Avynn", "id": 22106487, "node_id": "MDQ6VXNlcjIyMTA2NDg3", "avatar_url": "https://avatars1.githubusercontent.com/u/22106487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avynn", "html_url": "https://github.com/Avynn", "followers_url": "https://api.github.com/users/Avynn/followers", "following_url": "https://api.github.com/users/Avynn/following{/other_user}", "gists_url": "https://api.github.com/users/Avynn/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avynn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avynn/subscriptions", "organizations_url": "https://api.github.com/users/Avynn/orgs", "repos_url": "https://api.github.com/users/Avynn/repos", "events_url": "https://api.github.com/users/Avynn/events{/privacy}", "received_events_url": "https://api.github.com/users/Avynn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-06T20:56:30Z", "updated_at": "2018-09-06T20:59:21Z", "closed_at": "2018-09-06T20:59:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know what to do about this, the title explains the whole situation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/321", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/321/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/321/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/321", "id": 344408237, "node_id": "MDU6SXNzdWUzNDQ0MDgyMzc=", "number": 321, "title": "bdist_wheel upload failes for python3", "user": {"login": "thilo-maurer", "id": 15922770, "node_id": "MDQ6VXNlcjE1OTIyNzcw", "avatar_url": "https://avatars2.githubusercontent.com/u/15922770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thilo-maurer", "html_url": "https://github.com/thilo-maurer", "followers_url": "https://api.github.com/users/thilo-maurer/followers", "following_url": "https://api.github.com/users/thilo-maurer/following{/other_user}", "gists_url": "https://api.github.com/users/thilo-maurer/gists{/gist_id}", "starred_url": "https://api.github.com/users/thilo-maurer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thilo-maurer/subscriptions", "organizations_url": "https://api.github.com/users/thilo-maurer/orgs", "repos_url": "https://api.github.com/users/thilo-maurer/repos", "events_url": "https://api.github.com/users/thilo-maurer/events{/privacy}", "received_events_url": "https://api.github.com/users/thilo-maurer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-25T11:42:34Z", "updated_at": "2018-08-28T11:19:09Z", "closed_at": "2018-08-28T11:19:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After\r\n```\r\npip3 download requests-oauthlib --no-binary :all:\r\n```\r\nthen extracting the package, then\r\n* build good\r\n* upload failes, when using python3 (python2 is fine)\r\n\r\nReason is that in this projects's `setup.py` line 50, argument `classifiers` should be an array, not a tuple. Replacing `(` by `[` fixes the issue.\r\n\r\nSee log below:\r\n```\r\nroot@host:/build/requests-oauthlib-1.0.0.tar.gz.extracted/requests-oauthlib-1.0.0# python3 setup.py bdist_wheel upload -r artifactory\r\nrunning bdist_wheel\r\nrunning build\r\nrunning build_py\r\ninstalling to build/bdist.linux-ppc64le/wheel\r\nrunning install\r\nrunning install_lib\r\ncreating build/bdist.linux-ppc64le/wheel\r\ncreating build/bdist.linux-ppc64le/wheel/requests_oauthlib\r\ncopying build/lib/requests_oauthlib/oauth1_session.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib\r\ncopying build/lib/requests_oauthlib/oauth2_auth.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib\r\ncreating build/bdist.linux-ppc64le/wheel/requests_oauthlib/compliance_fixes\r\ncopying build/lib/requests_oauthlib/compliance_fixes/weibo.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib/compliance_fixes\r\ncopying build/lib/requests_oauthlib/compliance_fixes/douban.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib/compliance_fixes\r\ncopying build/lib/requests_oauthlib/compliance_fixes/mailchimp.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib/compliance_fixes\r\ncopying build/lib/requests_oauthlib/compliance_fixes/fitbit.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib/compliance_fixes\r\ncopying build/lib/requests_oauthlib/compliance_fixes/facebook.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib/compliance_fixes\r\ncopying build/lib/requests_oauthlib/compliance_fixes/__init__.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib/compliance_fixes\r\ncopying build/lib/requests_oauthlib/compliance_fixes/plentymarkets.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib/compliance_fixes\r\ncopying build/lib/requests_oauthlib/compliance_fixes/slack.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib/compliance_fixes\r\ncopying build/lib/requests_oauthlib/compliance_fixes/linkedin.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib/compliance_fixes\r\ncopying build/lib/requests_oauthlib/oauth2_session.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib\r\ncopying build/lib/requests_oauthlib/__init__.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib\r\ncopying build/lib/requests_oauthlib/oauth1_auth.py -> build/bdist.linux-ppc64le/wheel/requests_oauthlib\r\nrunning install_egg_info\r\nrunning egg_info\r\nwriting requests_oauthlib.egg-info/PKG-INFO\r\nwriting dependency_links to requests_oauthlib.egg-info/dependency_links.txt\r\nwriting requirements to requests_oauthlib.egg-info/requires.txt\r\nwriting top-level names to requests_oauthlib.egg-info/top_level.txt\r\nreading manifest file 'requests_oauthlib.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nno previously-included directories found matching '*.pyc'\r\nwriting manifest file 'requests_oauthlib.egg-info/SOURCES.txt'\r\nCopying requests_oauthlib.egg-info to build/bdist.linux-ppc64le/wheel/requests_oauthlib-1.0.0-py3.6.egg-info\r\nrunning install_scripts\r\ncreating build/bdist.linux-ppc64le/wheel/requests_oauthlib-1.0.0.dist-info/WHEEL\r\ncreating '/build/requests-oauthlib-1.0.0.tar.gz.extracted/requests-oauthlib-1.0.0/dist/requests_oauthlib-1.0.0-py2.py3-none-any.whl' and adding '.' to it\r\nadding 'requests_oauthlib/__init__.py'\r\nadding 'requests_oauthlib/oauth1_auth.py'\r\nadding 'requests_oauthlib/oauth1_session.py'\r\nadding 'requests_oauthlib/oauth2_auth.py'\r\nadding 'requests_oauthlib/oauth2_session.py'\r\nadding 'requests_oauthlib/compliance_fixes/__init__.py'\r\nadding 'requests_oauthlib/compliance_fixes/douban.py'\r\nadding 'requests_oauthlib/compliance_fixes/facebook.py'\r\nadding 'requests_oauthlib/compliance_fixes/fitbit.py'\r\nadding 'requests_oauthlib/compliance_fixes/linkedin.py'\r\nadding 'requests_oauthlib/compliance_fixes/mailchimp.py'\r\nadding 'requests_oauthlib/compliance_fixes/plentymarkets.py'\r\nadding 'requests_oauthlib/compliance_fixes/slack.py'\r\nadding 'requests_oauthlib/compliance_fixes/weibo.py'\r\nadding 'requests_oauthlib-1.0.0.dist-info/LICENSE.txt'\r\nadding 'requests_oauthlib-1.0.0.dist-info/top_level.txt'\r\nadding 'requests_oauthlib-1.0.0.dist-info/WHEEL'\r\nadding 'requests_oauthlib-1.0.0.dist-info/METADATA'\r\nadding 'requests_oauthlib-1.0.0.dist-info/RECORD'\r\nremoving build/bdist.linux-ppc64le/wheel\r\nrunning upload\r\nTraceback (most recent call last):\r\n  File \"setup.py\", line 68, in <module>\r\n    test_suite='tests'\r\n  File \"/usr/local/lib/python3.6/site-packages/setuptools/__init__.py\", line 131, in setup\r\n    return distutils.core.setup(**attrs)\r\n  File \"/usr/local/lib/python3.6/distutils/core.py\", line 148, in setup\r\n    dist.run_commands()\r\n  File \"/usr/local/lib/python3.6/distutils/dist.py\", line 955, in run_commands\r\n    self.run_command(cmd)\r\n  File \"/usr/local/lib/python3.6/distutils/dist.py\", line 974, in run_command\r\n    cmd_obj.run()\r\n  File \"/usr/local/lib/python3.6/distutils/command/upload.py\", line 64, in run\r\n    self.upload_file(command, pyversion, filename)\r\n  File \"/usr/local/lib/python3.6/distutils/command/upload.py\", line 162, in upload_file\r\n    body.write(value)\r\nTypeError: a bytes-like object is required, not 'str'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/315", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/315/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/315/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/315", "id": 330234924, "node_id": "MDU6SXNzdWUzMzAyMzQ5MjQ=", "number": 315, "title": "How to get refresh token for my application", "user": {"login": "rahul3103", "id": 10813252, "node_id": "MDQ6VXNlcjEwODEzMjUy", "avatar_url": "https://avatars1.githubusercontent.com/u/10813252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rahul3103", "html_url": "https://github.com/rahul3103", "followers_url": "https://api.github.com/users/rahul3103/followers", "following_url": "https://api.github.com/users/rahul3103/following{/other_user}", "gists_url": "https://api.github.com/users/rahul3103/gists{/gist_id}", "starred_url": "https://api.github.com/users/rahul3103/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rahul3103/subscriptions", "organizations_url": "https://api.github.com/users/rahul3103/orgs", "repos_url": "https://api.github.com/users/rahul3103/repos", "events_url": "https://api.github.com/users/rahul3103/events{/privacy}", "received_events_url": "https://api.github.com/users/rahul3103/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-07T11:41:07Z", "updated_at": "2018-06-15T07:26:22Z", "closed_at": "2018-06-15T07:26:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey i am trying to access Google Drive via this app and I am trying to upload and list files. But I am facing issue when the `access_token` expires after an hour.  from where should I get `refresh_token`.\r\nHere is the repo: https://github.com/rahul3103/test_google_login\r\n\r\n```\r\ngoogle.auth.exceptions.RefreshError\r\ngoogle.auth.exceptions.RefreshError: The credentials do not contain the necessary fields need to refresh the access token. You must specify refresh_token, token_uri, client_id, and client_secret.\r\n\r\nTraceback (most recent call last)\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/flask/app.py\", line 2309, in __call__\r\nreturn self.wsgi_app(environ, start_response)\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/flask/app.py\", line 2295, in wsgi_app\r\nresponse = self.handle_exception(e)\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/flask/app.py\", line 1741, in handle_exception\r\nreraise(exc_type, exc_value, tb)\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\nraise value\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/flask/app.py\", line 2292, in wsgi_app\r\nresponse = self.full_dispatch_request()\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/flask/app.py\", line 1815, in full_dispatch_request\r\nrv = self.handle_user_exception(e)\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/flask/app.py\", line 1718, in handle_user_exception\r\nreraise(exc_type, exc_value, tb)\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/flask/_compat.py\", line 35, in reraise\r\nraise value\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/flask/app.py\", line 1813, in full_dispatch_request\r\nrv = self.dispatch_request()\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/flask/app.py\", line 1799, in dispatch_request\r\nreturn self.view_functions[rule.endpoint](**req.view_args)\r\nFile \"/Users/rahul/projects/personal/code/app.py\", line 57, in home\r\nfields=\"nextPageToken, files(id, name)\"\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/googleapiclient/_helpers.py\", line 130, in positional_wrapper\r\nreturn wrapped(*args, **kwargs)\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/googleapiclient/http.py\", line 835, in execute\r\nmethod=str(self.method), body=self.body, headers=self.headers)\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/googleapiclient/http.py\", line 162, in _retry_request\r\nresp, content = http.request(uri, method, *args, **kwargs)\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/google_auth_httplib2.py\", line 213, in request\r\nself.credentials.refresh(self._request)\r\nFile \"/Users/rahul/.virtualenvs/drive/lib/python3.6/site-packages/google/oauth2/credentials.py\", line 129, in refresh\r\n'The credentials do not contain the necessary fields need to '\r\ngoogle.auth.exceptions.RefreshError: The credentials do not contain the necessary fields need to refresh the access token. You must specify refresh_token, token_uri, client_id, and client_secret.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/307", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/307/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/307/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/307", "id": 292596897, "node_id": "MDU6SXNzdWUyOTI1OTY4OTc=", "number": 307, "title": "How can I get the base string and key for generating the 'oauth_signature' from requests-oauthlib when doing a requests?", "user": {"login": "coroner4817", "id": 8528457, "node_id": "MDQ6VXNlcjg1Mjg0NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/8528457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coroner4817", "html_url": "https://github.com/coroner4817", "followers_url": "https://api.github.com/users/coroner4817/followers", "following_url": "https://api.github.com/users/coroner4817/following{/other_user}", "gists_url": "https://api.github.com/users/coroner4817/gists{/gist_id}", "starred_url": "https://api.github.com/users/coroner4817/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coroner4817/subscriptions", "organizations_url": "https://api.github.com/users/coroner4817/orgs", "repos_url": "https://api.github.com/users/coroner4817/repos", "events_url": "https://api.github.com/users/coroner4817/events{/privacy}", "received_events_url": "https://api.github.com/users/coroner4817/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-29T23:18:44Z", "updated_at": "2018-01-31T16:13:18Z", "closed_at": "2018-01-31T16:13:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "My situation is that I can successfully using python-requests with requests-oauthlib to post a request to a server, but I cannot using the oauth1 library I wrote to do so. There must be something wrong in my lib. So I want to compare with the base_string from the requests-oauthlib. Is it possible?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/304", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/304/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/304/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/304", "id": 287058563, "node_id": "MDU6SXNzdWUyODcwNTg1NjM=", "number": 304, "title": "No modulenames 'requests_oauthlib'", "user": {"login": "zockons12", "id": 33599956, "node_id": "MDQ6VXNlcjMzNTk5OTU2", "avatar_url": "https://avatars1.githubusercontent.com/u/33599956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zockons12", "html_url": "https://github.com/zockons12", "followers_url": "https://api.github.com/users/zockons12/followers", "following_url": "https://api.github.com/users/zockons12/following{/other_user}", "gists_url": "https://api.github.com/users/zockons12/gists{/gist_id}", "starred_url": "https://api.github.com/users/zockons12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zockons12/subscriptions", "organizations_url": "https://api.github.com/users/zockons12/orgs", "repos_url": "https://api.github.com/users/zockons12/repos", "events_url": "https://api.github.com/users/zockons12/events{/privacy}", "received_events_url": "https://api.github.com/users/zockons12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-09T11:35:49Z", "updated_at": "2018-01-09T14:02:41Z", "closed_at": "2018-01-09T14:02:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "from requests_oauthlib import OAuth2Session \r\n\r\n\r\n`ModuleNotFoundError: No module named 'requests_oauthlib`\r\n\r\nI am using windows 64 bit python 32 bit. \r\n\r\nAny idea why this is happening?This is installed as per:\r\n\r\n\r\n`C:\\Users\\Chea\\zz>pip install requests requests_oauthlib Requirement already satisfied: requests in c:\\users\\Chea\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages Requirement already satisfied: requests_oauthlib in c:\\users\\Chea\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages Requirement already satisfied: urllib3<1.23,>=1.21.1 in c:\\users\\Chea\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages (from requests) Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\Chea\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages (from requests) Requirement already satisfied: idna<2.7,>=2.5 in c:\\users\\Chea\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages (from requests) Requirement already satisfied: chardet<3.1.0,>=3.0.2 in c:\\users\\Chea\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages (from requests) Requirement already satisfied: oauthlib>=0.6.2 in c:\\users\\Chea\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages (from requests_oauthlib)`\r\n\r\n\r\n\r\n\r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/301", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/301/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/301/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/301", "id": 281854826, "node_id": "MDU6SXNzdWUyODE4NTQ4MjY=", "number": 301, "title": "Facebook OAuth flow no longer working", "user": {"login": "bhargavrpatel", "id": 911413, "node_id": "MDQ6VXNlcjkxMTQxMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/911413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhargavrpatel", "html_url": "https://github.com/bhargavrpatel", "followers_url": "https://api.github.com/users/bhargavrpatel/followers", "following_url": "https://api.github.com/users/bhargavrpatel/following{/other_user}", "gists_url": "https://api.github.com/users/bhargavrpatel/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhargavrpatel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhargavrpatel/subscriptions", "organizations_url": "https://api.github.com/users/bhargavrpatel/orgs", "repos_url": "https://api.github.com/users/bhargavrpatel/repos", "events_url": "https://api.github.com/users/bhargavrpatel/events{/privacy}", "received_events_url": "https://api.github.com/users/bhargavrpatel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-13T18:43:32Z", "updated_at": "2019-01-11T17:50:06Z", "closed_at": "2019-01-11T17:50:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWe had a working implementation which used the wonderful requests-oauthlib with Facebook. The code was no different than the sample code in the documentation. Suddenly, it just stopped working. When we visit the generated URL, we see the following: \r\n![image](https://user-images.githubusercontent.com/911413/33956021-6032e224-e00b-11e7-9a2f-2872fe2e8464.png)\r\n\r\n\r\nThe generated url where XXXXX represent the client specific details.\r\n```\r\nhttps://www.facebook.com/v2.10/dialog/oauth?response_type=code&client_id=XXXXX\r\n&redirect_uri=https%3A%2F%2FXXXXX\r\n&scope=id+name+first_name+last_name+email\r\n&state=XXXXX&timeout=60\r\n```\r\n\r\nAnyone else experiencing this? Can one of the devs please validate that it is working? We'd really appreciate it.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/299", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/299/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/299/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/299", "id": 272762762, "node_id": "MDU6SXNzdWUyNzI3NjI3NjI=", "number": 299, "title": "TypeError: unorderable types: module() < str()", "user": {"login": "HotTabascoSauce", "id": 31966046, "node_id": "MDQ6VXNlcjMxOTY2MDQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/31966046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HotTabascoSauce", "html_url": "https://github.com/HotTabascoSauce", "followers_url": "https://api.github.com/users/HotTabascoSauce/followers", "following_url": "https://api.github.com/users/HotTabascoSauce/following{/other_user}", "gists_url": "https://api.github.com/users/HotTabascoSauce/gists{/gist_id}", "starred_url": "https://api.github.com/users/HotTabascoSauce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HotTabascoSauce/subscriptions", "organizations_url": "https://api.github.com/users/HotTabascoSauce/orgs", "repos_url": "https://api.github.com/users/HotTabascoSauce/repos", "events_url": "https://api.github.com/users/HotTabascoSauce/events{/privacy}", "received_events_url": "https://api.github.com/users/HotTabascoSauce/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-11-09T23:17:49Z", "updated_at": "2018-05-20T09:43:44Z", "closed_at": "2018-05-20T09:43:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the __init__.py file there is an if statement that calls `requests.__version__` and compares it to '2.0.0'\r\n\r\nI get a type error every time: \r\n`File \"/srv/USER/lib/python3.5/site-packages/requests_oauthlib/__init__.py\", line 9, in <module> if requests.__version__ < '2.0.0': \r\nTypeError: unorderable types: module() < str()`\r\n\r\nI was able to manually remove the error by replacing `requests.__version__` with '2.18.4' which is the value it should be pulling. If I run the code in a python terminal, it works, but if I run it as a script it fails.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/297", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/297/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/297/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/297", "id": 270568515, "node_id": "MDU6SXNzdWUyNzA1Njg1MTU=", "number": 297, "title": "Invalid grant for access token", "user": {"login": "deoresheetal", "id": 24888692, "node_id": "MDQ6VXNlcjI0ODg4Njky", "avatar_url": "https://avatars2.githubusercontent.com/u/24888692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deoresheetal", "html_url": "https://github.com/deoresheetal", "followers_url": "https://api.github.com/users/deoresheetal/followers", "following_url": "https://api.github.com/users/deoresheetal/following{/other_user}", "gists_url": "https://api.github.com/users/deoresheetal/gists{/gist_id}", "starred_url": "https://api.github.com/users/deoresheetal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deoresheetal/subscriptions", "organizations_url": "https://api.github.com/users/deoresheetal/orgs", "repos_url": "https://api.github.com/users/deoresheetal/repos", "events_url": "https://api.github.com/users/deoresheetal/events{/privacy}", "received_events_url": "https://api.github.com/users/deoresheetal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-02T08:22:24Z", "updated_at": "2017-11-03T03:05:17Z", "closed_at": "2017-11-03T03:05:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry I had updated wrong issue and can not delete the issue now\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/291", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/291/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/291/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/291", "id": 262336086, "node_id": "MDU6SXNzdWUyNjIzMzYwODY=", "number": 291, "title": "security vulnerability report", "user": {"login": "YangRonghai", "id": 5300446, "node_id": "MDQ6VXNlcjUzMDA0NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5300446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YangRonghai", "html_url": "https://github.com/YangRonghai", "followers_url": "https://api.github.com/users/YangRonghai/followers", "following_url": "https://api.github.com/users/YangRonghai/following{/other_user}", "gists_url": "https://api.github.com/users/YangRonghai/gists{/gist_id}", "starred_url": "https://api.github.com/users/YangRonghai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YangRonghai/subscriptions", "organizations_url": "https://api.github.com/users/YangRonghai/orgs", "repos_url": "https://api.github.com/users/YangRonghai/repos", "events_url": "https://api.github.com/users/YangRonghai/events{/privacy}", "received_events_url": "https://api.github.com/users/YangRonghai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-03T07:56:17Z", "updated_at": "2018-05-20T09:45:37Z", "closed_at": "2018-05-20T09:45:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have discovered some security vulnerabilities. I tried to reach the development lead Kenneth Reitz <me@kennethreitz.com> (as shown in the AUTHORS.rst), but did not get reply. So who can I reach  to privately report the vulnerability?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/288", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/288/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/288/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/288", "id": 256154057, "node_id": "MDU6SXNzdWUyNTYxNTQwNTc=", "number": 288, "title": "KeyError: 'oauth_token' after authorization", "user": {"login": "wjstevenson95", "id": 13630699, "node_id": "MDQ6VXNlcjEzNjMwNjk5", "avatar_url": "https://avatars3.githubusercontent.com/u/13630699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wjstevenson95", "html_url": "https://github.com/wjstevenson95", "followers_url": "https://api.github.com/users/wjstevenson95/followers", "following_url": "https://api.github.com/users/wjstevenson95/following{/other_user}", "gists_url": "https://api.github.com/users/wjstevenson95/gists{/gist_id}", "starred_url": "https://api.github.com/users/wjstevenson95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wjstevenson95/subscriptions", "organizations_url": "https://api.github.com/users/wjstevenson95/orgs", "repos_url": "https://api.github.com/users/wjstevenson95/repos", "events_url": "https://api.github.com/users/wjstevenson95/events{/privacy}", "received_events_url": "https://api.github.com/users/wjstevenson95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-08T06:33:49Z", "updated_at": "2017-11-18T18:30:37Z", "closed_at": "2017-09-08T07:18:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Keep getting the same KeyError when trying to access page data once the token is fetched. Not sure what is happening, here is the code:\r\n\r\n````\r\nclient_id = os.environ['GITHUB_CLIENT_ID']\r\nclient_secret = os.environ['GITHUB_CLIENT_SECRET']\r\nauthorization_base_url = 'https://github.com/login/oauth/authorize'\r\ntoken_url = 'https://github.com/login/oauth/access_token'\r\nredirect_uri = 'https://polar-coast-87574.herokuapp.com/login/authorized'\r\n@app.route('/login')\r\ndef login():\r\n\tgithub = OAuth2Session(client_id, redirect_uri=redirect_uri)\r\n\t(authorization_url,state) = github.authorization_url(authorization_base_url)\r\n\tsession['oauth_state'] = state\r\n\treturn redirect(authorization_url)\r\n\r\n\r\n@app.route('/login/authorized', methods=[\"GET\"])\r\ndef authorized():\r\n\ttry:\r\n\t\tgithub = OAuth2Session(client_id, state=session['oauth_state'])\r\n\t\ttoken = github.fetch_token(token_url, client_secret=client_secret, authorization_response=request.url)\r\n\t\tsession['oauth_token'] = token\r\n\t\treturn redirect(url_for('.profile'))\r\n\texcept KeyError as error:\r\n\t\tsession.clear()\r\n\t\tprint error\r\n\t\treturn redirect(url_for('render_home'))\r\n\r\n\r\n@app.route('/profile', methods=[\"GET\"])\r\ndef profile():\r\n\tgithub = OAuth2Session(client_id, token=session['oauth_token'])\r\n\treturn jsonify(github.get('https://api.github.com/user').json())\r\n````\r\nThis is the logging information:\r\n\r\n```\r\n2017-09-08T06:20:55.566879+00:00 heroku[router]: at=info method=GET path=\"/profile\" host=polar-coast-87574.herokuapp.com request_id=fac8fd6f-698a-4bd5-be88-d4c60c2ebe74 fwd=\"169.231.95.18\" dyno=web.1 connect=0ms service=13ms status=500 bytes=456 protocol=http\r\n2017-09-08T06:20:55.556176+00:00 app[web.1]: Exception on /profile [GET]\r\n2017-09-08T06:20:55.556186+00:00 app[web.1]: Traceback (most recent call last):\r\n2017-09-08T06:20:55.556188+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python2.7/site-packages/flask/app.py\", line 1817, in wsgi_app\r\n2017-09-08T06:20:55.556188+00:00 app[web.1]:     response = self.full_dispatch_request()\r\n2017-09-08T06:20:55.556189+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python2.7/site-packages/flask/app.py\", line 1477, in full_dispatch_request\r\n2017-09-08T06:20:55.556190+00:00 app[web.1]:     rv = self.handle_user_exception(e)\r\n2017-09-08T06:20:55.556191+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python2.7/site-packages/flask/app.py\", line 1381, in handle_user_exception\r\n2017-09-08T06:20:55.556191+00:00 app[web.1]:     reraise(exc_type, exc_value, tb)\r\n2017-09-08T06:20:55.556192+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python2.7/site-packages/flask/app.py\", line 1475, in full_dispatch_request\r\n2017-09-08T06:20:55.556192+00:00 app[web.1]:     rv = self.dispatch_request()\r\n2017-09-08T06:20:55.556193+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python2.7/site-packages/flask/app.py\", line 1461, in dispatch_request\r\n2017-09-08T06:20:55.556194+00:00 app[web.1]:     return self.view_functions[rule.endpoint](**req.view_args)\r\n2017-09-08T06:20:55.556195+00:00 app[web.1]:   File \"/app/webapp.py\", line 60, in profile\r\n2017-09-08T06:20:55.556195+00:00 app[web.1]:     github = OAuth2Session(client_id, token=session['oauth_token'])\r\n2017-09-08T06:20:55.556196+00:00 app[web.1]:   File \"/app/.heroku/python/lib/python2.7/site-packages/werkzeug/local.py\", line 368, in <lambda>\r\n2017-09-08T06:20:55.556197+00:00 app[web.1]:     __getitem__ = lambda x, i: x._get_current_object()[i]\r\n2017-09-08T06:20:55.556197+00:00 app[web.1]: KeyError: 'oauth_token'\r\n```\r\n\r\nLet me know if more information is needed!\r\n\r\nEDIT: So clearing cookies for the heroku app seemed to get past the KeyErrors for oauth_state and oauth_token. Any way to get around this without having to clear cookies through chrome every time I want to login?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/286", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/286/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/286/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/286", "id": 253420802, "node_id": "MDU6SXNzdWUyNTM0MjA4MDI=", "number": 286, "title": "OAuth2Session refresh token failing when manually doing it via requests succeeds ", "user": {"login": "jorwoods", "id": 13803242, "node_id": "MDQ6VXNlcjEzODAzMjQy", "avatar_url": "https://avatars2.githubusercontent.com/u/13803242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorwoods", "html_url": "https://github.com/jorwoods", "followers_url": "https://api.github.com/users/jorwoods/followers", "following_url": "https://api.github.com/users/jorwoods/following{/other_user}", "gists_url": "https://api.github.com/users/jorwoods/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorwoods/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorwoods/subscriptions", "organizations_url": "https://api.github.com/users/jorwoods/orgs", "repos_url": "https://api.github.com/users/jorwoods/repos", "events_url": "https://api.github.com/users/jorwoods/events{/privacy}", "received_events_url": "https://api.github.com/users/jorwoods/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-28T18:50:57Z", "updated_at": "2018-08-10T02:13:05Z", "closed_at": "2018-05-20T09:53:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am working with the Sysomos API, and when I try to use the OAuth2Session object's \"refresh token\" method, it fails telling me that I am missing a token. I have tried both letting the oauth object use self.token implicitly as well as directly passing it token, per below.\r\n\r\n```python\r\n\r\ntoken = oauth.refresh_token(f'https://{domain}/oauth/token', \r\n                            refresh_token=token['refresh_token'], \r\n                            params=p2)\r\n\r\n---------------------------------------------------------------------------\r\nMissingTokenError                         Traceback (most recent call last)\r\n<ipython-input-36-31891d281fd4> in <module>()\r\n      1 token = oauth.refresh_token(f'https://{domain}/oauth/token', \r\n      2                             refresh_token=token['refresh_token'],\r\n----> 3                             params=p2)\r\n\r\nC:\\Anaconda3\\envs\\py36\\lib\\site-packages\\requests_oauthlib\\oauth2_session.py in refresh_token(self, token_url, refresh_token, body, auth, timeout, headers, verify, proxies, **kwargs)\r\n    307             r = hook(r)\r\n    308 \r\n--> 309         self.token = self._client.parse_request_body_response(r.text, scope=self.scope)\r\n    310         if not 'refresh_token' in self.token:\r\n    311             log.debug('No new refresh token given. Re-using old.')\r\n\r\nC:\\Anaconda3\\envs\\py36\\lib\\site-packages\\oauthlib\\oauth2\\rfc6749\\clients\\base.py in parse_request_body_response(self, body, scope, **kwargs)\r\n    407         .. _`Section 7.1`: http://tools.ietf.org/html/rfc6749#section-7.1\r\n    408         \"\"\"\r\n--> 409         self.token = parse_token_response(body, scope=scope)\r\n    410         self._populate_attributes(self.token)\r\n    411         return self.token\r\n\r\nC:\\Anaconda3\\envs\\py36\\lib\\site-packages\\oauthlib\\oauth2\\rfc6749\\parameters.py in parse_token_response(body, scope)\r\n    374 \r\n    375     params = OAuth2Token(params, old_scope=scope)\r\n--> 376     validate_token_parameters(params)\r\n    377     return params\r\n    378 \r\n\r\nC:\\Anaconda3\\envs\\py36\\lib\\site-packages\\oauthlib\\oauth2\\rfc6749\\parameters.py in validate_token_parameters(params)\r\n    384 \r\n    385     if not 'access_token' in params:\r\n--> 386         raise MissingTokenError(description=\"Missing access token parameter.\")\r\n    387 \r\n    388     if not 'token_type' in params:\r\n\r\nMissingTokenError: (missing_token) Missing access token parameter.\r\n```\r\n\r\nHowever, if I manually try to refresh the token simply using requests:\r\n\r\n```python\r\nr = requests.post(f'https://{domain}/oauth/token', \r\n                  data={'refresh_token':token['refresh_token'],\r\n                 'client_id':p2['client_id'],\r\n                 'client_secret':p2['client_secret'],\r\n                 'grant_type':'refresh_token'})\r\n```\r\n\r\n\r\nIt returns with a response code of 200, along with the new token in the content of the response. \r\n\r\nAm I somehow using the refresh_token method wrong, or is there a bug within it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/285", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/285/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/285/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/285", "id": 252771865, "node_id": "MDU6SXNzdWUyNTI3NzE4NjU=", "number": 285, "title": "fetch_token doesnt pass scope to oauthlib", "user": {"login": "pm100", "id": 489231, "node_id": "MDQ6VXNlcjQ4OTIzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/489231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pm100", "html_url": "https://github.com/pm100", "followers_url": "https://api.github.com/users/pm100/followers", "following_url": "https://api.github.com/users/pm100/following{/other_user}", "gists_url": "https://api.github.com/users/pm100/gists{/gist_id}", "starred_url": "https://api.github.com/users/pm100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pm100/subscriptions", "organizations_url": "https://api.github.com/users/pm100/orgs", "repos_url": "https://api.github.com/users/pm100/repos", "events_url": "https://api.github.com/users/pm100/events{/privacy}", "received_events_url": "https://api.github.com/users/pm100/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-25T01:09:45Z", "updated_at": "2017-08-26T05:43:13Z", "closed_at": "2017-08-25T07:46:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "SO if I am doing a BackendApplicationClient app that needs to pass a scope it doesn't work\r\n\r\n```\r\ndef getToken(client_id,client_secret,url):\r\n    client = BackendApplicationClient(client_id=client_id)\r\n    oauth = OAuth2Session(client=client, scope = ['myscope'])\r\n    token = oauth.fetch_token(token_url=url, client_id=client_id,   client_secret=client_secret)\r\n```\r\n\r\nthe request that gets sent doesn't pass scope through", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/282", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/282/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/282/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/282", "id": 234505610, "node_id": "MDU6SXNzdWUyMzQ1MDU2MTA=", "number": 282, "title": "ImportError: No module named compat", "user": {"login": "SKisContent", "id": 4353999, "node_id": "MDQ6VXNlcjQzNTM5OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4353999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SKisContent", "html_url": "https://github.com/SKisContent", "followers_url": "https://api.github.com/users/SKisContent/followers", "following_url": "https://api.github.com/users/SKisContent/following{/other_user}", "gists_url": "https://api.github.com/users/SKisContent/gists{/gist_id}", "starred_url": "https://api.github.com/users/SKisContent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SKisContent/subscriptions", "organizations_url": "https://api.github.com/users/SKisContent/orgs", "repos_url": "https://api.github.com/users/SKisContent/repos", "events_url": "https://api.github.com/users/SKisContent/events{/privacy}", "received_events_url": "https://api.github.com/users/SKisContent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-08T12:08:13Z", "updated_at": "2017-06-09T03:44:27Z", "closed_at": "2017-06-08T12:28:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting this error (**ImportError: No module named compat**) when using this package in a larger Django project. One of the other packages I'm using is tweepy. \r\nPython version 2.7.10\r\nDjango version: 1.11.1\r\nrequests version: 2.17.3\r\nrequests-oauthlib version: 0.8.0\r\ntweepy version: 3.5.0\r\n\r\nHere's the trace:\r\n ```\r\n   import tweepy\r\n  File \"/p27venv/lib/python2.7/site-packages/tweepy/__init__.py\", line 16, in <module>\r\n    from tweepy.auth import OAuthHandler, AppAuthHandler\r\n  File \"/p27venv/lib/python2.7/site-packages/tweepy/auth.py\", line 9, in <module>\r\n    from requests_oauthlib import OAuth1Session, OAuth1\r\n  File \"/p27venv/lib/python2.7/site-packages/requests_oauthlib/__init__.py\", line 1, in <module>\r\n    from .oauth1_auth import OAuth1\r\n  File \"/p27venv/lib/python2.7/site-packages/requests_oauthlib/oauth1_auth.py\", line 10, in <module>\r\n    from requests.compat import is_py3\r\nImportError: No module named compat\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/281", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/281/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/281/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/281", "id": 232882751, "node_id": "MDU6SXNzdWUyMzI4ODI3NTE=", "number": 281, "title": "__version__ naming conflict", "user": {"login": "JherezTaylor", "id": 8041270, "node_id": "MDQ6VXNlcjgwNDEyNzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8041270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JherezTaylor", "html_url": "https://github.com/JherezTaylor", "followers_url": "https://api.github.com/users/JherezTaylor/followers", "following_url": "https://api.github.com/users/JherezTaylor/following{/other_user}", "gists_url": "https://api.github.com/users/JherezTaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JherezTaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JherezTaylor/subscriptions", "organizations_url": "https://api.github.com/users/JherezTaylor/orgs", "repos_url": "https://api.github.com/users/JherezTaylor/repos", "events_url": "https://api.github.com/users/JherezTaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/JherezTaylor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2017-06-01T13:40:21Z", "updated_at": "2017-06-01T14:34:59Z", "closed_at": "2017-06-01T14:34:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The version [check](https://github.com/requests/requests-oauthlib/blob/master/requests_oauthlib/__init__.py#L8) in `requests_oauthlib/__init__.py` throws the following error under Python 3.5.3:\r\n`unorderable types: module() < str()`\r\n\r\nWhen I print the value of `requests.__version__` it prints the path of the module `requests.__version__` rather than the current package value `2.17.3`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/278", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/278/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/278/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/278", "id": 226326824, "node_id": "MDU6SXNzdWUyMjYzMjY4MjQ=", "number": 278, "title": "OAuth2Session doesn't use token if netrc is present", "user": {"login": "ryanhiebert", "id": 425099, "node_id": "MDQ6VXNlcjQyNTA5OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/425099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryanhiebert", "html_url": "https://github.com/ryanhiebert", "followers_url": "https://api.github.com/users/ryanhiebert/followers", "following_url": "https://api.github.com/users/ryanhiebert/following{/other_user}", "gists_url": "https://api.github.com/users/ryanhiebert/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryanhiebert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryanhiebert/subscriptions", "organizations_url": "https://api.github.com/users/ryanhiebert/orgs", "repos_url": "https://api.github.com/users/ryanhiebert/repos", "events_url": "https://api.github.com/users/ryanhiebert/events{/privacy}", "received_events_url": "https://api.github.com/users/ryanhiebert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-04T15:51:19Z", "updated_at": "2019-01-13T14:03:24Z", "closed_at": "2019-01-13T14:03:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The Heroku Toolbelt client uses a `.netrc` file to store its credentials locally. When using OAuth2Session, giving a properly-formed `token` to the constructor, the `auth` property on the session is not set, and requests goes and looks for a netrc file to add them in automatically when the request is made. When we _have_ set the token, this really needs to not happen.\r\n\r\nThe \"ideal\" fix would be to have the `OAuth2Session.auth` property set to `OAuth2`. I definitely don't know the complexities of how difficult this is, but this bug makes OAuth2Session unusable for me, and I'm having to drop down to using `OAuth2` auth directly instead for my use-case.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/254", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/254/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/254/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/254", "id": 180997377, "node_id": "MDU6SXNzdWUxODA5OTczNzc=", "number": 254, "title": "0.7.0 regression related to passing auth= parameter", "user": {"login": "eranrund", "id": 1485066, "node_id": "MDQ6VXNlcjE0ODUwNjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1485066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eranrund", "html_url": "https://github.com/eranrund", "followers_url": "https://api.github.com/users/eranrund/followers", "following_url": "https://api.github.com/users/eranrund/following{/other_user}", "gists_url": "https://api.github.com/users/eranrund/gists{/gist_id}", "starred_url": "https://api.github.com/users/eranrund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eranrund/subscriptions", "organizations_url": "https://api.github.com/users/eranrund/orgs", "repos_url": "https://api.github.com/users/eranrund/repos", "events_url": "https://api.github.com/users/eranrund/events{/privacy}", "received_events_url": "https://api.github.com/users/eranrund/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-04T20:33:57Z", "updated_at": "2016-10-14T17:44:34Z", "closed_at": "2016-10-14T14:32:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello :)\n0.7.0 introduced this commit: https://github.com/requests/requests-oauthlib/commit/33483808497c8a993dfd388a1a4b11849b487318 which introduces a problem if `kwargs` contains `auth`.\n\nFor example, the Asana python library does this: `response = getattr(self.session, method)(url, auth=self.auth, **request_options)`\nhttps://github.com/Asana/python-asana/blob/master/asana/client.py#L73\n\nThe stack trace this results in looks like this:\n\n```\nTypeError: refresh_token() got multiple values for keyword argument 'auth'\n[... stripped internal code... ]\n  File \"asana/resources/gen/tasks.py\", line 25, in create\n    return self.client.post(\"/tasks\", params, **options)\n  File \"asana/client.py\", line 124, in post\n    return self.request('post', path, data=body, headers={'content-type': 'application/json'}, **options)\n  File \"asana/client.py\", line 74, in request\n    response = getattr(self.session, method)(url, auth=self.auth, **request_options)\n  File \"requests/sessions.py\", line 518, in post\n    return self.request('POST', url, data=data, json=json, **kwargs)\n  File \"requests_oauthlib/oauth2_session.py\", line 341, in request\n    self.auto_refresh_url, auth=auth, **kwargs\n```\n\nI'm assuming it is acceptable to pass an `auth` parameter. If not, I'll discuss this with the Asana people.\n\nThanks <3\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/253", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/253/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/253/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/253/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/253", "id": 180433686, "node_id": "MDU6SXNzdWUxODA0MzM2ODY=", "number": 253, "title": "Save Oauth Session for future use?", "user": {"login": "bbmak", "id": 10511560, "node_id": "MDQ6VXNlcjEwNTExNTYw", "avatar_url": "https://avatars0.githubusercontent.com/u/10511560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbmak", "html_url": "https://github.com/bbmak", "followers_url": "https://api.github.com/users/bbmak/followers", "following_url": "https://api.github.com/users/bbmak/following{/other_user}", "gists_url": "https://api.github.com/users/bbmak/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbmak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbmak/subscriptions", "organizations_url": "https://api.github.com/users/bbmak/orgs", "repos_url": "https://api.github.com/users/bbmak/repos", "events_url": "https://api.github.com/users/bbmak/events{/privacy}", "received_events_url": "https://api.github.com/users/bbmak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-01T02:43:41Z", "updated_at": "2016-10-12T07:58:11Z", "closed_at": "2016-10-12T07:58:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\nIsn't possible to save the oauth session for future use?\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/250", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/250/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/250/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/250", "id": 169518656, "node_id": "MDU6SXNzdWUxNjk1MTg2NTY=", "number": 250, "title": "Automaticly Refresh token doesn't set the header 'auth'", "user": {"login": "lawulu", "id": 5326606, "node_id": "MDQ6VXNlcjUzMjY2MDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5326606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lawulu", "html_url": "https://github.com/lawulu", "followers_url": "https://api.github.com/users/lawulu/followers", "following_url": "https://api.github.com/users/lawulu/following{/other_user}", "gists_url": "https://api.github.com/users/lawulu/gists{/gist_id}", "starred_url": "https://api.github.com/users/lawulu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lawulu/subscriptions", "organizations_url": "https://api.github.com/users/lawulu/orgs", "repos_url": "https://api.github.com/users/lawulu/repos", "events_url": "https://api.github.com/users/lawulu/events{/privacy}", "received_events_url": "https://api.github.com/users/lawulu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-05T02:56:29Z", "updated_at": "2017-03-17T22:52:31Z", "closed_at": "2016-08-05T09:12:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry, I am newbee in Python. Maybe this is a ridiculous question.\nWhen I get the token, I will save the access_token,refresh_token,and **expires_at** in the database.\nSome time later, when the access_token expires,  the client will refresh the token like this:\n\n_From class OAuth2Session_\n`if self.auto_refresh_url:\n                    log.debug('Auto refresh is set, attempting to refresh at %s.',\n                              self.auto_refresh_url)\n                    token = self.refresh_token(self.auto_refresh_url, **kwargs)`\n\nBut how to pass the auth to that method?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/249", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/249/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/249/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/249", "id": 168596696, "node_id": "MDU6SXNzdWUxNjg1OTY2OTY=", "number": 249, "title": "Client_id and client_secret get duplicated in fetch_token()", "user": {"login": "tuukkamustonen", "id": 94327, "node_id": "MDQ6VXNlcjk0MzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/94327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuukkamustonen", "html_url": "https://github.com/tuukkamustonen", "followers_url": "https://api.github.com/users/tuukkamustonen/followers", "following_url": "https://api.github.com/users/tuukkamustonen/following{/other_user}", "gists_url": "https://api.github.com/users/tuukkamustonen/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuukkamustonen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuukkamustonen/subscriptions", "organizations_url": "https://api.github.com/users/tuukkamustonen/orgs", "repos_url": "https://api.github.com/users/tuukkamustonen/repos", "events_url": "https://api.github.com/users/tuukkamustonen/events{/privacy}", "received_events_url": "https://api.github.com/users/tuukkamustonen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-01T08:49:36Z", "updated_at": "2016-08-01T09:02:46Z", "closed_at": "2016-08-01T09:00:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "After #229, passing `client_id` & `client_secret` in `fetch_token()` duplicates them into both request body and as basic auth headers, causing following error at least on PingFederate (a commercial OAuth2 server):\n\n```\noauthlib.oauth2.rfc6749.errors.InvalidClientError: (invalid_client) The client MUST NOT use more than one authentication method in each request.\n```\n\nShouldn't the library omit the fields from request body, if they are injected as HTTP Basic auth header?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/245", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/245/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/245/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/245", "id": 163501571, "node_id": "MDU6SXNzdWUxNjM1MDE1NzE=", "number": 245, "title": "Can't override/suppress Authentication and User-Agent headers", "user": {"login": "RobWilco", "id": 1663459, "node_id": "MDQ6VXNlcjE2NjM0NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1663459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobWilco", "html_url": "https://github.com/RobWilco", "followers_url": "https://api.github.com/users/RobWilco/followers", "following_url": "https://api.github.com/users/RobWilco/following{/other_user}", "gists_url": "https://api.github.com/users/RobWilco/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobWilco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobWilco/subscriptions", "organizations_url": "https://api.github.com/users/RobWilco/orgs", "repos_url": "https://api.github.com/users/RobWilco/repos", "events_url": "https://api.github.com/users/RobWilco/events{/privacy}", "received_events_url": "https://api.github.com/users/RobWilco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-02T04:38:33Z", "updated_at": "2016-07-02T07:28:09Z", "closed_at": "2016-07-02T07:27:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using a grant type of `password`, the OAuth2 provider I'm calling doesn't like when the `Authentication` header (and possibly `User-Agent` header) is included. When I remove them, all is well. Not seeing a way to suppress them as of yet. Thoughts?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/244", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/244/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/244/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/244", "id": 163501366, "node_id": "MDU6SXNzdWUxNjM1MDEzNjY=", "number": 244, "title": "Can't send token request body as JSON", "user": {"login": "RobWilco", "id": 1663459, "node_id": "MDQ6VXNlcjE2NjM0NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1663459?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobWilco", "html_url": "https://github.com/RobWilco", "followers_url": "https://api.github.com/users/RobWilco/followers", "following_url": "https://api.github.com/users/RobWilco/following{/other_user}", "gists_url": "https://api.github.com/users/RobWilco/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobWilco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobWilco/subscriptions", "organizations_url": "https://api.github.com/users/RobWilco/orgs", "repos_url": "https://api.github.com/users/RobWilco/repos", "events_url": "https://api.github.com/users/RobWilco/events{/privacy}", "received_events_url": "https://api.github.com/users/RobWilco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-07-02T04:29:43Z", "updated_at": "2018-05-20T10:04:21Z", "closed_at": "2018-05-20T10:04:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using a grant type of `password`, when I supply a header of `Content-Type: application/json` the body is still sent url-encoded instead of as JSON. From the debug logs:\n\n```\nSupplying headers {'Content-Type': 'application/json'} and\n  data {'username': 'XXX', 'client_secret': 'XXX',\n  'password': 'XXX', 'grant_type': 'password', 'client_id': 'XXX'}\n\nPrepared fetch token request body grant_type=password&username=XXX&\n  client_id=XXX&client_secret=XXX&password=XXX\n```\n\nSee line 211 below. `data=dict(urldecode(body))`:\n\n```\n> /Library/Python/2.7/site-packages/requests_oauthlib/oauth2_session.py(210)fetch_token()\n-> if method.upper() == 'POST':\n(Pdb) l\n205             headers = headers or {\n206                 'Accept': 'application/json',\n207                 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n208             }\n209             self.token = {}\n210  ->         if method.upper() == 'POST':\n211                 r = self.post(token_url, data=dict(urldecode(body)),\n212                     timeout=timeout, headers=headers, auth=auth,\n213                     verify=verify)\n214                 log.debug('Prepared fetch token request body %s', body)\n```\n\nOther platforms (e.g., ruby) seem to do the right thing. Am I missing something?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/243", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/243/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/243/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/243", "id": 163451673, "node_id": "MDU6SXNzdWUxNjM0NTE2NzM=", "number": 243, "title": "How to debug 'MismatchingStateError' ", "user": {"login": "NotaLabs", "id": 1978746, "node_id": "MDQ6VXNlcjE5Nzg3NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1978746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NotaLabs", "html_url": "https://github.com/NotaLabs", "followers_url": "https://api.github.com/users/NotaLabs/followers", "following_url": "https://api.github.com/users/NotaLabs/following{/other_user}", "gists_url": "https://api.github.com/users/NotaLabs/gists{/gist_id}", "starred_url": "https://api.github.com/users/NotaLabs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NotaLabs/subscriptions", "organizations_url": "https://api.github.com/users/NotaLabs/orgs", "repos_url": "https://api.github.com/users/NotaLabs/repos", "events_url": "https://api.github.com/users/NotaLabs/events{/privacy}", "received_events_url": "https://api.github.com/users/NotaLabs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-07-01T18:35:44Z", "updated_at": "2019-12-18T16:55:04Z", "closed_at": "2018-05-20T10:08:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\ni was trying to connect to the OneDrive REST Api using oauthlib. I am able to create an authorization url, but when it comes to fetching a token, my programm throws an exception.\n\n```\nfrom requests_oauthlib import OAuth2Session\n\n\nclient_id = '3753a627-146e-4137-8f6e-8c561547551b'\nclient_secret = 'xxxxxxxxxxxxxxxxxxxxxxx'\nredirect_uri = 'https://localhost:8080'\n\n#OAuth Endpoints for OneDrive\nauthorization_base_url = \"https://login.live.com/oauth20_authorize.srf\"\ntoken_url = \"https://login.live.com/oauth20_token.srf\"\nscope = [\n    \"offline_access\",\n    \"onedrive.readwrite\",\n    \"wl.signin\"\n]\n\n\n\nonedrive = OAuth2Session(client_id, scope=scope, redirect_uri=redirect_uri)\n\nauthorization_url, state = onedrive.authorization_url(authorization_base_url)\nprint('Authlink,', authorization_url)\n\nredirect_response = input('Please enter the FULL Url: ')\nonedrive.fetch_token(token_url, client_secret=client_secret,authorization_response=redirect_response)\n\n```\n\n```\nC:\\Users\\Tim\\AppData\\Local\\Programs\\Python\\Python35-32\\python.exe C:/Users/Tim/PycharmProjects/copy+/onedriveconnect.py\nAuthlink, https://login.live.com/oauth20_authorize.srf?response_type=code&client_id=3753a627-146e-4137-8f6e-8c561547551b&redirect_uri=https%3A%2F%2Flocalhost%3A8080&scope=offline_access+onedrive.readwrite+wl.signin&state=sYQ8Lv2cLpV7QqZyujgfI9d7OmuhPE\nPlease enter the FULL Url: https://localhost:8080/?code=Mfac93b90-7dda-0c22-4000-8d7cb40ca384&state=sYQ8Lv2cLpV7QqZyujgfI9d7OmuhPE \nTraceback (most recent call last):\n  File \"C:/Users/Tim/PycharmProjects/copy+/onedriveconnect.py\", line 25, in <module>\n    onedrive.fetch_token(token_url, client_secret=client_secret,authorization_response=redirect_response)\n  File \"C:\\Users\\Tim\\AppData\\Local\\Programs\\Python\\Python35-32\\lib\\site-packages\\requests_oauthlib\\oauth2_session.py\", line 187, in fetch_token\n    state=self._state)\n  File \"C:\\Users\\Tim\\AppData\\Local\\Programs\\Python\\Python35-32\\lib\\site-packages\\oauthlib\\oauth2\\rfc6749\\clients\\web_application.py\", line 174, in parse_request_uri_response\n    response = parse_authorization_code_response(uri, state=state)\n  File \"C:\\Users\\Tim\\AppData\\Local\\Programs\\Python\\Python35-32\\lib\\site-packages\\oauthlib\\oauth2\\rfc6749\\parameters.py\", line 227, in parse_authorization_code_response\n    raise MismatchingStateError()\noauthlib.oauth2.rfc6749.errors.MismatchingStateError: (mismatching_state) CSRF Warning! State not equal in request and response.\n\nProcess finished with exit code 1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/241", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/241/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/241/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/241", "id": 163281359, "node_id": "MDU6SXNzdWUxNjMyODEzNTk=", "number": 241, "title": "Refreshing the token after loading it from file", "user": {"login": "NotaLabs", "id": 1978746, "node_id": "MDQ6VXNlcjE5Nzg3NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1978746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NotaLabs", "html_url": "https://github.com/NotaLabs", "followers_url": "https://api.github.com/users/NotaLabs/followers", "following_url": "https://api.github.com/users/NotaLabs/following{/other_user}", "gists_url": "https://api.github.com/users/NotaLabs/gists{/gist_id}", "starred_url": "https://api.github.com/users/NotaLabs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NotaLabs/subscriptions", "organizations_url": "https://api.github.com/users/NotaLabs/orgs", "repos_url": "https://api.github.com/users/NotaLabs/repos", "events_url": "https://api.github.com/users/NotaLabs/events{/privacy}", "received_events_url": "https://api.github.com/users/NotaLabs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-06-30T22:33:27Z", "updated_at": "2016-07-01T18:10:03Z", "closed_at": "2016-07-01T18:10:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\ni tried to configure my oauthlib the way, that it automaticly refreshes the token, unfortanatly i can`t seem to get it right after loading my token from a file.\n\n```\nimport pickle\nimport os.path\nfrom time import time\n\n# Credentials you get from registering a new application\nclient_id = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com'\nclient_secret = 'xxxxxxxxxxxxxxxxx'\nredirect_uri = 'http://localhost'\n\n# OAuth endpoints given in the Google API documentation\nauthorization_base_url = \"https://accounts.google.com/o/oauth2/v2/auth\"\ntoken_url = \"https://www.googleapis.com/oauth2/v4/token\"\nscope = [\n    \"https://picasaweb.google.com/data/\",\n]\n\nextra = {\n    'client_id': client_id,\n    'client_secret': client_secret,\n}\n\nfrom requests_oauthlib import OAuth2Session\n\nif not os.path.isfile(\"token.p\"):\n\n    google = OAuth2Session(client_id, scope=scope, redirect_uri=redirect_uri, auto_refresh_url=token_url,auto_refresh_kwargs=extra)\n\n\n    authorization_url, state = google.authorization_url(authorization_base_url, access_type=\"offline\")\n    print('Please go here and authorize,', authorization_url)\n\n\n    redirect_response = input('Paste the full redirect URL here:')\n\n\n    google.fetch_token(token_url, client_secret=client_secret,\n                       authorization_response=redirect_response)\n\n\n    pickle.dump(google.token, open(\"token.p\", \"wb\"))\nelse:\n    gtoken = pickle.load(open(\"token.p\", \"rb\"))\n\n    #Forcing the token to expire\n    gtoken['expires_at'] = time() - 10\n\n    google = OAuth2Session(client_id, token=gtoken)\n\n    #manually refreshing works!\n    #client.token = client.refresh_token(token_url, **extra)\n\ngoogle.get('https://www.googleapis.com/oauth2/v1/userinfo')\n\n```\n\nBut it just produces the following error:\n\n```\nC:\\Users\\Tim\\AppData\\Local\\Programs\\Python\\Python35-32\\python.exe C:/Users/Tim/PycharmProjects/copy+/googleconnect.py\nTraceback (most recent call last):\n  File \"C:/Users/Tim/PycharmProjects/copy+/googleconnect.py\", line 50, in <module>\n    google.get('https://www.googleapis.com/oauth2/v1/userinfo')\n  File \"C:\\Users\\Tim\\AppData\\Local\\Programs\\Python\\Python35-32\\lib\\site-packages\\requests\\sessions.py\", line 487, in get\n    return self.request('GET', url, **kwargs)\n  File \"C:\\Users\\Tim\\AppData\\Local\\Programs\\Python\\Python35-32\\lib\\site-packages\\requests_oauthlib\\oauth2_session.py\", line 321, in request\n    http_method=method, body=data, headers=headers)\n  File \"C:\\Users\\Tim\\AppData\\Local\\Programs\\Python\\Python35-32\\lib\\site-packages\\oauthlib\\oauth2\\rfc6749\\clients\\base.py\", line 194, in add_token\n    raise TokenExpiredError()\noauthlib.oauth2.rfc6749.errors.TokenExpiredError: (token_expired) \n\nProcess finished with exit code 1\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/239", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/239/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/239/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/239", "id": 158258584, "node_id": "MDU6SXNzdWUxNTgyNTg1ODQ=", "number": 239, "title": "Is requests-oauthlib compatible with Python 3?", "user": {"login": "cclauss", "id": 3709715, "node_id": "MDQ6VXNlcjM3MDk3MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3709715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cclauss", "html_url": "https://github.com/cclauss", "followers_url": "https://api.github.com/users/cclauss/followers", "following_url": "https://api.github.com/users/cclauss/following{/other_user}", "gists_url": "https://api.github.com/users/cclauss/gists{/gist_id}", "starred_url": "https://api.github.com/users/cclauss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cclauss/subscriptions", "organizations_url": "https://api.github.com/users/cclauss/orgs", "repos_url": "https://api.github.com/users/cclauss/repos", "events_url": "https://api.github.com/users/cclauss/events{/privacy}", "received_events_url": "https://api.github.com/users/cclauss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-02T23:00:49Z", "updated_at": "2016-06-07T08:54:15Z", "closed_at": "2016-06-07T08:54:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The README.rst does not mention Python versions and PyPI record (https://pypi.python.org/pypi/requests-oauthlib) does not contains neither Python 2 nor a Python 3 classifier text.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/234", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/234/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/234/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/234", "id": 152579133, "node_id": "MDU6SXNzdWUxNTI1NzkxMzM=", "number": 234, "title": "Adding Outlook example", "user": {"login": "madhavij", "id": 10806221, "node_id": "MDQ6VXNlcjEwODA2MjIx", "avatar_url": "https://avatars2.githubusercontent.com/u/10806221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madhavij", "html_url": "https://github.com/madhavij", "followers_url": "https://api.github.com/users/madhavij/followers", "following_url": "https://api.github.com/users/madhavij/following{/other_user}", "gists_url": "https://api.github.com/users/madhavij/gists{/gist_id}", "starred_url": "https://api.github.com/users/madhavij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madhavij/subscriptions", "organizations_url": "https://api.github.com/users/madhavij/orgs", "repos_url": "https://api.github.com/users/madhavij/repos", "events_url": "https://api.github.com/users/madhavij/events{/privacy}", "received_events_url": "https://api.github.com/users/madhavij/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-02T15:36:54Z", "updated_at": "2018-05-20T10:20:26Z", "closed_at": "2018-05-20T10:20:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi\nI was going through the examples for the requests-oauthlib to help myself create a similar code for using the Outlook API. Since it is not listed as one of the examples, shall I add the example as a PR?  \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/233", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/233/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/233/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/233", "id": 150950394, "node_id": "MDU6SXNzdWUxNTA5NTAzOTQ=", "number": 233, "title": "Problem getting access token for QuickBooks API", "user": {"login": "jacksonofalltrades", "id": 284967, "node_id": "MDQ6VXNlcjI4NDk2Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/284967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacksonofalltrades", "html_url": "https://github.com/jacksonofalltrades", "followers_url": "https://api.github.com/users/jacksonofalltrades/followers", "following_url": "https://api.github.com/users/jacksonofalltrades/following{/other_user}", "gists_url": "https://api.github.com/users/jacksonofalltrades/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacksonofalltrades/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacksonofalltrades/subscriptions", "organizations_url": "https://api.github.com/users/jacksonofalltrades/orgs", "repos_url": "https://api.github.com/users/jacksonofalltrades/repos", "events_url": "https://api.github.com/users/jacksonofalltrades/events{/privacy}", "received_events_url": "https://api.github.com/users/jacksonofalltrades/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-04-25T18:53:58Z", "updated_at": "2016-04-28T19:03:16Z", "closed_at": "2016-04-28T19:03:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm completely baffled as to why I keep getting a signature invalid error. Below are the logs from my attempt to get an access token. The authorization seems to work fine.\n\nOne thing that seems odd that I noticed in the logs below is that when it prepares to request the access token, a few fields are None, which maybe shouldn't be, but I'm not sure why they weren't passed from the previous legs of the OAuth flow:\nnonce, realm, timestamp, resource_owner_secret\n\nAny help would be greatly appreciated.\n# \n\n```\nDEBUG 2016-04-25 18:44:30,099 requests_oauthlib.oauth1_session Parsing token from query part of url http://app.histowiz.com/orders/admin/quickbooks-updated?oauth_token=qyprdmWMFvLBw43PbcmXuisKFLcmx65GE0rhoFCX8huF6pmY&oauth_verifier=rixnbq7&realmId=1421453050&dataSource=QBO\n   DEBUG 2016-04-25 18:44:30,100 requests_oauthlib.oauth1_session Updating internal client token attribute.\n    INFO 2016-04-25 18:44:30,100 root Parsing auth response from QB: {u'oauth_verifier': u'rixnbq7', u'oauth_token': u'qyprdmWMFvLBw43PbcmXuisKFLcmx65GE0rhoFCX8huF6pmY', u'realmId': u'1421453050', u'dataSource': u'QBO'}\n   DEBUG 2016-04-25 18:44:30,100 requests_oauthlib.oauth1_session Fetching token from https://oauth.intuit.com/oauth/v1/get_access_token using client <Client nonce=None, signature_method=HMAC-SHA1, realm=None, encoding=utf-8, timestamp=None, resource_owner_secret=None, decoding=utf-8, verifier=rixnbq7, signature_type=QUERY, rsa_key=None, resource_owner_key=qyprdmWMFvLBw43PbcmXuisKFLcmx65GE0rhoFCX8huF6pmY, client_secret=****, callback_uri=https://app.histowiz.com/orders/admin/quickbooks-updated, client_key=qyprdbpcVtvjQk7le3cvOfHQQ6MBJP>\n   DEBUG 2016-04-25 18:44:30,101 requests_oauthlib.oauth1_auth Signing request <PreparedRequest [POST]> using client <Client nonce=None, signature_method=HMAC-SHA1, realm=None, encoding=utf-8, timestamp=None, resource_owner_secret=None, decoding=utf-8, verifier=rixnbq7, signature_type=QUERY, rsa_key=None, resource_owner_key=qyprdmWMFvLBw43PbcmXuisKFLcmx65GE0rhoFCX8huF6pmY, client_secret=****, callback_uri=https://app.histowiz.com/orders/admin/quickbooks-updated, client_key=qyprdbpcVtvjQk7le3cvOfHQQ6MBJP>\n   DEBUG 2016-04-25 18:44:30,102 requests_oauthlib.oauth1_auth Including body in call to sign: False\n   DEBUG 2016-04-25 18:44:30,103 requests_oauthlib.oauth1_auth Updated url: https://oauth.intuit.com/oauth/v1/get_access_token?oauth_nonce=14292045425371585741461609870&oauth_timestamp=1461609870&oauth_version=1.0&oauth_signature_method=HMAC-SHA1&oauth_consumer_key=qyprdbpcVtvjQk7le3cvOfHQQ6MBJP&oauth_token=qyprdmWMFvLBw43PbcmXuisKFLcmx65GE0rhoFCX8huF6pmY&oauth_callback=https%3A%2F%2Fapp.histowiz.com%2Forders%2Fadmin%2Fquickbooks-updated&oauth_verifier=rixnbq7&oauth_signature=F%2BJTxC%2FJQM6AuIGxRxKSGvJD9Ks%3D\n   DEBUG 2016-04-25 18:44:30,104 requests_oauthlib.oauth1_auth Updated headers: {'Content-Length': '0', 'Connection': 'keep-alive', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'User-Agent': 'python-requests/2.9.1'}\n   DEBUG 2016-04-25 18:44:30,104 requests_oauthlib.oauth1_auth Updated body: None\n    INFO 2016-04-25 18:44:30,105 requests.packages.urllib3.connectionpool Starting new HTTPS connection (1): oauth.intuit.com\n   ERROR 2016-04-25 18:44:30,457 histowiz Exception on /orders/admin/quickbooks-updated [GET]\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1687, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1360, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1358, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1344, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"/usr/local/lib/python2.7/site-packages/flask_login.py\", line 758, in decorated_view\n    return func(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/flask_security/decorators.py\", line 170, in decorated_view\n    return fn(*args, **kwargs)\n  File \"/srv/histowiz/histowiz/controllers/orders.py\", line 225, in admin_quickbooks_updated\n    ok = qbo.update_access_tokens(request.url)\n  File \"/srv/histowiz/histowiz/controllers/qbint.py\", line 88, in update_access_tokens\n    tokens = session.fetch_access_token(self.access_token_url)\n  File \"/usr/local/lib/python2.7/site-packages/requests_oauthlib/oauth1_session.py\", line 302, in fetch_access_token\n    token = self._fetch_token(url)\n  File \"/usr/local/lib/python2.7/site-packages/requests_oauthlib/oauth1_session.py\", line 349, in _fetch_token\n    raise TokenRequestDenied(error % (r.status_code, r.text), r)\nTokenRequestDenied: Token request failed with code 401, response was 'oauth_problem=signature_invalid'.\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/232", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/232/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/232/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/232", "id": 149260522, "node_id": "MDU6SXNzdWUxNDkyNjA1MjI=", "number": 232, "title": "OAuth2Session(client_id=client_id, client=client) return 403 error in production environment", "user": {"login": "ilGuccio", "id": 5333399, "node_id": "MDQ6VXNlcjUzMzMzOTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5333399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilGuccio", "html_url": "https://github.com/ilGuccio", "followers_url": "https://api.github.com/users/ilGuccio/followers", "following_url": "https://api.github.com/users/ilGuccio/following{/other_user}", "gists_url": "https://api.github.com/users/ilGuccio/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilGuccio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilGuccio/subscriptions", "organizations_url": "https://api.github.com/users/ilGuccio/orgs", "repos_url": "https://api.github.com/users/ilGuccio/repos", "events_url": "https://api.github.com/users/ilGuccio/events{/privacy}", "received_events_url": "https://api.github.com/users/ilGuccio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-04-18T20:20:52Z", "updated_at": "2016-04-20T17:47:16Z", "closed_at": "2016-04-20T17:47:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "OAuth2Session(client_id=client_id, client=client) return 403 error in production environment.\nWorks good in localhost\n\nIn localhost and production environment I disabled OAUTHLIB_INSECURE_TRANSPORT\n`os.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/231", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/231/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/231/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/231", "id": 144750007, "node_id": "MDU6SXNzdWUxNDQ3NTAwMDc=", "number": 231, "title": "Client Authentication failed", "user": {"login": "djn40", "id": 8382521, "node_id": "MDQ6VXNlcjgzODI1MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/8382521?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djn40", "html_url": "https://github.com/djn40", "followers_url": "https://api.github.com/users/djn40/followers", "following_url": "https://api.github.com/users/djn40/following{/other_user}", "gists_url": "https://api.github.com/users/djn40/gists{/gist_id}", "starred_url": "https://api.github.com/users/djn40/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djn40/subscriptions", "organizations_url": "https://api.github.com/users/djn40/orgs", "repos_url": "https://api.github.com/users/djn40/repos", "events_url": "https://api.github.com/users/djn40/events{/privacy}", "received_events_url": "https://api.github.com/users/djn40/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-30T23:40:57Z", "updated_at": "2016-07-02T07:25:58Z", "closed_at": "2016-07-02T07:25:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\nI'm trying to connect to the paychoice api, which has a username and password for authentication.\nIf I use curl url -u user:password, it works fine, but trying BackendApplicationClient(client_id=client_id, client_secret=client_secret)\nFails.\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/227", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/227/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/227/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/227", "id": 136201228, "node_id": "MDU6SXNzdWUxMzYyMDEyMjg=", "number": 227, "title": "InvalidClient: HTTPBasicAuth with username and password for Legacy Applications", "user": {"login": "synasius", "id": 217898, "node_id": "MDQ6VXNlcjIxNzg5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/217898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/synasius", "html_url": "https://github.com/synasius", "followers_url": "https://api.github.com/users/synasius/followers", "following_url": "https://api.github.com/users/synasius/following{/other_user}", "gists_url": "https://api.github.com/users/synasius/gists{/gist_id}", "starred_url": "https://api.github.com/users/synasius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/synasius/subscriptions", "organizations_url": "https://api.github.com/users/synasius/orgs", "repos_url": "https://api.github.com/users/synasius/repos", "events_url": "https://api.github.com/users/synasius/events{/privacy}", "received_events_url": "https://api.github.com/users/synasius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-24T22:08:48Z", "updated_at": "2016-03-16T09:14:30Z", "closed_at": "2016-03-16T09:14:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I stumbled upon this error while trying to use requests-oauthlib with an oauth2 server created using django-oauth-toolkit. I think that there is a misunderstanding of section 2.3.1 of the RFC 6749 (here is the link https://tools.ietf.org/html/rfc6749#section-2.3.1) that is also the cause of #221 and #218 \n\nThe RFC says:\n\n> Clients in possession of a client password MAY use the HTTP Basic\n>    authentication scheme as defined in [RFC2617] to authenticate with\n>    the authorization server.\n\nThe `client password` is the `client secret`. How should we create a Basic Auth Header? the RFC says:\n\n> The _client identifier_ is encoded using the\n>    \"application/x-www-form-urlencoded\" encoding algorithm per\n>    Appendix B, and the encoded value is used as the username; the _client\n>    password_ is encoded using the same algorithm and used as the\n>    password.\n\nclient_id is used as username.\nclient_secret is used as password.\n\nSo I think that the header should be create as follows (and that is what we expect in django-oauth-toolkit):\n\n```\nauth = requests.auth.HTTPBasicAuth(client_id, client_secret)\n```\n\nthe problem is that `username` and `password` are used instead, which are user's credentials and not the application's credentials.\n\nAlso, the RFC example shows the following header\n\n> Authorization: Basic czZCaGRSa3F0Mzo3RmpmcDBaQnIxS3REUmJuZlZkbUl3\n\nIf you decode the base64 value you'll get:\n\n```\n>>> base64.b64decode('czZCaGRSa3F0Mzo3RmpmcDBaQnIxS3REUmJuZlZkbUl3')\n>>> b's6BhdRkqt3:7Fjfp0ZBr1KtDRbnfVdmIw'\n```\n\nwhich are the client_id and client_secret  used in the example at the end of section 2.3.1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/225", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/225/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/225/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/225", "id": 131809339, "node_id": "MDU6SXNzdWUxMzE4MDkzMzk=", "number": 225, "title": "windows live invalid client", "user": {"login": "underchemist", "id": 5283998, "node_id": "MDQ6VXNlcjUyODM5OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5283998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/underchemist", "html_url": "https://github.com/underchemist", "followers_url": "https://api.github.com/users/underchemist/followers", "following_url": "https://api.github.com/users/underchemist/following{/other_user}", "gists_url": "https://api.github.com/users/underchemist/gists{/gist_id}", "starred_url": "https://api.github.com/users/underchemist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/underchemist/subscriptions", "organizations_url": "https://api.github.com/users/underchemist/orgs", "repos_url": "https://api.github.com/users/underchemist/repos", "events_url": "https://api.github.com/users/underchemist/events{/privacy}", "received_events_url": "https://api.github.com/users/underchemist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-02-06T02:25:07Z", "updated_at": "2016-02-07T10:23:56Z", "closed_at": "2016-02-07T10:23:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm new to OAuth so I might be doing something entirely wrong. However I've been stuck with getting an invalid client error when using requests_oauthlib to request a token through microsoft live provider for OAuth2, however if I do it manually with get and post methods using just requests I am able to get an access token.\n\nI tried to model my test after one of the examples on readthedocs. \n\n```\nfrom requests_oauthlib import OAuth2Session\n\nclient_id = '000000004818699B'\nclient_secret = 'LCWGFSKre4EC0tvJ9Un2Zid03QCcUCnA'\nauthorization_base_url = 'https://login.live.com/oauth20_authorize.srf'\ntoken_url = 'https://login.live.com/oauth20_token.srf'\nredirect_url = 'https://localhost'\nscope = ['wl.signin', 'xbox.basic', 'xbox.offline_access']\n\nlive = OAuth2Session(client_id=client_id, redirect_uri=redirect_url, scope=scope)\n\nauthorization_url, state = live.authorization_url(authorization_base_url)\n\nredirect_response = input('go to {} and paste redirect url: '.format(authorization_url))\n\ntoken = live.fetch_token(token_url, client_id=client_id, client_secret=client_secret, authorization_response=redirect_response, verify=False)\n\nprint(token)\n```\n\nbut I get \n\n```\noauthlib.oauth2.rfc6749.errors.InvalidClientError: (invalid_client) The client does not exist. If you are the application developer, configure a new application through the application management site at https://manage.dev.live.com/.\n```\n\nHowever when I try just using requests,\n\n```\nimport requests\n\nclient_id = '000000004818699B'\nclient_secret = 'LCWGFSKre4EC0tvJ9Un2Zid03QCcUCnA'\nauthorization_base_url = 'https://login.live.com/oauth20_authorize.srf'\ntoken_url = 'https://login.live.com/oauth20_token.srf'\nredirect_url = 'https://localhost'\nscope = ['wl.signin', 'xbox.basic', 'xbox.offline_access']\n\nr = requests.get(authorization_base_url + '?client_id=' + client_id + '&scope=wl.signin&response_type=code&redirect_uri=' + redirect_url)\n\nauthorization_url = r.url\n\ncode = input('go to {} and paste code portion: '.format(authorization_url))\n\nr = requests.post(token_url, {'client_id': client_id, 'redirect_uri': redirect_url, 'client_secret': client_secret, 'code':code, 'grant_type': 'authorization_code'})\n\nprint(r.text)\n```\n\nI get a dictionary with my access token. \n\nIs there something in my implementation using oauthlib that I did wrong? or that is microsoft live specific?\n\nI realize I'm giving my client secret away but once I get this working I will just create a new one.\n\nThanks for any of your help!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/223", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/223/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/223/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/223", "id": 131708355, "node_id": "MDU6SXNzdWUxMzE3MDgzNTU=", "number": 223, "title": "Different behavior between localhost and staging server", "user": {"login": "jakeemerson", "id": 3948840, "node_id": "MDQ6VXNlcjM5NDg4NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3948840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakeemerson", "html_url": "https://github.com/jakeemerson", "followers_url": "https://api.github.com/users/jakeemerson/followers", "following_url": "https://api.github.com/users/jakeemerson/following{/other_user}", "gists_url": "https://api.github.com/users/jakeemerson/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakeemerson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakeemerson/subscriptions", "organizations_url": "https://api.github.com/users/jakeemerson/orgs", "repos_url": "https://api.github.com/users/jakeemerson/repos", "events_url": "https://api.github.com/users/jakeemerson/events{/privacy}", "received_events_url": "https://api.github.com/users/jakeemerson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-05T17:48:07Z", "updated_at": "2016-02-06T23:18:10Z", "closed_at": "2016-02-06T23:18:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am connecting to an API at api.sitescout.com, and I am able to authenticate and retrieve data successfully from my local machine. However, when I connect from my staging server, oauthlib seems to be changing the authorization header.\n\nThe log data follows, and I highlighted the changed header data in **bold**.\n\nIs there something I need to do differently on my staging server to make this work properly?\n\n02-05 17:24 requests_oauthlib.oauth2_session DEBUG    Requesting url https://api.sitescout.com/oauth/token using method POST.\n\n02-05 17:24 requests_oauthlib.oauth2_session DEBUG    Supplying headers {'Host': 'api.sitescout.com', 'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/json', **'Authorization': 'Basic YmRubWFpbmZtYXBpOpopQio4VlMmPUsjbW8='**} and data {u'client_secret': u'mysecret', u'grant_type': u'client_credentials', u'params': u\"{'grant_type': 'client_credentials'}\"}\n\n02-05 17:24 requests_oauthlib.oauth2_session DEBUG    Passing through key word arguments {'verify': True, 'json': None, 'timeout': None, 'auth': <requests.auth.HTTPBasicAuth object at 0x7f3af9fe7ed0>}.\n\n02-05 17:24 requests.packages.urllib3.connectionpool INFO     Starting new HTTPS connection (1): api.sitescout.com\n\n02-05 17:24 requests.packages.urllib3.connectionpool DEBUG    \"POST /oauth/token HTTP/1.1\" 401 26\n\n02-05 17:24 requests_oauthlib.oauth2_session DEBUG    Prepared fetch token request body grant_type=client_credentials&params=%7B%27grant_type%27%3A+%27client_credentials%27%7D&client_secret=mysecret\n\n02-05 17:24 requests_oauthlib.oauth2_session DEBUG    Request to fetch token completed with status 401.\n\n02-05 17:24 requests_oauthlib.oauth2_session DEBUG    Request headers were {'Content-Length': '123', 'Accept-Encoding': 'gzip, deflate', 'Connection': 'keep-alive', 'Accept': 'application/json', 'User-Agent': 'python-requests/2.7.0 CPython/2.7.6 Linux/3.13.0-48-generic', 'Host': 'api.sitescout.com', 'Content-Type': 'application/x-www-form-urlencoded', **'Authorization': 'Basic Tm9uZTpOb25l'**}\n\n02-05 17:24 requests_oauthlib.oauth2_session DEBUG    Request body was client_secret=mysecret&grant_type=client_credentials&params=%7B%27grant_type%27%3A+%27client_credentials%27%7D\n\n02-05 17:24 requests_oauthlib.oauth2_session DEBUG    Response headers were {'content-length': '26', 'server': 'AC1.1', 'cache-control': 'no-cache, no-store, must-revalidate', 'date': 'Fri, 05 Feb 2016 17:23:59 GMT', 'access-control-allow-origin': '*', 'content-type': 'application/json;charset=UTF-8', 'www-authenticate': 'Basic realm=\"SiteScout API\"'} and content {\"error\":\"invalid_client\"}.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/222", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/222/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/222/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/222", "id": 131684866, "node_id": "MDU6SXNzdWUxMzE2ODQ4NjY=", "number": 222, "title": "Google OAuth 2 Tutorial", "user": {"login": "code2nguyen", "id": 15355691, "node_id": "MDQ6VXNlcjE1MzU1Njkx", "avatar_url": "https://avatars3.githubusercontent.com/u/15355691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/code2nguyen", "html_url": "https://github.com/code2nguyen", "followers_url": "https://api.github.com/users/code2nguyen/followers", "following_url": "https://api.github.com/users/code2nguyen/following{/other_user}", "gists_url": "https://api.github.com/users/code2nguyen/gists{/gist_id}", "starred_url": "https://api.github.com/users/code2nguyen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/code2nguyen/subscriptions", "organizations_url": "https://api.github.com/users/code2nguyen/orgs", "repos_url": "https://api.github.com/users/code2nguyen/repos", "events_url": "https://api.github.com/users/code2nguyen/events{/privacy}", "received_events_url": "https://api.github.com/users/code2nguyen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-02-05T16:14:47Z", "updated_at": "2016-03-30T07:53:29Z", "closed_at": "2016-03-30T07:53:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "In \"Google OAuth 2 Tutorial\", I suppose Google OAuth2 has changed API EndPoint,\n\nauthorization_base_url = \"https://accounts.google.com/o/oauth2/v2/auth\"\ntoken_url = \"https://www.googleapis.com/oauth2/v4/token\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/221", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/221/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/221/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/221", "id": 131438574, "node_id": "MDU6SXNzdWUxMzE0Mzg1NzQ=", "number": 221, "title": "v0.6.0 seems to break oddly for LinkedIn", "user": {"login": "wezzynl", "id": 5656741, "node_id": "MDQ6VXNlcjU2NTY3NDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5656741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wezzynl", "html_url": "https://github.com/wezzynl", "followers_url": "https://api.github.com/users/wezzynl/followers", "following_url": "https://api.github.com/users/wezzynl/following{/other_user}", "gists_url": "https://api.github.com/users/wezzynl/gists{/gist_id}", "starred_url": "https://api.github.com/users/wezzynl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wezzynl/subscriptions", "organizations_url": "https://api.github.com/users/wezzynl/orgs", "repos_url": "https://api.github.com/users/wezzynl/repos", "events_url": "https://api.github.com/users/wezzynl/events{/privacy}", "received_events_url": "https://api.github.com/users/wezzynl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-04T18:40:20Z", "updated_at": "2018-05-20T10:12:40Z", "closed_at": "2018-05-20T10:12:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using v0.5.0 and fetching an Access Token from LinkedIn this works as expected. When we upgrade to v0.6.0 however, the fetching succeeds but the Access Token starts out as invalid. It can take up to 4 minutes before the LinkedIn API accepts the Access Token as valid. During that time an exception like this gets thrown:\n\n```\nException: {\n  \"errorCode\": 0,\n  \"message\": \"Unable to verify access token\",\n  \"requestId\": \"L595QANTTL\",\n  \"status\": 401,\n  \"timestamp\": 1454600867781\n}\n```\n\nLike said, after up to 4 minutes that very same Access Token starts to work. Of course this is a problem as you can't really login a user in your own implementation that way. Please note that this seems to only take place when you are logged _out_ of www.linkedin.com - so when the OAuth Dialog first asks you to log in to your LinkedIn account. When you are already logged in and it just flies through the OAuth2 dialog it works (most of the time).\n\nWe've diffed version v0.5.0 against v0.6.0 and what seems to be causing it is a line in oauth2_session.py at line number 200:\n\n```\nauth = auth or requests.auth.HTTPBasicAuth(username, password)\n```\n\nWhen I comment out that line, all starts to work correctly for LinkedIn, so it seems that it's adding BasicAuth headers with empty username and password and that in turn seems to get LinkedIn upset, where it refuses to allow immediate access to the API even though they provided an actual Access Token.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/218", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/218/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/218/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/218", "id": 125432391, "node_id": "MDU6SXNzdWUxMjU0MzIzOTE=", "number": 218, "title": "Forcing HTTPBasicAuth in fetch_token results in invalid_request from Google", "user": {"login": "butlertron", "id": 7003912, "node_id": "MDQ6VXNlcjcwMDM5MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7003912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/butlertron", "html_url": "https://github.com/butlertron", "followers_url": "https://api.github.com/users/butlertron/followers", "following_url": "https://api.github.com/users/butlertron/following{/other_user}", "gists_url": "https://api.github.com/users/butlertron/gists{/gist_id}", "starred_url": "https://api.github.com/users/butlertron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/butlertron/subscriptions", "organizations_url": "https://api.github.com/users/butlertron/orgs", "repos_url": "https://api.github.com/users/butlertron/repos", "events_url": "https://api.github.com/users/butlertron/events{/privacy}", "received_events_url": "https://api.github.com/users/butlertron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2016-01-07T16:44:53Z", "updated_at": "2018-05-20T10:10:23Z", "closed_at": "2018-05-20T10:10:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using Flask_OAuth2_Login (for example):\n\n```\n  def login(self):\n    sess = self.session()\n\n    # Get token\n    try:\n      sess.fetch_token(\n        self.token_url,\n        code=request.args[\"code\"],\n        client_secret=self.client_secret,\n      )\n```\n\nresults in:\n\n```\n  File \"/lib/python2.7/site-packages/flask_oauth2_login/base.py\", line 56, in login\n    client_secret=self.client_secret,\n  File \"/lib/python2.7/site-packages/requests_oauthlib/oauth2_session.py\", line 232, in fetch_token\n    self._client.parse_request_body_response(r.text, scope=self.scope)\n  File \"/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 409, in parse_request_body_response\n    self.token = parse_token_response(body, scope=scope)\n  File \"/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 376, in parse_token_response\n    validate_token_parameters(params)\n  File \"/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 383, in validate_token_parameters\n    raise_from_error(params.get('error'), params)\n  File \"/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/errors.py\", line 271, in raise_from_error\n    raise cls(**kwargs)\n```\n\nThis is due to a change introduced in 0.6.0 in oauth2_session.py/fetch_token:\n\n```\nauth = auth or requests.auth.HTTPBasicAuth(username, password)\n```\n\nwhereas previously auth was allowed to remain empty. Google responds with:\n\n```\n{\n  \"error\" : \"invalid_request\"\n}\n```\n\nand everything falls down from there. Commenting out the line allows the request to complete normally.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/211", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/211/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/211/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/211", "id": 122485928, "node_id": "MDU6SXNzdWUxMjI0ODU5Mjg=", "number": 211, "title": "Wrong Authorization header?", "user": {"login": "chaosct", "id": 184808, "node_id": "MDQ6VXNlcjE4NDgwOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/184808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaosct", "html_url": "https://github.com/chaosct", "followers_url": "https://api.github.com/users/chaosct/followers", "following_url": "https://api.github.com/users/chaosct/following{/other_user}", "gists_url": "https://api.github.com/users/chaosct/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaosct/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaosct/subscriptions", "organizations_url": "https://api.github.com/users/chaosct/orgs", "repos_url": "https://api.github.com/users/chaosct/repos", "events_url": "https://api.github.com/users/chaosct/events{/privacy}", "received_events_url": "https://api.github.com/users/chaosct/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-12-16T11:43:11Z", "updated_at": "2019-01-08T11:30:10Z", "closed_at": "2015-12-16T16:08:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm having trouble using requests-oauthlib against a flask-oauthlib provider. I'm using the [reference implementation of flask-oauthlib provider](https://github.com/lepture/example-oauth2-server/) and while using the same library for the client works, using requests-oauthlib fails.\n\nWhat I do is:\n\n```\nclient_id = 'AHc6492FZUnD6l9kAENvU8rM8AQyEZAOYnLf2JEi'\nclient_secret = 'NJWNqoG5wh2QQ3aCobnmaHNzcNBRozL60p7S8zGcHwXWOYNEdN'\nredirect_uri = 'http://127.0.0.1:8000/authorized'\nauthorization_base_url = 'http://127.0.0.1:5000/oauth/authorize'\ntoken_url = \"http://127.0.0.1:5000/oauth/token\"\nscope = ['email']\nfrom requests_oauthlib import OAuth2Session\nprovider = OAuth2Session(client_id,scope=scope,redirect_uri=redirect_uri)\nauthorization_url, state = provider.authorization_url(authorization_base_url)\nprint(\"GO TO: \"+authorization_url)\n\n#this prints the auth url:\nGO TO: http://127.0.0.1:5000/oauth/authorize?response_type=code&client_id=AHc6492FZUnD6l9kAENvU8rM8AQyEZAOYnLf2JEi&redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fauthorized&scope=email&state=vgta4Exp0v4dPiJdspfIlXOeTgvN3Q\n\n# I go there and authorize the client. I get to go to a redirected url, that I paste here:\nurl = \"http://127.0.0.1:8000/authorized?state=vgta4Exp0v4dPiJdspfIlXOeTgvN3Q&code=r6s8qAAYqJzffFi3iaKl02KgSTT20I\"\nprovider.fetch_token(token_url, client_secret=client_secret, authorization_response=url)\n```\n\nThis last line raises a `InvalidClientError` exception.\n\n```\nInvalidClientError                        Traceback (most recent call last)\n<ipython-input-7-5ff386dbf014> in <module>()\n      1 url = \"http://127.0.0.1:8000/authorized?state=vgta4Exp0v4dPiJdspfIlXOeTgvN3Q&code=r6s8qAAYqJzffFi3iaKl02KgSTT20I\"\n----> 2 repovizz.fetch_token(token_url, client_secret=client_secret, authorization_response=url)\n\n/home/carles/tmp/example-oauth2-server/local/lib/python2.7/site-packages/requests_oauthlib/oauth2_session.pyc in fetch_token(self, token_url, code, authorization_response, body, auth, username, password, method, timeout, headers, verify, **kwargs)\n    230             r = hook(r)\n    231 \n--> 232         self._client.parse_request_body_response(r.text, scope=self.scope)\n    233         self.token = self._client.token\n    234         log.debug('Obtained token %s.', self.token)\n\n/home/carles/tmp/example-oauth2-server/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/clients/base.pyc in parse_request_body_response(self, body, scope, **kwargs)\n    407         .. _`Section 7.1`: http://tools.ietf.org/html/rfc6749#section-7.1\n    408         \"\"\"\n--> 409         self.token = parse_token_response(body, scope=scope)\n    410         self._populate_attributes(self.token)\n    411         return self.token\n\n/home/carles/tmp/example-oauth2-server/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.pyc in parse_token_response(body, scope)\n    374 \n    375     params = OAuth2Token(params, old_scope=scope)\n--> 376     validate_token_parameters(params)\n    377     return params\n    378 \n\n/home/carles/tmp/example-oauth2-server/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.pyc in validate_token_parameters(params)\n    381     \"\"\"Ensures token precence, token type, expiration and scope in params.\"\"\"\n    382     if 'error' in params:\n--> 383         raise_from_error(params.get('error'), params)\n    384 \n    385     if not 'access_token' in params:\n\n/home/carles/tmp/example-oauth2-server/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/errors.pyc in raise_from_error(error, params)\n    269     for _, cls in inspect.getmembers(sys.modules[__name__], inspect.isclass):\n    270         if cls.error == error:\n--> 271             raise cls(**kwargs)\n\nInvalidClientError: (invalid_client) \n```\n\nIt seems that in the header is passed like this: `u\\'Authorization\\': u\\'Basic Tm9uZTpOb25l\\'`, which is used by flask-oauthlib to retrieve the client id and secret, by deserializing this using base64 encoding, which results in `\"None:None\"`. This triggers the HTTP 401 client error response.\n\nAm I doing something wrong here? It seems that requests-oauthib is creating faulty headers, but I am no expert in oauthlib2 and that may be also a wrong/restricted implementation of flask-oauthlib...\n\nVersions:\n\n```\nrequests-oauthlib==0.6.0\nFlask-OAuthlib==0.9.2\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/210", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/210/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/210/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/210", "id": 122140885, "node_id": "MDU6SXNzdWUxMjIxNDA4ODU=", "number": 210, "title": "Twitter Api: getting user off ", "user": {"login": "jmgamboa", "id": 3579209, "node_id": "MDQ6VXNlcjM1NzkyMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3579209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmgamboa", "html_url": "https://github.com/jmgamboa", "followers_url": "https://api.github.com/users/jmgamboa/followers", "following_url": "https://api.github.com/users/jmgamboa/following{/other_user}", "gists_url": "https://api.github.com/users/jmgamboa/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmgamboa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmgamboa/subscriptions", "organizations_url": "https://api.github.com/users/jmgamboa/orgs", "repos_url": "https://api.github.com/users/jmgamboa/repos", "events_url": "https://api.github.com/users/jmgamboa/events{/privacy}", "received_events_url": "https://api.github.com/users/jmgamboa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-14T21:58:29Z", "updated_at": "2015-12-14T22:50:40Z", "closed_at": "2015-12-14T22:50:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone! excited to see an active auth library in python that supports oauth1. What is the difference between this and rauth.  What I am trying to do is get the user given their access token and secret.  I have a user authenticating for twitter via mobile. They are passing back the token and secret. On the back end, I would like to see which user is tied to those keys. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/207", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/207/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/207/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/207", "id": 120586911, "node_id": "MDU6SXNzdWUxMjA1ODY5MTE=", "number": 207, "title": "Getting a ResponseNotReady() when reusing a request that requires a token", "user": {"login": "calvinlfer", "id": 14280155, "node_id": "MDQ6VXNlcjE0MjgwMTU1", "avatar_url": "https://avatars3.githubusercontent.com/u/14280155?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calvinlfer", "html_url": "https://github.com/calvinlfer", "followers_url": "https://api.github.com/users/calvinlfer/followers", "following_url": "https://api.github.com/users/calvinlfer/following{/other_user}", "gists_url": "https://api.github.com/users/calvinlfer/gists{/gist_id}", "starred_url": "https://api.github.com/users/calvinlfer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calvinlfer/subscriptions", "organizations_url": "https://api.github.com/users/calvinlfer/orgs", "repos_url": "https://api.github.com/users/calvinlfer/repos", "events_url": "https://api.github.com/users/calvinlfer/events{/privacy}", "received_events_url": "https://api.github.com/users/calvinlfer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-05T20:58:06Z", "updated_at": "2015-12-05T23:10:43Z", "closed_at": "2015-12-05T23:10:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \n\nI'm not too sure if i'm doing this right. I followed [this documentation](http://requests-oauthlib.readthedocs.org/en/latest/oauth2_workflow.html#legacy-application-flow) and this [example](http://requests-oauthlib.readthedocs.org/en/latest/examples/github.html) when setting up my work. \n\nI wanted to use the username-password flow to obtain an access token which translates to the `LegacyApplicationClient`\n\nI managed to get everything set up properly and do a request to a bearer-token secured endpoint. However, I get a `requests.exceptions.ConnectionError: ('Connection aborted.', ResponseNotReady())` when repeating the request using the OAuth2Session client. The first time, the request comes back with the correct response. \n\nI can use python-requests normally and repeat those requests once I have my token but I cannot seem to repeat requests on the OAuth2Session secured client. Any ideas what the issue may be?\n\nHere is my example code:\n\n```\nimport requests\nfrom oauthlib.oauth2 import LegacyApplicationClient\nfrom requests_oauthlib import OAuth2Session\nfrom requests.auth import HTTPBasicAuth\n\n# since we are using http instead of https\nimport os\nos.environ['OAUTHLIB_INSECURE_TRANSPORT'] = '1'\n\n# Resource owner related\nresource_owner_username = 'bob'\nresource_owner_password = '1111'\nresource_owner_endpoint = 'http://localhost:8080/myres'\n\nclient_app_id = 'client'\nclient_app_secret = 'supersecretpassword'\n\noauth_url = 'http://localhost:8081'\noauth_token_endpoint = '/oauth/token'\noauth_token_url = (oauth_url + oauth_token_endpoint)\n\n\nofferOAuth = OAuth2Session(client=LegacyApplicationClient(client_id=client_app_id))\n\n# Obtain a token with read all and write all privileges\n# Manually refresh/(obtain for first time) token\ntoken = offerOAuth.fetch_token(\n    token_url=oauth_token_url,\n    username=resource_owner_username,\n    password=resource_owner_password,\n    client_id=client_app_id,\n    client_secret=client_app_secret,\n    scope=['read.all', 'write.all'],\n    verify=False,    # do not verify SSL certificate\n)\n\nprint 'Token:', token['access_token']\n\n# Request to resource owner endpoint through OAuth library\n## Note: this cannot be repeated, gives me requests.exceptions.ConnectionError: ('Connection aborted.', ResponseNotReady())\nfor i in range(1,10):\n    response = offerOAuth.get(resource_owner_endpoint, verify='False', timeout=10)\n    print response.content\n\n\n## Request to resource owner endpoint manually\n## This can be repeated fine\nfor i in range(1,10):\n    yetAnotherResponse = requests.get(\n        url=resource_owner_endpoint,\n        headers={'Authorization': ('Bearer ' + token['access_token'])}\n    )\n```\n\nHere is my stack-trace\n\n```\nC:\\Python27\\python.exe C:/Users/Calvin/PycharmProjects/oauthcomms/oauthrequest.py\nToken: tSllumb/OKYVytQa968GJ5ySJgBZpKY8F+tSkpUIqfUVl3vl5i0vklDhBfDP0P5E/nLpPFvyK+ub2cWQFS\n{\"page\":{\"previous\":null,\"next\":null},\"results\":[]} -> Response from server is fine for the first time\nTraceback (most recent call last):\n  File \"C:/Users/Calvin/PycharmProjects/oauthcomms/oauthrequest.py\", line 47, in <module>\n    response = offerOAuth.get(resource_owner_endpoint, verify='False', timeout=10)\n  File \"C:\\Python27\\lib\\site-packages\\requests\\sessions.py\", line 477, in get\n    return self.request('GET', url, **kwargs)\n  File \"C:\\Python27\\lib\\site-packages\\requests_oauthlib\\oauth2_session.py\", line 303, in request\n    headers=headers, data=data, **kwargs)\n  File \"C:\\Python27\\lib\\site-packages\\requests\\sessions.py\", line 465, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"C:\\Python27\\lib\\site-packages\\requests\\sessions.py\", line 573, in send\n    r = adapter.send(request, **kwargs)\n  File \"C:\\Python27\\lib\\site-packages\\requests\\adapters.py\", line 415, in send\n    raise ConnectionError(err, request=request)\nrequests.exceptions.ConnectionError: ('Connection aborted.', ResponseNotReady())\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/205", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/205/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/205/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/205", "id": 117611243, "node_id": "MDU6SXNzdWUxMTc2MTEyNDM=", "number": 205, "title": " Missing access token", "user": {"login": "Chatzimina", "id": 5290778, "node_id": "MDQ6VXNlcjUyOTA3Nzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5290778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chatzimina", "html_url": "https://github.com/Chatzimina", "followers_url": "https://api.github.com/users/Chatzimina/followers", "following_url": "https://api.github.com/users/Chatzimina/following{/other_user}", "gists_url": "https://api.github.com/users/Chatzimina/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chatzimina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chatzimina/subscriptions", "organizations_url": "https://api.github.com/users/Chatzimina/orgs", "repos_url": "https://api.github.com/users/Chatzimina/repos", "events_url": "https://api.github.com/users/Chatzimina/events{/privacy}", "received_events_url": "https://api.github.com/users/Chatzimina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-11-18T15:29:07Z", "updated_at": "2016-12-17T03:40:17Z", "closed_at": "2015-11-18T17:37:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\nI tried your code \nfrom requests_oauthlib import OAuth2Session\ngoogle = OAuth2Session(r'client_id', token=r'token')\nurl = 'https://www.googleapis.com/oauth2/v1/userinfo'\nr = google.get(url)\n\nJust to see if it is running but I get this error ValueError: Missing access token. I know that token and id are not correct but this error is something else I think?\nThank you\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/203", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/203/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/203/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/203", "id": 115483728, "node_id": "MDU6SXNzdWUxMTU0ODM3Mjg=", "number": 203, "title": "test failure: oauthlib.oauth2.rfc6749.errors.InvalidClientIdError: (invalid_request) Invalid client_id parameter value.", "user": {"login": "0-wiz-0", "id": 2221844, "node_id": "MDQ6VXNlcjIyMjE4NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2221844?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0-wiz-0", "html_url": "https://github.com/0-wiz-0", "followers_url": "https://api.github.com/users/0-wiz-0/followers", "following_url": "https://api.github.com/users/0-wiz-0/following{/other_user}", "gists_url": "https://api.github.com/users/0-wiz-0/gists{/gist_id}", "starred_url": "https://api.github.com/users/0-wiz-0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0-wiz-0/subscriptions", "organizations_url": "https://api.github.com/users/0-wiz-0/orgs", "repos_url": "https://api.github.com/users/0-wiz-0/repos", "events_url": "https://api.github.com/users/0-wiz-0/events{/privacy}", "received_events_url": "https://api.github.com/users/0-wiz-0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-11-06T11:00:32Z", "updated_at": "2015-11-08T09:24:26Z", "closed_at": "2015-11-08T09:24:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've built requests-oauthlib-0.5.0 on NetBSD with python-3.4.3, requests-2.7.0 and oauthlib-1.0.3. When I run the tests, I get:\n\n```\ntest_web_app_fetch_token (tests.test_oauth2_session.OAuth2SessionTest) ... ok\n\n======================================================================\nERROR: test_fetch_token (tests.test_oauth2_session.OAuth2SessionTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/pkg/lib/python3.4/site-packages/mock/mock.py\", line 1305, in patched\n    return func(*args, **keywargs)\n  File \"/scratch/security/py-requests-oauthlib/work/requests-oauthlib-0.5.0/tests/test_oauth2_session.py\", line 134, in test_fetch_token\n    self.assertRaises(InvalidRequestError, auth.fetch_token, url)\n  File \"/usr/pkg/lib/python3.4/unittest/case.py\", line 704, in assertRaises\n    return context.handle('assertRaises', callableObj, args, kwargs)\n  File \"/usr/pkg/lib/python3.4/unittest/case.py\", line 162, in handle\n    callable_obj(*args, **kwargs)\n  File \"/scratch/security/py-requests-oauthlib/work/requests-oauthlib-0.5.0/requests_oauthlib/oauth2_session.py\", line 203, in fetch_token\n    self._client.parse_request_body_response(r.text, scope=self.scope)\n  File \"/usr/pkg/lib/python3.4/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 409, in parse_request_body_response\n    self.token = parse_token_response(body, scope=scope)\n  File \"/usr/pkg/lib/python3.4/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 376, in parse_token_response\n    validate_token_parameters(params)\n  File \"/usr/pkg/lib/python3.4/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 383, in validate_token_parameters\n    raise_from_error(params.get('error'), params)\n  File \"/usr/pkg/lib/python3.4/site-packages/oauthlib/oauth2/rfc6749/errors.py\", line 271, in raise_from_error\n    raise cls(**kwargs)\noauthlib.oauth2.rfc6749.errors.InvalidClientIdError: (invalid_request) Invalid client_id parameter value.\n\n----------------------------------------------------------------------\nRan 36 tests in 1.862s\n\nFAILED (errors=1)\n*** Error code 1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/199", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/199/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/199/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/199", "id": 112795416, "node_id": "MDU6SXNzdWUxMTI3OTU0MTY=", "number": 199, "title": "Documentation Problem in Real World Example", "user": {"login": "hellerve", "id": 7725188, "node_id": "MDQ6VXNlcjc3MjUxODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7725188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hellerve", "html_url": "https://github.com/hellerve", "followers_url": "https://api.github.com/users/hellerve/followers", "following_url": "https://api.github.com/users/hellerve/following{/other_user}", "gists_url": "https://api.github.com/users/hellerve/gists{/gist_id}", "starred_url": "https://api.github.com/users/hellerve/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hellerve/subscriptions", "organizations_url": "https://api.github.com/users/hellerve/orgs", "repos_url": "https://api.github.com/users/hellerve/repos", "events_url": "https://api.github.com/users/hellerve/events{/privacy}", "received_events_url": "https://api.github.com/users/hellerve/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-22T12:46:53Z", "updated_at": "2015-10-22T15:08:30Z", "closed_at": "2015-10-22T15:08:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey,\n\nin the [real world example](https://github.com/requests/requests-oauthlib/blob/master/docs/examples/real_world_example.rst) you are using Githubs API as a case study and Flask as the framework. It would probably be worth a mention that with Github's API, the `redirect_uri` parameter is optional, especially if you are using flask on the other side, as `flask-oauthlib` will require this parameter and if users want to create something based on that example, this will probably be a minor pitfall.\n\nI can issue a PR to fix this if you agree that this is somewhat confusing.\n\nCheers\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/186", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/186/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/186/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/186", "id": 97326496, "node_id": "MDU6SXNzdWU5NzMyNjQ5Ng==", "number": 186, "title": "Compatability with latest version of oauthlib", "user": {"login": "HEdingfield", "id": 8259446, "node_id": "MDQ6VXNlcjgyNTk0NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8259446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HEdingfield", "html_url": "https://github.com/HEdingfield", "followers_url": "https://api.github.com/users/HEdingfield/followers", "following_url": "https://api.github.com/users/HEdingfield/following{/other_user}", "gists_url": "https://api.github.com/users/HEdingfield/gists{/gist_id}", "starred_url": "https://api.github.com/users/HEdingfield/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HEdingfield/subscriptions", "organizations_url": "https://api.github.com/users/HEdingfield/orgs", "repos_url": "https://api.github.com/users/HEdingfield/repos", "events_url": "https://api.github.com/users/HEdingfield/events{/privacy}", "received_events_url": "https://api.github.com/users/HEdingfield/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-26T15:16:04Z", "updated_at": "2016-02-26T08:21:30Z", "closed_at": "2016-02-26T08:21:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "v1.0.0 was released the other day (and v1.0.1 just came out yesterday). It looks like there are a few \"breaking changes\"; it's probably a good idea to check over all this to make sure is fully compatible with the new version: https://github.com/idan/oauthlib/releases\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/184", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/184/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/184/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/184", "id": 97258870, "node_id": "MDU6SXNzdWU5NzI1ODg3MA==", "number": 184, "title": "pypi archive contains .pyc files", "user": {"login": "d9pouces", "id": 2222826, "node_id": "MDQ6VXNlcjIyMjI4MjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2222826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d9pouces", "html_url": "https://github.com/d9pouces", "followers_url": "https://api.github.com/users/d9pouces/followers", "following_url": "https://api.github.com/users/d9pouces/following{/other_user}", "gists_url": "https://api.github.com/users/d9pouces/gists{/gist_id}", "starred_url": "https://api.github.com/users/d9pouces/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d9pouces/subscriptions", "organizations_url": "https://api.github.com/users/d9pouces/orgs", "repos_url": "https://api.github.com/users/d9pouces/repos", "events_url": "https://api.github.com/users/d9pouces/events{/privacy}", "received_events_url": "https://api.github.com/users/d9pouces/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-07-25T21:32:38Z", "updated_at": "2015-10-05T07:10:29Z", "closed_at": "2015-10-05T07:10:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "The last version available on Pypi has \"compiled\" python files in the tests directory:\n\n```\ntar -tf requests-oauthlib-0.5.0.tar.gz  | grep pyc\nrequests-oauthlib-0.5.0/tests/__init__.pyc\nrequests-oauthlib-0.5.0/tests/__pycache__/\nrequests-oauthlib-0.5.0/tests/__pycache__/test_core.cpython-27-PYTEST.pyc\nrequests-oauthlib-0.5.0/tests/__pycache__/test_oauth1_session.cpython-27-PYTEST.pyc\nrequests-oauthlib-0.5.0/tests/__pycache__/test_oauth2_auth.cpython-27-PYTEST.pyc\nrequests-oauthlib-0.5.0/tests/__pycache__/test_oauth2_session.cpython-27-PYTEST.pyc\nrequests-oauthlib-0.5.0/tests/test_core.pyc\nrequests-oauthlib-0.5.0/tests/test_oauth1_session.pyc\nrequests-oauthlib-0.5.0/tests/test_oauth2_auth.pyc\nrequests-oauthlib-0.5.0/tests/test_oauth2_session.pyc\n```\n\nThe stdeb command (used to create Debian packages) does not work without cleaning these files.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/181", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/181/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/181/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/181", "id": 75922490, "node_id": "MDU6SXNzdWU3NTkyMjQ5MA==", "number": 181, "title": "Provide a way to specify the certificate's path for SSL verification", "user": {"login": "0xjac", "id": 2848217, "node_id": "MDQ6VXNlcjI4NDgyMTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/2848217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/0xjac", "html_url": "https://github.com/0xjac", "followers_url": "https://api.github.com/users/0xjac/followers", "following_url": "https://api.github.com/users/0xjac/following{/other_user}", "gists_url": "https://api.github.com/users/0xjac/gists{/gist_id}", "starred_url": "https://api.github.com/users/0xjac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/0xjac/subscriptions", "organizations_url": "https://api.github.com/users/0xjac/orgs", "repos_url": "https://api.github.com/users/0xjac/repos", "events_url": "https://api.github.com/users/0xjac/events{/privacy}", "received_events_url": "https://api.github.com/users/0xjac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-13T09:45:44Z", "updated_at": "2015-05-13T12:31:38Z", "closed_at": "2015-05-13T12:31:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am using the contrib client of `Flask-OAuthlib` which relies on `requests-oauthlib` and I have a SSL verification failure which appears to come from the `OAuth1Session` of `requests-oauthlib`:\n\n``` python\nTraceback (most recent call last):\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/flask/app.py\", line 1836, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/flask/app.py\", line 1820, in wsgi_app\n    response = self.make_response(self.handle_exception(e))\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/flask/app.py\", line 1403, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/flask/app.py\", line 1817, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/flask/app.py\", line 1477, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/flask/app.py\", line 1381, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/flask/app.py\", line 1475, in full_dispatch_request\n    rv = self.dispatch_request()\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/flask/app.py\", line 1461, in dispatch_request\n    return self.view_functions[rule.endpoint](**req.view_args)\n  File \"/home/jacques/Documents/code/indico-mobile/indicomobile/views/authentication.py\", line 33, in login\n    return indico.authorize(callback_uri)\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/flask_oauthlib/contrib/client/application.py\", line 181, in authorize\n    response = oauth.fetch_request_token(self.request_token_url)\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/requests_oauthlib/oauth1_session.py\", line 261, in fetch_request_token\n    token = self._fetch_token(url)\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/requests_oauthlib/oauth1_session.py\", line 340, in _fetch_token\n    r = self.post(url)\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/requests/sessions.py\", line 508, in post\n    return self.request('POST', url, data=data, json=json, **kwargs)\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/requests/sessions.py\", line 465, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/requests/sessions.py\", line 573, in send\n    r = adapter.send(request, **kwargs)\n  File \"/home/jacques/.virtualenvs/indico-mobile/lib/python2.7/site-packages/requests/adapters.py\", line 431, in send\n    raise SSLError(e, request=request)\nSSLError: [Errno bad handshake] [('SSL routines', 'SSL3_GET_SERVER_CERTIFICATE', 'certificate verify failed')]\n```\n\nIt would be great if we could pass an argument to the session with the path of the certificate to be used when fetching the token (see [OAuth1Session#L340](https://github.com/requests/requests-oauthlib/blob/master/requests_oauthlib/oauth1_session.py#L340))\nI haven't tested OAuth2, but after a quick look at the `OAuth2Session` I think it might have the same issue on lines [176](https://github.com/requests/requests-oauthlib/blob/master/requests_oauthlib/oauth2_session.py#L176), [182](https://github.com/requests/requests-oauthlib/blob/master/requests_oauthlib/oauth2_session.py#L182) and [249](https://github.com/requests/requests-oauthlib/blob/master/requests_oauthlib/oauth2_session.py#L249).\n\nIf you are interested, I'll gladly work on a fix and submit a pull request.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/176", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/176/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/176/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/176", "id": 64618313, "node_id": "MDU6SXNzdWU2NDYxODMxMw==", "number": 176, "title": "fetch_token fails if response contains url", "user": {"login": "zais", "id": 776981, "node_id": "MDQ6VXNlcjc3Njk4MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/776981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zais", "html_url": "https://github.com/zais", "followers_url": "https://api.github.com/users/zais/followers", "following_url": "https://api.github.com/users/zais/following{/other_user}", "gists_url": "https://api.github.com/users/zais/gists{/gist_id}", "starred_url": "https://api.github.com/users/zais/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zais/subscriptions", "organizations_url": "https://api.github.com/users/zais/orgs", "repos_url": "https://api.github.com/users/zais/repos", "events_url": "https://api.github.com/users/zais/events{/privacy}", "received_events_url": "https://api.github.com/users/zais/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-26T19:51:23Z", "updated_at": "2018-06-15T08:17:34Z", "closed_at": "2018-05-20T10:27:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Code**\n\n``` python\n        request_token_url = 'http://api.zenmoney.ru/oauth/request_token'\n        oauth = OAuth1Session('aaaaaaaaaaaa', client_secret='bbbbb')  \n        token = oauth.fetch_request_token(request_token_url)\n```\n\n**Debug**\n\n```\n    INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): api.zenmoney.ru\n    DEBUG:requests.packages.urllib3.connectionpool:\"POST /oauth/request_token HTTP/1.1\" 200 132\n    DEBUG:requests_oauthlib.oauth1_session:Decoding token from response \"login_url=http://api.zenmoney.ru/access/&oauth_token=aaaaaaaaaaaaaaaaaaaaaaaaaaaaa&oauth_token_secret=bbbbbbbbbbbbb&oauth_callback_confirmed=true\"\n    Traceback (most recent call last):\n      File \"zenmoneycli.py\", line 13, in <module>\n        token = oauth.fetch_request_token(request_token_url)\n      File \"/home/user/Development/Python/zenmoneycli/local/lib/python2.7/site-packages/requests_oauthlib/oauth1_session.py\", line 261, in fetch_request_token\n        token = self._fetch_token(url)\n      File \"/home/user/Development/Python/zenmoneycli/local/lib/python2.7/site-packages/requests_oauthlib/oauth1_session.py\", line 354, in _fetch_token\n        raise ValueError(error)\n    ValueError: Unable to decode token from token response. This is commonly caused by an unsuccessful request where a non urlencoded error message is returned. The decoding error was No JSON object could be decoded\n```\n\nAs you can see response contains 'login_url=http://api.zenmoney.ru/access/' which is not 'safe' for urldecode.\nAny workaround?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/173", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/173/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/173/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/173", "id": 59187275, "node_id": "MDU6SXNzdWU1OTE4NzI3NQ==", "number": 173, "title": "Scope change warning (actually an error) when fetching tokens", "user": {"login": "josephtate", "id": 312403, "node_id": "MDQ6VXNlcjMxMjQwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/312403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josephtate", "html_url": "https://github.com/josephtate", "followers_url": "https://api.github.com/users/josephtate/followers", "following_url": "https://api.github.com/users/josephtate/following{/other_user}", "gists_url": "https://api.github.com/users/josephtate/gists{/gist_id}", "starred_url": "https://api.github.com/users/josephtate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josephtate/subscriptions", "organizations_url": "https://api.github.com/users/josephtate/orgs", "repos_url": "https://api.github.com/users/josephtate/repos", "events_url": "https://api.github.com/users/josephtate/events{/privacy}", "received_events_url": "https://api.github.com/users/josephtate/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-27T04:16:32Z", "updated_at": "2015-02-27T07:42:10Z", "closed_at": "2015-02-27T07:42:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "My test script is pretty much straight from the http://requests-oauthlib.readthedocs.org/en/latest/examples/google.html Google OAuth2 tutorial.\n\n```\n#My test script\nclient_id =  '<snipped>.apps.googleusercontent.com'\nclient_secret = '<snipped>'\nredirect_uri = '<snipped>'\ntoken_url = \"https://accounts.google.com/o/oauth2/token\"\nauthz_url_base = 'https://accounts.google.com/o/oauth2/auth'\nscope = ['https://www.googleapis.com/auth/plus.me', 'email']\n\nfrom requests_oauthlib import OAuth2Session\n\ngoogle = OAuth2Session(client_id, scope=scope, redirect_uri=redirect_uri)\n\nauthorization_url, state = google.authorization_url(authz_url_base, access_type=\"online\")\n\nprint 'Please go here and authorize,', authorization_url\n\nredirect_response = raw_input('Paste the full redirect URL here:')\n\ngoogle.fetch_token(token_url, client_secret=client_secret, authorization_response=redirect_response)\n```\n\nAnd here's the output:\n\n```\nPlease go here and authorize, https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=<snipped>\nPaste the full redirect URL here:<snipped>\nTraceback (most recent call last):\n  File \"test.py\", line 18, in <module>\n    google.fetch_token(token_url, client_secret=client_secret, authorization_response=redirect_response)\n  File \"/home/jtate/.virtualenvs/crunch/local/lib/python2.7/site-packages/requests_oauthlib/oauth2_session.py\", line 199, in fetch_token\n    self._client.parse_request_body_response(r.text, scope=self.scope)\n  File \"/home/jtate/.virtualenvs/crunch/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/clients/base.py\", line 409, in parse_request_body_response\n    self.token = parse_token_response(body, scope=scope)\n  File \"/home/jtate/.virtualenvs/crunch/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 376, in parse_token_response\n    validate_token_parameters(params)\n  File \"/home/jtate/.virtualenvs/crunch/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 406, in validate_token_parameters\n    raise w\nWarning: Scope has changed from \"email https://www.googleapis.com/auth/plus.me\" to \"\".\n```\n\nIt looks like the Session object's scope isn't passed down into the oauthlib token parsing lib causing the error every time.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/170", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/170/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/170/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/170", "id": 56429473, "node_id": "MDU6SXNzdWU1NjQyOTQ3Mw==", "number": 170, "title": "token_placement is not supported when making a request from OAuth2Session", "user": {"login": "aventurella", "id": 75315, "node_id": "MDQ6VXNlcjc1MzE1", "avatar_url": "https://avatars3.githubusercontent.com/u/75315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aventurella", "html_url": "https://github.com/aventurella", "followers_url": "https://api.github.com/users/aventurella/followers", "following_url": "https://api.github.com/users/aventurella/following{/other_user}", "gists_url": "https://api.github.com/users/aventurella/gists{/gist_id}", "starred_url": "https://api.github.com/users/aventurella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aventurella/subscriptions", "organizations_url": "https://api.github.com/users/aventurella/orgs", "repos_url": "https://api.github.com/users/aventurella/repos", "events_url": "https://api.github.com/users/aventurella/events{/privacy}", "received_events_url": "https://api.github.com/users/aventurella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-03T20:07:29Z", "updated_at": "2018-05-20T10:24:34Z", "closed_at": "2018-05-20T10:24:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "oauthlib allows you to pass `token_placement` to `add_token:\nhttps://github.com/idan/oauthlib/blob/master/oauthlib/oauth2/rfc6749/clients/base.py#L145\n\nor set `default_token_placement` when the client is initialized:\nhttps://github.com/idan/oauthlib/blob/master/oauthlib/oauth2/rfc6749/clients/base.py#L52\n\n_requests-oauthlib_ appears appears to only support passing the token via auth header, which appears not to work for Instagram.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/166", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/166/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/166/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/166", "id": 53293033, "node_id": "MDU6SXNzdWU1MzI5MzAzMw==", "number": 166, "title": "Setup OAuth version", "user": {"login": "poliveira89", "id": 1919475, "node_id": "MDQ6VXNlcjE5MTk0NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1919475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliveira89", "html_url": "https://github.com/poliveira89", "followers_url": "https://api.github.com/users/poliveira89/followers", "following_url": "https://api.github.com/users/poliveira89/following{/other_user}", "gists_url": "https://api.github.com/users/poliveira89/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliveira89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliveira89/subscriptions", "organizations_url": "https://api.github.com/users/poliveira89/orgs", "repos_url": "https://api.github.com/users/poliveira89/repos", "events_url": "https://api.github.com/users/poliveira89/events{/privacy}", "received_events_url": "https://api.github.com/users/poliveira89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-03T03:46:32Z", "updated_at": "2018-05-20T10:22:00Z", "closed_at": "2018-05-20T10:22:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Like on step 4 on this example: https://requests-oauthlib.readthedocs.org/en/latest/oauth1_workflow.html\n\nI would like to know if it's possible for me to change from version \"1.0\" to version \"1.0a\"? (Before passing as argument on requests)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/165", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/165/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/165/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/165", "id": 52621040, "node_id": "MDU6SXNzdWU1MjYyMTA0MA==", "number": 165, "title": "v0.4.2 tag is missing", "user": {"login": "koobs", "id": 1011612, "node_id": "MDQ6VXNlcjEwMTE2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1011612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koobs", "html_url": "https://github.com/koobs", "followers_url": "https://api.github.com/users/koobs/followers", "following_url": "https://api.github.com/users/koobs/following{/other_user}", "gists_url": "https://api.github.com/users/koobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/koobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koobs/subscriptions", "organizations_url": "https://api.github.com/users/koobs/orgs", "repos_url": "https://api.github.com/users/koobs/repos", "events_url": "https://api.github.com/users/koobs/events{/privacy}", "received_events_url": "https://api.github.com/users/koobs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-22T05:30:07Z", "updated_at": "2015-05-04T09:49:34Z", "closed_at": "2015-05-04T09:49:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/164", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/164/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/164/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/164", "id": 52620633, "node_id": "MDU6SXNzdWU1MjYyMDYzMw==", "number": 164, "title": "Test test_signature_methods fails when optional dependency not installed", "user": {"login": "koobs", "id": 1011612, "node_id": "MDQ6VXNlcjEwMTE2MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1011612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koobs", "html_url": "https://github.com/koobs", "followers_url": "https://api.github.com/users/koobs/followers", "following_url": "https://api.github.com/users/koobs/following{/other_user}", "gists_url": "https://api.github.com/users/koobs/gists{/gist_id}", "starred_url": "https://api.github.com/users/koobs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koobs/subscriptions", "organizations_url": "https://api.github.com/users/koobs/orgs", "repos_url": "https://api.github.com/users/koobs/repos", "events_url": "https://api.github.com/users/koobs/events{/privacy}", "received_events_url": "https://api.github.com/users/koobs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 22432373, "node_id": "MDU6TGFiZWwyMjQzMjM3Mw==", "url": "https://api.github.com/repos/requests/requests-oauthlib/labels/Contributor%20Friendly", "name": "Contributor Friendly", "color": "02e10c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-22T05:18:10Z", "updated_at": "2015-09-23T06:02:07Z", "closed_at": "2015-09-19T17:17:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following test fails when the optional (rsa) dependency pycrypto is not installed. \n\nIt should skip instead, or be added to tests_require. Both would be best.\n\n```\n======================================================================\nERROR: test_signature_methods (tests.test_oauth1_session.OAuth1SessionTest)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/site-packages/mock.py\", line 1201, in patched\n    return func(*args, **keywargs)\n  File \"/mnt/home/user/repos/freebsd/ports/www/py-requests-oauthlib/work/requests-oauthlib-0.4.2/tests/test_oauth1_session.py\", line 102, in test_signature_methods\n    auth.post('https://i.b')\n  File \"/mnt/home/user/repos/freebsd/ports/www/py-requests-oauthlib/work/requests-oauthlib-0.4.2/requests-2.5.0-py2.7.egg/requests/sessions.py\", line 504, in post\n    return self.request('POST', url, data=data, json=json, **kwargs)\n  File \"/mnt/home/user/repos/freebsd/ports/www/py-requests-oauthlib/work/requests-oauthlib-0.4.2/requests-2.5.0-py2.7.egg/requests/sessions.py\", line 447, in request\n    prep = self.prepare_request(req)\n  File \"/mnt/home/user/repos/freebsd/ports/www/py-requests-oauthlib/work/requests-oauthlib-0.4.2/requests-2.5.0-py2.7.egg/requests/sessions.py\", line 378, in prepare_request\n    hooks=merge_hooks(request.hooks, self.hooks),\n  File \"/mnt/home/user/repos/freebsd/ports/www/py-requests-oauthlib/work/requests-oauthlib-0.4.2/requests-2.5.0-py2.7.egg/requests/models.py\", line 308, in prepare\n    self.prepare_auth(auth, url)\n  File \"/mnt/home/user/repos/freebsd/ports/www/py-requests-oauthlib/work/requests-oauthlib-0.4.2/requests-2.5.0-py2.7.egg/requests/models.py\", line 492, in prepare_auth\n    r = auth(self)\n  File \"/mnt/home/user/repos/freebsd/ports/www/py-requests-oauthlib/work/requests-oauthlib-0.4.2/requests_oauthlib/oauth1_auth.py\", line 87, in __call__\n    unicode(r.url), unicode(r.method), None, r.headers)\n  File \"build/bdist.freebsd-9.3-STABLE-amd64/egg/oauthlib/oauth1/rfc5849/__init__.py\", line 304, in sign\n    ('oauth_signature', self.get_oauth_signature(request)))\n  File \"build/bdist.freebsd-9.3-STABLE-amd64/egg/oauthlib/oauth1/rfc5849/__init__.py\", line 153, in get_oauth_signature\n    sig = self.SIGNATURE_METHODS[self.signature_method](base_string, self)\n  File \"build/bdist.freebsd-9.3-STABLE-amd64/egg/oauthlib/oauth1/rfc5849/signature.py\", line 499, in sign_rsa_sha1_with_client\n    return sign_rsa_sha1(base_string, client.rsa_key)\n  File \"build/bdist.freebsd-9.3-STABLE-amd64/egg/oauthlib/oauth1/rfc5849/signature.py\", line 487, in sign_rsa_sha1\n    from Crypto.PublicKey import RSA\nImportError: No module named Crypto.PublicKey\n\n----------------------------------------------------------------------\nRan 30 tests in 2.580s\n\nFAILED (errors=1)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/162", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/162/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/162/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/162", "id": 49448427, "node_id": "MDU6SXNzdWU0OTQ0ODQyNw==", "number": 162, "title": "Should expires_at be expires_in in example?", "user": {"login": "robmoore", "id": 152990, "node_id": "MDQ6VXNlcjE1Mjk5MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/152990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robmoore", "html_url": "https://github.com/robmoore", "followers_url": "https://api.github.com/users/robmoore/followers", "following_url": "https://api.github.com/users/robmoore/following{/other_user}", "gists_url": "https://api.github.com/users/robmoore/gists{/gist_id}", "starred_url": "https://api.github.com/users/robmoore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robmoore/subscriptions", "organizations_url": "https://api.github.com/users/robmoore/orgs", "repos_url": "https://api.github.com/users/robmoore/repos", "events_url": "https://api.github.com/users/robmoore/events{/privacy}", "received_events_url": "https://api.github.com/users/robmoore/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-11-19T20:23:23Z", "updated_at": "2018-05-20T10:23:03Z", "closed_at": "2018-05-20T10:23:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the [example](https://github.com/requests/requests-authlib/blob/master/docs/examples/real_world_example_with_refresh.rst) application showing the refresh token flow, there is a reference to `expires_at`: `token['expires_at'] = time() - 10`.\nI suspect this should actually be `expires_in` instead.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/159", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/159/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/159/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/159", "id": 47765046, "node_id": "MDU6SXNzdWU0Nzc2NTA0Ng==", "number": 159, "title": "oauthlib 0.7 includes breaking changes", "user": {"login": "shazow", "id": 6292, "node_id": "MDQ6VXNlcjYyOTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shazow", "html_url": "https://github.com/shazow", "followers_url": "https://api.github.com/users/shazow/followers", "following_url": "https://api.github.com/users/shazow/following{/other_user}", "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}", "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shazow/subscriptions", "organizations_url": "https://api.github.com/users/shazow/orgs", "repos_url": "https://api.github.com/users/shazow/repos", "events_url": "https://api.github.com/users/shazow/events{/privacy}", "received_events_url": "https://api.github.com/users/shazow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-04T21:04:35Z", "updated_at": "2014-11-06T16:19:43Z", "closed_at": "2014-11-06T16:19:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Looks like oauthlib version is not pinned, but my stuff just broke because of updates. :(\n\nSee also https://github.com/idan/oauthlib/pull/276 and related issues.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/158", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/158/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/158/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/158", "id": 47038634, "node_id": "MDU6SXNzdWU0NzAzODYzNA==", "number": 158, "title": "Name Errors obtaining resource owner key/secret", "user": {"login": "jhbrewer264", "id": 9338775, "node_id": "MDQ6VXNlcjkzMzg3NzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/9338775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhbrewer264", "html_url": "https://github.com/jhbrewer264", "followers_url": "https://api.github.com/users/jhbrewer264/followers", "following_url": "https://api.github.com/users/jhbrewer264/following{/other_user}", "gists_url": "https://api.github.com/users/jhbrewer264/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhbrewer264/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhbrewer264/subscriptions", "organizations_url": "https://api.github.com/users/jhbrewer264/orgs", "repos_url": "https://api.github.com/users/jhbrewer264/repos", "events_url": "https://api.github.com/users/jhbrewer264/events{/privacy}", "received_events_url": "https://api.github.com/users/jhbrewer264/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-10-28T15:18:22Z", "updated_at": "2018-05-20T09:18:56Z", "closed_at": "2018-05-20T09:18:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I keep encountering an error stating 'OauthSession1' and 'Oauth1' are undefined when attempting to authenticate with twitter.  I have been using a basic function call: \n\nfrom requests_oauthlib import OAuth1Session\n\nconsumer_key = raw_input(\"Please enter your consumer key: \")\nconsumer_secret = raw_input(\"Please enter your consumer secret: \")\n\nrequesttokenurl = 'https://api.twitter.com/oauth/request_token'\n\noauth = Oauth1Session(consumer_key, consumer_secret=consumer_secret)\nfetch_response = oauth.fetch_request_token(requesttokenurl)\n\nany suggestions as to why this may be producing the error in line 8:\noauth = Oauth1Session(consumer_key, consumer_secret=consumer_secret)\nNameError: name 'Oauth1Session' is not defined\n\nThanks for the help\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/157", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/157/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/157/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/157", "id": 47008914, "node_id": "MDU6SXNzdWU0NzAwODkxNA==", "number": 157, "title": "Fix dependencies", "user": {"login": "aitormagan", "id": 2526562, "node_id": "MDQ6VXNlcjI1MjY1NjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2526562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aitormagan", "html_url": "https://github.com/aitormagan", "followers_url": "https://api.github.com/users/aitormagan/followers", "following_url": "https://api.github.com/users/aitormagan/following{/other_user}", "gists_url": "https://api.github.com/users/aitormagan/gists{/gist_id}", "starred_url": "https://api.github.com/users/aitormagan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aitormagan/subscriptions", "organizations_url": "https://api.github.com/users/aitormagan/orgs", "repos_url": "https://api.github.com/users/aitormagan/repos", "events_url": "https://api.github.com/users/aitormagan/events{/privacy}", "received_events_url": "https://api.github.com/users/aitormagan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2014-10-28T10:16:20Z", "updated_at": "2018-07-23T12:58:54Z", "closed_at": "2018-05-20T10:25:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Each time the `oauthlib` library is changed, I have to change my code because the behaviour changes. So, can you fix the version of the libraries that you use?\nAt least you should fix the mayor number of the dependencies since when this number changes, the API often changes. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/150", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/150/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/150/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/150", "id": 44914968, "node_id": "MDU6SXNzdWU0NDkxNDk2OA==", "number": 150, "title": "New release on PyPI?", "user": {"login": "singingwolfboy", "id": 132355, "node_id": "MDQ6VXNlcjEzMjM1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/132355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/singingwolfboy", "html_url": "https://github.com/singingwolfboy", "followers_url": "https://api.github.com/users/singingwolfboy/followers", "following_url": "https://api.github.com/users/singingwolfboy/following{/other_user}", "gists_url": "https://api.github.com/users/singingwolfboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/singingwolfboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/singingwolfboy/subscriptions", "organizations_url": "https://api.github.com/users/singingwolfboy/orgs", "repos_url": "https://api.github.com/users/singingwolfboy/repos", "events_url": "https://api.github.com/users/singingwolfboy/events{/privacy}", "received_events_url": "https://api.github.com/users/singingwolfboy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-10-05T13:56:42Z", "updated_at": "2014-10-16T17:25:21Z", "closed_at": "2014-10-16T17:25:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `authorized` boolean is [documented on ReadTheDocs](http://requests-oauthlib.readthedocs.org/en/latest/api.html#requests_oauthlib.OAuth1Session.authorized), but is not available in the latest release on PyPI. Can you make a new release so that feature is actually available?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/139", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/139/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/139/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/139", "id": 41943398, "node_id": "MDU6SXNzdWU0MTk0MzM5OA==", "number": 139, "title": "ImportError for version 0.4.1 installed from pypi", "user": {"login": "andrewebdev", "id": 84479, "node_id": "MDQ6VXNlcjg0NDc5", "avatar_url": "https://avatars2.githubusercontent.com/u/84479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewebdev", "html_url": "https://github.com/andrewebdev", "followers_url": "https://api.github.com/users/andrewebdev/followers", "following_url": "https://api.github.com/users/andrewebdev/following{/other_user}", "gists_url": "https://api.github.com/users/andrewebdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewebdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewebdev/subscriptions", "organizations_url": "https://api.github.com/users/andrewebdev/orgs", "repos_url": "https://api.github.com/users/andrewebdev/repos", "events_url": "https://api.github.com/users/andrewebdev/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewebdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-04T14:31:07Z", "updated_at": "2014-10-01T16:48:47Z", "closed_at": "2014-09-09T09:38:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "  File \"/home/andre/.buildout/eggs/requests_oauthlib-0.4.1-py2.7.egg/requests_oauthlib/oauth2_auth.py\", line 3, in <module>\n    from oauthlib.oauth2 import is_secure_transport\nImportError: cannot import name is_secure_transport\n\nIf I pin my version to 0.4.0, then I don't get this error.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/137", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/137/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/137/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/137", "id": 40163934, "node_id": "MDU6SXNzdWU0MDE2MzkzNA==", "number": 137, "title": "LinkedIn OAuth 2 Tutorial Example - Not working", "user": {"login": "Michelcyc", "id": 2080835, "node_id": "MDQ6VXNlcjIwODA4MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2080835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Michelcyc", "html_url": "https://github.com/Michelcyc", "followers_url": "https://api.github.com/users/Michelcyc/followers", "following_url": "https://api.github.com/users/Michelcyc/following{/other_user}", "gists_url": "https://api.github.com/users/Michelcyc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Michelcyc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Michelcyc/subscriptions", "organizations_url": "https://api.github.com/users/Michelcyc/orgs", "repos_url": "https://api.github.com/users/Michelcyc/repos", "events_url": "https://api.github.com/users/Michelcyc/events{/privacy}", "received_events_url": "https://api.github.com/users/Michelcyc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-08-13T15:07:10Z", "updated_at": "2014-10-23T18:33:08Z", "closed_at": "2014-10-23T18:33:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried the example and I've got a InsecureTransportError when using the method \"fetch_token\".\nI corrected this error by:\n\n> > import os\n> > os.environ['DEBUG'] = '1'\n\nThen, I've tried it again and I got a InvalidRequestError this time. My code is exactly like the example.\nMy call is linkedin.fetch_token(token_url, client_secret=client_secret,authorization_response=redirect_response)\n## Stack errors:\n\nInvalidRequestError                       Traceback (most recent call last)\n<ipython-input-85-dc21fc31f9f4> in <module>()\n----> 1 linkedin.fetch_token(token_url, client_secret=client_secret,authorization_response=redirect_response)\n\n/Users/michelsiqueirareis/anaconda/lib/python2.7/site-packages/requests_oauthlib/oauth2_session.pyc in fetch_token(self, token_url, code, authorization_response, body, auth, username, password, **kwargs)\n    158             r = hook(r)\n    159 \n--> 160         self._client.parse_request_body_response(r.text, scope=self.scope)\n    161         self.token = self._client.token\n    162         log.debug('Obtained token %s.', self.token)\n\n/Users/michelsiqueirareis/anaconda/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/clients/web_application.pyc in parse_request_body_response(self, body, scope)\n    269         .. _`Section 7.1`: http://tools.ietf.org/html/rfc6749#section-7.1\n    270         \"\"\"\n--> 271         self.token = parse_token_response(body, scope=scope)\n    272         self._populate_attributes(self.token)\n    273         return self.token\n\n/Users/michelsiqueirareis/anaconda/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.pyc in parse_token_response(body, scope)\n    302         params['expires_at'] = time.time() + int(params['expires_in'])\n    303 \n--> 304     validate_token_parameters(params, scope)\n    305     return params\n    306 \n\n/Users/michelsiqueirareis/anaconda/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.pyc in validate_token_parameters(params, scope)\n    309     \"\"\"Ensures token precence, token type, expiration and scope in params.\"\"\"\n    310     if 'error' in params:\n--> 311         raise_from_error(params.get('error'), params)\n    312 \n    313     if not 'access_token' in params:\n\n/Users/michelsiqueirareis/anaconda/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/errors.pyc in raise_from_error(error, params)\n    229     for _, cls in  inspect.getmembers(sys.modules[__name__], inspect.isclass):\n    230         if cls.error == error:\n--> 231             raise cls(**kwargs)\n\nInvalidRequestError: \n\nThis example is 11 months old, maybe something changed and I don't know =/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/134", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/134/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/134/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/134", "id": 38317217, "node_id": "MDU6SXNzdWUzODMxNzIxNw==", "number": 134, "title": "InvalidRequestError", "user": {"login": "shoooe", "id": 733227, "node_id": "MDQ6VXNlcjczMzIyNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/733227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shoooe", "html_url": "https://github.com/shoooe", "followers_url": "https://api.github.com/users/shoooe/followers", "following_url": "https://api.github.com/users/shoooe/following{/other_user}", "gists_url": "https://api.github.com/users/shoooe/gists{/gist_id}", "starred_url": "https://api.github.com/users/shoooe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shoooe/subscriptions", "organizations_url": "https://api.github.com/users/shoooe/orgs", "repos_url": "https://api.github.com/users/shoooe/repos", "events_url": "https://api.github.com/users/shoooe/events{/privacy}", "received_events_url": "https://api.github.com/users/shoooe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-07-21T16:02:37Z", "updated_at": "2014-07-22T12:35:38Z", "closed_at": "2014-07-22T12:35:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get an `InvalidRequestError` while running this code:\n\n``` python\nfrom flask import Flask, request, redirect, session, url_for\nfrom flask.json import jsonify\nfrom requests_oauthlib import OAuth2Session\nimport os\n\napp = Flask(__name__)\n\nclient_id = '...'\nclient_secret = '...'\nredirect_uri = 'https://localhost:8100/callback'\n\nauthorization_base_url = \"https://accounts.google.com/o/oauth2/auth\"\ntoken_url = \"https://accounts.google.com/o/oauth2/token\"\nscope = [\n    \"https://www.googleapis.com/auth/userinfo.email\",\n    \"https://www.googleapis.com/auth/userinfo.profile\"\n]\n\n@app.route(\"/\")\ndef hello():\n    google = OAuth2Session(client_id, scope=scope, redirect_uri=redirect_uri)\n    authorization_url, state = google.authorization_url(authorization_base_url, access_type=\"offline\", approval_prompt=\"force\")\n    session['oauth_state'] = state\n    return redirect(authorization_url)\n\n@app.route(\"/callback\", methods=[\"GET\"])\ndef callback():\n    google = OAuth2Session(client_id, state=session['oauth_state'])\n    token = google.fetch_token(token_url, client_secret=client_secret, authorization_response=request.url)\n    session['oauth_token'] = token\n    return redirect(url_for('.profile'))\n\n@app.route(\"/profile\", methods=[\"GET\"])\ndef profile():\n    google = OAuth2Session(client_id, token=session['oauth_token'])\n    return jsonify(google.get('https://www.googleapis.com/oauth2/v1/userinfo').json())\n\nif __name__ == \"__main__\":\n    app.secret_key = os.urandom(24)\n    app.run('0.0.0.0', debug=True, port=8100, ssl_context='adhoc')\n```\n\nApparently it stops at the `google.fetch_token(`. I've manually check that the state is correct and it matches the given initial state. The token_url is correct. \n\nWhy is it not running? (HTTPS is enabled)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/132", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/132/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/132/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/132", "id": 37390035, "node_id": "MDU6SXNzdWUzNzM5MDAzNQ==", "number": 132, "title": "client_credential flow not working", "user": {"login": "wiliamsouza", "id": 215986, "node_id": "MDQ6VXNlcjIxNTk4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/215986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wiliamsouza", "html_url": "https://github.com/wiliamsouza", "followers_url": "https://api.github.com/users/wiliamsouza/followers", "following_url": "https://api.github.com/users/wiliamsouza/following{/other_user}", "gists_url": "https://api.github.com/users/wiliamsouza/gists{/gist_id}", "starred_url": "https://api.github.com/users/wiliamsouza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wiliamsouza/subscriptions", "organizations_url": "https://api.github.com/users/wiliamsouza/orgs", "repos_url": "https://api.github.com/users/wiliamsouza/repos", "events_url": "https://api.github.com/users/wiliamsouza/events{/privacy}", "received_events_url": "https://api.github.com/users/wiliamsouza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-07-08T16:48:56Z", "updated_at": "2014-09-12T11:22:36Z", "closed_at": "2014-09-12T11:22:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This issue may be related with `requests-oauthlib`.\n\nhttps://github.com/lepture/flask-oauthlib/issues/107\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/131", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/131/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/131/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/131/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/131", "id": 37011518, "node_id": "MDU6SXNzdWUzNzAxMTUxOA==", "number": 131, "title": "compliance fixes", "user": {"login": "joerussbowman", "id": 125608, "node_id": "MDQ6VXNlcjEyNTYwOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/125608?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joerussbowman", "html_url": "https://github.com/joerussbowman", "followers_url": "https://api.github.com/users/joerussbowman/followers", "following_url": "https://api.github.com/users/joerussbowman/following{/other_user}", "gists_url": "https://api.github.com/users/joerussbowman/gists{/gist_id}", "starred_url": "https://api.github.com/users/joerussbowman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joerussbowman/subscriptions", "organizations_url": "https://api.github.com/users/joerussbowman/orgs", "repos_url": "https://api.github.com/users/joerussbowman/repos", "events_url": "https://api.github.com/users/joerussbowman/events{/privacy}", "received_events_url": "https://api.github.com/users/joerussbowman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-07-02T18:41:13Z", "updated_at": "2014-10-01T14:09:41Z", "closed_at": "2014-10-01T14:09:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would it be possible to move the compliance fixes up from requests-oauthlib up to oauthlib in order for more oauthlib projects to take advantage of them?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/130", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/130/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/130/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/130", "id": 36893374, "node_id": "MDU6SXNzdWUzNjg5MzM3NA==", "number": 130, "title": "need to specify user agent in request", "user": {"login": "cloudkucooland", "id": 8037678, "node_id": "MDQ6VXNlcjgwMzc2Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8037678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cloudkucooland", "html_url": "https://github.com/cloudkucooland", "followers_url": "https://api.github.com/users/cloudkucooland/followers", "following_url": "https://api.github.com/users/cloudkucooland/following{/other_user}", "gists_url": "https://api.github.com/users/cloudkucooland/gists{/gist_id}", "starred_url": "https://api.github.com/users/cloudkucooland/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cloudkucooland/subscriptions", "organizations_url": "https://api.github.com/users/cloudkucooland/orgs", "repos_url": "https://api.github.com/users/cloudkucooland/repos", "events_url": "https://api.github.com/users/cloudkucooland/events{/privacy}", "received_events_url": "https://api.github.com/users/cloudkucooland/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-01T13:43:57Z", "updated_at": "2014-07-01T14:49:14Z", "closed_at": "2014-07-01T14:49:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The API doesn't allow me to specify a UserAgent header (or any other http headers), but a site I'm trying to connect against requires it. Any suggestions? An add_header() method to the OAuth1Session would be ideal.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/127", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/127/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/127/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/127", "id": 34870816, "node_id": "MDU6SXNzdWUzNDg3MDgxNg==", "number": 127, "title": "Can't send binary data to httpbin.org", "user": {"login": "ib-lundgren", "id": 1165819, "node_id": "MDQ6VXNlcjExNjU4MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1165819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ib-lundgren", "html_url": "https://github.com/ib-lundgren", "followers_url": "https://api.github.com/users/ib-lundgren/followers", "following_url": "https://api.github.com/users/ib-lundgren/following{/other_user}", "gists_url": "https://api.github.com/users/ib-lundgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/ib-lundgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ib-lundgren/subscriptions", "organizations_url": "https://api.github.com/users/ib-lundgren/orgs", "repos_url": "https://api.github.com/users/ib-lundgren/repos", "events_url": "https://api.github.com/users/ib-lundgren/events{/privacy}", "received_events_url": "https://api.github.com/users/ib-lundgren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-06-03T14:51:54Z", "updated_at": "2014-06-04T09:23:59Z", "closed_at": "2014-06-04T09:23:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@Lukasa do you know if it is possible to send binary data to httpbin nowdays?\n\nIt used to be possible to /post but it now returns 500, which breaks [test_core.py#96](https://github.com/requests/requests-oauthlib/blob/master/tests/test_core.py#L96). If it is no longer supported in any endpoint we should either find another service or try and mock it out.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/126", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/126/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/126/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/126", "id": 34705364, "node_id": "MDU6SXNzdWUzNDcwNTM2NA==", "number": 126, "title": "Outdated and broken code in Package Index!", "user": {"login": "Bunkerbewohner", "id": 500529, "node_id": "MDQ6VXNlcjUwMDUyOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/500529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bunkerbewohner", "html_url": "https://github.com/Bunkerbewohner", "followers_url": "https://api.github.com/users/Bunkerbewohner/followers", "following_url": "https://api.github.com/users/Bunkerbewohner/following{/other_user}", "gists_url": "https://api.github.com/users/Bunkerbewohner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bunkerbewohner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bunkerbewohner/subscriptions", "organizations_url": "https://api.github.com/users/Bunkerbewohner/orgs", "repos_url": "https://api.github.com/users/Bunkerbewohner/repos", "events_url": "https://api.github.com/users/Bunkerbewohner/events{/privacy}", "received_events_url": "https://api.github.com/users/Bunkerbewohner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-31T12:21:18Z", "updated_at": "2014-05-31T12:35:53Z", "closed_at": "2014-05-31T12:34:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "The distributed package available on https://pypi.python.org/pypi/requests-oauthlib/0.4.0 contains outdated and partially broken code. I noticed because at least the following commit (from February!) is missing, and thus breaking Twitter OAuth on my site in Python 3.4:\n\nhttps://github.com/requests/requests-oauthlib/commit/9aa95160fa23443aea81b7c57db26522ad65f303#diff-8dd12090c5ada109e77c585050c23732\n\nI think a minor version number bump is in order and the package index distribution should be updated. In the meantime I had to manually patch the version on my server.\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/125", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/125/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/125/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/125", "id": 34070957, "node_id": "MDU6SXNzdWUzNDA3MDk1Nw==", "number": 125, "title": "possible to add params to header ?", "user": {"login": "spaceexperiment", "id": 2048846, "node_id": "MDQ6VXNlcjIwNDg4NDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2048846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spaceexperiment", "html_url": "https://github.com/spaceexperiment", "followers_url": "https://api.github.com/users/spaceexperiment/followers", "following_url": "https://api.github.com/users/spaceexperiment/following{/other_user}", "gists_url": "https://api.github.com/users/spaceexperiment/gists{/gist_id}", "starred_url": "https://api.github.com/users/spaceexperiment/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spaceexperiment/subscriptions", "organizations_url": "https://api.github.com/users/spaceexperiment/orgs", "repos_url": "https://api.github.com/users/spaceexperiment/repos", "events_url": "https://api.github.com/users/spaceexperiment/events{/privacy}", "received_events_url": "https://api.github.com/users/spaceexperiment/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2014-05-22T10:58:45Z", "updated_at": "2014-06-17T14:11:31Z", "closed_at": "2014-06-17T14:11:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Like i have to add body_hash_tag in the authorization header, but i can't seem to find a legit way to do it.\nis it no possible with this library ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/124", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/124/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/124/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/124", "id": 33881300, "node_id": "MDU6SXNzdWUzMzg4MTMwMA==", "number": 124, "title": "URL encoding error", "user": {"login": "FransKnibbe", "id": 840140, "node_id": "MDQ6VXNlcjg0MDE0MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/840140?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FransKnibbe", "html_url": "https://github.com/FransKnibbe", "followers_url": "https://api.github.com/users/FransKnibbe/followers", "following_url": "https://api.github.com/users/FransKnibbe/following{/other_user}", "gists_url": "https://api.github.com/users/FransKnibbe/gists{/gist_id}", "starred_url": "https://api.github.com/users/FransKnibbe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FransKnibbe/subscriptions", "organizations_url": "https://api.github.com/users/FransKnibbe/orgs", "repos_url": "https://api.github.com/users/FransKnibbe/repos", "events_url": "https://api.github.com/users/FransKnibbe/events{/privacy}", "received_events_url": "https://api.github.com/users/FransKnibbe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-05-20T12:00:27Z", "updated_at": "2014-06-06T12:34:28Z", "closed_at": "2014-06-06T11:31:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried OAuth 1 based on the OAuth workflow example at http://requests-oauthlib.readthedocs.org/en/latest/oauth1_workflow.html, but I get an error: \n\n[snip]\nFile \"C:\\Python34\\lib\\site-packages\\oauthlib-0.6.1-py3.4.egg\\oauthlib\\common.p\ny\", line 135, in urldecode\nValueError: Not a valid urlencoded string.\n\nBy the way, the same issue was raised on stackoverflow:\nhttp://stackoverflow.com/questions/22965459/oauth1-with-requests-oauthlib-produces-url-encoding-error\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/116", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/116/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/116/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/116", "id": 31940609, "node_id": "MDU6SXNzdWUzMTk0MDYwOQ==", "number": 116, "title": "when following redirects, the authentication header is not created", "user": {"login": "xnox", "id": 19779, "node_id": "MDQ6VXNlcjE5Nzc5", "avatar_url": "https://avatars1.githubusercontent.com/u/19779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xnox", "html_url": "https://github.com/xnox", "followers_url": "https://api.github.com/users/xnox/followers", "following_url": "https://api.github.com/users/xnox/following{/other_user}", "gists_url": "https://api.github.com/users/xnox/gists{/gist_id}", "starred_url": "https://api.github.com/users/xnox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xnox/subscriptions", "organizations_url": "https://api.github.com/users/xnox/orgs", "repos_url": "https://api.github.com/users/xnox/repos", "events_url": "https://api.github.com/users/xnox/events{/privacy}", "received_events_url": "https://api.github.com/users/xnox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-04-22T02:21:33Z", "updated_at": "2014-06-06T10:38:13Z", "closed_at": "2014-06-06T10:38:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello!\n\nFollowing my success at getting access tokens for launchpad api, i've now started to look into making authenticated requests.\n\nAll was well, until API sent me a redirect and I got a 401 nonce was already used response. Looking at other implementations, i've noticed that Authorization header is manually removed, such that request after redirect is generated again with the new unique nonce. Somehow, I've expected requests-oauthlib oauth1 session to handle that for me.\n\nI'll look more into requests API to see if i can strip out Authorization headers upon redirects.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/115", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/115/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/115/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/115", "id": 31877670, "node_id": "MDU6SXNzdWUzMTg3NzY3MA==", "number": 115, "title": "Multiple hurdles when trying to authenticate against launchpad.net", "user": {"login": "xnox", "id": 19779, "node_id": "MDQ6VXNlcjE5Nzc5", "avatar_url": "https://avatars1.githubusercontent.com/u/19779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xnox", "html_url": "https://github.com/xnox", "followers_url": "https://api.github.com/users/xnox/followers", "following_url": "https://api.github.com/users/xnox/following{/other_user}", "gists_url": "https://api.github.com/users/xnox/gists{/gist_id}", "starred_url": "https://api.github.com/users/xnox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xnox/subscriptions", "organizations_url": "https://api.github.com/users/xnox/orgs", "repos_url": "https://api.github.com/users/xnox/repos", "events_url": "https://api.github.com/users/xnox/events{/privacy}", "received_events_url": "https://api.github.com/users/xnox/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-04-21T02:39:16Z", "updated_at": "2014-04-22T09:28:59Z", "closed_at": "2014-04-22T09:28:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello!\n\nI've now successfully used requests-oauthlib to authenticate against https://launchpad.net as documented at https://help.launchpad.net/API/SigningRequests\n\nEverything was straight-forward with OAuth1 examples, until it wasn't.\n\nI had to set signature_method to plaintext, which was ok.\nAt final access_token_stage, I also head to set signature_type to body, but that failed to work by default via OAuth1Session.fetch_access_token because:\n1. at self.post, content-type header is not set to application/x-www-form-urlencoded and thus oauthlib bombs out at: https://github.com/idan/oauthlib/blob/master/oauthlib/oauth1/rfc5849/__init__.py#L271\n2. there is no verifier provided by launchpad.net (or at least not printed back on the client confirmation page) yet verifier is now explicitly required. Can that be made a non-fatal error?\n\nOtherwise here is my code to get a token from launchpad:\n\n```\nclient_key=\"foobar\"\nrequest_token_url='https://launchpad.net/+request-token'\nbase_authorization_url = 'https://launchpad.net/+authorize-token'\naccess_token_url = 'https://launchpad.net/+access-token'\nimport oauthlib\nimport requests\nfrom requests_oauthlib import OAuth1Session\noauth = OAuth1Session(client_key, signature_method=oauthlib.oauth1.SIGNATURE_PLAINTEXT)\nfetch_response = oauth.fetch_request_token(request_token_url)\nresource_owner_key = fetch_response.get('oauth_token')\nresource_owner_secret = fetch_response.get('oauth_token_secret')\nauthorization_url = oauth.authorization_url(base_authorization_url)\nprint('Please go here and authorize,', authorization_url)\ninput('Press enter, when done.')\n# Step 1: use signature_type='body'\n# Step 2: no verifier set\n# Step 3: set Content-Type header to urlencoded\noauth = OAuth1Session(\n    client_key,\n    resource_owner_key=resource_owner_key,\n    resource_owner_secret=resource_owner_secret,\n    signature_method=oauthlib.oauth1.SIGNATURE_PLAINTEXT,\n    signature_type='body')\nfrom oauthlib.common import urldecode\ntoken=dict(urldecode(oauth.post(access_token_url, headers={'Content-Type':'application/x-www-form-urlencoded'}).text))\nprint('oauth_token=\"%s\"' % token['oauth_token'])\nprint('oauth_token_secret=\"%s\"' % token['oauth_token_secret'])\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/112", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/112/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/112/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/112", "id": 30395586, "node_id": "MDU6SXNzdWUzMDM5NTU4Ng==", "number": 112, "title": "Tests don't pass on master", "user": {"login": "alex", "id": 772, "node_id": "MDQ6VXNlcjc3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex", "html_url": "https://github.com/alex", "followers_url": "https://api.github.com/users/alex/followers", "following_url": "https://api.github.com/users/alex/following{/other_user}", "gists_url": "https://api.github.com/users/alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex/subscriptions", "organizations_url": "https://api.github.com/users/alex/orgs", "repos_url": "https://api.github.com/users/alex/repos", "events_url": "https://api.github.com/users/alex/events{/privacy}", "received_events_url": "https://api.github.com/users/alex/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-03-28T15:18:13Z", "updated_at": "2014-04-12T10:26:11Z", "closed_at": "2014-03-30T13:13:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running the tests locally, with `pip install mock -r requirements.txt`, they don't pass. I believe this might be due to an upstream change in oauthlib\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/111", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/111/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/111/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/111", "id": 29408493, "node_id": "MDU6SXNzdWUyOTQwODQ5Mw==", "number": 111, "title": "OAuth2Session token not preserved when copied to multiple processes", "user": {"login": "ruscur", "id": 5637090, "node_id": "MDQ6VXNlcjU2MzcwOTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5637090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruscur", "html_url": "https://github.com/ruscur", "followers_url": "https://api.github.com/users/ruscur/followers", "following_url": "https://api.github.com/users/ruscur/following{/other_user}", "gists_url": "https://api.github.com/users/ruscur/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruscur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruscur/subscriptions", "organizations_url": "https://api.github.com/users/ruscur/orgs", "repos_url": "https://api.github.com/users/ruscur/repos", "events_url": "https://api.github.com/users/ruscur/events{/privacy}", "received_events_url": "https://api.github.com/users/ruscur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-03-14T03:20:24Z", "updated_at": "2014-06-06T11:33:43Z", "closed_at": "2014-06-06T11:33:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a pretty confusing behaviour, so it's quite possible that this isn't a bug at all, but I figured I'd share it anyway.\n\nThe behaviour is as follows:\n1. An OAuth2Session is created, fetch_token is called, and protected resources can be accessed.\n2. Multiple processes (using multiprocessing.Pool) are created to execute a function with this OAuth2Session as a parameter.\n3. The token attribute of this OAuth2Session no longer exists within the memory of these new processes.\n\nIt's not a big deal because it just requires each process to fetch the token of their OAuth2Session, but it seems like it should \"just work\".\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/109", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/109/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/109/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/109", "id": 28287783, "node_id": "MDU6SXNzdWUyODI4Nzc4Mw==", "number": 109, "title": "Can't get requests-oauthlib to interact correctly with flask-oauthlib", "user": {"login": "whitechris969", "id": 6600695, "node_id": "MDQ6VXNlcjY2MDA2OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6600695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whitechris969", "html_url": "https://github.com/whitechris969", "followers_url": "https://api.github.com/users/whitechris969/followers", "following_url": "https://api.github.com/users/whitechris969/following{/other_user}", "gists_url": "https://api.github.com/users/whitechris969/gists{/gist_id}", "starred_url": "https://api.github.com/users/whitechris969/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whitechris969/subscriptions", "organizations_url": "https://api.github.com/users/whitechris969/orgs", "repos_url": "https://api.github.com/users/whitechris969/repos", "events_url": "https://api.github.com/users/whitechris969/events{/privacy}", "received_events_url": "https://api.github.com/users/whitechris969/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-25T21:49:58Z", "updated_at": "2014-02-26T02:13:21Z", "closed_at": "2014-02-26T02:13:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I raised this issue with flask-oauthlib but maybe this is more appropriate here? I've been having an issue trying to fetch a token on a flask-oauthlib server. The complete details are here (along with logging info for the client and the server):\n\nhttp://stackoverflow.com/questions/21888461/flask-oauthlib-server-doesnt-play-well-with-requests-oauthlib-client\n\nSince I have not gotten a response or even acknowledgement I'm wondering if I posted it in the right place and thought it might be more appropriate to post here. I'm completely out of ideas and have been trying to resolve this for quite some days now.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/107", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/107/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/107/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/107", "id": 27387524, "node_id": "MDU6SXNzdWUyNzM4NzUyNA==", "number": 107, "title": "Trouble to make the Oauth2 Web App example working", "user": {"login": "ihommani", "id": 1428626, "node_id": "MDQ6VXNlcjE0Mjg2MjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1428626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ihommani", "html_url": "https://github.com/ihommani", "followers_url": "https://api.github.com/users/ihommani/followers", "following_url": "https://api.github.com/users/ihommani/following{/other_user}", "gists_url": "https://api.github.com/users/ihommani/gists{/gist_id}", "starred_url": "https://api.github.com/users/ihommani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ihommani/subscriptions", "organizations_url": "https://api.github.com/users/ihommani/orgs", "repos_url": "https://api.github.com/users/ihommani/repos", "events_url": "https://api.github.com/users/ihommani/events{/privacy}", "received_events_url": "https://api.github.com/users/ihommani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-02-11T21:22:09Z", "updated_at": "2018-01-12T18:55:42Z", "closed_at": "2014-06-06T11:43:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello, \n\nI've got the following error when I try the snippet of [code](https://requests-oauthlib.readthedocs.org/en/latest/examples/real_world_example.html#web-app-example-of-oauth-2-web-application-flow)\n\n**oauthlib.oauth2.rfc6749.errors.InsecureTransportError**\nI got the redirection but returning to the callback throws this exception.\n\nThe exception is triggered by  the line :\ntoken = github.fetch_token(token_url, client_secret=client_secret,                            authorization_response=request.url)\n\nSince I'm new to requests-oauth, I don't know if the blunder is coming from me or not. But I almost copy/paste the code and replaced all that have to be replaced.\n\nCan anyone confirm the example is working ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/105", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/105/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/105/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/105", "id": 26224254, "node_id": "MDU6SXNzdWUyNjIyNDI1NA==", "number": 105, "title": "OAuth2Session.fetch_token() ignores state", "user": {"login": "papaeye", "id": 1442496, "node_id": "MDQ6VXNlcjE0NDI0OTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1442496?v=4", "gravatar_id": "", "url": "https://api.github.com/users/papaeye", "html_url": "https://github.com/papaeye", "followers_url": "https://api.github.com/users/papaeye/followers", "following_url": "https://api.github.com/users/papaeye/following{/other_user}", "gists_url": "https://api.github.com/users/papaeye/gists{/gist_id}", "starred_url": "https://api.github.com/users/papaeye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/papaeye/subscriptions", "organizations_url": "https://api.github.com/users/papaeye/orgs", "repos_url": "https://api.github.com/users/papaeye/repos", "events_url": "https://api.github.com/users/papaeye/events{/privacy}", "received_events_url": "https://api.github.com/users/papaeye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-01-24T07:42:41Z", "updated_at": "2014-05-27T13:32:17Z", "closed_at": "2014-01-29T11:14:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the callback view like [Web App Example of OAuth 2 web application flow](https://requests-oauthlib.readthedocs.org/en/latest/examples/real_world_example.html), I instantiated OAuth2Session with state parameter and called fetch_token() method but fetch_token() does not use the given state value.\n\nSo an arbitrary state parameter bypasses OAuth2Session's CSRF protection:\n\n``` python\ngithub = OAuth2Session(client_id, state='wrong state')\ngithub.fetch_token(\n    token_url, client_secret=client_secret,\n    authorization_response=request.url)  # does not raise MismatchingStateError\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/103", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/103/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/103/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/103", "id": 25766805, "node_id": "MDU6SXNzdWUyNTc2NjgwNQ==", "number": 103, "title": "Google OAuth 2 Tutorial raises MissingCodeError", "user": {"login": "puntonim", "id": 6423485, "node_id": "MDQ6VXNlcjY0MjM0ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/6423485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/puntonim", "html_url": "https://github.com/puntonim", "followers_url": "https://api.github.com/users/puntonim/followers", "following_url": "https://api.github.com/users/puntonim/following{/other_user}", "gists_url": "https://api.github.com/users/puntonim/gists{/gist_id}", "starred_url": "https://api.github.com/users/puntonim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/puntonim/subscriptions", "organizations_url": "https://api.github.com/users/puntonim/orgs", "repos_url": "https://api.github.com/users/puntonim/repos", "events_url": "https://api.github.com/users/puntonim/events{/privacy}", "received_events_url": "https://api.github.com/users/puntonim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-16T21:28:10Z", "updated_at": "2014-01-22T11:53:04Z", "closed_at": "2014-01-17T00:30:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code provided in the Google OAuth 2 tutorial  (https://requests-oauthlib.readthedocs.org/en/latest/examples/google.html) gives an exception:\n\nraise MissingCodeError(\"Missing code parameter in response.\")\noauthlib.oauth2.rfc6749.errors.MissingCodeError: Missing code parameter in response.\n\nThe problem is not in the web application client that I created with the Google API console, because I wrote another piece of code doing the same thing but using the Python library google-api-python-client and it works.\n\nAny idea?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/101", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/101/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/101/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/101", "id": 24313944, "node_id": "MDU6SXNzdWUyNDMxMzk0NA==", "number": 101, "title": "Question regarding Web app example with OAuth1Workflow", "user": {"login": "newsomc", "id": 79253, "node_id": "MDQ6VXNlcjc5MjUz", "avatar_url": "https://avatars2.githubusercontent.com/u/79253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newsomc", "html_url": "https://github.com/newsomc", "followers_url": "https://api.github.com/users/newsomc/followers", "following_url": "https://api.github.com/users/newsomc/following{/other_user}", "gists_url": "https://api.github.com/users/newsomc/gists{/gist_id}", "starred_url": "https://api.github.com/users/newsomc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newsomc/subscriptions", "organizations_url": "https://api.github.com/users/newsomc/orgs", "repos_url": "https://api.github.com/users/newsomc/repos", "events_url": "https://api.github.com/users/newsomc/events{/privacy}", "received_events_url": "https://api.github.com/users/newsomc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-12-15T16:08:43Z", "updated_at": "2014-01-22T11:46:48Z", "closed_at": "2014-01-04T13:16:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm adapting the GitHub Flask example on RTD to my own use case (the Beatport API). I continue to get the same error when attempting the final step, fetch_access_token: \n\n\"ValueError: Not a valid urlencoded string.\" \n\nI'm wondering if anyone has any pointers?\n\nGist:\n\nhttps://gist.github.com/newsomc/7974765\n\nThanks, \n\nClint\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/99", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/99/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/99/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/99", "id": 23720179, "node_id": "MDU6SXNzdWUyMzcyMDE3OQ==", "number": 99, "title": "Facebook does not return a valid x-www-form-urlencoded response for client_credentials grants.", "user": {"login": "nicksloan", "id": 458971, "node_id": "MDQ6VXNlcjQ1ODk3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/458971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicksloan", "html_url": "https://github.com/nicksloan", "followers_url": "https://api.github.com/users/nicksloan/followers", "following_url": "https://api.github.com/users/nicksloan/following{/other_user}", "gists_url": "https://api.github.com/users/nicksloan/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicksloan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicksloan/subscriptions", "organizations_url": "https://api.github.com/users/nicksloan/orgs", "repos_url": "https://api.github.com/users/nicksloan/repos", "events_url": "https://api.github.com/users/nicksloan/events{/privacy}", "received_events_url": "https://api.github.com/users/nicksloan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-04T14:55:48Z", "updated_at": "2014-01-22T10:37:53Z", "closed_at": "2014-01-22T10:37:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Facebook's client_credentials grants return an unencoded pipe character in the string, which oauthlib.common.urldecode balks at. Since this code is in the Facebook compliance fix, it really ought to actually work with what Facebook sends.\n\nI've filed a bug with Facebook, but until that is resolved I propose we use urllib.parse_qs instead.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/97", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/97/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/97/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/97", "id": 23582014, "node_id": "MDU6SXNzdWUyMzU4MjAxNA==", "number": 97, "title": "Facebook uses a GET request for token request with client_credentials grant.", "user": {"login": "nicksloan", "id": 458971, "node_id": "MDQ6VXNlcjQ1ODk3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/458971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicksloan", "html_url": "https://github.com/nicksloan", "followers_url": "https://api.github.com/users/nicksloan/followers", "following_url": "https://api.github.com/users/nicksloan/following{/other_user}", "gists_url": "https://api.github.com/users/nicksloan/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicksloan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicksloan/subscriptions", "organizations_url": "https://api.github.com/users/nicksloan/orgs", "repos_url": "https://api.github.com/users/nicksloan/repos", "events_url": "https://api.github.com/users/nicksloan/events{/privacy}", "received_events_url": "https://api.github.com/users/nicksloan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-02T16:07:20Z", "updated_at": "2014-01-22T10:39:32Z", "closed_at": "2014-01-22T10:39:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As documented here:\nhttps://developers.facebook.com/docs/facebook-login/access-tokens/#apptokens\n\nThis issue is in reference to\nhttps://github.com/requests/requests-oauthlib/blob/master/requests_oauthlib/oauth2_session.py#L148.\n\nIt should probably be considered with #96, which is another barrier to using the backend client.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/96", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/96/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/96/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/96", "id": 23539710, "node_id": "MDU6SXNzdWUyMzUzOTcxMA==", "number": 96, "title": "BackendApplicationClient can't be used since it's not using parse_request_body_response correctly", "user": {"login": "thedrow", "id": 48936, "node_id": "MDQ6VXNlcjQ4OTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/48936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thedrow", "html_url": "https://github.com/thedrow", "followers_url": "https://api.github.com/users/thedrow/followers", "following_url": "https://api.github.com/users/thedrow/following{/other_user}", "gists_url": "https://api.github.com/users/thedrow/gists{/gist_id}", "starred_url": "https://api.github.com/users/thedrow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thedrow/subscriptions", "organizations_url": "https://api.github.com/users/thedrow/orgs", "repos_url": "https://api.github.com/users/thedrow/repos", "events_url": "https://api.github.com/users/thedrow/events{/privacy}", "received_events_url": "https://api.github.com/users/thedrow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-12-01T17:24:10Z", "updated_at": "2013-12-09T22:15:46Z", "closed_at": "2013-12-04T07:09:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "session.fetch_token('https://foo.bar.com:8001/access_token/', client_id=client_id, client_secret=client_secret)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/omer/.virtualenvs/deployment/local/lib/python2.7/site-packages/requests_oauthlib/oauth2_session.py\", line 160, in fetch_token\n    self._client.parse_request_body_response(r.text, scope=self.scope)\n  File \"/home/omer/.virtualenvs/deployment/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/clients/backend_application.py\", line 156, in parse_request_body_response\n    self.token = parse_token_response(body, scope=scope)\n  File \"/home/omer/.virtualenvs/deployment/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 297, in parse_token_response\n    validate_token_parameters(params, scope)\n  File \"/home/omer/.virtualenvs/deployment/local/lib/python2.7/site-packages/oauthlib/oauth2/rfc6749/parameters.py\", line 310, in validate_token_parameters\n    raise MissingTokenTypeError()\noauthlib.oauth2.rfc6749.errors.MissingTokenTypeError\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/94", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/94/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/94/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/94", "id": 23044461, "node_id": "MDU6SXNzdWUyMzA0NDQ2MQ==", "number": 94, "title": "OAuth1Session needs to re-sign redirected requests so that allow_redirect can function.", "user": {"login": "metatoaster", "id": 372914, "node_id": "MDQ6VXNlcjM3MjkxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/372914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metatoaster", "html_url": "https://github.com/metatoaster", "followers_url": "https://api.github.com/users/metatoaster/followers", "following_url": "https://api.github.com/users/metatoaster/following{/other_user}", "gists_url": "https://api.github.com/users/metatoaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/metatoaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metatoaster/subscriptions", "organizations_url": "https://api.github.com/users/metatoaster/orgs", "repos_url": "https://api.github.com/users/metatoaster/repos", "events_url": "https://api.github.com/users/metatoaster/events{/privacy}", "received_events_url": "https://api.github.com/users/metatoaster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-11-21T04:35:58Z", "updated_at": "2014-06-06T10:58:23Z", "closed_at": "2014-06-06T10:58:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently this is impossible to solve directly from this library as requests itself is at fault, as it does not provide facilities in the `SessionRedirectMixin.resolve_redirects` to call `prepare_auth` on the local `PreparedRequest` object to recalculate the OAuth signatures. This can probably be called after the `prepare_cookies` call.\n\nEdit: can probably be done by overriding the send method so that it calls `prepare_auth` again, but that's hideous.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/92", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/92/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/92/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/92", "id": 21975695, "node_id": "MDU6SXNzdWUyMTk3NTY5NQ==", "number": 92, "title": "facebook compliance fix raises \"ValueError: Not a valid urlencoded string\" when receiving an error", "user": {"login": "nicksloan", "id": 458971, "node_id": "MDQ6VXNlcjQ1ODk3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/458971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicksloan", "html_url": "https://github.com/nicksloan", "followers_url": "https://api.github.com/users/nicksloan/followers", "following_url": "https://api.github.com/users/nicksloan/following{/other_user}", "gists_url": "https://api.github.com/users/nicksloan/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicksloan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicksloan/subscriptions", "organizations_url": "https://api.github.com/users/nicksloan/orgs", "repos_url": "https://api.github.com/users/nicksloan/repos", "events_url": "https://api.github.com/users/nicksloan/events{/privacy}", "received_events_url": "https://api.github.com/users/nicksloan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-11-01T18:50:14Z", "updated_at": "2013-11-10T22:35:13Z", "closed_at": "2013-11-10T22:35:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Facebook returns an access token in a urlencoded format, but on error, it returns a JSON encoded error message.\n\nThe facebook compliance fix attempts to urldecode the response body without any attempt to handle non-urlencoded data, or raise a sensible warning.\n\nThere are a few options to solve this:\n\nWe could check for errors before the compliance fixes are run. This might save us from code duplication, but it seems like the compliance fixes ought to be the first thing to touch the response.\n\nWe could also leave it up to the compliance fixes to handle weird conditions like this. In the facebook case, I would wrap the urldecode bit in a try, and simply return the unaltered response in the exception block.\n\nI think the second solution is the better one. I'll submit a pull request to do just that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/89", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/89/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/89/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/89", "id": 21342537, "node_id": "MDU6SXNzdWUyMTM0MjUzNw==", "number": 89, "title": "The \"Using OAuth1Session\" Twitter example doesn't actually work", "user": {"login": "nhooey", "id": 65458, "node_id": "MDQ6VXNlcjY1NDU4", "avatar_url": "https://avatars1.githubusercontent.com/u/65458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhooey", "html_url": "https://github.com/nhooey", "followers_url": "https://api.github.com/users/nhooey/followers", "following_url": "https://api.github.com/users/nhooey/following{/other_user}", "gists_url": "https://api.github.com/users/nhooey/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhooey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhooey/subscriptions", "organizations_url": "https://api.github.com/users/nhooey/orgs", "repos_url": "https://api.github.com/users/nhooey/repos", "events_url": "https://api.github.com/users/nhooey/events{/privacy}", "received_events_url": "https://api.github.com/users/nhooey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 20112897, "node_id": "MDU6TGFiZWwyMDExMjg5Nw==", "url": "https://api.github.com/repos/requests/requests-oauthlib/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ib-lundgren", "id": 1165819, "node_id": "MDQ6VXNlcjExNjU4MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1165819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ib-lundgren", "html_url": "https://github.com/ib-lundgren", "followers_url": "https://api.github.com/users/ib-lundgren/followers", "following_url": "https://api.github.com/users/ib-lundgren/following{/other_user}", "gists_url": "https://api.github.com/users/ib-lundgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/ib-lundgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ib-lundgren/subscriptions", "organizations_url": "https://api.github.com/users/ib-lundgren/orgs", "repos_url": "https://api.github.com/users/ib-lundgren/repos", "events_url": "https://api.github.com/users/ib-lundgren/events{/privacy}", "received_events_url": "https://api.github.com/users/ib-lundgren/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ib-lundgren", "id": 1165819, "node_id": "MDQ6VXNlcjExNjU4MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1165819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ib-lundgren", "html_url": "https://github.com/ib-lundgren", "followers_url": "https://api.github.com/users/ib-lundgren/followers", "following_url": "https://api.github.com/users/ib-lundgren/following{/other_user}", "gists_url": "https://api.github.com/users/ib-lundgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/ib-lundgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ib-lundgren/subscriptions", "organizations_url": "https://api.github.com/users/ib-lundgren/orgs", "repos_url": "https://api.github.com/users/ib-lundgren/repos", "events_url": "https://api.github.com/users/ib-lundgren/events{/privacy}", "received_events_url": "https://api.github.com/users/ib-lundgren/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2013-10-21T20:40:35Z", "updated_at": "2014-06-06T12:34:28Z", "closed_at": "2014-06-06T12:34:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [Auth1Session example code](https://gist.github.com/nhooey/7090571) mentioned on the [requests-oauthlib documentation page](http://requests-oauthlib.readthedocs.org/en/latest/oauth1_workflow.html) doesn't actually work.\n\nThe twitter response page just shows a number that you're supposed to give back to the client, rather than a URL with `oauth_token` and `verifier` specified in the params. The code then fails with this stack trace:\n\n``` text\nTraceback (most recent call last):\n  File \"oauth_example.py\", line 37, in <module>\n    oauth_tokens = oauth.fetch_access_token(access_token_url)\n  File \"/Users/nhooey/git/github/vine/vineweb/.venv/lib/python2.7/site-packages/requests_oauthlib/oauth1_session.py\",\nline 228, in fetch_access_token\n    token = self._fetch_token(url)\n  File \"/Users/nhooey/git/github/vine/vineweb/.venv/lib/python2.7/site-packages/requests_oauthlib/oauth1_session.py\",\nline 264, in _fetch_token\n    token = dict(urldecode(self.post(url).text))\n  File \"/Users/nhooey/git/github/vine/vineweb/.venv/lib/python2.7/site-packages/oauthlib/common.py\", line 137, in urld\necode\n    raise ValueError('Not a valid urlencoded string.')\nValueError: Not a valid urlencoded string.\n```\n\nBecause the response from Twitter is this:\n\n``` text\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<hash>\n  <error>Required oauth_verifier parameter not provided</error>\n  <request>/oauth/access_token</request>\n</hash>\n```\n\nThe `Using OAuth1 auth helper` example from that page works fine with Twitter, though.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/86", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/86/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/86/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/86", "id": 20511020, "node_id": "MDU6SXNzdWUyMDUxMTAyMA==", "number": 86, "title": "Incompatibility with oauthlib > 0.4.2", "user": {"login": "bdauvergne", "id": 15842, "node_id": "MDQ6VXNlcjE1ODQy", "avatar_url": "https://avatars0.githubusercontent.com/u/15842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bdauvergne", "html_url": "https://github.com/bdauvergne", "followers_url": "https://api.github.com/users/bdauvergne/followers", "following_url": "https://api.github.com/users/bdauvergne/following{/other_user}", "gists_url": "https://api.github.com/users/bdauvergne/gists{/gist_id}", "starred_url": "https://api.github.com/users/bdauvergne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bdauvergne/subscriptions", "organizations_url": "https://api.github.com/users/bdauvergne/orgs", "repos_url": "https://api.github.com/users/bdauvergne/repos", "events_url": "https://api.github.com/users/bdauvergne/events{/privacy}", "received_events_url": "https://api.github.com/users/bdauvergne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-04T09:23:18Z", "updated_at": "2013-10-07T08:21:56Z", "closed_at": "2013-10-07T08:21:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Oauth lib client constructor changed, token is now named access_token, so requests_oauthlib is now incompatible with recent version of authlib (there are maybe other incompatibilites, I did'nt search for more and just installed version 0.4.2)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/85", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/85/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/85/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/85", "id": 20455903, "node_id": "MDU6SXNzdWUyMDQ1NTkwMw==", "number": 85, "title": "Don't piggyback on oauthlib's log scope", "user": {"login": "shazow", "id": 6292, "node_id": "MDQ6VXNlcjYyOTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shazow", "html_url": "https://github.com/shazow", "followers_url": "https://api.github.com/users/shazow/followers", "following_url": "https://api.github.com/users/shazow/following{/other_user}", "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}", "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shazow/subscriptions", "organizations_url": "https://api.github.com/users/shazow/orgs", "repos_url": "https://api.github.com/users/shazow/repos", "events_url": "https://api.github.com/users/shazow/events{/privacy}", "received_events_url": "https://api.github.com/users/shazow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-10-03T14:06:12Z", "updated_at": "2014-06-06T11:13:53Z", "closed_at": "2014-06-06T11:13:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This happens [here](https://github.com/requests/requests-oauthlib/blob/master/requests_oauthlib/oauth2_session.py#L4) and possibly other places:\n\n``` python\nfrom oauthlib.common import log\n\n...\nlog.debug(...)\n```\n\nThis is bad because all the logs show up as coming from oauthlib, whereas some happen actually in oauthlib and some in requests_oauthlib. Differentiating them would be useful for debugging where things are happening.\n\nI suggest using...\n\n``` python\nimport logging\n\nlog = logging.getLogger(__name__)\n\n...\nlog.debug(...)\n```\n\nThis will also allow the user to turn off oauthlib logs but keep requests_oauthlib logs, and vice versa.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/84", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/84/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/84/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/84", "id": 20437059, "node_id": "MDU6SXNzdWUyMDQzNzA1OQ==", "number": 84, "title": "Refresh Tokens + Web App Example?", "user": {"login": "bryanveloso", "id": 1258, "node_id": "MDQ6VXNlcjEyNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1258?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryanveloso", "html_url": "https://github.com/bryanveloso", "followers_url": "https://api.github.com/users/bryanveloso/followers", "following_url": "https://api.github.com/users/bryanveloso/following{/other_user}", "gists_url": "https://api.github.com/users/bryanveloso/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryanveloso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryanveloso/subscriptions", "organizations_url": "https://api.github.com/users/bryanveloso/orgs", "repos_url": "https://api.github.com/users/bryanveloso/repos", "events_url": "https://api.github.com/users/bryanveloso/events{/privacy}", "received_events_url": "https://api.github.com/users/bryanveloso/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 40745004, "node_id": "MDU6TGFiZWw0MDc0NTAwNA==", "url": "https://api.github.com/repos/requests/requests-oauthlib/labels/docs", "name": "docs", "color": "5319e7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2013-10-03T04:44:17Z", "updated_at": "2014-06-06T11:34:52Z", "closed_at": "2014-06-06T11:34:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been trying to wrap my head around refresh tokens and the OAuth2 web example (https://requests-oauthlib.readthedocs.org/en/latest/examples/real_world_example.html). Would it be possible to provide an example usage of refresh tokens in that context? Where in the code it would go, etc?\n\nJust a suggestion! :grin:\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/82", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/82/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/82/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/82", "id": 20296104, "node_id": "MDU6SXNzdWUyMDI5NjEwNA==", "number": 82, "title": "OAuthSession2 ignores `state` param", "user": {"login": "mkorenkov", "id": 643349, "node_id": "MDQ6VXNlcjY0MzM0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/643349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkorenkov", "html_url": "https://github.com/mkorenkov", "followers_url": "https://api.github.com/users/mkorenkov/followers", "following_url": "https://api.github.com/users/mkorenkov/following{/other_user}", "gists_url": "https://api.github.com/users/mkorenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkorenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkorenkov/subscriptions", "organizations_url": "https://api.github.com/users/mkorenkov/orgs", "repos_url": "https://api.github.com/users/mkorenkov/repos", "events_url": "https://api.github.com/users/mkorenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/mkorenkov/received_events", "type": "User", "site_admin": true}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-09-30T22:07:35Z", "updated_at": "2013-10-01T09:20:50Z", "closed_at": "2013-10-01T07:47:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using `state` param to follow the relation between our app and authentication requests. Think of them, as some `uuid` values.\n\nIt is fine by Google ([link](https://developers.google.com/accounts/docs/OAuth2WebServer#handlingtheresponse)):\n_state - any string - Indicates any state which may be useful to your application upon receipt of the response. The Google Authorization Server roundtrips this parameter, so your application receives the same value it sent. Possible uses include redirecting the user to the correct resource in your site, nonces, and cross-site-request-forgery mitigations._\n\nHowever, `OAuthSession2.authorization_url` ignores the value being passed to the constructor, and replaces with a self-generated one ([line 102](https://github.com/requests/requests-oauthlib/blob/master/requests_oauthlib/oauth2_session.py#L102)).\n\n```\ndef authorization_url(self, url, **kwargs):\n    state = self.new_state()\n    return self._client.prepare_request_uri(url,\n            redirect_uri=self.redirect_uri,\n            scope=self.scope,\n            state=state,\n            **kwargs), state\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/81", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/81/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/81/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/81", "id": 20230671, "node_id": "MDU6SXNzdWUyMDIzMDY3MQ==", "number": 81, "title": "OAuth2Session(..., auto_refresh_kwargs) and OAuth2Session.fetch_token(..., **kwargs) serve the same purpose", "user": {"login": "shazow", "id": 6292, "node_id": "MDQ6VXNlcjYyOTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shazow", "html_url": "https://github.com/shazow", "followers_url": "https://api.github.com/users/shazow/followers", "following_url": "https://api.github.com/users/shazow/following{/other_user}", "gists_url": "https://api.github.com/users/shazow/gists{/gist_id}", "starred_url": "https://api.github.com/users/shazow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shazow/subscriptions", "organizations_url": "https://api.github.com/users/shazow/orgs", "repos_url": "https://api.github.com/users/shazow/repos", "events_url": "https://api.github.com/users/shazow/events{/privacy}", "received_events_url": "https://api.github.com/users/shazow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-09-29T15:30:07Z", "updated_at": "2013-10-01T10:52:10Z", "closed_at": "2013-10-01T10:47:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would be nice if they could be formally coupled. Such as maybe rename the former to something like `fetch_token_kwargs`, which can serve as the default if no `fetch_token(..., **kwargs)` are provided as an override?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/79", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/79/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/79/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/79", "id": 20038341, "node_id": "MDU6SXNzdWUyMDAzODM0MQ==", "number": 79, "title": "Cleanup file names.", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-09-25T12:27:32Z", "updated_at": "2013-09-25T13:39:06Z", "closed_at": "2013-09-25T13:39:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It seems to me we should rename `core.py` to `oauth1_auth.py` to match the naming scheme of the rest of the files in the library.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/requests/requests-oauthlib/issues/78", "repository_url": "https://api.github.com/repos/requests/requests-oauthlib", "labels_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/78/comments", "events_url": "https://api.github.com/repos/requests/requests-oauthlib/issues/78/events", "html_url": "https://github.com/requests/requests-oauthlib/issues/78", "id": 20038306, "node_id": "MDU6SXNzdWUyMDAzODMwNg==", "number": 78, "title": "Push new release to PyPI", "user": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Lukasa", "id": 1382556, "node_id": "MDQ6VXNlcjEzODI1NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1382556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lukasa", "html_url": "https://github.com/Lukasa", "followers_url": "https://api.github.com/users/Lukasa/followers", "following_url": "https://api.github.com/users/Lukasa/following{/other_user}", "gists_url": "https://api.github.com/users/Lukasa/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lukasa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lukasa/subscriptions", "organizations_url": "https://api.github.com/users/Lukasa/orgs", "repos_url": "https://api.github.com/users/Lukasa/repos", "events_url": "https://api.github.com/users/Lukasa/events{/privacy}", "received_events_url": "https://api.github.com/users/Lukasa/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2013-09-25T12:26:54Z", "updated_at": "2013-09-29T14:05:25Z", "closed_at": "2013-09-29T11:47:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "With 2.0 support!\n", "performed_via_github_app": null, "score": 1.0}]}