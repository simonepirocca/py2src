{"total_count": 90, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/296", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/296/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/296/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/296", "id": 627154611, "node_id": "MDU6SXNzdWU2MjcxNTQ2MTE=", "number": 296, "title": "Properly Using Custom Generator for Binary Classifier!", "user": {"login": "Lincoln93", "id": 57633792, "node_id": "MDQ6VXNlcjU3NjMzNzky", "avatar_url": "https://avatars0.githubusercontent.com/u/57633792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lincoln93", "html_url": "https://github.com/Lincoln93", "followers_url": "https://api.github.com/users/Lincoln93/followers", "following_url": "https://api.github.com/users/Lincoln93/following{/other_user}", "gists_url": "https://api.github.com/users/Lincoln93/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lincoln93/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lincoln93/subscriptions", "organizations_url": "https://api.github.com/users/Lincoln93/orgs", "repos_url": "https://api.github.com/users/Lincoln93/repos", "events_url": "https://api.github.com/users/Lincoln93/events{/privacy}", "received_events_url": "https://api.github.com/users/Lincoln93/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-29T10:07:13Z", "updated_at": "2020-05-29T20:11:47Z", "closed_at": "2020-05-29T20:11:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've a data set of the following format. It's a binary classification problem (0,1). For this I've made a custom generator down below but couldn't understand how should I properly encode the label there.\r\n\r\n```\r\n- images/\r\n\t- a.png\r\n\t- b.png\r\n\t- c.png\r\n- images.csv\r\n```\r\n|img_Id| -| -| label|\r\n|----|----|----|----|\r\n|a.png| -| -| 1|\r\n|b.png| -| -| 0|\r\n|c.png| -| -| 1|\r\n\r\n### Generator\r\n\r\n```python\r\nclass generate(Sequence):\r\n\tdef __init__(self, data, dim, shuffle, batch_size):\r\n\t\tself.data = data\r\n\t\t.....\r\n\t\r\n\tdef __len__(self):\r\n\t\treturn int(np.floor(len(self.data)/self.batch_size))\r\n\r\n  def __getitem__(self, index):\r\n        batch_idx = self.indices[index*self.batch_size:(index+1)*self.batch_size]\r\n        idx = [self.list_idx[k] for k in batch_idx]\r\n        Data = np.empty((self.batch_size, *self.dim, 1))\r\n\t\tTarget = np.empty((self.batch_size, 1), dtype = int)\r\n        \r\n        for i, k in enumerate(idx):\r\n            # load the image file using cv2\r\n            image = cv2.imread(self.data['image_name'][k])\r\n            image = cv2.resize(image, self.dim) \r\n            # expand the axises \r\n            Data[i,:, :, :] =  image\r\n\t\t\tTarget[i,:] = ??????????????????????????????\r\n\r\n        return Data Target\r\n    \r\n    def on_epoch_end(self):\r\n        -----\r\n```\r\n\r\n### Call\r\n\r\n```python\r\ngenerator = generate(df, ....)\r\nimg, lable = generator[0]\r\nimg <- OK\r\nlabel <- ?????????????\r\n```\r\n\r\nThe model should output with `sigmoid` activation on the last layer. How properly I can encode label here and match properly with the image file?? Is there any more convenient way to do this??\r\n\r\n### Additional Query:\r\n1. Why sometimes `predict_generator` doesn't return all samples during operation. [Asked here](https://stackoverflow.com/questions/48551158/keras-predict-generator-not-returning-correct-number-of-samples) but I din't get the answer. :( \r\n\r\n2. I am trying to take this issue as a learning opportunity. So just one more related question. If My `images.label` attributes contains multi-classes, what should I changes to make it work. Or, multi-label? \r\n\r\nThanks in advance. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/291", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/291/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/291/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/291", "id": 613249703, "node_id": "MDU6SXNzdWU2MTMyNDk3MDM=", "number": 291, "title": "flow functions do not pass on dtype argument", "user": {"login": "eyaler", "id": 4436747, "node_id": "MDQ6VXNlcjQ0MzY3NDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4436747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eyaler", "html_url": "https://github.com/eyaler", "followers_url": "https://api.github.com/users/eyaler/followers", "following_url": "https://api.github.com/users/eyaler/following{/other_user}", "gists_url": "https://api.github.com/users/eyaler/gists{/gist_id}", "starred_url": "https://api.github.com/users/eyaler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eyaler/subscriptions", "organizations_url": "https://api.github.com/users/eyaler/orgs", "repos_url": "https://api.github.com/users/eyaler/repos", "events_url": "https://api.github.com/users/eyaler/events{/privacy}", "received_events_url": "https://api.github.com/users/eyaler/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-06T11:32:00Z", "updated_at": "2020-05-06T12:00:34Z", "closed_at": "2020-05-06T12:00:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "in image_data_generator flow, flow_from_directory, flow_from_dataframe get dtype argument but call NumpyIteractor, DirectoryIterator, DataframeIterator with self.dtype instead of dtype", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/272", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/272/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/272/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/272", "id": 545707376, "node_id": "MDU6SXNzdWU1NDU3MDczNzY=", "number": 272, "title": "def flow_from_directory\uff0ci want to know more about source code how to return lable\uff0cbut i can not find source code ,only Arguments.", "user": {"login": "mk123qwe", "id": 32999545, "node_id": "MDQ6VXNlcjMyOTk5NTQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/32999545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mk123qwe", "html_url": "https://github.com/mk123qwe", "followers_url": "https://api.github.com/users/mk123qwe/followers", "following_url": "https://api.github.com/users/mk123qwe/following{/other_user}", "gists_url": "https://api.github.com/users/mk123qwe/gists{/gist_id}", "starred_url": "https://api.github.com/users/mk123qwe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mk123qwe/subscriptions", "organizations_url": "https://api.github.com/users/mk123qwe/orgs", "repos_url": "https://api.github.com/users/mk123qwe/repos", "events_url": "https://api.github.com/users/mk123qwe/events{/privacy}", "received_events_url": "https://api.github.com/users/mk123qwe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-06T12:41:38Z", "updated_at": "2020-01-06T13:45:43Z", "closed_at": "2020-01-06T13:45:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "def flow_from_directory\uff0ci want to know more about source code\r\nhow to return lable\uff0cbut i can not find source code ,only Arguments.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/267", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/267/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/267/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/267", "id": 538430773, "node_id": "MDU6SXNzdWU1Mzg0MzA3NzM=", "number": 267, "title": "\"classes\" not working on flow_from_dataframe? ", "user": {"login": "qinst64", "id": 16003088, "node_id": "MDQ6VXNlcjE2MDAzMDg4", "avatar_url": "https://avatars3.githubusercontent.com/u/16003088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qinst64", "html_url": "https://github.com/qinst64", "followers_url": "https://api.github.com/users/qinst64/followers", "following_url": "https://api.github.com/users/qinst64/following{/other_user}", "gists_url": "https://api.github.com/users/qinst64/gists{/gist_id}", "starred_url": "https://api.github.com/users/qinst64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qinst64/subscriptions", "organizations_url": "https://api.github.com/users/qinst64/orgs", "repos_url": "https://api.github.com/users/qinst64/repos", "events_url": "https://api.github.com/users/qinst64/events{/privacy}", "received_events_url": "https://api.github.com/users/qinst64/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-16T14:01:34Z", "updated_at": "2019-12-31T14:46:01Z", "closed_at": "2019-12-31T14:46:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/16003088/70912694-76736280-204f-11ea-8ecf-38b9fb957636.png)\r\nThe parameter `classes` of `flow_from_dataframe`  is working as above documentation  \r\nas [the code](https://github.com/keras-team/keras-preprocessing/blob/master/keras_preprocessing/image/dataframe_iterator.py#L243) dismisses order\r\n```python\r\n        if classes:\r\n            classes = set(classes)  # sort and prepare for membership lookup\r\n            df[y_col] = df[y_col].apply(lambda x: remove_classes(x, classes))\r\n        else:\r\n            classes = set()\r\n            for v in df[y_col]:\r\n                if isinstance(v, (list, tuple)):\r\n                    classes.update(v)\r\n                else:\r\n                    classes.add(v)\r\n        return df.dropna(subset=[y_col]), sorted(classes)\r\n```\r\nReproducible example:\r\n[https://github.com/keras-team/keras/issues/13637](https://github.com/keras-team/keras/issues/13637)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/260", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/260/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/260/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/260", "id": 524541278, "node_id": "MDU6SXNzdWU1MjQ1NDEyNzg=", "number": 260, "title": "OSError: [Errno 24] Too many open files when using `load_img`", "user": {"login": "duhaime", "id": 4801116, "node_id": "MDQ6VXNlcjQ4MDExMTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4801116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/duhaime", "html_url": "https://github.com/duhaime", "followers_url": "https://api.github.com/users/duhaime/followers", "following_url": "https://api.github.com/users/duhaime/following{/other_user}", "gists_url": "https://api.github.com/users/duhaime/gists{/gist_id}", "starred_url": "https://api.github.com/users/duhaime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/duhaime/subscriptions", "organizations_url": "https://api.github.com/users/duhaime/orgs", "repos_url": "https://api.github.com/users/duhaime/repos", "events_url": "https://api.github.com/users/duhaime/events{/privacy}", "received_events_url": "https://api.github.com/users/duhaime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-18T18:30:17Z", "updated_at": "2020-07-02T12:25:31Z", "closed_at": "2020-07-02T12:25:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please make sure that the boxes below are checked before you submit your issue.\r\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.\r\n\r\nThank you!\r\n\r\n- [x] Check that you are up-to-date with the master branch of keras-preprocessing. You can update with:\r\n`pip install git+git://github.com/keras-team/keras-preprocessing.git --upgrade --no-deps`\r\n\r\n- [x] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).\r\n\r\n```python\r\nfrom keras.preprocessing.image import load_img, save_img, array_to_img\r\nimport numpy as np\r\n\r\nim = array_to_img(np.random.rand(300,300,3))\r\nsave_img('im.jpg', im)\r\n\r\n# read in the image lots of times\r\n# throws OSError: [Errno 24] Too many open files: 'im.jpg'\r\nimages = [load_img('im.jpg') for i in range(2**16)]\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/259", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/259/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/259/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/259", "id": 523623440, "node_id": "MDU6SXNzdWU1MjM2MjM0NDA=", "number": 259, "title": "TimeseriesGenerator - how to add third dimension for predict_generator() function to work?", "user": {"login": "HoyaTrader", "id": 56007314, "node_id": "MDQ6VXNlcjU2MDA3MzE0", "avatar_url": "https://avatars2.githubusercontent.com/u/56007314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HoyaTrader", "html_url": "https://github.com/HoyaTrader", "followers_url": "https://api.github.com/users/HoyaTrader/followers", "following_url": "https://api.github.com/users/HoyaTrader/following{/other_user}", "gists_url": "https://api.github.com/users/HoyaTrader/gists{/gist_id}", "starred_url": "https://api.github.com/users/HoyaTrader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HoyaTrader/subscriptions", "organizations_url": "https://api.github.com/users/HoyaTrader/orgs", "repos_url": "https://api.github.com/users/HoyaTrader/repos", "events_url": "https://api.github.com/users/HoyaTrader/events{/privacy}", "received_events_url": "https://api.github.com/users/HoyaTrader/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-15T18:31:30Z", "updated_at": "2019-11-19T00:18:12Z", "closed_at": "2019-11-19T00:18:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello - I am trying to use TimeseriesGenerator to take univariate data (as numpy arrays of shape (samples, 1)), to train an LSTM, but I can't seem to get the third dimension to appear in the TimeseriesGenerator object.  I am trying a number of things, like making data and target different objects with the same data, playing around with different timesteps, etc., but nothing seems to add a third dimension as needed to train a model or make predictions.\r\n\r\nAny help would be much appreciated.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/258", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/258/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/258/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/258", "id": 520699498, "node_id": "MDU6SXNzdWU1MjA2OTk0OTg=", "number": 258, "title": "    x = self.preprocessing_function(x) TypeError: 'str' object is not callable", "user": {"login": "gjamesli2126", "id": 46471838, "node_id": "MDQ6VXNlcjQ2NDcxODM4", "avatar_url": "https://avatars1.githubusercontent.com/u/46471838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gjamesli2126", "html_url": "https://github.com/gjamesli2126", "followers_url": "https://api.github.com/users/gjamesli2126/followers", "following_url": "https://api.github.com/users/gjamesli2126/following{/other_user}", "gists_url": "https://api.github.com/users/gjamesli2126/gists{/gist_id}", "starred_url": "https://api.github.com/users/gjamesli2126/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gjamesli2126/subscriptions", "organizations_url": "https://api.github.com/users/gjamesli2126/orgs", "repos_url": "https://api.github.com/users/gjamesli2126/repos", "events_url": "https://api.github.com/users/gjamesli2126/events{/privacy}", "received_events_url": "https://api.github.com/users/gjamesli2126/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-11T02:02:46Z", "updated_at": "2019-11-11T06:38:22Z", "closed_at": "2019-11-11T06:38:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please make sure that the boxes below are checked before you submit your issue.\r\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.\r\n\r\nThank you!\r\n\r\n- [v ] Check that you are up-to-date with the master branch of keras-preprocessing. You can update with:\r\n`pip install git+git://github.com/keras-team/keras-preprocessing.git --upgrade --no-deps`\r\n\r\n- [ ] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).\r\nfrom keras.models import load_model\r\n    from keras.preprocessing.image import ImageDataGenerator\r\n    test_datagen=ImageDataGenerator(rescale=1./255,preprocessing_function=\"gray_to_rgb\")\r\n    test_generator=test_datagen.flow_from_directory(\r\n        directory=data_path,\r\n        target_size=(256,256),\r\n        color_mode=\"rgb\",\r\n        shuffle=False,# keep data in same order as label\r\n        class_mode=\"categorical\",\r\n        batch_size=16)\r\n    print(\"test_generator\",test_generator)\r\n    model=load_model(model_path)\r\n\r\n    probability=model.predict_generator(test_generator,steps=total_predict_data_number)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/255", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/255/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/255/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/255", "id": 508432642, "node_id": "MDU6SXNzdWU1MDg0MzI2NDI=", "number": 255, "title": "flow_from_dataframe with \"sparse\" class_mode: wrong docs or implementation", "user": {"login": "lntsmn", "id": 8310863, "node_id": "MDQ6VXNlcjgzMTA4NjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/8310863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lntsmn", "html_url": "https://github.com/lntsmn", "followers_url": "https://api.github.com/users/lntsmn/followers", "following_url": "https://api.github.com/users/lntsmn/following{/other_user}", "gists_url": "https://api.github.com/users/lntsmn/gists{/gist_id}", "starred_url": "https://api.github.com/users/lntsmn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lntsmn/subscriptions", "organizations_url": "https://api.github.com/users/lntsmn/orgs", "repos_url": "https://api.github.com/users/lntsmn/repos", "events_url": "https://api.github.com/users/lntsmn/events{/privacy}", "received_events_url": "https://api.github.com/users/lntsmn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-17T12:11:45Z", "updated_at": "2019-10-17T14:24:35Z", "closed_at": "2019-10-17T12:34:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the documentation of `ImageDataGenerator.flow_from_dataframe` and `DataFrameIterator`\r\n```\r\n            class_mode: one of \"binary\", \"categorical\", \"input\", \"multi_output\",\r\n                \"raw\", sparse\" or None. Default: \"categorical\".\r\n                Mode for yielding the targets:\r\n                - `\"binary\"`: 1D NumPy array of binary labels,\r\n                - `\"categorical\"`: 2D NumPy array of one-hot encoded labels.\r\n                    Supports multi-label output.\r\n                - `\"input\"`: images identical to input images (mainly used to\r\n                    work with autoencoders),\r\n                - `\"multi_output\"`: list with the values of the different columns,\r\n                - `\"raw\"`: NumPy array of values in `y_col` column(s),\r\n                - `\"sparse\"`: 1D NumPy array of integer labels,\r\n                - `None`, no targets are returned (the generator will only yield\r\n                    batches of image data, which is useful to use in\r\n                    `model.predict_generator()`).\r\n```\r\nHowever, line 129 of `dataframe_iterator.py` calls\r\n```\r\n        self._check_params(df, x_col, y_col, weight_col, classes)\r\n```\r\nand when `\"sparse\"` is selected the code\r\n```\r\n        if self.class_mode in {'binary', 'sparse'}:\r\n            if not all(df[y_col].apply(lambda x: isinstance(x, str))):\r\n                raise TypeError('If class_mode=\"{}\", y_col=\"{}\" column '\r\n                                'values must be strings.'\r\n                                .format(self.class_mode, y_col))\r\n```\r\nso the integers expected according to the docs cause a `TypeError`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/250", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/250/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/250/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/250", "id": 504324863, "node_id": "MDU6SXNzdWU1MDQzMjQ4NjM=", "number": 250, "title": "Unable to get tests to use alterations to keras_preprocessing: contributor's guide needed", "user": {"login": "rjurney", "id": 42149, "node_id": "MDQ6VXNlcjQyMTQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/42149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rjurney", "html_url": "https://github.com/rjurney", "followers_url": "https://api.github.com/users/rjurney/followers", "following_url": "https://api.github.com/users/rjurney/following{/other_user}", "gists_url": "https://api.github.com/users/rjurney/gists{/gist_id}", "starred_url": "https://api.github.com/users/rjurney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rjurney/subscriptions", "organizations_url": "https://api.github.com/users/rjurney/orgs", "repos_url": "https://api.github.com/users/rjurney/repos", "events_url": "https://api.github.com/users/rjurney/events{/privacy}", "received_events_url": "https://api.github.com/users/rjurney/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1191572064, "node_id": "MDU6TGFiZWwxMTkxNTcyMDY0", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/text", "name": "text", "color": "fbca04", "default": false, "description": "Related to text"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-08T23:11:36Z", "updated_at": "2019-10-17T20:46:58Z", "closed_at": "2019-10-10T06:16:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running master and I have altered the code for Tokenizer.fit_on_texts to add a parameter. I run the unit tests, and my edits have no effect. I tried installing the package and still my edits have no effect. A contributor's guide would be helpful, and if you tell me how to run the tests I will start one.\r\n\r\nI am running the tests via pytest 5.1.1 in Anaconda Python on Mac OS X.\r\n\r\n- [x] Check that you are up-to-date with the master branch of keras-preprocessing. You can update with:\r\n`pip install git+git://github.com/keras-team/keras-preprocessing.git --upgrade --no-deps`\r\n\r\n- [x] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/245", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/245/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/245/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/245", "id": 499126941, "node_id": "MDU6SXNzdWU0OTkxMjY5NDE=", "number": 245, "title": "Scaling logic is weird / arbitrary", "user": {"login": "rragundez", "id": 16643700, "node_id": "MDQ6VXNlcjE2NjQzNzAw", "avatar_url": "https://avatars2.githubusercontent.com/u/16643700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rragundez", "html_url": "https://github.com/rragundez", "followers_url": "https://api.github.com/users/rragundez/followers", "following_url": "https://api.github.com/users/rragundez/following{/other_user}", "gists_url": "https://api.github.com/users/rragundez/gists{/gist_id}", "starred_url": "https://api.github.com/users/rragundez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rragundez/subscriptions", "organizations_url": "https://api.github.com/users/rragundez/orgs", "repos_url": "https://api.github.com/users/rragundez/repos", "events_url": "https://api.github.com/users/rragundez/events{/privacy}", "received_events_url": "https://api.github.com/users/rragundez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-26T21:32:45Z", "updated_at": "2019-09-30T14:06:43Z", "closed_at": "2019-09-30T14:06:43Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The scaling logic in [`array_to_img`](https://github.com/keras-team/keras-preprocessing/blob/master/keras_preprocessing/image/utils.py#L265) seems to be a bit strange.\r\n\r\nI was expecting this parameter to always rescale the pixel values such that the minimum vaalue is 0 and the  maximum value is 255. That is consistent with best practices scaling of pixel values. Instead the logic looks like:\r\n```\r\n        x = x + max(-np.min(x), 0)\r\n        x_max = np.max(x)\r\n        if x_max != 0:\r\n            x /= x_max\r\n        x *= 255\r\n```\r\nThis produces weird and in my opinion unexpected results:\r\n\r\n- if any pixel value is negative it will indeed scale the image with minimum value of 0 and maximum of 255.\r\n- if no pixel value is negative then it will scale the image such that the minimum value remains the same but the maximum is 255... this losses any proportionality or intuition on what is doing.\r\n\r\nI was going to make a PR directly butt perhaps there is some reason I am not seeing, even though the PR is a small  change. Specifically:\r\n`x = x + max(-np.min(x), 0)` for `x = x - np.min(x)`\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/241", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/241/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/241/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/241", "id": 494427908, "node_id": "MDU6SXNzdWU0OTQ0Mjc5MDg=", "number": 241, "title": "Keras flow from dataframe: IndexError: list index out of range in keras preprocessing Iterator", "user": {"login": "ShivamPanchal", "id": 22718463, "node_id": "MDQ6VXNlcjIyNzE4NDYz", "avatar_url": "https://avatars3.githubusercontent.com/u/22718463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShivamPanchal", "html_url": "https://github.com/ShivamPanchal", "followers_url": "https://api.github.com/users/ShivamPanchal/followers", "following_url": "https://api.github.com/users/ShivamPanchal/following{/other_user}", "gists_url": "https://api.github.com/users/ShivamPanchal/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShivamPanchal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShivamPanchal/subscriptions", "organizations_url": "https://api.github.com/users/ShivamPanchal/orgs", "repos_url": "https://api.github.com/users/ShivamPanchal/repos", "events_url": "https://api.github.com/users/ShivamPanchal/events{/privacy}", "received_events_url": "https://api.github.com/users/ShivamPanchal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-17T06:30:45Z", "updated_at": "2020-06-16T09:25:42Z", "closed_at": "2019-09-17T17:31:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I loaded the data from kaggle kernel to my machine for reprodicing, now the code is not working, but works on the keras on same python environment.\r\n\r\nHere is the code and the bug.\r\n\r\n```\r\ndef flow_from_dataframe(img_data_gen, in_df, path_col, y_col, **dflow_args):\r\n    base_dir = os.path.dirname(in_df[[path_col]].values[0])\r\n    print('## Ignore next message from keras, values are replaced anyways')\r\n    df_gen = img_data_gen.flow_from_directory(base_dir, \r\n                                     class_mode = 'sparse',\r\n                                    **dflow_args)\r\n    df_gen.filenames = in_df[path_col].values\r\n    df_gen.classes = np.stack(in_df[y_col].values)\r\n    df_gen.samples = in_df.shape[0]\r\n    df_gen.n = in_df.shape[0]\r\n    df_gen._set_index_array()\r\n    df_gen.directory = '' # since we have the full path\r\n    print('Reinserting dataframe: {} images'.format(in_df.shape[0]))\r\n    return df_gen\r\n\r\n\r\ntrain_gen = flow_from_dataframe(core_idg, train_df, \r\n                             path_col = 'path',\r\n                            y_col = 'disease_vec', \r\n                            target_size = IMG_SIZE,\r\n                             color_mode = 'rgb',\r\n                            batch_size = 32)\r\n\r\nvalid_gen = flow_from_dataframe(core_idg, valid_df, \r\n                             path_col = 'path',\r\n                            y_col = 'disease_vec', \r\n                            target_size = IMG_SIZE,\r\n                             color_mode = 'rgb',\r\n                            batch_size = 256) # we can use much larger batches for evaluation\r\n# used a fixed dataset for evaluating the algorithm\r\ntest_X, test_Y = next(flow_from_dataframe(core_idg, \r\n                               valid_df, \r\n                             path_col = 'path',\r\n                            y_col = 'disease_vec', \r\n                            target_size = IMG_SIZE,\r\n                             color_mode = 'rgb',\r\n                            batch_size = 1024)) # one big batch\r\n\r\nt_x, t_y = next(train_gen)\r\nfig, m_axs = plt.subplots(4, 4, figsize = (16, 16))\r\n```\r\n\r\nI am able to see the paths and path lists, but not sure, where it is coming from.\r\n\r\n\r\n```\r\nFound 0 images belonging to 0 classes.\r\nReinserting dataframe: 10000 images\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 181, in <module>\r\n    batch_size = 32)) # one big batch\r\n  File \"/home/user/.conda/envs/test_env/lib/python3.6/site-packages/keras_prepro         cessing/image/iterator.py\", line 104, in __next__\r\n    return self.next(*args, **kwargs)\r\n  File \"/home/user/.conda/envs/test_env/lib/python3.6/site-packages/keras_prepro         cessing/image/iterator.py\", line 116, in next\r\n    return self._get_batches_of_transformed_samples(index_array)\r\n  File \"/home/user/.conda/envs/test_env/lib/python3.6/site-packages/keras_prepro         cessing/image/iterator.py\", line 227, in _get_batches_of_transformed_samples\r\n    img = load_img(filepaths[j],\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/240", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/240/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/240/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/240", "id": 492201585, "node_id": "MDU6SXNzdWU0OTIyMDE1ODU=", "number": 240, "title": "docs(image-generator): clarify 'classes' argument in .flow_from_dataframe", "user": {"login": "thetric", "id": 19861998, "node_id": "MDQ6VXNlcjE5ODYxOTk4", "avatar_url": "https://avatars0.githubusercontent.com/u/19861998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thetric", "html_url": "https://github.com/thetric", "followers_url": "https://api.github.com/users/thetric/followers", "following_url": "https://api.github.com/users/thetric/following{/other_user}", "gists_url": "https://api.github.com/users/thetric/gists{/gist_id}", "starred_url": "https://api.github.com/users/thetric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thetric/subscriptions", "organizations_url": "https://api.github.com/users/thetric/orgs", "repos_url": "https://api.github.com/users/thetric/repos", "events_url": "https://api.github.com/users/thetric/events{/privacy}", "received_events_url": "https://api.github.com/users/thetric/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-11T12:17:20Z", "updated_at": "2019-09-17T17:11:50Z", "closed_at": "2019-09-17T13:18:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think the behavior of the `classes` argument of [`ImageDataGenerator.flow_from_dataframe`](https://keras.io/preprocessing/image/#flow_from_dataframe) is a bit confusing. The `DataFrameIterator` internally sorts the user defined classes and mixes up the generated labels:\r\n\r\n```py\r\nimport pandas as pd\r\nfrom keras_preprocessing.image import ImageDataGenerator\r\n\r\ndf = pd.DataFrame(data={'filename': ['dog.jpg', 'cat.jpg'], 'class': ['dog', 'cat']})\r\nCLASSES = ['dog', 'cat']\r\nEXPECTED_LABELS = [0, 1]\r\ngen = ImageDataGenerator().flow_from_dataframe(df, classes=CLASSES, class_mode='binary')\r\nprint(\"expected labels: {}\".format(EXPECTED_LABELS))\r\nprint(\"actual labels: {}\".format(gen.labels))\r\nassert gen.labels == EXPECTED_LABELS\r\n```\r\n\r\noutput:\r\n```\r\nFound 2 validated image filenames belonging to 2 classes.\r\nexpected labels: [0, 1]\r\nactual labels: [1, 0]\r\nTraceback (most recent call last):\r\n  File \"keras-idg-bug.py\", line 10, in <module>\r\n    assert gen.labels == EXPECTED_LABELS\r\nAssertionError\r\n```\r\n\r\nAnother point is that the iterator silently drops rows from the dataframe if the class is not in the `classes` argument:\r\n\r\n```py\r\nimport pandas as pd\r\nfrom keras_preprocessing.image import ImageDataGenerator\r\n\r\ndf = pd.DataFrame(data={'filename': ['dog.jpg', 'horse.jpg'], 'class': ['dog', 'horse']})\r\nCLASSES = ['dog', 'cat']\r\ngen = ImageDataGenerator().flow_from_dataframe(df, classes=CLASSES, class_mode='binary')\r\nprint(\"actual labels: {}\".format(gen.labels))\r\n```\r\n\r\n```\r\nFound 1 validated image filenames belonging to 2 classes.\r\nactual labels: [1]\r\n```\r\n\r\nThis behavior should be mentioned in the API docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/239", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/239/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/239/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/239", "id": 491140527, "node_id": "MDU6SXNzdWU0OTExNDA1Mjc=", "number": 239, "title": "Images with bit depth > 8 (depth sensor or medical images)", "user": {"login": "dibenedetto", "id": 709589, "node_id": "MDQ6VXNlcjcwOTU4OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/709589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dibenedetto", "html_url": "https://github.com/dibenedetto", "followers_url": "https://api.github.com/users/dibenedetto/followers", "following_url": "https://api.github.com/users/dibenedetto/following{/other_user}", "gists_url": "https://api.github.com/users/dibenedetto/gists{/gist_id}", "starred_url": "https://api.github.com/users/dibenedetto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dibenedetto/subscriptions", "organizations_url": "https://api.github.com/users/dibenedetto/orgs", "repos_url": "https://api.github.com/users/dibenedetto/repos", "events_url": "https://api.github.com/users/dibenedetto/events{/privacy}", "received_events_url": "https://api.github.com/users/dibenedetto/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-09-09T14:42:46Z", "updated_at": "2019-09-26T18:11:32Z", "closed_at": "2019-09-26T18:11:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "grayscale images with bit depth > 8 (think about depth sensor or medical images) are automatically converted to 8 bit instead of keeping the most adequate representation:\r\n\r\n`if` color_mode == 'grayscale':\r\n        if img.mode != 'L':\r\n            img = img.convert('L')`\r\n\r\nPIL images with mode == 'I' (capital i) are actually 32bit integer images, and should not be shrinked down to 8 bit, thus keeping all the information.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/238", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/238/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/238/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/238", "id": 487895327, "node_id": "MDU6SXNzdWU0ODc4OTUzMjc=", "number": 238, "title": "Can multi-label images be loaded?", "user": {"login": "kingdsz", "id": 38489030, "node_id": "MDQ6VXNlcjM4NDg5MDMw", "avatar_url": "https://avatars2.githubusercontent.com/u/38489030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kingdsz", "html_url": "https://github.com/kingdsz", "followers_url": "https://api.github.com/users/kingdsz/followers", "following_url": "https://api.github.com/users/kingdsz/following{/other_user}", "gists_url": "https://api.github.com/users/kingdsz/gists{/gist_id}", "starred_url": "https://api.github.com/users/kingdsz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kingdsz/subscriptions", "organizations_url": "https://api.github.com/users/kingdsz/orgs", "repos_url": "https://api.github.com/users/kingdsz/repos", "events_url": "https://api.github.com/users/kingdsz/events{/privacy}", "received_events_url": "https://api.github.com/users/kingdsz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-01T14:56:07Z", "updated_at": "2019-09-17T17:04:13Z", "closed_at": "2019-09-17T17:04:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm making a group emotion prediction. A picture contains two tags, one of which is category [positive, negative, neutral], and the others is cohesion score\uff0cthis is numerical data. How should I load my image with keras? If I can't load images with keras, how do you suggest I load images? Tf. data. Datasets?\r\n\r\nThank you for answering my question.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/237", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/237/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/237/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/237", "id": 485020967, "node_id": "MDU6SXNzdWU0ODUwMjA5Njc=", "number": 237, "title": "Is Keras ImageDataGenerator thread safe?", "user": {"login": "ahnchive", "id": 40485859, "node_id": "MDQ6VXNlcjQwNDg1ODU5", "avatar_url": "https://avatars0.githubusercontent.com/u/40485859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahnchive", "html_url": "https://github.com/ahnchive", "followers_url": "https://api.github.com/users/ahnchive/followers", "following_url": "https://api.github.com/users/ahnchive/following{/other_user}", "gists_url": "https://api.github.com/users/ahnchive/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahnchive/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahnchive/subscriptions", "organizations_url": "https://api.github.com/users/ahnchive/orgs", "repos_url": "https://api.github.com/users/ahnchive/repos", "events_url": "https://api.github.com/users/ahnchive/events{/privacy}", "received_events_url": "https://api.github.com/users/ahnchive/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-26T03:10:27Z", "updated_at": "2019-09-20T15:43:17Z", "closed_at": "2019-09-20T15:43:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the latest version of keras (2.2.4) and keras-preprocessing (1.10.0) and trying to use ImageDataGenerator with multiprocessing and multi worker features. But when I add more than one workers, it outputs warnings that it may duplicate the data as below.\r\n\r\n\r\n> Using a generator with use_multiprocessing=True and multiple workers may duplicate your data. Please consider using the keras.utils.Sequence class. UserWarning('Using a generator with use_multiprocessing=True\r\n\r\nWhen I looked at the source code, the Iterator of ImageDataGenerator actually inherits the sequence class. Then is this warning just a bug that I can ignore? Can you confirm that keras ImageDataGenerator is thread safe?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/236", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/236/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/236/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/236", "id": 484079678, "node_id": "MDU6SXNzdWU0ODQwNzk2Nzg=", "number": 236, "title": "ImageDagaGenerator sometimes returns mismatched img/mask", "user": {"login": "Adman", "id": 865063, "node_id": "MDQ6VXNlcjg2NTA2Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/865063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Adman", "html_url": "https://github.com/Adman", "followers_url": "https://api.github.com/users/Adman/followers", "following_url": "https://api.github.com/users/Adman/following{/other_user}", "gists_url": "https://api.github.com/users/Adman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Adman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Adman/subscriptions", "organizations_url": "https://api.github.com/users/Adman/orgs", "repos_url": "https://api.github.com/users/Adman/repos", "events_url": "https://api.github.com/users/Adman/events{/privacy}", "received_events_url": "https://api.github.com/users/Adman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-22T15:53:28Z", "updated_at": "2019-11-19T10:07:25Z", "closed_at": "2019-11-19T09:43:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'm working on image segmentation and using 1keras_preprocessing 1.0.2` and `keras 2.2.2`. When I'm trying to feed the model with ImageDataGenerator and do horizontal flip augmentation, sometimes the image is flipped and the mask is being kept unchanged. This happens with batch size = 2, but with batch size = 1 the issue does not occur. Could you give me an advice on how to fix that? Thanks\r\n\r\n- [x] Check that you are up-to-date with the master branch of keras-preprocessing. You can update with:\r\n`pip install git+git://github.com/keras-team/keras-preprocessing.git --upgrade --no-deps`\r\n\r\n```python\r\ndef train_generator(batch_size, train_path, image_folder, mask_folder,\r\n                    img_target_size=(480, 640), augs={}, tohsv=False):\r\n    image_datagen = ImageDataGenerator(**augs)\r\n    masks_datagen = ImageDataGenerator(**augs)\r\n\r\n    image_generator = image_datagen.flow_from_directory(\r\n        train_path,\r\n        class_mode=None,\r\n        classes=[image_folder],\r\n        color_mode='rgb',\r\n        target_size=img_target_size,\r\n        batch_size=batch_size,\r\n        seed=1\r\n    )   \r\n\r\n    mask_generator = masks_datagen.flow_from_directory(\r\n        train_path,\r\n        class_mode=None,\r\n        classes=[mask_folder],\r\n        color_mode='grayscale',\r\n        target_size=img_target_size,\r\n        batch_size=batch_size,\r\n        seed=1\r\n    )\r\n\r\n    generator = zip(image_generator, mask_generator) \r\n    for (img, mask) in generator:\r\n        yield (img, mask)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/235", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/235/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/235/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/235", "id": 483227038, "node_id": "MDU6SXNzdWU0ODMyMjcwMzg=", "number": 235, "title": "FileNotFoundError: [Errno 2] No such file or directory:", "user": {"login": "projectcatdog", "id": 54347912, "node_id": "MDQ6VXNlcjU0MzQ3OTEy", "avatar_url": "https://avatars2.githubusercontent.com/u/54347912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/projectcatdog", "html_url": "https://github.com/projectcatdog", "followers_url": "https://api.github.com/users/projectcatdog/followers", "following_url": "https://api.github.com/users/projectcatdog/following{/other_user}", "gists_url": "https://api.github.com/users/projectcatdog/gists{/gist_id}", "starred_url": "https://api.github.com/users/projectcatdog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/projectcatdog/subscriptions", "organizations_url": "https://api.github.com/users/projectcatdog/orgs", "repos_url": "https://api.github.com/users/projectcatdog/repos", "events_url": "https://api.github.com/users/projectcatdog/events{/privacy}", "received_events_url": "https://api.github.com/users/projectcatdog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1191572064, "node_id": "MDU6TGFiZWwxMTkxNTcyMDY0", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/text", "name": "text", "color": "fbca04", "default": false, "description": "Related to text"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-21T06:37:03Z", "updated_at": "2019-09-17T16:57:52Z", "closed_at": "2019-09-17T16:57:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Python 3 in Google Colab. I'm receiving this error:\r\n\r\nFileNotFoundError                         Traceback (most recent call last)\r\n<ipython-input-15-a9fd07e00cb9> in <module>()\r\n     30 target_size = (64, 64),\r\n     31 batch_size = 32,\r\n---> 32 class_mode = 'binary')\r\n     33 test_set = test_datagen.flow_from_directory('E:\\\\Project\\\\dataset\\\\test_set',\r\n     34 target_size = (64, 64),\r\n\r\n1 frames\r\n/usr/local/lib/python3.6/dist-packages/keras_preprocessing/image/directory_iterator.py in __init__(self, directory, image_data_generator, target_size, color_mode, classes, class_mode, batch_size, shuffle, seed, data_format, save_to_dir, save_prefix, save_format, follow_links, subset, interpolation, dtype)\r\n    104         if not classes:\r\n    105             classes = []\r\n--> 106             for subdir in sorted(os.listdir(directory)):\r\n    107                 if os.path.isdir(os.path.join(directory, subdir)):\r\n    108                     classes.append(subdir)\r\n\r\nFileNotFoundError: [Errno 2] No such file or directory: 'E:\\\\Project\\\\dataset\\\\training_set'\r\n\r\nWhat am I doing wrong? I'm sure with the folder's path. I tried Google Drive (after mounting) and it still doesn't work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/231", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/231/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/231/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/231", "id": 479627565, "node_id": "MDU6SXNzdWU0Nzk2Mjc1NjU=", "number": 231, "title": "Vector columns of dataframe should be output as array (batch_size, features)", "user": {"login": "kmader", "id": 116120, "node_id": "MDQ6VXNlcjExNjEyMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/116120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmader", "html_url": "https://github.com/kmader", "followers_url": "https://api.github.com/users/kmader/followers", "following_url": "https://api.github.com/users/kmader/following{/other_user}", "gists_url": "https://api.github.com/users/kmader/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmader/subscriptions", "organizations_url": "https://api.github.com/users/kmader/orgs", "repos_url": "https://api.github.com/users/kmader/repos", "events_url": "https://api.github.com/users/kmader/events{/privacy}", "received_events_url": "https://api.github.com/users/kmader/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-12T12:48:55Z", "updated_at": "2019-08-13T21:19:10Z", "closed_at": "2019-08-13T20:17:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the new dataframe loader feature with 'raw' values as output should run `np.stack` on the outputs so it is a 2D array instead of a array of objects. I fix this by calling \r\n```\r\n # posthoc correction\r\ndf_gen._targets = np.stack(df_gen.labels, 0)\r\n```\r\nAfter the generator has been made from the `.flow_from_dataframe(` command\r\n\r\n- [x] Check that you are up-to-date with the master branch of keras-preprocessing. You can update with:\r\n`pip install git+git://github.com/keras-team/keras-preprocessing.git --upgrade --no-deps`\r\n\r\n- [x] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short). \r\n - https://www.kaggle.com/kmader/allergen-classification\r\n\r\n\r\nHere is what the dataframe looks like (`x_col=\"image_path\", y_col=\"aller_vec\"`)\r\n![Screen Shot 2019-08-12 at 2 50 04 PM](https://user-images.githubusercontent.com/116120/62866195-816c5e00-bd10-11e9-800c-04e83545e0fc.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/230", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/230/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/230/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/230/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/230", "id": 476546139, "node_id": "MDU6SXNzdWU0NzY1NDYxMzk=", "number": 230, "title": "While training accuracy increases (training loss decreases), validation accuracy remains more or less constant (validation loss increases)", "user": {"login": "PareshKamble", "id": 26019729, "node_id": "MDQ6VXNlcjI2MDE5NzI5", "avatar_url": "https://avatars0.githubusercontent.com/u/26019729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PareshKamble", "html_url": "https://github.com/PareshKamble", "followers_url": "https://api.github.com/users/PareshKamble/followers", "following_url": "https://api.github.com/users/PareshKamble/following{/other_user}", "gists_url": "https://api.github.com/users/PareshKamble/gists{/gist_id}", "starred_url": "https://api.github.com/users/PareshKamble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PareshKamble/subscriptions", "organizations_url": "https://api.github.com/users/PareshKamble/orgs", "repos_url": "https://api.github.com/users/PareshKamble/repos", "events_url": "https://api.github.com/users/PareshKamble/events{/privacy}", "received_events_url": "https://api.github.com/users/PareshKamble/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-04T12:10:25Z", "updated_at": "2019-08-05T02:52:34Z", "closed_at": "2019-08-05T02:52:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\nI am trying to predict imdb rating from movie posters using a CNN. I know it may not be a good prediction problem. People have done this prediction using movie [metadata](https://nycdatascience.com/blog/student-works/web-scraping/movie-rating-prediction/).Though, I wanted to give it a try. \r\n\r\nI downloaded movie posters and its corresponding imdb rating of 5039 movies from files provided in [this](https://github.com/sundeepblue/movie_rating_prediction) repository. The imdb ratings were floored to obtain 10 classes. Thus, I treated this as a multi(10)-class classification problem. The train-validation-test images are divided into 3800-1000-239 respectively. \r\n\r\nI was expecting accuracy of at least 50%. However, my validation accuracy is struck at around 31% where as training accuracy reaches around 97% (may be over-fitting). However, validation loss keeps on increasing. Test set accuracy is around 31-34%, whereas the test predictions are mostly +/- 1 rating correct for around 70% of time.\r\n\r\nIt look like a high variance issue. I tried increasing the training data (from 3300 to 3800 currently), used regularizers, applied dropout (0.25-0.5) but no luck so far. I even used pretrained networks like VGG16 and VGG19 but could not improve the validation accuracy (decrease the validation loss).\r\n\r\nThe accuracy and loss plots are shown below.\r\n![image](https://user-images.githubusercontent.com/26019729/62423498-b4926a00-b6de-11e9-8c7f-8465d2a808bb.png)\r\n![image](https://user-images.githubusercontent.com/26019729/62423502-c1af5900-b6de-11e9-901f-8f3bceaf782a.png)\r\n\r\n\r\nKindly, provide insights into this issue.\r\n\r\nYou may find my_repository [here](https://github.com/PareshKamble/Predicting_imdb_rating_from_movie_posters).\r\n\r\nThank you!\r\n\r\n- [x] Check that you are up-to-date with the master branch of keras-preprocessing. You can update with:\r\n`pip install git+git://github.com/keras-team/keras-preprocessing.git --upgrade --no-deps`\r\n\r\n- [x] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/227", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/227/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/227/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/227", "id": 473073416, "node_id": "MDU6SXNzdWU0NzMwNzM0MTY=", "number": 227, "title": "Function load_img return white (full 255) image on loading gray image", "user": {"login": "Dok11", "id": 2697890, "node_id": "MDQ6VXNlcjI2OTc4OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/2697890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dok11", "html_url": "https://github.com/Dok11", "followers_url": "https://api.github.com/users/Dok11/followers", "following_url": "https://api.github.com/users/Dok11/following{/other_user}", "gists_url": "https://api.github.com/users/Dok11/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dok11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dok11/subscriptions", "organizations_url": "https://api.github.com/users/Dok11/orgs", "repos_url": "https://api.github.com/users/Dok11/repos", "events_url": "https://api.github.com/users/Dok11/events{/privacy}", "received_events_url": "https://api.github.com/users/Dok11/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-25T21:14:35Z", "updated_at": "2019-07-31T18:57:00Z", "closed_at": "2019-07-31T18:56:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "- [x] Check that you are up-to-date with the master branch of keras-preprocessing. You can update with:\r\n`pip install git+git://github.com/keras-team/keras-preprocessing.git --upgrade --no-deps`\r\n\r\n- [x] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).\r\n\r\nIn this code:\r\n```py\r\nimport os\r\nfrom keras_preprocessing.image import load_img, img_to_array\r\n\r\nfile = os.path.join(os.getcwd(), 'test-img.png')\r\nimage_loaded = load_img(file, target_size=(8, 4))\r\nimage = img_to_array(image_loaded)\r\n\r\nprint(image)\r\n```\r\n\r\nI got\r\n```\r\n[[[255. 255. 255.]\r\n  [255. 255. 255.]\r\n  [255. 255. 255.]\r\n  [255. 255. 255.]]\r\n ...\r\n [[255. 255. 255.]\r\n  [255. 255. 255.]\r\n  [255. 255. 255.]\r\n  [255. 255. 255.]]]\r\n```\r\n\r\nBut image not white, image pretty gray, look:\r\n![test-img](https://user-images.githubusercontent.com/2697890/61909161-14984c00-af3a-11e9-95e6-491b4abbd1ae.png)\r\n\r\nImage and script int this archive: \r\n[script.zip](https://github.com/keras-team/keras-preprocessing/files/3433303/script.zip)\r\n\r\nP.S. With jpg this function works correctly", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/226", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/226/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/226/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/226", "id": 472338446, "node_id": "MDU6SXNzdWU0NzIzMzg0NDY=", "number": 226, "title": "next() does not work correctly with imagedatagenerator", "user": {"login": "IIIBlueberry", "id": 47675164, "node_id": "MDQ6VXNlcjQ3Njc1MTY0", "avatar_url": "https://avatars3.githubusercontent.com/u/47675164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IIIBlueberry", "html_url": "https://github.com/IIIBlueberry", "followers_url": "https://api.github.com/users/IIIBlueberry/followers", "following_url": "https://api.github.com/users/IIIBlueberry/following{/other_user}", "gists_url": "https://api.github.com/users/IIIBlueberry/gists{/gist_id}", "starred_url": "https://api.github.com/users/IIIBlueberry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IIIBlueberry/subscriptions", "organizations_url": "https://api.github.com/users/IIIBlueberry/orgs", "repos_url": "https://api.github.com/users/IIIBlueberry/repos", "events_url": "https://api.github.com/users/IIIBlueberry/events{/privacy}", "received_events_url": "https://api.github.com/users/IIIBlueberry/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-07-24T15:08:02Z", "updated_at": "2019-08-01T02:32:30Z", "closed_at": "2019-07-31T00:46:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "in my directory i have 95,889 of images after a while training my model(batch size of 16) using next() and model.train_on_batch() i getting this error after around 5991 steps and my training stop https://i.imgur.com/y7NVNDC.png\r\npython script gist : https://gist.github.com/IIIBlueberry/55c78d6bb8d656d39040447dff9a4673\r\n- [x] Check that you are up-to-date with the master branch of keras-preprocessing. You can update with:\r\n`pip install git+git://github.com/keras-team/keras-preprocessing.git --upgrade --no-deps`\r\n\r\n- [x] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/220", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/220/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/220/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/220", "id": 458689230, "node_id": "MDU6SXNzdWU0NTg2ODkyMzA=", "number": 220, "title": "ImageDataGenerator for Image Preprocessing in keras does not support S3 path", "user": {"login": "revy123", "id": 36453803, "node_id": "MDQ6VXNlcjM2NDUzODAz", "avatar_url": "https://avatars2.githubusercontent.com/u/36453803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/revy123", "html_url": "https://github.com/revy123", "followers_url": "https://api.github.com/users/revy123/followers", "following_url": "https://api.github.com/users/revy123/following{/other_user}", "gists_url": "https://api.github.com/users/revy123/gists{/gist_id}", "starred_url": "https://api.github.com/users/revy123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/revy123/subscriptions", "organizations_url": "https://api.github.com/users/revy123/orgs", "repos_url": "https://api.github.com/users/revy123/repos", "events_url": "https://api.github.com/users/revy123/events{/privacy}", "received_events_url": "https://api.github.com/users/revy123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-20T14:22:58Z", "updated_at": "2019-06-25T14:39:02Z", "closed_at": "2019-06-25T14:39:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "The ImageDataGenerator for Image Preprocessing in keras does not support S3 path. It expects the path to be a local directory and since it is not able to find that, it throws a FILENOTFOUNDERROR.\r\n\r\nMoving forward, I will have to download the content from s3 to the sagemaker notebook instance and then perform the preprocessing on it. \r\n\r\nIs there any way this issue can be solved. Thank you ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/219", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/219/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/219/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/219", "id": 457689062, "node_id": "MDU6SXNzdWU0NTc2ODkwNjI=", "number": 219, "title": "Issue with example on augmenting image and mask", "user": {"login": "arthurdecloedt", "id": 15160086, "node_id": "MDQ6VXNlcjE1MTYwMDg2", "avatar_url": "https://avatars0.githubusercontent.com/u/15160086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arthurdecloedt", "html_url": "https://github.com/arthurdecloedt", "followers_url": "https://api.github.com/users/arthurdecloedt/followers", "following_url": "https://api.github.com/users/arthurdecloedt/following{/other_user}", "gists_url": "https://api.github.com/users/arthurdecloedt/gists{/gist_id}", "starred_url": "https://api.github.com/users/arthurdecloedt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arthurdecloedt/subscriptions", "organizations_url": "https://api.github.com/users/arthurdecloedt/orgs", "repos_url": "https://api.github.com/users/arthurdecloedt/repos", "events_url": "https://api.github.com/users/arthurdecloedt/events{/privacy}", "received_events_url": "https://api.github.com/users/arthurdecloedt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-18T20:48:59Z", "updated_at": "2019-07-31T19:26:56Z", "closed_at": "2019-07-31T19:26:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "in the following [example](https://github.com/keras-team/keras-preprocessing/blob/ff90696c0416b74344b91df097b228e694339b88/keras_preprocessing/image/image_data_generator.py#L176) there seems to be something wrong.\r\n\r\n```python\r\n    # we create two instances with the same arguments\r\n    data_gen_args = dict(featurewise_center=True,\r\n                         featurewise_std_normalization=True,\r\n                         rotation_range=90,\r\n                         width_shift_range=0.1,\r\n                         height_shift_range=0.1,\r\n                         zoom_range=0.2)\r\n    image_datagen = ImageDataGenerator(**data_gen_args)\r\n    mask_datagen = ImageDataGenerator(**data_gen_args)\r\n    # Provide the same seed and keyword arguments to the fit and flow methods\r\n    seed = 1\r\n    image_datagen.fit(images, augment=True, seed=seed)\r\n    mask_datagen.fit(masks, augment=True, seed=seed)\r\n    image_generator = image_datagen.flow_from_directory(\r\n        'data/images',\r\n        class_mode=None,\r\n        seed=seed)\r\n    mask_generator = mask_datagen.flow_from_directory(\r\n        'data/masks',\r\n        class_mode=None,\r\n        seed=seed)\r\n    # combine generators into one which yields image and masks\r\n    train_generator = zip(image_generator, mask_generator)\r\n    model.fit_generator(\r\n        train_generator,\r\n        steps_per_epoch=2000,\r\n        epochs=50)\r\n```\r\nas it generates an error\r\n`AttributeError: 'zip' object has no attribute 'shape'\r\n\r\nI can however solve it by using \r\n```python\r\ndef getGen(image_generator,mask_generator):\r\n    while True:\r\n        mask = mask_generator.next()\r\n        mask[mask > 0.5] = 1\r\n        mask[mask <= 0.5] = 0\r\n        yield (image_generator.next(),mask)\r\n```\r\nI think the problem is caused because `zip()` generates an iterator instead of a generator which it doesn't like further downstream\r\n\r\n\r\nEncountered on latest versions of keras and tensorflow and with the tf 2.0 build\r\n(google colab GPU)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/218", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/218/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/218/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/218", "id": 454110435, "node_id": "MDU6SXNzdWU0NTQxMTA0MzU=", "number": 218, "title": "No augmentation on validation split", "user": {"login": "Seanspt", "id": 10164165, "node_id": "MDQ6VXNlcjEwMTY0MTY1", "avatar_url": "https://avatars0.githubusercontent.com/u/10164165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Seanspt", "html_url": "https://github.com/Seanspt", "followers_url": "https://api.github.com/users/Seanspt/followers", "following_url": "https://api.github.com/users/Seanspt/following{/other_user}", "gists_url": "https://api.github.com/users/Seanspt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Seanspt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Seanspt/subscriptions", "organizations_url": "https://api.github.com/users/Seanspt/orgs", "repos_url": "https://api.github.com/users/Seanspt/repos", "events_url": "https://api.github.com/users/Seanspt/events{/privacy}", "received_events_url": "https://api.github.com/users/Seanspt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-10T10:49:21Z", "updated_at": "2019-10-22T15:50:07Z", "closed_at": "2019-07-31T19:30:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `flow_from_directory` with subset training and validation,  is it more reasonable to perform ONLY resize and rescale on validation images?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/217", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/217/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/217/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/217", "id": 454038073, "node_id": "MDU6SXNzdWU0NTQwMzgwNzM=", "number": 217, "title": "add prefetch mechanism", "user": {"login": "Seanspt", "id": 10164165, "node_id": "MDQ6VXNlcjEwMTY0MTY1", "avatar_url": "https://avatars0.githubusercontent.com/u/10164165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Seanspt", "html_url": "https://github.com/Seanspt", "followers_url": "https://api.github.com/users/Seanspt/followers", "following_url": "https://api.github.com/users/Seanspt/following{/other_user}", "gists_url": "https://api.github.com/users/Seanspt/gists{/gist_id}", "starred_url": "https://api.github.com/users/Seanspt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Seanspt/subscriptions", "organizations_url": "https://api.github.com/users/Seanspt/orgs", "repos_url": "https://api.github.com/users/Seanspt/repos", "events_url": "https://api.github.com/users/Seanspt/events{/privacy}", "received_events_url": "https://api.github.com/users/Seanspt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-10T07:38:28Z", "updated_at": "2019-06-11T01:33:12Z", "closed_at": "2019-06-11T01:33:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/216", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/216/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/216/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/216", "id": 452634969, "node_id": "MDU6SXNzdWU0NTI2MzQ5Njk=", "number": 216, "title": "TImeseriesgenerator index shuffled", "user": {"login": "emb9357", "id": 50883328, "node_id": "MDQ6VXNlcjUwODgzMzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/50883328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emb9357", "html_url": "https://github.com/emb9357", "followers_url": "https://api.github.com/users/emb9357/followers", "following_url": "https://api.github.com/users/emb9357/following{/other_user}", "gists_url": "https://api.github.com/users/emb9357/gists{/gist_id}", "starred_url": "https://api.github.com/users/emb9357/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emb9357/subscriptions", "organizations_url": "https://api.github.com/users/emb9357/orgs", "repos_url": "https://api.github.com/users/emb9357/repos", "events_url": "https://api.github.com/users/emb9357/events{/privacy}", "received_events_url": "https://api.github.com/users/emb9357/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-05T17:50:25Z", "updated_at": "2019-06-05T18:32:55Z", "closed_at": "2019-06-05T18:32:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a simple timeseriesgenerator and im trying to take the returned sample from the __getitem__ and normalize them (divide by 255). SInce for some reason, i can't simply copy paste the source code, it doesnt work even without modification. i did a class that took timeseriesgenerator. It works (it runs) but for some reason the index is shuffled?\r\n\r\nthis is my class: \r\n\r\nclass CustomGen(TimeseriesGenerator):\r\n\r\n    def __getitem__(self, idx):\r\n        x,y = super().__getitem__(idx)\r\n        print(x[0][0][0])\r\n        x=x/255.\r\n\r\n        return x, y\r\n\r\nthis is my timeseriesgenerator: (the data is in hdf5 format if that changes anything)  \r\ndata_gen2 = CustomGen(x_dataf,data_csvg,\r\n                               length=1, sampling_rate=1,\r\n                               batch_size=4,shuffle=False)\r\n\r\n\r\n- [yes ] Check that you are up-to-date with the master branch of keras-preprocessing. You can update with:\r\n\r\n`pip install git+git://github.com/keras-team/keras-preprocessing.git --upgrade --no-deps`\r\n\r\n- [yes] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/211", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/211/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/211/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/211", "id": 448118762, "node_id": "MDU6SXNzdWU0NDgxMTg3NjI=", "number": 211, "title": "Document on flow_from_* might need clarification", "user": {"login": "don-tpanic", "id": 32969920, "node_id": "MDQ6VXNlcjMyOTY5OTIw", "avatar_url": "https://avatars2.githubusercontent.com/u/32969920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/don-tpanic", "html_url": "https://github.com/don-tpanic", "followers_url": "https://api.github.com/users/don-tpanic/followers", "following_url": "https://api.github.com/users/don-tpanic/following{/other_user}", "gists_url": "https://api.github.com/users/don-tpanic/gists{/gist_id}", "starred_url": "https://api.github.com/users/don-tpanic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/don-tpanic/subscriptions", "organizations_url": "https://api.github.com/users/don-tpanic/orgs", "repos_url": "https://api.github.com/users/don-tpanic/repos", "events_url": "https://api.github.com/users/don-tpanic/events{/privacy}", "received_events_url": "https://api.github.com/users/don-tpanic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-24T11:22:59Z", "updated_at": "2019-05-29T21:17:33Z", "closed_at": "2019-05-29T21:17:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wonder if this is a known behaviour. So the document for `flow_from_directory` says \"classes: Optional list of class subdirectories (e.g. ['dogs', 'cats']). Default: None. If not provided, the list of classes **will be automatically inferred from the subdirectory names/structure under directory, where each subdirectory will be treated as a different class (and the order of the classes, which will map to the label indices, will be alphanumeric**). The dictionary containing the mapping from class names to class indices can be obtained via the attribute class_indices.\" \r\n\r\n\r\nI think it is not entirely true, as the returned order of classes aren't actually sorted alphanumerically but in the order of the `classes`\r\n\r\nHere is an example, I have three image folders called a, b, and c in `my_image_dir`\r\n```\r\nfrom keras.preprocessing.image import ImageDataGenerator\r\n\r\ndir = 'my_image_dir'\r\nsub_dirs = ['b', 'a']\r\ndatagen = ImageDataGenerator().flow_from_directory(\r\n                                            directory=dir,\r\n                                            batch_size=1,\r\n                                            shuffle=False,\r\n                                            class_mode=\"sparse\",\r\n                                            classes=sub_dirs,\r\n                                            target_size=(224, 224)\r\n                                            )\r\n>>> datagen.class_indices = {'a': 1, 'b': 0}\r\n```\r\n\r\nHave I misunderstood something? Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/210", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/210/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/210/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/210", "id": 445547389, "node_id": "MDU6SXNzdWU0NDU1NDczODk=", "number": 210, "title": "flow_from_directory() only gives corresponding images if # of samples < batch size", "user": {"login": "TimOgden", "id": 33361316, "node_id": "MDQ6VXNlcjMzMzYxMzE2", "avatar_url": "https://avatars2.githubusercontent.com/u/33361316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TimOgden", "html_url": "https://github.com/TimOgden", "followers_url": "https://api.github.com/users/TimOgden/followers", "following_url": "https://api.github.com/users/TimOgden/following{/other_user}", "gists_url": "https://api.github.com/users/TimOgden/gists{/gist_id}", "starred_url": "https://api.github.com/users/TimOgden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TimOgden/subscriptions", "organizations_url": "https://api.github.com/users/TimOgden/orgs", "repos_url": "https://api.github.com/users/TimOgden/repos", "events_url": "https://api.github.com/users/TimOgden/events{/privacy}", "received_events_url": "https://api.github.com/users/TimOgden/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-17T17:39:03Z", "updated_at": "2019-05-31T18:38:15Z", "closed_at": "2019-05-31T01:19:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to give my neural network dark images as input and lighter images as output. Here is my directory structure:\r\n\r\n```\r\ndataset\r\n--> long\r\n----> long\r\n------> long-1.jpg\r\n------> long-2.jpg\r\n------> long-3.jpg ...\r\n--> short\r\n----> short\r\n------> short-1.jpg\r\n------> short-2.jpg\r\n------> short-3.jpg ...\r\n```\r\n\r\nWhere long-1.jpg is the brighter image of short-1.jpg but looks the same otherwise, etc.\r\n\r\nI followed the documentation and the example of transforming images and masks together from the [ImageDataGenerator class](https://keras.io/preprocessing/image/#imagedatagenerator-class) here:\r\n\r\n````\r\nseed = 1\r\nshort_generator = self.datagen.flow_from_directory('../screenshots/shortext/', class_mode=None,\r\n\t\ttarget_size=(self.x_res,self.y_res), subset='training', batch_size=self.batch_size, seed=seed)\r\nlong_generator = self.datagen.flow_from_directory('../screenshots/longext/', class_mode=None,\r\n\t\ttarget_size=(self.x_res,self.y_res), subset='training', batch_size=self.batch_size, seed=seed)\r\ngenerator = zip(short_generator, long_generator)\r\n````\r\n\r\nHowever, if I get the elements of next(generator) and loop through them, I can see that I am getting tuples of a short image and a long image, but they do not correspond. For example, I may get short-1.jpg and long-50.jpg. This is a real issue.\r\n\r\nTo debug, I made my dataset really small, 11 images total. Testing it, it seemed that the images corresponded perfectly. Then I increased the total to my current batch size, 128. This also yielded corresponding images. However, if I do the full dataset, none of the images seem to correspond. It's possible that the dataset got messed up somewhere and maybe short-256.jpg got repeated twice or something, so now short-257.jpg->long-256.jpg and short-258.jpg->long-258.jpg, something like that. However, I created all these images through the Unity game engine and they were named automatically, so I can't think why it would make a mistake in the naming process. The alternative is flow_from_directory() falls apart when the dataset is too large. Does anyone have any idea on this? Thanks\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/203", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/203/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/203/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/203", "id": 435701023, "node_id": "MDU6SXNzdWU0MzU3MDEwMjM=", "number": 203, "title": "May raise modulo by zero error", "user": {"login": "siddheshsathe", "id": 15225322, "node_id": "MDQ6VXNlcjE1MjI1MzIy", "avatar_url": "https://avatars0.githubusercontent.com/u/15225322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/siddheshsathe", "html_url": "https://github.com/siddheshsathe", "followers_url": "https://api.github.com/users/siddheshsathe/followers", "following_url": "https://api.github.com/users/siddheshsathe/following{/other_user}", "gists_url": "https://api.github.com/users/siddheshsathe/gists{/gist_id}", "starred_url": "https://api.github.com/users/siddheshsathe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/siddheshsathe/subscriptions", "organizations_url": "https://api.github.com/users/siddheshsathe/orgs", "repos_url": "https://api.github.com/users/siddheshsathe/repos", "events_url": "https://api.github.com/users/siddheshsathe/events{/privacy}", "received_events_url": "https://api.github.com/users/siddheshsathe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-22T11:50:50Z", "updated_at": "2019-04-29T06:50:55Z", "closed_at": "2019-04-29T06:50:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please make sure that the boxes below are checked before you submit your issue.\r\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.\r\n\r\nThank you!\r\n\r\n- [x] Check that you are up-to-date with the master branch of keras-preprocessing. You can update with:\r\n`pip install git+git://github.com/keras-team/keras-preprocessing.git --upgrade --no-deps`\r\n\r\n- [x] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).\r\n\r\n**Source:** https://github.com/keras-team/keras-preprocessing/blob/6ff9af6971f97f69c39d090be15c2f7d93aa4d6d/keras_preprocessing/image/iterator.py#L85\r\n\r\n- Under class `Iterator`, if the initialization happens with 0 number of images for any number of class, it may raise `modulo by zero error`\r\n- Solution would be to assert if `n == 0` while initializing the `Iterator` class.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/202", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/202/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/202/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/202", "id": 435537127, "node_id": "MDU6SXNzdWU0MzU1MzcxMjc=", "number": 202, "title": "I get the folowing error when i run my code.", "user": {"login": "MANOJVONTEDDU", "id": 16188320, "node_id": "MDQ6VXNlcjE2MTg4MzIw", "avatar_url": "https://avatars1.githubusercontent.com/u/16188320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MANOJVONTEDDU", "html_url": "https://github.com/MANOJVONTEDDU", "followers_url": "https://api.github.com/users/MANOJVONTEDDU/followers", "following_url": "https://api.github.com/users/MANOJVONTEDDU/following{/other_user}", "gists_url": "https://api.github.com/users/MANOJVONTEDDU/gists{/gist_id}", "starred_url": "https://api.github.com/users/MANOJVONTEDDU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MANOJVONTEDDU/subscriptions", "organizations_url": "https://api.github.com/users/MANOJVONTEDDU/orgs", "repos_url": "https://api.github.com/users/MANOJVONTEDDU/repos", "events_url": "https://api.github.com/users/MANOJVONTEDDU/events{/privacy}", "received_events_url": "https://api.github.com/users/MANOJVONTEDDU/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-21T18:55:44Z", "updated_at": "2019-04-29T06:50:10Z", "closed_at": "2019-04-29T06:50:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please make sure that the boxes below are checked before you submit your issue.\r\nIf your issue is an **implementation question**, please ask your question on [StackOverflow](http://stackoverflow.com/questions/tagged/keras) or [on the Keras Slack channel](https://keras-slack-autojoin.herokuapp.com/) instead of opening a GitHub issue.\r\n\r\nThank you!\r\n\r\n- [ ] Check that you are up-to-date with the master branch of keras-preprocessing. You can update with:\r\n`pip install git+git://github.com/keras-team/keras-preprocessing.git --upgrade --no-deps`\r\n\r\n- [ ] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).\r\n![Screenshot from 2019-04-22 00-25-01](https://user-images.githubusercontent.com/16188320/56474268-211d8c00-6495-11e9-99f9-dd4923369eb6.png)\r\n![Screenshot from 2019-04-22 00-25-07](https://user-images.githubusercontent.com/16188320/56474269-237fe600-6495-11e9-8591-12cd42820d33.png)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/197", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/197/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/197/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/197", "id": 430823690, "node_id": "MDU6SXNzdWU0MzA4MjM2OTA=", "number": 197, "title": "Multi-task training using flow_from_dataframe", "user": {"login": "wojsla", "id": 20921873, "node_id": "MDQ6VXNlcjIwOTIxODcz", "avatar_url": "https://avatars2.githubusercontent.com/u/20921873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wojsla", "html_url": "https://github.com/wojsla", "followers_url": "https://api.github.com/users/wojsla/followers", "following_url": "https://api.github.com/users/wojsla/following{/other_user}", "gists_url": "https://api.github.com/users/wojsla/gists{/gist_id}", "starred_url": "https://api.github.com/users/wojsla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wojsla/subscriptions", "organizations_url": "https://api.github.com/users/wojsla/orgs", "repos_url": "https://api.github.com/users/wojsla/repos", "events_url": "https://api.github.com/users/wojsla/events{/privacy}", "received_events_url": "https://api.github.com/users/wojsla/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-09T08:03:29Z", "updated_at": "2019-04-12T22:10:32Z", "closed_at": "2019-04-11T07:03:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use flow_from_dataframe for multi-task model training. When I use it for a single task multi-class classification model with a dataframe like:\r\n```\r\n       File   Class\r\n0  file1.png  class1\r\n1  file2.png  class2\r\n2  file3.png  class3\r\n3  file4.png  class4\r\n4  file5.png  class5\r\n5  file6.png  class6\r\n6  file7.png  class7\r\n7  file8.png  class8\r\n```\r\n\r\nthen generator.next() returns tuple where first object is the image and second is an array like:\r\n> array([[0., 0., 0., 0., 1., 0., 0., 0.]], dtype=float32)\r\n\r\nfor image labeled as class 5.\r\n\r\nNow, I want to add a second output to this model that will be a binary classification. The dataframe now looks like:\r\n```\r\n       File MultiClass BinaryClass\r\n0  file1.png     class1         yes\r\n1  file2.png     class2          no\r\n2  file3.png     class3         yes\r\n3  file4.png     class4          no\r\n4  file5.png     class5         yes\r\n5  file6.png     class6          no\r\n6  file7.png     class7         yes\r\n7  file8.png     class8          no\r\n```\r\nI configured generator's class_mode to \"multi_output\" and y_col to ['MultiClass', 'BinaryClass']. Now when requesting next from it I again receive a tuple with image as first object, but second object looks like this:\r\n> array([['class1', 'yes']], dtype=object))\r\n\r\nand when I run fit_generator I receive this error:\r\n\r\n> ValueError: Error when checking target: expected MultiClass to have shape (8,) but got array with shape (1,)\r\n\r\nHow can I configure generator to work correctly in this multi-task/output scenario?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/196", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/196/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/196/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/196", "id": 427086446, "node_id": "MDU6SXNzdWU0MjcwODY0NDY=", "number": 196, "title": "flow_from_directory counter issue. Requires manual reset.", "user": {"login": "don-tpanic", "id": 32969920, "node_id": "MDQ6VXNlcjMyOTY5OTIw", "avatar_url": "https://avatars2.githubusercontent.com/u/32969920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/don-tpanic", "html_url": "https://github.com/don-tpanic", "followers_url": "https://api.github.com/users/don-tpanic/followers", "following_url": "https://api.github.com/users/don-tpanic/following{/other_user}", "gists_url": "https://api.github.com/users/don-tpanic/gists{/gist_id}", "starred_url": "https://api.github.com/users/don-tpanic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/don-tpanic/subscriptions", "organizations_url": "https://api.github.com/users/don-tpanic/orgs", "repos_url": "https://api.github.com/users/don-tpanic/repos", "events_url": "https://api.github.com/users/don-tpanic/events{/privacy}", "received_events_url": "https://api.github.com/users/don-tpanic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-03-29T17:02:30Z", "updated_at": "2019-05-13T11:02:18Z", "closed_at": "2019-04-11T07:14:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code to replicate my findings: (Notice you will have to replace `imagenet_test` with your own image directory)\r\n```\r\nimport numpy as np\r\nimport keras\r\nfrom keras.preprocessing.image import ImageDataGenerator\r\nfrom keras.applications.vgg16 import preprocess_input\r\nfrom keras.optimizers import Adam\r\nfrom keras.applications import VGG16\r\nfrom keras import metrics\r\nfrom keras import backend as K\r\nK.tensorflow_backend._get_available_gpus()\r\n\r\n\r\nmodel = VGG16(weights='imagenet', include_top=True, input_shape=(224, 224, 3))\r\nmodel.compile(Adam(lr=0.001),\r\n                 loss='sparse_categorical_crossentropy',\r\n                 metrics=['accuracy'])\r\n\r\nbatch_size = 250\r\nimagenet_test = '/mnt/fast-data17/datasets/ILSVRC/2012/clsloc/val/'\r\ndatagen_test = ImageDataGenerator(preprocessing_function=preprocess_input)\r\n\r\ntest_generator = datagen_test.flow_from_directory(\r\n                                            imagenet_test,\r\n                                            batch_size=batch_size,\r\n                                            shuffle=False,\r\n                                            class_mode=\"sparse\",\r\n                                            target_size=(224, 224)\r\n                                            )\r\n\r\n\r\nsteps = len(test_generator.classes) / batch_size\r\nprint('batch_index1: ', test_generator.batch_index)\r\ncheck1 = model.predict_generator(test_generator, steps=steps, verbose=1)\r\nprint('batch_index2: ', test_generator.batch_index)\r\ncheck2 = model.predict_generator(test_generator, steps=steps, verbose=1)\r\n\r\nprint(check1[0, :][0])\r\nprint(check2[0, :][0])\r\n```\r\n=========================================================================\r\nIt seems by running predict_generator twice would yield different results. I looked into this and found that the counter doesn't reset when the generator is done. I believe the problem is in `keras-preprocessing/keras_preprocessing/image/iterator.py`\r\nMore specifically, it's in the `def _flow_index(self)` function:\r\n```\r\nclass Iterator(IteratorType):\r\n    \"\"\"Base class for image data iterators.\r\n    Every `Iterator` must implement the `_get_batches_of_transformed_samples`\r\n    method.\r\n    # Arguments\r\n        n: Integer, total number of samples in the dataset to loop over.\r\n        batch_size: Integer, size of a batch.\r\n        shuffle: Boolean, whether to shuffle the data between epochs.\r\n        seed: Random seeding for data shuffling.\r\n    \"\"\"\r\n    white_list_formats = ('png', 'jpg', 'jpeg', 'bmp', 'ppm', 'tif', 'tiff')\r\n\r\n    def __init__(self, n, batch_size, shuffle, seed):\r\n        self.n = n\r\n        self.batch_size = batch_size\r\n        self.seed = seed\r\n        self.shuffle = shuffle\r\n        self.batch_index = 0\r\n        self.total_batches_seen = 0\r\n        self.lock = threading.Lock()\r\n        self.index_array = None\r\n        self.index_generator = self._flow_index()\r\n\r\n    def _set_index_array(self):\r\n        self.index_array = np.arange(self.n)\r\n        if self.shuffle:\r\n            self.index_array = np.random.permutation(self.n)\r\n\r\n    def __getitem__(self, idx):\r\n        if idx >= len(self):\r\n            raise ValueError('Asked to retrieve element {idx}, '\r\n                             'but the Sequence '\r\n                             'has length {length}'.format(idx=idx,\r\n                                                          length=len(self)))\r\n        if self.seed is not None:\r\n            np.random.seed(self.seed + self.total_batches_seen)\r\n        self.total_batches_seen += 1\r\n        if self.index_array is None:\r\n            self._set_index_array()\r\n        index_array = self.index_array[self.batch_size * idx:\r\n                                       self.batch_size * (idx + 1)]\r\n        return self._get_batches_of_transformed_samples(index_array)\r\n\r\n    def __len__(self):\r\n        return (self.n + self.batch_size - 1) // self.batch_size  # round up\r\n\r\n    def on_epoch_end(self):\r\n        self._set_index_array()\r\n\r\n    def reset(self):\r\n        self.batch_index = 0\r\n\r\n    def _flow_index(self):\r\n        # Ensure self.batch_index is 0.\r\n        self.reset()\r\n        while 1:\r\n            if self.seed is not None:\r\n                np.random.seed(self.seed + self.total_batches_seen)\r\n            if self.batch_index == 0:\r\n                self._set_index_array()\r\n\r\n            current_index = (self.batch_index * self.batch_size) % self.n\r\n            print('batch_index = ', self.batch_index, 'current_index = ', current_index)\r\n            if self.n > current_index + self.batch_size:\r\n                self.batch_index += 1\r\n            else:\r\n                self.batch_index = 0\r\n            self.total_batches_seen += 1\r\n            yield self.index_array[current_index:\r\n                                   current_index + self.batch_size]\r\n```\r\nNotice I add this `print('batch_index = ', self.batch_index, 'current_index = ', current_index)` after `current_index = (self.batch_index * self.batch_size) % self.n` in the code above, and here are the results upon the first `predict_generator` has terminates:\r\n```\r\nbatch_index =  0 current_index =  0\r\nbatch_index =  1 current_index =  250\r\n....\r\nbatch_index =  197 current_index =  49250\r\nbatch_index =  198 current_index =  49500\r\nbatch_index =  199 current_index =  49750\r\nbatch_index =  0 current_index =  0\r\n``` \r\nThis explains why running two `predict_generator` gives different results. It's because the `batch_index` would start from `1` when executing the second `predict_generator`. Hence in cases like this, my current work-round is call `test_generator.reset()` before the second `predict_generator` .", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/195", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/195/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/195/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/195", "id": 426901588, "node_id": "MDU6SXNzdWU0MjY5MDE1ODg=", "number": 195, "title": "flow_from_dataframe randomly shuffles Tags", "user": {"login": "renedlog", "id": 14824710, "node_id": "MDQ6VXNlcjE0ODI0NzEw", "avatar_url": "https://avatars2.githubusercontent.com/u/14824710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renedlog", "html_url": "https://github.com/renedlog", "followers_url": "https://api.github.com/users/renedlog/followers", "following_url": "https://api.github.com/users/renedlog/following{/other_user}", "gists_url": "https://api.github.com/users/renedlog/gists{/gist_id}", "starred_url": "https://api.github.com/users/renedlog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renedlog/subscriptions", "organizations_url": "https://api.github.com/users/renedlog/orgs", "repos_url": "https://api.github.com/users/renedlog/repos", "events_url": "https://api.github.com/users/renedlog/events{/privacy}", "received_events_url": "https://api.github.com/users/renedlog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-03-29T09:47:18Z", "updated_at": "2019-03-29T14:10:11Z", "closed_at": "2019-03-29T14:10:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've mad a multi label classification Network and using the 'categorical' as described in the docs of Keras. (Side note: The documentation really needs improvements for the different class_modes. It is not clear how to use them)\r\n\r\n![image](https://user-images.githubusercontent.com/14824710/55223479-8f608d00-520e-11e9-840f-cb3d0fb149c1.png)\r\n[source](https://medium.com/@vijayabhaskar96/multi-label-image-classification-tutorial-with-keras-imagedatagenerator-cd541f8eaf24)\r\n\r\nI do save the Tags and indices via:\r\nModelLabels = (train_generator.class_indices)\r\nModelLabels = dict((v, k) for k, v in ModelLabels.items())\r\n\r\nThe strange behavior is the binary representation of the tags does't look like the class_indices. \r\nSo the tags are shuffled around an cannot be retried via train_generator.class_indices (after prediction). \r\n\r\nThe source of the image is a good example but to encounter the problem one has to add more images and tags where e.g. ['see','desert','mountains'] (note the different order) is present\r\n\r\nI'll try to provide a short example. (soon)\r\n\r\nup to here it looks ok;\r\n```\r\n# import the necessary packages\r\nimport pandas as pd\r\nfrom PIL import Image\r\nfrom keras.layers import Dense, Activation, Flatten\r\nfrom keras.models import Sequential\r\nfrom keras_preprocessing.image import ImageDataGenerator\r\n\r\nimg = Image.new('RGB', (1, 1), color='red')\r\nimg.save('pil_red.png')\r\nimg = Image.new('RGB', (1, 1), color='blue')\r\nimg.save('pil_blue.png')\r\nimg = Image.new('RGB', (1, 1), color='white')\r\nimg.save('pil_white.png')\r\nimg = Image.new('RGB', (1, 1), color='green')\r\nimg.save('pil_green.png')\r\nimg = Image.new('RGB', (1, 1), color='black')\r\nimg.save('pil_black.png')\r\n\r\ndata = pd.DataFrame(\r\n    {'Image': ['pil_red.png', 'pil_blue.png', 'pil_white.png', 'pil_green.png', 'pil_black.png'],\r\n     'Labels': [['a', 'c','d'], ['c', 'a'], 'b', 'c', ['d','a', 'b', 'c']]})\r\n\r\ngenerator = ImageDataGenerator().flow_from_dataframe(\r\n    data, x_col='Image', y_col='Labels',\r\n    batch_size=10,\r\n    target_size=(1, 1),\r\n    shuffle=False,\r\n    color_mode='rgb',\r\n    classes=['a', 'b', 'c','d'],\r\n    class_mode='categorical'\r\n)\r\n\r\nout = generator.next()\r\n\r\ndata['outimage'] = list(out[0])\r\ndata['outbinary'] = list(out[1])\r\n\r\nprint(data)\r\nModelLabels = (generator.class_indices)\r\nModelLabels = dict((v, k) for k, v in ModelLabels.items())\r\nprint(ModelLabels)\r\n############################################################\r\n# looks ok up to here\r\n```\r\n\r\nwill add further analysis (soon)\r\n\r\nhere is more code.\r\na small neural network that **overfits** well (**by purpose for this test**)... but when validated with the input data it doesn't deliver what i would expect. e.g. pil_red.png should be ['a', 'c','d'] but is 'b' the same happens with bigger networks. (i don't know why).\r\n\r\nif i'm using the MultiLabelBinarizer it does exactly what i want. (in the above example ['a', 'c','d'] -> probability rougly (1,0,1,1)\r\n \r\n```\r\ndatagen = ImageDataGenerator(rescale=1./255, validation_split=0.5)\r\n\r\ngenerator = datagen.flow_from_dataframe(\r\n    data, x_col='Image', y_col='Labels',\r\n    batch_size=1,\r\n    target_size=(1,1),\r\n    color_mode='rgb',\r\n    classes=['a', 'b', 'c','d'],\r\n    class_mode='categorical',\r\n    subset='training'\r\n)\r\n\r\nModelLabels = (generator.class_indices)\r\nModelLabels = dict((v, k) for k, v in ModelLabels.items())\r\n\r\nmodel = Sequential()\r\nmodel.add(Flatten(input_shape=(1,1,3)))\r\nmodel.add(Dense(4))\r\nActivation('linear'),\r\nDense(100),\r\nmodel.add(Activation('sigmoid'))\r\n\r\nfrom keras.optimizers import Adam\r\n\r\nEPOCHS = 100\r\nINIT_LR = 1e-3\r\nopt = Adam(lr=INIT_LR, decay=INIT_LR / EPOCHS)\r\n\r\n# distribution\r\nmodel.compile(loss=\"binary_crossentropy\", optimizer=opt, metrics=[\"accuracy\"])\r\n\r\n\r\n# train the network\r\nprint(\"[INFO] training network...\")\r\nH = model.fit_generator(\r\n    generator=generator,\r\n    steps_per_epoch=EPOCHS,\r\n    epochs=EPOCHS, verbose=1,\r\n    use_multiprocessing=False,\r\n    workers=6)\r\n\r\n\r\nimport cv2\r\nfrom keras.preprocessing.image import img_to_array\r\nimport numpy as np\r\n\r\nimage = cv2.imread('pil_red.png')\r\n\r\n# pre-process the image for classification\r\nimage = cv2.resize(image, (1, 1))\r\nimage = image.astype(\"float\") / 255.0\r\nimage = img_to_array(image)\r\nimage = np.expand_dims(image, axis=0)\r\n\r\n# classify the input image then find the indexes of the two class\r\n# labels with the *largest* probability\r\nprint(\"[INFO] classifying image...\")\r\nproba = model.predict(image)[0]\r\nidxs = np.argsort(proba)[::-1][:2]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/194", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/194/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/194/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/194", "id": 426431322, "node_id": "MDU6SXNzdWU0MjY0MzEzMjI=", "number": 194, "title": "Error message with build_generator", "user": {"login": "alkra1", "id": 42971437, "node_id": "MDQ6VXNlcjQyOTcxNDM3", "avatar_url": "https://avatars2.githubusercontent.com/u/42971437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alkra1", "html_url": "https://github.com/alkra1", "followers_url": "https://api.github.com/users/alkra1/followers", "following_url": "https://api.github.com/users/alkra1/following{/other_user}", "gists_url": "https://api.github.com/users/alkra1/gists{/gist_id}", "starred_url": "https://api.github.com/users/alkra1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alkra1/subscriptions", "organizations_url": "https://api.github.com/users/alkra1/orgs", "repos_url": "https://api.github.com/users/alkra1/repos", "events_url": "https://api.github.com/users/alkra1/events{/privacy}", "received_events_url": "https://api.github.com/users/alkra1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-28T11:05:46Z", "updated_at": "2019-03-28T13:56:42Z", "closed_at": "2019-03-28T13:43:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "An Error just popped-up\r\n\r\nfor a line ```\r\n\r\nError : TypeError: If class_mode=\"binary\", y_col=\"Label\" column values must be strings.\r\n\r\nthe code was working fine just before\r\n\r\nmy code:\r\n\r\ndf['R_eye'].value_counts() 1 37612 0 37606 Name: R_eye, dtype: int64", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/191", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/191/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/191/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/191", "id": 426138235, "node_id": "MDU6SXNzdWU0MjYxMzgyMzU=", "number": 191, "title": "flow_from_dataframe() not working with directory None in macOS", "user": {"login": "b-freitas", "id": 13418416, "node_id": "MDQ6VXNlcjEzNDE4NDE2", "avatar_url": "https://avatars0.githubusercontent.com/u/13418416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-freitas", "html_url": "https://github.com/b-freitas", "followers_url": "https://api.github.com/users/b-freitas/followers", "following_url": "https://api.github.com/users/b-freitas/following{/other_user}", "gists_url": "https://api.github.com/users/b-freitas/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-freitas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-freitas/subscriptions", "organizations_url": "https://api.github.com/users/b-freitas/orgs", "repos_url": "https://api.github.com/users/b-freitas/repos", "events_url": "https://api.github.com/users/b-freitas/events{/privacy}", "received_events_url": "https://api.github.com/users/b-freitas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-27T19:12:45Z", "updated_at": "2019-08-05T02:53:47Z", "closed_at": "2019-08-05T02:53:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use flow_from_dataframe() with absolute filenames and directory set to None in my macOS Mojave 10.14.3, but the function return a error. See bellow:\r\n\r\n/usr/local/lib/python2.7/site-packages/keras_preprocessing/image.pyc in flow_from_dataframe(self, dataframe, directory, x_col, y_col, has_ext, target_size, color_mode, classes, class_mode, batch_size, shuffle, seed, save_to_dir, save_prefix, save_format, subset, interpolation)\r\n\r\n/usr/local/lib/python2.7/site-packages/keras_preprocessing/image.pyc in __init__(self, dataframe, directory, image_data_generator, x_col, y_col, has_ext, target_size, color_mode, classes, class_mode, batch_size, shuffle, seed, data_format, save_to_dir, save_prefix, save_format, follow_links, subset, interpolation, dtype)\r\n\r\n/usr/local/lib/python2.7/site-packages/keras_preprocessing/image.pyc in _list_valid_filenames_in_directory(directory, white_list_formats, split, class_indices, follow_links, df)\r\n\r\n/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/posixpath.pyc in basename(p)\r\n    112 def basename(p):\r\n    113     \"\"\"Returns the final component of a pathname\"\"\"\r\n--> 114     i = p.rfind('/') + 1\r\n    115     return p[i:]\r\n    116 \r\n\r\nAttributeError: 'NoneType' object has no attribute 'rfind'\r\n\r\nI'm using the lastest keras-preprocessing (1.0.9) and Python 2.7, but the error continue yet.  \r\n\r\nMy dataframe example has a column \"filenames\" and it values are: '/User/User1/images/images_a/images_1a.jpg', \r\n'/User/User1/images/images_a/images_2a.jpg',\r\n....\r\n'/User/User1/images/images_b/images_1b.jpg', \r\n....\r\netc\r\n\r\nThe y_col is a array containing the columns names with values between 0 and 1 (one_hot). \r\n\r\ndatagen.flow_from_dataframe(dataframe=dataframe,\r\n                                                 directory=None,\r\n                                                    x_col='filenames',\r\n                                                    y_col=labels,\r\n                                                    batch_size=32,\r\n                                                    seed=123,\r\n                                                    shuffle=True,\r\n                                                    class_mode='other',                                                    \r\n                                                    target_size=(32,32))\r\n\r\nAnyone have some idea about this error?\r\n\r\nthanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/181", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/181/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/181/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/181", "id": 418653558, "node_id": "MDU6SXNzdWU0MTg2NTM1NTg=", "number": 181, "title": "Allow oversampled and/or under-sampled input to flow_from_dataframe", "user": {"login": "ResidentMario", "id": 3466341, "node_id": "MDQ6VXNlcjM0NjYzNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ResidentMario", "html_url": "https://github.com/ResidentMario", "followers_url": "https://api.github.com/users/ResidentMario/followers", "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}", "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}", "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions", "organizations_url": "https://api.github.com/users/ResidentMario/orgs", "repos_url": "https://api.github.com/users/ResidentMario/repos", "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}", "received_events_url": "https://api.github.com/users/ResidentMario/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-08T06:39:58Z", "updated_at": "2019-03-08T18:44:47Z", "closed_at": "2019-03-08T11:04:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an image dataset with an unbalanced class distribution: certain common classes have up to 10x as many samples as certain uncommon classes. I would like to rebalance what images my classifier is exposed to by using some combination of oversampling and undersampling methods from `imbalanced-learn`.\r\n\r\nI used the following code to see if this was something I could achieve using `flow_from_dataframe`:\r\n\r\n```python\r\nX_meta = pd.read_csv(\"X_meta\")  # get source metadata\r\nimport numpy as np\r\n\r\nsplit_ratio = 0.8\r\nn_samples = len(X)\r\nsplit_idx = int(split_ratio * n_samples)\r\n\r\nnp.random.seed(42)\r\nidxs = np.arange(len(X))\r\nnp.random.shuffle(idxs)\r\n\r\nX_train, X_test = X[idxs[:split_idx]], X[idxs[split_idx:]]\r\ny_train, y_test = y[idxs[:split_idx]], y[idxs[split_idx:]]\r\n\r\nX = X_meta[['CroppedImageURL']].values\r\ny = X_meta['LabelName'].values\r\n\r\nfrom imblearn.over_sampling import RandomOverSampler\r\nX, y = RandomOverSampler(random_state=42).fit_resample(X, y)\r\n\r\nimport keras\r\nfrom keras.preprocessing.image import ImageDataGenerator\r\n\r\ntrain_datagen = ImageDataGenerator(\r\n    rotation_range=40,\r\n    width_shift_range=0.2,\r\n    height_shift_range=0.2,\r\n    rescale=1/255,\r\n    shear_range=0.2,\r\n    zoom_range=0.2,\r\n    horizontal_flip=True,\r\n    fill_mode='nearest'\r\n)\r\n\r\ntest_datagen = ImageDataGenerator(\r\n    rescale=1/255\r\n)\r\n\r\nX_train_df = pd.DataFrame().assign(ImagePath=X_train[:, 0], ImageClass=y_train)\r\nX_test_df = pd.DataFrame().assign(ImagePath=X_test[:, 0], ImageClass=y_test)\r\n\r\ntrain_generator = train_datagen.flow_from_dataframe(\r\n    X_train_df,\r\n    directory='/Users/alex/Desktop/comet/data/images_cropped/',\r\n    x_col='ImagePath',\r\n    y_col='ImageClass',\r\n    target_size=(48, 48),\r\n    batch_size=512,\r\n    class_mode='categorical'\r\n)\r\n\r\nvalidation_generator = test_datagen.flow_from_dataframe(\r\n    X_test_df,\r\n    directory='/Users/alex/Desktop/comet/data/images_cropped/',\r\n    x_col='ImagePath',\r\n    y_col='ImageClass',    \r\n    target_size=(48, 48),\r\n    batch_size=512,\r\n    class_mode='categorical'\r\n)\r\n```\r\n\r\nHowever, this didn't work&mdash;`flow_from_dataframe` deduplicates paths which appeared multiple times in its input `DataFrame`.\r\n\r\nWhile this might not be something worth breaking backwards compatibility over in terms of default behavior, it'd be great if I had a switch to turn this deduplication behavior off. As far as I can tell this would be the easiest way to incorporate data resampling technique into my model training workflow; the workaround would be to manually copy the images on disk, which is super dissatisfying.\r\n\r\nIf that sounds like a good idea, maybe I can whip something up. \ud83d\ude04", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/178", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/178/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/178/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/178", "id": 414138110, "node_id": "MDU6SXNzdWU0MTQxMzgxMTA=", "number": 178, "title": "keras ImageDataGenerator not using keras.utils.Sequence", "user": {"login": "MarcelBeining", "id": 1278660, "node_id": "MDQ6VXNlcjEyNzg2NjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1278660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcelBeining", "html_url": "https://github.com/MarcelBeining", "followers_url": "https://api.github.com/users/MarcelBeining/followers", "following_url": "https://api.github.com/users/MarcelBeining/following{/other_user}", "gists_url": "https://api.github.com/users/MarcelBeining/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcelBeining/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcelBeining/subscriptions", "organizations_url": "https://api.github.com/users/MarcelBeining/orgs", "repos_url": "https://api.github.com/users/MarcelBeining/repos", "events_url": "https://api.github.com/users/MarcelBeining/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcelBeining/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-25T14:42:27Z", "updated_at": "2019-02-25T14:48:06Z", "closed_at": "2019-02-25T14:48:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\naccording to https://keras.io/models/sequential/#fit_generator it is highly recommended to inherit generators from `keras.utils.Sequence` to  \"guarantee the single use of every input per epoch when using use_multiprocessing=True\".\r\nHowever, I saw that the [NumpyIterator](https://github.com/keras-team/keras-preprocessing/blob/master/keras_preprocessing/image/numpy_array_iterator.py), which is used by `ImageDataGenerator` to create a generator does not inherit from `keras.utils.Sequence` but simply from `Iterator`.\r\n\r\nAs the main purpose of `ImageDataGenerator` is to use it with the `fit_generator `method, it should use `keras.utils.Sequence`. Or is `ImageDataGenerator` using anything that assures whole data usage per epoch, which I am missing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/175", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/175/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/175/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/175", "id": 413240261, "node_id": "MDU6SXNzdWU0MTMyNDAyNjE=", "number": 175, "title": "Is it possible using flow_from_dataframe() to pass the same image-path multiple times to an ImageDataGenerator?", "user": {"login": "aarondt", "id": 16733296, "node_id": "MDQ6VXNlcjE2NzMzMjk2", "avatar_url": "https://avatars2.githubusercontent.com/u/16733296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aarondt", "html_url": "https://github.com/aarondt", "followers_url": "https://api.github.com/users/aarondt/followers", "following_url": "https://api.github.com/users/aarondt/following{/other_user}", "gists_url": "https://api.github.com/users/aarondt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aarondt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aarondt/subscriptions", "organizations_url": "https://api.github.com/users/aarondt/orgs", "repos_url": "https://api.github.com/users/aarondt/repos", "events_url": "https://api.github.com/users/aarondt/events{/privacy}", "received_events_url": "https://api.github.com/users/aarondt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-22T04:37:26Z", "updated_at": "2019-02-22T16:38:58Z", "closed_at": "2019-02-22T16:38:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to balance an unbalanced dataset for image classification. As such, I duplicated the entries of the minority class within my dataframe n-times to match the number of samples of the majority class. This procedure leads to a situation where I have multiple images sharing the same path in my dataframe.\r\n\r\nFor example my dataframe looks like this:\r\n\r\n```\r\npath                          class\r\nC:/image/1.jpg                 \"A\"\r\nC:/image/1.jpg                 \"A\r\nC:/image/2.jpg                 \"B\"\r\nC:/image/2.jpg                 \"B\"\r\n```\r\n\r\nNow, once I pass the dataframe to my `ImageDataGenerator `using `flow_from_dataframe `it only returns each image exactly once. For example the output would be:\r\n\r\n`Found 2 images belonging to 2 classes.`\r\n\r\nwheres I would like to have:\r\n\r\n`Found 4 images belonging to 2 classes.`\r\n\r\n\r\nAs such, I would like to know if it is possible to use an image multiple times during training using` flow_from_dataframe()` without actually copying the file on hard-drive multiple times? Considering that the image database I am dealing with is rather large, this would save me a huge amount of disk-space.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/171", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/171/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/171/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/171", "id": 410591067, "node_id": "MDU6SXNzdWU0MTA1OTEwNjc=", "number": 171, "title": "flow_from_dataframe too slow", "user": {"login": "qinst64", "id": 16003088, "node_id": "MDQ6VXNlcjE2MDAzMDg4", "avatar_url": "https://avatars3.githubusercontent.com/u/16003088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qinst64", "html_url": "https://github.com/qinst64", "followers_url": "https://api.github.com/users/qinst64/followers", "following_url": "https://api.github.com/users/qinst64/following{/other_user}", "gists_url": "https://api.github.com/users/qinst64/gists{/gist_id}", "starred_url": "https://api.github.com/users/qinst64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qinst64/subscriptions", "organizations_url": "https://api.github.com/users/qinst64/orgs", "repos_url": "https://api.github.com/users/qinst64/repos", "events_url": "https://api.github.com/users/qinst64/events{/privacy}", "received_events_url": "https://api.github.com/users/qinst64/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 949830609, "node_id": "MDU6TGFiZWw5NDk4MzA2MDk=", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 949830608, "node_id": "MDU6TGFiZWw5NDk4MzA2MDg=", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/help%20wanted", "name": "help wanted", "color": "008672", "default": true, "description": "Extra attention is needed"}, {"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}, {"id": 1189891245, "node_id": "MDU6TGFiZWwxMTg5ODkxMjQ1", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/to%20investigate", "name": "to investigate", "color": "f98d00", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-02-15T03:37:52Z", "updated_at": "2019-10-22T13:14:54Z", "closed_at": "2019-10-22T13:14:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running the latest version aka __Keras-Preprocessing==1.0.9__ on around 150K images.\r\nthe __flow_from_directory__ takes <6s to init whereas __flow_from_dataframe__ takes >30s.\r\n\r\nAfter testing the source code, the line  \r\n```\r\nexistence_check = filepaths.map(os.path.isfile)\r\n``` \r\n\r\nis consuming almost all the time. This is a known issue of file check as I  [google it](https://www.google.com/search?q=os.path.isfile%20slow)\r\n\r\nAfter removing the ___filter_valid_filepaths__ (i.e. format_check & existence_check) my code takes < 0.5s.\r\n\r\nAny methods to speed up?\r\n\r\nIf not, a switch for users might be a solution(I am pretty sure all the files in my dataframe  are valid files and  not directories.). thx\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/169", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/169/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/169/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/169", "id": 408472794, "node_id": "MDU6SXNzdWU0MDg0NzI3OTQ=", "number": 169, "title": "\"Found 0 images\" in version 1.0.9", "user": {"login": "realEthanZou", "id": 26786073, "node_id": "MDQ6VXNlcjI2Nzg2MDcz", "avatar_url": "https://avatars2.githubusercontent.com/u/26786073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/realEthanZou", "html_url": "https://github.com/realEthanZou", "followers_url": "https://api.github.com/users/realEthanZou/followers", "following_url": "https://api.github.com/users/realEthanZou/following{/other_user}", "gists_url": "https://api.github.com/users/realEthanZou/gists{/gist_id}", "starred_url": "https://api.github.com/users/realEthanZou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/realEthanZou/subscriptions", "organizations_url": "https://api.github.com/users/realEthanZou/orgs", "repos_url": "https://api.github.com/users/realEthanZou/repos", "events_url": "https://api.github.com/users/realEthanZou/events{/privacy}", "received_events_url": "https://api.github.com/users/realEthanZou/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-09T21:29:59Z", "updated_at": "2019-02-10T09:10:48Z", "closed_at": "2019-02-10T09:10:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "These codes works fine in version 1.0.5, but fails to find images in 1.0.9.\r\n\r\n```\r\nbatch_size = 128\r\nepochs = 100\r\n\r\n# load data and model\r\ntrain_dataset = pd.read_csv(\"datasets/train_labels.csv\")\r\ntrain_dataset['label'] = train_dataset['label'].astype('str')\r\ntrain_set, dev_set = train_test_split(train_dataset, test_size=0.05, random_state=42)\r\nmodel = get_model()  # resnet50 with a sigmoid dense layer\r\n\r\n# configure data generator\r\ndatagen = ImageDataGenerator()\r\ntrain_datagen = datagen.flow_from_dataframe(train_set, directory=\"datasets/train\", x_col='id', y_col='label',\r\n                                            has_ext=False, target_size=(96, 96), class_mode='binary',\r\n                                            batch_size=batch_size)\r\ndev_datagen = datagen.flow_from_dataframe(dev_set, directory=\"datasets/train\", x_col='id', y_col='label', has_ext=False,\r\n                                          target_size=(96, 96), class_mode='binary', batch_size=batch_size,\r\n                                          shuffle=False)\r\n\r\nmodel.fit_generator(train_datagen, steps_per_epoch=train_datagen.n // batch_size, epochs=epochs, verbose=1,\r\n                    validation_data=dev_datagen, validation_steps=dev_datagen.n // batch_size)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/165", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/165/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/165/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/165", "id": 407472335, "node_id": "MDU6SXNzdWU0MDc0NzIzMzU=", "number": 165, "title": "Flow from dataframe to support 4 color channels", "user": {"login": "cameronbronstein", "id": 44240251, "node_id": "MDQ6VXNlcjQ0MjQwMjUx", "avatar_url": "https://avatars2.githubusercontent.com/u/44240251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cameronbronstein", "html_url": "https://github.com/cameronbronstein", "followers_url": "https://api.github.com/users/cameronbronstein/followers", "following_url": "https://api.github.com/users/cameronbronstein/following{/other_user}", "gists_url": "https://api.github.com/users/cameronbronstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/cameronbronstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cameronbronstein/subscriptions", "organizations_url": "https://api.github.com/users/cameronbronstein/orgs", "repos_url": "https://api.github.com/users/cameronbronstein/repos", "events_url": "https://api.github.com/users/cameronbronstein/events{/privacy}", "received_events_url": "https://api.github.com/users/cameronbronstein/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1191735928, "node_id": "MDU6TGFiZWwxMTkxNzM1OTI4", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/documentation", "name": "documentation", "color": "5319e7", "default": true, "description": "Related to the documentation"}, {"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": {"login": "Dref360", "id": 8976546, "node_id": "MDQ6VXNlcjg5NzY1NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8976546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dref360", "html_url": "https://github.com/Dref360", "followers_url": "https://api.github.com/users/Dref360/followers", "following_url": "https://api.github.com/users/Dref360/following{/other_user}", "gists_url": "https://api.github.com/users/Dref360/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dref360/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dref360/subscriptions", "organizations_url": "https://api.github.com/users/Dref360/orgs", "repos_url": "https://api.github.com/users/Dref360/repos", "events_url": "https://api.github.com/users/Dref360/events{/privacy}", "received_events_url": "https://api.github.com/users/Dref360/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Dref360", "id": 8976546, "node_id": "MDQ6VXNlcjg5NzY1NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8976546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dref360", "html_url": "https://github.com/Dref360", "followers_url": "https://api.github.com/users/Dref360/followers", "following_url": "https://api.github.com/users/Dref360/following{/other_user}", "gists_url": "https://api.github.com/users/Dref360/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dref360/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dref360/subscriptions", "organizations_url": "https://api.github.com/users/Dref360/orgs", "repos_url": "https://api.github.com/users/Dref360/repos", "events_url": "https://api.github.com/users/Dref360/events{/privacy}", "received_events_url": "https://api.github.com/users/Dref360/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-02-06T23:06:08Z", "updated_at": "2019-02-19T15:38:38Z", "closed_at": "2019-02-19T15:38:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there.\r\n\r\nI am using the `.flow_from_dataframe` for the newest ImageDataGenerator for a multi-label classification problem. It has been amazing for me, but I wanted to bring up the issue that this method currently only support 1 or 3 color channels. My project is with Satellite Imagery, which commonly has Near IR bands. It would be great to be able to use all the bands. \r\n\r\nI believe similar [issues](https://github.com/keras-team/keras/issues/4664) have reported prior to the .flow_from_dataframe method, and were update accordingly for `.flow` and `.flow_from_directory`.\r\n\r\n```\r\ncolor_mode: one of \"grayscale\", \"rbg\". Default: \"rgb\".\r\n            Whether the images will be converted to have\r\n            1 or 3 color channels.\r\n```\r\n\r\nThank you thank you!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/164", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/164/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/164/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/164", "id": 407150703, "node_id": "MDU6SXNzdWU0MDcxNTA3MDM=", "number": 164, "title": "flow_from_dataframe() returns 0 images belonging to 0 class", "user": {"login": "santhoshsridhar0304", "id": 44573572, "node_id": "MDQ6VXNlcjQ0NTczNTcy", "avatar_url": "https://avatars0.githubusercontent.com/u/44573572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/santhoshsridhar0304", "html_url": "https://github.com/santhoshsridhar0304", "followers_url": "https://api.github.com/users/santhoshsridhar0304/followers", "following_url": "https://api.github.com/users/santhoshsridhar0304/following{/other_user}", "gists_url": "https://api.github.com/users/santhoshsridhar0304/gists{/gist_id}", "starred_url": "https://api.github.com/users/santhoshsridhar0304/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/santhoshsridhar0304/subscriptions", "organizations_url": "https://api.github.com/users/santhoshsridhar0304/orgs", "repos_url": "https://api.github.com/users/santhoshsridhar0304/repos", "events_url": "https://api.github.com/users/santhoshsridhar0304/events{/privacy}", "received_events_url": "https://api.github.com/users/santhoshsridhar0304/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-06T09:43:11Z", "updated_at": "2019-02-06T10:08:41Z", "closed_at": "2019-02-06T10:08:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have checked the path and I can't find any issues with the specified path.\r\n\r\n```\r\ndataPath = Path(os.path.abspath('./data/train'))\r\ndataPath\r\ndataPath.exists()\r\nlen(os.listdir(dataPath))\r\n```\r\n**Output:**\r\n\r\n> > > dataPath = Path(os.path.abspath('./data/train'))\r\n> > > dataPath\r\n> > > WindowsPath('D:/python/Deep Learning/Case Studies/dog-breed-identification/data/train')\r\n> > > dataPath.exists()\r\n> > > True\r\n> > > len(os.listdir(dataPath))\r\n> > > 10222\r\n\r\nI'm able to list all my 10,222 images.\r\n\r\nHere is my ImageDataGenerator Code:\r\n\r\n```\r\ndata_gen = ImageDataGenerator(rescale=1./255,\r\n                              shear_range=0.2,\r\n                              zoom_range=0.2,\r\n                              horizontal_flip=True,\r\n                              validation_split=0.2)\r\nX_train = data_gen.flow_from_dataframe(dataframe=df, directory=dataPath,\r\n                                       x_col='id', y_col='breed',\r\n                                       subset='training',\r\n                                       class_mode='categorical', batch_size=32,\r\n                                       target_size=(64, 64))\r\n\r\nX_test = data_gen.flow_from_dataframe(dataframe=df, directory=dataPath',\r\n                                      batch_size=32,\r\n                                      x_col='id', y_col='breed',\r\n                                      subset='validation', class_mode='categorical',\r\n                                      target_size=(64, 64)\r\n                                      )\r\n```\r\nNot able to identify where I'm going wrong.\r\n\r\nI'm using,\r\nWindows 10.1\r\nkeras 2.2.4\r\nTensorFlow Backend\r\nThank you!\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/162", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/162/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/162/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/162", "id": 406886361, "node_id": "MDU6SXNzdWU0MDY4ODYzNjE=", "number": 162, "title": "1.0.9 release plans?", "user": {"login": "craigcitro", "id": 468559, "node_id": "MDQ6VXNlcjQ2ODU1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-05T17:12:25Z", "updated_at": "2019-02-06T20:59:11Z", "closed_at": "2019-02-06T20:59:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "tl;dr: Is there a plan for a 1.0.9 release?\r\n\r\nWe automatically include keras-preprocessing in Google Colab, where we had a user run into https://github.com/googlecolab/colabtools/issues/408 -- this looks to already be fixed at HEAD, and I'm going to bump us back to 1.0.6 for now, but I wanted to see if there was a plan for 1.0.9 (since I suspect other users will also be broken).\r\n\r\n- [x] Check that you are up-to-date with the master branch of keras-preprocessing. You can update with:\r\n`pip install git+git://github.com/keras-team/keras-preprocessing.git --upgrade --no-deps`\r\n\r\n- [x] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).\r\n\r\nRepro link: https://colab.research.google.com/drive/1XIBXpR--3PPNPypBDfhim3qwZla7Zkwp", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/157", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/157/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/157/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/157", "id": 404811654, "node_id": "MDU6SXNzdWU0MDQ4MTE2NTQ=", "number": 157, "title": "flow_from_directory gives incorrect labels/filenames", "user": {"login": "Tahedi1", "id": 45235641, "node_id": "MDQ6VXNlcjQ1MjM1NjQx", "avatar_url": "https://avatars1.githubusercontent.com/u/45235641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tahedi1", "html_url": "https://github.com/Tahedi1", "followers_url": "https://api.github.com/users/Tahedi1/followers", "following_url": "https://api.github.com/users/Tahedi1/following{/other_user}", "gists_url": "https://api.github.com/users/Tahedi1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tahedi1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tahedi1/subscriptions", "organizations_url": "https://api.github.com/users/Tahedi1/orgs", "repos_url": "https://api.github.com/users/Tahedi1/repos", "events_url": "https://api.github.com/users/Tahedi1/events{/privacy}", "received_events_url": "https://api.github.com/users/Tahedi1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-30T15:01:20Z", "updated_at": "2019-02-01T07:29:31Z", "closed_at": "2019-02-01T07:29:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nI have folder of data set containing 600 images and 3 classes organised as following:\r\n```\r\ndata_set\r\n---> train (300 images)\r\n---------> circle\r\n---------> traingle\r\n---------> rectangle\r\n---> val (300 images)\r\n---------> circle\r\n---------> traingle\r\n---------> rectangle\r\n```\r\nTo do batch processing, I have used the following code :\r\n```\r\nimages_folder = '.../data_set/val'\r\nbatch_size=64\r\nimage_size=(224,224)\r\nimages_datagen = ImageDataGenerator(preprocessing_function=preprocess_input)\r\nimages_generator = images_datagen.flow_from_directory(\r\n                images_folder,\r\n                target_size=image_size,\r\n                batch_size=batch_size,\r\n                class_mode='categorical',\r\n                shuffle=False\r\n                ) \r\n```\r\nThen, I itterate using images_generator using this code:\r\n```\r\nimages_generator.reset()\r\nbatch_index=0\r\nwhile batch_index <= images_generator.batch_index:\r\n\timgs,y = images_generator.next()\r\n\treal_batch_size=len(imgs)\r\n\tidx = batch_index * real_batch_size\r\n\timg_file_names=images_generator.filenames[idx : idx + real_batch_size]\r\n\tprint('------------------------------------------------------------------')\r\n\tprint('Batch number %d contains %d images'%(batch_index+1,real_batch_size))\r\n\tprint('-----------------------------------------------------------------+')\r\n\tfor i in range(0,real_batch_size):\r\n\t\tprint(img_file_names[i],y[i])\r\n\tbatch_index=batch_index+1\r\n```\r\nI have noticed that labels/filenames of the last batch (real_batch_size=24) are not related. Examples in this batch have a file name that not related to the ground truth label. According to the file name examples are in classe **_rectangle_**  but labels are **_traingle_**. This is is the output of my script:\r\n```\r\nUsing TensorFlow backend.\r\nFound 600 images belonging to 3 classes.\r\n------------------------------------------------------------------\r\nBatch number 1 contains 64 images\r\n-----------------------------------------------------------------+\r\ncircle/circle_0.png [1. 0. 0.]\r\ncircle/circle_1.png [1. 0. 0.]\r\ncircle/circle_10.png [1. 0. 0.]\r\ncircle/circle_100.png [1. 0. 0.]\r\ncircle/circle_101.png [1. 0. 0.]\r\ncircle/circle_102.png [1. 0. 0.]\r\ncircle/circle_103.png [1. 0. 0.]\r\ncircle/circle_104.png [1. 0. 0.]\r\ncircle/circle_105.png [1. 0. 0.]\r\ncircle/circle_106.png [1. 0. 0.]\r\ncircle/circle_107.png [1. 0. 0.]\r\ncircle/circle_108.png [1. 0. 0.]\r\ncircle/circle_109.png [1. 0. 0.]\r\ncircle/circle_11.png [1. 0. 0.]\r\ncircle/circle_110.png [1. 0. 0.]\r\ncircle/circle_111.png [1. 0. 0.]\r\ncircle/circle_112.png [1. 0. 0.]\r\ncircle/circle_113.png [1. 0. 0.]\r\ncircle/circle_114.png [1. 0. 0.]\r\ncircle/circle_115.png [1. 0. 0.]\r\ncircle/circle_116.png [1. 0. 0.]\r\ncircle/circle_117.png [1. 0. 0.]\r\ncircle/circle_118.png [1. 0. 0.]\r\ncircle/circle_119.png [1. 0. 0.]\r\ncircle/circle_12.png [1. 0. 0.]\r\ncircle/circle_120.png [1. 0. 0.]\r\ncircle/circle_121.png [1. 0. 0.]\r\ncircle/circle_122.png [1. 0. 0.]\r\ncircle/circle_123.png [1. 0. 0.]\r\ncircle/circle_124.png [1. 0. 0.]\r\ncircle/circle_125.png [1. 0. 0.]\r\ncircle/circle_126.png [1. 0. 0.]\r\ncircle/circle_127.png [1. 0. 0.]\r\ncircle/circle_128.png [1. 0. 0.]\r\ncircle/circle_129.png [1. 0. 0.]\r\ncircle/circle_13.png [1. 0. 0.]\r\ncircle/circle_130.png [1. 0. 0.]\r\ncircle/circle_131.png [1. 0. 0.]\r\ncircle/circle_132.png [1. 0. 0.]\r\ncircle/circle_133.png [1. 0. 0.]\r\ncircle/circle_134.png [1. 0. 0.]\r\ncircle/circle_135.png [1. 0. 0.]\r\ncircle/circle_136.png [1. 0. 0.]\r\ncircle/circle_137.png [1. 0. 0.]\r\ncircle/circle_138.png [1. 0. 0.]\r\ncircle/circle_139.png [1. 0. 0.]\r\ncircle/circle_14.png [1. 0. 0.]\r\ncircle/circle_140.png [1. 0. 0.]\r\ncircle/circle_141.png [1. 0. 0.]\r\ncircle/circle_142.png [1. 0. 0.]\r\ncircle/circle_143.png [1. 0. 0.]\r\ncircle/circle_144.png [1. 0. 0.]\r\ncircle/circle_145.png [1. 0. 0.]\r\ncircle/circle_146.png [1. 0. 0.]\r\ncircle/circle_147.png [1. 0. 0.]\r\ncircle/circle_148.png [1. 0. 0.]\r\ncircle/circle_149.png [1. 0. 0.]\r\ncircle/circle_15.png [1. 0. 0.]\r\ncircle/circle_150.png [1. 0. 0.]\r\ncircle/circle_151.png [1. 0. 0.]\r\ncircle/circle_152.png [1. 0. 0.]\r\ncircle/circle_153.png [1. 0. 0.]\r\ncircle/circle_154.png [1. 0. 0.]\r\ncircle/circle_155.png [1. 0. 0.]\r\n------------------------------------------------------------------\r\nBatch number 2 contains 64 images\r\n-----------------------------------------------------------------+\r\ncircle/circle_156.png [1. 0. 0.]\r\ncircle/circle_157.png [1. 0. 0.]\r\ncircle/circle_158.png [1. 0. 0.]\r\ncircle/circle_159.png [1. 0. 0.]\r\ncircle/circle_16.png [1. 0. 0.]\r\ncircle/circle_160.png [1. 0. 0.]\r\ncircle/circle_161.png [1. 0. 0.]\r\ncircle/circle_162.png [1. 0. 0.]\r\ncircle/circle_163.png [1. 0. 0.]\r\ncircle/circle_164.png [1. 0. 0.]\r\ncircle/circle_165.png [1. 0. 0.]\r\ncircle/circle_166.png [1. 0. 0.]\r\ncircle/circle_167.png [1. 0. 0.]\r\ncircle/circle_168.png [1. 0. 0.]\r\ncircle/circle_169.png [1. 0. 0.]\r\ncircle/circle_17.png [1. 0. 0.]\r\ncircle/circle_170.png [1. 0. 0.]\r\ncircle/circle_171.png [1. 0. 0.]\r\ncircle/circle_172.png [1. 0. 0.]\r\ncircle/circle_173.png [1. 0. 0.]\r\ncircle/circle_174.png [1. 0. 0.]\r\ncircle/circle_175.png [1. 0. 0.]\r\ncircle/circle_176.png [1. 0. 0.]\r\ncircle/circle_177.png [1. 0. 0.]\r\ncircle/circle_178.png [1. 0. 0.]\r\ncircle/circle_179.png [1. 0. 0.]\r\ncircle/circle_18.png [1. 0. 0.]\r\ncircle/circle_180.png [1. 0. 0.]\r\ncircle/circle_181.png [1. 0. 0.]\r\ncircle/circle_182.png [1. 0. 0.]\r\ncircle/circle_183.png [1. 0. 0.]\r\ncircle/circle_184.png [1. 0. 0.]\r\ncircle/circle_185.png [1. 0. 0.]\r\ncircle/circle_186.png [1. 0. 0.]\r\ncircle/circle_187.png [1. 0. 0.]\r\ncircle/circle_188.png [1. 0. 0.]\r\ncircle/circle_189.png [1. 0. 0.]\r\ncircle/circle_19.png [1. 0. 0.]\r\ncircle/circle_190.png [1. 0. 0.]\r\ncircle/circle_191.png [1. 0. 0.]\r\ncircle/circle_192.png [1. 0. 0.]\r\ncircle/circle_193.png [1. 0. 0.]\r\ncircle/circle_194.png [1. 0. 0.]\r\ncircle/circle_195.png [1. 0. 0.]\r\ncircle/circle_196.png [1. 0. 0.]\r\ncircle/circle_197.png [1. 0. 0.]\r\ncircle/circle_198.png [1. 0. 0.]\r\ncircle/circle_199.png [1. 0. 0.]\r\ncircle/circle_2.png [1. 0. 0.]\r\ncircle/circle_20.png [1. 0. 0.]\r\ncircle/circle_21.png [1. 0. 0.]\r\ncircle/circle_22.png [1. 0. 0.]\r\ncircle/circle_23.png [1. 0. 0.]\r\ncircle/circle_24.png [1. 0. 0.]\r\ncircle/circle_25.png [1. 0. 0.]\r\ncircle/circle_26.png [1. 0. 0.]\r\ncircle/circle_27.png [1. 0. 0.]\r\ncircle/circle_28.png [1. 0. 0.]\r\ncircle/circle_29.png [1. 0. 0.]\r\ncircle/circle_3.png [1. 0. 0.]\r\ncircle/circle_30.png [1. 0. 0.]\r\ncircle/circle_31.png [1. 0. 0.]\r\ncircle/circle_32.png [1. 0. 0.]\r\ncircle/circle_33.png [1. 0. 0.]\r\n------------------------------------------------------------------\r\nBatch number 3 contains 64 images\r\n-----------------------------------------------------------------+\r\ncircle/circle_34.png [1. 0. 0.]\r\ncircle/circle_35.png [1. 0. 0.]\r\ncircle/circle_36.png [1. 0. 0.]\r\ncircle/circle_37.png [1. 0. 0.]\r\ncircle/circle_38.png [1. 0. 0.]\r\ncircle/circle_39.png [1. 0. 0.]\r\ncircle/circle_4.png [1. 0. 0.]\r\ncircle/circle_40.png [1. 0. 0.]\r\ncircle/circle_41.png [1. 0. 0.]\r\ncircle/circle_42.png [1. 0. 0.]\r\ncircle/circle_43.png [1. 0. 0.]\r\ncircle/circle_44.png [1. 0. 0.]\r\ncircle/circle_45.png [1. 0. 0.]\r\ncircle/circle_46.png [1. 0. 0.]\r\ncircle/circle_47.png [1. 0. 0.]\r\ncircle/circle_48.png [1. 0. 0.]\r\ncircle/circle_49.png [1. 0. 0.]\r\ncircle/circle_5.png [1. 0. 0.]\r\ncircle/circle_50.png [1. 0. 0.]\r\ncircle/circle_51.png [1. 0. 0.]\r\ncircle/circle_52.png [1. 0. 0.]\r\ncircle/circle_53.png [1. 0. 0.]\r\ncircle/circle_54.png [1. 0. 0.]\r\ncircle/circle_55.png [1. 0. 0.]\r\ncircle/circle_56.png [1. 0. 0.]\r\ncircle/circle_57.png [1. 0. 0.]\r\ncircle/circle_58.png [1. 0. 0.]\r\ncircle/circle_59.png [1. 0. 0.]\r\ncircle/circle_6.png [1. 0. 0.]\r\ncircle/circle_60.png [1. 0. 0.]\r\ncircle/circle_61.png [1. 0. 0.]\r\ncircle/circle_62.png [1. 0. 0.]\r\ncircle/circle_63.png [1. 0. 0.]\r\ncircle/circle_64.png [1. 0. 0.]\r\ncircle/circle_65.png [1. 0. 0.]\r\ncircle/circle_66.png [1. 0. 0.]\r\ncircle/circle_67.png [1. 0. 0.]\r\ncircle/circle_68.png [1. 0. 0.]\r\ncircle/circle_69.png [1. 0. 0.]\r\ncircle/circle_7.png [1. 0. 0.]\r\ncircle/circle_70.png [1. 0. 0.]\r\ncircle/circle_71.png [1. 0. 0.]\r\ncircle/circle_72.png [1. 0. 0.]\r\ncircle/circle_73.png [1. 0. 0.]\r\ncircle/circle_74.png [1. 0. 0.]\r\ncircle/circle_75.png [1. 0. 0.]\r\ncircle/circle_76.png [1. 0. 0.]\r\ncircle/circle_77.png [1. 0. 0.]\r\ncircle/circle_78.png [1. 0. 0.]\r\ncircle/circle_79.png [1. 0. 0.]\r\ncircle/circle_8.png [1. 0. 0.]\r\ncircle/circle_80.png [1. 0. 0.]\r\ncircle/circle_81.png [1. 0. 0.]\r\ncircle/circle_82.png [1. 0. 0.]\r\ncircle/circle_83.png [1. 0. 0.]\r\ncircle/circle_84.png [1. 0. 0.]\r\ncircle/circle_85.png [1. 0. 0.]\r\ncircle/circle_86.png [1. 0. 0.]\r\ncircle/circle_87.png [1. 0. 0.]\r\ncircle/circle_88.png [1. 0. 0.]\r\ncircle/circle_89.png [1. 0. 0.]\r\ncircle/circle_9.png [1. 0. 0.]\r\ncircle/circle_90.png [1. 0. 0.]\r\ncircle/circle_91.png [1. 0. 0.]\r\n------------------------------------------------------------------\r\nBatch number 4 contains 64 images\r\n-----------------------------------------------------------------+\r\ncircle/circle_92.png [1. 0. 0.]\r\ncircle/circle_93.png [1. 0. 0.]\r\ncircle/circle_94.png [1. 0. 0.]\r\ncircle/circle_95.png [1. 0. 0.]\r\ncircle/circle_96.png [1. 0. 0.]\r\ncircle/circle_97.png [1. 0. 0.]\r\ncircle/circle_98.png [1. 0. 0.]\r\ncircle/circle_99.png [1. 0. 0.]\r\nrectangle/rectangle_0.png [0. 1. 0.]\r\nrectangle/rectangle_1.png [0. 1. 0.]\r\nrectangle/rectangle_10.png [0. 1. 0.]\r\nrectangle/rectangle_100.png [0. 1. 0.]\r\nrectangle/rectangle_101.png [0. 1. 0.]\r\nrectangle/rectangle_102.png [0. 1. 0.]\r\nrectangle/rectangle_103.png [0. 1. 0.]\r\nrectangle/rectangle_104.png [0. 1. 0.]\r\nrectangle/rectangle_105.png [0. 1. 0.]\r\nrectangle/rectangle_106.png [0. 1. 0.]\r\nrectangle/rectangle_107.png [0. 1. 0.]\r\nrectangle/rectangle_108.png [0. 1. 0.]\r\nrectangle/rectangle_109.png [0. 1. 0.]\r\nrectangle/rectangle_11.png [0. 1. 0.]\r\nrectangle/rectangle_110.png [0. 1. 0.]\r\nrectangle/rectangle_111.png [0. 1. 0.]\r\nrectangle/rectangle_112.png [0. 1. 0.]\r\nrectangle/rectangle_113.png [0. 1. 0.]\r\nrectangle/rectangle_114.png [0. 1. 0.]\r\nrectangle/rectangle_115.png [0. 1. 0.]\r\nrectangle/rectangle_116.png [0. 1. 0.]\r\nrectangle/rectangle_117.png [0. 1. 0.]\r\nrectangle/rectangle_118.png [0. 1. 0.]\r\nrectangle/rectangle_119.png [0. 1. 0.]\r\nrectangle/rectangle_12.png [0. 1. 0.]\r\nrectangle/rectangle_120.png [0. 1. 0.]\r\nrectangle/rectangle_121.png [0. 1. 0.]\r\nrectangle/rectangle_122.png [0. 1. 0.]\r\nrectangle/rectangle_123.png [0. 1. 0.]\r\nrectangle/rectangle_124.png [0. 1. 0.]\r\nrectangle/rectangle_125.png [0. 1. 0.]\r\nrectangle/rectangle_126.png [0. 1. 0.]\r\nrectangle/rectangle_127.png [0. 1. 0.]\r\nrectangle/rectangle_128.png [0. 1. 0.]\r\nrectangle/rectangle_129.png [0. 1. 0.]\r\nrectangle/rectangle_13.png [0. 1. 0.]\r\nrectangle/rectangle_130.png [0. 1. 0.]\r\nrectangle/rectangle_131.png [0. 1. 0.]\r\nrectangle/rectangle_132.png [0. 1. 0.]\r\nrectangle/rectangle_133.png [0. 1. 0.]\r\nrectangle/rectangle_134.png [0. 1. 0.]\r\nrectangle/rectangle_135.png [0. 1. 0.]\r\nrectangle/rectangle_136.png [0. 1. 0.]\r\nrectangle/rectangle_137.png [0. 1. 0.]\r\nrectangle/rectangle_138.png [0. 1. 0.]\r\nrectangle/rectangle_139.png [0. 1. 0.]\r\nrectangle/rectangle_14.png [0. 1. 0.]\r\nrectangle/rectangle_140.png [0. 1. 0.]\r\nrectangle/rectangle_141.png [0. 1. 0.]\r\nrectangle/rectangle_142.png [0. 1. 0.]\r\nrectangle/rectangle_143.png [0. 1. 0.]\r\nrectangle/rectangle_144.png [0. 1. 0.]\r\nrectangle/rectangle_145.png [0. 1. 0.]\r\nrectangle/rectangle_146.png [0. 1. 0.]\r\nrectangle/rectangle_147.png [0. 1. 0.]\r\nrectangle/rectangle_148.png [0. 1. 0.]\r\n------------------------------------------------------------------\r\nBatch number 5 contains 64 images\r\n-----------------------------------------------------------------+\r\nrectangle/rectangle_149.png [0. 1. 0.]\r\nrectangle/rectangle_15.png [0. 1. 0.]\r\nrectangle/rectangle_150.png [0. 1. 0.]\r\nrectangle/rectangle_151.png [0. 1. 0.]\r\nrectangle/rectangle_152.png [0. 1. 0.]\r\nrectangle/rectangle_153.png [0. 1. 0.]\r\nrectangle/rectangle_154.png [0. 1. 0.]\r\nrectangle/rectangle_155.png [0. 1. 0.]\r\nrectangle/rectangle_156.png [0. 1. 0.]\r\nrectangle/rectangle_157.png [0. 1. 0.]\r\nrectangle/rectangle_158.png [0. 1. 0.]\r\nrectangle/rectangle_159.png [0. 1. 0.]\r\nrectangle/rectangle_16.png [0. 1. 0.]\r\nrectangle/rectangle_160.png [0. 1. 0.]\r\nrectangle/rectangle_161.png [0. 1. 0.]\r\nrectangle/rectangle_162.png [0. 1. 0.]\r\nrectangle/rectangle_163.png [0. 1. 0.]\r\nrectangle/rectangle_164.png [0. 1. 0.]\r\nrectangle/rectangle_165.png [0. 1. 0.]\r\nrectangle/rectangle_166.png [0. 1. 0.]\r\nrectangle/rectangle_167.png [0. 1. 0.]\r\nrectangle/rectangle_168.png [0. 1. 0.]\r\nrectangle/rectangle_169.png [0. 1. 0.]\r\nrectangle/rectangle_17.png [0. 1. 0.]\r\nrectangle/rectangle_170.png [0. 1. 0.]\r\nrectangle/rectangle_171.png [0. 1. 0.]\r\nrectangle/rectangle_172.png [0. 1. 0.]\r\nrectangle/rectangle_173.png [0. 1. 0.]\r\nrectangle/rectangle_174.png [0. 1. 0.]\r\nrectangle/rectangle_175.png [0. 1. 0.]\r\nrectangle/rectangle_176.png [0. 1. 0.]\r\nrectangle/rectangle_177.png [0. 1. 0.]\r\nrectangle/rectangle_178.png [0. 1. 0.]\r\nrectangle/rectangle_179.png [0. 1. 0.]\r\nrectangle/rectangle_18.png [0. 1. 0.]\r\nrectangle/rectangle_180.png [0. 1. 0.]\r\nrectangle/rectangle_181.png [0. 1. 0.]\r\nrectangle/rectangle_182.png [0. 1. 0.]\r\nrectangle/rectangle_183.png [0. 1. 0.]\r\nrectangle/rectangle_184.png [0. 1. 0.]\r\nrectangle/rectangle_185.png [0. 1. 0.]\r\nrectangle/rectangle_186.png [0. 1. 0.]\r\nrectangle/rectangle_187.png [0. 1. 0.]\r\nrectangle/rectangle_188.png [0. 1. 0.]\r\nrectangle/rectangle_189.png [0. 1. 0.]\r\nrectangle/rectangle_19.png [0. 1. 0.]\r\nrectangle/rectangle_190.png [0. 1. 0.]\r\nrectangle/rectangle_191.png [0. 1. 0.]\r\nrectangle/rectangle_192.png [0. 1. 0.]\r\nrectangle/rectangle_193.png [0. 1. 0.]\r\nrectangle/rectangle_194.png [0. 1. 0.]\r\nrectangle/rectangle_195.png [0. 1. 0.]\r\nrectangle/rectangle_196.png [0. 1. 0.]\r\nrectangle/rectangle_197.png [0. 1. 0.]\r\nrectangle/rectangle_198.png [0. 1. 0.]\r\nrectangle/rectangle_199.png [0. 1. 0.]\r\nrectangle/rectangle_2.png [0. 1. 0.]\r\nrectangle/rectangle_20.png [0. 1. 0.]\r\nrectangle/rectangle_21.png [0. 1. 0.]\r\nrectangle/rectangle_22.png [0. 1. 0.]\r\nrectangle/rectangle_23.png [0. 1. 0.]\r\nrectangle/rectangle_24.png [0. 1. 0.]\r\nrectangle/rectangle_25.png [0. 1. 0.]\r\nrectangle/rectangle_26.png [0. 1. 0.]\r\n------------------------------------------------------------------\r\nBatch number 6 contains 64 images\r\n-----------------------------------------------------------------+\r\nrectangle/rectangle_27.png [0. 1. 0.]\r\nrectangle/rectangle_28.png [0. 1. 0.]\r\nrectangle/rectangle_29.png [0. 1. 0.]\r\nrectangle/rectangle_3.png [0. 1. 0.]\r\nrectangle/rectangle_30.png [0. 1. 0.]\r\nrectangle/rectangle_31.png [0. 1. 0.]\r\nrectangle/rectangle_32.png [0. 1. 0.]\r\nrectangle/rectangle_33.png [0. 1. 0.]\r\nrectangle/rectangle_34.png [0. 1. 0.]\r\nrectangle/rectangle_35.png [0. 1. 0.]\r\nrectangle/rectangle_36.png [0. 1. 0.]\r\nrectangle/rectangle_37.png [0. 1. 0.]\r\nrectangle/rectangle_38.png [0. 1. 0.]\r\nrectangle/rectangle_39.png [0. 1. 0.]\r\nrectangle/rectangle_4.png [0. 1. 0.]\r\nrectangle/rectangle_40.png [0. 1. 0.]\r\nrectangle/rectangle_41.png [0. 1. 0.]\r\nrectangle/rectangle_42.png [0. 1. 0.]\r\nrectangle/rectangle_43.png [0. 1. 0.]\r\nrectangle/rectangle_44.png [0. 1. 0.]\r\nrectangle/rectangle_45.png [0. 1. 0.]\r\nrectangle/rectangle_46.png [0. 1. 0.]\r\nrectangle/rectangle_47.png [0. 1. 0.]\r\nrectangle/rectangle_48.png [0. 1. 0.]\r\nrectangle/rectangle_49.png [0. 1. 0.]\r\nrectangle/rectangle_5.png [0. 1. 0.]\r\nrectangle/rectangle_50.png [0. 1. 0.]\r\nrectangle/rectangle_51.png [0. 1. 0.]\r\nrectangle/rectangle_52.png [0. 1. 0.]\r\nrectangle/rectangle_53.png [0. 1. 0.]\r\nrectangle/rectangle_54.png [0. 1. 0.]\r\nrectangle/rectangle_55.png [0. 1. 0.]\r\nrectangle/rectangle_56.png [0. 1. 0.]\r\nrectangle/rectangle_57.png [0. 1. 0.]\r\nrectangle/rectangle_58.png [0. 1. 0.]\r\nrectangle/rectangle_59.png [0. 1. 0.]\r\nrectangle/rectangle_6.png [0. 1. 0.]\r\nrectangle/rectangle_60.png [0. 1. 0.]\r\nrectangle/rectangle_61.png [0. 1. 0.]\r\nrectangle/rectangle_62.png [0. 1. 0.]\r\nrectangle/rectangle_63.png [0. 1. 0.]\r\nrectangle/rectangle_64.png [0. 1. 0.]\r\nrectangle/rectangle_65.png [0. 1. 0.]\r\nrectangle/rectangle_66.png [0. 1. 0.]\r\nrectangle/rectangle_67.png [0. 1. 0.]\r\nrectangle/rectangle_68.png [0. 1. 0.]\r\nrectangle/rectangle_69.png [0. 1. 0.]\r\nrectangle/rectangle_7.png [0. 1. 0.]\r\nrectangle/rectangle_70.png [0. 1. 0.]\r\nrectangle/rectangle_71.png [0. 1. 0.]\r\nrectangle/rectangle_72.png [0. 1. 0.]\r\nrectangle/rectangle_73.png [0. 1. 0.]\r\nrectangle/rectangle_74.png [0. 1. 0.]\r\nrectangle/rectangle_75.png [0. 1. 0.]\r\nrectangle/rectangle_76.png [0. 1. 0.]\r\nrectangle/rectangle_77.png [0. 1. 0.]\r\nrectangle/rectangle_78.png [0. 1. 0.]\r\nrectangle/rectangle_79.png [0. 1. 0.]\r\nrectangle/rectangle_8.png [0. 1. 0.]\r\nrectangle/rectangle_80.png [0. 1. 0.]\r\nrectangle/rectangle_81.png [0. 1. 0.]\r\nrectangle/rectangle_82.png [0. 1. 0.]\r\nrectangle/rectangle_83.png [0. 1. 0.]\r\nrectangle/rectangle_84.png [0. 1. 0.]\r\n------------------------------------------------------------------\r\nBatch number 7 contains 64 images\r\n-----------------------------------------------------------------+\r\nrectangle/rectangle_85.png [0. 1. 0.]\r\nrectangle/rectangle_86.png [0. 1. 0.]\r\nrectangle/rectangle_87.png [0. 1. 0.]\r\nrectangle/rectangle_88.png [0. 1. 0.]\r\nrectangle/rectangle_89.png [0. 1. 0.]\r\nrectangle/rectangle_9.png [0. 1. 0.]\r\nrectangle/rectangle_90.png [0. 1. 0.]\r\nrectangle/rectangle_91.png [0. 1. 0.]\r\nrectangle/rectangle_92.png [0. 1. 0.]\r\nrectangle/rectangle_93.png [0. 1. 0.]\r\nrectangle/rectangle_94.png [0. 1. 0.]\r\nrectangle/rectangle_95.png [0. 1. 0.]\r\nrectangle/rectangle_96.png [0. 1. 0.]\r\nrectangle/rectangle_97.png [0. 1. 0.]\r\nrectangle/rectangle_98.png [0. 1. 0.]\r\nrectangle/rectangle_99.png [0. 1. 0.]\r\ntriangle/triangle_0.png [0. 0. 1.]\r\ntriangle/triangle_1.png [0. 0. 1.]\r\ntriangle/triangle_10.png [0. 0. 1.]\r\ntriangle/triangle_100.png [0. 0. 1.]\r\ntriangle/triangle_101.png [0. 0. 1.]\r\ntriangle/triangle_102.png [0. 0. 1.]\r\ntriangle/triangle_103.png [0. 0. 1.]\r\ntriangle/triangle_104.png [0. 0. 1.]\r\ntriangle/triangle_105.png [0. 0. 1.]\r\ntriangle/triangle_106.png [0. 0. 1.]\r\ntriangle/triangle_107.png [0. 0. 1.]\r\ntriangle/triangle_108.png [0. 0. 1.]\r\ntriangle/triangle_109.png [0. 0. 1.]\r\ntriangle/triangle_11.png [0. 0. 1.]\r\ntriangle/triangle_110.png [0. 0. 1.]\r\ntriangle/triangle_111.png [0. 0. 1.]\r\ntriangle/triangle_112.png [0. 0. 1.]\r\ntriangle/triangle_113.png [0. 0. 1.]\r\ntriangle/triangle_114.png [0. 0. 1.]\r\ntriangle/triangle_115.png [0. 0. 1.]\r\ntriangle/triangle_116.png [0. 0. 1.]\r\ntriangle/triangle_117.png [0. 0. 1.]\r\ntriangle/triangle_118.png [0. 0. 1.]\r\ntriangle/triangle_119.png [0. 0. 1.]\r\ntriangle/triangle_12.png [0. 0. 1.]\r\ntriangle/triangle_120.png [0. 0. 1.]\r\ntriangle/triangle_121.png [0. 0. 1.]\r\ntriangle/triangle_122.png [0. 0. 1.]\r\ntriangle/triangle_123.png [0. 0. 1.]\r\ntriangle/triangle_124.png [0. 0. 1.]\r\ntriangle/triangle_125.png [0. 0. 1.]\r\ntriangle/triangle_126.png [0. 0. 1.]\r\ntriangle/triangle_127.png [0. 0. 1.]\r\ntriangle/triangle_128.png [0. 0. 1.]\r\ntriangle/triangle_129.png [0. 0. 1.]\r\ntriangle/triangle_13.png [0. 0. 1.]\r\ntriangle/triangle_130.png [0. 0. 1.]\r\ntriangle/triangle_131.png [0. 0. 1.]\r\ntriangle/triangle_132.png [0. 0. 1.]\r\ntriangle/triangle_133.png [0. 0. 1.]\r\ntriangle/triangle_134.png [0. 0. 1.]\r\ntriangle/triangle_135.png [0. 0. 1.]\r\ntriangle/triangle_136.png [0. 0. 1.]\r\ntriangle/triangle_137.png [0. 0. 1.]\r\ntriangle/triangle_138.png [0. 0. 1.]\r\ntriangle/triangle_139.png [0. 0. 1.]\r\ntriangle/triangle_14.png [0. 0. 1.]\r\ntriangle/triangle_140.png [0. 0. 1.]\r\n------------------------------------------------------------------\r\nBatch number 8 contains 64 images\r\n-----------------------------------------------------------------+\r\ntriangle/triangle_141.png [0. 0. 1.]\r\ntriangle/triangle_142.png [0. 0. 1.]\r\ntriangle/triangle_143.png [0. 0. 1.]\r\ntriangle/triangle_144.png [0. 0. 1.]\r\ntriangle/triangle_145.png [0. 0. 1.]\r\ntriangle/triangle_146.png [0. 0. 1.]\r\ntriangle/triangle_147.png [0. 0. 1.]\r\ntriangle/triangle_148.png [0. 0. 1.]\r\ntriangle/triangle_149.png [0. 0. 1.]\r\ntriangle/triangle_15.png [0. 0. 1.]\r\ntriangle/triangle_150.png [0. 0. 1.]\r\ntriangle/triangle_151.png [0. 0. 1.]\r\ntriangle/triangle_152.png [0. 0. 1.]\r\ntriangle/triangle_153.png [0. 0. 1.]\r\ntriangle/triangle_154.png [0. 0. 1.]\r\ntriangle/triangle_155.png [0. 0. 1.]\r\ntriangle/triangle_156.png [0. 0. 1.]\r\ntriangle/triangle_157.png [0. 0. 1.]\r\ntriangle/triangle_158.png [0. 0. 1.]\r\ntriangle/triangle_159.png [0. 0. 1.]\r\ntriangle/triangle_16.png [0. 0. 1.]\r\ntriangle/triangle_160.png [0. 0. 1.]\r\ntriangle/triangle_161.png [0. 0. 1.]\r\ntriangle/triangle_162.png [0. 0. 1.]\r\ntriangle/triangle_163.png [0. 0. 1.]\r\ntriangle/triangle_164.png [0. 0. 1.]\r\ntriangle/triangle_165.png [0. 0. 1.]\r\ntriangle/triangle_166.png [0. 0. 1.]\r\ntriangle/triangle_167.png [0. 0. 1.]\r\ntriangle/triangle_168.png [0. 0. 1.]\r\ntriangle/triangle_169.png [0. 0. 1.]\r\ntriangle/triangle_17.png [0. 0. 1.]\r\ntriangle/triangle_170.png [0. 0. 1.]\r\ntriangle/triangle_171.png [0. 0. 1.]\r\ntriangle/triangle_172.png [0. 0. 1.]\r\ntriangle/triangle_173.png [0. 0. 1.]\r\ntriangle/triangle_174.png [0. 0. 1.]\r\ntriangle/triangle_175.png [0. 0. 1.]\r\ntriangle/triangle_176.png [0. 0. 1.]\r\ntriangle/triangle_177.png [0. 0. 1.]\r\ntriangle/triangle_178.png [0. 0. 1.]\r\ntriangle/triangle_179.png [0. 0. 1.]\r\ntriangle/triangle_18.png [0. 0. 1.]\r\ntriangle/triangle_180.png [0. 0. 1.]\r\ntriangle/triangle_181.png [0. 0. 1.]\r\ntriangle/triangle_182.png [0. 0. 1.]\r\ntriangle/triangle_183.png [0. 0. 1.]\r\ntriangle/triangle_184.png [0. 0. 1.]\r\ntriangle/triangle_185.png [0. 0. 1.]\r\ntriangle/triangle_186.png [0. 0. 1.]\r\ntriangle/triangle_187.png [0. 0. 1.]\r\ntriangle/triangle_188.png [0. 0. 1.]\r\ntriangle/triangle_189.png [0. 0. 1.]\r\ntriangle/triangle_19.png [0. 0. 1.]\r\ntriangle/triangle_190.png [0. 0. 1.]\r\ntriangle/triangle_191.png [0. 0. 1.]\r\ntriangle/triangle_192.png [0. 0. 1.]\r\ntriangle/triangle_193.png [0. 0. 1.]\r\ntriangle/triangle_194.png [0. 0. 1.]\r\ntriangle/triangle_195.png [0. 0. 1.]\r\ntriangle/triangle_196.png [0. 0. 1.]\r\ntriangle/triangle_197.png [0. 0. 1.]\r\ntriangle/triangle_198.png [0. 0. 1.]\r\ntriangle/triangle_199.png [0. 0. 1.]\r\n------------------------------------------------------------------\r\nBatch number 9 contains 64 images\r\n-----------------------------------------------------------------+\r\ntriangle/triangle_2.png [0. 0. 1.]\r\ntriangle/triangle_20.png [0. 0. 1.]\r\ntriangle/triangle_21.png [0. 0. 1.]\r\ntriangle/triangle_22.png [0. 0. 1.]\r\ntriangle/triangle_23.png [0. 0. 1.]\r\ntriangle/triangle_24.png [0. 0. 1.]\r\ntriangle/triangle_25.png [0. 0. 1.]\r\ntriangle/triangle_26.png [0. 0. 1.]\r\ntriangle/triangle_27.png [0. 0. 1.]\r\ntriangle/triangle_28.png [0. 0. 1.]\r\ntriangle/triangle_29.png [0. 0. 1.]\r\ntriangle/triangle_3.png [0. 0. 1.]\r\ntriangle/triangle_30.png [0. 0. 1.]\r\ntriangle/triangle_31.png [0. 0. 1.]\r\ntriangle/triangle_32.png [0. 0. 1.]\r\ntriangle/triangle_33.png [0. 0. 1.]\r\ntriangle/triangle_34.png [0. 0. 1.]\r\ntriangle/triangle_35.png [0. 0. 1.]\r\ntriangle/triangle_36.png [0. 0. 1.]\r\ntriangle/triangle_37.png [0. 0. 1.]\r\ntriangle/triangle_38.png [0. 0. 1.]\r\ntriangle/triangle_39.png [0. 0. 1.]\r\ntriangle/triangle_4.png [0. 0. 1.]\r\ntriangle/triangle_40.png [0. 0. 1.]\r\ntriangle/triangle_41.png [0. 0. 1.]\r\ntriangle/triangle_42.png [0. 0. 1.]\r\ntriangle/triangle_43.png [0. 0. 1.]\r\ntriangle/triangle_44.png [0. 0. 1.]\r\ntriangle/triangle_45.png [0. 0. 1.]\r\ntriangle/triangle_46.png [0. 0. 1.]\r\ntriangle/triangle_47.png [0. 0. 1.]\r\ntriangle/triangle_48.png [0. 0. 1.]\r\ntriangle/triangle_49.png [0. 0. 1.]\r\ntriangle/triangle_5.png [0. 0. 1.]\r\ntriangle/triangle_50.png [0. 0. 1.]\r\ntriangle/triangle_51.png [0. 0. 1.]\r\ntriangle/triangle_52.png [0. 0. 1.]\r\ntriangle/triangle_53.png [0. 0. 1.]\r\ntriangle/triangle_54.png [0. 0. 1.]\r\ntriangle/triangle_55.png [0. 0. 1.]\r\ntriangle/triangle_56.png [0. 0. 1.]\r\ntriangle/triangle_57.png [0. 0. 1.]\r\ntriangle/triangle_58.png [0. 0. 1.]\r\ntriangle/triangle_59.png [0. 0. 1.]\r\ntriangle/triangle_6.png [0. 0. 1.]\r\ntriangle/triangle_60.png [0. 0. 1.]\r\ntriangle/triangle_61.png [0. 0. 1.]\r\ntriangle/triangle_62.png [0. 0. 1.]\r\ntriangle/triangle_63.png [0. 0. 1.]\r\ntriangle/triangle_64.png [0. 0. 1.]\r\ntriangle/triangle_65.png [0. 0. 1.]\r\ntriangle/triangle_66.png [0. 0. 1.]\r\ntriangle/triangle_67.png [0. 0. 1.]\r\ntriangle/triangle_68.png [0. 0. 1.]\r\ntriangle/triangle_69.png [0. 0. 1.]\r\ntriangle/triangle_7.png [0. 0. 1.]\r\ntriangle/triangle_70.png [0. 0. 1.]\r\ntriangle/triangle_71.png [0. 0. 1.]\r\ntriangle/triangle_72.png [0. 0. 1.]\r\ntriangle/triangle_73.png [0. 0. 1.]\r\ntriangle/triangle_74.png [0. 0. 1.]\r\ntriangle/triangle_75.png [0. 0. 1.]\r\ntriangle/triangle_76.png [0. 0. 1.]\r\ntriangle/triangle_77.png [0. 0. 1.]\r\n------------------------------------------------------------------\r\nBatch number 10 contains 24 images\r\n-----------------------------------------------------------------+\r\nrectangle/rectangle_112.png [0. 0. 1.]\r\nrectangle/rectangle_113.png [0. 0. 1.]\r\nrectangle/rectangle_114.png [0. 0. 1.]\r\nrectangle/rectangle_115.png [0. 0. 1.]\r\nrectangle/rectangle_116.png [0. 0. 1.]\r\nrectangle/rectangle_117.png [0. 0. 1.]\r\nrectangle/rectangle_118.png [0. 0. 1.]\r\nrectangle/rectangle_119.png [0. 0. 1.]\r\nrectangle/rectangle_12.png [0. 0. 1.]\r\nrectangle/rectangle_120.png [0. 0. 1.]\r\nrectangle/rectangle_121.png [0. 0. 1.]\r\nrectangle/rectangle_122.png [0. 0. 1.]\r\nrectangle/rectangle_123.png [0. 0. 1.]\r\nrectangle/rectangle_124.png [0. 0. 1.]\r\nrectangle/rectangle_125.png [0. 0. 1.]\r\nrectangle/rectangle_126.png [0. 0. 1.]\r\nrectangle/rectangle_127.png [0. 0. 1.]\r\nrectangle/rectangle_128.png [0. 0. 1.]\r\nrectangle/rectangle_129.png [0. 0. 1.]\r\nrectangle/rectangle_13.png [0. 0. 1.]\r\nrectangle/rectangle_130.png [0. 0. 1.]\r\nrectangle/rectangle_131.png [0. 0. 1.]\r\nrectangle/rectangle_132.png [0. 0. 1.]\r\nrectangle/rectangle_133.png [0. 0. 1.]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/154", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/154/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/154/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/154", "id": 404579409, "node_id": "MDU6SXNzdWU0MDQ1Nzk0MDk=", "number": 154, "title": "Add pandas as a dependency", "user": {"login": "paulgc", "id": 8526174, "node_id": "MDQ6VXNlcjg1MjYxNzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8526174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulgc", "html_url": "https://github.com/paulgc", "followers_url": "https://api.github.com/users/paulgc/followers", "following_url": "https://api.github.com/users/paulgc/following{/other_user}", "gists_url": "https://api.github.com/users/paulgc/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulgc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulgc/subscriptions", "organizations_url": "https://api.github.com/users/paulgc/orgs", "repos_url": "https://api.github.com/users/paulgc/repos", "events_url": "https://api.github.com/users/paulgc/events{/privacy}", "received_events_url": "https://api.github.com/users/paulgc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-01-30T02:57:32Z", "updated_at": "2019-01-30T15:56:11Z", "closed_at": "2019-01-30T14:06:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Import fails when pandas is not already installed.\r\n\r\n`from keras_preprocessing import image`\r\n\r\nresults in\r\n\r\n`ImportError: No module named pandas.api.types`\r\n\r\npandas should be specified as a dependency in setup.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/152", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/152/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/152/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/152", "id": 403632884, "node_id": "MDU6SXNzdWU0MDM2MzI4ODQ=", "number": 152, "title": "datagen.flow_from_dataframe erro after update ", "user": {"login": "khaledbnmohamed", "id": 34178030, "node_id": "MDQ6VXNlcjM0MTc4MDMw", "avatar_url": "https://avatars2.githubusercontent.com/u/34178030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khaledbnmohamed", "html_url": "https://github.com/khaledbnmohamed", "followers_url": "https://api.github.com/users/khaledbnmohamed/followers", "following_url": "https://api.github.com/users/khaledbnmohamed/following{/other_user}", "gists_url": "https://api.github.com/users/khaledbnmohamed/gists{/gist_id}", "starred_url": "https://api.github.com/users/khaledbnmohamed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khaledbnmohamed/subscriptions", "organizations_url": "https://api.github.com/users/khaledbnmohamed/orgs", "repos_url": "https://api.github.com/users/khaledbnmohamed/repos", "events_url": "https://api.github.com/users/khaledbnmohamed/events{/privacy}", "received_events_url": "https://api.github.com/users/khaledbnmohamed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2019-01-28T02:59:28Z", "updated_at": "2020-06-23T20:14:18Z", "closed_at": "2019-01-28T07:37:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "An Error just popped-up tonight after the last update today\r\n\r\nfor a line ```\r\n\r\n```\r\n train_generator=datagen.flow_from_dataframe(dataframe=df_train, directory=None,x_col=\"Img_Path\",\r\n                                              y_col=\"Label\", class_mode=\"binary\", target_size=(224,224), batch_size=batch)\r\n```\r\n\r\nError :\r\nTypeError: If class_mode=\"binary\", y_col=\"Label\" column values must be strings.\r\n\r\nthe code was working fine just before the last Keras commit as I'm using the latest version", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/151", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/151/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/151/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/151", "id": 403533589, "node_id": "MDU6SXNzdWU0MDM1MzM1ODk=", "number": 151, "title": "flow_from_dataframe breaks if index does not contain \"0\" label", "user": {"login": "pspeter", "id": 13824347, "node_id": "MDQ6VXNlcjEzODI0MzQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/13824347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pspeter", "html_url": "https://github.com/pspeter", "followers_url": "https://api.github.com/users/pspeter/followers", "following_url": "https://api.github.com/users/pspeter/following{/other_user}", "gists_url": "https://api.github.com/users/pspeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/pspeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pspeter/subscriptions", "organizations_url": "https://api.github.com/users/pspeter/orgs", "repos_url": "https://api.github.com/users/pspeter/repos", "events_url": "https://api.github.com/users/pspeter/events{/privacy}", "received_events_url": "https://api.github.com/users/pspeter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-27T09:52:38Z", "updated_at": "2019-01-28T07:35:35Z", "closed_at": "2019-01-28T07:35:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "ImageDataGenerator.flow_from_dataframe() breaks if the provided DataFrame does not contain a numeric Index containing the number 0. This presumably happens due to an attempt to access the first column using df.loc instead of df.iloc in keras_preprocessing\\image.py.\r\n\r\n```python\r\n>>> import pandas as pd\r\n>>> from keras.preprocessing.image import ImageDataGenerator\r\nUsing TensorFlow backend.\r\n>>> df = pd.DataFrame({\"filename\": [\"test1.png\", \"test2.png\"], \"class\": [\"foo\", \"bar\"]}, index=[1, 2])\r\n>>> gen = ImageDataGenerator()\r\n>>> gen.flow_from_dataframe(df, \"data/train\")\r\nTraceback (most recent call last):\r\n  File \"...\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1506, in _has_valid_type\r\n    error()\r\n  File \"...\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1501, in error\r\n    axis=self.obj._get_axis_name(axis)))\r\nKeyError: 'the label [0] is not in the [index]'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"...\\lib\\site-packages\\keras_preprocessing\\image.py\", line 1107, in flow_from_dataframe\r\n    interpolation=interpolation)\r\n  File \"...\\lib\\site-packages\\keras_preprocessing\\image.py\", line 2099, in __init__\r\n    if self.df.loc[0, x_col].endswith(\".\" + ext):\r\n  File \"...\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1367, in __getitem__\r\n    return self._getitem_tuple(key)\r\n  File \"...\\lib\\site-packages\\pandas\\core\\indexing.py\", line 858, in _getitem_tuple\r\n    return self._getitem_lowerdim(tup)\r\n  File \"...\\lib\\site-packages\\pandas\\core\\indexing.py\", line 991, in _getitem_lowerdim\r\n    section = self._getitem_axis(key, axis=i)\r\n  File \"...\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1626, in _getitem_axis\r\n    self._has_valid_type(key, axis)\r\n  File \"...\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1514, in _has_valid_type\r\n    error()\r\n  File \"...\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1501, in error\r\n    axis=self.obj._get_axis_name(axis)))\r\nKeyError: 'the label [0] is not in the [index]'\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/150", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/150/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/150/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/150", "id": 403166363, "node_id": "MDU6SXNzdWU0MDMxNjYzNjM=", "number": 150, "title": "ImageDataGenerator with no augmentation performs much worse compared to plain arrays", "user": {"login": "martinuray", "id": 6664999, "node_id": "MDQ6VXNlcjY2NjQ5OTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/6664999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinuray", "html_url": "https://github.com/martinuray", "followers_url": "https://api.github.com/users/martinuray/followers", "following_url": "https://api.github.com/users/martinuray/following{/other_user}", "gists_url": "https://api.github.com/users/martinuray/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinuray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinuray/subscriptions", "organizations_url": "https://api.github.com/users/martinuray/orgs", "repos_url": "https://api.github.com/users/martinuray/repos", "events_url": "https://api.github.com/users/martinuray/events{/privacy}", "received_events_url": "https://api.github.com/users/martinuray/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-25T13:54:01Z", "updated_at": "2019-05-06T13:26:04Z", "closed_at": "2019-01-25T14:30:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi to all of you,\r\n\r\nI am working on an image regression task, in a supervised manner. So I wanted to use the `ImageDataGenerator` to generate both input and target image. Here I tried several approaches. Mine is derived from the version shown in the [Keras Docs](https://keras.io/preprocessing/image/) (Image/Mask).\r\n\r\nIn order to verify my implementation, first I used the `ImageDataGenerator` without a parameter. My assumption here is that no major derivation, in comparison to the _baseline_ (without `ImageDataGenerator`), should be seen.\r\nUnfortunately, this is not the case. The validation loss is somehow stable around a certain value and only slightly decreasing (see the image below).\r\n\r\n![Comparison](https://i.stack.imgur.com/d0vhj.png)\r\n\r\nThe code I use for this task is the following. This is already altered by a lot of possible solutions by other users on [StackOverflow](https://stackoverflow.com/q/54302953/4153034).\r\n```\r\nnp.random.shuffle(image_train)\r\nsplit_seperator = int(image_train.shape[0]*validation_split)\r\nimage_val = image_train[0:split_seperator]\r\nimage_train = image_train[split_seperator:]\r\n\r\ntarget_val = target_train[0:split_seperator]\r\ntarget_train = target_train[split_seperator:]\r\n\r\ndata_gen_args = dict()\r\nseed = 1\r\n\r\naug = ImageDataGenerator(**data_gen_args)\r\ntime_train_start = time.time()\r\n\r\n# train the network\r\nmodel.fit_generator(\r\n    generator=aug.flow(image_train, target_train,\r\n                       batch_size=settings.batch_size_training),\r\n    validation_data=(image_val, target_val),\r\n    steps_per_epoch=image_train.shape[0] // settings.batch_size_training,\r\n    verbose=1, epochs=num_epochs,  callbacks=cb)\r\n```\r\n\r\nThe code for the _baseline_ uses solely the stacks of images:\r\n```\r\n_ = model.fit(\r\n    image_train, target_train,  # Train the model using the training set...\r\n    batch_size=settings.batch_size_training,\r\n    epochs=num_epochs, verbose=1,\r\n    validation_split=validation_split, callbacks=cb)  # holding out fraction validation_split of the data for validation\r\n```\r\nHere I use `Keras-Preprocessing==1.0.5` .\r\n\r\nAs already mentioned, I posted this problem to [StackOverflow](https://stackoverflow.com/q/54302953/4153034), but unfortunately, this did not lead to a satisfying improvement by the given answers. \r\n\r\nDo you have any clue why I can not achieve the same results compared to my baseline?\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/148", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/148/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/148/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/148", "id": 403017008, "node_id": "MDU6SXNzdWU0MDMwMTcwMDg=", "number": 148, "title": "array_to_image errors", "user": {"login": "surgan12", "id": 33121121, "node_id": "MDQ6VXNlcjMzMTIxMTIx", "avatar_url": "https://avatars0.githubusercontent.com/u/33121121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/surgan12", "html_url": "https://github.com/surgan12", "followers_url": "https://api.github.com/users/surgan12/followers", "following_url": "https://api.github.com/users/surgan12/following{/other_user}", "gists_url": "https://api.github.com/users/surgan12/gists{/gist_id}", "starred_url": "https://api.github.com/users/surgan12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/surgan12/subscriptions", "organizations_url": "https://api.github.com/users/surgan12/orgs", "repos_url": "https://api.github.com/users/surgan12/repos", "events_url": "https://api.github.com/users/surgan12/events{/privacy}", "received_events_url": "https://api.github.com/users/surgan12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-25T05:58:20Z", "updated_at": "2019-01-25T12:55:46Z", "closed_at": "2019-01-25T12:55:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "When we convert Image in mode 'L' to a numpy array it has dimensions 2 .\r\nUsing array_to_image to convert back it to Image , it gives error .\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/147", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/147/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/147/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/147", "id": 402771548, "node_id": "MDU6SXNzdWU0MDI3NzE1NDg=", "number": 147, "title": "Provide Sample Weights to ImageDataGenerator.flow_from_dataframe", "user": {"login": "docmarionum1", "id": 178798, "node_id": "MDQ6VXNlcjE3ODc5OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/178798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/docmarionum1", "html_url": "https://github.com/docmarionum1", "followers_url": "https://api.github.com/users/docmarionum1/followers", "following_url": "https://api.github.com/users/docmarionum1/following{/other_user}", "gists_url": "https://api.github.com/users/docmarionum1/gists{/gist_id}", "starred_url": "https://api.github.com/users/docmarionum1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/docmarionum1/subscriptions", "organizations_url": "https://api.github.com/users/docmarionum1/orgs", "repos_url": "https://api.github.com/users/docmarionum1/repos", "events_url": "https://api.github.com/users/docmarionum1/events{/privacy}", "received_events_url": "https://api.github.com/users/docmarionum1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-01-24T15:51:18Z", "updated_at": "2019-10-22T15:27:41Z", "closed_at": "2019-10-22T13:11:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to specify sample weights when using `ImageDataGenerator.flow_from_dataframe`. I see that `flow` supports it, so I could load my images into a numpy array first and use flow. But it seems like it makes sense to allow `flow_from_dataframe` to support it as well.\r\n\r\nTo implement, `flow_from_dataframe` would optionally take a `weight_col` parameter, and then if `weight_col` is not None, `_get_batches_of_transformed_samples` would return a third item,  the sample weights.\r\n\r\nI'd be happy to send a pull request if this is something that y'all agree makes sense. \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/146", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/146/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/146/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/146", "id": 401456333, "node_id": "MDU6SXNzdWU0MDE0NTYzMzM=", "number": 146, "title": "Documentation for text.Tokenizer not rendering correctly in the browser", "user": {"login": "adammarples", "id": 22686431, "node_id": "MDQ6VXNlcjIyNjg2NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/22686431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adammarples", "html_url": "https://github.com/adammarples", "followers_url": "https://api.github.com/users/adammarples/followers", "following_url": "https://api.github.com/users/adammarples/following{/other_user}", "gists_url": "https://api.github.com/users/adammarples/gists{/gist_id}", "starred_url": "https://api.github.com/users/adammarples/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adammarples/subscriptions", "organizations_url": "https://api.github.com/users/adammarples/orgs", "repos_url": "https://api.github.com/users/adammarples/repos", "events_url": "https://api.github.com/users/adammarples/events{/privacy}", "received_events_url": "https://api.github.com/users/adammarples/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1191735928, "node_id": "MDU6TGFiZWwxMTkxNzM1OTI4", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/documentation", "name": "documentation", "color": "5319e7", "default": true, "description": "Related to the documentation"}, {"id": 949830609, "node_id": "MDU6TGFiZWw5NDk4MzA2MDk=", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}, {"id": 1191572064, "node_id": "MDU6TGFiZWwxMTkxNTcyMDY0", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/text", "name": "text", "color": "fbca04", "default": false, "description": "Related to text"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-21T17:49:02Z", "updated_at": "2019-09-20T15:41:46Z", "closed_at": "2019-09-20T15:41:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "The documentation for Tokenizer class constructor kwarg is rendering incorrectly in the browser.\r\n\r\nfilters='!\"#$%&()*+,-./:;<=>?@[\\]^_`{|}~\\t\\n'\r\n\r\nBut in the browser it renders an actual tab and newline\r\n\r\nfilters='!\"#$%&()*+,-./:;<=>?@[\\]^_`{|}~  \r\n'\r\n\r\nSee: https://keras.io/preprocessing/text/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/145", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/145/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/145/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/145", "id": 401240049, "node_id": "MDU6SXNzdWU0MDEyNDAwNDk=", "number": 145, "title": "Multiprocessing with ImageDataGenerator (for augmentation) and  model.fit_generator", "user": {"login": "wittmarf", "id": 21099602, "node_id": "MDQ6VXNlcjIxMDk5NjAy", "avatar_url": "https://avatars1.githubusercontent.com/u/21099602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wittmarf", "html_url": "https://github.com/wittmarf", "followers_url": "https://api.github.com/users/wittmarf/followers", "following_url": "https://api.github.com/users/wittmarf/following{/other_user}", "gists_url": "https://api.github.com/users/wittmarf/gists{/gist_id}", "starred_url": "https://api.github.com/users/wittmarf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wittmarf/subscriptions", "organizations_url": "https://api.github.com/users/wittmarf/orgs", "repos_url": "https://api.github.com/users/wittmarf/repos", "events_url": "https://api.github.com/users/wittmarf/events{/privacy}", "received_events_url": "https://api.github.com/users/wittmarf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2019-01-21T08:22:33Z", "updated_at": "2020-07-06T13:31:04Z", "closed_at": "2019-01-25T14:35:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to use the model.fit_generator method with use_multiprocessing=True and workers>1 because I want to parallelize augmentation. One single CPU core is not able to deliver enough training data to the GPU to keep it busy.\r\n\r\nThe Keras ImageDataGenerator would be a perfect match for the model.fit_generator. But several people found out, that this causes problems because of lacking thread safety.\r\n\r\nIs there a simple way to make those two work together? Not everyone working with Keras wants (or is able) to write a data generator for augmentation from scratch.\r\n\r\nIt would be greatly appreciated if you would give an example in the documentation.\r\nIn my case, the images that need to be augmented are in directories, one directory for each class.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/135", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/135/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/135/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/135", "id": 397565734, "node_id": "MDU6SXNzdWUzOTc1NjU3MzQ=", "number": 135, "title": "Does flow_from_dataframe() support multilabel outputs?", "user": {"login": "scott-zockoll", "id": 39304716, "node_id": "MDQ6VXNlcjM5MzA0NzE2", "avatar_url": "https://avatars3.githubusercontent.com/u/39304716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scott-zockoll", "html_url": "https://github.com/scott-zockoll", "followers_url": "https://api.github.com/users/scott-zockoll/followers", "following_url": "https://api.github.com/users/scott-zockoll/following{/other_user}", "gists_url": "https://api.github.com/users/scott-zockoll/gists{/gist_id}", "starred_url": "https://api.github.com/users/scott-zockoll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scott-zockoll/subscriptions", "organizations_url": "https://api.github.com/users/scott-zockoll/orgs", "repos_url": "https://api.github.com/users/scott-zockoll/repos", "events_url": "https://api.github.com/users/scott-zockoll/events{/privacy}", "received_events_url": "https://api.github.com/users/scott-zockoll/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 949830607, "node_id": "MDU6TGFiZWw5NDk4MzA2MDc=", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-09T21:17:04Z", "updated_at": "2020-02-01T05:02:25Z", "closed_at": "2019-01-12T17:51:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have previously been able to train a CNN to have multi-class and multi-label output using flow(), but I am having trouble getting it to train where the labels are vectors of binary values. I am not sure what class_mode I should be using? @Vijayabhaskar96 is this supported with flow_from_dataframe()?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/129", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/129/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/129/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/129", "id": 395387124, "node_id": "MDU6SXNzdWUzOTUzODcxMjQ=", "number": 129, "title": "ImageDataGenerator breaks when used with a validation_split and no labels ", "user": {"login": "chrisdahlberg", "id": 36549939, "node_id": "MDQ6VXNlcjM2NTQ5OTM5", "avatar_url": "https://avatars0.githubusercontent.com/u/36549939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdahlberg", "html_url": "https://github.com/chrisdahlberg", "followers_url": "https://api.github.com/users/chrisdahlberg/followers", "following_url": "https://api.github.com/users/chrisdahlberg/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdahlberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdahlberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdahlberg/subscriptions", "organizations_url": "https://api.github.com/users/chrisdahlberg/orgs", "repos_url": "https://api.github.com/users/chrisdahlberg/repos", "events_url": "https://api.github.com/users/chrisdahlberg/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdahlberg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-02T21:31:21Z", "updated_at": "2019-01-07T17:34:04Z", "closed_at": "2019-01-07T17:34:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "The check for the number of labels after applying the validation split in numpy_array_iterator.py is missing a check for if there are no labels (y is None).  It tries to count the number of classes in the non-existent y post split.  \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/128", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/128/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/128/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/128", "id": 395114213, "node_id": "MDU6SXNzdWUzOTUxMTQyMTM=", "number": 128, "title": "flow_from_dataframe() how to disable sorting?", "user": {"login": "aarondt", "id": 16733296, "node_id": "MDQ6VXNlcjE2NzMzMjk2", "avatar_url": "https://avatars2.githubusercontent.com/u/16733296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aarondt", "html_url": "https://github.com/aarondt", "followers_url": "https://api.github.com/users/aarondt/followers", "following_url": "https://api.github.com/users/aarondt/following{/other_user}", "gists_url": "https://api.github.com/users/aarondt/gists{/gist_id}", "starred_url": "https://api.github.com/users/aarondt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aarondt/subscriptions", "organizations_url": "https://api.github.com/users/aarondt/orgs", "repos_url": "https://api.github.com/users/aarondt/repos", "events_url": "https://api.github.com/users/aarondt/events{/privacy}", "received_events_url": "https://api.github.com/users/aarondt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-01-01T21:41:42Z", "updated_at": "2019-03-28T18:17:17Z", "closed_at": "2019-01-14T05:36:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using keras's data generator with flow_from_dataframe. for training it works just fine, but when using model.predict_generator on the test set, I discovered that the ordering of the generated results is different than the ordering of the \"id\" column in my dataframe.\r\n\r\nshuffle=False does make the ordering of the generator consistent, but it is a different ordering than the dataframe. I also tried different batch sizes and the corresponding correct steps for the predict_generator function. (for example: batch_Size=1, steps=len(data))\r\n\r\n\r\nI realize that in the tutorial found here https://medium.com/@vijayabhaskar96/tutorial-on-keras-flow-from-dataframe-1fd4493d237c it mentions a \"sort\" parameter.\r\n\r\n> sort: If you want to sort the x_col column values in ascending order set to True(default) else False.\r\n\r\nhowever this parameter seems to be gone in the latest release?\r\n\r\nCurrently the only solution that works for me is inferring the ordering obtained with the generator.filenames property.\r\n\r\nIs there an alternative solution on how to make sure the labels predicted for my test set are ordered in the same way of my dataframe \"id\" column?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/125", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/125/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/125/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/125", "id": 394689388, "node_id": "MDU6SXNzdWUzOTQ2ODkzODg=", "number": 125, "title": "Inconsistent joint-transformation of images and masks with ImageDataGenerator", "user": {"login": "csheaff", "id": 10719781, "node_id": "MDQ6VXNlcjEwNzE5Nzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/10719781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csheaff", "html_url": "https://github.com/csheaff", "followers_url": "https://api.github.com/users/csheaff/followers", "following_url": "https://api.github.com/users/csheaff/following{/other_user}", "gists_url": "https://api.github.com/users/csheaff/gists{/gist_id}", "starred_url": "https://api.github.com/users/csheaff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csheaff/subscriptions", "organizations_url": "https://api.github.com/users/csheaff/orgs", "repos_url": "https://api.github.com/users/csheaff/repos", "events_url": "https://api.github.com/users/csheaff/events{/privacy}", "received_events_url": "https://api.github.com/users/csheaff/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-28T17:58:45Z", "updated_at": "2020-08-03T14:10:37Z", "closed_at": "2019-07-31T19:02:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using ImageDataGenerator to transform images and masks together for semantic segmentation in the style presented in the [Keras docs](https://keras.io/preprocessing/image/#fit) where two generators get zipped together and then get fed to a flow method. However, when I save the augmented image-mask pairs to a directory, the file naming indicates that the seeding for the augmentation isn't always the same for the image and mask. This is despite feeding the generators the same seed and also playing around with the setting of seeds at the top of the file. Here are the files produced in my 'aug' folder with the code below:\r\n\r\nimage_19_8801850.png\r\nimage_214_4543356.png\r\nimage_268_864897.png\r\nimage_388_2338108.png\r\nimage_394_7960136.png\r\nimage_516_6392335.png\r\nmask_19_8801850.png\r\nmask_214_4543356.png\r\nmask_268_864897.png\r\nmask_388_2338108.png\r\nmask_394_8946097.png\r\nmask_516_7424466.png\r\n\r\nYou can see that the seeds used for pairs 394 and 516 were different. The number of pairs generated that have different seeds seems to equal the batch_size*max_queue_size. \r\n\r\nAny help would be appreciated, as I want to make sure all image-mask pairs are augmented in the same fashion.\r\n\r\nKeras:  2.2.4                     \r\nKeras-Applications:   1.0.6                     \r\nkeras-contrib :   2.0.8                     \r\nKeras-Preprocessing:  1.0.5                    \r\ntensorflow-gpu:  1.12.0\r\nUbuntu 16.04.5 LTS (GNU/Linux 4.4.0-1074-aws x86_64v)                  \r\n\r\n\r\n```\r\nimport random\r\nrandom.seed(1)\r\nimport numpy as np\r\nnp.random.seed(10)\r\nimport tensorflow as tf\r\ntf.reset_default_graph()\r\ngraph_level_seed = 1\r\ntf.set_random_seed(graph_level_seed)\r\noperation_level_seed = 1\r\n\r\nimport os\r\nfrom find_onh_model import unet\r\nfrom keras.callbacks import EarlyStopping, TensorBoard, ModelCheckpoint\r\nimport gc\r\n\r\nimport imageio\r\nfrom sklearn.utils import class_weight\r\nfrom keras.preprocessing.image import ImageDataGenerator\r\n\r\ngc.collect()\r\n\r\ndef adjust_data(img,mask,flag_multi_class,num_class):\r\n    if(flag_multi_class):\r\n    elif(np.max(img) > 1):\r\n        img = img / 255\r\n        mask = mask /255\r\n        mask[mask > 0.5] = 1\r\n        mask[mask <= 0.5] = 0\r\n    return (img,mask)\r\n\r\ndef TrainGenerator(batch_size,train_path,image_folder,mask_folder,aug_dict,image_color_mode = \"grayscale\",\r\n                    mask_color_mode = \"grayscale\",image_save_prefix  = \"image\",mask_save_prefix  = \"mask\",\r\n                    flag_multi_class = False,num_class = 2,save_to_dir = None,target_size = (256,256),seed = 1,\r\n                    subset=None):\r\n\r\n    image_datagen = ImageDataGenerator(**aug_dict)\r\n    mask_datagen = ImageDataGenerator(**aug_dict)\r\n    image_generator = image_datagen.flow_from_directory(\r\n        train_path,\r\n        classes = [image_folder],\r\n        class_mode = None,\r\n        color_mode = image_color_mode,\r\n        target_size = target_size,\r\n        batch_size = batch_size,\r\n        save_to_dir = save_to_dir,\r\n        save_prefix  = image_save_prefix,\r\n        seed = seed,\r\n        subset = subset)\r\n    mask_generator = mask_datagen.flow_from_directory(\r\n        train_path,\r\n        classes = [mask_folder],\r\n        class_mode = None,\r\n        color_mode = mask_color_mode,\r\n        target_size = target_size,\r\n        batch_size = batch_size,\r\n        save_to_dir = save_to_dir,\r\n        save_prefix  = mask_save_prefix,\r\n        seed = seed,\r\n       subset = subset)\r\n    train_generator = zip(image_generator, mask_generator)\r\n    for (img,mask) in train_generator:\r\n        img,mask = adjust_data(img,mask,flag_multi_class,num_class)\r\n        yield (img,mask)\r\n\r\n# Load masks to get number of images available, image dimensions, and appropriate class weighting.\r\ndef load_images_from_folder(folder):\r\n    images = []\r\n    for image_name in os.listdir(folder):\r\n        path = os.path.join(folder, image_name)\r\n        im_arr = imageio.imread(path, pilmode='L')\r\n        images.append(im_arr)\r\n    return np.array(images)\r\n\r\nusr_dir = os.path.expanduser('~')\r\ntrain_data_dir = usr_dir\r\n\r\nsaved_models_dir = os.path.join(train_data_dir, 'saved_models')\r\nos.makedirs(saved_models_dir, exist_ok=True)\r\nmask_path = os.path.join(train_data_dir, 'label', 'image')\r\naug_data_dir = os.path.join(train_data_dir, 'aug')\r\n\r\nmasks = load_images_from_folder(mask_path)\r\nn_images, height, width = masks.shape\r\nprint('Data dimensions: {}'.format(masks.shape))\r\n\r\nheight_new = 128 # height\r\nwidth_new = 128 # width\r\n\r\n# config\r\nimage_folder = 'data'\r\nmask_folder = 'label'\r\nVALID_SPLIT = 0.2\r\nn_valid_images = np.floor(n_images*VALID_SPLIT)\r\nn_train_images = np.ceil(n_images*(1 - VALID_SPLIT))\r\nbatch_size = 2\r\nSTEPS_PER_EPOCH = 1\r\nN_EPOCHS = 1\r\nVALIDATION_STEPS = np.floor(n_valid_images/batch_size)\r\nPATIENCE = 10\r\n\r\ntrain_aug_dict = dict(\r\n                    rotation_range=90, #0.2,\r\n                    width_shift_range=0.1,\r\n                    height_shift_range=0.1,\r\n                    shear_range=0.05,\r\n                    zoom_range=0.05,\r\n                    horizontal_flip=True,\r\n                    vertical_flip=False,\r\n                    fill_mode='constant',\r\n                    cval=0,\r\n                    validation_split=VALID_SPLIT,\r\n                    )\r\ntrain_generator = TrainGenerator(batch_size,train_data_dir,image_folder,mask_folder,train_aug_dict,image_color_mode = \"grayscale\",\r\n                    mask_color_mode = \"grayscale\",image_save_prefix  = \"image\",mask_save_prefix  = \"mask\",\r\n                    flag_multi_class = False,num_class = 2,\r\n                    save_to_dir = aug_data_dir,\r\n                    target_size = (height_new, width_new),\r\n                    seed = operation_level_seed,\r\n                    subset='training')\r\n\r\nval_aug_dict = dict(\r\n    validation_split=VALID_SPLIT,\r\n     )\r\n\r\nval_generator = TrainGenerator(batch_size,train_data_dir,image_folder,mask_folder,val_aug_dict,image_color_mode = \"grayscale\",\r\n                    mask_color_mode = \"grayscale\",\r\n                    flag_multi_class = False,num_class = 2,\r\n                    target_size = (height_new, width_new),\r\n                    seed = operation_level_seed,\r\n                    subset='validation')\r\n\r\nmodel = <mymodel>\r\n\r\nsave_best_only=True, mode='auto')\r\ncallbacks = [EarlyStopping(monitor='val_loss', patience=PATIENCE)]\r\n\r\nprint('Training')\r\nhistory = model.fit_generator(train_generator, max_queue_size=1, steps_per_epoch=STEPS_PER_EPOCH,epochs=N_EPOCHS,callbacks=callback\\\r\ns, validation_data=val_generator, validation_steps=VALIDATION_STEPS, class_weight=class_weighting, shuffle=False)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/116", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/116/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/116/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/116", "id": 393855549, "node_id": "MDU6SXNzdWUzOTM4NTU1NDk=", "number": 116, "title": "flow_from_dataframe with directory=None not working", "user": {"login": "shgidi", "id": 4385294, "node_id": "MDQ6VXNlcjQzODUyOTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4385294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shgidi", "html_url": "https://github.com/shgidi", "followers_url": "https://api.github.com/users/shgidi/followers", "following_url": "https://api.github.com/users/shgidi/following{/other_user}", "gists_url": "https://api.github.com/users/shgidi/gists{/gist_id}", "starred_url": "https://api.github.com/users/shgidi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shgidi/subscriptions", "organizations_url": "https://api.github.com/users/shgidi/orgs", "repos_url": "https://api.github.com/users/shgidi/repos", "events_url": "https://api.github.com/users/shgidi/events{/privacy}", "received_events_url": "https://api.github.com/users/shgidi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-12-24T10:35:16Z", "updated_at": "2019-05-05T05:39:04Z", "closed_at": "2019-01-09T18:27:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use flow_from_dataframe with directory=None to use absolute path as descirbed [here](https://github.com/keras-team/keras-preprocessing/issues/96)\r\n\r\nKeras==2.2.4\r\nKeras-preprocessing==1.0.5\r\n\r\nbut this is what I get:\r\n\r\n`datagen.flow_from_dataframe(data, directory=None, x_col='fname',  y_col='cat',has_ext=True)`\r\n...\r\n```\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-128-f0acbea298e4> in <module>()\r\n----> 1 datagen.flow_from_dataframe(data, directory=None, batch_size=2, x_col='fname',  y_col='cat',has_ext=True)\r\n\r\n/usr/local/anaconda3/lib/python3.6/site-packages/keras_preprocessing/image.py in flow_from_dataframe(self, dataframe, directory, x_col, y_col, has_ext, target_size, color_mode, classes, class_mode, batch_size, shuffle, seed, save_to_dir, save_prefix, save_format, subset, interpolation)\r\n   1105                                  save_format=save_format,\r\n   1106                                  subset=subset,\r\n-> 1107                                  interpolation=interpolation)\r\n   1108 \r\n   1109     def standardize(self, x):\r\n\r\n/usr/local/anaconda3/lib/python3.6/site-packages/keras_preprocessing/image.py in __init__(self, dataframe, directory, image_data_generator, x_col, y_col, has_ext, target_size, color_mode, classes, class_mode, batch_size, shuffle, seed, data_format, save_to_dir, save_prefix, save_format, follow_links, subset, interpolation, dtype)\r\n   2093             class_indices=self.class_indices,\r\n   2094             follow_links=follow_links,\r\n-> 2095             df=True)\r\n   2096         if has_ext:\r\n   2097             ext_exist = False\r\n\r\n/usr/local/anaconda3/lib/python3.6/site-packages/keras_preprocessing/image.py in _list_valid_filenames_in_directory(directory, white_list_formats, split, class_indices, follow_links, df)\r\n   1762             `[\"file1.jpg\", \"file2.jpg\", ...]`).\r\n   1763     \"\"\"\r\n-> 1764     dirname = os.path.basename(directory)\r\n   1765     if split:\r\n   1766         num_files = len(list(\r\n\r\n/usr/local/anaconda3/lib/python3.6/posixpath.py in basename(p)\r\n    144 def basename(p):\r\n    145     \"\"\"Returns the final component of a pathname\"\"\"\r\n--> 146     p = os.fspath(p)\r\n    147     sep = _get_sep(p)\r\n    148     i = p.rfind(sep) + 1\r\n\r\nTypeError: expected str, bytes or os.PathLike object, not NoneType\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/115", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/115/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/115/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/115", "id": 393784081, "node_id": "MDU6SXNzdWUzOTM3ODQwODE=", "number": 115, "title": "Pillow dependency", "user": {"login": "fabiomaia", "id": 180382, "node_id": "MDQ6VXNlcjE4MDM4Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/180382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabiomaia", "html_url": "https://github.com/fabiomaia", "followers_url": "https://api.github.com/users/fabiomaia/followers", "following_url": "https://api.github.com/users/fabiomaia/following{/other_user}", "gists_url": "https://api.github.com/users/fabiomaia/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabiomaia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabiomaia/subscriptions", "organizations_url": "https://api.github.com/users/fabiomaia/orgs", "repos_url": "https://api.github.com/users/fabiomaia/repos", "events_url": "https://api.github.com/users/fabiomaia/events{/privacy}", "received_events_url": "https://api.github.com/users/fabiomaia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-23T22:12:09Z", "updated_at": "2018-12-24T15:20:14Z", "closed_at": "2018-12-24T15:20:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In https://github.com/keras-team/keras-preprocessing/blob/master/setup.py\r\n\r\n```python\r\nextras_require={\r\n    'tests': ['pytest',\r\n        'pytest-pep8',\r\n        'pytest-xdist',\r\n        'pytest-cov'],\r\n    'image': ['scipy>=0.14'],\r\n},\r\n```\r\n\r\nShouldn't `Pillow` also be declared?\r\n\r\nI just did a fresh virtual env install and after `pip install -r requirements.txt` (which doesn't contain `Pillow` because I assume you take care of that) I noticed that my code fails because `Pillow` isn't installed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/114", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/114/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/114/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/114", "id": 393772746, "node_id": "MDU6SXNzdWUzOTM3NzI3NDY=", "number": 114, "title": "random_brightness shifts the image normalization", "user": {"login": "guhur", "id": 12297742, "node_id": "MDQ6VXNlcjEyMjk3NzQy", "avatar_url": "https://avatars1.githubusercontent.com/u/12297742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guhur", "html_url": "https://github.com/guhur", "followers_url": "https://api.github.com/users/guhur/followers", "following_url": "https://api.github.com/users/guhur/following{/other_user}", "gists_url": "https://api.github.com/users/guhur/gists{/gist_id}", "starred_url": "https://api.github.com/users/guhur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guhur/subscriptions", "organizations_url": "https://api.github.com/users/guhur/orgs", "repos_url": "https://api.github.com/users/guhur/repos", "events_url": "https://api.github.com/users/guhur/events{/privacy}", "received_events_url": "https://api.github.com/users/guhur/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-23T18:53:48Z", "updated_at": "2020-06-12T15:33:22Z", "closed_at": "2020-06-12T15:00:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "My images are trained with float representation, so that their maximum value is 1.0.\r\nHowever, when I applied `random_brightness`, the image is between 0.0 and 255.0\r\n\r\nI think this is not expected, or at least, it should be warned in the documentation, shouldn't it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/102", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/102/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/102/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/102", "id": 388346675, "node_id": "MDU6SXNzdWUzODgzNDY2NzU=", "number": 102, "title": "valAcc disparity between flow_from_directory() and flow_from_dataframe()", "user": {"login": "Mahi-Mai", "id": 17129394, "node_id": "MDQ6VXNlcjE3MTI5Mzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/17129394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mahi-Mai", "html_url": "https://github.com/Mahi-Mai", "followers_url": "https://api.github.com/users/Mahi-Mai/followers", "following_url": "https://api.github.com/users/Mahi-Mai/following{/other_user}", "gists_url": "https://api.github.com/users/Mahi-Mai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mahi-Mai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mahi-Mai/subscriptions", "organizations_url": "https://api.github.com/users/Mahi-Mai/orgs", "repos_url": "https://api.github.com/users/Mahi-Mai/repos", "events_url": "https://api.github.com/users/Mahi-Mai/events{/privacy}", "received_events_url": "https://api.github.com/users/Mahi-Mai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-06T18:46:21Z", "updated_at": "2019-01-09T17:29:57Z", "closed_at": "2019-01-09T17:29:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "In order to test how my model training script performed on a benchmark dataset, I converted the stored MNIST to a set of png images.  I have them organized in two ways:\r\n\r\n**Method 1.**  I have a \"train\" folder and a \"test\" folder where images are stored without further organization.  I have a dataframe for the train and test set, with column 1 listing the absolute directory, and column 2 listing the label.  I've carefully examined this csv- the labels and image listings appear accurate.  I've captured and tested the output of flow_from_dataframe(), and it looks fine.\r\n\r\nSample of csv:\r\n```\r\n,test_samples,test_labels\r\n0,/path/Data/test/6992.png,7\r\n1,/path/Data/test/1380.png,9\r\n2,/path/Data/test/5817.png,4\r\n3,/path/Data/test/5295.png,5\r\n4,/path/Data/test/5340.png,2\r\n```\r\n\r\n**Method 2.**  I have a train and test folder, each with subdirectories for the different categories of images.\r\n\r\nOther than how they're organized, these datasets are otherwise identical.\r\n\r\nIf I run my script and use flow_from_dataframe() with the assets from Method 1, the highest validation accuracy I can manage ranges from 0.01-0.05.  If I run my script with flow_from_directory() using the assets in Method 2, my highest checkpoint is 0.93.\r\n\r\nWhat could be the source of this disparity?  Am I misusing flow_from_dataframe()?  I'll share my scripts from each approach below.  Thanks in advance for any insight.\r\n\r\n**Method 1: Garbage Validation Accuracy**\r\n```\r\nimport pandas as pd\r\nimport numpy as np\r\n \r\nimport keras\r\nfrom keras_preprocessing.image import ImageDataGenerator\r\n \r\nfrom keras import applications\r\nfrom keras import optimizers\r\nfrom keras.models import Model \r\nfrom keras.layers import Dropout, Flatten, Dense, GlobalAveragePooling2D\r\nfrom keras import backend as k \r\nfrom keras.callbacks import ModelCheckpoint, CSVLogger\r\n \r\nfrom keras.applications.vgg16 import VGG16, preprocess_input\r\n \r\n# INITIALIZE MODEL\r\n \r\nimg_width, img_height = 32, 32\r\nmodel = VGG16(weights = 'imagenet', include_top=False, input_shape = (img_width, img_height, 3))\r\n \r\n# freeze all layers\r\nfor layer in model.layers:\r\n    layer.trainable = False\r\n \r\n# Adding custom Layers \r\nx = model.output\r\nx = Flatten()(x)\r\nx = Dense(512, activation='relu')(x)\r\nx = Dropout(0.5)(x)\r\npredictions = Dense(10, activation=\"softmax\")(x)\r\n \r\n# creating the final model \r\nmodel_final = Model(input = model.input, output = predictions)\r\n \r\n# compile the model \r\nrms = optimizers.RMSprop(lr=1e-4)\r\n \r\nmodel_final.compile(loss = \"categorical_crossentropy\", optimizer = rms, metrics=[\"accuracy\"])\r\n \r\n# LOAD AND DEFINE SOURCE DATA\r\n#df.column_name = df.column_name.astype(str)\r\n \r\ntrain = pd.read_csv('/path/Data/MNIST_train.csv', index_col=0)\r\ntrain.train_labels = train.train_labels.astype(str)\r\n \r\nval = pd.read_csv('/path/Data/MNIST_test.csv', index_col=0)\r\nval.test_labels = val.test_labels.astype(str)\r\n \r\nnb_train_samples = 60000\r\nnb_validation_samples = 10000\r\nbatch_size = 60\r\nepochs = 5\r\n \r\n# Initiate the train and test generators\r\ntrain_datagen = ImageDataGenerator()\r\ntest_datagen = ImageDataGenerator()\r\n \r\ntrain_generator = train_datagen.flow_from_dataframe(dataframe=train,\r\n                                                    directory=None,\r\n                                                    x_col='train_samples',\r\n                                                    y_col='train_labels',\r\n                                                    has_ext=True,\r\n                                                    target_size = (img_height,\r\n                                                                   img_width),\r\n                                                    batch_size = batch_size, \r\n                                                    class_mode = 'categorical',\r\n                                                    color_mode = 'rgb')\r\n \r\nvalidation_generator = test_datagen.flow_from_dataframe(dataframe=val,\r\n                                                        directory=None,\r\n                                                        x_col='test_samples',\r\n                                                        y_col='test_labels',\r\n                                                        has_ext=True,\r\n                                                        target_size = (img_height, \r\n                                                                       img_width),\r\n                                                        batch_size = batch_size, \r\n                                                        class_mode = 'categorical',\r\n                                                        color_mode = 'rgb')\r\n\r\n# DEFINE CALLBACKS\r\n \r\npath = '/path/chk/epoch_{epoch:02d}-valLoss_{val_loss:.2f}-valAcc_{val_acc:.2f}.hdf5'\r\n chk = ModelCheckpoint(path, monitor = 'val_acc', verbose = 1, save_best_only = True, mode = 'max')\r\n logger = CSVLogger('/path/chk/training_log.csv', separator = ',', append=False)\r\n \r\nnPlus = 1\r\nsamples_per_epoch = nb_train_samples * nPlus\r\n \r\n# Train the model \r\nmodel_final.fit_generator(train_generator,\r\n                          steps_per_epoch = int(samples_per_epoch/batch_size),\r\n                          epochs = epochs,\r\n                          validation_data = validation_generator,\r\n                          validation_steps = int(nb_validation_samples/batch_size),\r\n                          callbacks = [chk, logger])\r\n```\r\n\r\n**METHOD 2: Stellar Validation Accuracy**\r\n```\r\nfrom keras import applications\r\nfrom keras.preprocessing.image import ImageDataGenerator\r\nfrom keras import optimizers\r\nfrom keras.models import Model \r\nfrom keras.layers import Dropout, Flatten, Dense, GlobalAveragePooling2D\r\nfrom keras import backend as k \r\nfrom keras.callbacks import ModelCheckpoint, CSVLogger\r\n \r\nimg_width, img_height = 32, 32\r\ntrain_data_dir = '/path/Data/categorical_subdirectories/test/'\r\nvalidation_data_dir = '/path/Data/categorical_subdirectories/train/'\r\nnb_train_samples = 60000\r\nnb_validation_samples = 10000\r\nbatch_size = 60\r\nepochs = 10\r\n \r\nfrom keras.applications.vgg16 import VGG16, preprocess_input\r\n \r\nmodel = VGG16(weights = \"imagenet\", include_top=False, input_shape = (img_width, img_height, 3))\r\n \r\n # Freeze the layers which you don't want to train. Here I am freezing the first 5 layers.\r\nfor layer in model.layers:\r\n    layer.trainable = False\r\n \r\n#Adding custom Layers \r\nx = model.output\r\nx = Flatten()(x)\r\nx = Dense(512, activation='relu')(x)\r\nx = Dropout(0.5)(x)\r\npredictions = Dense(10, activation=\"softmax\")(x)\r\n \r\n# creating the final model \r\nmodel_final = Model(input = model.input, output = predictions)\r\n \r\nRMSprop = optimizers.RMSprop(lr=1e-4)\r\n \r\n# compile the model \r\nmodel_final.compile(loss = \"categorical_crossentropy\", optimizer = RMSprop, metrics=[\"accuracy\"])\r\n \r\nmodel_final.summary()\r\n \r\n# Initiate the train and test generators with data Augumentation \r\ntrain_datagen = ImageDataGenerator(preprocessing_function = preprocess_input)\r\ntest_datagen = ImageDataGenerator(preprocessing_function = preprocess_input)\r\n \r\ntrain_generator = train_datagen.flow_from_directory(train_data_dir,\r\n                                                    target_size = (img_height, img_width),\r\n                                                    batch_size = batch_size, \r\n                                                    class_mode = \"categorical\")\r\n \r\nvalidation_generator = test_datagen.flow_from_directory(validation_data_dir,\r\n                                                        target_size = (img_height, img_width),\r\n                                                        class_mode = \"categorical\")\r\n \r\n# Save the model according to the conditions\r\npath = '/path/chk/epoch_{epoch:02d}-valLoss_{val_loss:.2f}-valAcc_{val_acc:.2f}.hdf5'\r\nchk = ModelCheckpoint(path, monitor = 'val_acc', verbose = 1, save_best_only = True, mode = 'max')\r\nlogger = CSVLogger('/path/chk/training log.csv', separator = ',', append=False)\r\n \r\nnPlus = 1\r\nsamples_per_epoch = nb_train_samples * nPlus\r\n \r\n# Train the model \r\nmodel_final.fit_generator(train_generator,\r\n                          steps_per_epoch = int(samples_per_epoch/batch_size),\r\n                          epochs = epochs,\r\n                          validation_data = validation_generator,\r\n                          validation_steps = int(nb_validation_samples/batch_size),\r\n                          callbacks = [chk, logger])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/101", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/101/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/101/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/101", "id": 387310089, "node_id": "MDU6SXNzdWUzODczMTAwODk=", "number": 101, "title": "issue with index_doc preprocessing/text", "user": {"login": "karthikeyansam", "id": 7344889, "node_id": "MDQ6VXNlcjczNDQ4ODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/7344889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karthikeyansam", "html_url": "https://github.com/karthikeyansam", "followers_url": "https://api.github.com/users/karthikeyansam/followers", "following_url": "https://api.github.com/users/karthikeyansam/following{/other_user}", "gists_url": "https://api.github.com/users/karthikeyansam/gists{/gist_id}", "starred_url": "https://api.github.com/users/karthikeyansam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karthikeyansam/subscriptions", "organizations_url": "https://api.github.com/users/karthikeyansam/orgs", "repos_url": "https://api.github.com/users/karthikeyansam/repos", "events_url": "https://api.github.com/users/karthikeyansam/events{/privacy}", "received_events_url": "https://api.github.com/users/karthikeyansam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-04T14:24:01Z", "updated_at": "2018-12-05T12:48:07Z", "closed_at": "2018-12-05T12:48:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/keras-team/keras-preprocessing/blob/f5b8beface208561c89d24e9e5af2500dcb9ccde/keras_preprocessing/text.py#L504\r\n\r\nseems value should be converted to integer not the keys as per get_config method\r\n\r\nindex_docs = {k: int(v) for k, v in index_docs.items()} ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/96", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/96/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/96/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/96", "id": 383198093, "node_id": "MDU6SXNzdWUzODMxOTgwOTM=", "number": 96, "title": "ImageDataGenerator.flow_from_dataframe keeps loading when directory has subdirectories", "user": {"login": "fahadakhan96", "id": 3263435, "node_id": "MDQ6VXNlcjMyNjM0MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3263435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fahadakhan96", "html_url": "https://github.com/fahadakhan96", "followers_url": "https://api.github.com/users/fahadakhan96/followers", "following_url": "https://api.github.com/users/fahadakhan96/following{/other_user}", "gists_url": "https://api.github.com/users/fahadakhan96/gists{/gist_id}", "starred_url": "https://api.github.com/users/fahadakhan96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fahadakhan96/subscriptions", "organizations_url": "https://api.github.com/users/fahadakhan96/orgs", "repos_url": "https://api.github.com/users/fahadakhan96/repos", "events_url": "https://api.github.com/users/fahadakhan96/events{/privacy}", "received_events_url": "https://api.github.com/users/fahadakhan96/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-11-21T16:27:55Z", "updated_at": "2019-01-09T18:27:32Z", "closed_at": "2019-01-09T18:27:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working on the [MURA dataset](https://stanfordmlgroup.github.io/competitions/mura/) by Stanford. I'm trying to load the dataset using Keras's ImageDataGenerator. The data is in the following hierarchy:\r\n\r\n[![The directory hierarchy][1]][1]\r\n\r\nThe `study1_positive` folder contains the images.\r\n\r\n`ImageDataGenerator.flow_from_directory` cannot be used with this folder structure, therefore I tried using the `flow_from_dataframe` method. \r\n\r\nHowever, when run, the code keeps on executing and doesn't stop.\r\n\r\nFollowing is the format of the Pandas DataFrame that I'm passing to the `flow_from_directory` method:\r\n\r\n[![The DataFrame passed to flow_from_dataframe][2]][2]\r\n\r\nI've also tried changing the labels to 'abnormal' and 'normal' in place of 1 and 0, respectively.\r\n\r\nBelow is the code:\r\n\r\n    train_imggen = ImageDataGenerator(rescale=1./255, rotation_range=30,\r\n                                  horizontal_flip=True)\r\n\r\n    train_loader = train_imggen.flow_from_dataframe(traindf, './', shuffle=True,\r\n                                                x_col='path', y_col='label',\r\n                                                color_mode='grayscale',\r\n                                                target_size=(320,320), \r\n                                                class_mode='binary', \r\n                                                batch_size=8)\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/ZZVs6.png\r\n  [2]: https://i.stack.imgur.com/QNeie.png", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/94", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/94/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/94/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/94", "id": 381892373, "node_id": "MDU6SXNzdWUzODE4OTIzNzM=", "number": 94, "title": "Installation issues with keras-preprocessing to get flow_from_dataframe", "user": {"login": "zishanahmed08", "id": 28828606, "node_id": "MDQ6VXNlcjI4ODI4NjA2", "avatar_url": "https://avatars3.githubusercontent.com/u/28828606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zishanahmed08", "html_url": "https://github.com/zishanahmed08", "followers_url": "https://api.github.com/users/zishanahmed08/followers", "following_url": "https://api.github.com/users/zishanahmed08/following{/other_user}", "gists_url": "https://api.github.com/users/zishanahmed08/gists{/gist_id}", "starred_url": "https://api.github.com/users/zishanahmed08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zishanahmed08/subscriptions", "organizations_url": "https://api.github.com/users/zishanahmed08/orgs", "repos_url": "https://api.github.com/users/zishanahmed08/repos", "events_url": "https://api.github.com/users/zishanahmed08/events{/privacy}", "received_events_url": "https://api.github.com/users/zishanahmed08/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-17T19:19:20Z", "updated_at": "2018-11-18T22:42:15Z", "closed_at": "2018-11-18T22:42:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you please tell me the right procedure of installation.Since the feature flow_from_dataframe is not availble in the pip version, i try to get it installed from the gitub repo. This is what i tried and failed in my virtual environment \r\n\r\n```\r\npip uninstall keras\r\npip uninstall keras-preprocessing\r\npip install git+https://github.com/keras-team/keras-preprocessing.git\r\npip install keras\r\n````\r\n\r\nWhat am i doing wrong here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/92", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/92/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/92/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/92", "id": 380906089, "node_id": "MDU6SXNzdWUzODA5MDYwODk=", "number": 92, "title": "flow_from_dataframe() found 0 images", "user": {"login": "Mahi-Mai", "id": 17129394, "node_id": "MDQ6VXNlcjE3MTI5Mzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/17129394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mahi-Mai", "html_url": "https://github.com/Mahi-Mai", "followers_url": "https://api.github.com/users/Mahi-Mai/followers", "following_url": "https://api.github.com/users/Mahi-Mai/following{/other_user}", "gists_url": "https://api.github.com/users/Mahi-Mai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mahi-Mai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mahi-Mai/subscriptions", "organizations_url": "https://api.github.com/users/Mahi-Mai/orgs", "repos_url": "https://api.github.com/users/Mahi-Mai/repos", "events_url": "https://api.github.com/users/Mahi-Mai/events{/privacy}", "received_events_url": "https://api.github.com/users/Mahi-Mai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-14T22:01:27Z", "updated_at": "2020-03-26T12:41:26Z", "closed_at": "2018-11-26T18:39:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello again!  I'm still struggling with flow_from_dataframe() after the issues I had [here](https://github.com/keras-team/keras-preprocessing/issues/88).\r\n\r\nIn order to use the new fixes, I cloned the keras repo, and then replaced the contents of the preprocessing folder with the latest from the keras-preprocessing repo.  I renamed the local repo keras2 to avoid importing the vanilla repo.  The code finally runs, but it's not finding any images.\r\n\r\nHere's my script:\r\n```\r\nimport pandas as pd\r\nimport numpy as np\r\nimport sys\r\nsys.path.append('/Users/lmcane/documents/tools/keras2/')\r\nfrom keras2.preprocessing.image import ImageDataGenerator\r\n\r\n\r\ntrain = pd.read_csv('short_dir_train.csv', index_col=0)\r\nprint(train.filepath[0] + '\\n')\r\ntrain.info()\r\n```\r\nReturns: \r\n```\r\nUsing TensorFlow backend.\r\n\r\nMarch 29 2018/Top view_1-2/IMG_6823.JPG\r\n\r\n<class 'pandas.core.frame.DataFrame'>\r\nInt64Index: 869 entries, 0 to 868\r\nData columns (total 2 columns):\r\nfilepath    869 non-null object\r\nlabel       869 non-null object\r\ndtypes: object(2)\r\nmemory usage: 60.4+ KB\r\n```\r\nThen the main body of the script:\r\n```\r\nmain_dir = '/Users/lmcane/Documents/Datasets/Unsorted Extracted/224x224px'\r\n\r\nimg_width, img_height = 224, 224\r\nnb_train_samples = 433\r\nnb_validation_samples = 216\r\nbatch_size = 20\r\nepochs = 10\r\n\r\ntrain_datagen = ImageDataGenerator(horizontal_flip = True,\r\n                                   fill_mode = \"nearest\",\r\n                                   zoom_range = 0.3,\r\n                                   width_shift_range = 0.1,\r\n                                   height_shift_range = 0.1,\r\n                                   rotation_range = 30)\r\n\r\ntrain_generator = train_datagen.flow_from_dataframe(dataframe=train,\r\n                                                    directory=main_dir,\r\n                                                    x_col='filepath',\r\n                                                    y_col='label',\r\n                                                    has_ext=True,\r\n                                                    target_size = (img_height, img_width),\r\n                                                    batch_size = batch_size, \r\n                                                    class_mode = \"binary\")\r\n```\r\nReturns: \r\n```\r\nFound 0 images belonging to 2 classes.\r\n```\r\n\r\nIt should find 433.  I suspect I didn't import the repo correctly?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/88", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/88/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/88/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/88", "id": 376573998, "node_id": "MDU6SXNzdWUzNzY1NzM5OTg=", "number": 88, "title": "flow_from_dataframe() - ValueError: has_ext is set to True but extension not found in x_col", "user": {"login": "Mahi-Mai", "id": 17129394, "node_id": "MDQ6VXNlcjE3MTI5Mzk0", "avatar_url": "https://avatars2.githubusercontent.com/u/17129394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mahi-Mai", "html_url": "https://github.com/Mahi-Mai", "followers_url": "https://api.github.com/users/Mahi-Mai/followers", "following_url": "https://api.github.com/users/Mahi-Mai/following{/other_user}", "gists_url": "https://api.github.com/users/Mahi-Mai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mahi-Mai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mahi-Mai/subscriptions", "organizations_url": "https://api.github.com/users/Mahi-Mai/orgs", "repos_url": "https://api.github.com/users/Mahi-Mai/repos", "events_url": "https://api.github.com/users/Mahi-Mai/events{/privacy}", "received_events_url": "https://api.github.com/users/Mahi-Mai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-01T21:15:54Z", "updated_at": "2019-01-09T18:27:40Z", "closed_at": "2019-01-09T18:27:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working with images organized across several folders.  I have a dataframe of their file paths, and up until now I've been using that with a script to move them into the necessary categorical folders.  It takes up a lot of time and space.  So, needless to say I was _ecstatic_ when I found the flow_from_dataframe() method.\r\n\r\nI have my valid dataframe and filepaths.  I initialize the generators like this:\r\n```\r\nfrom keras.preprocessing.image import ImageDataGenerator\r\n\r\nmain_dir = '/User/name/etc/etc/224px/'\r\n\r\n# Initiate the train and test generators with data Augumentation \r\ntrain_datagen = ImageDataGenerator(preprocessing_function = preprocess_input,\r\n                                   #rescale = 1./255,\r\n                                   horizontal_flip = True,\r\n                                   fill_mode = \"nearest\",\r\n                                   zoom_range = 0.3,\r\n                                   width_shift_range = 0.1,\r\n                                   height_shift_range = 0.1,\r\n                                   rotation_range = 30)\r\n\r\ntest_datagen = ImageDataGenerator(preprocessing_function = preprocess_input)\r\n\r\nseed = 108201987 # Optional random seed for shuffling and transformations.\r\n\r\ntrain_generator = train_datagen.flow_from_dataframe(dataframe=train,\r\n                                                    directory=main_dir,\r\n                                                    x_col='filepath',\r\n                                                    y_col='label',\r\n                                                    has_ext=True,\r\n                                                    target_size = (img_height, img_width),\r\n                                                    batch_size = batch_size, \r\n                                                    class_mode = \"binary\",\r\n                                                   seed = seed)\r\n\r\nvalidation_generator = test_datagen.flow_from_directory(dataframe=val,\r\n                                                        directory=main_dir,\r\n                                                        x_col='filepath',\r\n                                                        y_col='label',\r\n                                                        has_ext=True,\r\n                                                        target_size = (img_height, img_width),\r\n                                                        class_mode = \"binary\",\r\n                                                        seed = seed)\r\n```\r\nHere's a sample file path: 'October 29 2018/Top view_XYZ_4-9/IMG_6854.JPG'\r\n\r\nBoth the training and validation generators have has_ext set to True, since my files have extensions.  However, I get this error:\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-11-1e162ab6ee70> in <module>()\r\n     23                                                     batch_size = batch_size,\r\n     24                                                     class_mode = \"binary\",\r\n---> 25                                                    seed = seed)\r\n     26 \r\n     27 validation_generator = test_datagen.flow_from_directory(dataframe=val,\r\n\r\n/usr/local/anaconda3/lib/python3.5/site-packages/keras_preprocessing/image.py in flow_from_dataframe(self, dataframe, directory, x_col, y_col, has_ext, target_size, color_mode, classes, class_mode, batch_size, shuffle, seed, save_to_dir, save_prefix, save_format, subset, interpolation)\r\n   1105                                  save_format=save_format,\r\n   1106                                  subset=subset,\r\n-> 1107                                  interpolation=interpolation)\r\n   1108 \r\n   1109     def standardize(self, x):\r\n\r\n/usr/local/anaconda3/lib/python3.5/site-packages/keras_preprocessing/image.py in __init__(self, dataframe, directory, image_data_generator, x_col, y_col, has_ext, target_size, color_mode, classes, class_mode, batch_size, shuffle, seed, data_format, save_to_dir, save_prefix, save_format, follow_links, subset, interpolation, dtype)\r\n   2101                     break\r\n   2102             if not ext_exist:\r\n-> 2103                 raise ValueError('has_ext is set to True but'\r\n   2104                                  ' extension not found in x_col')\r\n   2105             temp_df = pd.DataFrame({x_col: filenames}, dtype=str)\r\n\r\nValueError: has_ext is set to True but extension not found in x_col\r\n```\r\n\r\nI was so excited about the possibility of never having to sort or mix-up my images again.  Any ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/85", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/85/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/85/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/85", "id": 374362075, "node_id": "MDU6SXNzdWUzNzQzNjIwNzU=", "number": 85, "title": "ImageDataGenerators ``standardize`` modifies input", "user": {"login": "alxy", "id": 2057062, "node_id": "MDQ6VXNlcjIwNTcwNjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2057062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alxy", "html_url": "https://github.com/alxy", "followers_url": "https://api.github.com/users/alxy/followers", "following_url": "https://api.github.com/users/alxy/following{/other_user}", "gists_url": "https://api.github.com/users/alxy/gists{/gist_id}", "starred_url": "https://api.github.com/users/alxy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alxy/subscriptions", "organizations_url": "https://api.github.com/users/alxy/orgs", "repos_url": "https://api.github.com/users/alxy/repos", "events_url": "https://api.github.com/users/alxy/events{/privacy}", "received_events_url": "https://api.github.com/users/alxy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-10-26T12:29:35Z", "updated_at": "2019-01-20T20:19:01Z", "closed_at": "2019-01-20T20:19:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am not sure if this is a bug or intended functionality, but I realized that ``ImageDataGenerator``s ``standardize()`` method is actually modifying the input passed to it. This can be quite annoying in the context of jupyter notebook, when you want to reuse the raw images again. Consider the following example code:\r\n\r\n```python\r\nfrom keras.preprocessing.image import ImageDataGenerator\r\n\r\ndatagen = ImageDataGenerator(rescale=2)\r\n\r\nimages = np.ones((10, 128, 128, 3))\r\nprint(images.mean()) # 1.0\r\n\r\nimages_std = datagen.standardize(images)\r\n\r\nprint(images.mean(), images_std.mean()) # 2.0 2.0\r\n```\r\n\r\nI tracked this down to the fact, that this function uses the shorthand operator for simple arithmetic operations: https://github.com/keras-team/keras-preprocessing/blob/master/keras_preprocessing/image.py#L1124 The following two functions do exactly the same thing, however the first one does not modify the input while the second does:\r\n\r\n```python\r\ndef multiply1(x):\r\n    x = x * 2\r\n\r\ndef multiply2(x):\r\n    x *= 2\r\n    \r\n    \r\nimages = np.ones((10, 128, 128, 3))\r\nprint(images.mean()) # 1.0\r\n\r\nmultiply1(images)\r\nprint(images.mean()) # 1.0\r\n\r\nmultiply2(images)\r\nprint(images.mean()) # 2.0\r\n```\r\n\r\nNote that the behavior also differs for different standardization steps, e.g. ``zca_whitening`` does not modify the input while ``rescale`` does.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/80", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/80/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/80/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/80", "id": 372591667, "node_id": "MDU6SXNzdWUzNzI1OTE2Njc=", "number": 80, "title": "ImageDataGenerator inherits wrong class from TF 1.11, causing fit_generator to assume it isn't a Sequence", "user": {"login": "gabrieldemarmiesse", "id": 12891691, "node_id": "MDQ6VXNlcjEyODkxNjkx", "avatar_url": "https://avatars1.githubusercontent.com/u/12891691?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabrieldemarmiesse", "html_url": "https://github.com/gabrieldemarmiesse", "followers_url": "https://api.github.com/users/gabrieldemarmiesse/followers", "following_url": "https://api.github.com/users/gabrieldemarmiesse/following{/other_user}", "gists_url": "https://api.github.com/users/gabrieldemarmiesse/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabrieldemarmiesse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabrieldemarmiesse/subscriptions", "organizations_url": "https://api.github.com/users/gabrieldemarmiesse/orgs", "repos_url": "https://api.github.com/users/gabrieldemarmiesse/repos", "events_url": "https://api.github.com/users/gabrieldemarmiesse/events{/privacy}", "received_events_url": "https://api.github.com/users/gabrieldemarmiesse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-22T16:21:47Z", "updated_at": "2018-10-27T19:49:45Z", "closed_at": "2018-10-27T19:49:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The full description can be found at:\r\nhttps://github.com/keras-team/keras/issues/11452", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/67", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/67/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/67/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/67", "id": 368645113, "node_id": "MDU6SXNzdWUzNjg2NDUxMTM=", "number": 67, "title": "Is it possible the directoryiterator or flow_from_directory takes multiple directories as input ?", "user": {"login": "easilar", "id": 5120080, "node_id": "MDQ6VXNlcjUxMjAwODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5120080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/easilar", "html_url": "https://github.com/easilar", "followers_url": "https://api.github.com/users/easilar/followers", "following_url": "https://api.github.com/users/easilar/following{/other_user}", "gists_url": "https://api.github.com/users/easilar/gists{/gist_id}", "starred_url": "https://api.github.com/users/easilar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/easilar/subscriptions", "organizations_url": "https://api.github.com/users/easilar/orgs", "repos_url": "https://api.github.com/users/easilar/repos", "events_url": "https://api.github.com/users/easilar/events{/privacy}", "received_events_url": "https://api.github.com/users/easilar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-10T12:38:51Z", "updated_at": "2019-01-09T18:27:15Z", "closed_at": "2019-01-09T18:27:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Keras team,\r\nI need to combine data from multiple directories with exactly same sub directory structure. \r\nWould it be possible to add this feature into flow_from_directory class ?\r\n\r\nWith my restricted programming knowledge I would simply modify/add some lines before the line below. \r\nhttps://github.com/keras-team/keras-preprocessing/blob/2c7ef1d27bff4a24fe8bd2dc3800ccdebfc08a75/keras_preprocessing/image.py#L1888\r\n?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/63", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/63/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/63/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/63", "id": 367314450, "node_id": "MDU6SXNzdWUzNjczMTQ0NTA=", "number": 63, "title": "Unable to train with RGBA images; RGB work fine", "user": {"login": "Benz-Tracxpoint", "id": 25500756, "node_id": "MDQ6VXNlcjI1NTAwNzU2", "avatar_url": "https://avatars0.githubusercontent.com/u/25500756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Benz-Tracxpoint", "html_url": "https://github.com/Benz-Tracxpoint", "followers_url": "https://api.github.com/users/Benz-Tracxpoint/followers", "following_url": "https://api.github.com/users/Benz-Tracxpoint/following{/other_user}", "gists_url": "https://api.github.com/users/Benz-Tracxpoint/gists{/gist_id}", "starred_url": "https://api.github.com/users/Benz-Tracxpoint/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Benz-Tracxpoint/subscriptions", "organizations_url": "https://api.github.com/users/Benz-Tracxpoint/orgs", "repos_url": "https://api.github.com/users/Benz-Tracxpoint/repos", "events_url": "https://api.github.com/users/Benz-Tracxpoint/events{/privacy}", "received_events_url": "https://api.github.com/users/Benz-Tracxpoint/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1189889396, "node_id": "MDU6TGFiZWwxMTg5ODg5Mzk2", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/image", "name": "image", "color": "4d0272", "default": false, "description": "Related to images"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-05T18:09:48Z", "updated_at": "2019-01-15T17:32:46Z", "closed_at": "2019-01-15T17:32:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have training data that are RGBA images stored as png files. When I read them in as RGB images using flow_from_directory everything runs smoothly.\r\n\r\nBut if I set the 'color_mode' argument of flow_from_directory to 'rgba', as in he documentation, I get the following error when trying to run fit_generator:\r\n```\r\n`Epoch 1/120\r\nTraceback (most recent call last):\r\n  File \"training_keras.py\", line 326, in <module>\r\n    train_model(MODEL_NAME,BASE_DIR,OUTPUT_DIR,GPUS,NUM_EPOCHS,BATCH_SIZE,WIDTH,HEIGHT,MODEL_TYPE,WORKERS,DATA_FRACTION,TRAIN_ALL,FIRST_LAYER,FCN_SIZE,VALIDATION_DIR)\r\n  File \"training_keras.py\", line 314, in train_model\r\n    model.fit_generator( train_generator,steps_per_epoch=(train_generator.n/(BATCH_SIZE)/DATA_FRACTION),epochs=NUM_EPOCHS,callbacks=cbks,workers=WORKERS, validation_data=validate_generator)\r\n  File \"/usr/local/lib/python3.6/site-packages/keras/legacy/interfaces.py\", line 91, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/keras/engine/training.py\", line 1418, in fit_generator\r\n    initial_epoch=initial_epoch)\r\n  File \"/usr/local/lib/python3.6/site-packages/keras/engine/training_generator.py\", line 181, in fit_generator\r\n    generator_output = next(output_generator)\r\n  File \"/usr/local/lib/python3.6/site-packages/keras/utils/data_utils.py\", line 601, in get\r\n    six.reraise(*sys.exc_info())\r\n  File \"/usr/local/lib/python3.6/site-packages/six.py\", line 693, in reraise\r\n    raise value\r\n  File \"/usr/local/lib/python3.6/site-packages/keras/utils/data_utils.py\", line 595, in get\r\n    inputs = self.queue.get(block=True).get()\r\n  File \"/usr/local/lib/python3.6/multiprocessing/pool.py\", line 644, in get\r\n    raise self._value\r\n  File \"/usr/local/lib/python3.6/multiprocessing/pool.py\", line 119, in worker\r\n    result = (True, func(*args, **kwds))\r\n  File \"/usr/local/lib/python3.6/site-packages/keras/utils/data_utils.py\", line 401, in get_index\r\n    return _SHARED_SEQUENCES[uid][i]\r\n  File \"/usr/local/lib/python3.6/site-packages/keras_preprocessing/image.py\", line 1441, in __getitem__\r\n    return self._get_batches_of_transformed_samples(index_array)\r\n  File \"/usr/local/lib/python3.6/site-packages/keras_preprocessing/image.py\", line 1932, in _get_batches_of_transformed_samples\r\n    batch_x[i] = x\r\nValueError: could not broadcast input array from shape (296,296,3) into shape (296,296,4)\r\n`\r\n```\r\nWhy does this happen?\r\n\r\nThanks!\r\n\r\nP.S.\r\nKeras is version 2.2.4\r\nKeras-Preprocessing is version 1.0.6\r\nTensorflow-GPU is version 1.10.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/62", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/62/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/62/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/62", "id": 364832421, "node_id": "MDU6SXNzdWUzNjQ4MzI0MjE=", "number": 62, "title": "making keras-preprocessing independent", "user": {"login": "roywei", "id": 8022184, "node_id": "MDQ6VXNlcjgwMjIxODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8022184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roywei", "html_url": "https://github.com/roywei", "followers_url": "https://api.github.com/users/roywei/followers", "following_url": "https://api.github.com/users/roywei/following{/other_user}", "gists_url": "https://api.github.com/users/roywei/gists{/gist_id}", "starred_url": "https://api.github.com/users/roywei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roywei/subscriptions", "organizations_url": "https://api.github.com/users/roywei/orgs", "repos_url": "https://api.github.com/users/roywei/repos", "events_url": "https://api.github.com/users/roywei/events{/privacy}", "received_events_url": "https://api.github.com/users/roywei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-28T10:30:06Z", "updated_at": "2018-09-28T17:13:31Z", "closed_at": "2018-09-28T17:13:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently keras and keras-preprocessing depends on each other. \r\nSince it's already a separate module with it's own pip package, shouldn't we be able to use keras-preprocessing as an independent tool that does not depends on keras?\r\nHaving these two modules mutually depends on each other is causing conflicts at keras-mxnet (a keras fork) https://github.com/awslabs/keras-apache-mxnet/issues/129", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/60", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/60/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/60/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/60", "id": 363278527, "node_id": "MDU6SXNzdWUzNjMyNzg1Mjc=", "number": 60, "title": "flow_from_dataframe generates all the images from directory regardless of x_col", "user": {"login": "apollo2030", "id": 2427920, "node_id": "MDQ6VXNlcjI0Mjc5MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2427920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apollo2030", "html_url": "https://github.com/apollo2030", "followers_url": "https://api.github.com/users/apollo2030/followers", "following_url": "https://api.github.com/users/apollo2030/following{/other_user}", "gists_url": "https://api.github.com/users/apollo2030/gists{/gist_id}", "starred_url": "https://api.github.com/users/apollo2030/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apollo2030/subscriptions", "organizations_url": "https://api.github.com/users/apollo2030/orgs", "repos_url": "https://api.github.com/users/apollo2030/repos", "events_url": "https://api.github.com/users/apollo2030/events{/privacy}", "received_events_url": "https://api.github.com/users/apollo2030/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-24T19:00:19Z", "updated_at": "2018-09-29T00:24:32Z", "closed_at": "2018-09-29T00:24:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "When the image directory has more files than specified in the 'x_col' of the dataframe, the generator generates more images than expected. See the [repro](https://github.com/apollo2030/Repro/blob/master/Repro.ipynb).\r\n\r\nIt might be that I don't understand how it works though :) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/57", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/57/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/57/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/57", "id": 360335715, "node_id": "MDU6SXNzdWUzNjAzMzU3MTU=", "number": 57, "title": "flow_from_dataframe with multiple dtype entries", "user": {"login": "michaelStettler", "id": 22960820, "node_id": "MDQ6VXNlcjIyOTYwODIw", "avatar_url": "https://avatars2.githubusercontent.com/u/22960820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelStettler", "html_url": "https://github.com/michaelStettler", "followers_url": "https://api.github.com/users/michaelStettler/followers", "following_url": "https://api.github.com/users/michaelStettler/following{/other_user}", "gists_url": "https://api.github.com/users/michaelStettler/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelStettler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelStettler/subscriptions", "organizations_url": "https://api.github.com/users/michaelStettler/orgs", "repos_url": "https://api.github.com/users/michaelStettler/repos", "events_url": "https://api.github.com/users/michaelStettler/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelStettler/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2018-09-14T14:47:21Z", "updated_at": "2019-01-17T11:01:37Z", "closed_at": "2019-01-09T17:55:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use the flow_from_dataframe() function but run on a KeyError: nan error. \r\n\r\nMy csv file is as follow:\r\nsubDirectory_filePath, expression\r\nimg_1, 0\r\nimg_2, 3\r\n...\r\nimg_n, 0\r\n\r\ntherefore the first argument is a string while the other one is a integer. I have tried to follow that tuorial: \r\n[Tutorial on Keras ImageDataGenerator with flow_from_dataframe](https://medium.com/@vijayabhaskar96/tutorial-on-keras-imagedatagenerator-with-flow-from-dataframe-8bd5776e45c1)\r\n\r\nand thus my code is: \r\n\r\n    train_datagen = ImageDataGenerator(rescale=1. / 255,horizontal_flip=False)\r\n    df_train = pd.read_csv(data['csv_train_file'], dtype={'subDirectory_filePath': str, 'expression': int})\r\n    train_generator = train_datagen.flow_from_dataframe(\r\n        dataframe=df_train,\r\n        directory=data['img_dir'],\r\n        x_col='subDirectory_filePath',\r\n        y_col='expression',\r\n        has_ext=True,\r\n        class_mode=\"categorical\",\r\n        target_size=(model_params['img_height'], model_params['img_width']),\r\n        batch_size=model_params['batch_size']\r\n        #save_to_dir='test_train'\r\n    )\r\n\r\nand get the following issues:\r\n\r\n```\r\nFound 427298 images belonging to 11 classes.\r\n\r\nTraceback (most recent call last):\r\n  File \"train_model.py\", line 250, in <module>\r\n    train_model(model_name=model_name, dataset=dataset, mode=mode, weights=weights, computer=computer, run=run)\r\n  File \"train_model.py\", line 198, in train_model\r\n    train_generator, validation_generator = get_csv_generator(data, model_params, da, extended=False)\r\n  File \"train_model.py\", line 121, in get_csv_generator\r\n    batch_size=model_params['batch_size']\r\n  File \"/home/michael/.local/lib/python3.5/site-packages/keras_preprocessing/image.py\", line 1108, in flow_from_dataframe\r\n    interpolation=interpolation)\r\n  File \"/home/michael/.local/lib/python3.5/site-packages/keras_preprocessing/image.py\", line 2168, in __init__\r\n    self.classes = np.array([self.class_indices[cls] for cls in classes])\r\n  File \"/home/michael/.local/lib/python3.5/site-packages/keras_preprocessing/image.py\", line 2168, in <listcomp>\r\n    self.classes = np.array([self.class_indices[cls] for cls in classes])\r\nKeyError: nan\r\n```\r\n\r\nFurthermore, while printing my csv file I can see that it is full of NaN such as:\r\nsubDirectory_filePath                                                            expression                               \r\n002276d73d5822544f39d86b45098e67f84f78cd8edcba8...     NaN\r\n01807ce4c37cc4463bd06a966a4043edc14864a0075ff78...     NaN\r\n\r\nI am guessing that my issue is something with loading my csv file, I have first tried without the dtype dictionary but the same error occur.\r\n\r\nAny help much appreciated\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/56", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/56/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/56/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/56", "id": 359753472, "node_id": "MDU6SXNzdWUzNTk3NTM0NzI=", "number": 56, "title": "How to get flow_from_directory accept absolute path of images as input", "user": {"login": "lixiangchun", "id": 12658135, "node_id": "MDQ6VXNlcjEyNjU4MTM1", "avatar_url": "https://avatars1.githubusercontent.com/u/12658135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lixiangchun", "html_url": "https://github.com/lixiangchun", "followers_url": "https://api.github.com/users/lixiangchun/followers", "following_url": "https://api.github.com/users/lixiangchun/following{/other_user}", "gists_url": "https://api.github.com/users/lixiangchun/gists{/gist_id}", "starred_url": "https://api.github.com/users/lixiangchun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lixiangchun/subscriptions", "organizations_url": "https://api.github.com/users/lixiangchun/orgs", "repos_url": "https://api.github.com/users/lixiangchun/repos", "events_url": "https://api.github.com/users/lixiangchun/events{/privacy}", "received_events_url": "https://api.github.com/users/lixiangchun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-13T06:00:23Z", "updated_at": "2019-01-09T17:54:56Z", "closed_at": "2019-01-09T17:54:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I learned from the manual page of `flow_from_directory`, the first argument passed to `flow_from_directory` is a directory. Sometimes, it's also convenient to pass the path of images if the images are placed in multiple directories. If we could get `flow_from_directory` to accept images in the following format:\r\n\r\n/path1/img1.jpg  cat\r\n/path2/img2.jpg dog\r\n\r\nThe first column is the absolute path to the image, and the second column is the class names.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/55", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/55/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/55/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/55", "id": 359046861, "node_id": "MDU6SXNzdWUzNTkwNDY4NjE=", "number": 55, "title": "`zca_whitening` causes memory leak in `ImageDataGenerator.fit`", "user": {"login": "wottpal", "id": 3930150, "node_id": "MDQ6VXNlcjM5MzAxNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3930150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wottpal", "html_url": "https://github.com/wottpal", "followers_url": "https://api.github.com/users/wottpal/followers", "following_url": "https://api.github.com/users/wottpal/following{/other_user}", "gists_url": "https://api.github.com/users/wottpal/gists{/gist_id}", "starred_url": "https://api.github.com/users/wottpal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wottpal/subscriptions", "organizations_url": "https://api.github.com/users/wottpal/orgs", "repos_url": "https://api.github.com/users/wottpal/repos", "events_url": "https://api.github.com/users/wottpal/events{/privacy}", "received_events_url": "https://api.github.com/users/wottpal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 949830612, "node_id": "MDU6TGFiZWw5NDk4MzA2MTI=", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": "This will not be worked on"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-09-11T13:25:37Z", "updated_at": "2020-05-20T15:30:43Z", "closed_at": "2019-01-13T03:30:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "* Keras `2.2.2`\r\n* TensorFlow `1.10.1`\r\n* Python `3.6.6`\r\n* macOS `10.13.6`\r\n\r\nI'm trying to generate augmentations of my training data with `zca_whitening` and an `ImageDataGenerator`. But when I try to fit the generator (which is mandatory when using `zca_whitening`) the python process eats more and more memory (100Gb+) until it gets killed by the system.\r\n\r\nThis small example can cause the leak:\r\n\r\n```\r\nimport numpy as np\r\nfrom keras.preprocessing.image import ImageDataGenerator\r\n\r\ndef cause_leak():\r\n    idg = ImageDataGenerator(zca_whitening = True)\r\n    random_sample = np.random.random((1, 250, 250, 3))\r\n    idg.fit(random_sample)\r\n\r\ncause_leak()\r\n```\r\n\r\nThe terminal output only consists of a warning saying that `featurewise_center` is overwritten when enabling `zca_whitening`. I don't think this is related to the problem but who knows.\r\n\r\nDoes anybody know a workaround?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/52", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/52/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/52/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/52", "id": 358839915, "node_id": "MDU6SXNzdWUzNTg4Mzk5MTU=", "number": 52, "title": "Tokenizer.texts_to_sequences is using at most Tokenizer.num_words - 1 words.", "user": {"login": "aeftimia", "id": 4635614, "node_id": "MDQ6VXNlcjQ2MzU2MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/4635614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aeftimia", "html_url": "https://github.com/aeftimia", "followers_url": "https://api.github.com/users/aeftimia/followers", "following_url": "https://api.github.com/users/aeftimia/following{/other_user}", "gists_url": "https://api.github.com/users/aeftimia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aeftimia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aeftimia/subscriptions", "organizations_url": "https://api.github.com/users/aeftimia/orgs", "repos_url": "https://api.github.com/users/aeftimia/repos", "events_url": "https://api.github.com/users/aeftimia/events{/privacy}", "received_events_url": "https://api.github.com/users/aeftimia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-11T00:14:38Z", "updated_at": "2018-09-21T20:27:54Z", "closed_at": "2018-09-21T20:27:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\nfrom keras.preprocessing.text import Tokenizer\r\ntexts = ['a b c']\r\ntokenizer = Tokenizer(num_words=2)\r\ntokenizer.fit_on_texts(texts)\r\ntokenizer.word_index\r\n{'a': 1, 'b': 2, 'c': 3}\r\nprint(tokenizer.texts_to_sequences(texts))\r\n```\r\n`[[1,]]`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/51", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/51/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/51/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/51", "id": 358067769, "node_id": "MDU6SXNzdWUzNTgwNjc3Njk=", "number": 51, "title": "Iterator are not Sequence anymore", "user": {"login": "Dref360", "id": 8976546, "node_id": "MDQ6VXNlcjg5NzY1NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8976546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dref360", "html_url": "https://github.com/Dref360", "followers_url": "https://api.github.com/users/Dref360/followers", "following_url": "https://api.github.com/users/Dref360/following{/other_user}", "gists_url": "https://api.github.com/users/Dref360/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dref360/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dref360/subscriptions", "organizations_url": "https://api.github.com/users/Dref360/orgs", "repos_url": "https://api.github.com/users/Dref360/repos", "events_url": "https://api.github.com/users/Dref360/events{/privacy}", "received_events_url": "https://api.github.com/users/Dref360/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 949830605, "node_id": "MDU6TGFiZWw5NDk4MzA2MDU=", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-09-07T13:30:12Z", "updated_at": "2018-09-11T14:27:25Z", "closed_at": "2018-09-11T14:27:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Since the split, Iterators are not Sequence objects, which make them seen as generators from `fit_generator`.\r\n\r\nShould we modify keras_preprocessing to use Sequence if possible or change the logic of `*_generator` to not check the type but just validate that the methods are there?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/50", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/50/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/50/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/50", "id": 357071864, "node_id": "MDU6SXNzdWUzNTcwNzE4NjQ=", "number": 50, "title": "Is multiprocessing deleted in DirectoryGenerator?", "user": {"login": "ghostplant", "id": 12099308, "node_id": "MDQ6VXNlcjEyMDk5MzA4", "avatar_url": "https://avatars2.githubusercontent.com/u/12099308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ghostplant", "html_url": "https://github.com/ghostplant", "followers_url": "https://api.github.com/users/ghostplant/followers", "following_url": "https://api.github.com/users/ghostplant/following{/other_user}", "gists_url": "https://api.github.com/users/ghostplant/gists{/gist_id}", "starred_url": "https://api.github.com/users/ghostplant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ghostplant/subscriptions", "organizations_url": "https://api.github.com/users/ghostplant/orgs", "repos_url": "https://api.github.com/users/ghostplant/repos", "events_url": "https://api.github.com/users/ghostplant/events{/privacy}", "received_events_url": "https://api.github.com/users/ghostplant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-05T05:34:16Z", "updated_at": "2018-09-06T10:23:43Z", "closed_at": "2018-09-06T10:23:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't see this support on latest keras-preprocessing source codes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/47", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/47/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/47/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/47", "id": 356268191, "node_id": "MDU6SXNzdWUzNTYyNjgxOTE=", "number": 47, "title": "Wrong link in the docs", "user": {"login": "fepegar", "id": 12688084, "node_id": "MDQ6VXNlcjEyNjg4MDg0", "avatar_url": "https://avatars1.githubusercontent.com/u/12688084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fepegar", "html_url": "https://github.com/fepegar", "followers_url": "https://api.github.com/users/fepegar/followers", "following_url": "https://api.github.com/users/fepegar/following{/other_user}", "gists_url": "https://api.github.com/users/fepegar/gists{/gist_id}", "starred_url": "https://api.github.com/users/fepegar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fepegar/subscriptions", "organizations_url": "https://api.github.com/users/fepegar/orgs", "repos_url": "https://api.github.com/users/fepegar/repos", "events_url": "https://api.github.com/users/fepegar/events{/privacy}", "received_events_url": "https://api.github.com/users/fepegar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1191735928, "node_id": "MDU6TGFiZWwxMTkxNzM1OTI4", "url": "https://api.github.com/repos/keras-team/keras-preprocessing/labels/documentation", "name": "documentation", "color": "5319e7", "default": true, "description": "Related to the documentation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-02T09:37:25Z", "updated_at": "2019-01-14T20:43:30Z", "closed_at": "2019-01-14T20:30:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is something wrong with this link in the [Image Preprocessing docs](https://keras.io/preprocessing/image/).:\r\nhttps://github.com/keras-team/keras-preprocessing/blob/45fc4a0bc3d587a337bec93ac01aeeb1e6cc913b/keras_preprocessing/image.py#L886-L888\r\n\r\nWhen I hover on it, I see at the bottom of my browser this URL:\r\n```\r\nhttps://gist.github.com/fchollet/        0830affa1f7f19fd47b06d4cf89ed44d\r\n```\r\nand when I click on it, it leads me to\r\n```\r\nhttps://gist.github.com/fchollet/%20%20%20%20%20%20%20%200830affa1f7f19fd47b06d4cf89ed44d\r\n```\r\n\r\nI can reproduce on Chrome and Firefox.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/45", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/45/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/45/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/45", "id": 355239107, "node_id": "MDU6SXNzdWUzNTUyMzkxMDc=", "number": 45, "title": "Iterate on ImageGenerator loops indefinitely", "user": {"login": "JacoGasp", "id": 6513727, "node_id": "MDQ6VXNlcjY1MTM3Mjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/6513727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JacoGasp", "html_url": "https://github.com/JacoGasp", "followers_url": "https://api.github.com/users/JacoGasp/followers", "following_url": "https://api.github.com/users/JacoGasp/following{/other_user}", "gists_url": "https://api.github.com/users/JacoGasp/gists{/gist_id}", "starred_url": "https://api.github.com/users/JacoGasp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JacoGasp/subscriptions", "organizations_url": "https://api.github.com/users/JacoGasp/orgs", "repos_url": "https://api.github.com/users/JacoGasp/repos", "events_url": "https://api.github.com/users/JacoGasp/events{/privacy}", "received_events_url": "https://api.github.com/users/JacoGasp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-08-29T16:28:00Z", "updated_at": "2020-06-22T09:20:55Z", "closed_at": "2018-08-31T12:25:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everybody,\r\nI'm facing a wired issue with image generators while iterating over them (keras 2.2.0)\r\n\r\nMy validation set contains 7160 pictures. Then, I set my generator like this:\r\n\r\n```python\r\nbatch_size = 32\r\n\r\ntrain_datagen = image.ImageDataGenerator()\r\ntrain_generator = train_datagen.flow_from_directory(\"train/\", target_size=(224, 224), batch_size=batch_size)\r\n```\r\n\r\nUp to here, everything looks normal: `train_generator[0]` returns a tuple of 32 image arrays and 32  label arrays, as expected.\r\n\r\nThe strange things is that if I iterate with a for loop as follow\r\n```python\r\nx_train = []\r\nfor x, y in train_generator:\r\n    x_train.append(preprocess_input(x))\r\n```\r\nit simply iterates forever! And as consequence the size of `x_train` gets bigger and bigger!\r\nI would expect instead exactly 224 iteration (7160 samples in 32 batches).\r\n\r\nAnd indeed, if I ask `train_generator[405]` I get a reasonable `ValueError: Asked to retrieve element 405, but the Sequence has length 224`.\r\n\r\nWhat's going on here?! Am I missing something about how ImageGenerators work?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/42", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/42/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/42/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/42", "id": 354099364, "node_id": "MDU6SXNzdWUzNTQwOTkzNjQ=", "number": 42, "title": "Pip releases vs github releases", "user": {"login": "ixil", "id": 2058587, "node_id": "MDQ6VXNlcjIwNTg1ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/2058587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ixil", "html_url": "https://github.com/ixil", "followers_url": "https://api.github.com/users/ixil/followers", "following_url": "https://api.github.com/users/ixil/following{/other_user}", "gists_url": "https://api.github.com/users/ixil/gists{/gist_id}", "starred_url": "https://api.github.com/users/ixil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ixil/subscriptions", "organizations_url": "https://api.github.com/users/ixil/orgs", "repos_url": "https://api.github.com/users/ixil/repos", "events_url": "https://api.github.com/users/ixil/events{/privacy}", "received_events_url": "https://api.github.com/users/ixil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-26T14:30:55Z", "updated_at": "2018-08-29T15:41:45Z", "closed_at": "2018-08-29T15:41:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm a maintainer for https://aur.archlinux.org/pkgbase/python-keras-preprocessing/\r\nThe latest pip release is 1.0.3 whereas the latest github release is 1.0.2 (albeit with a wrong version number in the setup.py) \r\nAre the pip releases the preferred official release, or should I stick to using the github releases?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/41", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/41/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/41/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/41", "id": 353587957, "node_id": "MDU6SXNzdWUzNTM1ODc5NTc=", "number": 41, "title": "version in setup.py, 1.0.1,  is incorrect for the 1.0.2 tag", "user": {"login": "jjhelmus", "id": 1050278, "node_id": "MDQ6VXNlcjEwNTAyNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1050278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjhelmus", "html_url": "https://github.com/jjhelmus", "followers_url": "https://api.github.com/users/jjhelmus/followers", "following_url": "https://api.github.com/users/jjhelmus/following{/other_user}", "gists_url": "https://api.github.com/users/jjhelmus/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjhelmus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjhelmus/subscriptions", "organizations_url": "https://api.github.com/users/jjhelmus/orgs", "repos_url": "https://api.github.com/users/jjhelmus/repos", "events_url": "https://api.github.com/users/jjhelmus/events{/privacy}", "received_events_url": "https://api.github.com/users/jjhelmus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-23T23:14:50Z", "updated_at": "2018-08-29T15:42:15Z", "closed_at": "2018-08-29T15:42:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [version recorded in the setup.py file for the 1.0.2 tag](https://github.com/keras-team/keras-preprocessing/blob/1.0.2/setup.py#L24) is 1.0.1, which is incorrect.  The sdist on PyPI has the correct version in the setup.py file.  \r\n\r\nThis can causes issues if a checkout of the git tag is used as the mean to install keras-preprocessing as the incorrect version will be recorded in the metadata.\r\n\r\nI do not think anything should be done to fix this as changing a tag is a bad procedure.  I think it is useful to have this in the issue tracker in case anyone else runs into the issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/39", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/39/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/39/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/39", "id": 352324037, "node_id": "MDU6SXNzdWUzNTIzMjQwMzc=", "number": 39, "title": "Redesign", "user": {"login": "fchollet", "id": 710255, "node_id": "MDQ6VXNlcjcxMDI1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/710255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchollet", "html_url": "https://github.com/fchollet", "followers_url": "https://api.github.com/users/fchollet/followers", "following_url": "https://api.github.com/users/fchollet/following{/other_user}", "gists_url": "https://api.github.com/users/fchollet/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchollet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchollet/subscriptions", "organizations_url": "https://api.github.com/users/fchollet/orgs", "repos_url": "https://api.github.com/users/fchollet/repos", "events_url": "https://api.github.com/users/fchollet/events{/privacy}", "received_events_url": "https://api.github.com/users/fchollet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-08-20T22:52:00Z", "updated_at": "2018-08-22T01:33:49Z", "closed_at": "2018-08-22T01:33:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This package suffers from the same P0 issue as https://github.com/keras-team/keras-applications/issues/28\r\n\r\nThere is the further complication that this package leverages imports from Keras **as soon as the `image.py` and `sequence.py` files are executed for the first time** (due to subclassing of the `Sequence` class). This does not prevent us from applying any of the two solutions proposed, though (for the second solution, we would have to use multiple inheritance to get it to work).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/35", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/35/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/35/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/35", "id": 349985940, "node_id": "MDU6SXNzdWUzNDk5ODU5NDA=", "number": 35, "title": "ImageDataGenerator returns empty/white images", "user": {"login": "KeironO", "id": 4386515, "node_id": "MDQ6VXNlcjQzODY1MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/4386515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KeironO", "html_url": "https://github.com/KeironO", "followers_url": "https://api.github.com/users/KeironO/followers", "following_url": "https://api.github.com/users/KeironO/following{/other_user}", "gists_url": "https://api.github.com/users/KeironO/gists{/gist_id}", "starred_url": "https://api.github.com/users/KeironO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KeironO/subscriptions", "organizations_url": "https://api.github.com/users/KeironO/orgs", "repos_url": "https://api.github.com/users/KeironO/repos", "events_url": "https://api.github.com/users/KeironO/events{/privacy}", "received_events_url": "https://api.github.com/users/KeironO/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-13T11:11:59Z", "updated_at": "2018-09-05T13:17:37Z", "closed_at": "2018-09-05T13:17:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Referencing this: https://github.com/keras-team/keras/issues/10869#issuecomment-412351708\r\n\r\nI've just been able to reproduce this bug using the following script.\r\n\r\n```python\r\nfrom keras.datasets import mnist\r\n\r\nfrom keras.preprocessing.image import ImageDataGenerator\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib.animation as animation\r\nimport numpy as np\r\n\r\n(X, y), _ = mnist.load_data()\r\nX = X.reshape(X.shape[0], 1, 28, 28)\r\nX = X[:100]\r\n\r\n\r\ndatagen = ImageDataGenerator(width_shift_range=0.2)\r\ndatagen.fit(X)\r\n\r\n\r\nimgs = []\r\nbatches = 0\r\nfor i in datagen.flow(X, batch_size=32):\r\n    batches += 1\r\n    for x in i:\r\n        img = np.asarray(x).reshape((28, 28))\r\n        imgs.append([plt.imshow(img, cmap='gray', animated=True)])\r\n    print\"Completed batch : %i\" % (batches)\r\n    if batches >= len(X) / 32:\r\n        break\r\n\r\nfig = plt.figure()\r\nani = animation.ArtistAnimation(fig, imgs, interval=50, blit=True,\r\n                                repeat_delay=1000)\r\nani.save(\"test.gif\", writer=\"imagemagick\")\r\n```\r\n\r\nWhich produces the following (blank) gif:\r\n\r\n![blankgif](https://i.imgur.com/nOS12d6.gif)\r\n\r\n(Apologies about the scripting, did it whilst stood up waiting for a meeting!)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/33", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/33/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/33/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/33", "id": 347268283, "node_id": "MDU6SXNzdWUzNDcyNjgyODM=", "number": 33, "title": "Is x = np.copy(x) necessary in fit function of class ImageDataGenerator?", "user": {"login": "DominickZhang", "id": 16048179, "node_id": "MDQ6VXNlcjE2MDQ4MTc5", "avatar_url": "https://avatars0.githubusercontent.com/u/16048179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DominickZhang", "html_url": "https://github.com/DominickZhang", "followers_url": "https://api.github.com/users/DominickZhang/followers", "following_url": "https://api.github.com/users/DominickZhang/following{/other_user}", "gists_url": "https://api.github.com/users/DominickZhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/DominickZhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DominickZhang/subscriptions", "organizations_url": "https://api.github.com/users/DominickZhang/orgs", "repos_url": "https://api.github.com/users/DominickZhang/repos", "events_url": "https://api.github.com/users/DominickZhang/events{/privacy}", "received_events_url": "https://api.github.com/users/DominickZhang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-03T05:53:40Z", "updated_at": "2018-09-05T13:17:30Z", "closed_at": "2018-09-05T13:17:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! When I was running my codes, the memory error occurred in fit function. I have changed the type of `img1` as `float32` in order not to copy `x` in `x = np.asarray(x, dtype = backend.floatx())`, which is shown in the picture below. Although there are many ways to solve this problem, I am curious about whether `x = np.copy(x)` is needed. It seems that an `if...else...` statement to decide whether to adjust the order of x can avoid unnecessary memory allocation, especially when `x` is a huge matrix. \r\nMany thanks!\r\n\r\n<img width=\"395\" alt=\"wx20180803-000236 2x\" src=\"https://user-images.githubusercontent.com/16048179/43625344-27f73eb0-96b2-11e8-9c5e-f686b21c4c04.png\">\r\n\r\nThe following is the codes from Line 1205 to 1232 in image.py.\r\n```\r\n        x = np.asarray(x, dtype=backend.floatx())\r\n        if x.ndim != 4:\r\n            raise ValueError('Input to `.fit()` should have rank 4. '\r\n                             'Got array with shape: ' + str(x.shape))\r\n        if x.shape[self.channel_axis] not in {1, 3, 4}:\r\n            warnings.warn(\r\n                'Expected input to be images (as Numpy array) '\r\n                'following the data format convention \"' +\r\n                self.data_format + '\" (channels on axis ' +\r\n                str(self.channel_axis) + '), i.e. expected '\r\n                'either 1, 3 or 4 channels on axis ' +\r\n                str(self.channel_axis) + '. '\r\n                'However, it was passed an array with shape ' +\r\n                str(x.shape) + ' (' + str(x.shape[self.channel_axis]) +\r\n                ' channels).')\r\n\r\n        if seed is not None:\r\n            np.random.seed(seed)\r\n\r\n        x = np.copy(x)\r\n        if augment:\r\n            ax = np.zeros(\r\n                tuple([rounds * x.shape[0]] + list(x.shape)[1:]),\r\n                dtype=backend.floatx())\r\n            for r in range(rounds):\r\n                for i in range(x.shape[0]):\r\n                    ax[i + r * x.shape[0]] = self.random_transform(x[i])\r\n            x = ax\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/23", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/23/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/23/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/23", "id": 341415526, "node_id": "MDU6SXNzdWUzNDE0MTU1MjY=", "number": 23, "title": "pass `order` to affine_transform", "user": {"login": "OmriTreidel", "id": 8262260, "node_id": "MDQ6VXNlcjgyNjIyNjA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8262260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OmriTreidel", "html_url": "https://github.com/OmriTreidel", "followers_url": "https://api.github.com/users/OmriTreidel/followers", "following_url": "https://api.github.com/users/OmriTreidel/following{/other_user}", "gists_url": "https://api.github.com/users/OmriTreidel/gists{/gist_id}", "starred_url": "https://api.github.com/users/OmriTreidel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OmriTreidel/subscriptions", "organizations_url": "https://api.github.com/users/OmriTreidel/orgs", "repos_url": "https://api.github.com/users/OmriTreidel/repos", "events_url": "https://api.github.com/users/OmriTreidel/events{/privacy}", "received_events_url": "https://api.github.com/users/OmriTreidel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-16T07:33:19Z", "updated_at": "2019-01-13T01:19:32Z", "closed_at": "2019-01-13T01:19:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "The method `apply_affine_transform` is a wrapper `scipy.ndimage.interpolation.affine_transform` that has a parameter `order` which is the order a a spline interpolation. Not being able to pass this parameter causes a problem when generating random transformation of labeled images since it results in non-integer values.\r\n\r\nfor example: \r\n\r\nfor a given labels (each integer is a class label) \r\n```python \r\n[[2 2 0 2 2]\r\n [1 3 2 3 1]\r\n [2 1 0 1 2]\r\n [3 1 0 2 0]\r\n [3 1 3 2 1]]\r\n```\r\n\r\nit transformed to \r\n```python \r\n[[2.289865   1.7110896  1.8507836  2.172145   0.15832195]\r\n [3.         2.2037435  1.0774351  1.4194988  2.3764393 ]\r\n [3.         1.4194988  0.39426237 0.49894607 1.7452569 ]\r\n [1.8929222  1.7380519  1.7849773  2.         1.2062019 ]\r\n [1.2646285  2.8956027  2.2367117  1.3144331  0.23671168]]\r\n```\r\n\r\nWhich are clearly not valid class labels. I dag around and found that the reason is the hard coded `order` in https://github.com/keras-team/keras-preprocessing/blob/master/keras_preprocessing/image.py line 323. \r\n\r\nbeing able to pass this parameter would enable correct data augmentation for image segmentation. \r\n\r\nI have made a small path to fix this issue so i'll create a PR soon.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/22", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/22/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/22/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/22", "id": 341007705, "node_id": "MDU6SXNzdWUzNDEwMDc3MDU=", "number": 22, "title": "Avoid Package Dependencies", "user": {"login": "brunoalano", "id": 810642, "node_id": "MDQ6VXNlcjgxMDY0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/810642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoalano", "html_url": "https://github.com/brunoalano", "followers_url": "https://api.github.com/users/brunoalano/followers", "following_url": "https://api.github.com/users/brunoalano/following{/other_user}", "gists_url": "https://api.github.com/users/brunoalano/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoalano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoalano/subscriptions", "organizations_url": "https://api.github.com/users/brunoalano/orgs", "repos_url": "https://api.github.com/users/brunoalano/repos", "events_url": "https://api.github.com/users/brunoalano/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoalano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-13T12:52:54Z", "updated_at": "2018-07-27T16:59:26Z", "closed_at": "2018-07-27T16:59:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "From a perspective from who only want to use the `sequence.pad_sequences` module and don't want to do a shallow copy of it, I believe that a better aproach for this project would be to avoid any dependency, or just use `numpy`.\r\n\r\nWe can do like all packages do for `matplotlib` for example, displaying a warning to the user that a optional dependency are required for that process.\r\n\r\nPackages to remove from dependencies:\r\n- Keras\r\n- scipy", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/20", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/20/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/20/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/20", "id": 340265206, "node_id": "MDU6SXNzdWUzNDAyNjUyMDY=", "number": 20, "title": "AttributeError when running tests", "user": {"login": "abhaikollara", "id": 21106717, "node_id": "MDQ6VXNlcjIxMTA2NzE3", "avatar_url": "https://avatars1.githubusercontent.com/u/21106717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhaikollara", "html_url": "https://github.com/abhaikollara", "followers_url": "https://api.github.com/users/abhaikollara/followers", "following_url": "https://api.github.com/users/abhaikollara/following{/other_user}", "gists_url": "https://api.github.com/users/abhaikollara/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhaikollara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhaikollara/subscriptions", "organizations_url": "https://api.github.com/users/abhaikollara/orgs", "repos_url": "https://api.github.com/users/abhaikollara/repos", "events_url": "https://api.github.com/users/abhaikollara/events{/privacy}", "received_events_url": "https://api.github.com/users/abhaikollara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-11T14:23:04Z", "updated_at": "2019-01-13T01:19:08Z", "closed_at": "2019-01-13T01:19:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Multiple fails when running tests, although Tokenizer definitely has a `sequences_to_texts` attribute.\r\nKeras version : 2.2.0\r\n\r\n```python\r\n    def test_sequences_to_texts():\r\n        texts = [\r\n            'The cat sat on the mat.',\r\n            'The dog sat on the log.',\r\n            'Dogs and cats living together.'\r\n        ]\r\n        tokenizer = keras.preprocessing.text.Tokenizer(num_words=10,\r\n                                                       oov_token='<unk>')\r\n        tokenizer.fit_on_texts(texts)\r\n        tokenized_text = tokenizer.texts_to_sequences(texts)\r\n>       trans_text = tokenizer.sequences_to_texts(tokenized_text)\r\n```\r\n```\r\nE       AttributeError: 'Tokenizer' object has no attribute 'sequences_to_texts'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/17", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/17/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/17/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/17", "id": 333273437, "node_id": "MDU6SXNzdWUzMzMyNzM0Mzc=", "number": 17, "title": "Which one is expected by channel_shift?", "user": {"login": "wakamezake", "id": 7046610, "node_id": "MDQ6VXNlcjcwNDY2MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7046610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wakamezake", "html_url": "https://github.com/wakamezake", "followers_url": "https://api.github.com/users/wakamezake/followers", "following_url": "https://api.github.com/users/wakamezake/following{/other_user}", "gists_url": "https://api.github.com/users/wakamezake/gists{/gist_id}", "starred_url": "https://api.github.com/users/wakamezake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wakamezake/subscriptions", "organizations_url": "https://api.github.com/users/wakamezake/orgs", "repos_url": "https://api.github.com/users/wakamezake/repos", "events_url": "https://api.github.com/users/wakamezake/events{/privacy}", "received_events_url": "https://api.github.com/users/wakamezake/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-18T13:37:43Z", "updated_at": "2019-08-22T21:10:38Z", "closed_at": "2019-01-13T01:18:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! While runnning [keras-preprocessing(master)/image.py/random_channel_shift](https://github.com/keras-team/keras-preprocessing/blob/master/keras_preprocessing/image.py#L182-L194), I thought it was different from the expected channel_shift behavior.\r\n\r\nI think that the expected channel shift movement is old.\r\n#### Original Images(cifar10)\r\n```python\r\nfrom keras.datasets import cifar10\r\nfrom keras.preprocessing.image import random_channel_shift\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n\r\n\r\ndef plot_tiles(images, rows=5, columns=5):\r\n    pos = 1\r\n    for idx in range(rows*columns):\r\n        plt.subplot(rows, columns, pos)\r\n        img = images[idx]\r\n        plt.imshow(img)\r\n        plt.axis(\"off\")\r\n        pos += 1\r\n    plt.show()\r\n\r\n\r\n(x_train, y_train), (x_test, y_test) = cifar10.load_data()\r\nsample_images = x_train[:9]/255\r\nchannel_shift_range = 0.3\r\nplot_tiles(sample_images, rows=3, columns=3)\r\n```\r\n<img src=\"https://user-images.githubusercontent.com/7046610/41537111-7432c7ce-7342-11e8-93d6-4f979d3c15a9.png\" width=50%>\r\n\r\n#### Latest Channel_Shift Images(cifar10)\r\n```python\r\nchannel_shift_images_latest = []\r\nfor _ in sample_images:\r\n    channel_shift_images_latest.append(_random_channel_shift(_, channel_shift_range, 2))\r\nchannel_shift_images_latest = np.array(channel_shift_images_latest)\r\nplot_tiles(channel_shift_images_latest, rows=3, columns=3)\r\n```\r\n[keras-preprocessing(master)/image.py/random_channel_shift](https://github.com/keras-team/keras-preprocessing/blob/master/keras_preprocessing/image.py#L182-L194)\r\n<img src=\"https://user-images.githubusercontent.com/7046610/41537122-78922896-7342-11e8-97e6-3bce5dcc28d2.png\" width=50%>\r\n\r\n#### Old Channel_Shift Images(cifar10)\r\n```python\r\nchannel_shift_images_old = []\r\nfor _ in sample_images:\r\n    channel_shift_images_old.append(random_channel_shift(_, channel_shift_range, 2))\r\nchannel_shift_images_old = np.array(channel_shift_images_old)\r\nplot_tiles(channel_shift_images_old, rows=3, columns=3)\r\n```\r\n[keras-preprocessing(old)/image.py/random_channel_shift](https://github.com/keras-team/keras/blob/8532744ad3de309e807ade1b9b6eff9603305b1a/keras/preprocessing/image.py#L178-L199)\r\n<img src=\"https://user-images.githubusercontent.com/7046610/41537149-8d70fc6a-7342-11e8-9cd3-9ac5dd6ceef4.png\" width=50%>\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/6", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/6/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/6/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/6", "id": 328860266, "node_id": "MDU6SXNzdWUzMjg4NjAyNjY=", "number": 6, "title": "apply_transform changes shape", "user": {"login": "jnphilipp", "id": 1509101, "node_id": "MDQ6VXNlcjE1MDkxMDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1509101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnphilipp", "html_url": "https://github.com/jnphilipp", "followers_url": "https://api.github.com/users/jnphilipp/followers", "following_url": "https://api.github.com/users/jnphilipp/following{/other_user}", "gists_url": "https://api.github.com/users/jnphilipp/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnphilipp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnphilipp/subscriptions", "organizations_url": "https://api.github.com/users/jnphilipp/orgs", "repos_url": "https://api.github.com/users/jnphilipp/repos", "events_url": "https://api.github.com/users/jnphilipp/events{/privacy}", "received_events_url": "https://api.github.com/users/jnphilipp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-03T20:41:06Z", "updated_at": "2018-06-03T20:49:30Z", "closed_at": "2018-06-03T20:49:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```apply_transform``` changes the number of channels from input to output.\r\n\r\n```\r\nimage_datagen_args = {\r\n        'shear_range': 0.2,\r\n        'zoom_range': 0.2,\r\n        'width_shift_range': 0.2,\r\n        'height_shift_range': 0.2,\r\n        'rotation_range': 45,\r\n        'horizontal_flip': True,\r\n        'vertical_flip': True\r\n}\r\n\r\nimage_datagen = ImageDataGenerator(**image_datagen_args)\r\n\r\nx = np.zeros((32, 32, 1))\r\nparams = image_datagen.get_random_transform(x.shape)\r\nx = image_datagen.apply_transform(x, params)\r\nx.shape == (32, 32, 3)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/1", "repository_url": "https://api.github.com/repos/keras-team/keras-preprocessing", "labels_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/1/comments", "events_url": "https://api.github.com/repos/keras-team/keras-preprocessing/issues/1/events", "html_url": "https://github.com/keras-team/keras-preprocessing/issues/1", "id": 328157849, "node_id": "MDU6SXNzdWUzMjgxNTc4NDk=", "number": 1, "title": "Replacing `if variable not in dict` construction", "user": {"login": "lzfelix", "id": 8959839, "node_id": "MDQ6VXNlcjg5NTk4Mzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8959839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lzfelix", "html_url": "https://github.com/lzfelix", "followers_url": "https://api.github.com/users/lzfelix/followers", "following_url": "https://api.github.com/users/lzfelix/following{/other_user}", "gists_url": "https://api.github.com/users/lzfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/lzfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lzfelix/subscriptions", "organizations_url": "https://api.github.com/users/lzfelix/orgs", "repos_url": "https://api.github.com/users/lzfelix/repos", "events_url": "https://api.github.com/users/lzfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/lzfelix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-31T14:17:49Z", "updated_at": "2018-06-04T17:31:43Z", "closed_at": "2018-06-04T17:31:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello, firstly I would like to thank your for this new library which removes the burden from writing some repetitive code, specially regarding text, and let us focus on solving problems instead.\r\n\r\nWhile reading `text.py`, I spotted the following construction in two different places:\r\n```python\r\nif variable not in some_dict:\r\n    some_dict[variable] = 1\r\nelse:\r\n    some_dict[variable] += 1\r\n```\r\n\r\nIf `some_dict = defaultdict(int)`, then this code could be replaced by the one-liner `some_dict[variable] += 1`. Why not use it? According to the tests below it is even faster:\r\n\r\n```python\r\nIn [1]: from collections import defaultdict;\r\nIn [2]: simple_dict = dict()\r\nIn [3]: def fun(): z = defaultdict(int); z['shoe'] += 1;\r\n\r\n# >> Inserting a new element\r\nIn [4]: %timeit if 'shoe' not in simple_dict: simple_dict['shoe'] = 1\r\n# 56.6 ns \u00b1 0.0336 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\r\n\r\nIn [5]: %timeit fun\r\n# 36.1 ns \u00b1 0.00178 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\r\n\r\n# >> Fetching existing element\r\nIn [6]: %timeit simple_dict['shoe']\r\n# 54.3 ns \u00b1 0.012 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\r\n\r\nIn [7] ddict = defaultdict(int); ddict['shoe'] += 1\r\nIn [8]: %timeit ddict['shoe']\r\n# 58.3 ns \u00b1 0.0122 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\r\n\r\n# >> Updating existing element:\r\nIn [9]: def fun_2():\r\n     ...:     if 'shoe' not in simple_dict: simple_dict['shoe'] = 1\r\n     ...:     else: simple_dict['shoe'] += 1\r\n     ...:   \r\nIn [10]: %timeit fun_2()\r\n# 290 ns \u00b1 0.171 ns per loop (mean \u00b1 std. dev. of 7 runs, 1000000 loops each)\r\n\r\nIn [11]: z = defaultdict(int)\r\nIn [12]: %timeit z['shoe'] += 1\r\n# 122 ns \u00b1 0.0166 ns per loop (mean \u00b1 std. dev. of 7 runs, 10000000 loops each)\r\n```", "performed_via_github_app": null, "score": 1.0}]}