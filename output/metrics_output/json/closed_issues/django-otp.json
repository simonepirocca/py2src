{"total_count": 18, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/django-otp/django-otp/issues/49", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/49/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/49/events", "html_url": "https://github.com/django-otp/django-otp/issues/49", "id": 673604810, "node_id": "MDU6SXNzdWU2NzM2MDQ4MTA=", "number": 49, "title": "OTPAdminSite not compatible with Django 3.1's new nav_bar", "user": {"login": "MrCordeiro", "id": 20598571, "node_id": "MDQ6VXNlcjIwNTk4NTcx", "avatar_url": "https://avatars2.githubusercontent.com/u/20598571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrCordeiro", "html_url": "https://github.com/MrCordeiro", "followers_url": "https://api.github.com/users/MrCordeiro/followers", "following_url": "https://api.github.com/users/MrCordeiro/following{/other_user}", "gists_url": "https://api.github.com/users/MrCordeiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrCordeiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrCordeiro/subscriptions", "organizations_url": "https://api.github.com/users/MrCordeiro/orgs", "repos_url": "https://api.github.com/users/MrCordeiro/repos", "events_url": "https://api.github.com/users/MrCordeiro/events{/privacy}", "received_events_url": "https://api.github.com/users/MrCordeiro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-05T14:56:10Z", "updated_at": "2020-08-05T20:29:03Z", "closed_at": "2020-08-05T20:29:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "After Django 3.1's release I noticed the new admin nav_bar shows up in the Login screen when I override the django's admin.site.__class__ ith the `OTPAdminSite` class\r\n\r\n![admin_nav_bar](https://user-images.githubusercontent.com/20598571/89427503-36263900-d733-11ea-992c-df9fc05c8105.png)\r\n\r\nThis exposes one's model to anyone who accesses the admin.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/47", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/47/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/47/events", "html_url": "https://github.com/django-otp/django-otp/issues/47", "id": 664305488, "node_id": "MDU6SXNzdWU2NjQzMDU0ODg=", "number": 47, "title": "Incorrect number of digits generated", "user": {"login": "subodh-malgonde", "id": 5463437, "node_id": "MDQ6VXNlcjU0NjM0Mzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5463437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/subodh-malgonde", "html_url": "https://github.com/subodh-malgonde", "followers_url": "https://api.github.com/users/subodh-malgonde/followers", "following_url": "https://api.github.com/users/subodh-malgonde/following{/other_user}", "gists_url": "https://api.github.com/users/subodh-malgonde/gists{/gist_id}", "starred_url": "https://api.github.com/users/subodh-malgonde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/subodh-malgonde/subscriptions", "organizations_url": "https://api.github.com/users/subodh-malgonde/orgs", "repos_url": "https://api.github.com/users/subodh-malgonde/repos", "events_url": "https://api.github.com/users/subodh-malgonde/events{/privacy}", "received_events_url": "https://api.github.com/users/subodh-malgonde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-23T08:52:07Z", "updated_at": "2020-07-23T10:05:19Z", "closed_at": "2020-07-23T10:05:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "the `hotp` function sometimes returns incorrect number of digits. Below are some examples where this happens. I set the `digits` argument to **4**, but it returns a token with 3 digits.\r\n\r\n```\r\n>>> hotp(b'\\x07\\xd4\\x9ey\\xeeh\\x87\\xc3I\\xac\\xfa\\xa3VR9\\xe1\\xf1\\x96\\x02)', 54, digits=4)\r\n243\r\n\r\n>>> hotp(b'\\x07\\xd4\\x9ey\\xeeh\\x87\\xc3I\\xac\\xfa\\xa3VR9\\xe1\\xf1\\x96\\x02)', 56, digits=4)\r\n676\r\n\r\n>>> hotp(b'\\x07\\xd4\\x9ey\\xeeh\\x87\\xc3I\\xac\\xfa\\xa3VR9\\xe1\\xf1\\x96\\x02)', 71, digits=4)\r\n154\r\n\r\n>>> hotp(b'\\x07\\xd4\\x9ey\\xeeh\\x87\\xc3I\\xac\\xfa\\xa3VR9\\xe1\\xf1\\x96\\x02)', 86, digits=4)\r\n738\r\n```\r\n\r\nLet me know how to fix this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/45", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/45/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/45/events", "html_url": "https://github.com/django-otp/django-otp/issues/45", "id": 657803043, "node_id": "MDU6SXNzdWU2NTc4MDMwNDM=", "number": 45, "title": "Django-allauth Staff Able To Login To Admin Without OTP Token From The Frontend", "user": {"login": "9mido", "id": 60831272, "node_id": "MDQ6VXNlcjYwODMxMjcy", "avatar_url": "https://avatars2.githubusercontent.com/u/60831272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/9mido", "html_url": "https://github.com/9mido", "followers_url": "https://api.github.com/users/9mido/followers", "following_url": "https://api.github.com/users/9mido/following{/other_user}", "gists_url": "https://api.github.com/users/9mido/gists{/gist_id}", "starred_url": "https://api.github.com/users/9mido/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/9mido/subscriptions", "organizations_url": "https://api.github.com/users/9mido/orgs", "repos_url": "https://api.github.com/users/9mido/repos", "events_url": "https://api.github.com/users/9mido/events{/privacy}", "received_events_url": "https://api.github.com/users/9mido/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-16T02:56:23Z", "updated_at": "2020-07-24T20:44:29Z", "closed_at": "2020-07-24T20:44:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using django-allauth, a staff admin user is able to login normally from the frontend of my site. Then when that staff user tries to access the /admin/ login page, they are able to bypass the login form which asks for the OTP token, and are logged into admin automatically. \r\n\r\nThis is also the case without this package installed. But it would be nice to have an option like a setting to include a way to require admin staff users who are logged into the frontend to be forced to enter the OTP token on the /admin/ login backend page every time they try to access the /admin/ URL. \r\n\r\nAn idea would be to make it so staff must use the OTP token to log in no matter which login view they use. Or you could block access to the frontend for staff users.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/43", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/43/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/43/events", "html_url": "https://github.com/django-otp/django-otp/issues/43", "id": 652008611, "node_id": "MDU6SXNzdWU2NTIwMDg2MTE=", "number": 43, "title": "Having Trouble Validating Recaptcha v3", "user": {"login": "9mido", "id": 60831272, "node_id": "MDQ6VXNlcjYwODMxMjcy", "avatar_url": "https://avatars2.githubusercontent.com/u/60831272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/9mido", "html_url": "https://github.com/9mido", "followers_url": "https://api.github.com/users/9mido/followers", "following_url": "https://api.github.com/users/9mido/following{/other_user}", "gists_url": "https://api.github.com/users/9mido/gists{/gist_id}", "starred_url": "https://api.github.com/users/9mido/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/9mido/subscriptions", "organizations_url": "https://api.github.com/users/9mido/orgs", "repos_url": "https://api.github.com/users/9mido/repos", "events_url": "https://api.github.com/users/9mido/events{/privacy}", "received_events_url": "https://api.github.com/users/9mido/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-07T05:19:09Z", "updated_at": "2020-07-16T02:47:07Z", "closed_at": "2020-07-16T02:47:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to add recaptcha v3 to this package's admin login page which I was able to do (shown in stackoverflow link) but cannot figure out how to validate it (I can't print anything and therefore cannot test it). Using django-allauth also if that matters.\r\n\r\nhttps://stackoverflow.com/questions/62766688/django-2fa-otp-and-recaptcha-v3-on-the-admin-login-page\r\n\r\nFound a similar question for customizing views with no answer https://stackoverflow.com/questions/54534809/django-otp-implementation-using-custom-views\r\n\r\nFor some reason placing the recaptcha validation code in class LoginView(auth_views.LoginView) does not want to be printed. \r\n\r\nRecaptcha views.py validation template:\r\n\r\n```\r\n    form = Form()\r\n\r\n    if request.method == 'POST':\r\n        form = Form(data=request.POST)\r\n\r\n        if form.is_valid():\r\n\r\n\r\n            recaptcha_response = request.POST.get('recaptcha_token')\r\n            url = 'https://www.google.com/recaptcha/api/siteverify'\r\n            payload = {'secret': 'SECRET','response': recaptcha_response}\r\n            data = urllib.parse.urlencode(payload).encode()\r\n            req = urllib.request.Request(url, data=data)\r\n\r\n            response = urllib.request.urlopen(req)\r\n            result = json.loads(response.read().decode())\r\n\r\n            print('result:' + str(result))\r\n\r\n            print('recaptcha_response:' + str(recaptcha_response))\r\n\r\n            print('result_success:' + str(result['success']))\r\n\r\n            if (not result['success']) or (not result['action'] == '/admin/login/'):\r\n                messages.error(request, 'Invalid reCAPTCHA. Please try again.')\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/42", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/42/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/42/events", "html_url": "https://github.com/django-otp/django-otp/issues/42", "id": 651766929, "node_id": "MDU6SXNzdWU2NTE3NjY5Mjk=", "number": 42, "title": "Cannot see the admin login form field", "user": {"login": "9mido", "id": 60831272, "node_id": "MDQ6VXNlcjYwODMxMjcy", "avatar_url": "https://avatars2.githubusercontent.com/u/60831272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/9mido", "html_url": "https://github.com/9mido", "followers_url": "https://api.github.com/users/9mido/followers", "following_url": "https://api.github.com/users/9mido/following{/other_user}", "gists_url": "https://api.github.com/users/9mido/gists{/gist_id}", "starred_url": "https://api.github.com/users/9mido/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/9mido/subscriptions", "organizations_url": "https://api.github.com/users/9mido/orgs", "repos_url": "https://api.github.com/users/9mido/repos", "events_url": "https://api.github.com/users/9mido/events{/privacy}", "received_events_url": "https://api.github.com/users/9mido/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-06T19:24:30Z", "updated_at": "2020-07-06T21:53:57Z", "closed_at": "2020-07-06T21:53:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "@claudep  @psagers \r\n\r\nTried following this video tutorial exactly and I am unable to see the OTP form fields on the admin login page. It just shows the username and password fields only.\r\n\r\nhttps://www.youtube.com/watch?v=TGvK5z9R8Ik\r\n\r\nCode from the video is in the comments. Try sorting by new in youtube if the code comment does not show up at first.\r\n\r\nAs an admin user, I can login without a token even though in the admin backend OTP devices are enabled for that user.\r\n\r\nWhen overriding the login.html template in my project/templates/admin/login.html and pasting in this entire code:\r\nhttps://github.com/django-otp/django-otp/blob/master/src/django_otp/templates/otp/admin111/login.html\r\n\r\nIt only shows the label text \"OTP Token\" and the input tag itself is missing as if {{ form.otp_token }} and {{ form.otp_device }} does not work. \r\n\r\nDeleting the  {% if form.get_user %} if statement shows the \"OTP Device\" label but not the input tag.\r\n\r\nSeems like a lot more steps to override the login.html template compared to the steps the video. Did something change for the worst? \r\n\r\nMight be related to #26 which was closed.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/32", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/32/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/32/events", "html_url": "https://github.com/django-otp/django-otp/issues/32", "id": 597479109, "node_id": "MDU6SXNzdWU1OTc0NzkxMDk=", "number": 32, "title": "Feature request: Generic SideChannelDevice for token generation and management", "user": {"login": "arjan-s", "id": 10400299, "node_id": "MDQ6VXNlcjEwNDAwMjk5", "avatar_url": "https://avatars1.githubusercontent.com/u/10400299?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arjan-s", "html_url": "https://github.com/arjan-s", "followers_url": "https://api.github.com/users/arjan-s/followers", "following_url": "https://api.github.com/users/arjan-s/following{/other_user}", "gists_url": "https://api.github.com/users/arjan-s/gists{/gist_id}", "starred_url": "https://api.github.com/users/arjan-s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arjan-s/subscriptions", "organizations_url": "https://api.github.com/users/arjan-s/orgs", "repos_url": "https://api.github.com/users/arjan-s/repos", "events_url": "https://api.github.com/users/arjan-s/events{/privacy}", "received_events_url": "https://api.github.com/users/arjan-s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-09T18:42:28Z", "updated_at": "2020-05-06T07:10:10Z", "closed_at": "2020-04-16T17:43:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As pitched by @psagers in https://github.com/django-otp/django-otp/pull/4, this is a request for a generic abstract SideChannelDevice. This should implement the token generation, validation and expiry while leaving delivery to the concrete devices.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/26", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/26/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/26/events", "html_url": "https://github.com/django-otp/django-otp/issues/26", "id": 561971723, "node_id": "MDU6SXNzdWU1NjE5NzE3MjM=", "number": 26, "title": "Token field no longer rendered on login for anonymous users", "user": {"login": "vsemionov", "id": 1093619, "node_id": "MDQ6VXNlcjEwOTM2MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1093619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsemionov", "html_url": "https://github.com/vsemionov", "followers_url": "https://api.github.com/users/vsemionov/followers", "following_url": "https://api.github.com/users/vsemionov/following{/other_user}", "gists_url": "https://api.github.com/users/vsemionov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsemionov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsemionov/subscriptions", "organizations_url": "https://api.github.com/users/vsemionov/orgs", "repos_url": "https://api.github.com/users/vsemionov/repos", "events_url": "https://api.github.com/users/vsemionov/events{/privacy}", "received_events_url": "https://api.github.com/users/vsemionov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-02-08T05:07:26Z", "updated_at": "2020-02-08T16:24:04Z", "closed_at": "2020-02-08T16:20:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "After upgrading to `0.8.0` (from `0.7.5`), the admin login form no longer shows the token field if the user is currently anonymous. It is no longer possible to authenticate and verify in a single form post.\r\n\r\nThe problem is in the new 1.11 template. The rendering of the `otp_token` field has now been moved into the `{% if form.get_user %}` check. Please see the below diff snippet:\r\n```diff\r\n   </div>\r\n   {% if form.get_user %}\r\n   <div class=\"form-row\">\r\n-      <label for=\"id_otp_device\">{% trans 'OTP Device:' %}</label> {{ form.otp_device }}\r\n+    {{ form.otp_device.errors }}\r\n+    <label for=\"id_otp_device\">{% trans 'OTP Device:' %}</label> {{ form.otp_device }}\r\n   </div>\r\n-  {% endif %}\r\n   <div class=\"form-row\">\r\n-    {% if not form.this_is_the_login_form.errors %}{{ form.otp_token.errors }}{% endif %}\r\n+    {{ form.otp_token.errors }}\r\n     <label for=\"id_otp_token\" class=\"required\">{% trans 'OTP Token:' %}</label> {{ form.otp_token }}\r\n   </div>\r\n+  {% endif %}\r\n   {% url 'admin_password_reset' as password_reset_url %}\r\n   {% if password_reset_url %}\r\n   <div class=\"password-reset-link\">\r\n```\r\nNote that `{% endif %}` has been moved a few lines down. I believe only this slight change should be reverted.\r\n\r\nCheers and thanks for the great project!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/25", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/25/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/25/events", "html_url": "https://github.com/django-otp/django-otp/issues/25", "id": 561702746, "node_id": "MDU6SXNzdWU1NjE3MDI3NDY=", "number": 25, "title": "AttributeError: 'str' object has no attribute 'decode' after updating to v0.8.0", "user": {"login": "Lionqueen94", "id": 2974080, "node_id": "MDQ6VXNlcjI5NzQwODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2974080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lionqueen94", "html_url": "https://github.com/Lionqueen94", "followers_url": "https://api.github.com/users/Lionqueen94/followers", "following_url": "https://api.github.com/users/Lionqueen94/following{/other_user}", "gists_url": "https://api.github.com/users/Lionqueen94/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lionqueen94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lionqueen94/subscriptions", "organizations_url": "https://api.github.com/users/Lionqueen94/orgs", "repos_url": "https://api.github.com/users/Lionqueen94/repos", "events_url": "https://api.github.com/users/Lionqueen94/events{/privacy}", "received_events_url": "https://api.github.com/users/Lionqueen94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-07T15:21:43Z", "updated_at": "2020-02-07T17:09:17Z", "closed_at": "2020-02-07T17:09:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI just tried the new version 0.8.0 but get this error when running my tests (during test database creation):\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 22, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/core/management/__init__.py\", line 381, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/core/management/__init__.py\", line 375, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/core/management/commands/test.py\", line 23, in run_from_argv\r\n    super().run_from_argv(argv)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/core/management/base.py\", line 323, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/core/management/base.py\", line 364, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/core/management/commands/test.py\", line 53, in handle\r\n    failures = test_runner.run_tests(test_labels)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/test/runner.py\", line 629, in run_tests\r\n    old_config = self.setup_databases(aliases=databases)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/test/runner.py\", line 554, in setup_databases\r\n    self.parallel, **kwargs\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/test/utils.py\", line 174, in setup_databases\r\n    serialize=connection.settings_dict.get('TEST', {}).get('SERIALIZE', True),\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/db/backends/base/creation.py\", line 72, in create_test_db\r\n    run_syncdb=True,\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/core/management/__init__.py\", line 148, in call_command\r\n    return command.execute(*args, **defaults)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/core/management/base.py\", line 364, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/core/management/base.py\", line 83, in wrapped\r\n    res = handle_func(*args, **kwargs)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/core/management/commands/migrate.py\", line 234, in handle\r\n    fake_initial=fake_initial,\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/db/migrations/executor.py\", line 117, in migrate\r\n    state = self._migrate_all_forwards(state, plan, full_plan, fake=fake, fake_initial=fake_initial)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/db/migrations/executor.py\", line 147, in _migrate_all_forwards\r\n    state = self.apply_migration(state, migration, fake=fake, fake_initial=fake_initial)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/db/migrations/executor.py\", line 245, in apply_migration\r\n    state = migration.apply(state, schema_editor)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/db/migrations/migration.py\", line 124, in apply\r\n    operation.database_forwards(self.app_label, schema_editor, old_state, project_state)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/db/migrations/operations/fields.py\", line 249, in database_forwards\r\n    schema_editor.alter_field(from_model, from_field, to_field)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/db/backends/base/schema.py\", line 535, in alter_field\r\n    old_db_params, new_db_params, strict)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/db/backends/postgresql/schema.py\", line 124, in _alter_field\r\n    new_db_params, strict,\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/db/backends/base/schema.py\", line 649, in _alter_field\r\n    new_default = self.effective_default(new_field)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/db/backends/base/schema.py\", line 233, in effective_default\r\n    return field.get_db_prep_save(self._effective_default(field), self.connection)\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/db/backends/base/schema.py\", line 212, in _effective_default\r\n    default = field.get_default()\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/django/db/models/fields/__init__.py\", line 801, in get_default\r\n    return self._get_default()\r\n  File \"/home/ellen/.virtualenvs/sfe/lib/python3.6/site-packages/two_factor/models.py\", line 57, in random_hex_str\r\n    return random_hex().decode('utf-8')\r\nAttributeError: 'str' object has no attribute 'decode'\r\n```\r\n\r\nIt only happens when I do this update and reverting back to 0.7.5 runs my tests normally.\r\nDo you have any idea what the issue is? I'm running Python 3.6 and Django 2.2.10 btw.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/24", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/24/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/24/events", "html_url": "https://github.com/django-otp/django-otp/issues/24", "id": 561521219, "node_id": "MDU6SXNzdWU1NjE1MjEyMTk=", "number": 24, "title": "Version 0.8.0 on pypi breaks build", "user": {"login": "normoes", "id": 13462921, "node_id": "MDQ6VXNlcjEzNDYyOTIx", "avatar_url": "https://avatars3.githubusercontent.com/u/13462921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/normoes", "html_url": "https://github.com/normoes", "followers_url": "https://api.github.com/users/normoes/followers", "following_url": "https://api.github.com/users/normoes/following{/other_user}", "gists_url": "https://api.github.com/users/normoes/gists{/gist_id}", "starred_url": "https://api.github.com/users/normoes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/normoes/subscriptions", "organizations_url": "https://api.github.com/users/normoes/orgs", "repos_url": "https://api.github.com/users/normoes/repos", "events_url": "https://api.github.com/users/normoes/events{/privacy}", "received_events_url": "https://api.github.com/users/normoes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-07T09:33:09Z", "updated_at": "2020-02-07T10:06:24Z", "closed_at": "2020-02-07T10:06:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a new version (`0.8.0`) on pypi. \r\nThis version is not mentioned in the change log on read the docs, nor is it published as a release here on github.\r\n\r\nI use `django-two-factor-auth==1.10.0` (with Django `2.2.10` and python `3.7.6`), which used to install `django-otp==0.7.5` As of yesterday, since there are no further constraints, it installed `django-otp==0.8.0`.\r\n\r\nAnd since today/yesterday my builds break, because:\r\n```\r\nFile \"/home/service/.local/lib/python3.7/site-packages/django/db/models/fields/__init__.py\", line 801, in get_default\r\n     return self._get_default()\r\n   File \"/home/service/.local/lib/python3.7/site-packages/two_factor/models.py\", line 57, in random_hex_str\r\n     return random_hex().decode('utf-8')\r\n AttributeError: 'str' object has no attribute 'decode'\r\n```\r\n\r\nAfter forcing `django-otp==0.7.5` it works again.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/22", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/22/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/22/events", "html_url": "https://github.com/django-otp/django-otp/issues/22", "id": 557387846, "node_id": "MDU6SXNzdWU1NTczODc4NDY=", "number": 22, "title": "How to set the site name in the QR instead of \"example.com\"", "user": {"login": "stitch", "id": 333846, "node_id": "MDQ6VXNlcjMzMzg0Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/333846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stitch", "html_url": "https://github.com/stitch", "followers_url": "https://api.github.com/users/stitch/followers", "following_url": "https://api.github.com/users/stitch/following{/other_user}", "gists_url": "https://api.github.com/users/stitch/gists{/gist_id}", "starred_url": "https://api.github.com/users/stitch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stitch/subscriptions", "organizations_url": "https://api.github.com/users/stitch/orgs", "repos_url": "https://api.github.com/users/stitch/repos", "events_url": "https://api.github.com/users/stitch/events{/privacy}", "received_events_url": "https://api.github.com/users/stitch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-30T10:06:42Z", "updated_at": "2020-01-30T10:13:21Z", "closed_at": "2020-01-30T10:13:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI'm looking for a way to set the name of the site/product into something different than \"example.com\". I tried changing the \"site name\" and url in django sites and restarted django to no avail. \r\n\r\nI'm using an iphone using the google authenticator app. The authetnicator app says that i've scanned a QR on example.com. \r\n\r\nI found the OTP_HOTP_ISSUER is not of relevance. I'd expect the site to be used, or that it at least configurable somewhere.\r\n\r\nHow to configure this?\r\n\r\nRegards,\r\nElger\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/15", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/15/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/15/events", "html_url": "https://github.com/django-otp/django-otp/issues/15", "id": 542850037, "node_id": "MDU6SXNzdWU1NDI4NTAwMzc=", "number": 15, "title": "template error on Django 3.0.x", "user": {"login": "KushGoyal", "id": 4709156, "node_id": "MDQ6VXNlcjQ3MDkxNTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4709156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KushGoyal", "html_url": "https://github.com/KushGoyal", "followers_url": "https://api.github.com/users/KushGoyal/followers", "following_url": "https://api.github.com/users/KushGoyal/following{/other_user}", "gists_url": "https://api.github.com/users/KushGoyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/KushGoyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KushGoyal/subscriptions", "organizations_url": "https://api.github.com/users/KushGoyal/orgs", "repos_url": "https://api.github.com/users/KushGoyal/repos", "events_url": "https://api.github.com/users/KushGoyal/events{/privacy}", "received_events_url": "https://api.github.com/users/KushGoyal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-27T11:52:16Z", "updated_at": "2019-12-27T23:13:11Z", "closed_at": "2019-12-27T23:13:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using `admin.site.__class__ = OTPAdminSite` to set the default admin site class.\r\n\r\nBelow is the error when using with Django 3.0.x:\r\n\r\n> 'admin_static' is not a registered tag library. Must be one of: admin_list admin_modify admin_urls cache i18n l10n log static tz\r\n\r\n```html\r\n\r\n{% extends \"admin/base_site.html\" %}\r\n{% load i18n admin_static %}\u00a0\r\n{% block extrastyle %}\r\n{{ block.super }}\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"{% static \"admin/css/login.css\" %}\" />\r\n{{ form.media }}\r\n\u00a0\r\n<style type=\"text/css\">\r\ninput#id_otp_token,\r\nselect#id_otp_device\r\n{\r\n\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/12", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/12/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/12/events", "html_url": "https://github.com/django-otp/django-otp/issues/12", "id": 527745151, "node_id": "MDU6SXNzdWU1Mjc3NDUxNTE=", "number": 12, "title": "Missing tag for 0.7.4", "user": {"login": "fladi", "id": 234220, "node_id": "MDQ6VXNlcjIzNDIyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/234220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fladi", "html_url": "https://github.com/fladi", "followers_url": "https://api.github.com/users/fladi/followers", "following_url": "https://api.github.com/users/fladi/following{/other_user}", "gists_url": "https://api.github.com/users/fladi/gists{/gist_id}", "starred_url": "https://api.github.com/users/fladi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fladi/subscriptions", "organizations_url": "https://api.github.com/users/fladi/orgs", "repos_url": "https://api.github.com/users/fladi/repos", "events_url": "https://api.github.com/users/fladi/events{/privacy}", "received_events_url": "https://api.github.com/users/fladi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-24T19:33:28Z", "updated_at": "2019-11-24T19:44:30Z", "closed_at": "2019-11-24T19:39:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is no tag for 0.7.4 but a source package with this version is available on pypi.org.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/11", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/11/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/11/events", "html_url": "https://github.com/django-otp/django-otp/issues/11", "id": 524333810, "node_id": "MDU6SXNzdWU1MjQzMzM4MTA=", "number": 11, "title": "No option to disable logging of static tokens", "user": {"login": "sarahfmurray", "id": 3646816, "node_id": "MDQ6VXNlcjM2NDY4MTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3646816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sarahfmurray", "html_url": "https://github.com/sarahfmurray", "followers_url": "https://api.github.com/users/sarahfmurray/followers", "following_url": "https://api.github.com/users/sarahfmurray/following{/other_user}", "gists_url": "https://api.github.com/users/sarahfmurray/gists{/gist_id}", "starred_url": "https://api.github.com/users/sarahfmurray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sarahfmurray/subscriptions", "organizations_url": "https://api.github.com/users/sarahfmurray/orgs", "repos_url": "https://api.github.com/users/sarahfmurray/repos", "events_url": "https://api.github.com/users/sarahfmurray/events{/privacy}", "received_events_url": "https://api.github.com/users/sarahfmurray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-18T12:23:24Z", "updated_at": "2019-11-18T13:14:44Z", "closed_at": "2019-11-18T13:14:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the 'addstatictoken' management command, the text of the token is logged using self.stdout.write. Is there a way to optionally disable this logging if I don't want it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/10", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/10/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/10/events", "html_url": "https://github.com/django-otp/django-otp/issues/10", "id": 523886092, "node_id": "MDU6SXNzdWU1MjM4ODYwOTI=", "number": 10, "title": "django_otp/templates/otp/admin14/login.html: 'future' is not a registered tag library", "user": {"login": "narun4sk", "id": 12384868, "node_id": "MDQ6VXNlcjEyMzg0ODY4", "avatar_url": "https://avatars0.githubusercontent.com/u/12384868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/narun4sk", "html_url": "https://github.com/narun4sk", "followers_url": "https://api.github.com/users/narun4sk/followers", "following_url": "https://api.github.com/users/narun4sk/following{/other_user}", "gists_url": "https://api.github.com/users/narun4sk/gists{/gist_id}", "starred_url": "https://api.github.com/users/narun4sk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/narun4sk/subscriptions", "organizations_url": "https://api.github.com/users/narun4sk/orgs", "repos_url": "https://api.github.com/users/narun4sk/repos", "events_url": "https://api.github.com/users/narun4sk/events{/privacy}", "received_events_url": "https://api.github.com/users/narun4sk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-16T19:31:02Z", "updated_at": "2019-11-21T21:58:54Z", "closed_at": "2019-11-21T21:58:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Lately getting the following error:\r\n\r\n```\r\nInvalid template /usr/local/lib/python3.7/site-packages/django_otp/templates/otp/admin14/login.html: 'future' is not a registered tag library. Must be one of:\r\nadmin_list\r\nadmin_modify\r\nadmin_static\r\nadmin_urls\r\n... more suggestions ...\r\n```\r\nAny advice please?\r\n```\r\npip freeze | grep -e Django -e django-otp\r\nDjango==2.2.7\r\ndjango-otp==0.7.3\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/9", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/9/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/9/events", "html_url": "https://github.com/django-otp/django-otp/issues/9", "id": 518188341, "node_id": "MDU6SXNzdWU1MTgxODgzNDE=", "number": 9, "title": "Not receiving  same OTP in a time step/interval .", "user": {"login": "emilgeorgejames1", "id": 13359641, "node_id": "MDQ6VXNlcjEzMzU5NjQx", "avatar_url": "https://avatars1.githubusercontent.com/u/13359641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilgeorgejames1", "html_url": "https://github.com/emilgeorgejames1", "followers_url": "https://api.github.com/users/emilgeorgejames1/followers", "following_url": "https://api.github.com/users/emilgeorgejames1/following{/other_user}", "gists_url": "https://api.github.com/users/emilgeorgejames1/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilgeorgejames1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilgeorgejames1/subscriptions", "organizations_url": "https://api.github.com/users/emilgeorgejames1/orgs", "repos_url": "https://api.github.com/users/emilgeorgejames1/repos", "events_url": "https://api.github.com/users/emilgeorgejames1/events{/privacy}", "received_events_url": "https://api.github.com/users/emilgeorgejames1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-06T01:58:09Z", "updated_at": "2019-11-21T22:02:15Z", "closed_at": "2019-11-21T22:02:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have set time step as 300sec and TOTP digit as 6. I'm not receiving  same OTP in a time step/interval, means receiving different OTP in a given time step. ie, At 2019-11-03 19:15:00, i will get one code; 19:13:00 , i will get another new code.\r\n\r\nthis is the code:\r\n\r\n```\r\nimport datetime\r\nimport time\r\n\r\nfrom django_otp.oath import TOTP\r\nfrom django_otp.util import random_hex\r\n\r\n\r\nclass TOTPVerification:\r\n\r\n    def __init__(self):\r\n        # secret key that will be used to generate a token,\r\n        # User can provide a custom value to the key.\r\n        self.key = random_hex(20)\r\n        # counter with which last token was verified.\r\n        # Next token must be generated at a higher counter value.\r\n        self.last_verified_counter = -1\r\n        # this value will return True, if a token has been successfully\r\n        # verified.\r\n        self.verified = False\r\n        # number of digits in a token. Default is 6\r\n        self.number_of_digits = 6\r\n        # validity period of a token. Default is 30 second.\r\n        self.token_validity_period = 300\r\n\r\n    def totp_obj(self):\r\n        # create a TOTP object\r\n        totp = TOTP(key=self.key,\r\n                    step=self.token_validity_period,\r\n                    digits=self.number_of_digits)\r\n        # the current time will be used to generate a counter\r\n        totp.time = time.time()\r\n        return totp\r\n\r\n    def generate_token(self):\r\n        # get the TOTP object and use that to create token\r\n        totp = self.totp_obj()\r\n        # token can be obtained with `totp.token()`\r\n        token = str(totp.token()).zfill(6)\r\n        return token\r\n\r\n    def verify_token(self, token, tolerance=0):\r\n        try:\r\n            # convert the input token to integer\r\n            token = int(token)\r\n        except ValueError:\r\n            # return False, if token could not be converted to an integer\r\n            self.verified = False\r\n        else:\r\n            totp = self.totp_obj()\r\n            # check if the current counter value is higher than the value of\r\n            # last verified counter and check if entered token is correct by\r\n            # calling totp.verify_token()\r\n            if ((totp.t() > self.last_verified_counter) and\r\n                    (totp.verify(token, tolerance=tolerance))):\r\n                # if the condition is true, set the last verified counter value\r\n                # to current counter value, and return True\r\n                self.last_verified_counter = totp.t()\r\n                self.verified = True\r\n            else:\r\n                # if the token entered was invalid or if the counter value\r\n                # was less than last verified counter, then return False\r\n                self.verified = False\r\n        return self.verified\r\n\r\n\r\nif __name__ == '__main__':\r\n    # verify token the normal way\r\n    phone1 = TOTPVerification()\r\n    start_time = time.time()\r\n    expiry_time = time.time() + phone1.token_validity_period\r\n    i = datetime.timedelta(seconds=start_time)\r\n    j = datetime.timedelta(seconds=expiry_time)\r\n    print('Start time:', start_time, str(i))\r\n    print('Expiry time:', expiry_time, str(j))\r\n    while time.time() < expiry_time:\r\n        k = datetime.timedelta(seconds=time.time())\r\n        generated_token = phone1.generate_token()\r\n        print(\"Generated token is: {} , current time is :{}\".format(generated_token, k))\r\n        time.sleep(35)\r\n\r\n```\r\n\r\nResult:\r\n\r\n> ('Start time:', 1573004969.106607, '18206 days, 1:49:29.106607')\r\n> ('Expiry time:', 1573005269.106608, '18206 days, 1:54:29.106608')\r\n> Generated token is: 400250 , current time is :18206 days, 1:49:29.107410\r\n> Generated token is: 219130 , current time is :18206 days, 1:50:04.109554\r\n> Generated token is: 219130 , current time is :18206 days, 1:50:39.115040\r\n> Generated token is: 219130 , current time is :18206 days, 1:51:14.118708\r\n> Generated token is: 219130 , current time is :18206 days, 1:51:49.124145\r\n> Generated token is: 219130 , current time is :18206 days, 1:52:24.124820\r\n> Generated token is: 219130 , current time is :18206 days, 1:52:59.126073\r\n> Generated token is: 219130 , current time is :18206 days, 1:53:34.126536\r\n> Generated token is: 219130 , current time is :18206 days, 1:54:09.131970\r\n\r\nWhere i'm doing wrong , did i miss some thing..?  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/8", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/8/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/8/events", "html_url": "https://github.com/django-otp/django-otp/issues/8", "id": 516828027, "node_id": "MDU6SXNzdWU1MTY4MjgwMjc=", "number": 8, "title": "OTP Expiring Early", "user": {"login": "emilgeorgejames1", "id": 13359641, "node_id": "MDQ6VXNlcjEzMzU5NjQx", "avatar_url": "https://avatars1.githubusercontent.com/u/13359641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilgeorgejames1", "html_url": "https://github.com/emilgeorgejames1", "followers_url": "https://api.github.com/users/emilgeorgejames1/followers", "following_url": "https://api.github.com/users/emilgeorgejames1/following{/other_user}", "gists_url": "https://api.github.com/users/emilgeorgejames1/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilgeorgejames1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilgeorgejames1/subscriptions", "organizations_url": "https://api.github.com/users/emilgeorgejames1/orgs", "repos_url": "https://api.github.com/users/emilgeorgejames1/repos", "events_url": "https://api.github.com/users/emilgeorgejames1/events{/privacy}", "received_events_url": "https://api.github.com/users/emilgeorgejames1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-03T13:30:33Z", "updated_at": "2019-11-05T12:06:28Z", "closed_at": "2019-11-03T19:26:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "for some reason OTP generated is expiring early or expiring before expiring time finishes.it was happening on first time when i create token with the device object.\r\n\r\nIssue : i have set expiring time as 300sec and TOTP digit as 4. when a token is generates first time with a device , token is expiring early or  expiring before the expiring time finishes. This issue is happening on first time when i create token with the device.\r\n\r\nThis is my model :\r\n\r\n```\r\nclass VerificationDevice(Device):\r\n    otp = models.CharField(max_length=16)\r\n    secret_key = models.CharField(\r\n        max_length=40,\r\n        default=default_key,\r\n        validators=[hex_validator],\r\n        help_text=\"Hex-encoded secret key to generate totp tokens.\",\r\n        unique=True,\r\n    )\r\n    last_verified_counter = models.BigIntegerField(\r\n        default=-1,\r\n        help_text=(\"The counter value of the latest verified token.\"\r\n                   \"The next token must be at a higher counter value.\"\r\n                   \"It makes sure a token is used only once.\")\r\n    )\r\n    verified = models.BooleanField(default=False)\r\n\r\n    step = settings.TOTP_TOKEN_VALIDITY\r\n    digits = settings.TOTP_DIGITS\r\n\r\n    class Meta(Device.Meta):\r\n        verbose_name = \"Verification Device\"\r\n\r\n    @property\r\n    def bin_key(self):\r\n        return unhexlify(self.secret_key.encode())\r\n\r\n    def totp_obj(self):\r\n        totp = TOTP(key=self.bin_key, step=self.step, digits=self.digits)\r\n        totp.time = time.time()\r\n        return totp\r\n\r\n    def generate_challenge(self):\r\n        totp = self.totp_obj()\r\n        token = str(totp.token()).zfill(self.digits)\r\n        return token\r\n\r\n      def verify_token(self, token, tolerance=0):\r\n        verify_allowed = self.verify_is_allowed()\r\n        if not verify_allowed:\r\n            return False\r\n\r\n        totp = self.totp_obj()\r\n        if ((totp.t() > self.last_verified_counter) and\r\n                (totp.verify(token, tolerance=tolerance))):\r\n            self.last_verified_counter = totp.t()\r\n            self.verified = True\r\n            self.save()\r\n            return True\r\n        else:\r\n            return False\r\n```\r\nView.py\r\n\r\n```\r\nclass VerifyOTP(APIView):\r\n    permission_classes = (AllowAny,)\r\n    serializer_class = VerifyOTPSerializer\r\n\r\n    def post(self, request):\r\n        serializer = VerifyOTPSerializer(data=request.data, context={'request': request})\r\n        if serializer.is_valid():\r\n            user_id = self.request.session.get('moblie_verify_id', None)\r\n            try:\r\n                device = VerificationDevice.objects.get(\r\n                    user_id=user_id, label='phone_verify')\r\n            except:\r\n                content = {'status': status.HTTP_404_NOT_FOUND, 'message': 'Object not found',\r\n                           'data': serializer.data}\r\n                return Response(content, status=status.HTTP_404_NOT_FOUND)\r\n            user = device.user\r\n            otp = serializer.validated_data['otp']\r\n            with transaction.atomic():\r\n                resp = device.verify_token(otp)\r\n                if resp is True:\r\n                    if user.mobile_number != device.unverified_phone:\r\n                        user.mobile_number = device.unverified_phone\r\n                    user.mobile_number_verified = True\r\n                    user.is_active = True\r\n                    user.is_mobile_number_verified = True\r\n                    user.save()\r\n                    device.delete()\r\n                    self.request.session.pop('mobile_verify_id', None)\r\n                    content = {'status': status.HTTP_200_OK, 'message': 'OTP Verified Successfully',\r\n                               'data': serializer.data}\r\n                    return Response(content, status=status.HTTP_200_OK)\r\n                elif device.verify_token(token=otp, tolerance=5):\r\n                    content = {'status': status.HTTP_406_NOT_ACCEPTABLE, 'message': 'OTP Expired'}\r\n                    return Response(content, status=status.HTTP_406_NOT_ACCEPTABLE)\r\n                else:\r\n                    content = {'status': status.HTTP_406_NOT_ACCEPTABLE, 'message': 'Invalid OTP. Enter a valid OTP'}\r\n                    return Response(content)\r\n        content = {'status': status.HTTP_400_BAD_REQUEST, 'message': serializer.errors}\r\n        return Response(content, status=status.HTTP_200_OK)\r\n```\r\n\r\nsettings.py\r\n```\r\nTOTP_TOKEN_VALIDITY = 300\r\nTOTP_DIGITS = 4\r\n```\r\n\r\nWhere i'm doing wrong , did i miss some thing..?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/5", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/5/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/5/events", "html_url": "https://github.com/django-otp/django-otp/issues/5", "id": 502345106, "node_id": "MDU6SXNzdWU1MDIzNDUxMDY=", "number": 5, "title": "Documentation link", "user": {"login": "akshaybabloo", "id": 7360286, "node_id": "MDQ6VXNlcjczNjAyODY=", "avatar_url": "https://avatars1.githubusercontent.com/u/7360286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akshaybabloo", "html_url": "https://github.com/akshaybabloo", "followers_url": "https://api.github.com/users/akshaybabloo/followers", "following_url": "https://api.github.com/users/akshaybabloo/following{/other_user}", "gists_url": "https://api.github.com/users/akshaybabloo/gists{/gist_id}", "starred_url": "https://api.github.com/users/akshaybabloo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akshaybabloo/subscriptions", "organizations_url": "https://api.github.com/users/akshaybabloo/orgs", "repos_url": "https://api.github.com/users/akshaybabloo/repos", "events_url": "https://api.github.com/users/akshaybabloo/events{/privacy}", "received_events_url": "https://api.github.com/users/akshaybabloo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-03T23:19:18Z", "updated_at": "2019-10-04T03:46:52Z", "closed_at": "2019-10-04T03:46:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could add the documentation link, please?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-otp/django-otp/issues/2", "repository_url": "https://api.github.com/repos/django-otp/django-otp", "labels_url": "https://api.github.com/repos/django-otp/django-otp/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/django-otp/django-otp/issues/2/comments", "events_url": "https://api.github.com/repos/django-otp/django-otp/issues/2/events", "html_url": "https://github.com/django-otp/django-otp/issues/2", "id": 494574143, "node_id": "MDU6SXNzdWU0OTQ1NzQxNDM=", "number": 2, "title": "ISE during verification in LoginView", "user": {"login": "vsemionov", "id": 1093619, "node_id": "MDQ6VXNlcjEwOTM2MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1093619?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsemionov", "html_url": "https://github.com/vsemionov", "followers_url": "https://api.github.com/users/vsemionov/followers", "following_url": "https://api.github.com/users/vsemionov/following{/other_user}", "gists_url": "https://api.github.com/users/vsemionov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsemionov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsemionov/subscriptions", "organizations_url": "https://api.github.com/users/vsemionov/orgs", "repos_url": "https://api.github.com/users/vsemionov/repos", "events_url": "https://api.github.com/users/vsemionov/events{/privacy}", "received_events_url": "https://api.github.com/users/vsemionov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-17T11:48:38Z", "updated_at": "2019-09-17T17:01:07Z", "closed_at": "2019-09-17T16:56:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nMany thanks for this wonderful project!\r\n\r\nI found the following issue with `LoginView`. When verifying a user that is already authenticated, the `LoginView` uses `OTPTokenForm`. Unlike `OTPAuthentication`, `OTPTokenForm` does not call `authenticate()` when validating the form data. The `authenticate()` function populates the user with a `backend` attribute. Therefore, during verification of authenticated users, the user object is left without this attribute. If the token is valid, the user is logged in by calling `login()`. This function expects the `backend` attribute. If it does not exist, it uses the backend, configured in settings. But if more than one backend is configured, it throws an error. Therefore, verifying authenticated users, with multiple configured auth backends, is not supported out of the box. Having more than one backend is not uncommon or exotic. In my case, I have two backends - one from `django-axes` and one from `django-allauth`.\r\n\r\n`django-otp` version: 0.7.1\r\n\r\nThe following stacktrace is produced:\r\n```\r\nInternal Server Error: /backend/login/\r\nTraceback (most recent call last):\r\n........\r\n  File \"/Users/victor/anaconda3/envs/myapp/lib/python3.7/site-packages/django/contrib/auth/views.py\", line 90, in form_valid\r\n    auth_login(self.request, form.get_user())\r\n  File \"/Users/victor/anaconda3/envs/myapp/lib/python3.7/site-packages/django/contrib/auth/__init__.py\", line 118, in login\r\n    'You have multiple authentication backends configured and '\r\nValueError: You have multiple authentication backends configured and therefore must provide the `backend` argument or set the `backend` attribute on the user.\r\n```\r\n\r\nI've worked around this problem with the following subclass:\r\n```python\r\nfrom django_otp.views import LoginView\r\nfrom django.contrib.auth import BACKEND_SESSION_KEY\r\n\r\nclass CustomLoginView(LoginView):\r\n    def form_valid(self, form):\r\n        user = form.get_user()\r\n        if not hasattr(user, 'backend'):\r\n            user.backend = self.request.session[BACKEND_SESSION_KEY]\r\n        return super().form_valid(form)\r\n```\r\n\r\nI hope this helps. Please let me know if you need more information, or if you'd like a pull request.\r\n\r\nBest regards,\r\nVictor\r\n", "performed_via_github_app": null, "score": 1.0}]}