{"total_count": 365, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/545", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/545/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/545/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/545/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/545", "id": 678518880, "node_id": "MDU6SXNzdWU2Nzg1MTg4ODA=", "number": 545, "title": "Truncating a file with os.truncate does not change its contents", "user": {"login": "ollien", "id": 977151, "node_id": "MDQ6VXNlcjk3NzE1MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/977151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollien", "html_url": "https://github.com/ollien", "followers_url": "https://api.github.com/users/ollien/followers", "following_url": "https://api.github.com/users/ollien/following{/other_user}", "gists_url": "https://api.github.com/users/ollien/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollien/subscriptions", "organizations_url": "https://api.github.com/users/ollien/orgs", "repos_url": "https://api.github.com/users/ollien/repos", "events_url": "https://api.github.com/users/ollien/events{/privacy}", "received_events_url": "https://api.github.com/users/ollien/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-13T15:15:46Z", "updated_at": "2020-08-14T19:45:53Z", "closed_at": "2020-08-14T19:45:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen calling `os.truncate` on a file that has been created in the fakefs, the contents are left unchanged\r\n\r\n**How To Reproduce**\r\n```py\r\nimport os\r\nfrom pyfakefs.fake_filesystem_unittest import Patcher\r\n\r\n\r\npatcher = Patcher()\r\npatcher.setUp()\r\n\r\nPATH = \"/some/path/to/test\"\r\nos.makedirs(os.path.dirname(PATH))\r\n\r\nwith open(PATH, \"w\") as f:\r\n    f.write(\"Hello\")\r\n\r\nos.truncate(PATH, 0)\r\nwith open(PATH, \"r\") as f:\r\n    print(f.read())\r\n\r\npatcher.tearDown()\r\n```\r\nThis should print out an empty string, but instead, it prints `Hello`. Removing `pyfakefs`, the correct behavior is observed. I separately observed this bug with the pytest fixture, as well.\r\n\r\n**Your enviroment**\r\n```\r\nDarwin-19.6.0-x86_64-i386-64bit\r\nPython 3.6.5 (default, May 18 2020, 15:15:10) \r\n[GCC 4.2.1 Compatible Apple LLVM 11.0.3 (clang-1103.0.32.59)]\r\npyfakefs 4.1.0\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/544", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/544/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/544/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/544", "id": 675587686, "node_id": "MDU6SXNzdWU2NzU1ODc2ODY=", "number": 544, "title": "Need guidance on using pkg_resources / importlib", "user": {"login": "kuwv", "id": 6035515, "node_id": "MDQ6VXNlcjYwMzU1MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6035515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuwv", "html_url": "https://github.com/kuwv", "followers_url": "https://api.github.com/users/kuwv/followers", "following_url": "https://api.github.com/users/kuwv/following{/other_user}", "gists_url": "https://api.github.com/users/kuwv/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuwv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuwv/subscriptions", "organizations_url": "https://api.github.com/users/kuwv/orgs", "repos_url": "https://api.github.com/users/kuwv/repos", "events_url": "https://api.github.com/users/kuwv/events{/privacy}", "received_events_url": "https://api.github.com/users/kuwv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786278, "node_id": "MDU6TGFiZWwxODc3ODYyNzg=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-08T20:59:55Z", "updated_at": "2020-08-09T20:06:35Z", "closed_at": "2020-08-09T20:05:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, I am attempting dynamically load modules from a directory path. A similar approach is pluginbase. This involves using pkg_resources and importlib.\r\n\r\nPlease provide assistance getting module loading working with pyfakefs.\r\n\r\nUnfortunately, the only available options are to either choose dynamic modules or pyfakefs.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/543", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/543/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/543/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/543", "id": 674785398, "node_id": "MDU6SXNzdWU2NzQ3ODUzOTg=", "number": 543, "title": "No PermissionError gets raised on deleting a read-only file", "user": {"login": "g3n35i5", "id": 17593457, "node_id": "MDQ6VXNlcjE3NTkzNDU3", "avatar_url": "https://avatars0.githubusercontent.com/u/17593457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/g3n35i5", "html_url": "https://github.com/g3n35i5", "followers_url": "https://api.github.com/users/g3n35i5/followers", "following_url": "https://api.github.com/users/g3n35i5/following{/other_user}", "gists_url": "https://api.github.com/users/g3n35i5/gists{/gist_id}", "starred_url": "https://api.github.com/users/g3n35i5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/g3n35i5/subscriptions", "organizations_url": "https://api.github.com/users/g3n35i5/orgs", "repos_url": "https://api.github.com/users/g3n35i5/repos", "events_url": "https://api.github.com/users/g3n35i5/events{/privacy}", "received_events_url": "https://api.github.com/users/g3n35i5/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2158989082, "node_id": "MDU6TGFiZWwyMTU4OTg5MDgy", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/not-a-bug", "name": "not-a-bug", "color": "19a8a5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-07T06:11:37Z", "updated_at": "2020-08-20T18:44:33Z", "closed_at": "2020-08-13T15:43:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI'm trying to modify a file in a unittest so that it is in read-only mode and therefore non-deletable unless the user has root privileges.\r\n\r\n**How To Reproduce**\r\nRun the following unittest class:\r\n\r\n```python\r\n#!/usr/bin/env python3\r\n\r\nimport os\r\nimport stat\r\n\r\nfrom pyfakefs.fake_filesystem_unittest import TestCase\r\n\r\n\r\nclass TestCaseExample(TestCase):\r\n    def setUp(self):\r\n        self.setUpPyfakefs()\r\n\r\n    def test_delete_file_insufficient_permissions(self):\r\n        file_path = \"/tmp/file.txt\"\r\n        file_content = \"Doesn't really matter but hey :)\"\r\n\r\n        self.fs.create_file(file_path, contents=file_content)\r\n        self.assertTrue(os.path.exists(file_path))\r\n\r\n        # Make sure we're not admin\r\n        self.assertFalse(os.getuid() == 0)\r\n\r\n        # Make sure that the default mask is -rw-rw-rw\r\n        default_mask = 0o666\r\n        initial_mask = stat.S_IMODE(os.lstat(file_path).st_mode)\r\n        self.assertEqual(default_mask, initial_mask)\r\n\r\n        # Make sure that the new mask is -r--r--r--\r\n        read_only_mask = 0o444\r\n        os.chmod(file_path, read_only_mask)\r\n        new_mask = stat.S_IMODE(os.lstat(file_path).st_mode)\r\n        self.assertEqual(read_only_mask, new_mask)\r\n\r\n        # Deleting the file should not be possible\r\n        with self.assertRaises(PermissionError):\r\n            os.remove(file_path)\r\n\r\n````\r\n**Expected result:** The test runs without errors, because the file is in read-only mode and the user is not privileged and therefore must not delete the file.\r\n\r\n**Actual result:** The test fails\r\n\r\n```log\r\nRan 1 test in 0.051s\r\n\r\nFAILED (failures=1)\r\n\r\nFailure\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/unittest/case.py\", line 60, in testPartExecutor\r\n    yield\r\n  File \"/usr/lib/python3.8/unittest/case.py\", line 676, in run\r\n    self._callTestMethod(testMethod)\r\n  File \"/usr/lib/python3.8/unittest/case.py\", line 633, in _callTestMethod\r\n    method()\r\n  File \"/tmp/pyfakefs-permissions/main.py\", line 36, in test_delete_file_insufficient_permissions\r\n    os.remove(file_path)\r\n  File \"/usr/lib/python3.8/unittest/case.py\", line 227, in __exit__\r\n    self._raiseFailure(\"{} not raised\".format(exc_name))\r\n  File \"/usr/lib/python3.8/unittest/case.py\", line 164, in _raiseFailure\r\n    raise self.test_case.failureException(msg)\r\nAssertionError: PermissionError not raised\r\n```\r\n\r\n**Your enviroment**\r\nLinux-5.7.12-arch1-1-x86_64-with-glibc2.2.5\r\nPython 3.8.5 (default, Jul 27 2020, 08:42:51) \r\n[GCC 10.1.0]\r\npyfakefs 4.1.0\r\n\r\n**Notes**\r\nEven if I explicitly initialize the environment as non-privileged `self.setUpPyfakefs(allow_root_user=False)` the problem still exists\r\n\r\n**Possibly related issues**\r\n- https://github.com/jmcgeheeiv/pyfakefs/issues/489\r\n- https://github.com/jmcgeheeiv/pyfakefs/issues/474\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/542", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/542/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/542/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/542", "id": 674393102, "node_id": "MDU6SXNzdWU2NzQzOTMxMDI=", "number": 542, "title": "DeprecationWarning: DocumentLS.async is deprecated; use DocumentLS.async_", "user": {"login": "jbwdevries", "id": 17177339, "node_id": "MDQ6VXNlcjE3MTc3MzM5", "avatar_url": "https://avatars0.githubusercontent.com/u/17177339?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbwdevries", "html_url": "https://github.com/jbwdevries", "followers_url": "https://api.github.com/users/jbwdevries/followers", "following_url": "https://api.github.com/users/jbwdevries/following{/other_user}", "gists_url": "https://api.github.com/users/jbwdevries/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbwdevries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbwdevries/subscriptions", "organizations_url": "https://api.github.com/users/jbwdevries/orgs", "repos_url": "https://api.github.com/users/jbwdevries/repos", "events_url": "https://api.github.com/users/jbwdevries/events{/privacy}", "received_events_url": "https://api.github.com/users/jbwdevries/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-06T15:16:14Z", "updated_at": "2020-08-10T15:00:18Z", "closed_at": "2020-08-09T08:39:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Also, 'DeprecationWarning: Document.async is deprecated; use Document.async_'\r\n\r\n```\r\nvenv/lib/python3.6/site-packages/pyfakefs/pytest_plugin.py:40: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nvenv/lib/python3.6/site-packages/pyfakefs/fake_filesystem_unittest.py:591: in setUp\r\n    self._find_modules()\r\nvenv/lib/python3.6/site-packages/pyfakefs/fake_filesystem_unittest.py:559: in _find_modules\r\n    for f, i, d in self._def_values(fct):\r\nvenv/lib/python3.6/site-packages/pyfakefs/fake_filesystem_unittest.py:507: in _def_values\r\n    predicate=inspect.isfunction):\r\n/usr/lib/python3.6/inspect.py:342: in getmembers\r\n    value = getattr(object, key)\r\n/usr/lib/python3.6/xml/dom/xmlbuilder.py:346: in __get__\r\n    self.warn(cls)\r\n```\r\n\r\nThe item being inspected is `xml.dom.xmlbuilder.DocumentLS`\r\n\r\ntest_foo.py:\r\n```\r\ndef test_my_func(fs):\r\n    assert True\r\n```\r\n\r\nrequirements.txt:\r\n```\r\npyfakefs==4.1.0\r\npytest==6.0.1\r\npytest-cov==2.9.0\r\n```\r\n\r\nMakefile:\r\n```\r\nsetup:\r\n\tpython3 -m venv venv\r\n\tvenv/bin/python -m pip install -r requirements.txt\r\n\r\ntest:\r\n\tvenv/bin/python -m pytest\r\n```\r\n\r\npython 3.6.9", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/540", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/540/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/540/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/540", "id": 660484378, "node_id": "MDU6SXNzdWU2NjA0ODQzNzg=", "number": 540, "title": "Address production use?", "user": {"login": "FGasper", "id": 844867, "node_id": "MDQ6VXNlcjg0NDg2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/844867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FGasper", "html_url": "https://github.com/FGasper", "followers_url": "https://api.github.com/users/FGasper/followers", "following_url": "https://api.github.com/users/FGasper/following{/other_user}", "gists_url": "https://api.github.com/users/FGasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/FGasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FGasper/subscriptions", "organizations_url": "https://api.github.com/users/FGasper/orgs", "repos_url": "https://api.github.com/users/FGasper/repos", "events_url": "https://api.github.com/users/FGasper/events{/privacy}", "received_events_url": "https://api.github.com/users/FGasper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786278, "node_id": "MDU6TGFiZWwxODc3ODYyNzg=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-19T00:51:07Z", "updated_at": "2020-07-19T12:37:13Z", "closed_at": "2020-07-19T12:37:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI\u2019m wondering how feasible it is to use this module in production use to block filesystem access.\r\n\r\nIt appears, for example, that if I do:\r\n```\r\nif __name__ == '__main__':\r\n    patcher = Patcher()\r\n    patcher.setUp()\r\n    run_program(sys.argv[1:])\r\n    patcher.tearDown()\r\n```\r\n\u2026 then any attempt to access the filesystem in open() will fail with ENOENT. For a program whose sole purpose is to process an input stream and output it (along the lines of `sed`), that seems to provide a sort of \u201ccheap\u201d replacement for containers.\r\n\r\nJust as a suggestion, maybe it would be nice to touch on this potential use of this module?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/539", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/539/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/539/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/539/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/539", "id": 655649572, "node_id": "MDU6SXNzdWU2NTU2NDk1NzI=", "number": 539, "title": "Travis.CI tests not running on PRs and in master", "user": {"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 634637961, "node_id": "MDU6TGFiZWw2MzQ2Mzc5NjE=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/infrastructure", "name": "infrastructure", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-13T08:28:39Z", "updated_at": "2020-07-27T18:48:45Z", "closed_at": "2020-07-27T18:48:45Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Since [this commit](https://github.com/jmcgeheeiv/pyfakefs/commit/7b377f32a309b086f9241610042cd6456be8a3fb) the Travis.CI builds are not running any more in master. They work fine if triggered manually, but get not triggered automatically any more.\r\nThe commit in question did not change anything (was a documentation change only), so something in the Tracis configuration must have been changed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/534", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/534/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/534/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/534/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/534", "id": 650920830, "node_id": "MDU6SXNzdWU2NTA5MjA4MzA=", "number": 534, "title": "Error injecting fs in pytest class method + unittest.Testcase", "user": {"login": "staticdev", "id": 1446633, "node_id": "MDQ6VXNlcjE0NDY2MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1446633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/staticdev", "html_url": "https://github.com/staticdev", "followers_url": "https://api.github.com/users/staticdev/followers", "following_url": "https://api.github.com/users/staticdev/following{/other_user}", "gists_url": "https://api.github.com/users/staticdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/staticdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/staticdev/subscriptions", "organizations_url": "https://api.github.com/users/staticdev/orgs", "repos_url": "https://api.github.com/users/staticdev/repos", "events_url": "https://api.github.com/users/staticdev/events{/privacy}", "received_events_url": "https://api.github.com/users/staticdev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786278, "node_id": "MDU6TGFiZWwxODc3ODYyNzg=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-07-04T16:40:53Z", "updated_at": "2020-07-05T15:03:51Z", "closed_at": "2020-07-05T15:03:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI tried injecting `fs` in a method of a class using unittest.Testcase + pytest but it did not work. \r\n\r\n**How To Reproduce**\r\n\r\nTested code:\r\n```\r\n# pdf_splitter.py\r\nimport os\r\nimport sys\r\nimport tempfile\r\nimport PyPDF4\r\n\r\nclass PdfSplitter:\r\n    def __init__(self, filepath: str) -> None:\r\n        self.filepath = filepath\r\n        self.input_pdf = PyPDF4.PdfFileReader(filepath, \"rb\")\r\n        self.total_pages = self.input_pdf.getNumPages()\r\n        self.size = os.path.getsize(filepath)\r\n        self.avg_size = self.size / self.total_pages\r\n\r\n    def _get_pdf_size(self, pdf_writer: PyPDF4.PdfFileWriter) -> int:\r\n        \"\"\"Generates temporary PDF.\r\n\r\n        Args:\r\n            pdf_writer: pdf writer.\r\n\r\n        Returns:\r\n            int: generated file size.\r\n        \"\"\"\r\n        with tempfile.TemporaryFile(mode=\"wb\") as fp:\r\n            pdf_writer.write(fp)\r\n            return fp.tell()\r\n\r\n    def split_max_size(self, max_size: int) -> int:\r\n        \"\"\"Creates new files based on max size.\r\n\r\n        Args:\r\n            max_size: size in integer megabytes.\r\n\r\n        Returns:\r\n            int: number of PDFs created.\r\n        \"\"\"\r\n        if self.size > max_size:\r\n            avg_step = int(max_size / self.avg_size)\r\n            pdfs_count = 0\r\n            current_page = 0\r\n\r\n            while current_page != self.total_pages:\r\n                end_page = current_page + avg_step\r\n                if end_page > self.total_pages:\r\n                    end_page = self.total_pages\r\n\r\n                current_size = sys.maxsize\r\n                # while PDF is too big create smaller PDFs\r\n                while current_size > max_size:\r\n                    pdf_writer = PyPDF4.PdfFileWriter()\r\n                    for page in range(current_page, end_page):\r\n                        pdf_writer.addPage(self.input_pdf.getPage(page))\r\n                    current_size = self._get_pdf_size(pdf_writer)\r\n                    self.input_pdf = PyPDF4.PdfFileReader(self.filepath, \"rb\")\r\n                    end_page -= 1\r\n\r\n                # write PDF with size max_size\r\n                with open(\r\n                    self.filepath.replace(\".pdf\", \"-{}.pdf\".format(pdfs_count)), \"wb\"\r\n                ) as out:\r\n                    pdf_writer.write(out)\r\n\r\n                current_page = end_page + 1\r\n                pdfs_count += 1\r\n            return pdfs_count\r\n        return 0\r\n```\r\n\r\nTesting code:\r\n```\r\n# test_pdf_splitter.py\r\nimport unittest\r\nfrom unittest.mock import patch\r\nimport pytest\r\nfrom pdf_split_tool import pdf_splitter\r\n\r\n@patch(\"PyPDF4.PdfFileReader\")\r\n@patch(\"os.path.getsize\")\r\nclass PdfSplitterTests(unittest.TestCase):\r\n    @patch(\"PyPDF4.PdfFileWriter\")\r\n    @patch(\"tempfile.TemporaryFile\")\r\n    def test_split_max_size_greater_than_max(\r\n        self,\r\n        fs: Mock,\r\n        mock_temporaryfile: Mock,\r\n        mock_pypdf4_pdffilewriter: Mock,\r\n        mock_os_path_getsize: Mock,\r\n        mock_pypdf4_pdffilereader: Mock,\r\n    ) -> None:\r\n        # 2mb pdf with 1mb max_size\r\n        mock_os_path_getsize.return_value = 2000000\r\n        mock_pypdf4_pdffilereader.return_value.getNumPages.return_value = 2\r\n        max_size = 1000000\r\n        mock_temporaryfile.return_value.__enter__.return_value.tell.return_value = (\r\n            1000000\r\n        )\r\n        splitter = pdf_splitter.PdfSplitter(\"big.pdf\")\r\n        assert splitter.split_max_size(max_size) == 2\r\n```\r\n\r\nI tried just injecting `fs` as in the [documentation](http://jmcgeheeiv.github.io/pyfakefs/release/usage.html#patch-using-the-pytest-plugin), also tried `@patchfs` and [`@pytest.fixture(autouse=True)`](https://docs.pytest.org/en/stable/unittest.html#using-autouse-fixtures-and-accessing-other-fixtures). I couldn't make it work.\r\n\r\nFull code can be seen [here](https://github.com/staticdev/pdf-split-tool/blob/master/tests/test_pdf_splitter.py).\r\n\r\n**Your enviroment**\r\n```bash\r\npython -c \"import platform; print(platform.platform())\"\r\n>> Linux-5.4.0-39-generic-x86_64-with-glibc2.29\r\npython -c \"import sys; print('Python', sys.version)\"\r\n>> Python 3.8.2 (default, Apr  5 2020, 18:58:01) \r\n>> [GCC 9.2.1 20191008]\r\npython -c \"from pyfakefs.fake_filesystem import __version__; print('pyfakefs', __version__)\"\r\n>> pyfakefs 4.0.2\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/531", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/531/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/531/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/531", "id": 634177824, "node_id": "MDU6SXNzdWU2MzQxNzc4MjQ=", "number": 531, "title": "Patch known libraries where possible", "user": {"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-08T05:37:35Z", "updated_at": "2020-07-26T10:57:12Z", "closed_at": "2020-07-26T10:57:12Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "There are some libraries that can be made to work with pyfakefs if adding some specific patches. This includes django (file locking, described as an example in the documentation), pandas (at least `from_csv` can be made to work, see #528), and probably more.\r\n\r\nIt could be helpful to automatically add these patches if the libraries are installed, with the option to disable this if not wanted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/530", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/530/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/530/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/530/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/530", "id": 616866933, "node_id": "MDU6SXNzdWU2MTY4NjY5MzM=", "number": 530, "title": "Calling os.chdir twice", "user": {"login": "Cheekie25", "id": 17249491, "node_id": "MDQ6VXNlcjE3MjQ5NDkx", "avatar_url": "https://avatars1.githubusercontent.com/u/17249491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cheekie25", "html_url": "https://github.com/Cheekie25", "followers_url": "https://api.github.com/users/Cheekie25/followers", "following_url": "https://api.github.com/users/Cheekie25/following{/other_user}", "gists_url": "https://api.github.com/users/Cheekie25/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cheekie25/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cheekie25/subscriptions", "organizations_url": "https://api.github.com/users/Cheekie25/orgs", "repos_url": "https://api.github.com/users/Cheekie25/repos", "events_url": "https://api.github.com/users/Cheekie25/events{/privacy}", "received_events_url": "https://api.github.com/users/Cheekie25/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-12T18:27:59Z", "updated_at": "2020-05-14T19:49:53Z", "closed_at": "2020-05-13T20:45:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen calling twice os.chdir, I get NotADirectoryError on the second call.\r\n\r\nStack trace :\r\n```bash\r\n================================== FAILURES ===================================\r\n______________________________ test_twice_chdir _______________________________\r\n\r\nself = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x0000000003D39438>\r\nfile_path = '\\\\absolute\\\\path\\\\to\\\\directory\\\\absolute\\\\path\\\\to\\\\directory'\r\ncheck_read_perm = True\r\n\r\n    def get_object_from_normpath(self, file_path, check_read_perm=True):\r\n        \"\"\"Search for the specified filesystem object within the fake\r\n            filesystem.\r\n    \r\n            Args:\r\n                file_path: Specifies target FakeFile object to retrieve, with a\r\n                    path that has already been normalized/resolved.\r\n                check_read_perm: If True, raises OSError if a parent directory\r\n                    does not have read permission\r\n    \r\n            Returns:\r\n                The FakeFile object corresponding to file_path.\r\n    \r\n            Raises:\r\n                OSError: if the object is not found.\r\n            \"\"\"\r\n        file_path = make_string_path(file_path)\r\n        if file_path == self.root.name:\r\n            return self.root\r\n        if file_path == self.dev_null.name:\r\n            return self.dev_null\r\n    \r\n        file_path = self._original_path(file_path)\r\n        path_components = self._path_components(file_path)\r\n        target_object = self.root\r\n        try:\r\n            for component in path_components:\r\n                if S_ISLNK(target_object.st_mode):\r\n                    target_object = self.resolve(target_object.contents)\r\n                if not S_ISDIR(target_object.st_mode):\r\n                    if not self.is_windows_fs:\r\n                        self.raise_os_error(errno.ENOTDIR, file_path)\r\n                    self.raise_os_error(errno.ENOENT, file_path)\r\n>               target_object = target_object.get_entry(component)\r\n\r\nD:\\Users\\me\\WinPython-64bit-3.6.3.0Qt5\\python-3.6.3.amd64\\lib\\site-packages\\pyfakefs\\fake_filesystem.py:1941: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <pyfakefs.fake_filesystem.FakeDirectory object at 0x0000000004D46898>\r\npathname_name = 'absolute'\r\n\r\n    def get_entry(self, pathname_name):\r\n        \"\"\"Retrieves the specified child file or directory entry.\r\n    \r\n            Args:\r\n                pathname_name: The basename of the child object to retrieve.\r\n    \r\n            Returns:\r\n                The fake file or directory object.\r\n    \r\n            Raises:\r\n                KeyError: if no child exists by the specified name.\r\n            \"\"\"\r\n        pathname_name = self._normalized_entryname(pathname_name)\r\n>       return self.contents[to_string(pathname_name)]\r\nE       KeyError: 'absolute'\r\n\r\nD:\\Users\\me\\WinPython-64bit-3.6.3.0Qt5\\python-3.6.3.amd64\\lib\\site-packages\\pyfakefs\\fake_filesystem.py:672: KeyError\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nfs = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x0000000003D39438>\r\n\r\n    def test_twice_chdir(fs):\r\n        fs.create_dir(\"/absolute/path/to/directory\")\r\n        os.chdir(\"/absolute/path/to/directory\")\r\n>       os.chdir(\"/absolute/path/to/directory\")\r\n\r\nD:\\Users\\me\\test_non_reg.py:29: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nD:\\Users\\me\\WinPython-64bit-3.6.3.0Qt5\\python-3.6.3.amd64\\lib\\site-packages\\pyfakefs\\fake_filesystem.py:3719: in chdir\r\n    self.filesystem.confirmdir(path)\r\nD:\\Users\\me\\WinPython-64bit-3.6.3.0Qt5\\python-3.6.3.amd64\\lib\\site-packages\\pyfakefs\\fake_filesystem.py:2914: in confirmdir\r\n    directory = self.resolve(target_directory)\r\nD:\\Users\\me\\WinPython-64bit-3.6.3.0Qt5\\python-3.6.3.amd64\\lib\\site-packages\\pyfakefs\\fake_filesystem.py:1995: in resolve\r\n    file_path, check_read_perm), check_read_perm)\r\nD:\\Users\\me\\WinPython-64bit-3.6.3.0Qt5\\python-3.6.3.amd64\\lib\\site-packages\\pyfakefs\\fake_filesystem.py:1946: in get_object_from_normpath\r\n    self.raise_os_error(errno.ENOENT, file_path)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x0000000003D39438>\r\nerrno = 2\r\nfilename = '\\\\absolute\\\\path\\\\to\\\\directory\\\\absolute\\\\path\\\\to\\\\directory'\r\nwinerror = None\r\n\r\n    def raise_os_error(self, errno, filename=None, winerror=None):\r\n        \"\"\"Raises OSError.\r\n            The error message is constructed from the given error code and shall\r\n            start with the error string issued in the real system.\r\n            Note: this is not true under Windows if winerror is given - in this\r\n            case a localized message specific to winerror will be shown in the\r\n            real file system.\r\n    \r\n            Args:\r\n                errno: A numeric error code from the C variable errno.\r\n                filename: The name of the affected file, if any.\r\n                winerror: Windows only - the specific Windows error code.\r\n            \"\"\"\r\n        message = self._error_message(errno)\r\n        if (winerror is not None and sys.platform == 'win32' and\r\n                self.is_windows_fs):\r\n            raise OSError(errno, message, filename, winerror)\r\n>       raise OSError(errno, message, filename)\r\nE       FileNotFoundError: [Errno 2] No such file or directory in the fake filesystem: '\\\\absolute\\\\path\\\\to\\\\directory\\\\absolute\\\\path\\\\to\\\\directory'\r\n\r\nD:\\Users\\me\\WinPython-64bit-3.6.3.0Qt5\\python-3.6.3.amd64\\lib\\site-packages\\pyfakefs\\fake_filesystem.py:960: FileNotFoundError\r\n========================== 1 failed in 2.13 seconds ===========================\r\nProcess finished with exit code 0\r\n```\r\n\r\n**How To Reproduce**\r\n```python\r\nimport os\r\n\r\ndef test_twice_chdir(fs):\r\n    fs.create_dir(\"/absolute/path/to/directory\")\r\n    os.chdir(\"/absolute/path/to/directory\")\r\n    os.chdir(\"/absolute/path/to/directory\")\r\n```\r\n\r\n**Your enviroment**\r\n```bash\r\nWindows-7-6.1.7601-SP1\r\nPython 3.6.3 (v3.6.3:2c5fed8, Oct  3 2017, 18:11:49) [MSC v.1900 64 bit (AMD64)]\r\npyfakefs 4.0.2\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/529", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/529/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/529/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/529", "id": 602156289, "node_id": "MDU6SXNzdWU2MDIxNTYyODk=", "number": 529, "title": "'OSError: [Errno 9] Bad file descriptor' raised with Pillow image framework", "user": {"login": "jvasi", "id": 4431672, "node_id": "MDQ6VXNlcjQ0MzE2NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4431672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvasi", "html_url": "https://github.com/jvasi", "followers_url": "https://api.github.com/users/jvasi/followers", "following_url": "https://api.github.com/users/jvasi/following{/other_user}", "gists_url": "https://api.github.com/users/jvasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvasi/subscriptions", "organizations_url": "https://api.github.com/users/jvasi/orgs", "repos_url": "https://api.github.com/users/jvasi/repos", "events_url": "https://api.github.com/users/jvasi/events{/privacy}", "received_events_url": "https://api.github.com/users/jvasi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2159145017, "node_id": "MDU6TGFiZWwyMTU5MTQ1MDE3", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/limitation", "name": "limitation", "color": "f79165", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-17T18:27:17Z", "updated_at": "2020-06-24T18:41:58Z", "closed_at": "2020-04-23T10:01:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python's Pillow image framework doesn't work properly with pyfakefs. When trying to save an image on the fake filesystem, the following exception is raised:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/krasi/dev/code/tests/test.py\", line 160, in test_pyfakefs_and_PIL\r\n    img.save('/some_target_folder/target_image.jpg')\r\n  File \"/home/krasi/programs/anaconda3/envs/tensorflow3/lib/python3.6/site-packages/PIL/Image.py\", line 2102, in save\r\n    save_handler(self, fp, filename)\r\n  File \"/home/krasi/programs/anaconda3/envs/tensorflow3/lib/python3.6/site-packages/PIL/JpegImagePlugin.py\", line 766, in _save\r\n    ImageFile._save(im, fp, [(\"jpeg\", (0, 0) + im.size, 0, rawmode)], bufsize)\r\n  File \"/home/krasi/programs/anaconda3/envs/tensorflow3/lib/python3.6/site-packages/PIL/ImageFile.py\", line 528, in _save\r\n    s = e.encode_to_file(fh, bufsize)\r\nOSError: [Errno 9] Bad file descriptor\r\n```\r\n\r\nHere's a sample PyTest test to reproduce:\r\n```Python\r\nimport os\r\nfrom PIL import Image\r\n\r\ndef test_pyfakefs_and_PIL(fs):\r\n    # Create some image\r\n    img = Image.new('RGB', (60, 30), color = 'red')\r\n    \r\n    # Create target folder\r\n    os.makedirs('/some_target_folder', exist_ok=True)\r\n    assert os.path.exists('/some_target_folder')\r\n\r\n    # Try to save it\r\n    img.save('/some_target_folder/target_image.jpg')\r\n    assert os.path.exists('/some_target_folder/target_image.jpg')\r\n```\r\n\r\nNote that the issue reproduces only when saving an image as JPEG (i.e. with '.jpg' extension) and doesn't reproduce when saving the image as PNG.\r\n\r\nEnvironment:\r\nLinux-4.15.0-96-generic-x86_64-with-debian-buster-sid (18.04.2 LTS (Bionic Beaver) )\r\nPython 3.6.6 |Anaconda custom (64-bit)| (default, Jun 28 2018, 17:14:51) [GCC 7.2.0]\r\npyfakefs 4.0.2\r\nPillow 7.0.0\r\n\r\nTo install Pillow:\r\n```Bash\r\npip install Pillow\r\n```\r\n\r\nPotentially related StackOverflow issues:\r\n- [OSError: [Errno 9] Bad file descriptor while saving image with PIL](https://stackoverflow.com/questions/54398649/oserror-errno-9-bad-file-descriptor-while-saving-image-with-pil)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/528", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/528/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/528/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/528", "id": 601598817, "node_id": "MDU6SXNzdWU2MDE1OTg4MTc=", "number": 528, "title": "Question: use cases (beyond which unit test lib I use)", "user": {"login": "staticdev", "id": 1446633, "node_id": "MDQ6VXNlcjE0NDY2MzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1446633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/staticdev", "html_url": "https://github.com/staticdev", "followers_url": "https://api.github.com/users/staticdev/followers", "following_url": "https://api.github.com/users/staticdev/following{/other_user}", "gists_url": "https://api.github.com/users/staticdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/staticdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/staticdev/subscriptions", "organizations_url": "https://api.github.com/users/staticdev/orgs", "repos_url": "https://api.github.com/users/staticdev/repos", "events_url": "https://api.github.com/users/staticdev/events{/privacy}", "received_events_url": "https://api.github.com/users/staticdev/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786278, "node_id": "MDU6TGFiZWwxODc3ODYyNzg=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-04-16T23:44:34Z", "updated_at": "2020-06-16T10:48:30Z", "closed_at": "2020-06-08T05:32:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\n@mrbean-bremen answered a question of mine in StackOverflow, and I got interested in this lib. I am a long time python user, but unfortunately I did not give the required attention to the importance of testing. I know basics (difference of fake, stub, mock, what is a unit of code, etc).\r\n\r\nI am practicing testing with a new project that uses pytest, and it has [a module](https://github.com/staticdev/irpf-cei/blob/master/src/irpf_cei/cei.py) that reads XLS reports using pandas and make consolidations on numbers. I think it has potential usage to test many/most methods there, but I am not really sure since documentation says: `pyfakefs will not work with Python libraries (other than os and io)`, but I suspect pandas uses `os` and `io` under the hood.\r\n\r\nI also would like to know if you recommend any good materials on unit testing with fakes/pyfakefs/pytest specifically.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/527", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/527/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/527/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/527", "id": 590115977, "node_id": "MDU6SXNzdWU1OTAxMTU5Nzc=", "number": 527, "title": "pathlib.Path(\".\").absolute() uses an unmocked os module", "user": {"login": "tnek213", "id": 13382024, "node_id": "MDQ6VXNlcjEzMzgyMDI0", "avatar_url": "https://avatars3.githubusercontent.com/u/13382024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnek213", "html_url": "https://github.com/tnek213", "followers_url": "https://api.github.com/users/tnek213/followers", "following_url": "https://api.github.com/users/tnek213/following{/other_user}", "gists_url": "https://api.github.com/users/tnek213/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnek213/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnek213/subscriptions", "organizations_url": "https://api.github.com/users/tnek213/orgs", "repos_url": "https://api.github.com/users/tnek213/repos", "events_url": "https://api.github.com/users/tnek213/events{/privacy}", "received_events_url": "https://api.github.com/users/tnek213/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-30T09:01:07Z", "updated_at": "2020-03-31T17:41:08Z", "closed_at": "2020-03-30T18:53:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description**\r\n`pathlib.Path(\".\").absolute()` uses an unmocked `os` module and I can't find a way to reload it.\r\n\r\n**How To Reproduce**\r\n```\r\nfrom pyfakefs.fake_filesystem_unittest import TestCase\r\n\r\nimport os\r\nimport pathlib\r\n\r\n\r\nclass Test(TestCase):\r\n    def setUp(self):\r\n        self.setUpPyfakefs()\r\n        os.chdir(\"/\")\r\n\r\n    def test_cwd(self):\r\n        print(\"cwd: %s\" % os.getcwd())\r\n        dot_abs = pathlib.Path(\".\").absolute()\r\n        print(\"dot abs: %s\" % dot_abs)\r\n        print(\"exists dot abs: %s\" % dot_abs.exists())\r\n\r\n```\r\n_Prints the following when running test_cwd_\r\n\r\n```\r\ncwd: /\r\ndot abs: /home/k/PycharmProjects/mytestproj/tests\r\nexists dot abs: False\r\n```\r\n_While I expected:_\r\n```\r\ncwd: /\r\ndot abs: /\r\nexists dot abs: True\r\n```\r\nAs can be seen the file system is mocked, but os.getcwd() used by the absolute() function of Path isn't and returns the real cwd.\r\n\r\n**Enviroment**\r\n```\r\nLinux-4.18.0-25-generic-x86_64-with-Ubuntu-18.10-cosmic\r\nPython 3.6.8 (default, Apr  9 2019, 04:59:38) \r\npyfakefs 4.0.2\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/526", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/526/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/526/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/526/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/526", "id": 584750403, "node_id": "MDU6SXNzdWU1ODQ3NTA0MDM=", "number": 526, "title": "Deprecator overrides global warnings", "user": {"login": "iandanforth-alation", "id": 52720125, "node_id": "MDQ6VXNlcjUyNzIwMTI1", "avatar_url": "https://avatars1.githubusercontent.com/u/52720125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iandanforth-alation", "html_url": "https://github.com/iandanforth-alation", "followers_url": "https://api.github.com/users/iandanforth-alation/followers", "following_url": "https://api.github.com/users/iandanforth-alation/following{/other_user}", "gists_url": "https://api.github.com/users/iandanforth-alation/gists{/gist_id}", "starred_url": "https://api.github.com/users/iandanforth-alation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iandanforth-alation/subscriptions", "organizations_url": "https://api.github.com/users/iandanforth-alation/orgs", "repos_url": "https://api.github.com/users/iandanforth-alation/repos", "events_url": "https://api.github.com/users/iandanforth-alation/events{/privacy}", "received_events_url": "https://api.github.com/users/iandanforth-alation/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T23:07:43Z", "updated_at": "2020-03-20T19:40:19Z", "closed_at": "2020-03-20T19:40:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n[This line](https://github.com/jmcgeheeiv/pyfakefs/blob/master/pyfakefs/deprecator.py#L49) attempts to restore the previous state of `warnings` which is changed on line 42. Unfortunately it assumes that the previous state is 'default' which is not always the case. If you have elsewhere set ENV variables to define your python warnings behavior this will override them.\r\n\r\nThis bug was surfaced by [this commit](https://github.com/jmcgeheeiv/pyfakefs/commit/0b8923896451001196969633a34eced249354127)\r\n**Your environment**\r\n\r\nLinux-3.10.0-957.12.2.el7.x86_64-x86_64-with-centos-7.7.1908-Core\r\n('Python', '2.7.15 (default, Dec 11 2018, 21:06:48) \\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-36)]')\r\n('pyfakefs', '3.7.2')", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/525", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/525/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/525/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/525/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/525", "id": 576974065, "node_id": "MDU6SXNzdWU1NzY5NzQwNjU=", "number": 525, "title": "syntax error in 4.0.2 package", "user": {"login": "tswast", "id": 247555, "node_id": "MDQ6VXNlcjI0NzU1NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tswast", "html_url": "https://github.com/tswast", "followers_url": "https://api.github.com/users/tswast/followers", "following_url": "https://api.github.com/users/tswast/following{/other_user}", "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}", "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tswast/subscriptions", "organizations_url": "https://api.github.com/users/tswast/orgs", "repos_url": "https://api.github.com/users/tswast/repos", "events_url": "https://api.github.com/users/tswast/events{/privacy}", "received_events_url": "https://api.github.com/users/tswast/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2158989082, "node_id": "MDU6TGFiZWwyMTU4OTg5MDgy", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/not-a-bug", "name": "not-a-bug", "color": "19a8a5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-06T14:40:03Z", "updated_at": "2020-06-24T18:42:33Z", "closed_at": "2020-03-16T15:35:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nWhen attempting to create a conda package for pyfakefs, I'm getting a syntax error.\r\n\r\n```\r\n  Added file://$SRC_DIR to build tracker '/tmp/pip-req-tracker-f5OOUn'\r\n    Running setup.py (path:/tmp/pip-req-build-K9KwEU/setup.py) egg_info for package from file://$SRC_DIR\r\n    Running command python setup.py egg_info\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-req-build-K9KwEU/setup.py\", line 22, in <module>\r\n        from pyfakefs.fake_filesystem import __version__\r\n      File \"pyfakefs/fake_filesystem.py\", line 1195\r\n        def utime(self, path, times=None, *, ns=None, follow_symlinks=True):\r\n                                           ^\r\n    SyntaxError: invalid syntax\r\n```\r\n\r\nhttps://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=128243&view=logs&j=1bf226d3-0e2f-52d8-fa93-7d9e633347b3&t=ec8d466d-e3b4-5115-4f06-222398f91e6c&l=419\r\n\r\nIs `*` as an argument new syntax? I don't recall seeing it in Python 3.5.\r\n\r\n\r\n**Your enviroment**\r\n\r\nConda Forge\r\n\r\nhttps://github.com/conda-forge/pyfakefs-feedstock/pull/8\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/524", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/524/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/524/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/524", "id": 575344555, "node_id": "MDU6SXNzdWU1NzUzNDQ1NTU=", "number": 524, "title": "pyfakefs v4 builds as py2.py3 wheel", "user": {"login": "Chris2048", "id": 347288, "node_id": "MDQ6VXNlcjM0NzI4OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/347288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chris2048", "html_url": "https://github.com/Chris2048", "followers_url": "https://api.github.com/users/Chris2048/followers", "following_url": "https://api.github.com/users/Chris2048/following{/other_user}", "gists_url": "https://api.github.com/users/Chris2048/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chris2048/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chris2048/subscriptions", "organizations_url": "https://api.github.com/users/Chris2048/orgs", "repos_url": "https://api.github.com/users/Chris2048/repos", "events_url": "https://api.github.com/users/Chris2048/events{/privacy}", "received_events_url": "https://api.github.com/users/Chris2048/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-04T11:57:31Z", "updated_at": "2020-06-24T18:14:35Z", "closed_at": "2020-03-05T07:47:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nIn Pypi repos, there is wheel \"pyfakefs-4.0.1-py2.py3-none-any.whl\" (see https://pypi.org/simple/pyfakefs/ )\r\nBut v4 drops support for py2.\r\n\r\n**How To Reproduce**\r\npip install with unpinned pyfakefs for py2.7\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/523", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/523/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/523/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/523", "id": 574911546, "node_id": "MDU6SXNzdWU1NzQ5MTE1NDY=", "number": 523, "title": "DEFAULT_TYPES cannot be used on Validators using TypeCheckers with 4.0.0", "user": {"login": "retr0h", "id": 9895, "node_id": "MDQ6VXNlcjk4OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retr0h", "html_url": "https://github.com/retr0h", "followers_url": "https://api.github.com/users/retr0h/followers", "following_url": "https://api.github.com/users/retr0h/following{/other_user}", "gists_url": "https://api.github.com/users/retr0h/gists{/gist_id}", "starred_url": "https://api.github.com/users/retr0h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retr0h/subscriptions", "organizations_url": "https://api.github.com/users/retr0h/orgs", "repos_url": "https://api.github.com/users/retr0h/repos", "events_url": "https://api.github.com/users/retr0h/events{/privacy}", "received_events_url": "https://api.github.com/users/retr0h/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-03T20:09:53Z", "updated_at": "2020-06-24T16:38:43Z", "closed_at": "2020-03-03T20:41:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nSeeing the following error as soon as we started using 4.0.0.\r\n\r\n```\r\nself = <class 'jsonschema.validators.create.<locals>.Validator'>\r\n\r\n    def _DEFAULT_TYPES(self):\r\n        if self._CREATED_WITH_DEFAULT_TYPES is None:\r\n>           raise _DontDoThat()\r\nE           jsonschema.validators._DontDoThat: DEFAULT_TYPES cannot be used on Validators using TypeCheckers\r\n\r\nself       = <class 'jsonschema.validators.create.<locals>.Validator'>\r\n```\r\n\r\n**How To Reproduce**\r\n\r\n```\r\nimport contextlib\r\n\r\nimport flask_restx\r\n\r\n@contextlib.contextmanager\r\ndef open_file(filename, mode='r'):\r\n    with open(filename, mode) as stream:\r\n        yield stream\r\n\r\ndef test_open_file(fs):\r\n    f = 'foo.txt'\r\n    fs.create_file(f, contents='foo')\r\n\r\n    with open_file(f) as stream:\r\n        assert 'foo' == stream.read()\r\n```\r\n\r\n**Your enviroment**\r\nPlease run the following and paste the output.\r\n```bash\r\nDarwin-19.3.0-x86_64-i386-64bit\r\n\r\nPython 3.7.6 (default, Jan 15 2020, 13:46:19)\r\n[Clang 11.0.0 (clang-1100.0.33.17)]\r\n\r\npyfakefs 4.0.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/522", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/522/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/522/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/522", "id": 574073863, "node_id": "MDU6SXNzdWU1NzQwNzM4NjM=", "number": 522, "title": "Include fixes from pyfakefs 4.0 in a Python 2.7 compatibility version.", "user": {"login": "marcinowski", "id": 17745246, "node_id": "MDQ6VXNlcjE3NzQ1MjQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/17745246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcinowski", "html_url": "https://github.com/marcinowski", "followers_url": "https://api.github.com/users/marcinowski/followers", "following_url": "https://api.github.com/users/marcinowski/following{/other_user}", "gists_url": "https://api.github.com/users/marcinowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcinowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcinowski/subscriptions", "organizations_url": "https://api.github.com/users/marcinowski/orgs", "repos_url": "https://api.github.com/users/marcinowski/repos", "events_url": "https://api.github.com/users/marcinowski/events{/privacy}", "received_events_url": "https://api.github.com/users/marcinowski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 634637961, "node_id": "MDU6TGFiZWw2MzQ2Mzc5NjE=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/infrastructure", "name": "infrastructure", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-02T16:00:31Z", "updated_at": "2020-06-24T19:22:24Z", "closed_at": "2020-03-03T11:21:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWhile migrating the Python 2 legacy code using pyfakefs to Python 3 I encountered some issues related to this error (#509 and #511). I can see they'll be included in the 4.0 version which drops the support for Py2\r\n\r\n**Describe the solution you'd like**\r\nIs there any chance of including some of the fixes in a 3.7.2 version that will still support Python 2? \r\nI'm happy to assist with the 3.7.2 version if any help was needed\r\n\r\n**Describe alternatives you've considered**\r\nOtherwise I'd have to create a fork (I already did actually to test if the bug's fixed) but I assume more people would be blocked on this. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/520", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/520/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/520/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/520", "id": 571499034, "node_id": "MDU6SXNzdWU1NzE0OTkwMzQ=", "number": 520, "title": "Unable to extract tarball to temporary directory", "user": {"login": "noctuid", "id": 4250696, "node_id": "MDQ6VXNlcjQyNTA2OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4250696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noctuid", "html_url": "https://github.com/noctuid", "followers_url": "https://api.github.com/users/noctuid/followers", "following_url": "https://api.github.com/users/noctuid/following{/other_user}", "gists_url": "https://api.github.com/users/noctuid/gists{/gist_id}", "starred_url": "https://api.github.com/users/noctuid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noctuid/subscriptions", "organizations_url": "https://api.github.com/users/noctuid/orgs", "repos_url": "https://api.github.com/users/noctuid/repos", "events_url": "https://api.github.com/users/noctuid/events{/privacy}", "received_events_url": "https://api.github.com/users/noctuid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2158989082, "node_id": "MDU6TGFiZWwyMTU4OTg5MDgy", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/not-a-bug", "name": "not-a-bug", "color": "19a8a5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-26T16:15:24Z", "updated_at": "2020-06-24T18:14:58Z", "closed_at": "2020-02-26T16:23:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "It does not seem possible to extract a tarball (with `tarfile.extractall`) to a temporary directory (as created with `tempfile.TemporaryDirectory()`). My initial guess was to add `gettempdir()` as a real directory, but it looks like pyfakefs already does this (though I don't know whether it does this as a real or fake directory or if that matters). Anyway, I get an error like this currently: `[Errno 21] Is a directory in the fake filesystem: '/var/folders/qx/hcbbxc3x5qq2dy5z4kz4fxy00000gn/T/tmpnpt7mum2'` (this is on OSX).\r\n\r\nIs there a workaround for this? Am I doing something incorrectly?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/518", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/518/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/518/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/518/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/518", "id": 565727865, "node_id": "MDU6SXNzdWU1NjU3Mjc4NjU=", "number": 518, "title": "Patcher.tearDown() issue with pathlib", "user": {"login": "sagi-z", "id": 23320153, "node_id": "MDQ6VXNlcjIzMzIwMTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/23320153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagi-z", "html_url": "https://github.com/sagi-z", "followers_url": "https://api.github.com/users/sagi-z/followers", "following_url": "https://api.github.com/users/sagi-z/following{/other_user}", "gists_url": "https://api.github.com/users/sagi-z/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagi-z/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagi-z/subscriptions", "organizations_url": "https://api.github.com/users/sagi-z/orgs", "repos_url": "https://api.github.com/users/sagi-z/repos", "events_url": "https://api.github.com/users/sagi-z/events{/privacy}", "received_events_url": "https://api.github.com/users/sagi-z/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-02-15T10:15:32Z", "updated_at": "2020-02-20T20:17:15Z", "closed_at": "2020-02-20T20:17:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nIf pathlib is imported between *Patcher.setUp()* and *Patcher.tearDown()* for the first time then\r\nPatcher.tearDown() does not cleanup *pathlib* static accessors correctly.\r\n\r\n**How To Reproduce**\r\nBasically I'm using the 'fs' fixture plugin for *pytest*. I have tests which use *pyfakefs* and then some tests which don't use it. A simplified example of the problem decoupled from *pytest* is:\r\n\r\n```text\r\n(bash) $ cat /tmp/pyfakefs_bug.py \r\nfrom pyfakefs.fake_filesystem_unittest import Patcher\r\nimport os\r\nimport shutil\r\n\r\n# Use this directory as a showcase, remove it before testing\r\nTMP_DIR = '/tmp/delmedir/somedir'\r\nshutil.rmtree(TMP_DIR, ignore_errors=True)\r\n\r\n# Patch setUp and teadDown\r\npatcher = Patcher()\r\npatcher.setUp()\r\nimport pathlib  # first imported while patched\r\ndummy = pathlib.Path()\r\npatcher.tearDown()\r\n\r\n# We should not be patched here\r\np = pathlib.Path(TMP_DIR)\r\np.mkdir(parents=True, exist_ok=True)  # Problem because Path._accessor points to a class statically initialized during setUp\r\nnew_file = os.path.join(str(p), 'new-file')\r\nfile_obj = open(new_file, mode='w')\r\n\r\n(bash) $ python /tmp/pyfakefs_bug.py\r\nTraceback (most recent call last):\r\n  File \"/tmp/pyfakefs_bug.py\", line 20, in <module>\r\n    file_obj = open(new_file, mode='w')\r\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/delmedir/somedir/new-file'\r\n```\r\n\r\n**Your enviroment**\r\nPlease run the following and paste the output.\r\n```bash\r\npython -c \"import platform; print(platform.platform())\"\r\npython -c \"import sys; print('Python', sys.version)\"\r\npython -c \"from pyfakefs.fake_filesystem import __version__; print('pyfakefs', __version__)\"\r\n```\r\nLinux-4.15.0-76-generic-x86_64-with-debian-buster-sid\r\nPython 3.7.3 (default, Nov 21 2019, 15:51:40)\r\n[GCC 7.4.0]\r\npyfakefs 3.7.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/517", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/517/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/517/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/517/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/517", "id": 564573066, "node_id": "MDU6SXNzdWU1NjQ1NzMwNjY=", "number": 517, "title": "lstat with bytes file name fails", "user": {"login": "sagi-z", "id": 23320153, "node_id": "MDQ6VXNlcjIzMzIwMTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/23320153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagi-z", "html_url": "https://github.com/sagi-z", "followers_url": "https://api.github.com/users/sagi-z/followers", "following_url": "https://api.github.com/users/sagi-z/following{/other_user}", "gists_url": "https://api.github.com/users/sagi-z/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagi-z/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagi-z/subscriptions", "organizations_url": "https://api.github.com/users/sagi-z/orgs", "repos_url": "https://api.github.com/users/sagi-z/repos", "events_url": "https://api.github.com/users/sagi-z/events{/privacy}", "received_events_url": "https://api.github.com/users/sagi-z/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-13T10:09:12Z", "updated_at": "2020-02-18T20:33:50Z", "closed_at": "2020-02-18T20:33:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nUsing *dulwich* for git access, and it is using byte strings to access files. This normally works on python. Not working with pyfakefs.\r\n\r\n**How To Reproduce**\r\n```python\r\nfrom pyfakefs import fake_filesystem\r\nfilesystem = fake_filesystem.FakeFilesystem()\r\nos_module = fake_filesystem.FakeOsModule(filesystem)\r\nfilesystem.create_file('/delme')\r\nos_module.stat('/delme')  # works\r\nos_module.stat(b'/delme')  # works\r\nos_module.lstat('/delme')  # works\r\nos_module.lstat(b'/delme')  # fails\r\nFileNotFoundError: [Errno 2] No such file or directory in the fake filesystem: b'/delme'\r\n```\r\n\r\n**Your enviroment**\r\nPlease run the following and paste the output.\r\n```bash\r\npython -c \"import platform; print(platform.platform())\"\r\npython -c \"import sys; print('Python', sys.version)\"\r\npython -c \"from pyfakefs.fake_filesystem import __version__; print('pyfakefs', __version__)\"\r\n```\r\nLinux-4.15.0-76-generic-x86_64-with-debian-buster-sid\r\nPython 3.7.3 (default, Nov 21 2019, 15:51:40)\r\n[GCC 7.4.0]\r\npyfakefs 3.7.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/516", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/516/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/516/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/516", "id": 564555342, "node_id": "MDU6SXNzdWU1NjQ1NTUzNDI=", "number": 516, "title": "lstat current directory fails on Linux", "user": {"login": "sagi-z", "id": 23320153, "node_id": "MDQ6VXNlcjIzMzIwMTUz", "avatar_url": "https://avatars0.githubusercontent.com/u/23320153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sagi-z", "html_url": "https://github.com/sagi-z", "followers_url": "https://api.github.com/users/sagi-z/followers", "following_url": "https://api.github.com/users/sagi-z/following{/other_user}", "gists_url": "https://api.github.com/users/sagi-z/gists{/gist_id}", "starred_url": "https://api.github.com/users/sagi-z/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sagi-z/subscriptions", "organizations_url": "https://api.github.com/users/sagi-z/orgs", "repos_url": "https://api.github.com/users/sagi-z/repos", "events_url": "https://api.github.com/users/sagi-z/events{/privacy}", "received_events_url": "https://api.github.com/users/sagi-z/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-13T09:38:36Z", "updated_at": "2020-02-19T20:26:46Z", "closed_at": "2020-02-19T20:26:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nlstat for '.' fails on Linux\r\n\r\n**How To Reproduce**\r\n```python\r\nfrom pyfakefs import fake_filesystem\r\nfilesystem = fake_filesystem.FakeFilesystem()\r\nos_module = fake_filesystem.FakeOsModule(filesystem)\r\nos_module.getcwd()  # '/'\r\nos_module.stat('.')  # works ok\r\nos_module.lstat('.')\r\nFileNotFoundError: [Errno 2] No such file or directory in the fake filesystem: '.'\r\n```\r\n\r\n**Your enviroment**\r\nPlease run the following and paste the output.\r\n```bash\r\npython -c \"import platform; print(platform.platform())\"\r\npython -c \"import sys; print('Python', sys.version)\"\r\npython -c \"from pyfakefs.fake_filesystem import __version__; print('pyfakefs', __version__)\"\r\n```\r\nLinux-4.15.0-76-generic-x86_64-with-debian-buster-sid\r\nPython 3.7.3 (default, Nov 21 2019, 15:51:40) \r\n[GCC 7.4.0]\r\npyfakefs 3.7.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/515", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/515/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/515/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/515/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/515", "id": 563973515, "node_id": "MDU6SXNzdWU1NjM5NzM1MTU=", "number": 515, "title": "shutil.move() moves directory contents if target dir exists", "user": {"login": "FelixSchwarz", "id": 212753, "node_id": "MDQ6VXNlcjIxMjc1Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/212753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FelixSchwarz", "html_url": "https://github.com/FelixSchwarz", "followers_url": "https://api.github.com/users/FelixSchwarz/followers", "following_url": "https://api.github.com/users/FelixSchwarz/following{/other_user}", "gists_url": "https://api.github.com/users/FelixSchwarz/gists{/gist_id}", "starred_url": "https://api.github.com/users/FelixSchwarz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FelixSchwarz/subscriptions", "organizations_url": "https://api.github.com/users/FelixSchwarz/orgs", "repos_url": "https://api.github.com/users/FelixSchwarz/repos", "events_url": "https://api.github.com/users/FelixSchwarz/events{/privacy}", "received_events_url": "https://api.github.com/users/FelixSchwarz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-12T12:39:47Z", "updated_at": "2020-02-20T20:58:43Z", "closed_at": "2020-02-20T20:17:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that `shutil.move()` behaves differently if the target directory exists already.\r\n\r\nPython:\r\n\r\n - if the target directory exists, move the source directory as a sub-directory of the target dir\r\n - if target directory does not exist, create it and move only contents of source directory\r\n\r\npyfakefs:\r\n\r\n - always moves contents of source directory only.\r\n\r\nI noticed this with Python 2.7 (pyfakefs 3.7.1) and Python 3.8 (latest git, 025f06c).\r\n\r\nRelated bug was #145 (fixed by e94bb0f55098917f0c093cd952c521e7706db824) but it seems that one missed this edge condition.\r\n\r\nExample code:\r\n\r\n    #!/usr/bin/env python\r\n\r\n    import os\r\n    import shutil\r\n    import tempfile\r\n\r\n    USE_PYFAKEFS = False\r\n\r\n    if USE_PYFAKEFS:\r\n        from pyfakefs.fake_filesystem_unittest import Patcher\r\n        stubber = Patcher()\r\n        stubber.setUp()\r\n\r\n\r\n    source_dir = tempfile.mkdtemp()\r\n    target_dir = tempfile.mkdtemp()\r\n    filename = 'foo.pdf'\r\n    with open(os.path.join(source_dir, filename), 'wb') as fp:\r\n        fp.write(b'stub')\r\n\r\n    shutil.move(source_dir, target_dir)\r\n    shutil.rmtree(target_dir)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/513", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/513/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/513/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/513/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/513", "id": 560388361, "node_id": "MDU6SXNzdWU1NjAzODgzNjE=", "number": 513, "title": "tests of code that uses importlib_resources causes paths to be mangled", "user": {"login": "sametz", "id": 13587884, "node_id": "MDQ6VXNlcjEzNTg3ODg0", "avatar_url": "https://avatars1.githubusercontent.com/u/13587884?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sametz", "html_url": "https://github.com/sametz", "followers_url": "https://api.github.com/users/sametz/followers", "following_url": "https://api.github.com/users/sametz/following{/other_user}", "gists_url": "https://api.github.com/users/sametz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sametz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sametz/subscriptions", "organizations_url": "https://api.github.com/users/sametz/orgs", "repos_url": "https://api.github.com/users/sametz/repos", "events_url": "https://api.github.com/users/sametz/events{/privacy}", "received_events_url": "https://api.github.com/users/sametz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786278, "node_id": "MDU6TGFiZWwxODc3ODYyNzg=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-05T13:56:19Z", "updated_at": "2020-02-06T02:02:33Z", "closed_at": "2020-02-06T02:02:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "This was initially [a Stack Overflow question](https://stackoverflow.com/questions/60068183/importlib-resources-backport-not-compatible-with-pyfakefs?noredirect=1#comment106242931_60068183)\r\n\r\nWhen pytest with pyfakefs tests code with importlib_resources on Python 3.6, the paths from the tested code are mangled.\r\n\r\nMinimal example, using the following project structure:\r\n```\r\nmypackage\r\n\u251c\u2500\u2500 mypackage\r\n\u2502   \u251c\u2500\u2500 __init__.py\r\n\u2502   \u251c\u2500\u2500 bin\r\n\u2502   \u2502   \u2514\u2500\u2500 __init__.py\r\n\u2502   \u2514\u2500\u2500 find_bin.py\r\n\u2514\u2500\u2500 tests\r\n    \u2514\u2500\u2500 test_find_bin.py\r\n```\r\n{edit: `tests` folder needs an `__init__.py` for pytest to run from command line. I had been using PyCharm to run the test. Same behavior either way.}\r\n\r\n`mypackage/mypackage/bin` in my actual library is a binary resource folder with an empty `__init__.py`. The function to be tested is in find_bin.py:\r\n```\r\nimport sys\r\nif sys.version_info >= (3, 7):\r\n    from importlib import resources\r\nelse:\r\n    import importlib_resources as resources\r\n\r\nimport mypackage.bin\r\n\r\n\r\ndef find_bin():\r\n    init_path_context = resources.path(mypackage.bin, '__init__.py')\r\n    with init_path_context as p:\r\n        init_path = p\r\n    bin_path = init_path.parent\r\n    return bin_path\r\n```\r\nThe pytest test `test_find_bin.py`:\r\n```\r\nimport pathlib\r\n\r\nfrom mypackage.find_bin import find_bin\r\n\r\n\r\ndef test_findbin(fs):\r\n    test_bin = (pathlib.Path(__file__)\r\n                .resolve()\r\n                .parent.parent\r\n                .joinpath('mypackage', 'bin'))\r\n    print('test bin is ', test_bin)\r\n    expected_bin = find_bin()\r\n    print('expected bin is ', expected_bin)\r\n    assert not expected_bin.exists()\r\n    print('test creating fakefs ', test_bin)\r\n    fs.create_dir(test_bin)\r\n    assert expected_bin.exists()\r\n```\r\nTesting under Python 3.7+ (using `importlib.resources`) works. Under Python 3.6 with the `importlib_resources` backport, the code (both test case and my actual library) runs as expected, using the expected paths. Under pytest testing conditions, the `test_bin()` path output is mangled:\r\n```\r\ntest bin is  /Users/geoffreysametz/Documents/mypackage/mypackage/bin  # correct\r\nexpected bin is  /var/folders/bv/m5cg5cp15t38sh8rxx244hp00000gn/T  # ?!?!?!\r\n```\r\nMy suspicion, from tracing the execution with PyCharm, is that consuming the generator (`with init_path_context as p`...) it uses python's FakeFilesystem under the hood, and that this results in a conflict with pyfakefs. I didn't pinpoint the exact point where the name was mangled. \r\n\r\nEnvironment:\r\nDarwin-19.3.0-x86_64-i386-64bit\r\n\r\nPython 3.6.10 (default, Feb  3 2020, 19:33:52) \r\n[GCC 4.2.1 Compatible Apple LLVM 11.0.0 (clang-1100.0.33.17)]\r\n\r\npyfakefs 3.7.1\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/512", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/512/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/512/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/512", "id": 556310085, "node_id": "MDU6SXNzdWU1NTYzMTAwODU=", "number": 512, "title": "Discrepancy in `walk` implementation", "user": {"login": "gethiox", "id": 1618352, "node_id": "MDQ6VXNlcjE2MTgzNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1618352?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gethiox", "html_url": "https://github.com/gethiox", "followers_url": "https://api.github.com/users/gethiox/followers", "following_url": "https://api.github.com/users/gethiox/following{/other_user}", "gists_url": "https://api.github.com/users/gethiox/gists{/gist_id}", "starred_url": "https://api.github.com/users/gethiox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gethiox/subscriptions", "organizations_url": "https://api.github.com/users/gethiox/orgs", "repos_url": "https://api.github.com/users/gethiox/repos", "events_url": "https://api.github.com/users/gethiox/events{/privacy}", "received_events_url": "https://api.github.com/users/gethiox/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-28T16:05:17Z", "updated_at": "2020-01-28T19:53:32Z", "closed_at": "2020-01-28T18:16:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nThere is a discrepancy between pyfakefs and native implementation of `walk` function.\r\n\r\nWhen iterating over `walk()` with a path that is ending with a separator (`/`), first returned argument (`dirpath`) out of three (`dirpath`, `dirnames`, `filenames`) seems to be trimmed and ending separator is removed. This doesn't happen with native `os.walk()` implementation. \r\n\r\n**How To Reproduce**\r\n\r\n```python\r\nimport os\r\n\r\n\r\ndef test_with_fakefs(fs):\r\n    mypath = \"/tmp/czo\"\r\n\r\n    if not os.path.exists(mypath):\r\n        os.mkdir(mypath)\r\n\r\n    assert os.path.exists(mypath)\r\n\r\n    for dirpath, dirnames, filenames in os.walk(mypath):\r\n        assert dirpath == mypath\r\n\r\n    other_mypath = \"/tmp/czo/\"\r\n\r\n    for dirpath, dirnames, filenames in os.walk(other_mypath):\r\n        assert dirpath == other_mypath\r\n\r\n\r\ndef test_without_fakefs():\r\n    mypath = \"/tmp/czo\"\r\n\r\n    if not os.path.exists(mypath):\r\n        os.mkdir(mypath)\r\n\r\n    assert os.path.exists(mypath)\r\n\r\n    for dirpath, dirnames, filenames in os.walk(mypath):\r\n        assert dirpath == mypath\r\n\r\n    other_mypath = \"/tmp/czo/\"\r\n\r\n    for dirpath, dirnames, filenames in os.walk(other_mypath):\r\n        assert dirpath == other_mypath\r\n```\r\n\r\n```\r\n# pytest test_some.py\r\n========================================== test session starts ===========================================\r\nplatform linux -- Python 3.6.5, pytest-5.3.1, py-1.8.0, pluggy-0.13.1\r\nhypothesis profile 'default' -> database=DirectoryBasedExampleDatabase(<removed>)\r\nrootdir: <removed>\r\nplugins: hypothesis-3.77.0, requests-mock-1.7.0, cov-2.8.1, asyncio-0.10.0, mock-1.10.1, pyfakefs-3.7.1, env-0.6.2\r\ncollected 2 items                                                                                        \r\n\r\ntest_some.py F.                                                                                    [100%]\r\n\r\n================================================ FAILURES ================================================\r\n____________________________________________ test_with_fakefs ____________________________________________\r\n\r\nfs = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x7f91d914f518>\r\n\r\n    def test_with_fakefs(fs):\r\n        mypath = \"/tmp/czo\"\r\n    \r\n        if not os.path.exists(mypath):\r\n            os.mkdir(mypath)\r\n    \r\n        assert os.path.exists(mypath)\r\n    \r\n        for dirpath, dirnames, filenames in os.walk(mypath):\r\n            assert dirpath == mypath\r\n    \r\n        other_mypath = \"/tmp/czo/\"\r\n    \r\n        for dirpath, dirnames, filenames in os.walk(other_mypath):\r\n>           assert dirpath == other_mypath\r\nE           AssertionError: assert '/tmp/czo' == '/tmp/czo/'\r\nE             - /tmp/czo\r\nE             + /tmp/czo/\r\nE             ?         +\r\n\r\n<removed>/test/test_some.py:18: AssertionError\r\n====================================== 1 failed, 1 passed in 0.62s =======================================\r\n```\r\n\r\n**Your enviroment**\r\n```\r\nLinux-5.4.11-arch1-1-x86_64-with-arch\r\nPython 3.6.5 (default, Jul  6 2018, 09:32:51) \r\n[GCC 8.1.1 20180531]\r\npyfakefs 3.7.1\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/511", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/511/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/511/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/511", "id": 549181517, "node_id": "MDU6SXNzdWU1NDkxODE1MTc=", "number": 511, "title": "tempfile.TemporaryFile(..., dir=dir) does not raise FileNotFoundError on Linux when directory does not exist", "user": {"login": "vtsatskin", "id": 1301625, "node_id": "MDQ6VXNlcjEzMDE2MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1301625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtsatskin", "html_url": "https://github.com/vtsatskin", "followers_url": "https://api.github.com/users/vtsatskin/followers", "following_url": "https://api.github.com/users/vtsatskin/following{/other_user}", "gists_url": "https://api.github.com/users/vtsatskin/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtsatskin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtsatskin/subscriptions", "organizations_url": "https://api.github.com/users/vtsatskin/orgs", "repos_url": "https://api.github.com/users/vtsatskin/repos", "events_url": "https://api.github.com/users/vtsatskin/events{/privacy}", "received_events_url": "https://api.github.com/users/vtsatskin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-13T21:06:32Z", "updated_at": "2020-06-24T16:39:00Z", "closed_at": "2020-01-14T21:06:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen invoking `tempfile.TemporaryFile(..., dir=dir)` when `dir` does not exist on a fake filesystem under Linux, a `FileNotFoundError` is not raised. This does not occur on macOS.\r\n\r\n**How To Reproduce**\r\n```python\r\nimport pytest\r\nfrom pyfakefs.fake_filesystem import FakeFilesystem\r\nimport tempfile\r\n\r\ndef test_file_not_found(fs: FakeFilesystem) -> None:\r\n    with pytest.raises(FileNotFoundError):\r\n        tempfile.TemporaryFile(dir=\"/bogus\")\r\n```\r\n\r\nThis test fails because `FileNotFoundError` is not raised. When running the test on macOS, it passes.\r\n\r\nChecking the expected behaviour using the real filesystem:\r\n\r\n```\r\n# macOS\r\nPython 3.6.7 (v3.6.7:6ec5cf24b7, Oct 20 2018, 03:02:14) \r\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tempfile\r\n>>> tempfile.TemporaryFile(dir=\"/bogus\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/tempfile.py\", line 622, in TemporaryFile\r\n    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/tempfile.py\", line 262, in _mkstemp_inner\r\n    fd = _os.open(file, flags, 0o600)\r\nFileNotFoundError: [Errno 2] No such file or directory: '/bogus/tmp9fiv_v7v'\r\n```\r\n\r\n```\r\n# Linux\r\nPython 3.6.9 (default, Nov  7 2019, 10:44:02) \r\n[GCC 8.3.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import tempfile\r\n>>> tempfile.TemporaryFile(dir=\"/bogus\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3.6/tempfile.py\", line 761, in TemporaryFile\r\n    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)\r\n  File \"/usr/lib/python3.6/tempfile.py\", line 401, in _mkstemp_inner\r\n    fd = _os.open(file, flags, 0o600)\r\nFileNotFoundError: [Errno 2] No such file or directory: '/bogus/tmpnkiv2m_v'\r\n```\r\n\r\n**Your enviroment**\r\n```bash\r\nLinux-4.9.140-tegra-aarch64-with-Ubuntu-18.04-bionic\r\nPython 3.6.9 (default, Nov  7 2019, 10:44:02)\r\npyfakefs 4.0\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/510", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/510/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/510/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/510/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/510", "id": 548716374, "node_id": "MDU6SXNzdWU1NDg3MTYzNzQ=", "number": 510, "title": "Call os.makedirs('', exist_ok=True) will not raise FileNotFoundError in fakefs", "user": {"login": "vuryleo", "id": 1854100, "node_id": "MDQ6VXNlcjE4NTQxMDA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1854100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vuryleo", "html_url": "https://github.com/vuryleo", "followers_url": "https://api.github.com/users/vuryleo/followers", "following_url": "https://api.github.com/users/vuryleo/following{/other_user}", "gists_url": "https://api.github.com/users/vuryleo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vuryleo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vuryleo/subscriptions", "organizations_url": "https://api.github.com/users/vuryleo/orgs", "repos_url": "https://api.github.com/users/vuryleo/repos", "events_url": "https://api.github.com/users/vuryleo/events{/privacy}", "received_events_url": "https://api.github.com/users/vuryleo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-13T05:39:58Z", "updated_at": "2020-06-24T16:39:20Z", "closed_at": "2020-01-13T19:02:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n`os.makedirs('', exist_ok=True)` will not raise `FileNotFoundError`\r\n\r\n**How To Reproduce**\r\n```python\r\nimport os\r\n\r\nfrom pyfakefs.fake_filesystem_unittest import Patcher\r\n\r\nwith Patcher():\r\n    print('fakefs')\r\n    os.makedirs('', exist_ok=True)\r\n\r\nprint('os')\r\nos.makedirs('', exist_ok=True)\r\n```\r\n\r\nOutput:\r\n```python\r\nfakefs\r\nos\r\nTraceback (most recent call last):\r\n  File \"[redacted].py\", line 10, in <module>\r\n    os.makedirs('', exist_ok=True)\r\n  File \"/usr/lib/python3.6/os.py\", line 220, in makedirs\r\n    mkdir(name, mode)\r\nFileNotFoundError: [Errno 2] No such file or directory: ''\r\n```\r\n\r\n**Your enviroment**\r\nPlease run the following and paste the output.\r\n```bash\r\nLinux-4.15.0-55.60-x86_64-with-Ubuntu-18.04-bionic\r\nPython 3.6.8 (default, Oct  7 2019, 12:59:55) \r\n[GCC 8.3.0]\r\npyfakefs 3.7.1\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/509", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/509/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/509/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/509/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/509", "id": 548269067, "node_id": "MDU6SXNzdWU1NDgyNjkwNjc=", "number": 509, "title": "tempfile.TemporaryFile does not work on Linux with a fake filesystem", "user": {"login": "vtsatskin", "id": 1301625, "node_id": "MDQ6VXNlcjEzMDE2MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1301625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtsatskin", "html_url": "https://github.com/vtsatskin", "followers_url": "https://api.github.com/users/vtsatskin/followers", "following_url": "https://api.github.com/users/vtsatskin/following{/other_user}", "gists_url": "https://api.github.com/users/vtsatskin/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtsatskin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtsatskin/subscriptions", "organizations_url": "https://api.github.com/users/vtsatskin/orgs", "repos_url": "https://api.github.com/users/vtsatskin/repos", "events_url": "https://api.github.com/users/vtsatskin/events{/privacy}", "received_events_url": "https://api.github.com/users/vtsatskin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-10T20:13:17Z", "updated_at": "2020-01-13T21:08:06Z", "closed_at": "2020-01-11T15:26:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen invoking `tempfile.TemporaryFile` on a fake filesystem under Linux, a `NotImplementedError` is raised. This does not occur on macOS.\r\n\r\n**How To Reproduce**\r\n\r\nBoth of the following tests fail:\r\n```python\r\nfrom pyfakefs.fake_filesystem import FakeFilesystem\r\nimport tempfile\r\n\r\n\r\ndef test_tempfile_defaults(fs: FakeFilesystem) -> None:\r\n    tempfile.TemporaryFile()\r\n\r\n\r\ndef test_tempfile_custom_dir(fs: FakeFilesystem) -> None:\r\n    fs.create_dir(\"/dir\")\r\n    tempfile.TemporaryFile(dir=\"/dir\")\r\n\r\n# passes, checking if temporary directory exists\r\ndef test_tempfile_get_dir(fs: FakeFilesystem) -> None:\r\n    assert tempfile.gettempdir() == \"/tmp\"\r\n```\r\n\r\nWith the following truncated output:\r\n\r\n```\r\n/home/nvidia/passengerai/device/.venv/python-3.6.9/lib/python3.6/tempfile.py:735: in TemporaryFile\r\n    fd = _os.open(dir, flags2, 0o600)\r\n        fs.create_dir(\"/dir\")\r\n>       tempfile.TemporaryFile(dir=\"/dir\")\r\n\r\n/home/nvidia/passengerai/device/tests/unit/media_streaming/storage_management/test_pyfakefs.py:11:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/home/nvidia/passengerai/device/.venv/python-3.6.9/lib/python3.6/tempfile.py:735: in TemporaryFile\r\n    fd = _os.open(dir, flags2, 0o600)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <pyfakefs.fake_filesystem.FakeOsModule object at 0x7f7e8a0eb8>, path = '/dir'\r\nflags = 4243586, mode = 384, dir_fd = None\r\n\r\n    def open(self, path, flags, mode=None, dir_fd=None):\r\n        \"\"\"Return the file descriptor for a FakeFile.\r\n    \r\n        Args:\r\n            path: the path to the file\r\n            flags: low-level bits to indicate io operation\r\n            mode: bits to define default permissions\r\n                Note: only basic modes are supported, OS-specific modes are\r\n                ignored\r\n            dir_fd: If not `None`, the file descriptor of a directory,\r\n                with `file_path` being relative to this directory.\r\n                New in Python 3.3.\r\n    \r\n        Returns:\r\n            A file descriptor.\r\n    \r\n        Raises:\r\n            IOError: if the path cannot be found\r\n            ValueError: if invalid mode is given\r\n            NotImplementedError: if `os.O_EXCL` is used without `os.O_CREAT`\r\n        \"\"\"\r\n        path = self._path_with_dir_fd(path, self.open, dir_fd)\r\n        if mode is None:\r\n            if self.filesystem.is_windows_fs:\r\n                mode = 0o666\r\n            else:\r\n                mode = 0o777 & ~self._umask()\r\n    \r\n        open_modes = _OpenModes(\r\n            must_exist=not flags & os.O_CREAT,\r\n            can_read=not flags & os.O_WRONLY,\r\n            can_write=flags & (os.O_RDWR | os.O_WRONLY),\r\n            truncate=flags & os.O_TRUNC,\r\n            append=flags & os.O_APPEND,\r\n            must_not_exist=flags & os.O_EXCL\r\n        )\r\n        if open_modes.must_not_exist and open_modes.must_exist:\r\n            raise NotImplementedError(\r\n>               'O_EXCL without O_CREAT mode is not supported')\r\nE           NotImplementedError: O_EXCL without O_CREAT mode is not supported\r\n\r\n/home/nvidia/passengerai/device/.venv/python-3.6.9/lib/python3.6/site-packages/pyfakefs/fake_filesystem.py:3739: NotImplementedError\r\n=================================== 2 failed, 1 passed in 2.63s ===================================\r\n```\r\n\r\n**Your enviroment**\r\n```bash\r\nLinux-4.9.140-tegra-aarch64-with-Ubuntu-18.04-bionic\r\nPython 3.6.9 (default, Nov  7 2019, 10:44:02)\r\npyfakefs 3.7.1\r\n```\r\n\r\nThis also happens on pyfakefs 4.0 from the master branch.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/508", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/508/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/508/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/508", "id": 541277478, "node_id": "MDU6SXNzdWU1NDEyNzc0Nzg=", "number": 508, "title": "Python 3.7 tests are broken", "user": {"login": "jonringer", "id": 7673602, "node_id": "MDQ6VXNlcjc2NzM2MDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7673602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonringer", "html_url": "https://github.com/jonringer", "followers_url": "https://api.github.com/users/jonringer/followers", "following_url": "https://api.github.com/users/jonringer/following{/other_user}", "gists_url": "https://api.github.com/users/jonringer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonringer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonringer/subscriptions", "organizations_url": "https://api.github.com/users/jonringer/orgs", "repos_url": "https://api.github.com/users/jonringer/repos", "events_url": "https://api.github.com/users/jonringer/events{/privacy}", "received_events_url": "https://api.github.com/users/jonringer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-21T03:46:31Z", "updated_at": "2019-12-21T16:47:44Z", "closed_at": "2019-12-21T16:47:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nPackaging this for nixpkgs, and noticed the python3.7 test suite is broken with the following error:\r\n\r\n<details> <summary> Error log </summary>\r\n\r\n```\r\n======================================================================\r\nERROR: test_glob (pyfakefs.tests.fake_pathlib_test.FakePathlibPathFileOperationTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/pyfakefs-3.7/pyfakefs/tests/fake_pathlib_test.py\", line 710, in test_glob\r\n    self.assertEqual(sorted(path.glob('*.py')),\r\n  File \"/nix/store/v543lrn8xkx5ylsa6g59l8s74jx3nh6p-python3-3.7.6/lib/python3.7/pathlib.py\", line 1119, in glob\r\n    selector = _make_selector(tuple(pattern_parts), self._flavour)\r\n  File \"/nix/store/v543lrn8xkx5ylsa6g59l8s74jx3nh6p-python3-3.7.6/lib/python3.7/pathlib.py\", line 464, in _make_selector\r\n    return cls(pat, child_parts, flavour)\r\n  File \"/nix/store/v543lrn8xkx5ylsa6g59l8s74jx3nh6p-python3-3.7.6/lib/python3.7/pathlib.py\", line 520, in __init__\r\n    self.match = flavour.compile_pattern(pat)\r\nAttributeError: '_FakePosixFlavour' object has no attribute 'compile_pattern'\r\n\r\n======================================================================\r\nERROR: test_glob_case_posix (pyfakefs.tests.fake_pathlib_test.FakePathlibPathFileOperationTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/pyfakefs-3.7/pyfakefs/tests/fake_pathlib_test.py\", line 733, in test_glob_case_posix\r\n    self.assertEqual(sorted(path.glob('*.py')),\r\n  File \"/nix/store/v543lrn8xkx5ylsa6g59l8s74jx3nh6p-python3-3.7.6/lib/python3.7/pathlib.py\", line 1119, in glob\r\n    selector = _make_selector(tuple(pattern_parts), self._flavour)\r\n  File \"/nix/store/v543lrn8xkx5ylsa6g59l8s74jx3nh6p-python3-3.7.6/lib/python3.7/pathlib.py\", line 464, in _make_selector\r\n    return cls(pat, child_parts, flavour)\r\n  File \"/nix/store/v543lrn8xkx5ylsa6g59l8s74jx3nh6p-python3-3.7.6/lib/python3.7/pathlib.py\", line 520, in __init__\r\n    self.match = flavour.compile_pattern(pat)\r\nAttributeError: '_FakePosixFlavour' object has no attribute 'compile_pattern'\r\n\r\n======================================================================\r\nERROR: test_glob_case_windows (pyfakefs.tests.fake_pathlib_test.FakePathlibPathFileOperationTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/build/pyfakefs-3.7/pyfakefs/tests/fake_pathlib_test.py\", line 721, in test_glob_case_windows\r\n    self.assertEqual(sorted(path.glob('*.py')),\r\n  File \"/nix/store/v543lrn8xkx5ylsa6g59l8s74jx3nh6p-python3-3.7.6/lib/python3.7/pathlib.py\", line 1119, in glob\r\n    selector = _make_selector(tuple(pattern_parts), self._flavour)\r\n  File \"/nix/store/v543lrn8xkx5ylsa6g59l8s74jx3nh6p-python3-3.7.6/lib/python3.7/pathlib.py\", line 464, in _make_selector\r\n    return cls(pat, child_parts, flavour)\r\n  File \"/nix/store/v543lrn8xkx5ylsa6g59l8s74jx3nh6p-python3-3.7.6/lib/python3.7/pathlib.py\", line 520, in __init__\r\n    self.match = flavour.compile_pattern(pat)\r\nAttributeError: '_FakePosixFlavour' object has no attribute 'compile_pattern'\r\n\r\n----------------------------------------------------------------------\r\nRan 1901 tests in 4.445s\r\n\r\nFAILED (errors=3, skipped=745, expected failures=2)\r\n```\r\n</details>\r\n\r\nIt's also only failing on 3.7. 2.7,3.5,3.6,3.8 all seem to pass fine.\r\n\r\n**How To Reproduce**\r\n```\r\npython3.7 -m pyfakefs.tests.all_tests\r\n```\r\n\r\n**Your enviroment**\r\nPlease run the following and paste the output.\r\n```\r\n$ nix run nixpkgs.nix-info -c nix-info -m\r\n - system: `\"x86_64-linux\"`\r\n - host os: `Linux 5.4.3, NixOS, 20.03pre205780.d942688fc13 (Markhor)`\r\n - multi-user?: `yes`\r\n - sandbox: `yes`\r\n - version: `nix-env (Nix) 2.3.1`\r\n - channels(jon): `\"home-manager, nixos-20.03pre203904.bb1013511e1\"`\r\n - channels(root): `\"nixos-20.03pre205780.d942688fc13\"`\r\n - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixos`\r\n```\r\npyfakefs 3.7", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/507", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/507/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/507/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/507", "id": 541041015, "node_id": "MDU6SXNzdWU1NDEwNDEwMTU=", "number": 507, "title": "Calling `os.makedirs(..., exists_ok=True)` on a directory that is not writable raises the wrong exception", "user": {"login": "vtsatskin", "id": 1301625, "node_id": "MDQ6VXNlcjEzMDE2MjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1301625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtsatskin", "html_url": "https://github.com/vtsatskin", "followers_url": "https://api.github.com/users/vtsatskin/followers", "following_url": "https://api.github.com/users/vtsatskin/following{/other_user}", "gists_url": "https://api.github.com/users/vtsatskin/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtsatskin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtsatskin/subscriptions", "organizations_url": "https://api.github.com/users/vtsatskin/orgs", "repos_url": "https://api.github.com/users/vtsatskin/repos", "events_url": "https://api.github.com/users/vtsatskin/events{/privacy}", "received_events_url": "https://api.github.com/users/vtsatskin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-20T15:06:53Z", "updated_at": "2019-12-20T18:59:45Z", "closed_at": "2019-12-20T18:32:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen using `os.makedirs(..., exists_ok=True)` on a directory that does not have write permissions, the raised exception is not correct. `FileNotFoundError` is raised instead of an expected `PermissionError`. This is different from the expected behaviour when using real filesystem APIs.\r\n\r\n**How To Reproduce**\r\n\r\n```python\r\nimport os\r\nimport pytest\r\n\r\ndef test_write_error_raises_permission_error(fs) -> None:\r\n    fs.create_dir(\"/parent\", perm_bits=0o555)\r\n\r\n    with pytest.raises(PermissionError):\r\n        os.makedirs(\"/parent/dir\", exist_ok=True)\r\n```\r\n\r\npytest will fail stating that `FileNotFoundError` was raised instead of `PermissionError`.\r\n\r\nHere is a truncated output:\r\n\r\n```\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/REDACTED/.venv/python-3.6.7/lib/python3.6/site-packages/pyfakefs/fake_filesystem.py:4334: in makedirs\r\n    self.filesystem.makedirs(name, mode, exist_ok)\r\n/REDACTED/.venv/python-3.6.7/lib/python3.6/site-packages/pyfakefs/fake_filesystem.py:2912: in makedirs\r\n    not isinstance(self.resolve(dir_name), FakeDirectory)):\r\n/REDACTED/.venv/python-3.6.7/lib/python3.6/site-packages/pyfakefs/fake_filesystem.py:2065: in resolve\r\n    file_path, check_read_perm), check_read_perm)\r\n/REDACTED/.venv/python-3.6.7/lib/python3.6/site-packages/pyfakefs/fake_filesystem.py:2016: in get_object_from_normpath\r\n    self.raise_io_error(errno.ENOENT, file_path)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x10d0894e0>\r\nerrno = 2, filename = '/parent/dir'\r\n\r\n    def raise_io_error(self, errno, filename=None):\r\n        \"\"\"Raises IOError.\r\n        The error message is constructed from the given error code and shall\r\n        start with the error in the real system.\r\n    \r\n        Args:\r\n            errno: A numeric error code from the C variable errno.\r\n            filename: The name of the affected file, if any.\r\n        \"\"\"\r\n>       raise IOError(errno, self._error_message(errno), filename)\r\nE       FileNotFoundError: [Errno 2] No such file or directory in the fake filesystem: '/parent/dir'\r\n\r\n/REDACTED/.venv/python-3.6.7/lib/python3.6/site-packages/pyfakefs/fake_filesystem.py:996: FileNotFoundError\r\n```\r\n\r\nIf we attempt to do something similar with the real filesystem, the correct exception is raised and all the tests pass:\r\n\r\n```python\r\nimport os\r\nimport pytest\r\n\r\ndef test_real_write_error_raises_permission_error() -> None:\r\n    os.mkdir(\"parent\", mode=0o555)\r\n\r\n    with pytest.raises(PermissionError):\r\n        os.makedirs(\"parent/dir\", exist_ok=True)\r\n```\r\n\r\n\r\n\r\n**Your enviroment**\r\n```bash\r\nDarwin-19.0.0-x86_64-i386-64bit\r\nPython 3.6.7 (v3.6.7:6ec5cf24b7, Oct 20 2018, 03:02:14) \r\n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)]\r\npyfakefs 3.7\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/505", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/505/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/505/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/505", "id": 532069954, "node_id": "MDU6SXNzdWU1MzIwNjk5NTQ=", "number": 505, "title": "Usage with importlib.resources.path", "user": {"login": "a-recknagel", "id": 2063412, "node_id": "MDQ6VXNlcjIwNjM0MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2063412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-recknagel", "html_url": "https://github.com/a-recknagel", "followers_url": "https://api.github.com/users/a-recknagel/followers", "following_url": "https://api.github.com/users/a-recknagel/following{/other_user}", "gists_url": "https://api.github.com/users/a-recknagel/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-recknagel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-recknagel/subscriptions", "organizations_url": "https://api.github.com/users/a-recknagel/orgs", "repos_url": "https://api.github.com/users/a-recknagel/repos", "events_url": "https://api.github.com/users/a-recknagel/events{/privacy}", "received_events_url": "https://api.github.com/users/a-recknagel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786278, "node_id": "MDU6TGFiZWwxODc3ODYyNzg=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-03T15:34:02Z", "updated_at": "2019-12-04T10:09:34Z", "closed_at": "2019-12-03T21:33:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Bug description**\r\nWhen using `pyfakefs` together with `pytest`, `importlib.resources.path` will break with an `IsADirectoryError`.  I also posted this to [stackoverflow](https://stackoverflow.com/questions/59160123/how-to-use-pyfakefs-in-conjunction-with-importlib-resources-path) before thinking that it might be more appropriate to file a bug over here.\r\n\r\n**How To Reproduce**\r\n_foo.py_:\r\n```python\r\nimport importlib.resources\r\n\r\ndef print_package_path():\r\n    with importlib.resources.path(\"importlib\", \"\") as path:\r\n        print(path)\r\n\r\ndef test_package_path(fs):\r\n    print_package_path()\r\n\r\nif __name__ == \"__main__\":\r\n    print_package_path()\r\n```\r\nJust to make sure that functionality itself of `importlib` is ok:\r\n```bash\r\n$ python foo.py\r\n/home/me/venv/lib/python3.8/importlib\r\n```\r\nNow running the test:\r\n```bash\r\n$ pytest foo.py\r\n================================ test session starts =========================\r\nplatform linux -- Python 3.8.0+, pytest-5.3.1, py-1.8.0, pluggy-0.13.1\r\nrootdir: /home/me/\r\nplugins: pyfakefs-4.0\r\ncollected 1 item                               \r\nfoo.py F                                                                 [100%]\r\n\r\n================================ FAILURES ====================================\r\n______________________________ test_package_path _____________________________\r\n\r\nfs = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x7f84f2996910>\r\n\r\n    def test_package_path(fs):\r\n>       print_package_path()\r\n\r\n/home/me/foo.py:11: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n/home/me/foo.py:4: in print_package_path\r\n    with importlib.resources.path(\"importlib\", \"\") as path:\r\n/home/me/pythons/python_3.8/lib/python3.8/contextlib.py:113: in __enter__\r\n    return next(self.gen)\r\n/home/me/venv/lib/python3.8/importlib/resources.py:201: in path\r\n    with open_binary(package, resource) as fp:\r\n/home/me/venv/lib/python3.8/importlib/resources.py:91: in open_binary\r\n    return reader.open_resource(resource)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <_frozen_importlib_external.SourceFileLoader object at 0x7f84f7527370>\r\nresource = ''\r\n\r\n>   ???\r\nE   IsADirectoryError: [Errno 21] Is a directory: '/home/me/venv/lib/python3.8/importlib'\r\n\r\n<frozen importlib._bootstrap_external>:988: IsADirectoryError\r\n============================= 1 failed in 0.17s ===============================\r\n```\r\n\r\n**My enviroment**\r\n```bash\r\n$ python -c \"import platform; print(platform.platform())\"\r\nLinux-5.0.0-36-generic-x86_64-with-glibc2.27\r\n$ python -c \"import sys; print('Python', sys.version)\"\r\nPython 3.8.0+ (heads/3.8:380d443a6a, Oct 18 2019, 09:26:34) \r\n[GCC 7.4.0]\r\n$ python -c \"from pyfakefs.fake_filesystem import __version__; print('pyfakefs', __version__)\"\r\npyfakefs 4.0  # also tested on 3.7\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/504", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/504/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/504/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/504", "id": 523824368, "node_id": "MDU6SXNzdWU1MjM4MjQzNjg=", "number": 504, "title": "CI tests failing for Python 3.8", "user": {"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-16T09:54:04Z", "updated_at": "2019-11-22T20:42:21Z", "closed_at": "2019-11-22T20:42:21Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Adding Python 3.8 to the CI tests shows several failing unit tests:\r\n- in the [linux tests](https://travis-ci.org/mrbean-bremen/pyfakefs/jobs/612744562), several of the shutil tests are failing\r\n- under [MacOS](https://travis-ci.org/mrbean-bremen/pyfakefs/jobs/612744568), 2 of the pytest tests fail\r\n- in [Windows](https://ci.appveyor.com/project/mrbean-bremen/pyfakefs/builds/28903243/job/4qrtt39p4butvpfy), both shutil tests and several real OS tests fail\r\n\r\nTo be fixed:\r\n- [x] shutil: os.sendfile not implemented (linux only)\r\n- [x] shutil: DirEntry cannot be converted to PathLike (linux/windows)\r\n- [x] shutil: missing Windows specific attributes in os.stat_result (windows)\r\n- [x] devnull is now supported (windows only)\r\n- [x] test_add_existing_real_directory_symlink fails (windows only)\r\n- [x] UNC local paths may be returned by os.readlink (windows)\r\n- [x] shutil: _fastcopy_fcopyfile uses system calls (macos only)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/502", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/502/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/502/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/502/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/502", "id": 522395909, "node_id": "MDU6SXNzdWU1MjIzOTU5MDk=", "number": 502, "title": "Cannot os.remove a file after calling os.DirEntry.stat() on it ", "user": {"login": "radoslawg", "id": 227430, "node_id": "MDQ6VXNlcjIyNzQzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/227430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radoslawg", "html_url": "https://github.com/radoslawg", "followers_url": "https://api.github.com/users/radoslawg/followers", "following_url": "https://api.github.com/users/radoslawg/following{/other_user}", "gists_url": "https://api.github.com/users/radoslawg/gists{/gist_id}", "starred_url": "https://api.github.com/users/radoslawg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radoslawg/subscriptions", "organizations_url": "https://api.github.com/users/radoslawg/orgs", "repos_url": "https://api.github.com/users/radoslawg/repos", "events_url": "https://api.github.com/users/radoslawg/events{/privacy}", "received_events_url": "https://api.github.com/users/radoslawg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-13T18:27:48Z", "updated_at": "2019-11-13T19:54:51Z", "closed_at": "2019-11-13T19:54:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen a os.scandir() is followed by stat() function on a file, pyfakefs refuses to os.remove the file ending with Except.\r\n\r\n**How To Reproduce**\r\nConsider following testcase:\r\n```\r\ndef test_perm_bug(fs):\r\n    fs.create_file('\\\\phonyDir\\\\testfile', contents='test')\r\n    x = os.scandir('\\\\phonyDir')\r\n    for z in x:\r\n        print(z.stat().st_size)\r\n    x.close()\r\n    os.remove('\\\\phonyDir\\\\testfile')\r\n```\r\n\r\nit ends with\r\n```\r\nc:\\home\\mojepliki\\python\\dupfinder\\lib\\site-packages\\pyfakefs\\fake_filesystem.py:4143: in remove\r\n    self.filesystem.remove(path)\r\nc:\\home\\mojepliki\\python\\dupfinder\\lib\\site-packages\\pyfakefs\\fake_filesystem.py:3028: in remove\r\n    self.remove_object(norm_path)\r\nc:\\home\\mojepliki\\python\\dupfinder\\lib\\site-packages\\pyfakefs\\fake_filesystem.py:2295: in remove_object\r\n    target_directory.remove_entry(basename)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <pyfakefs.fake_filesystem.FakeDirectory object at 0x000002D3BC0F3788>\r\npathname_name = 'testfile', recursive = True\r\n\r\n    def remove_entry(self, pathname_name, recursive=True):\r\n        \"\"\"Removes the specified child file or directory.\r\n    \r\n        Args:\r\n            pathname_name: Basename of the child object to remove.\r\n            recursive: If True (default), the entries in contained directories\r\n                are deleted first. Used to propagate removal errors\r\n                (e.g. permission problems) from contained entries.\r\n    \r\n        Raises:\r\n            KeyError: if no child exists by the specified name.\r\n            OSError: if user lacks permission to delete the file,\r\n                or (Windows only) the file is open.\r\n        \"\"\"\r\n        pathname_name = self._normalized_entryname(pathname_name)\r\n        entry = self.get_entry(pathname_name)\r\n        if self.filesystem.is_windows_fs:\r\n            if entry.st_mode & PERM_WRITE == 0:\r\n                self.filesystem.raise_os_error(errno.EACCES, pathname_name)\r\n            if self.filesystem.has_open_file(entry):\r\n                self.filesystem.raise_os_error(errno.EACCES, pathname_name)\r\n        else:\r\n            if (not is_root() and (self.st_mode & (PERM_WRITE | PERM_EXE) !=\r\n                                   PERM_WRITE | PERM_EXE)):\r\n                self.filesystem.raise_os_error(errno.EACCES, pathname_name)\r\n    \r\n        if recursive and isinstance(entry, FakeDirectory):\r\n            while entry.contents:\r\n                entry.remove_entry(list(entry.contents)[0])\r\n        elif entry.st_nlink == 1:\r\n            self.filesystem.change_disk_usage(\r\n                -entry.size, pathname_name, entry.st_dev)\r\n    \r\n        self.st_nlink -= 1\r\n        entry.st_nlink -= 1\r\n>       assert entry.st_nlink >= 0\r\nE       assert -1 >= 0\r\nE        +  where -1 = <pyfakefs.fake_filesystem.FakeFile object at 0x000002D3BC0F3548>.st_nlink\r\n\r\nc:\\home\\mojepliki\\python\\dupfinder\\lib\\site-packages\\pyfakefs\\fake_filesystem.py:738: AssertionError\r\n```\r\n\r\n**Your enviroment**\r\n```\r\nWindows-10-10.0.18362-SP0\r\nPython 3.7.5 (tags/v3.7.5:5c02a39a0b, Oct 15 2019, 00:11:34) [MSC v.1916 64 bit (AMD64)]\r\npyfakefs 3.6.1\r\n```\r\n\r\nWorkaround is to use os.stat() instead of os.DirEntry.stat() . ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/501", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/501/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/501/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/501", "id": 521603287, "node_id": "MDU6SXNzdWU1MjE2MDMyODc=", "number": 501, "title": "disutil commands fails for multiple tests ", "user": {"login": "bspradling", "id": 8116831, "node_id": "MDQ6VXNlcjgxMTY4MzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8116831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bspradling", "html_url": "https://github.com/bspradling", "followers_url": "https://api.github.com/users/bspradling/followers", "following_url": "https://api.github.com/users/bspradling/following{/other_user}", "gists_url": "https://api.github.com/users/bspradling/gists{/gist_id}", "starred_url": "https://api.github.com/users/bspradling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bspradling/subscriptions", "organizations_url": "https://api.github.com/users/bspradling/orgs", "repos_url": "https://api.github.com/users/bspradling/repos", "events_url": "https://api.github.com/users/bspradling/events{/privacy}", "received_events_url": "https://api.github.com/users/bspradling/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-12T14:59:15Z", "updated_at": "2020-06-24T18:15:13Z", "closed_at": "2019-11-13T18:34:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhile running multiple tests trying to use `disutil` to copy files between directories, every test after the first will fail.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"tests/plugins/pyfakefs_test.py\", line 29, in test_file_copied_again\r\n  File \"/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dir_util.py\", line 163, in copy_tree\r\n  File \"/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dir_util.py\", line 167, in copy_tree\r\n  File \"/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/file_util.py\", line 110, in copy_file\r\nDistutilsFileError: can't copy './test2/subdir/1.txt': doesn't exist or not a regular file\r\n```\r\n\r\nWhen running this tests in isolation (one at a time), they both succeed.\r\n\r\n**How To Reproduce**\r\nPlease provide a unit test or a minimal code snippet that reproduces the \r\nproblem.\r\n```import os\r\nimport unittest\r\n\r\nfrom distutils.dir_util import copy_tree, remove_tree\r\nfrom pyfakefs.fake_filesystem_unittest import TestCase\r\n\r\n\r\nclass DataLossPluginTests(TestCase):\r\n\r\n    def setUp(self):\r\n        self.setUpPyfakefs()\r\n        self.bootstrap_fake_file_system(self)\r\n\r\n    def test_file_copied(self):\r\n        copy_tree(\"./test2/\", \"./test/\")\r\n        remove_tree(\"./test2/\")\r\n\r\n        self.assertTrue(os.path.isfile('./test/subdir/1.txt'))\r\n        self.assertFalse(os.path.isdir('./test2/'))\r\n\r\n    def test_file_copied_again(self):\r\n\r\n        self.assertTrue(os.path.isfile('./test2/subdir/1.txt'))\r\n\r\n        copy_tree(\"./test2/\", \"./test/\")\r\n        remove_tree(\"./test2/\")\r\n\r\n        self.assertTrue(os.path.isfile('./test/subdir/1.txt'))\r\n        self.assertFalse(os.path.isdir('./test2/'))\r\n\r\n    @staticmethod\r\n    def bootstrap_fake_file_system(self):\r\n        self.fs.create_dir(\"./test/subdir/\")\r\n        self.fs.create_dir(\"./test/subdir2/\")\r\n        self.fs.create_dir(\"./test2/subdir/\")\r\n\r\n        self.fs.create_file(\"./test2/subdir/1.txt\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n```\r\n\r\n**Your enviroment**\r\nPlease run the following and paste the output.\r\n```bash\r\npython -c \"import platform; print(platform.platform())\"\r\n`Darwin-19.0.0-x86_64-i386-64bit`\r\npython -c \"import sys; print('Python', sys.version)\"\r\n`('Python', '2.7.15 (default, Sep 18 2018, 20:30:39) \\n[GCC 4.2.1 Compatible Apple LLVM 10.0.0 (clang-1000.10.43.1)]')`\r\npython -c \"from pyfakefs.fake_filesystem import __version__; print('pyfakefs', __version__)\"\r\n`('pyfakefs', '3.6.1')`\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/500", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/500/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/500/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/500", "id": 516876107, "node_id": "MDU6SXNzdWU1MTY4NzYxMDc=", "number": 500, "title": "Failed tests do not lead to failed builds", "user": {"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 634637961, "node_id": "MDU6TGFiZWw2MzQ2Mzc5NjE=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/infrastructure", "name": "infrastructure", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-03T19:23:34Z", "updated_at": "2019-11-04T19:44:31Z", "closed_at": "2019-11-04T19:44:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Failing tests do not always lead to failed builds in Travis.CI, for example [this build](https://travis-ci.org/jmcgeheeiv/pyfakefs/jobs/606166603) is shown as succeded while many tests fail.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/499", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/499/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/499/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/499", "id": 516875590, "node_id": "MDU6SXNzdWU1MTY4NzU1OTA=", "number": 499, "title": "Scandir does not always support int fd", "user": {"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-03T19:19:29Z", "updated_at": "2019-11-04T17:55:59Z", "closed_at": "2019-11-04T17:55:59Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "In the Travis tests, some of the MacOS tests fail like this:\r\n```\r\nERROR: test_index_access_to_stat_times_returns_int (pyfakefs.tests.fake_os_test.RealScandirFdRelTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/Users/travis/build/jmcgeheeiv/pyfakefs/pyfakefs/tests/fake_os_test.py\", line 4784, in setUp\r\n    self.dir_entries = list(self.do_scandir())\r\n  File \"/Users/travis/build/jmcgeheeiv/pyfakefs/pyfakefs/tests/fake_os_test.py\", line 5007, in do_scandir\r\n    return self.scandir(self.dir_fd)\r\nTypeError: scandir: illegal type for path parameter\r\n```\r\nThis seems to depend on the used scandir version. The tests and the code shall be adapted to emulate the real behavior.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/498", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/498/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/498/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/498", "id": 512281537, "node_id": "MDU6SXNzdWU1MTIyODE1Mzc=", "number": 498, "title": "os.scandir do not raise OSError when target is not directory", "user": {"login": "Gapex", "id": 14359901, "node_id": "MDQ6VXNlcjE0MzU5OTAx", "avatar_url": "https://avatars1.githubusercontent.com/u/14359901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gapex", "html_url": "https://github.com/Gapex", "followers_url": "https://api.github.com/users/Gapex/followers", "following_url": "https://api.github.com/users/Gapex/following{/other_user}", "gists_url": "https://api.github.com/users/Gapex/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gapex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gapex/subscriptions", "organizations_url": "https://api.github.com/users/Gapex/orgs", "repos_url": "https://api.github.com/users/Gapex/repos", "events_url": "https://api.github.com/users/Gapex/events{/privacy}", "received_events_url": "https://api.github.com/users/Gapex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-25T03:22:52Z", "updated_at": "2020-06-24T18:15:25Z", "closed_at": "2019-11-01T19:36:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nAs stated in the doc of scandir in pyfakefs, https://github.com/jmcgeheeiv/pyfakefs/blob/master/pyfakefs/fake_scandir.py#L186, scandir raises OSError if target is not directory, but acutally not.\r\n\r\n```python\r\nimport os\r\n\r\nfrom pyfakefs.fake_filesystem_unittest import Patcher\r\n\r\nwith Patcher() as patcher:\r\n    print(os.listdir('.'))\r\n    print(list(os.scandir('not_exist_dir')))\r\n\r\nprint(os.listdir('.'))\r\nprint(list(os.scandir('not_exist_dir')))\r\n```\r\n\r\n\r\nrun the above code: python main2.py, output:\r\n```shell\r\n['tmp']\r\n[]\r\n['main2.py']\r\nTraceback (most recent call last):\r\n  File \"main2.py\", line 10, in <module>\r\n    print(list(os.scandir('not_exist_dir')))\r\nFileNotFoundError: [Errno 2] No such file or directory: 'not_exist_dir'\r\n```\r\n\r\n\r\n**My enviroment**\r\n```bash\r\nLinux-4.15.0-55.60-x86_64-with-debian-stretch-sid\r\n\r\n\r\nPython 3.6.4 |Anaconda, Inc.| (default, Mar 13 2018, 01:15:57) \r\n[GCC 7.2.0]\r\n\r\noutput: pyfakefs 3.6.1\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/496", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/496/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/496/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/496", "id": 504719199, "node_id": "MDU6SXNzdWU1MDQ3MTkxOTk=", "number": 496, "title": "Chmod on directories has no effect on readability", "user": {"login": "ian-h-chamberlain", "id": 11131775, "node_id": "MDQ6VXNlcjExMTMxNzc1", "avatar_url": "https://avatars0.githubusercontent.com/u/11131775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ian-h-chamberlain", "html_url": "https://github.com/ian-h-chamberlain", "followers_url": "https://api.github.com/users/ian-h-chamberlain/followers", "following_url": "https://api.github.com/users/ian-h-chamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/ian-h-chamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ian-h-chamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ian-h-chamberlain/subscriptions", "organizations_url": "https://api.github.com/users/ian-h-chamberlain/orgs", "repos_url": "https://api.github.com/users/ian-h-chamberlain/repos", "events_url": "https://api.github.com/users/ian-h-chamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/ian-h-chamberlain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2019-10-09T15:15:09Z", "updated_at": "2019-11-06T18:06:25Z", "closed_at": "2019-11-05T20:24:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nAfter creating a directory with files in it in the fake filesystem, then changing its permissions to disallow `r/w/x`, it is still possible to read the contents of the directory.\r\n\r\nIn a real filesystem, a directory with perms `000` would raise `PermissionsError` when attempting to read the directory contents.\r\n\r\nThis is not an instance of #489\u00a0\u2013 these tests still fail even when run as non-root user.\r\n\r\n**How To Reproduce**\r\n```py\r\n\"\"\"Minimal reproduction of directory permissions issues\"\"\"\r\n\r\nimport os\r\nimport pathlib\r\nimport stat\r\n\r\nimport pytest\r\n\r\n\r\n@pytest.fixture\r\ndef unreadable_dir(fs):\r\n    fs.create_file(\"/tmp/unreadable/file\")\r\n    os.chmod(\"/tmp/unreadable\", 0o000)\r\n    return fs\r\n\r\n\r\ndef test_read_dir_os(unreadable_dir):\r\n    with pytest.raises(OSError):\r\n        os.listdir(\"/tmp/unreadable\")  # Does not raise\r\n\r\n    with pytest.raises(OSError):\r\n        os.stat(\"/tmp/unreadable/file\")  # Does not raise\r\n\r\n\r\ndef test_dir_permissions_os(unreadable_dir):\r\n    assert stat.S_IMODE(os.stat(\"/tmp/unreadable\").st_mode) == 0o000\r\n\r\n\r\ndef test_read_dir_pathlib(unreadable_dir):\r\n    path = pathlib.Path(\"/tmp/unreadable\")\r\n\r\n    with pytest.raises(OSError):\r\n        path.iterdir()  # Does not raise\r\n\r\n    with pytest.raises(OSError):\r\n        (path / \"file\").stat()  # Does not raise\r\n\r\n\r\ndef test_dir_permissions_pathlib(unreadable_dir):\r\n    path = pathlib.Path(\"/tmp/unreadable\")\r\n    assert stat.S_IMODE(path.stat().st_mode) == 0o000\r\n\r\n```\r\n\r\n**Your enviroment**\r\n```bash\r\n$ python -c \"import platform; print(platform.platform())\"\r\nDarwin-18.7.0-x86_64-i386-64bit\r\n$ python -c \"import sys; print('Python', sys.version)\"\r\nPython 3.6.5 (default, Jan 29 2019, 13:07:11)\r\n[GCC 4.2.1 Compatible Apple LLVM 10.0.0 (clang-1000.11.45.5)]\r\n$ python -c \"from pyfakefs.fake_filesystem import __version__; print('pyfakefs', __version__)\"\r\npyfakefs 3.6.1\r\n```\r\n\r\nThe same symptoms seem to occur when tested on platform\r\n```\r\nLinux-3.10.0-514.el7.x86_64-x86_64-with-centos-7.5.1804-Core\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/495", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/495/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/495/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/495", "id": 503316616, "node_id": "MDU6SXNzdWU1MDMzMTY2MTY=", "number": 495, "title": "Pyfakefs 3.6 test failures", "user": {"login": "scarabeusiv", "id": 1055830, "node_id": "MDQ6VXNlcjEwNTU4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarabeusiv", "html_url": "https://github.com/scarabeusiv", "followers_url": "https://api.github.com/users/scarabeusiv/followers", "following_url": "https://api.github.com/users/scarabeusiv/following{/other_user}", "gists_url": "https://api.github.com/users/scarabeusiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarabeusiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarabeusiv/subscriptions", "organizations_url": "https://api.github.com/users/scarabeusiv/orgs", "repos_url": "https://api.github.com/users/scarabeusiv/repos", "events_url": "https://api.github.com/users/scarabeusiv/events{/privacy}", "received_events_url": "https://api.github.com/users/scarabeusiv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 634637961, "node_id": "MDU6TGFiZWw2MzQ2Mzc5NjE=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/infrastructure", "name": "infrastructure", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-07T08:55:50Z", "updated_at": "2020-06-24T18:15:44Z", "closed_at": "2019-10-07T17:04:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "When updating pyfakefs from 3.5.8 to 3.6 release on openSUSE 3 of the tests fail:\r\n\r\n```\r\n[   16s] ======================================================================\r\n[   16s] FAIL: test_append_mode_tell_linux_windows (pyfakefs.tests.fake_os_test.RealOsModuleTest)\r\n[   16s] ----------------------------------------------------------------------\r\n[   16s] Traceback (most recent call last):\r\n[   16s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.6/pyfakefs/tests/fake_os_test.py\", line 1224, in test_append_mode_tell_linux_windows\r\n[   16s]     self.check_append_mode_tell_after_truncate(tell_result)\r\n[   16s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.6/pyfakefs/tests/fake_os_test.py\", line 1216, in check_append_mode_tell_after_truncate\r\n[   16s]     self.assertEqual(tell_result, f1.tell())\r\n[   16s] AssertionError: 5 != 7L\r\n[   16s] \r\n[   16s] ======================================================================\r\n[   16s] FAIL: test_fdatasync_pass (pyfakefs.tests.fake_os_test.RealOsModuleTest)\r\n[   16s] ----------------------------------------------------------------------\r\n[   16s] Traceback (most recent call last):\r\n[   16s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.6/pyfakefs/tests/fake_os_test.py\", line 1768, in test_fdatasync_pass\r\n[   16s]     self.os.fdatasync, test_fd + 10)\r\n[   16s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.6/pyfakefs/tests/test_utils.py\", line 73, in assert_raises_os_error\r\n[   16s]     self.assertEqual(subtype, exc.errno)\r\n[   16s] AssertionError: 9 != 22\r\n[   16s] \r\n[   16s] ======================================================================\r\n[   16s] FAIL: test_fsync_pass_posix (pyfakefs.tests.fake_os_test.RealOsModuleTest)\r\n[   16s] ----------------------------------------------------------------------\r\n[   16s] Traceback (most recent call last):\r\n[   16s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.6/pyfakefs/tests/fake_os_test.py\", line 1740, in test_fsync_pass_posix\r\n[   16s]     self.os.fsync, test_fd + 10)\r\n[   16s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.6/pyfakefs/tests/test_utils.py\", line 73, in assert_raises_os_error\r\n[   16s]     self.assertEqual(subtype, exc.errno)\r\n[   16s] AssertionError: 9 != 22\r\n[   16s] \r\n[   16s] ----------------------------------------------------------------------\r\n```\r\n\r\nThe tests fail the same way both on py2 and py3.\r\n\r\nThis is bit problematic for us now as we need 3.6 because we prepare update for pyton 3.8 (where the old 3.5.8 does not work).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/492", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/492/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/492/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/492/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/492", "id": 476479178, "node_id": "MDU6SXNzdWU0NzY0NzkxNzg=", "number": 492, "title": "Drop support for Python 2", "user": {"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 634637961, "node_id": "MDU6TGFiZWw2MzQ2Mzc5NjE=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/infrastructure", "name": "infrastructure", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-03T18:51:01Z", "updated_at": "2019-11-24T18:46:52Z", "closed_at": "2019-11-24T18:46:52Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Support for Python ends in January 2019, and many projects are [committed to drop support](https://python3statement.org/) at that date or before.\r\nI propose to officially drop support for Python 2 in pyfakefs 4.0, which may be released somewhere at the start of 2019 or even earlier, and leave open the possibility for updates to a previous version in case a fix is really needed for Python 2. I would also drop support of the old deprecated API with the same version. \r\nThis will make it possible to better support Python 3 and have cleaner code (I already made [a branch](https://github.com/jmcgeheeiv/pyfakefs/tree/version4) some time ago where I tried that out).\r\nWhat do you think?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/489", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/489/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/489/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/489", "id": 457728453, "node_id": "MDU6SXNzdWU0NTc3Mjg0NTM=", "number": 489, "title": "pyfakefs seemingly ignores file permissions on write()", "user": {"login": "mcallaghan-bsm", "id": 48924626, "node_id": "MDQ6VXNlcjQ4OTI0NjI2", "avatar_url": "https://avatars1.githubusercontent.com/u/48924626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcallaghan-bsm", "html_url": "https://github.com/mcallaghan-bsm", "followers_url": "https://api.github.com/users/mcallaghan-bsm/followers", "following_url": "https://api.github.com/users/mcallaghan-bsm/following{/other_user}", "gists_url": "https://api.github.com/users/mcallaghan-bsm/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcallaghan-bsm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcallaghan-bsm/subscriptions", "organizations_url": "https://api.github.com/users/mcallaghan-bsm/orgs", "repos_url": "https://api.github.com/users/mcallaghan-bsm/repos", "events_url": "https://api.github.com/users/mcallaghan-bsm/events{/privacy}", "received_events_url": "https://api.github.com/users/mcallaghan-bsm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2158989082, "node_id": "MDU6TGFiZWwyMTU4OTg5MDgy", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/not-a-bug", "name": "not-a-bug", "color": "19a8a5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-18T22:45:10Z", "updated_at": "2020-06-24T18:16:06Z", "closed_at": "2019-06-19T14:48:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWe have come across this seemingly impossible scenario, where despite creating a file in pyfakefs, with completely removed permissions (effectively chmod `000`), it is STILL allowed to write and read from it.\r\n\r\n**How To Reproduce**\r\nHere follows an example suite of tests:\r\n``` python\r\nclass TestCaseExample(TestCase):\r\n\r\n\r\n    def setUp(self):\r\n        self.setUpPyfakefs()\r\n\r\n    def test_create_file(self):\r\n        file_path = 'file_foo.txt'\r\n\r\n        self.assertFalse(os.path.exists(file_path))\r\n        self.fs.create_file(file_path)\r\n        self.assertTrue(os.path.exists(file_path))\r\n\r\n    def test_default_file_perms(self):\r\n        file_path = 'file_bar.txt'\r\n\r\n        self.fs.create_file(file_path)\r\n        self.assertTrue(os.path.exists(file_path))\r\n\r\n        default_mask = 0o666\r\n        initial_mask = stat.S_IMODE(os.lstat(file_path).st_mode)\r\n        assert initial_mask == 0o666\r\n\r\n    def test_impossible_write_capability(self):\r\n        file_path = 'file_bat.txt'\r\n\r\n        self.fs.create_file(file_path)\r\n        self.assertTrue(os.path.exists(file_path))\r\n\r\n        default_mask = 0o666\r\n        initial_mask = stat.S_IMODE(os.lstat(file_path).st_mode)\r\n        assert initial_mask == default_mask\r\n\r\n        no_write_mask = 0o000\r\n        os.chmod(file_path, no_write_mask)\r\n        new_mask = stat.S_IMODE(os.lstat(file_path).st_mode)\r\n        assert new_mask == no_write_mask\r\n\r\n        # HERE ON SHOULD FAIL, but it does not\r\n        # previously we set (and asserted) that the file mask is now `000`\r\n\r\n        with open(file_path, 'w') as f:\r\n            f.write('This should NOT be possible\\n')\r\n\r\n        with open(file_path) as f:\r\n            print(f.read())\r\n```\r\n\r\nWe EXPECT `test_create_file` and `test_default_file_perms` to PASS, and `test_impossible_write_capability` to FAIL.  The failure is because in that last test we change the permissions to chmod `000`, _yet_, these commands do not throw.\r\n\r\nRun it like so:\r\n```\r\n(app) root@dbac90fda4f0:/app# python3 -m pytest tests/ut/pyfakefs/test_perms.py \r\nTest session starts (platform: linux, Python 3.7.3, pytest 4.6.3, pytest-sugar 0.9.2)\r\ncachedir: .pytest_cache\r\nrootdir: /app, inifile: pytest.ini\r\nplugins: cov-2.7.1, sugar-0.9.2, pyfakefs-3.5.8, mock-1.10.4\r\ncollecting ... \r\n tests/ut/pyfakefs/test_perms.py::TestCaseExample.test_create_file \u2713                                                                                                                                 33% \u2588\u2588\u2588\u258d      \r\n tests/ut/pyfakefs/test_perms.py::TestCaseExample.test_default_file_perms \u2713                                                                                                                          67% \u2588\u2588\u2588\u2588\u2588\u2588\u258b   \r\n tests/ut/pyfakefs/test_perms.py::TestCaseExample.test_impossible_write_capability \u2713                                                                                                                100% \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588Coverage.py warning: No data was collected. (no-data-collected)\r\n\r\n(snip coverages)\r\n\r\nResults (0.89s):\r\n       3 passed\r\n```\r\n\r\n**Your enviroment**\r\n\r\nNote that we are in a docker, inside of python venv (via pipenv).\r\n``` bash\r\n(app) root@dbac90fda4f0:/app# which python3\r\n/root/.local/share/virtualenvs/app-4PlAip0Q/bin/python3\r\n(app) root@dbac90fda4f0:/app# pipenv --version\r\npipenv, version 2018.11.26\r\n```\r\n\r\n```bash\r\n(app) root@dbac90fda4f0:/app# python -c \"import platform; print(platform.platform())\"\r\nLinux-4.15.0-51-generic-x86_64-with-debian-9.9\r\n(app) root@dbac90fda4f0:/app# python -c \"import sys; print('Python', sys.version)\"\r\nPython 3.7.3 (default, May  8 2019, 05:31:59) \r\n[GCC 6.3.0 20170516]\r\n(app) root@dbac90fda4f0:/app# python -c \"from pyfakefs.fake_filesystem import __version__; print('pyfakefs', __version__)\"\r\npyfakefs 3.5.8\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/487", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/487/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/487/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/487", "id": 446946005, "node_id": "MDU6SXNzdWU0NDY5NDYwMDU=", "number": 487, "title": "TravisCI osx PYTHON=py37 running with python 2.7.15", "user": {"login": "mlouielu", "id": 28770408, "node_id": "MDQ6VXNlcjI4NzcwNDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/28770408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlouielu", "html_url": "https://github.com/mlouielu", "followers_url": "https://api.github.com/users/mlouielu/followers", "following_url": "https://api.github.com/users/mlouielu/following{/other_user}", "gists_url": "https://api.github.com/users/mlouielu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlouielu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlouielu/subscriptions", "organizations_url": "https://api.github.com/users/mlouielu/orgs", "repos_url": "https://api.github.com/users/mlouielu/repos", "events_url": "https://api.github.com/users/mlouielu/events{/privacy}", "received_events_url": "https://api.github.com/users/mlouielu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 634637961, "node_id": "MDU6TGFiZWw2MzQ2Mzc5NjE=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/infrastructure", "name": "infrastructure", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-22T05:58:27Z", "updated_at": "2019-05-23T18:31:59Z", "closed_at": "2019-05-23T18:31:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nTravisCI osx PYTHON=py37 running with python 2.7.15\r\n\r\nhttps://travis-ci.org/jmcgeheeiv/pyfakefs/jobs/535596996\r\n\r\n```\r\nBuild system information\r\nBuild language: generic\r\nBuild id: 535596986\r\nJob id: 535596996\r\nRuntime kernel version: 17.4.0\r\ntravis-build version: 0696e6115\r\nBuild image provisioning date and time\r\nMon Jun 25 21:55:14 GMT 2018\r\nOperating System Details\r\nProductName:\tMac OS X\r\nProductVersion:\t10.13.3\r\nBuildVersion:\t17D102\r\nGit version\r\ngit version 2.18.0\r\nbash version\r\nGNU bash, version 3.2.57(1)-release (x86_64-apple-darwin17)\r\nCopyright (C) 2007 Free Software Foundation, Inc.\r\nGCC version\r\nApple LLVM version 9.1.0 (clang-902.0.39.2)\r\nTarget: x86_64-apple-darwin17.4.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode-9.4.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\nLLVM version\r\nApple LLVM version 9.1.0 (clang-902.0.39.2)\r\nTarget: x86_64-apple-darwin17.4.0\r\nThread model: posix\r\nInstalledDir: /Applications/Xcode-9.4.1.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin\r\nPre-installed Ruby versions\r\nruby-2.3.5\r\nruby-2.4.3\r\nPre-installed Node.js versions\r\nv4.9.1\r\nv5.12.0\r\nv6.14.3\r\nv8.11.3\r\nmvn -version\r\nApache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T18:33:14Z)\r\nMaven home: /usr/local/Cellar/maven/3.5.4/libexec\r\nJava version: 10.0.1, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk-10.0.1.jdk/Contents/Home\r\nDefault locale: en_US, platform encoding: UTF-8\r\nOS name: \"mac os x\", version: \"10.13.3\", arch: \"x86_64\", family: \"mac\"\r\nUninstalled oclint to prevent interference with other packages.\r\nIf you need oclint, you must explicitly install it.\r\ngit.checkout\r\n0.51s$ git clone --depth=50 https://github.com/jmcgeheeiv/pyfakefs.git jmcgeheeiv/pyfakefs\r\nCloning into 'jmcgeheeiv/pyfakefs'...\r\nremote: Enumerating objects: 400, done.\r\nremote: Counting objects: 100% (400/400), done.\r\nremote: Compressing objects: 100% (169/169), done.\r\nremote: Total 400 (delta 268), reused 317 (delta 225), pack-reused 0\r\nReceiving objects: 100% (400/400), 266.09 KiB | 7.00 MiB/s, done.\r\nResolving deltas: 100% (268/268), done.\r\n$ cd jmcgeheeiv/pyfakefs\r\n0.34s$ git fetch origin +refs/pull/486/merge:\r\nremote: Enumerating objects: 14, done.\r\nremote: Counting objects: 100% (14/14), done.\r\nremote: Compressing objects: 100% (2/2), done.\r\nremote: Total 8 (delta 7), reused 6 (delta 6), pack-reused 0\r\nUnpacking objects: 100% (8/8), done.\r\nFrom https://github.com/jmcgeheeiv/pyfakefs\r\n * branch            refs/pull/486/merge -> FETCH_HEAD\r\n$ git checkout -qf FETCH_HEAD\r\nSetting environment variables from .travis.yml\r\n$ export PYTHON=py37\r\n$ bash -c 'echo $BASH_VERSION'\r\n3.2.57(1)-release\r\ninstall\r\n84.96s$ ./.travis/install.sh\r\nProductName:\tMac OS X\r\nProductVersion:\t10.13.3\r\nBuildVersion:\t17D102\r\nCloning into '/Users/travis/.pyenv'...\r\nremote: Enumerating objects: 643, done.\r\nremote: Counting objects: 100% (643/643), done.\r\nremote: Compressing objects: 100% (484/484), done.\r\nremote: Total 643 (delta 317), reused 244 (delta 68), pack-reused 0\r\nReceiving objects: 100% (643/643), 371.66 KiB | 11.61 MiB/s, done.\r\nResolving deltas: 100% (317/317), done.\r\npython-build: use openssl@1.1 from homebrew\r\npython-build: use readline from homebrew\r\nDownloading Python-3.7.3.tar.xz...\r\n-> https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tar.xz\r\nInstalling Python-3.7.3...\r\npython-build: use readline from homebrew\r\nBUILD FAILED (OS X 10.13.3 using python-build 20180424)\r\nInspect or clean up the working tree at /var/folders/nz/vv4_9tw56nv9k3tkvyszvwg80000gn/T/python-build.20190522033353.2040\r\nResults logged to /var/folders/nz/vv4_9tw56nv9k3tkvyszvwg80000gn/T/python-build.20190522033353.2040.log\r\nLast 10 log lines:\r\nclang -c -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Wstrict-prototypes -Werror=implicit-function-declaration   -I. -I./Include -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/Users/travis/.pyenv/versions/3.7.3/include  -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/Users/travis/.pyenv/versions/3.7.3/include   -DPy_BUILD_CORE -o Objects/iterobject.o Objects/iterobject.c\r\nclang -c -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Wstrict-prototypes -Werror=implicit-function-declaration   -I. -I./Include -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/Users/travis/.pyenv/versions/3.7.3/include  -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/Users/travis/.pyenv/versions/3.7.3/include   -DPy_BUILD_CORE -o Objects/listobject.o Objects/listobject.c\r\nclang -c -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Wstrict-prototypes -Werror=implicit-function-declaration   -I. -I./Include -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/Users/travis/.pyenv/versions/3.7.3/include  -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/Users/travis/.pyenv/versions/3.7.3/include   -DPy_BUILD_CORE -o Objects/longobject.o Objects/longobject.c\r\nclang -c -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Wstrict-prototypes -Werror=implicit-function-declaration   -I. -I./Include -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/Users/travis/.pyenv/versions/3.7.3/include  -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/Users/travis/.pyenv/versions/3.7.3/include   -DPy_BUILD_CORE -o Objects/dictobject.o Objects/dictobject.c\r\nclang -c -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -g -fwrapv -O3 -Wall    -std=c99 -Wextra -Wno-unused-result -Wno-unused-parameter -Wno-missing-field-initializers -Wstrict-prototypes -Werror=implicit-function-declaration   -I. -I./Include -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/Users/travis/.pyenv/versions/3.7.3/include  -I/usr/local/opt/readline/include -I/usr/local/opt/readline/include -I/Users/travis/.pyenv/versions/3.7.3/include   -DPy_BUILD_CORE -o Objects/odictobject.o Objects/odictobject.c\r\nmake: *** No rule to make target `Objects/memoryobject.c', needed by `Objects/memoryobject.o'.  Stop.\r\nmake: *** Waiting for unfinished jobs....\r\nclang: error: no such file or directory: 'Objects/odictobject.c'\r\nclang: error: no input files\r\nmake: *** [Objects/odictobject.o] Error 1\r\npyenv: version `3.7.3' not installed\r\nCollecting virtualenv\r\n  Downloading https://files.pythonhosted.org/packages/ca/ee/8375c01412abe6ff462ec80970e6bb1c4308724d4366d7519627c98691ab/virtualenv-16.6.0-py2.py3-none-any.whl (2.0MB)\r\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2.0MB 5.8MB/s \r\nInstalling collected packages: virtualenv\r\n  The script virtualenv is installed in '/Users/travis/Library/Python/2.7/bin' which is not on PATH.\r\n  Consider adding this directory to PATH or, if you prefer to suppress this warning, use --no-warn-script-location.\r\nSuccessfully installed virtualenv-16.6.0\r\nYou are using pip version 10.0.1, however version 19.1.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\nNew python executable in /Users/travis/.venv/bin/python2.7\r\nAlso creating executable in /Users/travis/.venv/bin/python\r\nInstalling setuptools, pip, wheel...\r\ndone.\r\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7.\r\nCollecting pytest>=2.8.6 (from -r requirements.txt (line 1))\r\n  Downloading https://files.pythonhosted.org/packages/56/53/0ae37ab12c457945ae0152c6571d6d40eecccddf25f71fe328f9aefe90ca/pytest-4.5.0-py2.py3-none-any.whl (227kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 235kB 19.4MB/s \r\nCollecting atomicwrites>=1.0 (from pytest>=2.8.6->-r requirements.txt (line 1))\r\n  Downloading https://files.pythonhosted.org/packages/52/90/6155aa926f43f2b2a22b01be7241be3bfd1ceaf7d0b3267213e8127d41f4/atomicwrites-1.3.0-py2.py3-none-any.whl\r\nCollecting funcsigs>=1.0; python_version < \"3.0\" (from pytest>=2.8.6->-r requirements.txt (line 1))\r\n  Downloading https://files.pythonhosted.org/packages/69/cb/f5be453359271714c01b9bd06126eaf2e368f1fddfff30818754b5ac2328/funcsigs-1.0.2-py2.py3-none-any.whl\r\nCollecting wcwidth (from pytest>=2.8.6->-r requirements.txt (line 1))\r\n  Downloading https://files.pythonhosted.org/packages/7e/9f/526a6947247599b084ee5232e4f9190a38f398d7300d866af3ab571a5bfe/wcwidth-0.1.7-py2.py3-none-any.whl\r\nCollecting pluggy!=0.10,<1.0,>=0.9 (from pytest>=2.8.6->-r requirements.txt (line 1))\r\n  Downloading https://files.pythonhosted.org/packages/cc/e4/2003a5e4e445424602c8f06a436eeed9e78bcae4947128f64741c66c7216/pluggy-0.11.0-py2.py3-none-any.whl\r\nCollecting py>=1.5.0 (from pytest>=2.8.6->-r requirements.txt (line 1))\r\n  Downloading https://files.pythonhosted.org/packages/76/bc/394ad449851729244a97857ee14d7cba61ddb268dce3db538ba2f2ba1f0f/py-1.8.0-py2.py3-none-any.whl (83kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 92kB 14.6MB/s \r\nRequirement already satisfied: setuptools in /Users/travis/.venv/lib/python2.7/site-packages (from pytest>=2.8.6->-r requirements.txt (line 1)) (41.0.1)\r\nCollecting six>=1.10.0 (from pytest>=2.8.6->-r requirements.txt (line 1))\r\n  Downloading https://files.pythonhosted.org/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py2.py3-none-any.whl\r\nCollecting pathlib2>=2.2.0; python_version < \"3.6\" (from pytest>=2.8.6->-r requirements.txt (line 1))\r\n  Downloading https://files.pythonhosted.org/packages/2a/46/c696dcf1c7aad917b39b875acdc5451975e3a9b4890dca8329983201c97a/pathlib2-2.3.3-py2.py3-none-any.whl\r\nCollecting attrs>=17.4.0 (from pytest>=2.8.6->-r requirements.txt (line 1))\r\n  Downloading https://files.pythonhosted.org/packages/23/96/d828354fa2dbdf216eaa7b7de0db692f12c234f7ef888cc14980ef40d1d2/attrs-19.1.0-py2.py3-none-any.whl\r\nCollecting more-itertools<6.0.0,>=4.0.0; python_version <= \"2.7\" (from pytest>=2.8.6->-r requirements.txt (line 1))\r\n  Downloading https://files.pythonhosted.org/packages/2f/9d/dcfe59e213093695f108508af1214cf9cd95cc5489e46877ec5cb56369e5/more_itertools-5.0.0-py2-none-any.whl (52kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 61kB 13.2MB/s \r\nCollecting scandir; python_version < \"3.5\" (from pathlib2>=2.2.0; python_version < \"3.6\"->pytest>=2.8.6->-r requirements.txt (line 1))\r\n  Downloading https://files.pythonhosted.org/packages/df/f5/9c052db7bd54d0cbf1bc0bb6554362bba1012d03e5888950a4f5c5dadc4e/scandir-1.10.0.tar.gz\r\nBuilding wheels for collected packages: scandir\r\n  Building wheel for scandir (setup.py) ... done\r\n  Stored in directory: /Users/travis/Library/Caches/pip/wheels/91/95/75/19c98a91239878abbc7c59970abd3b4e0438a7dd5b61778335\r\nSuccessfully built scandir\r\nInstalling collected packages: atomicwrites, funcsigs, wcwidth, pluggy, py, six, scandir, pathlib2, attrs, more-itertools, pytest\r\nSuccessfully installed atomicwrites-1.3.0 attrs-19.1.0 funcsigs-1.0.2 more-itertools-5.0.0 pathlib2-2.3.3 pluggy-0.11.0 py-1.8.0 pytest-4.5.0 scandir-1.10.0 six-1.12.0 wcwidth-0.1.7\r\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7.\r\nRequirement already satisfied: pathlib2>=2.3.2 in /Users/travis/.venv/lib/python2.7/site-packages (from -r extra_requirements.txt (line 11)) (2.3.3)\r\nRequirement already satisfied: scandir>=1.8 in /Users/travis/.venv/lib/python2.7/site-packages (from -r extra_requirements.txt (line 13)) (1.10.0)\r\nRequirement already satisfied: six in /Users/travis/.venv/lib/python2.7/site-packages (from pathlib2>=2.3.2->-r extra_requirements.txt (line 11)) (1.12.0)\r\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7.\r\nProcessing /Users/travis/build/jmcgeheeiv/pyfakefs\r\nBuilding wheels for collected packages: pyfakefs\r\n  Building wheel for pyfakefs (setup.py) ... done\r\n  Stored in directory: /private/var/folders/nz/vv4_9tw56nv9k3tkvyszvwg80000gn/T/pip-ephem-wheel-cache-2MEQAd/wheels/c3/1c/1f/cb6fcc64bf4ac7782013a4d7760d52faa07f018bfa8c565a30\r\nSuccessfully built pyfakefs\r\nInstalling collected packages: pyfakefs\r\nSuccessfully installed pyfakefs-3.6\r\n0.01s$ export TEST_REAL_FS=1\r\nThe command \"export TEST_REAL_FS=1\" exited with 0.\r\n54.98s$ ./.travis/run_tests.sh\r\nPython 2.7.15\r\npip 19.1.1 from /Users/travis/.venv/lib/python2.7/site-packages/pip (python 2.7)\r\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7.\r\n```\r\n\r\n**How To Reproduce**\r\n\r\nTrigger the CI\r\n\r\n**Your enviroment**\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/485", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/485/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/485/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/485", "id": 446915727, "node_id": "MDU6SXNzdWU0NDY5MTU3Mjc=", "number": 485, "title": "FakeFileWrapper didn't implement `__next__`", "user": {"login": "mlouielu", "id": 28770408, "node_id": "MDQ6VXNlcjI4NzcwNDA4", "avatar_url": "https://avatars0.githubusercontent.com/u/28770408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlouielu", "html_url": "https://github.com/mlouielu", "followers_url": "https://api.github.com/users/mlouielu/followers", "following_url": "https://api.github.com/users/mlouielu/following{/other_user}", "gists_url": "https://api.github.com/users/mlouielu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlouielu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlouielu/subscriptions", "organizations_url": "https://api.github.com/users/mlouielu/orgs", "repos_url": "https://api.github.com/users/mlouielu/repos", "events_url": "https://api.github.com/users/mlouielu/events{/privacy}", "received_events_url": "https://api.github.com/users/mlouielu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-22T03:27:25Z", "updated_at": "2019-05-22T09:35:38Z", "closed_at": "2019-05-22T09:35:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nFakeFileWrapper didn't implement `__next__`\r\n\r\n**How To Reproduce**\r\n\r\n* next(f)\r\n\r\nraise:\r\n\r\n```\r\n        with open(input_fn) as f:\r\n>           student_ids = next(f).strip().split(',')\r\nE           TypeError: 'FakeFileWrapper' object is not an iterator\r\n```\r\n\r\n**Your enviroment**\r\nPlease run the following and paste the output.\r\n```bash\r\npython -c \"import platform; print(platform.platform())\"\r\npython -c \"import sys; print('Python', sys.version)\"\r\npython -c \"from pyfakefs.fake_filesystem import __version__; print('pyfakefs', __version__)\"\r\n```\r\n```\r\nLinux-4.20.0-rc1-x86_64-with-arch\r\nPython 3.7.3 (default, May  3 2019, 11:10:59) \r\n[GCC 8.2.1 20181127]\r\npyfakefs 3.6\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/484", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/484/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/484/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/484", "id": 445740358, "node_id": "MDU6SXNzdWU0NDU3NDAzNTg=", "number": 484, "title": "FakeFileWrapper doesn't inherit from io.IOBase", "user": {"login": "Aran-Fey", "id": 22036272, "node_id": "MDQ6VXNlcjIyMDM2Mjcy", "avatar_url": "https://avatars1.githubusercontent.com/u/22036272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aran-Fey", "html_url": "https://github.com/Aran-Fey", "followers_url": "https://api.github.com/users/Aran-Fey/followers", "following_url": "https://api.github.com/users/Aran-Fey/following{/other_user}", "gists_url": "https://api.github.com/users/Aran-Fey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aran-Fey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aran-Fey/subscriptions", "organizations_url": "https://api.github.com/users/Aran-Fey/orgs", "repos_url": "https://api.github.com/users/Aran-Fey/repos", "events_url": "https://api.github.com/users/Aran-Fey/events{/privacy}", "received_events_url": "https://api.github.com/users/Aran-Fey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2159145017, "node_id": "MDU6TGFiZWwyMTU5MTQ1MDE3", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/limitation", "name": "limitation", "color": "f79165", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-05-18T18:09:32Z", "updated_at": "2020-06-24T18:16:18Z", "closed_at": "2020-01-12T19:56:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Regular file objects inherit from [`io.IOBase`](https://docs.python.org/3/library/io.html#io.IOBase), but the fake variant doesn't. Here's a test case that fails if the `fs` fixture is used, but passes otherwise:\r\n\r\n```python\r\nimport pytest\r\nimport io, os\r\n\r\ndef test_file_mro(fs):\r\n    try:\r\n        with open('foo.txt', 'w') as file:\r\n            assert isinstance(file, io.IOBase)\r\n    finally:\r\n        os.remove('foo.txt')\r\n\r\nif __name__ == '__main__':\r\n    pytest.main([__file__])\r\n```\r\n\r\nI'm working on a file-object related library, so I really need this to work correctly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/483", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/483/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/483/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/483", "id": 445739570, "node_id": "MDU6SXNzdWU0NDU3Mzk1NzA=", "number": 483, "title": "fake_scandir.DirEntry isn't Path-like", "user": {"login": "Aran-Fey", "id": 22036272, "node_id": "MDQ6VXNlcjIyMDM2Mjcy", "avatar_url": "https://avatars1.githubusercontent.com/u/22036272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aran-Fey", "html_url": "https://github.com/Aran-Fey", "followers_url": "https://api.github.com/users/Aran-Fey/followers", "following_url": "https://api.github.com/users/Aran-Fey/following{/other_user}", "gists_url": "https://api.github.com/users/Aran-Fey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aran-Fey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aran-Fey/subscriptions", "organizations_url": "https://api.github.com/users/Aran-Fey/orgs", "repos_url": "https://api.github.com/users/Aran-Fey/repos", "events_url": "https://api.github.com/users/Aran-Fey/events{/privacy}", "received_events_url": "https://api.github.com/users/Aran-Fey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-18T18:00:36Z", "updated_at": "2020-06-24T18:16:34Z", "closed_at": "2019-05-20T19:28:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unlike [`os.DirEntry`](https://docs.python.org/3/library/os.html#os.DirEntry), `pyfakefs.fake_scandir.DirEntry` does not implement the [`os.PathLike`](https://docs.python.org/3/library/os.html#os.PathLike) interface.\r\n\r\nSample test case that fails if pyfakefs is used, but passes if the `fs` fixture is removed:\r\n\r\n```python\r\nimport pytest\r\nimport os\r\n\r\ndef test_scandir(fs):\r\n    with os.scandir('/') as scanner:\r\n        for direntry in scanner:\r\n            assert isinstance(direntry, os.PathLike)\r\n\r\nif __name__ == '__main__':\r\n    pytest.main([__file__])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/482", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/482/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/482/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/482", "id": 442443919, "node_id": "MDU6SXNzdWU0NDI0NDM5MTk=", "number": 482, "title": "Change Patcher additional_skip_names to accept a list of module", "user": {"login": "ipwnponies", "id": 4278368, "node_id": "MDQ6VXNlcjQyNzgzNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4278368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ipwnponies", "html_url": "https://github.com/ipwnponies", "followers_url": "https://api.github.com/users/ipwnponies/followers", "following_url": "https://api.github.com/users/ipwnponies/following{/other_user}", "gists_url": "https://api.github.com/users/ipwnponies/gists{/gist_id}", "starred_url": "https://api.github.com/users/ipwnponies/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ipwnponies/subscriptions", "organizations_url": "https://api.github.com/users/ipwnponies/orgs", "repos_url": "https://api.github.com/users/ipwnponies/repos", "events_url": "https://api.github.com/users/ipwnponies/events{/privacy}", "received_events_url": "https://api.github.com/users/ipwnponies/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-09T21:28:02Z", "updated_at": "2019-05-10T18:00:24Z", "closed_at": "2019-05-10T18:00:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n`Patcher` accepts `modules_to_reload` as a list of modules to reload. However, `additional_skip_names` is a set of `str`. This is mildly inconsistent.\r\n\r\nhttps://github.com/jmcgeheeiv/pyfakefs/blob/f1cc61553f5e87b4139fb2cdaa2130b4dcc29bae/pyfakefs/fake_filesystem_unittest.py#L309-L315\r\n\r\nFailure to correctly configure these values results in strange errors deeper down the stack, when the test actually runs. It feels like unnecessary friction and confusion to get the setup just right.\r\n\r\n**Describe the solution you'd like**\r\nHow about if `additional_skip_names` was a list of modules? Internally, the list of modules could be converted to list of str:\r\n```python\r\nself._skip_names = {i.__name__ for i in additional_skip_names}\r\n```\r\n\r\nCould also accept both strings or modules.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/481", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/481/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/481/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/481", "id": 442121452, "node_id": "MDU6SXNzdWU0NDIxMjE0NTI=", "number": 481, "title": "TypeError: makedirs() got an unexpected keyword argument 'name'", "user": {"login": "florian-fischer", "id": 48485093, "node_id": "MDQ6VXNlcjQ4NDg1MDkz", "avatar_url": "https://avatars0.githubusercontent.com/u/48485093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/florian-fischer", "html_url": "https://github.com/florian-fischer", "followers_url": "https://api.github.com/users/florian-fischer/followers", "following_url": "https://api.github.com/users/florian-fischer/following{/other_user}", "gists_url": "https://api.github.com/users/florian-fischer/gists{/gist_id}", "starred_url": "https://api.github.com/users/florian-fischer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/florian-fischer/subscriptions", "organizations_url": "https://api.github.com/users/florian-fischer/orgs", "repos_url": "https://api.github.com/users/florian-fischer/repos", "events_url": "https://api.github.com/users/florian-fischer/events{/privacy}", "received_events_url": "https://api.github.com/users/florian-fischer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-09T08:47:50Z", "updated_at": "2019-05-09T17:20:34Z", "closed_at": "2019-05-09T17:20:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, your implementation of os.makedirs doesn't reflect the official python 3 API https://docs.python.org/3/library/os.html?highlight=os%20makedirs#os.makedirs. Should accept 'name' as parameter.\r\nI'm using your release version 3.5.8.\r\nAs far as I can see in the source file fake_filesystem.FakeOsModule.makedirs expects the parameter 'dir_name' instead of 'name'.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/480", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/480/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/480/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/480", "id": 440708887, "node_id": "MDU6SXNzdWU0NDA3MDg4ODc=", "number": 480, "title": "Documentation: small issues in usage.html and modules.html", "user": {"login": "luziferius", "id": 2143820, "node_id": "MDQ6VXNlcjIxNDM4MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2143820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luziferius", "html_url": "https://github.com/luziferius", "followers_url": "https://api.github.com/users/luziferius/followers", "following_url": "https://api.github.com/users/luziferius/following{/other_user}", "gists_url": "https://api.github.com/users/luziferius/gists{/gist_id}", "starred_url": "https://api.github.com/users/luziferius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luziferius/subscriptions", "organizations_url": "https://api.github.com/users/luziferius/orgs", "repos_url": "https://api.github.com/users/luziferius/repos", "events_url": "https://api.github.com/users/luziferius/events{/privacy}", "received_events_url": "https://api.github.com/users/luziferius/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1142748102, "node_id": "MDU6TGFiZWwxMTQyNzQ4MTAy", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/documentation", "name": "documentation", "color": "fcee9c", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-06T13:48:15Z", "updated_at": "2019-05-06T18:28:22Z", "closed_at": "2019-05-06T18:20:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nThis report contains a list of small issues in the online documentation, here http://jmcgeheeiv.github.io/pyfakefs/release\r\n\r\nI didn\u2019t fully proof-read it, the list just contains some points I noticed while reading the documents.\r\n\r\nThe first two are present in the current master branch, too: (I just checked all found items against the current master branch)\r\n\r\n- [Section `modules_to_reload`](http://jmcgeheeiv.github.io/pyfakefs/release/usage.html#modules-to-reload): Simple typo: `Given tat the example code [\u2026]`\r\n- [Section `fake_filesystem_classes.FakeFilesystem.patcher`](http://jmcgeheeiv.github.io/pyfakefs/release/modules.html#pyfakefs.fake_filesystem.FakeFilesystem.patcher): The description contains two newline characters, causing the second half to be rendered in bold, one indention level below the intended level.\r\n\r\nThese are only present in the last stable release and fixed in the master branch. So probably not worth reporting, but since I report some other items, I\u2019ll include them anyway.\r\n\r\n- [Section `modules_to_patch`](http://jmcgeheeiv.github.io/pyfakefs/release/usage.html#modules-to-patch): The indention in the example code is broken. All methods in the class are indented at the module level.\r\n- [Section `use_dynamic_patch`](http://jmcgeheeiv.github.io/pyfakefs/release/usage.html#use-dynamic-patch): `This parameter will probably removed in the future [\u2026]`. I think the sentence misses a `be`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/476", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/476/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/476/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/476", "id": 437240539, "node_id": "MDU6SXNzdWU0MzcyNDA1Mzk=", "number": 476, "title": "Document Temp Dir Creation", "user": {"login": "svozza", "id": 8573472, "node_id": "MDQ6VXNlcjg1NzM0NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8573472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svozza", "html_url": "https://github.com/svozza", "followers_url": "https://api.github.com/users/svozza/followers", "following_url": "https://api.github.com/users/svozza/following{/other_user}", "gists_url": "https://api.github.com/users/svozza/gists{/gist_id}", "starred_url": "https://api.github.com/users/svozza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svozza/subscriptions", "organizations_url": "https://api.github.com/users/svozza/orgs", "repos_url": "https://api.github.com/users/svozza/repos", "events_url": "https://api.github.com/users/svozza/events{/privacy}", "received_events_url": "https://api.github.com/users/svozza/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1142748102, "node_id": "MDU6TGFiZWwxMTQyNzQ4MTAy", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/documentation", "name": "documentation", "color": "fcee9c", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-25T14:46:41Z", "updated_at": "2019-04-26T17:31:31Z", "closed_at": "2019-04-26T17:31:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? \r\nI recently ran into the the issue desribed in #329, this caused me to waste a significant amount of time trying to figure out why my tests were passing on my Mac but not on my build system running Ubuntu. I assumed the file system was blank and was creating the `/tmp` directory in my tests and of course this worked fine locally because the temp directory pyfakefs creates for MacOS is `/var`.\r\n\r\n**Describe the solution you'd like**\r\nDocument that the filesystem is not blank and explain the difference between MacOs and Linux.\r\n\r\n**Describe alternatives you've considered**\r\nn/a\r\n\r\nI'm willing to make the PR to if someone can tell me where this note should live.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/475", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/475/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/475/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/475/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/475", "id": 437000285, "node_id": "MDU6SXNzdWU0MzcwMDAyODU=", "number": 475, "title": "Cannot import fake_filesystem_unittest", "user": {"login": "yassen-itlabs", "id": 3042273, "node_id": "MDQ6VXNlcjMwNDIyNzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3042273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yassen-itlabs", "html_url": "https://github.com/yassen-itlabs", "followers_url": "https://api.github.com/users/yassen-itlabs/followers", "following_url": "https://api.github.com/users/yassen-itlabs/following{/other_user}", "gists_url": "https://api.github.com/users/yassen-itlabs/gists{/gist_id}", "starred_url": "https://api.github.com/users/yassen-itlabs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yassen-itlabs/subscriptions", "organizations_url": "https://api.github.com/users/yassen-itlabs/orgs", "repos_url": "https://api.github.com/users/yassen-itlabs/repos", "events_url": "https://api.github.com/users/yassen-itlabs/events{/privacy}", "received_events_url": "https://api.github.com/users/yassen-itlabs/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786278, "node_id": "MDU6TGFiZWwxODc3ODYyNzg=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-25T04:03:32Z", "updated_at": "2019-05-06T20:55:01Z", "closed_at": "2019-05-06T20:55:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Import `fake_filesystem_unittest` fails for me as shown in the session log below.\r\n\r\nWhat am I doing wrong?\r\n\r\n```\r\nuser@host:~/.venv$ virtualenv sla-meters\r\nNew python executable in /home/user/.venv/sla-meters/bin/python2.7\r\nAlso creating executable in /home/user/.venv/sla-meters/bin/python\r\nInstalling setuptools, pip, wheel...\r\ndone.\r\n\r\nuser@host:~/.venv$ # I am forced to use python2, not my choice\r\nuser@host:~/.venv$ . sla-meters/bin/activate\r\n\r\n(sla-meters) user@host:~/.venv$ pip install git+https://github.com/jmcgeheeiv/pyfakefs.git\r\nDEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7.\r\nCollecting git+https://github.com/jmcgeheeiv/pyfakefs.git\r\n  Cloning https://github.com/jmcgeheeiv/pyfakefs.git to /tmp/pip-req-build-YBzUES\r\n  Running command git clone -q https://github.com/jmcgeheeiv/pyfakefs.git /tmp/pip-req-build-YBzUES\r\nBuilding wheels for collected packages: pyfakefs\r\n  Building wheel for pyfakefs (setup.py) ... done\r\n  Stored in directory: /tmp/pip-ephem-wheel-cache-_gUxR3/wheels/78/43/0a/d0c21512337683c0b33f3bcac62d27c844aeeb2035bcfc577e\r\nSuccessfully built pyfakefs\r\nInstalling collected packages: pyfakefs\r\nSuccessfully installed pyfakefs-3.6\r\n\r\n(sla-meters) user@host:~/.venv$ python\r\nPython 2.7.15rc1 (default, Nov 12 2018, 14:31:15)\r\n[GCC 7.3.0] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from fake_filesystem_unittest import TestCase\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nImportError: No module named fake_filesystem_unittest\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/474", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/474/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/474/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/474/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/474", "id": 430975968, "node_id": "MDU6SXNzdWU0MzA5NzU5Njg=", "number": 474, "title": "ability to run code as non-root", "user": {"login": "FelixSchwarz", "id": 212753, "node_id": "MDQ6VXNlcjIxMjc1Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/212753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FelixSchwarz", "html_url": "https://github.com/FelixSchwarz", "followers_url": "https://api.github.com/users/FelixSchwarz/followers", "following_url": "https://api.github.com/users/FelixSchwarz/following{/other_user}", "gists_url": "https://api.github.com/users/FelixSchwarz/gists{/gist_id}", "starred_url": "https://api.github.com/users/FelixSchwarz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FelixSchwarz/subscriptions", "organizations_url": "https://api.github.com/users/FelixSchwarz/orgs", "repos_url": "https://api.github.com/users/FelixSchwarz/repos", "events_url": "https://api.github.com/users/FelixSchwarz/events{/privacy}", "received_events_url": "https://api.github.com/users/FelixSchwarz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-09T13:43:56Z", "updated_at": "2019-04-10T20:40:38Z", "closed_at": "2019-04-10T20:40:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some CI services (e.g. shippable) run code under the \"root\" user. Since commit c16a50841ab7b4e7fe116e1ecdf1269c5272bcab (PR #455, pyfakefs 3.5.4) pyfakefs uses the value from `os.getuid()` to emulate root permissions.\r\n\r\nSome of my tests broke with that version as I tried to test for non-accessible files (using `os.chmod(..., 0)`. Of course root can access all files.\r\n\r\n**Describe the solution you'd like**\r\nIdeally I'd like to tell pyfakefs to emulate a non-root user even though the Unix user might be \"root\". The setting should only be active for a given test (maybe bound to the \"Patcher()\" instance?).\r\n\r\nI use the \"Patcher\" manually anyway so adding a parameter to the constructor or the `.setUp()` call (e.g. `root_user=False`) would be pretty easy.\r\n\r\n        patcher = Patcher()\r\n        patcher.setUp()\r\n        self.addCleanup(patcher.tearDown)\r\n\r\n\r\n**Describe alternatives you've considered**\r\nI could do the same as some pyfakefs tests (e.g. `FakeOsModuleTest`) which means calling `set_uid(1)` manually. However that means additional boilerplate code (remembering the old value, using `tearDown()` to restore it, dealing with Windows).\r\n\r\n    class FakeOsModuleTest(FakeOsModuleTestBase):\r\n        def setUp(self):\r\n            super(FakeOsModuleTest, self).setUp()\r\n            # ...\r\n            set_uid(1)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/473", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/473/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/473/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/473/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/473", "id": 424371390, "node_id": "MDU6SXNzdWU0MjQzNzEzOTA=", "number": 473, "title": "Cannot close os.pipe", "user": {"login": "saml", "id": 8481, "node_id": "MDQ6VXNlcjg0ODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8481?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saml", "html_url": "https://github.com/saml", "followers_url": "https://api.github.com/users/saml/followers", "following_url": "https://api.github.com/users/saml/following{/other_user}", "gists_url": "https://api.github.com/users/saml/gists{/gist_id}", "starred_url": "https://api.github.com/users/saml/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saml/subscriptions", "organizations_url": "https://api.github.com/users/saml/orgs", "repos_url": "https://api.github.com/users/saml/repos", "events_url": "https://api.github.com/users/saml/events{/privacy}", "received_events_url": "https://api.github.com/users/saml/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-03-22T19:40:52Z", "updated_at": "2019-05-02T18:33:09Z", "closed_at": "2019-04-22T13:59:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nFile descriptor returned by `os.pipe()` cannot be closed:\r\n```py\r\n_, w = os.pipe()\r\nos.close(w)\r\n\r\nOSError: [Errno 9] Bad file descriptor in the fake filesystem: '12'\r\n```\r\n\r\n**How To Reproduce**\r\nUsing pytest:\r\n```py\r\nimport os\r\ndef test_1(fs):\r\n    read, write = os.pipe()\r\n    os.close(write)\r\n```\r\nSave above as `test_foobar.py` and run:\r\n```\r\n$ pytest -vvvv test_foobar.py \r\n======================================================================================= test session starts =======================================================================================\r\nplatform linux -- Python 3.6.5, pytest-4.2.1, py-1.8.0, pluggy-0.9.0 -- /service/nox/test-3-6/bin/python3.6\r\ncachedir: .pytest_cache\r\nrootdir: /service, inifile:\r\nplugins: requests-mock-1.5.2, cov-2.6.1, pyfakefs-3.5.8\r\ncollected 1 item                                                                                                                                                                                  \r\n\r\ntest_foobar.py::test_1 FAILED                                                                                                                                                               [100%]\r\n\r\n============================================================================================ FAILURES =============================================================================================\r\n_____________________________________________________________________________________________ test_1 ______________________________________________________________________________________________\r\n\r\nfs = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x7fa25d6431d0>\r\n\r\n    def test_1(fs):\r\n        read, write = os.pipe()\r\n>       os.close(write)\r\n\r\n/service/test_foobar.py:4: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/service/nox/test-3-6/lib/python3.6/site-packages/pyfakefs/fake_filesystem.py:3700: in close\r\n    file_handle = self.filesystem.get_open_file(file_des)\r\n/service/nox/test-3-6/lib/python3.6/site-packages/pyfakefs/fake_filesystem.py:1355: in get_open_file\r\n    self.raise_os_error(errno.EBADF, str(file_des))\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x7fa25d6431d0>, errno = 9, filename = '10', winerror = None\r\n\r\n    def raise_os_error(self, errno, filename=None, winerror=None):\r\n        \"\"\"Raises OSError.\r\n        The error message is constructed from the given error code and shall\r\n        start with the error string issued in the real system.\r\n        Note: this is not true under Windows if winerror is given - in this\r\n        case a localized message specific to winerror will be shown in the\r\n        real file system.\r\n    \r\n        Args:\r\n            errno: A numeric error code from the C variable errno.\r\n            filename: The name of the affected file, if any.\r\n            winerror: Windows only - the specific Windows error code.\r\n        \"\"\"\r\n        message = self._error_message(errno)\r\n        if (winerror is not None and sys.platform == 'win32' and\r\n                self.is_windows_fs):\r\n            if IS_PY2:\r\n                raise WindowsError(winerror, message, filename)\r\n            raise OSError(errno, message, filename, winerror)\r\n>       raise OSError(errno, message, filename)\r\nE       OSError: [Errno 9] Bad file descriptor in the fake filesystem: '10'\r\n\r\n/service/nox/test-3-6/lib/python3.6/site-packages/pyfakefs/fake_filesystem.py:976: OSError\r\n==================================================================================== 1 failed in 0.71 seconds =====================================================================================\r\n```\r\nPlease provide a unit test or a minimal code snippet that reproduces the \r\nproblem.\r\n\r\n**Your enviroment**\r\n```bash\r\nLinux-4.20.13-200.fc29.x86_64-x86_64-with\r\nPython 3.6.5 (default, Aug 22 2018, 14:30:18) \r\npyfakefs 3.5.8\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/472", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/472/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/472/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/472", "id": 420482394, "node_id": "MDU6SXNzdWU0MjA0ODIzOTQ=", "number": 472, "title": "unable to import within test function when using fs fixture and python 2.7", "user": {"login": "diefans", "id": 513316, "node_id": "MDQ6VXNlcjUxMzMxNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/513316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diefans", "html_url": "https://github.com/diefans", "followers_url": "https://api.github.com/users/diefans/followers", "following_url": "https://api.github.com/users/diefans/following{/other_user}", "gists_url": "https://api.github.com/users/diefans/gists{/gist_id}", "starred_url": "https://api.github.com/users/diefans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diefans/subscriptions", "organizations_url": "https://api.github.com/users/diefans/orgs", "repos_url": "https://api.github.com/users/diefans/repos", "events_url": "https://api.github.com/users/diefans/events{/privacy}", "received_events_url": "https://api.github.com/users/diefans/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786274, "node_id": "MDU6TGFiZWwxODc3ODYyNzQ=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-13T12:50:19Z", "updated_at": "2020-06-24T18:16:52Z", "closed_at": "2019-03-13T13:12:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n```\r\n$ pipenv run pytest\r\n========================================== test session starts ==========================================\r\nplatform linux2 -- Python 2.7.15, pytest-4.3.1, py-1.8.0, pluggy-0.9.0\r\nrootdir: /home/olli/code/da/pyfakefs-bug, inifile:\r\nplugins: pyfakefs-3.5.7\r\ncollected 1 item\r\n\r\ntest_foo.py F                                                                                     [100%]\r\n\r\n=============================================== FAILURES ================================================\r\n______________________________________________ test_import ______________________________________________\r\n\r\nfs = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x7fe551c9f310>\r\n\r\n    def test_import(fs):\r\n>       import foo\r\n\r\n/home/olli/code/da/pyfakefs-bug/test_foo.py:2:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/home/olli/code/da/pyfakefs-bug/foo.py:1: in <module>\r\n    ???\r\n/home/olli/.local/share/virtualenvs/pyfakefs-bug-qrOR-hXJ/lib/python2.7/site-packages/gevent/__init__.py:86: in <module>\r\n    ???\r\n/home/olli/.local/share/virtualenvs/pyfakefs-bug-qrOR-hXJ/lib/python2.7/site-packages/gevent/_config.py:699: in <module>\r\n    ???\r\n/home/olli/.local/share/virtualenvs/pyfakefs-bug-qrOR-hXJ/lib/python2.7/site-packages/gevent/_config.py:146: in get\r\n    ???\r\n/home/olli/.local/share/virtualenvs/pyfakefs-bug-qrOR-hXJ/lib/python2.7/site-packages/gevent/_config.py:248: in validate\r\n    ???\r\n/home/olli/.local/share/virtualenvs/pyfakefs-bug-qrOR-hXJ/lib/python2.7/site-packages/gevent/_config.py:219: in _import_one_of\r\n    ???\r\n/home/olli/.local/share/virtualenvs/pyfakefs-bug-qrOR-hXJ/lib/python2.7/site-packages/gevent/_config.py:237: in _import_one\r\n    ???\r\n/home/olli/.pyenv/versions/2.7.15/lib/python2.7/importlib/__init__.py:37: in import_module\r\n    ???\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n>   ???\r\nE   NameError: name '__import__' is not defined\r\n\r\nsrc/gevent/libev/corecext.pyx:1: NameError\r\n=========================================== warnings summary ============================================\r\ntest_foo.py::test_import\r\n  /home/olli/.local/share/virtualenvs/pyfakefs-bug-qrOR-hXJ/lib/python2.7/site-packages/py/_code/_assertionold.py:3: DeprecationWarning: The compiler package is deprecated and removed in Python 3.x.\r\n    from compiler import parse, ast, pycodegen\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n================================= 1 failed, 1 warnings in 0.19 seconds ==================================\r\n```\r\nThis happens only in python 2.7.\r\n\r\n\r\n**How To Reproduce**\r\n```bash\r\n(\r\nDIR=$(mktemp -d)\r\ncd ${DIR}\r\npipenv --python 2.7\r\npipenv install pytest pyfakefs gevent\r\n\r\ncat > foo.py << EOF\r\nimport gevent\r\nEOF\r\n\r\ncat > test_foo.py << EOF\r\ndef test_import(fs):\r\n    import foo\r\nEOF\r\n\r\npipenv run pytest\r\nrm -r ${DIR}\r\n)\r\n```\r\n\r\n\r\n**Your enviroment**\r\n\r\n```\r\n$ pipenv run python -c \"import platform; print(platform.platform())\"\r\nLinux-4.20.10-zen1-1-zen-x86_64-with-glibc2.7\r\n$ pipenv run python -c \"import sys; print('Python', sys.version)\"\r\n('Python', '2.7.15 (default, Oct  1 2018, 22:14:38) \\n[GCC 5.5.0 20171010]')\r\n$ pipenv run python -c \"from pyfakefs.fake_filesystem import __version__; print('pyfakefs', __version__)\"\r\n('pyfakefs', '3.5.7')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/470", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/470/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/470/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/470/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/470", "id": 412102943, "node_id": "MDU6SXNzdWU0MTIxMDI5NDM=", "number": 470, "title": "Write to file created with add_real_file does not truncate", "user": {"login": "ian-h-chamberlain", "id": 11131775, "node_id": "MDQ6VXNlcjExMTMxNzc1", "avatar_url": "https://avatars0.githubusercontent.com/u/11131775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ian-h-chamberlain", "html_url": "https://github.com/ian-h-chamberlain", "followers_url": "https://api.github.com/users/ian-h-chamberlain/followers", "following_url": "https://api.github.com/users/ian-h-chamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/ian-h-chamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ian-h-chamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ian-h-chamberlain/subscriptions", "organizations_url": "https://api.github.com/users/ian-h-chamberlain/orgs", "repos_url": "https://api.github.com/users/ian-h-chamberlain/repos", "events_url": "https://api.github.com/users/ian-h-chamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/ian-h-chamberlain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-19T20:10:03Z", "updated_at": "2019-02-19T22:00:00Z", "closed_at": "2019-02-19T21:22:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nAdding a file with `add_real_file(file, read_only=False)`, then writing to the file, does not properly truncate the fake in-memory file \u2013\u00a0instead it appears to continue reading from the real file on disk.\r\nI'm not sure if this is related to #277, but I can reproduce with much simpler test code.\r\n\r\n**How To Reproduce**\r\nUsing pytest:\r\n```py\r\ndef test_pyfakefs_real_file(fs):\r\n    fs.add_real_file('foo.txt', read_only=False)\r\n\r\n    with open('foo.txt', 'w') as foo:\r\n        foo.write('Goodbye')\r\n\r\n    with open('foo.txt', 'r') as foo:\r\n        assert foo.read() == 'Goodbye'\r\n```\r\n`foo.txt` contents:\r\n```\r\nHello,  world!\r\n```\r\n\r\nOutput:\r\n```\r\n$ pytest test.py\r\n============================================================= test session starts ==============================================================\r\nplatform darwin -- Python 3.6.5, pytest-4.2.1, py-1.7.0, pluggy-0.8.1\r\nrootdir: /Users/ichamberlain/Documents/workspace, inifile:\r\nplugins: pyfakefs-3.5.7\r\ncollected 1 item\r\n\r\ntest.py F                                                                                                                                [100%]\r\n\r\n=================================================================== FAILURES ===================================================================\r\n___________________________________________________________ test_pyfakefs_real_file ____________________________________________________________\r\n\r\nfs = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x1053f78d0>\r\n\r\n    def test_pyfakefs_real_file(fs):\r\n        fs.add_real_file('foo.txt', read_only=False)\r\n\r\n        with open('foo.txt', 'w') as foo:\r\n            foo.write('Goodbye')\r\n\r\n        with open('foo.txt', 'r') as foo:\r\n>           assert foo.read() == 'Goodbye'\r\nE           AssertionError: assert 'Goodbye world!\\n' == 'Goodbye'\r\nE             - Goodbye world!\r\nE             + Goodbye\r\n\r\n/Users/ichamberlain/Documents/workspace/test.py:8: AssertionError\r\n=========================================================== 1 failed in 0.37 seconds ===========================================================\r\n```\r\n\r\n**Your enviroment**\r\nUsing `pyenv` with `pyfakefs`  and `pytest` installed in the \"system\" python provided by `pyenv`.\r\n\r\n```\r\nDarwin-18.2.0-x86_64-i386-64bit\r\nPython 3.6.5 (default, Jan 29 2019, 13:07:11)\r\n[GCC 4.2.1 Compatible Apple LLVM 10.0.0 (clang-1000.11.45.5)]\r\npyfakefs 3.5.7\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/469", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/469/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/469/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/469/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/469", "id": 409910352, "node_id": "MDU6SXNzdWU0MDk5MTAzNTI=", "number": 469, "title": "Regression in >= 3.5.3 when running in python 2.7", "user": {"login": "rasjani", "id": 27887, "node_id": "MDQ6VXNlcjI3ODg3", "avatar_url": "https://avatars3.githubusercontent.com/u/27887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rasjani", "html_url": "https://github.com/rasjani", "followers_url": "https://api.github.com/users/rasjani/followers", "following_url": "https://api.github.com/users/rasjani/following{/other_user}", "gists_url": "https://api.github.com/users/rasjani/gists{/gist_id}", "starred_url": "https://api.github.com/users/rasjani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rasjani/subscriptions", "organizations_url": "https://api.github.com/users/rasjani/orgs", "repos_url": "https://api.github.com/users/rasjani/repos", "events_url": "https://api.github.com/users/rasjani/events{/privacy}", "received_events_url": "https://api.github.com/users/rasjani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-02-13T17:10:15Z", "updated_at": "2019-02-20T08:13:29Z", "closed_at": "2019-02-20T08:13:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "builtin data types (and propably something else too) removed (?) after a call to setupPyFakefs() in and after 3.5.3 release with python 2.7.\r\n\r\nRun following \r\n``` \r\nfrom unittest import main as run_tests\r\nimport sys\r\n\r\nclass TestSuites(TestCase):\r\n    def setUp(self):\r\n        self.setUpPyfakefs()\r\n    def test_foo(self):\r\n        real_foo = False\r\n\r\nif __name__ == '__main__':\r\n        run_tests(failfast=False, buffer=False, catchbreak=False)\r\n```\r\nthrows following error:\r\n```\r\nE\r\n======================================================================\r\nERROR: test_foo (__main__.TestSuites)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"test_acceptance.py\", line 9, in test_foo\r\nNameError: global name 'False' is not defined\r\n\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.009s\r\n\r\nFAILED (errors=1)\r\n```\r\n\r\nSame issue doesn't seem to effect python3 with same library version. \r\n\r\nDarwin-18.0.0-x86_64-i386-64bit\r\n('Python', '2.7.15 (default, Nov 27 2018, 21:40:55) \\n[GCC 4.2.1 Compatible Apple LLVM 10.0.0 (clang-1000.11.45.5)]')\r\n('pyfakefs', '3.5.3')\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/467", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/467/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/467/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/467/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/467", "id": 406243816, "node_id": "MDU6SXNzdWU0MDYyNDM4MTY=", "number": 467, "title": "`pathlib.Path` is not patched in pyfakefs 3.5.6", "user": {"login": "christiankossmann", "id": 11558714, "node_id": "MDQ6VXNlcjExNTU4NzE0", "avatar_url": "https://avatars2.githubusercontent.com/u/11558714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/christiankossmann", "html_url": "https://github.com/christiankossmann", "followers_url": "https://api.github.com/users/christiankossmann/followers", "following_url": "https://api.github.com/users/christiankossmann/following{/other_user}", "gists_url": "https://api.github.com/users/christiankossmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/christiankossmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/christiankossmann/subscriptions", "organizations_url": "https://api.github.com/users/christiankossmann/orgs", "repos_url": "https://api.github.com/users/christiankossmann/repos", "events_url": "https://api.github.com/users/christiankossmann/events{/privacy}", "received_events_url": "https://api.github.com/users/christiankossmann/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-04T09:31:24Z", "updated_at": "2020-06-24T16:41:22Z", "closed_at": "2019-02-05T20:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seems to be a regression bug with patching `pathlib.Path` in pyfakefs 3.5.6. The following code snippet works perfectly fine in pyfakefs 3.5.5, but fails to patch `pathlib.Path` in 3.5.6.\r\n\r\n```python\r\nimport pathlib\r\n\r\ndef test_pathlib(fs):\r\n    pathlib.Path(\"/path/to\").mkdir(parents=True)\r\n```\r\n\r\nExecuting this code as a non-root user with pyfakefs 3.5.6 results in a `PermissionError` since the underlying file system is touched and not the fake one.\r\n\r\n**Environment:**\r\n\r\n* Linux-4.4.0-130-generic-x86_64-with-Ubuntu-16.04-xenial\r\n* Python 3.5.2 (default, Nov 12 2018, 13:43:14), [GCC 5.4.0 20160609]\r\n* pytest 4.2.0\r\n* pyfakefs 3.5.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/466", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/466/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/466/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/466", "id": 401791446, "node_id": "MDU6SXNzdWU0MDE3OTE0NDY=", "number": 466, "title": "DeprecationWarning when used with pytest", "user": {"login": "cubranic", "id": 600891, "node_id": "MDQ6VXNlcjYwMDg5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/600891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cubranic", "html_url": "https://github.com/cubranic", "followers_url": "https://api.github.com/users/cubranic/followers", "following_url": "https://api.github.com/users/cubranic/following{/other_user}", "gists_url": "https://api.github.com/users/cubranic/gists{/gist_id}", "starred_url": "https://api.github.com/users/cubranic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cubranic/subscriptions", "organizations_url": "https://api.github.com/users/cubranic/orgs", "repos_url": "https://api.github.com/users/cubranic/repos", "events_url": "https://api.github.com/users/cubranic/events{/privacy}", "received_events_url": "https://api.github.com/users/cubranic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-01-22T14:31:25Z", "updated_at": "2020-06-24T18:17:18Z", "closed_at": "2019-03-28T20:39:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nUsing pyfakefs with pytest produces a deprecation warning about the `compiler` package as soon as a test depends on the `fs` fixture.\r\n```\r\nplugins: pyfakefs-3.5.6\r\ncollected 1 item\r\n\r\ntests/test_foo.py .                                                                                           [100%]\r\n\r\n================================================= warnings summary ==================================================\r\ntests/test_foo.py::test_fs\r\n  /usr/local/miniconda3/envs/alpenhorn/lib/python2.7/site-packages/py/_code/_assertionold.py:3: DeprecationWarning: The compiler package is deprecated and removed in Python 3.x.\r\n    from compiler import parse, ast, pycodegen\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n======================================= 1 passed, 1 warnings in 0.11 seconds ========================================\r\n```\r\n\r\n**How To Reproduce**\r\nPut the following into test_foo.py:\r\n```py\r\ndef test_foo(fs):\r\n    pass\r\n```\r\nThen run pytest test_foo.py.\r\n\r\n**Your enviroment**\r\nPlease run the following and paste the output.\r\n```bash\r\nDarwin-18.0.0-x86_64-i386-64bit\r\n('Python', '2.7.15 |Anaconda, Inc.| (default, Dec 14 2018, 13:10:39) \\n[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)]')\r\n('pyfakefs', '3.5.6')\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/465", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/465/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/465/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/465", "id": 400145964, "node_id": "MDU6SXNzdWU0MDAxNDU5NjQ=", "number": 465, "title": "Failing test case", "user": {"login": "kbabioch", "id": 1918279, "node_id": "MDQ6VXNlcjE5MTgyNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1918279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbabioch", "html_url": "https://github.com/kbabioch", "followers_url": "https://api.github.com/users/kbabioch/followers", "following_url": "https://api.github.com/users/kbabioch/following{/other_user}", "gists_url": "https://api.github.com/users/kbabioch/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbabioch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbabioch/subscriptions", "organizations_url": "https://api.github.com/users/kbabioch/orgs", "repos_url": "https://api.github.com/users/kbabioch/repos", "events_url": "https://api.github.com/users/kbabioch/events{/privacy}", "received_events_url": "https://api.github.com/users/kbabioch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 24, "created_at": "2019-01-17T07:37:19Z", "updated_at": "2019-04-02T07:29:38Z", "closed_at": "2019-04-02T06:28:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhile trying to build the package in our build service (https://build.opensuse.org/package/show/devel:languages:python/python-pyfakefs), I've realized that the build fails for some architectures and distributions due to a failing unit test:\r\n\r\n```\r\n[   28s] ======================================================================\r\n[   28s] FAIL: test_import_path_from_pathlib (pyfakefs.tests.fake_filesystem_unittest_test.TestPatchingImports)\r\n[   28s] ----------------------------------------------------------------------\r\n[   28s] Traceback (most recent call last):\r\n[   28s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.6/pyfakefs/tests/fake_filesystem_unittest_test.py\", line 162, in test_import_path_from_pathlib\r\n[   28s]     pyfakefs.tests.import_as_example.check_if_exists3(file_path))\r\n[   28s] AssertionError: False is not true\r\n[   28s] \r\n[   28s] ----------------------------------------------------------------------\r\n[   28s] Ran 1794 tests in 8.708s\r\n```\r\n\r\nThis only happens with the latest release, which, according to #462, did some changes in regards to pathlib.\r\n\r\nYou can find the full build log [here](https://github.com/jmcgeheeiv/pyfakefs/files/2767489/buildlog.txt)\r\n\r\nLet me know what other information you need in order to get this debugged.\r\n\r\n**How To Reproduce**\r\nSee above (OBS build service)\r\n\r\n**Your enviroment**\r\nSee above (OBS build service)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/464", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/464/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/464/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/464", "id": 398784604, "node_id": "MDU6SXNzdWUzOTg3ODQ2MDQ=", "number": 464, "title": "'getattr' is not defined with PyCharm debug", "user": {"login": "dondublon", "id": 1239237, "node_id": "MDQ6VXNlcjEyMzkyMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1239237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dondublon", "html_url": "https://github.com/dondublon", "followers_url": "https://api.github.com/users/dondublon/followers", "following_url": "https://api.github.com/users/dondublon/following{/other_user}", "gists_url": "https://api.github.com/users/dondublon/gists{/gist_id}", "starred_url": "https://api.github.com/users/dondublon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dondublon/subscriptions", "organizations_url": "https://api.github.com/users/dondublon/orgs", "repos_url": "https://api.github.com/users/dondublon/repos", "events_url": "https://api.github.com/users/dondublon/events{/privacy}", "received_events_url": "https://api.github.com/users/dondublon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-01-14T08:15:59Z", "updated_at": "2020-06-24T18:17:34Z", "closed_at": "2019-01-18T22:25:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen I'm going to stop on PyCharm breakpoint, this exception is raised:\r\nConnected to pydev debugger (build 182.4505.26)\r\nTraceback (most recent call last):\r\n  File \"_pydevd_bundle\\pydevd_cython_win32_27_64.pyx\", line 750, in _pydevd_bundle.pydevd_cython_win32_27_64.PyDBFrame.trace_dispatch\r\n  File \"_pydevd_bundle\\pydevd_cython_win32_27_64.pyx\", line 254, in _pydevd_bundle.pydevd_cython_win32_27_64.PyDBFrame.do_wait_suspend\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2018.2.4\\helpers\\pydev\\pydevd.py\", line 778, in do_wait_suspend\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2018.2.4\\helpers\\pydev\\pydevd.py\", line 469, in process_internal_commands\r\nNameError: global name 'getattr' is not defined\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2018.2.4\\helpers\\pydev\\pydevd.py\", line 1664, in <module>\r\n    main()\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2018.2.4\\helpers\\pydev\\pydevd.py\", line 1658, in main\r\n    globals = debugger.run(setup['file'], None, None, is_module)\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2018.2.4\\helpers\\pydev\\pydevd.py\", line 1068, in run\r\n    pydev_imports.execfile(file, globals, locals)  # execute the script\r\n  File \"D:/Perforce/KiteTestsDevelopment/kite/libs/test2/pyfakefstest.py\", line 4, in <module>\r\n    patcher.fs.create_dir(\"D:\\somefile\")\r\n  File \"D:/Perforce/KiteTestsDevelopment/kite/libs/test2/pyfakefstest.py\", line 4, in <module>\r\n    patcher.fs.create_dir(\"D:\\somefile\")\r\n  File \"_pydevd_bundle\\pydevd_cython_win32_27_64.pyx\", line 969, in _pydevd_bundle.pydevd_cython_win32_27_64.SafeCallWrapper.__call__\r\n  File \"_pydevd_bundle\\pydevd_cython_win32_27_64.pyx\", line 515, in _pydevd_bundle.pydevd_cython_win32_27_64.PyDBFrame.trace_dispatch\r\n  File \"_pydevd_bundle\\pydevd_cython_win32_27_64.pyx\", line 759, in _pydevd_bundle.pydevd_cython_win32_27_64.PyDBFrame.trace_dispatch\r\n  File \"_pydevd_bundle\\pydevd_cython_win32_27_64.pyx\", line 750, in _pydevd_bundle.pydevd_cython_win32_27_64.PyDBFrame.trace_dispatch\r\n  File \"_pydevd_bundle\\pydevd_cython_win32_27_64.pyx\", line 254, in _pydevd_bundle.pydevd_cython_win32_27_64.PyDBFrame.do_wait_suspend\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2018.2.4\\helpers\\pydev\\pydevd.py\", line 778, in do_wait_suspend\r\n    self.process_internal_commands()\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm Community Edition 2018.2.4\\helpers\\pydev\\pydevd.py\", line 469, in process_internal_commands\r\n    if getattr(t, 'is_pydev_daemon_thread', False):\r\nNameError: global name 'getattr' is not defined\r\n\r\n**How To Reproduce**\r\nRun in PyCharm this code:\r\n\r\nfrom pyfakefs.fake_filesystem_unittest import Patcher\r\n\r\nwith Patcher() as patcher:\r\n    patcher.fs.create_dir(\"D:\\somefile\")  # <- breakpoint here!\r\n\r\n\r\n**Your enviroment**\r\nWindows-7-6.1.7601-SP1\r\n('Python', '2.7.15 (v2.7.15:ca079a3ea3, Apr 30 2018, 16:30:26) [MSC v.1500 64 bit (AMD64)]')\r\n('pyfakefs', '3.5.5')\r\n\r\nPyCharm 2018.2.4.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/463", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/463/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/463/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/463", "id": 398680633, "node_id": "MDU6SXNzdWUzOTg2ODA2MzM=", "number": 463, "title": "Still some wrong permissions vs. shebang", "user": {"login": "kbabioch", "id": 1918279, "node_id": "MDQ6VXNlcjE5MTgyNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1918279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbabioch", "html_url": "https://github.com/kbabioch", "followers_url": "https://api.github.com/users/kbabioch/followers", "following_url": "https://api.github.com/users/kbabioch/following{/other_user}", "gists_url": "https://api.github.com/users/kbabioch/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbabioch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbabioch/subscriptions", "organizations_url": "https://api.github.com/users/kbabioch/orgs", "repos_url": "https://api.github.com/users/kbabioch/repos", "events_url": "https://api.github.com/users/kbabioch/events{/privacy}", "received_events_url": "https://api.github.com/users/kbabioch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2158989082, "node_id": "MDU6TGFiZWwyMTU4OTg5MDgy", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/not-a-bug", "name": "not-a-bug", "color": "19a8a5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-01-13T17:35:27Z", "updated_at": "2020-06-24T18:18:02Z", "closed_at": "2019-04-18T19:13:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n#461 is still not totally resolved. With the latest release (4.5.6) these files are still broken:\r\n\r\n```\r\n[   18s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/all_tests.py 644 /usr/bin/env python\r\n[   18s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/all_tests_without_extra_packages.py 644 /usr/bin/env python\r\n[   18s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/example_test.py 644 /usr/bin/env python\r\n[   18s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/all_tests.py 644 /usr/bin/env python\r\n[   18s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/all_tests_without_extra_packages.py 644 /usr/bin/env python\r\n[   18s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/example_test.py 644 /usr/bin/env python\r\n[   18s] This text file contains a shebang or is located in a path dedicated for\r\n[   18s] executables, but lacks the executable bits and cannot thus be executed.  If\r\n[   18s] the file is meant to be an executable script, add the executable bits,\r\n[   18s] otherwise remove the shebang or move the file elsewhere.\r\n```\r\n\r\n**How To Reproduce**\r\nCheck shebang lines and/or executable bits on those files.\r\n\r\n**Your enviroment**\r\nDoes not matter.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/462", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/462/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/462/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/462", "id": 393500030, "node_id": "MDU6SXNzdWUzOTM1MDAwMzA=", "number": 462, "title": "Try and fake pathlib2 before pathlib", "user": {"login": "peteboothroyd", "id": 13458937, "node_id": "MDQ6VXNlcjEzNDU4OTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/13458937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peteboothroyd", "html_url": "https://github.com/peteboothroyd", "followers_url": "https://api.github.com/users/peteboothroyd/followers", "following_url": "https://api.github.com/users/peteboothroyd/following{/other_user}", "gists_url": "https://api.github.com/users/peteboothroyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/peteboothroyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peteboothroyd/subscriptions", "organizations_url": "https://api.github.com/users/peteboothroyd/orgs", "repos_url": "https://api.github.com/users/peteboothroyd/repos", "events_url": "https://api.github.com/users/peteboothroyd/events{/privacy}", "received_events_url": "https://api.github.com/users/peteboothroyd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-12-21T15:36:37Z", "updated_at": "2019-02-05T21:40:16Z", "closed_at": "2019-01-13T13:32:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\npathlib2 is only used if pathlib is not found. As pathlib is now included for python>=3.4 pathlib2 will not be faked for these newer versions of python even if it is present in a project. As I understand it the 'correct' usage of pathlib2 is not to use conditional imports such as in the `extra_packages.py` as highlighted in this [issue](https://github.com/mcmtroffaes/pathlib2/issues/8) on the pathlib2 repo, but rather to use pathlib2 directly in place of pathlib where compatibility between different python versions is required.\r\n\r\nThis means (AFAIK) that if I want to use pathlib2 in my project and have it faked I have to use the Patcher and modules_to_patch option - and then have to reload certain modules as a result.\r\n\r\n**Describe the solution you'd like**\r\nI think it would be better to flip the logic in `extra_packages.py` to first try and load pathlib2 and then only if this is not present to load pathlib. pathlib2 has to be explicitly downloaded whereas pathlib is included in the standard library so there should be fewer instances where the wrong module is patched. Alternatively I don't know if it would be possible/advisable to patch both modules with the faked module?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/461", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/461/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/461/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/461/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/461", "id": 392925106, "node_id": "MDU6SXNzdWUzOTI5MjUxMDY=", "number": 461, "title": "Python test files have a shebang line but are not executable", "user": {"login": "kbabioch", "id": 1918279, "node_id": "MDQ6VXNlcjE5MTgyNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1918279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbabioch", "html_url": "https://github.com/kbabioch", "followers_url": "https://api.github.com/users/kbabioch/followers", "following_url": "https://api.github.com/users/kbabioch/following{/other_user}", "gists_url": "https://api.github.com/users/kbabioch/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbabioch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbabioch/subscriptions", "organizations_url": "https://api.github.com/users/kbabioch/orgs", "repos_url": "https://api.github.com/users/kbabioch/repos", "events_url": "https://api.github.com/users/kbabioch/events{/privacy}", "received_events_url": "https://api.github.com/users/kbabioch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 634637961, "node_id": "MDU6TGFiZWw2MzQ2Mzc5NjE=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/infrastructure", "name": "infrastructure", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-20T07:38:28Z", "updated_at": "2020-06-24T18:43:17Z", "closed_at": "2018-12-20T18:03:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhile building the package in the openSUSE build system, I get the following warnings:\r\n\r\n```\r\n[   22s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/all_tests.py 644 /usr/bin/env python\r\n[   22s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/example_test.py 644 /usr/bin/env python\r\n[   22s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/fake_filesystem_glob_test.py 644 /usr/bin/env python\r\n[   22s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/fake_filesystem_shutil_test.py 644 /usr/bin/env python\r\n[   22s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/fake_filesystem_test.py 644 /usr/bin/env python\r\n[   22s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/fake_filesystem_unittest_test.py 644 /usr/bin/env python\r\n[   22s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/fake_filesystem_vs_real_test.py 644 /usr/bin/env python\r\n[   22s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/fake_open_test.py 644 /usr/bin/env python\r\n[   22s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/fake_os_test.py 644 /usr/bin/env python\r\n[   22s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/fake_pathlib_test.py 644 /usr/bin/env python\r\n[   22s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/fake_stat_time_test.py 644 /usr/bin/env python\r\n[   22s] python2-pyfakefs.noarch: W: non-executable-script /usr/lib/python2.7/site-packages/pyfakefs/tests/fake_tempfile_test.py 644 /usr/bin/env python\r\n[   22s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/all_tests.py 644 /usr/bin/env python\r\n[   22s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/example_test.py 644 /usr/bin/env python\r\n[   22s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/fake_filesystem_glob_test.py 644 /usr/bin/env python\r\n[   22s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/fake_filesystem_shutil_test.py 644 /usr/bin/env python\r\n[   22s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/fake_filesystem_test.py 644 /usr/bin/env python\r\n[   22s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/fake_filesystem_unittest_test.py 644 /usr/bin/env python\r\n[   22s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/fake_filesystem_vs_real_test.py 644 /usr/bin/env python\r\n[   22s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/fake_open_test.py 644 /usr/bin/env python\r\n[   22s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/fake_os_test.py 644 /usr/bin/env python\r\n[   22s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/fake_pathlib_test.py 644 /usr/bin/env python\r\n[   22s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/fake_stat_time_test.py 644 /usr/bin/env python\r\n[   22s] python3-pyfakefs.noarch: W: non-executable-script /usr/lib/python3.6/site-packages/pyfakefs/tests/fake_tempfile_test.py 644 /usr/bin/env python\r\n[   22s] This text file contains a shebang or is located in a path dedicated for\r\n[   22s] executables, but lacks the executable bits and cannot thus be executed.  If\r\n[   22s] the file is meant to be an executable script, add the executable bits,\r\n[   22s] otherwise remove the shebang or move the file elsewhere.\r\n```\r\n\r\nAnd the script warning me about this, is right. To be consistent we should either get rid of the shebang line (after all, these tests are not invoked directly), or set the executable bit, so that they can be invoked directly.\r\n\r\n**How To Reproduce**\r\nCheck the file permission and content of these files.\r\n\r\n**Your enviroment**\r\nGeneral to all environments, since this is only about the source tarball.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/460", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/460/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/460/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/460", "id": 392377834, "node_id": "MDU6SXNzdWUzOTIzNzc4MzQ=", "number": 460, "title": "Attribute Error when finding modules", "user": {"login": "peteboothroyd", "id": 13458937, "node_id": "MDQ6VXNlcjEzNDU4OTM3", "avatar_url": "https://avatars3.githubusercontent.com/u/13458937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peteboothroyd", "html_url": "https://github.com/peteboothroyd", "followers_url": "https://api.github.com/users/peteboothroyd/followers", "following_url": "https://api.github.com/users/peteboothroyd/following{/other_user}", "gists_url": "https://api.github.com/users/peteboothroyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/peteboothroyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peteboothroyd/subscriptions", "organizations_url": "https://api.github.com/users/peteboothroyd/orgs", "repos_url": "https://api.github.com/users/peteboothroyd/repos", "events_url": "https://api.github.com/users/peteboothroyd/events{/privacy}", "received_events_url": "https://api.github.com/users/peteboothroyd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-18T23:23:01Z", "updated_at": "2018-12-20T09:26:29Z", "closed_at": "2018-12-19T19:04:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen using Pyfakefs with pytest an AttributeError is thrown within the _find_modules function within fake_filesystem_unittest.py. This seems to be because the `__module__` Attribute does not exist on the EagerTensor from 'tensorflow.python.framework.ops'.\r\n\r\nStackTrace:\r\n```\r\nrequest = <SubRequest 'fs' for <Function 'test_my_fakefs'>>\r\n\r\n    @pytest.fixture\r\n    def fs(request):\r\n        \"\"\" Fake filesystem. \"\"\"\r\n        patcher = Patcher()\r\n>       patcher.setUp()\r\n\r\nvenv/lib/python3.6/site-packages/pyfakefs/pytest_plugin.py:35:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nvenv/lib/python3.6/site-packages/pyfakefs/fake_filesystem_unittest.py:495: in setUp\r\n    self._find_modules()\r\nvenv/lib/python3.6/site-packages/pyfakefs/fake_filesystem_unittest.py:458: in _find_modules\r\n    modules = {name: mod for name, mod in module.__dict__.items()\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n.0 = <dict_itemiterator object at 0x10f372458>\r\n\r\n    modules = {name: mod for name, mod in module.__dict__.items()\r\n               if inspect.ismodule(mod) and\r\n               mod.__name__ in module_names\r\n               or inspect.isclass(mod) and\r\n>              mod.__module__ in self._class_modules.get(name, [])}\r\nE   AttributeError: __module__\r\n\r\nvenv/lib/python3.6/site-packages/pyfakefs/fake_filesystem_unittest.py:462: AttributeError\r\n```\r\n**How To Reproduce**\r\nRun with tensorflow imported\r\n\r\n** Your enviroment**\r\n```bash\r\npython -c \"import platform; print(platform.platform())\": Darwin-18.2.0-x86_64-i386-64bit\r\npython -c \"import sys; print('Python', sys.version)\": [GCC 4.2.1 Compatible Apple LLVM 9.1.0 (clang-902.0.39.2)]\r\npython -c \"from pyfakefs.fake_filesystem import __version__; print('pyfakefs', __version__)\": pyfakefs 3.5.3\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/459", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/459/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/459/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/459", "id": 389995694, "node_id": "MDU6SXNzdWUzODk5OTU2OTQ=", "number": 459, "title": "Pathlib2 mkdir is not mocked", "user": {"login": "bmccutchon", "id": 8671821, "node_id": "MDQ6VXNlcjg2NzE4MjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8671821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmccutchon", "html_url": "https://github.com/bmccutchon", "followers_url": "https://api.github.com/users/bmccutchon/followers", "following_url": "https://api.github.com/users/bmccutchon/following{/other_user}", "gists_url": "https://api.github.com/users/bmccutchon/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmccutchon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmccutchon/subscriptions", "organizations_url": "https://api.github.com/users/bmccutchon/orgs", "repos_url": "https://api.github.com/users/bmccutchon/repos", "events_url": "https://api.github.com/users/bmccutchon/events{/privacy}", "received_events_url": "https://api.github.com/users/bmccutchon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2158989082, "node_id": "MDU6TGFiZWwyMTU4OTg5MDgy", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/not-a-bug", "name": "not-a-bug", "color": "19a8a5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-11T23:15:46Z", "updated_at": "2020-06-24T18:43:36Z", "closed_at": "2018-12-12T00:23:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I do `pathlib2.Path('/foo').mkdir()`, I get a permission error saying I can't create a directory in root. When I do this in a place where I actually can create a directory, it creates the directory on disk instead of in memory.\r\n\r\n**How To Reproduce**\r\n\r\n```python\r\nimport os\r\n\r\nimport pathlib2 as pathlib\r\nfrom fakefs import fake_filesystem_unittest\r\n\r\nclass FakeFsTest(fake_filesystem_unittest.TestCase):\r\n\r\n  def setUp(self):\r\n    self.setUpPyfakefs()\r\n\r\n  def testPathlib2Mkdir(self):\r\n    pathlib.Path('/foo').mkdir()  # OSError: [Errno 13] Permission denied: '/foo'\r\n```\r\n\r\nPytest failure:\r\n```\r\n_______________________________________________________ FakeFsTest.testPathlib2Mkdir ________________________________________________________\r\n\r\nself = <google3.ffs_test.FakeFsTest testMethod=testPathlib2Mkdir>\r\n\r\n    def testPathlib2Mkdir(self):\r\n>     pathlib.Path('/foo').mkdir()  # OSError: [Errno 13] Permission denied: '/foo'\r\n\r\nffs_test.py:12:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n../../.local/lib/python2.7/site-packages/pathlib2/__init__.py:1464: in mkdir\r\n    _try_except_filenotfounderror(_try_func, _exc_func)\r\n../../.local/lib/python2.7/site-packages/pathlib2/__init__.py:95: in _try_except_filenotfounderror\r\n    try_func()\r\n../../.local/lib/python2.7/site-packages/pathlib2/__init__.py:1455: in _try_func\r\n    self._accessor.mkdir(self, mode)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\npathobj = PosixPath('/foo'), args = (511,)\r\n\r\n    @functools.wraps(strfunc)\r\n    def wrapped(pathobj, *args):\r\n>       return strfunc(str(pathobj), *args)\r\nE       OSError: [Errno 13] Permission denied: '/foo'\r\n\r\n../../.local/lib/python2.7/site-packages/pathlib2/__init__.py:541: OSError\r\n```\r\n\r\n**Environment**\r\n\r\nPython 2.7.13 (default, Nov 24 2017, 17:33:09) [GCC 6.3.0 20170516]\r\npyfakefs 3.5.3\r\npathlib2 2.3.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/458", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/458/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/458/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/458", "id": 387345676, "node_id": "MDU6SXNzdWUzODczNDU2NzY=", "number": 458, "title": "How to mock existing Path objects?", "user": {"login": "mchwalisz", "id": 2182186, "node_id": "MDQ6VXNlcjIxODIxODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2182186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mchwalisz", "html_url": "https://github.com/mchwalisz", "followers_url": "https://api.github.com/users/mchwalisz/followers", "following_url": "https://api.github.com/users/mchwalisz/following{/other_user}", "gists_url": "https://api.github.com/users/mchwalisz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mchwalisz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mchwalisz/subscriptions", "organizations_url": "https://api.github.com/users/mchwalisz/orgs", "repos_url": "https://api.github.com/users/mchwalisz/repos", "events_url": "https://api.github.com/users/mchwalisz/events{/privacy}", "received_events_url": "https://api.github.com/users/mchwalisz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786278, "node_id": "MDU6TGFiZWwxODc3ODYyNzg=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-12-04T15:38:16Z", "updated_at": "2018-12-06T11:40:51Z", "closed_at": "2018-12-06T11:40:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nHow should I mock the `Path` object that is created at import? The following test shows exactly what I mean.\r\n\r\nI'm not sure if it is a bug. It is for me an unexpected behavior. The created `Path` objects are not mocked and still refer to the real file system.\r\n\r\n\r\n**How To Reproduce**\r\n```python\r\nfrom pathlib import Path\r\n# import example\r\n\"\"\"cat example.py\r\nfrom pathlib import Path\r\nhere = Path(\"/example_home\")\r\n\"\"\"\r\nhere = Path(\"/example_home\")\r\n\r\ndef do_something():\r\n    example2 = Path(\"/example_home\")\r\n    if not example2.exists():\r\n        raise FileNotFoundError()\r\n\r\ndef test_example_file(fs):\r\n    fs.create_dir(\"/example_home\")\r\n    assert Path(\"/example_home\").exists()\r\n    assert here.exists()\r\n    # assert example.here.exists()\r\n\r\ndef test_do_something(fs):\r\n    fs.create_dir(\"/example_home\")\r\n    do_something()\r\n```\r\n\r\nRun `pytest`. `test_example_file` will fail.\r\n\r\n**Your enviroment**\r\n\r\n```\r\nLinux-4.19.4-arch1-1-ARCH-x86_64-with-arch\r\nPython 3.7.1 (default, Oct 22 2018, 10:41:28) \r\n[GCC 8.2.1 20180831]\r\npyfakefs 3.5.3\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/454", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/454/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/454/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/454", "id": 385050849, "node_id": "MDU6SXNzdWUzODUwNTA4NDk=", "number": 454, "title": "README.md PyTest example needs updating", "user": {"login": "jmcgeheeiv", "id": 3721985, "node_id": "MDQ6VXNlcjM3MjE5ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3721985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmcgeheeiv", "html_url": "https://github.com/jmcgeheeiv", "followers_url": "https://api.github.com/users/jmcgeheeiv/followers", "following_url": "https://api.github.com/users/jmcgeheeiv/following{/other_user}", "gists_url": "https://api.github.com/users/jmcgeheeiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmcgeheeiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmcgeheeiv/subscriptions", "organizations_url": "https://api.github.com/users/jmcgeheeiv/orgs", "repos_url": "https://api.github.com/users/jmcgeheeiv/repos", "events_url": "https://api.github.com/users/jmcgeheeiv/events{/privacy}", "received_events_url": "https://api.github.com/users/jmcgeheeiv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1142748102, "node_id": "MDU6TGFiZWwxMTQyNzQ4MTAy", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/documentation", "name": "documentation", "color": "fcee9c", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-11-28T00:43:53Z", "updated_at": "2018-11-28T17:50:56Z", "closed_at": "2018-11-28T17:50:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "`README.md` says,\r\n```bash\r\npython -m pytest pyfakefs/tests/pytest_plugin_test.py\r\n```\r\nBut this file no longer exists.\r\n\r\nPlease update this with the correct command(s).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/453", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/453/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/453/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/453", "id": 383454677, "node_id": "MDU6SXNzdWUzODM0NTQ2Nzc=", "number": 453, "title": "Tests are failing due to wrong assumption", "user": {"login": "kbabioch", "id": 1918279, "node_id": "MDQ6VXNlcjE5MTgyNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1918279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbabioch", "html_url": "https://github.com/kbabioch", "followers_url": "https://api.github.com/users/kbabioch/followers", "following_url": "https://api.github.com/users/kbabioch/following{/other_user}", "gists_url": "https://api.github.com/users/kbabioch/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbabioch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbabioch/subscriptions", "organizations_url": "https://api.github.com/users/kbabioch/orgs", "repos_url": "https://api.github.com/users/kbabioch/repos", "events_url": "https://api.github.com/users/kbabioch/events{/privacy}", "received_events_url": "https://api.github.com/users/kbabioch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 634637961, "node_id": "MDU6TGFiZWw2MzQ2Mzc5NjE=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/infrastructure", "name": "infrastructure", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-22T09:47:00Z", "updated_at": "2020-06-24T18:43:57Z", "closed_at": "2018-11-22T17:59:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm packaging this for openSUSE. With the most recent update, I'm running into issues with the test suite. You can find the full build log [here](https://build.opensuse.org/build/devel:languages:python/openSUSE_Tumbleweed/x86_64/python-pyfakefs/_log), but it basically boils down to this:\r\n\r\n```\r\n[   59s] ======================================================================\r\n[   59s] FAIL: test_open_read_close (pyfakefs.tests.fake_stat_time_test.TestRealModeAPlus)\r\n[   59s] ----------------------------------------------------------------------\r\n[   59s] Traceback (most recent call last):\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 520, in test_open_read_close\r\n[   59s]     self.check_open_read_close_non_w_mode()\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 287, in check_open_read_close_non_w_mode\r\n[   59s]     self.assertLessExceptWindows(opened.st_atime, read.st_atime)\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 50, in assertLessExceptWindows\r\n[   59s]     self.assertLess(time1, time2)\r\n[   59s] AssertionError: 1542825259.904 not less than 1542825259.904\r\n[   59s] \r\n[   59s] ======================================================================\r\n[   59s] FAIL: test_open_read_close_new_file (pyfakefs.tests.fake_stat_time_test.TestRealModeAPlus)\r\n[   59s] ----------------------------------------------------------------------\r\n[   59s] Traceback (most recent call last):\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 511, in test_open_read_close_new_file\r\n[   59s]     self.check_open_read_close_new_file()\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 304, in check_open_read_close_new_file\r\n[   59s]     self.assertLessExceptWindows(created.st_atime, read.st_atime)\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 50, in assertLessExceptWindows\r\n[   59s]     self.assertLess(time1, time2)\r\n[   59s] AssertionError: 1542825259.948 not less than 1542825259.948\r\n[   59s] \r\n[   59s] ======================================================================\r\n[   59s] FAIL: test_open_read_close (pyfakefs.tests.fake_stat_time_test.TestRealModeR)\r\n[   59s] ----------------------------------------------------------------------\r\n[   59s] Traceback (most recent call last):\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 543, in test_open_read_close\r\n[   59s]     self.check_open_read_close_non_w_mode()\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 287, in check_open_read_close_non_w_mode\r\n[   59s]     self.assertLessExceptWindows(opened.st_atime, read.st_atime)\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 50, in assertLessExceptWindows\r\n[   59s]     self.assertLess(time1, time2)\r\n[   59s] AssertionError: 1542825260.184 not less than 1542825260.184\r\n[   59s] \r\n[   59s] ======================================================================\r\n[   59s] FAIL: test_open_read_flush_close (pyfakefs.tests.fake_stat_time_test.TestRealModeR)\r\n[   59s] ----------------------------------------------------------------------\r\n[   59s] Traceback (most recent call last):\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 561, in test_open_read_flush_close\r\n[   59s]     self.assertLessExceptWindows(opened.st_atime, read.st_atime)\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 50, in assertLessExceptWindows\r\n[   59s]     self.assertLess(time1, time2)\r\n[   59s] AssertionError: 1542825260.228 not less than 1542825260.228\r\n[   59s] \r\n[   59s] ======================================================================\r\n[   59s] FAIL: test_open_read_close (pyfakefs.tests.fake_stat_time_test.TestRealModeRPlus)\r\n[   59s] ----------------------------------------------------------------------\r\n[   59s] Traceback (most recent call last):\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 593, in test_open_read_close\r\n[   59s]     self.check_open_read_close_non_w_mode()\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 287, in check_open_read_close_non_w_mode\r\n[   59s]     self.assertLessExceptWindows(opened.st_atime, read.st_atime)\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 50, in assertLessExceptWindows\r\n[   59s]     self.assertLess(time1, time2)\r\n[   59s] AssertionError: 1542825260.356 not less than 1542825260.356\r\n[   59s] \r\n[   59s] ======================================================================\r\n[   59s] FAIL: test_open_read_close (pyfakefs.tests.fake_stat_time_test.TestRealModeWPlus)\r\n[   59s] ----------------------------------------------------------------------\r\n[   59s] Traceback (most recent call last):\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 446, in test_open_read_close\r\n[   59s]     self.assertLessExceptWindows(opened.st_atime, read.st_atime)\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 50, in assertLessExceptWindows\r\n[   59s]     self.assertLess(time1, time2)\r\n[   59s] AssertionError: 1542825260.808 not less than 1542825260.808\r\n[   59s] \r\n[   59s] ======================================================================\r\n[   59s] FAIL: test_open_read_close_new_file (pyfakefs.tests.fake_stat_time_test.TestRealModeWPlus)\r\n[   59s] ----------------------------------------------------------------------\r\n[   59s] Traceback (most recent call last):\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 424, in test_open_read_close_new_file\r\n[   59s]     self.check_open_read_close_new_file()\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 304, in check_open_read_close_new_file\r\n[   59s]     self.assertLessExceptWindows(created.st_atime, read.st_atime)\r\n[   59s]   File \"/home/abuild/rpmbuild/BUILD/pyfakefs-3.5.2/pyfakefs/tests/fake_stat_time_test.py\", line 50, in assertLessExceptWindows\r\n[   59s]     self.assertLess(time1, time2)\r\n[   59s] AssertionError: 1542825260.852 not less than 1542825260.852\r\n```\r\n\r\nAs you can see all of the timestamps are the same for me, so it seems that the assumption that it will be less is false.\r\n\r\nI'm guessing the code in question is this:\r\n\r\nhttps://github.com/jmcgeheeiv/pyfakefs/blob/f0c32f1972e3e176780ab247855719705084858e/pyfakefs/tests/fake_stat_time_test.py#L46-L50\r\n\r\nAnother interesting data point is that it works fine on my local machine (btrfs filesystem), but that it fails on our build service (see above), which is a XFS filesystem. Let me know if you need more information or want me to run some tests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/450", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/450/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/450/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/450", "id": 378809688, "node_id": "MDU6SXNzdWUzNzg4MDk2ODg=", "number": 450, "title": "Regression: modules_to_patch fails if fake module has no dir() method", "user": {"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-08T16:20:02Z", "updated_at": "2018-11-09T20:13:41Z", "closed_at": "2018-11-09T20:13:41Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The following code, taken from the documentation:\r\n```python\r\nclass DummyLocks(object):\r\n    _locks_module = django.core.files.locks\r\n\r\n    def __init__(self, fs):\r\n        pass\r\n\r\n    @staticmethod\r\n    def lock(f, flags):\r\n        return True\r\n\r\n    @staticmethod\r\n    def unlock(f):\r\n        return True\r\n\r\n    def __getattr__(self, name):\r\n        \"\"\"Forwards any non-faked calls to the standard module.\"\"\"\r\n        return getattr(self._locks_module, name)\r\n\r\n\r\nclass FakeFSTestCase(pyfakefs.fake_filesystem_unittest.TestCase):\r\n    def __init__(self, methodName='runTest'):\r\n        pyfakefs.fake_filesystem_unittest.TestCase.__init__(\r\n            self, methodName, modules_to_patch={'locks': DummyLocks})\r\n```\r\nyields \r\n```\r\nTraceback (most recent call last):\r\n  File \"D:\\..\\tests\\testUploadFilesView.py\", line 33, in setUp\r\n    self.setUpPyfakefs()\r\n  File \"D:\\..\\lib\\site-packages\\pyfakefs\\fake_filesystem_unittest.py\", line 187, in setUpPyfakefs\r\n    modules_to_patch=modules_to_patch)\r\n  File \"D:\\..\\lib\\site-packages\\pyfakefs\\fake_filesystem_unittest.py\", line 350, in __init__\r\n    for fct_name in fake_module.dir():\r\nAttributeError: type object 'DummyLocks' has no attribute 'dir'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/449", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/449/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/449/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/449", "id": 378458269, "node_id": "MDU6SXNzdWUzNzg0NTgyNjk=", "number": 449, "title": "tarfile add method bombs because lstat returns a uid of None", "user": {"login": "ut-adamc", "id": 4502290, "node_id": "MDQ6VXNlcjQ1MDIyOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/4502290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ut-adamc", "html_url": "https://github.com/ut-adamc", "followers_url": "https://api.github.com/users/ut-adamc/followers", "following_url": "https://api.github.com/users/ut-adamc/following{/other_user}", "gists_url": "https://api.github.com/users/ut-adamc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ut-adamc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ut-adamc/subscriptions", "organizations_url": "https://api.github.com/users/ut-adamc/orgs", "repos_url": "https://api.github.com/users/ut-adamc/repos", "events_url": "https://api.github.com/users/ut-adamc/events{/privacy}", "received_events_url": "https://api.github.com/users/ut-adamc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-07T20:34:42Z", "updated_at": "2020-06-24T19:21:21Z", "closed_at": "2018-11-22T21:29:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "When you call tarfile's .add method, it calls lstat underneath the scenes. When using fake_filesystem_unittest, the lstat call returns an st_uid value of None. This causes tarfile to raise an exception. \r\n\r\nThe following example demonstrates the problem. I tested with version 3.5.\r\n\r\n```python\r\nimport os\r\nimport tarfile\r\nimport unittest\r\n\r\nfrom pyfakefs import fake_filesystem_unittest as pyfakefs_unittest\r\n\r\nclass TestExample(pyfakefs_unittest.TestCase):\r\n    def setUp(self):\r\n        self.setUpPyfakefs()\r\n        self.fakefs_dir = '/fakefs'\r\n        self.fake_src_dir = os.path.join(self.fakefs_dir, 'src_dir')\r\n        self.fake_src_file = os.path.join(self.fake_src_dir, 'src_file.txt')\r\n        os.makedirs(self.fakefs_dir)\r\n        os.makedirs(self.fake_src_dir)\r\n        self.fs.create_file(self.fake_src_file)\r\n\r\n\r\n    def test_tarfile(self):\r\n        archive_filepath = os.path.join(self.fakefs_dir, 'myarchive.tar.bz2')\r\n        with tarfile.open(archive_filepath, \"w|bz2\") as tf:\r\n            tf.add(self.fake_src_dir)\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/448", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/448/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/448/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/448", "id": 378023143, "node_id": "MDU6SXNzdWUzNzgwMjMxNDM=", "number": 448, "title": "Support fakefs \"pause and resume\"", "user": {"login": "majuscule", "id": 187737, "node_id": "MDQ6VXNlcjE4NzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/187737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majuscule", "html_url": "https://github.com/majuscule", "followers_url": "https://api.github.com/users/majuscule/followers", "following_url": "https://api.github.com/users/majuscule/following{/other_user}", "gists_url": "https://api.github.com/users/majuscule/gists{/gist_id}", "starred_url": "https://api.github.com/users/majuscule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majuscule/subscriptions", "organizations_url": "https://api.github.com/users/majuscule/orgs", "repos_url": "https://api.github.com/users/majuscule/repos", "events_url": "https://api.github.com/users/majuscule/events{/privacy}", "received_events_url": "https://api.github.com/users/majuscule/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-06T20:37:39Z", "updated_at": "2018-11-27T21:30:31Z", "closed_at": "2018-11-22T21:30:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Feature request to support \"pausing\" and \"resuming\" use of the fakefs, allowing for a test process to run code that the fakefs does not support, then adding new data to the fakefs from the real fs upon resumption.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/447", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/447/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/447/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/447", "id": 378005223, "node_id": "MDU6SXNzdWUzNzgwMDUyMjM=", "number": 447, "title": "pyfakefs breaks subprocesses", "user": {"login": "majuscule", "id": 187737, "node_id": "MDQ6VXNlcjE4NzczNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/187737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/majuscule", "html_url": "https://github.com/majuscule", "followers_url": "https://api.github.com/users/majuscule/followers", "following_url": "https://api.github.com/users/majuscule/following{/other_user}", "gists_url": "https://api.github.com/users/majuscule/gists{/gist_id}", "starred_url": "https://api.github.com/users/majuscule/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/majuscule/subscriptions", "organizations_url": "https://api.github.com/users/majuscule/orgs", "repos_url": "https://api.github.com/users/majuscule/repos", "events_url": "https://api.github.com/users/majuscule/events{/privacy}", "received_events_url": "https://api.github.com/users/majuscule/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2159145017, "node_id": "MDU6TGFiZWwyMTU5MTQ1MDE3", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/limitation", "name": "limitation", "color": "f79165", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-06T19:45:53Z", "updated_at": "2020-06-24T18:44:35Z", "closed_at": "2018-11-06T19:52:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "`pyfakefs` breaks stdlib subprocess calls as shown below. Running on Ubuntu 16.04.5 LTS. \r\n\r\n```python\r\nimport subprocess\r\n\r\ndef test_fake_fs(fs):\r\n    assert subprocess.run(['echo'])\r\n```\r\n\r\n```\r\nself = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x7fcbfda2acc0>, errno = 9, filename = '9', winerror = None\r\n\r\n    def raise_os_error(self, errno, filename=None, winerror=None):\r\n        \"\"\"Raises OSError.\r\n        The error message is constructed from the given error code and shall\r\n        start with the error string issued in the real system.\r\n        Note: this is not true under Windows if winerror is given - in this\r\n        case a localized message specific to winerror will be shown in the\r\n        real file system.\r\n    \r\n        Args:\r\n            errno: A numeric error code from the C variable errno.\r\n            filename: The name of the affected file, if any.\r\n            winerror: Windows only - the specific Windows error code.\r\n        \"\"\"\r\n        message = self._error_message(errno)\r\n        if (winerror is not None and sys.platform == 'win32' and\r\n                self.is_windows_fs):\r\n            if IS_PY2:\r\n                raise WindowsError(winerror, message, filename)\r\n            raise OSError(errno, message, filename, winerror)\r\n>       raise OSError(errno, message, filename)\r\nE       OSError: [Errno 9] Bad file descriptor in the fake filesystem: '9'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/446", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/446/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/446/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/446", "id": 374792293, "node_id": "MDU6SXNzdWUzNzQ3OTIyOTM=", "number": 446, "title": "Trailing slash has an effect on add_real_directory()", "user": {"login": "ahshah", "id": 1134779, "node_id": "MDQ6VXNlcjExMzQ3Nzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1134779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahshah", "html_url": "https://github.com/ahshah", "followers_url": "https://api.github.com/users/ahshah/followers", "following_url": "https://api.github.com/users/ahshah/following{/other_user}", "gists_url": "https://api.github.com/users/ahshah/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahshah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahshah/subscriptions", "organizations_url": "https://api.github.com/users/ahshah/orgs", "repos_url": "https://api.github.com/users/ahshah/repos", "events_url": "https://api.github.com/users/ahshah/events{/privacy}", "received_events_url": "https://api.github.com/users/ahshah/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-28T20:00:42Z", "updated_at": "2020-06-24T18:45:07Z", "closed_at": "2018-10-29T17:59:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i'm having a hard time understanding the role a trailing '/' character plays in pyfakefs' add_real_directory() call.\r\n\r\nI saw this problem when trying to setup my timezone via pytz. Pytz seems to load the timezone information from a file with in it's installation directory. I've written two tests and ran them like so:\r\n\r\n`pytest -s test_pytz_fakefs_no_exception.py \r\npytest -s test_pytz_fakefs_with_exception.py`\r\n\r\n`test_pytz_fakefs_no_exception.py` seems to fail while `test_pytz_fakefs_no_exception.py` seems to succeed and I just don't understand why the API would be so stringent. Anyway, thought I'd file it here if it were considered to be a bug.\r\n\r\nI've attached the test cases to this ticket, thank you for taking a look. \r\n[tests.zip](https://github.com/jmcgeheeiv/pyfakefs/files/2523134/tests.zip)\r\n\r\n\r\n\r\nPytest/pyfakefs version:\r\n`\r\n $> pytest --version\r\nThis is pytest version 3.9.3, imported from /usr/local/lib/python3.6/dist-packages/pytest.py\r\nsetuptools registered plugins:\r\n  pytest-mock-1.10.0 at /usr/local/lib/python3.6/dist-packages/pytest_mock.py\r\n  pyfakefs-3.5 at /usr/local/lib/python3.6/dist-packages/pyfakefs/pytest_plugin.py\r\n`\r\n\r\nPython version:\r\n`\r\n$> python3 --version\r\nPython 3.6.6\r\n`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/445", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/445/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/445/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/445", "id": 373445284, "node_id": "MDU6SXNzdWUzNzM0NDUyODQ=", "number": 445, "title": "Pickled FakeFilesystem causes RecursionError when unpickling", "user": {"login": "ttsalo", "id": 1005351, "node_id": "MDQ6VXNlcjEwMDUzNTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1005351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ttsalo", "html_url": "https://github.com/ttsalo", "followers_url": "https://api.github.com/users/ttsalo/followers", "following_url": "https://api.github.com/users/ttsalo/following{/other_user}", "gists_url": "https://api.github.com/users/ttsalo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ttsalo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ttsalo/subscriptions", "organizations_url": "https://api.github.com/users/ttsalo/orgs", "repos_url": "https://api.github.com/users/ttsalo/repos", "events_url": "https://api.github.com/users/ttsalo/events{/privacy}", "received_events_url": "https://api.github.com/users/ttsalo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-24T11:57:53Z", "updated_at": "2018-10-25T18:12:18Z", "closed_at": "2018-10-25T18:05:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "When unpickling a pickled FakeFilesystem object, the __getattr__ method of FakeFile loops forever.\r\n\r\n```\r\nimport pickle\r\nfrom pyfakefs import fake_filesystem\r\nfilesystem = fake_filesystem.FakeFilesystem()\r\nfilesystem.open_files = []\r\np = pickle.dumps(filesystem)\r\npickle.loads(p)\r\n\r\nTraceback (most recent call last):\r\n  File \"<console>\", line 1, in <module>\r\n  File \".local/lib/python3.6/site-packages/pyfakefs/fake_filesystem.py\", line 477, in __getattr__\r\n    return getattr(self.stat_result, item)\r\n  File \".local/lib/python3.6/site-packages/pyfakefs/fake_filesystem.py\", line 477, in __getattr__\r\n    return getattr(self.stat_result, item)\r\n  File \".local/lib/python3.6/site-packages/pyfakefs/fake_filesystem.py\", line 477, in __getattr__\r\n    return getattr(self.stat_result, item)\r\n  [Previous line repeated 323 more times]\r\nRecursionError: maximum recursion depth exceeded\r\n```\r\n\r\nThe fix is fairly simple, use the same conditional as __setattr__ already does :\r\n```\r\n--- fake_filesystem.py.orig\t2018-10-24 14:05:28.497666345 +0300\r\n+++ fake_filesystem.py\t2018-10-15 14:32:20.872485946 +0300\r\n@@ -471,13 +471,15 @@\r\n           st_ctime: The desired creation time.\r\n         \"\"\"\r\n         self.st_ctime = st_ctime\r\n \r\n     def __getattr__(self, item):\r\n         \"\"\"Forward some properties to stat_result.\"\"\"\r\n-        return getattr(self.stat_result, item)\r\n+        if item in self.stat_types:\r\n+            return getattr(self.stat_result, item)\r\n+        return super(FakeFile, self).__getattr__(item)\r\n \r\n     def __setattr__(self, key, value):\r\n         \"\"\"Forward some properties to stat_result.\"\"\"\r\n         if key in self.stat_types:\r\n             return setattr(self.stat_result, key, value)\r\n         return super(FakeFile, self).__setattr__(key, value)\r\n```\r\nI can make a pull request if needed", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/438", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/438/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/438/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/438", "id": 367459014, "node_id": "MDU6SXNzdWUzNjc0NTkwMTQ=", "number": 438, "title": "No source package on PyPi for 3.4.2 and 3.4.3", "user": {"login": "OskarPersson", "id": 935414, "node_id": "MDQ6VXNlcjkzNTQxNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/935414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OskarPersson", "html_url": "https://github.com/OskarPersson", "followers_url": "https://api.github.com/users/OskarPersson/followers", "following_url": "https://api.github.com/users/OskarPersson/following{/other_user}", "gists_url": "https://api.github.com/users/OskarPersson/gists{/gist_id}", "starred_url": "https://api.github.com/users/OskarPersson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OskarPersson/subscriptions", "organizations_url": "https://api.github.com/users/OskarPersson/orgs", "repos_url": "https://api.github.com/users/OskarPersson/repos", "events_url": "https://api.github.com/users/OskarPersson/events{/privacy}", "received_events_url": "https://api.github.com/users/OskarPersson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 634637961, "node_id": "MDU6TGFiZWw2MzQ2Mzc5NjE=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/infrastructure", "name": "infrastructure", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/milestones/1", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/milestone/1", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/milestones/1/labels", "id": 2589430, "node_id": "MDk6TWlsZXN0b25lMjU4OTQzMA==", "number": 1, "title": "v3.4", "description": null, "creator": {"login": "jmcgeheeiv", "id": 3721985, "node_id": "MDQ6VXNlcjM3MjE5ODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3721985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmcgeheeiv", "html_url": "https://github.com/jmcgeheeiv", "followers_url": "https://api.github.com/users/jmcgeheeiv/followers", "following_url": "https://api.github.com/users/jmcgeheeiv/following{/other_user}", "gists_url": "https://api.github.com/users/jmcgeheeiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmcgeheeiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmcgeheeiv/subscriptions", "organizations_url": "https://api.github.com/users/jmcgeheeiv/orgs", "repos_url": "https://api.github.com/users/jmcgeheeiv/repos", "events_url": "https://api.github.com/users/jmcgeheeiv/events{/privacy}", "received_events_url": "https://api.github.com/users/jmcgeheeiv/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "open", "created_at": "2017-06-18T16:29:33Z", "updated_at": "2018-10-08T07:03:49Z", "due_on": null, "closed_at": null}, "comments": 7, "created_at": "2018-10-06T13:52:11Z", "updated_at": "2018-10-08T16:09:17Z", "closed_at": "2018-10-08T07:03:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since 3.4.2 there is only a binary package instead of a source package available on PyPi. Source packages are required when doing `pip download --no-binary` for installation on a machine without internet access.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/436", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/436/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/436/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/436", "id": 365593677, "node_id": "MDU6SXNzdWUzNjU1OTM2Nzc=", "number": 436, "title": "Remove support for Python 3.3", "user": {"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 634637961, "node_id": "MDU6TGFiZWw2MzQ2Mzc5NjE=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/infrastructure", "name": "infrastructure", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-01T18:49:15Z", "updated_at": "2020-06-24T18:45:15Z", "closed_at": "2018-10-03T11:56:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Python 3.3 had it's end of life a year ago and seems basically not to be used anymore.\r\nAs the support for this version is fading (we had already problems with pytest and Travis), I suppose to drop support for the next release.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/435", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/435/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/435/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/435", "id": 365313429, "node_id": "MDU6SXNzdWUzNjUzMTM0Mjk=", "number": 435, "title": "st_ctime/st_atime/st_mtime differences in behaviour compared to linux", "user": {"login": "simonfagerholm", "id": 21139421, "node_id": "MDQ6VXNlcjIxMTM5NDIx", "avatar_url": "https://avatars3.githubusercontent.com/u/21139421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonfagerholm", "html_url": "https://github.com/simonfagerholm", "followers_url": "https://api.github.com/users/simonfagerholm/followers", "following_url": "https://api.github.com/users/simonfagerholm/following{/other_user}", "gists_url": "https://api.github.com/users/simonfagerholm/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonfagerholm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonfagerholm/subscriptions", "organizations_url": "https://api.github.com/users/simonfagerholm/orgs", "repos_url": "https://api.github.com/users/simonfagerholm/repos", "events_url": "https://api.github.com/users/simonfagerholm/events{/privacy}", "received_events_url": "https://api.github.com/users/simonfagerholm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-10-01T05:28:21Z", "updated_at": "2018-10-08T19:07:29Z", "closed_at": "2018-10-08T19:01:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I might have found a problem depending on the expected behaviour.\r\nI noticed that the times st_ctime/st_atime/st_mtime are behaving differently in regard to when the times are updated and if they are updated.\r\nI created two testfiles that run the same sequences on the real fs and on pyfakefs and checks it, see travis build:\r\nhttps://travis-ci.org/simonfagerholm/pyfakefs/builds/434572170\r\nThe test files are fake_stat_time_test.py and real_stat_time_test.py\r\n\r\nOn linux the real_stat_time_test.py passes all tests (confirming that the expected result corresponds to linux fs) but many fail on pyfakefs. However, on mac os the real_stat_time_test.py also fails a few times so linux and mac behaves differently.\r\n\r\nHow is pyfakefs supposed to work?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/431", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/431/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/431/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/431", "id": 362643190, "node_id": "MDU6SXNzdWUzNjI2NDMxOTA=", "number": 431, "title": "Permission checking does not match Posix behaviour for root", "user": {"login": "ttsalo", "id": 1005351, "node_id": "MDQ6VXNlcjEwMDUzNTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1005351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ttsalo", "html_url": "https://github.com/ttsalo", "followers_url": "https://api.github.com/users/ttsalo/followers", "following_url": "https://api.github.com/users/ttsalo/following{/other_user}", "gists_url": "https://api.github.com/users/ttsalo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ttsalo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ttsalo/subscriptions", "organizations_url": "https://api.github.com/users/ttsalo/orgs", "repos_url": "https://api.github.com/users/ttsalo/repos", "events_url": "https://api.github.com/users/ttsalo/events{/privacy}", "received_events_url": "https://api.github.com/users/ttsalo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-21T14:34:58Z", "updated_at": "2018-10-24T10:52:24Z", "closed_at": "2018-10-24T10:52:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to simulate file operations performed by root but ran into the following problem: \r\n\r\nPermission checking in various operations including mkdir does not match real os behaviour when running as root. Real os ignores filesystem permissions when uid=0 whereas pyfakefs raises permission denied exceptions.\r\n\r\n```#!/usr/bin/env python\r\n\r\nimport os\r\nfrom pyfakefs import fake_filesystem\r\nfilesystem = fake_filesystem.FakeFilesystem()\r\nfake_os = fake_filesystem.FakeOsModule(filesystem)\r\n\r\nos.mkdir(\"/tmp/test\")\r\nos.chmod(\"/tmp/test\", 0o444)\r\nos.mkdir(\"/tmp/test/test2\")\r\n\r\nos.rmdir(\"/tmp/test/test2\")\r\nos.rmdir(\"/tmp/test\")\r\n\r\nfake_os.mkdir(\"/tmp\")\r\nfake_os.mkdir(\"/tmp/test\")\r\nfake_os.chmod(\"/tmp/test\", 0o444)\r\n\r\n# Raises EACCES\r\nfake_os.mkdir(\"/tmp/test/test2\")\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/427", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/427/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/427/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/427/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/427", "id": 357946952, "node_id": "MDU6SXNzdWUzNTc5NDY5NTI=", "number": 427, "title": "[3.4.3] Multiple tests in TestCase fail when not run in debug - shutil.make_archive", "user": {"login": "inkychris", "id": 22237021, "node_id": "MDQ6VXNlcjIyMjM3MDIx", "avatar_url": "https://avatars0.githubusercontent.com/u/22237021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inkychris", "html_url": "https://github.com/inkychris", "followers_url": "https://api.github.com/users/inkychris/followers", "following_url": "https://api.github.com/users/inkychris/following{/other_user}", "gists_url": "https://api.github.com/users/inkychris/gists{/gist_id}", "starred_url": "https://api.github.com/users/inkychris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inkychris/subscriptions", "organizations_url": "https://api.github.com/users/inkychris/orgs", "repos_url": "https://api.github.com/users/inkychris/repos", "events_url": "https://api.github.com/users/inkychris/events{/privacy}", "received_events_url": "https://api.github.com/users/inkychris/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2018-09-07T07:14:18Z", "updated_at": "2018-09-09T21:38:11Z", "closed_at": "2018-09-09T21:38:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure if this is a bug or an issue with my approach but the following minimal test example only appears to run both tests successfully if run with the debugger using PyCharm 2018.2.3 CE on Windows 10 (Python 3.7.0). \r\n\r\n```py\r\nfrom pyfakefs.fake_filesystem_unittest import TestCase\r\nimport shutil\r\n\r\n\r\nclass Test(TestCase):\r\n    def setUp(self):\r\n        self.setUpPyfakefs()\r\n        self.fs.create_file('src/file_1.txt')\r\n        self.fs.create_file('src/a/file_2.txt')\r\n        shutil.make_archive('archive', 'zip', root_dir='src')\r\n\r\n    def test_a(self):\r\n        self.assertTrue(True)\r\n\r\n    def test_b(self):\r\n        self.assertTrue(True)\r\n```\r\n\r\nStack trace:\r\n```\r\n.E\r\n======================================================================\r\nERROR: test_b (scratchpad.Test)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"C:\\Dev\\venv\\lib\\site-packages\\pyfakefs\\fake_filesystem.py\", line 1876, in get_object_from_normpath\r\n    target_object = target_object.get_entry(component)\r\n  File \"C:\\Dev\\venv\\lib\\site-packages\\pyfakefs\\fake_filesystem.py\", line 617, in get_entry\r\n    return self.contents[pathname_name]\r\nKeyError: 'a'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Dev\\venv\\lib\\site-packages\\pyfakefs\\fake_filesystem.py\", line 1062, in stat\r\n    entry_path, follow_symlinks, allow_fd=True)\r\n  File \"C:\\Dev\\venv\\lib\\site-packages\\pyfakefs\\fake_filesystem.py\", line 1921, in resolve\r\n    return self.get_object_from_normpath(self.resolve_path(file_path))\r\n  File \"C:\\Dev\\venv\\lib\\site-packages\\pyfakefs\\fake_filesystem.py\", line 1878, in get_object_from_normpath\r\n    self.raise_io_error(errno.ENOENT, file_path)\r\n  File \"C:\\Dev\\venv\\lib\\site-packages\\pyfakefs\\fake_filesystem.py\", line 878, in raise_io_error\r\n    raise IOError(errno, self._error_message(errno), filename)\r\nFileNotFoundError: [Errno 2] No such file or directory in the fake filesystem: '\\\\a'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Dev\\scratchpad.py\", line 10, in setUp\r\n    shutil.make_archive('archive', 'zip', root_dir='src')\r\n  File \"C:\\Dev\\venv\\lib\\shutil.py\", line 813, in make_archive\r\n    filename = func(base_name, base_dir, **kwargs)\r\n  File \"C:\\Dev\\venv\\lib\\shutil.py\", line 705, in _make_zipfile\r\n    zf.write(path, path)\r\n  File \"c:\\dev\\python37\\Lib\\zipfile.py\", line 1688, in write\r\n    zinfo = ZipInfo.from_file(filename, arcname)\r\n  File \"c:\\dev\\python37\\Lib\\zipfile.py\", line 483, in from_file\r\n    st = os.stat(filename)\r\n  File \"C:\\Dev\\venv\\lib\\site-packages\\pyfakefs\\fake_filesystem.py\", line 3755, in stat\r\n    return self.filesystem.stat(entry_path, follow_symlinks)\r\n  File \"C:\\Dev\\venv\\lib\\site-packages\\pyfakefs\\fake_filesystem.py\", line 1070, in stat\r\n    self.raise_os_error(io_error.errno, entry_path, winerror=winerror)\r\n  File \"C:\\Dev\\venv\\lib\\site-packages\\pyfakefs\\fake_filesystem.py\", line 867, in raise_os_error\r\n    raise OSError(errno, message, filename)\r\nFileNotFoundError: [Errno 2] No such file or directory in the fake filesystem: 'a'\r\n\r\n----------------------------------------------------------------------\r\nRan 2 tests in 0.016s\r\n\r\nFAILED (errors=1)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/424", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/424/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/424/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/424", "id": 353731825, "node_id": "MDU6SXNzdWUzNTM3MzE4MjU=", "number": 424, "title": "create_file(..., contents=None) unintentionally crates a \"large file\"", "user": {"login": "kamichal", "id": 9801087, "node_id": "MDQ6VXNlcjk4MDEwODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/9801087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamichal", "html_url": "https://github.com/kamichal", "followers_url": "https://api.github.com/users/kamichal/followers", "following_url": "https://api.github.com/users/kamichal/following{/other_user}", "gists_url": "https://api.github.com/users/kamichal/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamichal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamichal/subscriptions", "organizations_url": "https://api.github.com/users/kamichal/orgs", "repos_url": "https://api.github.com/users/kamichal/repos", "events_url": "https://api.github.com/users/kamichal/events{/privacy}", "received_events_url": "https://api.github.com/users/kamichal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-24T10:35:47Z", "updated_at": "2018-09-03T14:16:23Z", "closed_at": "2018-09-03T14:16:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems it's a lack in the API:\r\n```python\r\n    # pytest\r\n    def test_thinks_is_a_large_file(fs):\r\n        fs.create_file(\"/tmp/file.txt\", contents=None)\r\n    \r\n        with open(\"/tmp/file.txt\", 'rt') as ff:\r\n            ff.read()\r\n```\r\nIf the contents is `None` there is no chance to later read the file.\r\nIn my opinion `None` in this API should be equivalent to `\"\"` - giving an empty file. However at read attempt it raises:\r\n\r\n```python\r\n    self = <pyfakefs.fake_filesystem.FakeFileWrapper object at 0x7f5a8c6dd310>\r\n    name = 'read'\r\n    \r\n        def __getattr__(self, name):\r\n            if self.file_object.is_large_file():\r\n    >           raise FakeLargeFileIoException(self._file_path)\r\n    E           FakeLargeFileIoException: Read and write operations not supported for fake large file: /tmp/file.txt\r\n```\r\nOf course setting `contents=''` works OK.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/423", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/423/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/423/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/423", "id": 352288941, "node_id": "MDU6SXNzdWUzNTIyODg5NDE=", "number": 423, "title": "Mock out xattr calls", "user": {"login": "dtangster", "id": 2933038, "node_id": "MDQ6VXNlcjI5MzMwMzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2933038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtangster", "html_url": "https://github.com/dtangster", "followers_url": "https://api.github.com/users/dtangster/followers", "following_url": "https://api.github.com/users/dtangster/following{/other_user}", "gists_url": "https://api.github.com/users/dtangster/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtangster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtangster/subscriptions", "organizations_url": "https://api.github.com/users/dtangster/orgs", "repos_url": "https://api.github.com/users/dtangster/repos", "events_url": "https://api.github.com/users/dtangster/events{/privacy}", "received_events_url": "https://api.github.com/users/dtangster/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-20T20:42:34Z", "updated_at": "2018-09-26T20:19:43Z", "closed_at": "2018-09-26T20:19:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "pyfakefs doesn't seem mock out calls like `os.getxattr`, `os.listxattr`, `os.setxattr`, etc.\r\n\r\nAre there plans to support this in the future?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/421", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/421/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/421/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/421", "id": 344490197, "node_id": "MDU6SXNzdWUzNDQ0OTAxOTc=", "number": 421, "title": "Shutil rmtree failing on python 3.7", "user": {"login": "omangin", "id": 1171989, "node_id": "MDQ6VXNlcjExNzE5ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1171989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omangin", "html_url": "https://github.com/omangin", "followers_url": "https://api.github.com/users/omangin/followers", "following_url": "https://api.github.com/users/omangin/following{/other_user}", "gists_url": "https://api.github.com/users/omangin/gists{/gist_id}", "starred_url": "https://api.github.com/users/omangin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omangin/subscriptions", "organizations_url": "https://api.github.com/users/omangin/orgs", "repos_url": "https://api.github.com/users/omangin/repos", "events_url": "https://api.github.com/users/omangin/events{/privacy}", "received_events_url": "https://api.github.com/users/omangin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-25T15:19:22Z", "updated_at": "2018-07-25T20:59:07Z", "closed_at": "2018-07-25T20:59:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following test (adapted from [the documentation](http://jmcgeheeiv.github.io/pyfakefs/release/usage.html#patch-using-fake-filesystem-unittest)) raises an error on Python 3.7 although working on other versions.\r\n\r\n```python\r\nimport os\r\nimport shutil\r\n\r\nfrom pyfakefs.fake_filesystem_unittest import TestCase\r\n\r\n\r\nclass ExampleTestCase(TestCase):\r\n\r\n    def setUp(self):\r\n        self.setUpPyfakefs()\r\n\r\n    def test_create_file(self):\r\n        file_path = '/test/file.txt'\r\n        self.assertFalse(os.path.exists(file_path))\r\n        self.fs.CreateFile(file_path)\r\n        self.assertTrue(os.path.exists(file_path))\r\n        shutil.rmtree('/test/')\r\n        self.assertFalse(os.path.exists(file_path))\r\n```\r\n\r\n```\r\nE\r\n======================================================================\r\nERROR: test_create_file (test.ExampleTestCase)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/test.py\", line 17, in test_create_file\r\n    shutil.rmtree('/test/')\r\n  File \"/tmp/env/lib/python3.7/shutil.py\", line 485, in rmtree\r\n    _rmtree_safe_fd(fd, path, onerror)\r\n  File \"/tmp/env/lib/python3.7/shutil.py\", line 400, in _rmtree_safe_fd\r\n    with os.scandir(topfd) as scandir_it:\r\n  File \"/tmp/e/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py\", line 3577, in scandir\r\n    return self.filesystem.ScanDir(path)\r\n  File \"/tmp/e/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py\", line 2857, in ScanDir\r\n    return self.ScanDirIter(self, path)\r\n  File \"/tmp/e/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py\", line 2813, in __init__\r\n    self.path = self.filesystem.ResolvePath(path)\r\n  File \"/tmp/e/lib/python3.7/site-packages/pyfakefs/fake_filesystem.py\", line 1738, in ResolvePath\r\n    file_path = os.fspath(file_path)\r\nTypeError: expected str, bytes or os.PathLike object, not int\r\n\r\n----------------------------------------------------------------------\r\nRan 1 test in 0.002s\r\n\r\nFAILED (errors=1)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/420", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/420/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/420/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/420", "id": 342509080, "node_id": "MDU6SXNzdWUzNDI1MDkwODA=", "number": 420, "title": "pathlib.Path.open is not patched when used with create_file and pytest", "user": {"login": "ian-h-chamberlain", "id": 11131775, "node_id": "MDQ6VXNlcjExMTMxNzc1", "avatar_url": "https://avatars0.githubusercontent.com/u/11131775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ian-h-chamberlain", "html_url": "https://github.com/ian-h-chamberlain", "followers_url": "https://api.github.com/users/ian-h-chamberlain/followers", "following_url": "https://api.github.com/users/ian-h-chamberlain/following{/other_user}", "gists_url": "https://api.github.com/users/ian-h-chamberlain/gists{/gist_id}", "starred_url": "https://api.github.com/users/ian-h-chamberlain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ian-h-chamberlain/subscriptions", "organizations_url": "https://api.github.com/users/ian-h-chamberlain/orgs", "repos_url": "https://api.github.com/users/ian-h-chamberlain/repos", "events_url": "https://api.github.com/users/ian-h-chamberlain/events{/privacy}", "received_events_url": "https://api.github.com/users/ian-h-chamberlain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2159145017, "node_id": "MDU6TGFiZWwyMTU5MTQ1MDE3", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/limitation", "name": "limitation", "color": "f79165", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-18T22:07:24Z", "updated_at": "2020-06-24T18:45:36Z", "closed_at": "2018-07-24T15:17:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "After declaring a `pathlib.Path` at module scope, then the pytest `fs` fixture to `create_file` for that path, subsequent calls to `pathlib.Path.open` fail with \"No such file or directory\". A quick look at `pathlib.Path.open` shows that it uses `io.open` internally.\r\n\r\nI'm not sure if there's a straightforward way to patch methods of an object declared at module scope, so maybe this is more of a technical limitation than a bug, but I figured it was worth reporting anyway.\r\n\r\n- OS: reproduced on both macOS 10.13.6 and CentOS Linux release 7.3.1611\r\n- Python version: 3.6.4\r\n- Pytest version: 3.4.0\r\n- Pyfakefs version: 3.4.3, also tested against  `master`\r\n\r\nMinimal example\r\n```py\r\n# Minimal example of pathlib patching with pyfakefs\r\n\r\nimport pathlib\r\n\r\nEXAMPLE_FILE = pathlib.Path('/test') / 'file'\r\n\r\n\r\ndef test_example_file(fs):\r\n    # NOTE: moving the EXAMPLE_FILE assignment here causes the test to pass\r\n\r\n    fs.create_file(EXAMPLE_FILE, contents='stuff here')\r\n\r\n    with open(EXAMPLE_FILE) as file:\r\n        assert file.read() == 'stuff here' # this works\r\n\r\n    with EXAMPLE_FILE.open() as file:\r\n        assert file.read() == 'stuff here' # this fails\r\n\r\n    # other Path methods seem to use Path.open under the hood, so they fail too\r\n    assert EXAMPLE_FILE.read_text() == 'stuff here' # fails\r\n    assert EXAMPLE_FILE.is_file() # fails\r\n```\r\nOutput:\r\n```\r\n$ pytest test_pathlib.py\r\n======================================== test session starts ========================================\r\nplatform darwin -- Python 3.6.4, pytest-3.4.0, py-1.5.2, pluggy-0.6.0\r\nrootdir: /Users/ichamberlain/Downloads, inifile:\r\nplugins: timeout-1.2.0, profiling-1.2.11, pep8-1.0.6, mock-1.6.3, cov-2.5.1, pyfakefs-3.5\r\ncollected 1 item\r\n\r\ntest_pathlib.py F                                                                             [100%]\r\n\r\n============================================= FAILURES ==============================================\r\n_________________________________________ test_example_file _________________________________________\r\n\r\nfs = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x10ff8eeb8>\r\n\r\n    def test_example_file(fs):\r\n        fs.create_file(EXAMPLE_FILE, contents='stuff here')\r\n\r\n        with open(EXAMPLE_FILE) as file:\r\n            assert file.read() == 'stuff here' # this works\r\n\r\n>       with EXAMPLE_FILE.open() as file:\r\n\r\nUsers/ichamberlain/Downloads/test_pathlib.py:16:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nUsers/ichamberlain/.pyenv/versions/3.6.4/lib/python3.6/pathlib.py:1161: in open\r\n    ???\r\nUsers/ichamberlain/.pyenv/versions/3.6.4/lib/python3.6/pathlib.py:1015: in _opener\r\n    ???\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\npathobj = PosixPath('/test/file'), args = (16777216, 438)\r\n\r\n>   ???\r\nE   FileNotFoundError: [Errno 2] No such file or directory: '/test/file'\r\n\r\nUsers/ichamberlain/.pyenv/versions/3.6.4/lib/python3.6/pathlib.py:387: FileNotFoundError\r\n===================================== 1 failed in 0.36 seconds ======================================\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/419", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/419/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/419/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/419/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/419", "id": 339221475, "node_id": "MDU6SXNzdWUzMzkyMjE0NzU=", "number": 419, "title": "Improve error message for \"Bad file descriptor in fake filesystem\"", "user": {"login": "boxed", "id": 332428, "node_id": "MDQ6VXNlcjMzMjQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/332428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxed", "html_url": "https://github.com/boxed", "followers_url": "https://api.github.com/users/boxed/followers", "following_url": "https://api.github.com/users/boxed/following{/other_user}", "gists_url": "https://api.github.com/users/boxed/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxed/subscriptions", "organizations_url": "https://api.github.com/users/boxed/orgs", "repos_url": "https://api.github.com/users/boxed/repos", "events_url": "https://api.github.com/users/boxed/events{/privacy}", "received_events_url": "https://api.github.com/users/boxed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-07-08T12:20:42Z", "updated_at": "2018-07-08T16:07:13Z", "closed_at": "2018-07-08T16:07:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "The error message would be infinitely nicer if it contained the string of what one attempted to access. It seems it does, but not when you use a file ID.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/418", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/418/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/418/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/418", "id": 339220951, "node_id": "MDU6SXNzdWUzMzkyMjA5NTE=", "number": 418, "title": "os.devnull doesn't exist", "user": {"login": "boxed", "id": 332428, "node_id": "MDQ6VXNlcjMzMjQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/332428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxed", "html_url": "https://github.com/boxed", "followers_url": "https://api.github.com/users/boxed/followers", "following_url": "https://api.github.com/users/boxed/following{/other_user}", "gists_url": "https://api.github.com/users/boxed/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxed/subscriptions", "organizations_url": "https://api.github.com/users/boxed/orgs", "repos_url": "https://api.github.com/users/boxed/repos", "events_url": "https://api.github.com/users/boxed/events{/privacy}", "received_events_url": "https://api.github.com/users/boxed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-08T12:13:22Z", "updated_at": "2018-07-08T19:26:17Z", "closed_at": "2018-07-08T19:26:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/417", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/417/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/417/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/417/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/417", "id": 339219751, "node_id": "MDU6SXNzdWUzMzkyMTk3NTE=", "number": 417, "title": "open('foo', 'w').write('bar') not handled correctly", "user": {"login": "boxed", "id": 332428, "node_id": "MDQ6VXNlcjMzMjQyOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/332428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/boxed", "html_url": "https://github.com/boxed", "followers_url": "https://api.github.com/users/boxed/followers", "following_url": "https://api.github.com/users/boxed/following{/other_user}", "gists_url": "https://api.github.com/users/boxed/gists{/gist_id}", "starred_url": "https://api.github.com/users/boxed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/boxed/subscriptions", "organizations_url": "https://api.github.com/users/boxed/orgs", "repos_url": "https://api.github.com/users/boxed/repos", "events_url": "https://api.github.com/users/boxed/events{/privacy}", "received_events_url": "https://api.github.com/users/boxed/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 2158989082, "node_id": "MDU6TGFiZWwyMTU4OTg5MDgy", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/not-a-bug", "name": "not-a-bug", "color": "19a8a5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-07-08T11:52:56Z", "updated_at": "2020-06-24T18:46:40Z", "closed_at": "2018-07-08T14:36:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had a program that did\r\n\r\n```python\r\nopen('foo', 'w').write('bar')\r\n```\r\n\r\n(which is not ideomatic but in CPython works fine), and after that the file is just not there even though I was writing over an existing file created with `fs.create_file`. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/416", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/416/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/416/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/416/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/416", "id": 336120753, "node_id": "MDU6SXNzdWUzMzYxMjA3NTM=", "number": 416, "title": "TestCase without modules_to_reload might not clean up properly", "user": {"login": "ivar010f", "id": 6051282, "node_id": "MDQ6VXNlcjYwNTEyODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6051282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivar010f", "html_url": "https://github.com/ivar010f", "followers_url": "https://api.github.com/users/ivar010f/followers", "following_url": "https://api.github.com/users/ivar010f/following{/other_user}", "gists_url": "https://api.github.com/users/ivar010f/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivar010f/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivar010f/subscriptions", "organizations_url": "https://api.github.com/users/ivar010f/orgs", "repos_url": "https://api.github.com/users/ivar010f/repos", "events_url": "https://api.github.com/users/ivar010f/events{/privacy}", "received_events_url": "https://api.github.com/users/ivar010f/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-27T08:09:42Z", "updated_at": "2018-06-28T17:11:48Z", "closed_at": "2018-06-28T07:18:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "When not using `modules_to_reload` in a test case, the clean up might not be done properly. I could not find any mention of this in the documentation or issues.\r\n\r\n### Fail case and solution\r\nIn a testsuite of ~1000 tests where many use real file IO, a `pyfakefs` test without the `modules_to_reload` caused a following testcase to recieve a module using `FakePath`, when a real `Path` were expected. The failing test passed after adding an explicit `modules_to_reload` to the `pyfakefs` test. This was the only fake test without the `modules_to_reload` attribute set.\r\n\r\n### Test setup sketch\r\n[...]\r\nFakeTest: uses module `MyToolPaths` in a `pyfakefs TestCase`.\r\n[...]\r\nRealTest: a standard `unittest.TestCase` that uses module `MyToolPaths`, which will unexpectedly use `FakePath` when run after FakeTest in a `unittest discover` command, resulting in a fail. Standalone, it runs fine.\r\n[...]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/414", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/414/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/414/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/414", "id": 330908592, "node_id": "MDU6SXNzdWUzMzA5MDg1OTI=", "number": 414, "title": "Incorrect tell result", "user": {"login": "agroce", "id": 967816, "node_id": "MDQ6VXNlcjk2NzgxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/967816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroce", "html_url": "https://github.com/agroce", "followers_url": "https://api.github.com/users/agroce/followers", "following_url": "https://api.github.com/users/agroce/following{/other_user}", "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroce/subscriptions", "organizations_url": "https://api.github.com/users/agroce/orgs", "repos_url": "https://api.github.com/users/agroce/repos", "events_url": "https://api.github.com/users/agroce/events{/privacy}", "received_events_url": "https://api.github.com/users/agroce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 640333076, "node_id": "MDU6TGFiZWw2NDAzMzMwNzY=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/TSTL", "name": "TSTL", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-09T18:17:51Z", "updated_at": "2018-06-10T11:48:47Z", "closed_at": "2018-06-10T11:48:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport shutil\r\nimport pyfakefs.fake_filesystem\r\nimport os\r\n\r\nROOT_PATH = \"/Volumes/ramdisk/test\"\r\n\r\nfs = pyfakefs.fake_filesystem.FakeFilesystem()\r\nfs.CreateDirectory('/Volumes')\r\nfs.CreateDirectory('/Volumes/ramdisk')\r\nfs.CreateDirectory('/Volumes/ramdisk/test')\r\nos0 = pyfakefs.fake_filesystem.FakeOsModule(fs)\r\nopener0 = pyfakefs.fake_filesystem.FakeFileOpen(fs)\r\n\r\nif False:\r\n    os0 = os\r\n    shutil.rmtree(ROOT_PATH)\r\n    os.mkdir(ROOT_PATH)\r\n    opener0 = open\r\n\r\npath0 = ROOT_PATH \r\npath0 += os.path.sep + component0 \r\nbytes0 = 0 \r\nbytes0 += 1 \r\nstr0 = \"\" \r\nstr0 += 'a' \r\nstr0 += 'a' \r\nfile0 = opener0(path0,'a') \r\nfile0.write(str0) \r\nfile0.seek(bytes0) \r\nresult = file0.tell() \r\n\r\nprint result\r\n```\r\n\r\n2 for pyfakefs, 1 for OS", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/412", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/412/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/412/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/412", "id": 329589406, "node_id": "MDU6SXNzdWUzMjk1ODk0MDY=", "number": 412, "title": "getsize difference", "user": {"login": "agroce", "id": 967816, "node_id": "MDQ6VXNlcjk2NzgxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/967816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroce", "html_url": "https://github.com/agroce", "followers_url": "https://api.github.com/users/agroce/followers", "following_url": "https://api.github.com/users/agroce/following{/other_user}", "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroce/subscriptions", "organizations_url": "https://api.github.com/users/agroce/orgs", "repos_url": "https://api.github.com/users/agroce/repos", "events_url": "https://api.github.com/users/agroce/events{/privacy}", "received_events_url": "https://api.github.com/users/agroce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 640333076, "node_id": "MDU6TGFiZWw2NDAzMzMwNzY=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/TSTL", "name": "TSTL", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-06-05T19:15:47Z", "updated_at": "2018-06-08T20:25:20Z", "closed_at": "2018-06-08T18:17:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "May be related to the tell bug?\r\n\r\n```\r\nimport shutil\r\nimport pyfakefs.fake_filesystem\r\nimport os\r\n\r\nROOT_PATH = \"/Volumes/ramdisk/test\"\r\n\r\nfs = pyfakefs.fake_filesystem.FakeFilesystem()\r\nfs.CreateDirectory('/Volumes')\r\nfs.CreateDirectory('/Volumes/ramdisk')\r\nfs.CreateDirectory('/Volumes/ramdisk/test')\r\nos0 = pyfakefs.fake_filesystem.FakeOsModule(fs)\r\nopener0 = pyfakefs.fake_filesystem.FakeFileOpen(fs)\r\n\r\nif False:\r\n    os0 = os\r\n    shutil.rmtree(ROOT_PATH)\r\n    os.mkdir(ROOT_PATH)\r\n    opener0 = open\r\n\r\ncomponent0 = \"alpha\" \r\npath0 = ROOT_PATH \r\npath0 += os.path.sep + component0 \r\nbytes0 = 0 \r\nstr0 = \"\" \r\nstr0 += 'a' \r\nfile0 = opener0(path0,'a') \r\nfile0.write(str0) \r\nfile0.seek(bytes0) \r\nfile0.truncate() \r\nfile0.write(str0) \r\nfile0.truncate() \r\nresult = os0.path.getsize(path0) \r\n\r\nprint result\r\n```\r\n\r\nOS gives 1, pyfakefs gives 2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/409", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/409/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/409/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/409", "id": 328238931, "node_id": "MDU6SXNzdWUzMjgyMzg5MzE=", "number": 409, "title": "Support pathlib.Path parameter in create_dir()", "user": {"login": "shuttle1987", "id": 2470165, "node_id": "MDQ6VXNlcjI0NzAxNjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2470165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shuttle1987", "html_url": "https://github.com/shuttle1987", "followers_url": "https://api.github.com/users/shuttle1987/followers", "following_url": "https://api.github.com/users/shuttle1987/following{/other_user}", "gists_url": "https://api.github.com/users/shuttle1987/gists{/gist_id}", "starred_url": "https://api.github.com/users/shuttle1987/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shuttle1987/subscriptions", "organizations_url": "https://api.github.com/users/shuttle1987/orgs", "repos_url": "https://api.github.com/users/shuttle1987/repos", "events_url": "https://api.github.com/users/shuttle1987/events{/privacy}", "received_events_url": "https://api.github.com/users/shuttle1987/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mrbean-bremen", "id": 4623701, "node_id": "MDQ6VXNlcjQ2MjM3MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4623701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrbean-bremen", "html_url": "https://github.com/mrbean-bremen", "followers_url": "https://api.github.com/users/mrbean-bremen/followers", "following_url": "https://api.github.com/users/mrbean-bremen/following{/other_user}", "gists_url": "https://api.github.com/users/mrbean-bremen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrbean-bremen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrbean-bremen/subscriptions", "organizations_url": "https://api.github.com/users/mrbean-bremen/orgs", "repos_url": "https://api.github.com/users/mrbean-bremen/repos", "events_url": "https://api.github.com/users/mrbean-bremen/events{/privacy}", "received_events_url": "https://api.github.com/users/mrbean-bremen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-05-31T17:59:08Z", "updated_at": "2018-06-03T06:46:55Z", "closed_at": "2018-06-02T06:53:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I created a repository here to show the bug I am getting: \r\nhttps://github.com/shuttle1987/pyfakefs-pathlib-fail\r\n\r\nEssentially when this test is run:\r\n\r\n```python\r\ndef test_pathlib(fs): #fs is the fake filesystem fixture\r\n    \"\"\"Attempt to use a pathlib path\"\"\"\r\n\r\n    import pathlib\r\n    base_dir = pathlib.Path('/tmp/corpus_data')\r\n    fs.create_dir(base_dir)\r\n\r\n    from example_lib.searcher import determine_labels\r\n```\r\n\r\nThe failure is as follows:\r\n\r\n```sh\r\n$ python -m pytest\r\n================================================ test session starts ================================================\r\nplatform linux -- Python 3.5.2, pytest-3.6.0, py-1.5.3, pluggy-0.6.0\r\nrootdir: /home/janis/pyfakefs-pathlib-fail, inifile:\r\nplugins: cov-2.5.1, pyfakefs-3.4.1\r\ncollected 1 item                                                                                                    \r\n\r\ntests/test_example.py F                                                                                       [100%]\r\n\r\n===================================================== FAILURES ======================================================\r\n___________________________________________________ test_pathlib ____________________________________________________\r\n\r\nfs = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x7f03fc2b9a90>\r\n\r\n>   ???\r\n\r\nhome/janis/pyfakefs-pathlib-fail/tests/test_example.py:6: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\nhome/janis/pyfakefs-pathlib-fail/venv/lib/python3.5/site-packages/pyfakefs/fake_filesystem.py:2137: in create_dir\r\n    ???\r\nhome/janis/pyfakefs-pathlib-fail/venv/lib/python3.5/site-packages/pyfakefs/fake_filesystem.py:1362: in absnormpath\r\n    ???\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <pyfakefs.fake_filesystem.FakeFilesystem object at 0x7f03fc2b9a90>, file_path = PosixPath('/tmp/corpus_data')\r\n\r\n>   ???\r\nE   AttributeError: 'PosixPath' object has no attribute 'startswith'\r\n\r\nhome/janis/pyfakefs-pathlib-fail/venv/lib/python3.5/site-packages/pyfakefs/fake_filesystem.py:1578: AttributeError\r\n============================================= 1 failed in 0.12 seconds ==============================================\r\n```\r\n\r\nAs far as I can tell from reading the documentation this library is supposed to patch `pathlib.Path`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/408", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/408/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/408/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/408", "id": 327860618, "node_id": "MDU6SXNzdWUzMjc4NjA2MTg=", "number": 408, "title": "Support pathlib2", "user": {"login": "sk-", "id": 911768, "node_id": "MDQ6VXNlcjkxMTc2OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/911768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sk-", "html_url": "https://github.com/sk-", "followers_url": "https://api.github.com/users/sk-/followers", "following_url": "https://api.github.com/users/sk-/following{/other_user}", "gists_url": "https://api.github.com/users/sk-/gists{/gist_id}", "starred_url": "https://api.github.com/users/sk-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sk-/subscriptions", "organizations_url": "https://api.github.com/users/sk-/orgs", "repos_url": "https://api.github.com/users/sk-/repos", "events_url": "https://api.github.com/users/sk-/events{/privacy}", "received_events_url": "https://api.github.com/users/sk-/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786275, "node_id": "MDU6TGFiZWwxODc3ODYyNzU=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-05-30T19:06:13Z", "updated_at": "2018-09-03T19:46:17Z", "closed_at": "2018-09-03T19:46:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all thanks for this project, it's really useful. However, it'd be great if there was support for [`pathlib2`](https://github.com/mcmtroffaes/pathlib2).\r\n\r\nIn my code I'm importing it as `import pathlib2 as pathlib`. Which gets patched by `pyfakefs`, however the patch uses the system `pathlib`, which means that in my case it only works for Python 3.5 and 3.6, as I'm using the `exist_ok` argument of `mkdir`. In Python 3.4 I get the following error:\r\n\r\n```\r\nTypeError: mkdir() got an unexpected keyword argument 'exist_ok' \r\n```\r\n\r\nAnd in Python 2.7 the module is not patched at all.\r\n\r\nI already managed to get this to work in Python 2.7 (and probably in 3.4),\r\n\r\nIn my test I had to add\r\n\r\n```py\r\ndef setUp():\r\n  from pyfakefs import fake_pathlib\r\n  self.modules_to_patch = {'pathlib': fake_pathlib.FakePathlibModule}\r\n  self.setUpPyfakefs()\r\n```\r\n\r\nand I had to change `fake_pathlib.py` as following\r\n```py\r\ntry:\r\n  import pathlib2 as pathlib\r\nexcept ImportError:\r\n  import pathlib\r\ntry:\r\n  from urllib.parse import quote_from_bytes as urlquote_from_bytes\r\nexcept ImportError:\r\n  from urllib import quote as urlquote_from_bytes\r\n```\r\n\r\nLet me know if you would be interested in accepting this change, so I could prepare a patch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/407", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/407/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/407/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/407", "id": 327832075, "node_id": "MDU6SXNzdWUzMjc4MzIwNzU=", "number": 407, "title": "illegal link suceeds (Posix)", "user": {"login": "agroce", "id": 967816, "node_id": "MDQ6VXNlcjk2NzgxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/967816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroce", "html_url": "https://github.com/agroce", "followers_url": "https://api.github.com/users/agroce/followers", "following_url": "https://api.github.com/users/agroce/following{/other_user}", "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroce/subscriptions", "organizations_url": "https://api.github.com/users/agroce/orgs", "repos_url": "https://api.github.com/users/agroce/repos", "events_url": "https://api.github.com/users/agroce/events{/privacy}", "received_events_url": "https://api.github.com/users/agroce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 640333076, "node_id": "MDU6TGFiZWw2NDAzMzMwNzY=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/TSTL", "name": "TSTL", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-30T17:41:28Z", "updated_at": "2018-06-05T19:13:15Z", "closed_at": "2018-06-02T17:02:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport shutil\r\nimport pyfakefs.fake_filesystem\r\nimport os\r\n\r\nROOT_PATH = \"/Volumes/ramdisk/test\"\r\n\r\nfs = pyfakefs.fake_filesystem.FakeFilesystem()\r\nfs.CreateDirectory('/Volumes')\r\nfs.CreateDirectory('/Volumes/ramdisk')\r\nfs.CreateDirectory('/Volumes/ramdisk/test')\r\nos0 = pyfakefs.fake_filesystem.FakeOsModule(fs)\r\nopener0 = pyfakefs.fake_filesystem.FakeFileOpen(fs)\r\n\r\nif False:\r\n    os0 = os\r\n    shutil.rmtree(ROOT_PATH)\r\n    os.mkdir(ROOT_PATH)\r\n    opener0 = open\r\n\r\ncomponent0 = \"alpha\" \r\ncomponent1 = \"\" \r\npath0 = ROOT_PATH \r\npath1 = ROOT_PATH \r\npath0 += os.path.sep + component0 \r\ncomponent0 = \"beta\" \r\npath0 += os.path.sep + component1 \r\npath1 += os.path.sep + component0 \r\nfile0 = opener0(path1,'w') \r\nos0.link(path1,path0) \r\n```\r\n\r\nOS raises `OSError: [Errno 2] No such file or directory`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/406", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/406/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/406/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/406", "id": 327451582, "node_id": "MDU6SXNzdWUzMjc0NTE1ODI=", "number": 406, "title": "illegal rename succeeds (MacOS only)", "user": {"login": "agroce", "id": 967816, "node_id": "MDQ6VXNlcjk2NzgxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/967816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroce", "html_url": "https://github.com/agroce", "followers_url": "https://api.github.com/users/agroce/followers", "following_url": "https://api.github.com/users/agroce/following{/other_user}", "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroce/subscriptions", "organizations_url": "https://api.github.com/users/agroce/orgs", "repos_url": "https://api.github.com/users/agroce/repos", "events_url": "https://api.github.com/users/agroce/events{/privacy}", "received_events_url": "https://api.github.com/users/agroce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 640333076, "node_id": "MDU6TGFiZWw2NDAzMzMwNzY=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/TSTL", "name": "TSTL", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-29T19:14:18Z", "updated_at": "2018-06-02T15:50:18Z", "closed_at": "2018-06-02T15:50:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport shutil\r\nimport pyfakefs.fake_filesystem\r\nimport os\r\n\r\nROOT_PATH = \"/Volumes/ramdisk/test\"\r\n\r\nfs = pyfakefs.fake_filesystem.FakeFilesystem()\r\nfs.CreateDirectory('/Volumes')\r\nfs.CreateDirectory('/Volumes/ramdisk')\r\nfs.CreateDirectory('/Volumes/ramdisk/test')\r\nos0 = pyfakefs.fake_filesystem.FakeOsModule(fs)\r\nopener0 = pyfakefs.fake_filesystem.FakeFileOpen(fs)\r\n\r\nif False:\r\n    os0 = os\r\n    shutil.rmtree(ROOT_PATH)\r\n    os.mkdir(ROOT_PATH)\r\n    opener0 = open\r\n\r\ncomponent0 = \"alpha\" \r\npath0 = ROOT_PATH \r\npath0 += os.path.sep + component0 \r\ncomponent0 = \"\" \r\npath1 = ROOT_PATH \r\npath0 += os.path.sep + component0 \r\nos0.mkdir(path0) \r\nos0.rename(path0,path1) \r\n```\r\n\r\nOn OS, the rename raises `OSError: [Errno 66] Directory not empty`\r\n\r\nAll the other things still failing seem to involve symlinks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/401", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/401/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/401/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/401", "id": 323764980, "node_id": "MDU6SXNzdWUzMjM3NjQ5ODA=", "number": 401, "title": "Incorrect behavior for `pathlib.Path.resolve()` when path does not exist", "user": {"login": "apt-itude", "id": 3101089, "node_id": "MDQ6VXNlcjMxMDEwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3101089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apt-itude", "html_url": "https://github.com/apt-itude", "followers_url": "https://api.github.com/users/apt-itude/followers", "following_url": "https://api.github.com/users/apt-itude/following{/other_user}", "gists_url": "https://api.github.com/users/apt-itude/gists{/gist_id}", "starred_url": "https://api.github.com/users/apt-itude/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apt-itude/subscriptions", "organizations_url": "https://api.github.com/users/apt-itude/orgs", "repos_url": "https://api.github.com/users/apt-itude/repos", "events_url": "https://api.github.com/users/apt-itude/events{/privacy}", "received_events_url": "https://api.github.com/users/apt-itude/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 187786273, "node_id": "MDU6TGFiZWwxODc3ODYyNzM=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-16T19:59:26Z", "updated_at": "2018-05-17T19:59:42Z", "closed_at": "2018-05-17T19:11:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the following test suite, the test that does not use the `fs` fixture succeeds while the test that does use the `fs` fixture fails:\r\n```python\r\nimport pathlib\r\n\r\nimport pytest\r\n\r\n\r\ndef test_pathlib_resolve_without_fs():\r\n    path = pathlib.Path('/var/foo/bar/baz')\r\n\r\n    assert path.resolve() == path\r\n\r\n\r\n@pytest.mark.usefixtures('fs')\r\ndef test_pathlib_resolve_with_fs():\r\n    path = pathlib.Path('/var/foo/bar/baz')\r\n\r\n    assert path.resolve() == path\r\n```\r\nHere is a snippet of the results:\r\n```\r\n===================================================== FAILURES =====================================================\r\n___________________________________________ test_pathlib_resolve_with_fs ___________________________________________\r\n\r\n>   ???\r\nE   AssertionError: assert PosixPath('/var') == PosixPath('/var/foo/bar/baz')\r\nE    +  where PosixPath('/var') = <bound method FakePath.resolve of PosixPath('/var/foo/bar/baz')>()\r\nE    +    where <bound method FakePath.resolve of PosixPath('/var/foo/bar/baz')> = PosixPath('/var/foo/bar/baz').resolve\r\n```\r\n\r\nFrom the documentation (https://docs.python.org/3/library/pathlib.html#pathlib.Path.resolve):\r\n```\r\nIf strict is False, the path is resolved as far as possible and any remainder is appended without checking whether it exists.\r\n```\r\n\r\nA [similar bug](https://bugs.python.org/issue30177) existed in Python itself, but was fixed in version 3.6.2.\r\n\r\n## Environment\r\nOS: CentOS Linux release 7.3.1611 (Core)\r\nPython: 3.6.5\r\npyfakefs: 3.4.1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/400", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/400/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/400/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/400", "id": 323432438, "node_id": "MDU6SXNzdWUzMjM0MzI0Mzg=", "number": 400, "title": "rename that should fail succeeds (no symlink, involves open file)", "user": {"login": "agroce", "id": 967816, "node_id": "MDQ6VXNlcjk2NzgxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/967816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroce", "html_url": "https://github.com/agroce", "followers_url": "https://api.github.com/users/agroce/followers", "following_url": "https://api.github.com/users/agroce/following{/other_user}", "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroce/subscriptions", "organizations_url": "https://api.github.com/users/agroce/orgs", "repos_url": "https://api.github.com/users/agroce/repos", "events_url": "https://api.github.com/users/agroce/events{/privacy}", "received_events_url": "https://api.github.com/users/agroce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 640333076, "node_id": "MDU6TGFiZWw2NDAzMzMwNzY=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/TSTL", "name": "TSTL", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-16T00:52:08Z", "updated_at": "2018-05-27T12:09:43Z", "closed_at": "2018-05-27T12:09:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport shutil\r\nimport pyfakefs.fake_filesystem\r\nimport os\r\n\r\nROOT_PATH = \"/Volumes/ramdisk/test\"\r\n\r\nfs = pyfakefs.fake_filesystem.FakeFilesystem()\r\nfs.CreateDirectory('/Volumes')\r\nfs.CreateDirectory('/Volumes/ramdisk')\r\nfs.CreateDirectory('/Volumes/ramdisk/test')\r\nos0 = pyfakefs.fake_filesystem.FakeOsModule(fs)\r\nopener0 = pyfakefs.fake_filesystem.FakeFileOpen(fs)\r\n\r\nif False:\r\n    os0 = os\r\n    shutil.rmtree(ROOT_PATH)\r\n    os.mkdir(ROOT_PATH)\r\n    opener0 = open\r\n\r\npath0 = ROOT_PATH \r\npath1 = ROOT_PATH \r\ncomponent0 = \"alpha\" \r\npath0 += os.path.sep + component0 \r\nfile0 = opener0(path0,'w') \r\npath1 += os.path.sep + component0 \r\ncomponent0 = \"\" \r\npath0 += os.path.sep + component0 \r\nos0.rename(path0,path1) \r\n```\r\n\r\nOS raises `OSError: [Errno 20] Not a directory`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/399", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/399/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/399/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/399", "id": 323432012, "node_id": "MDU6SXNzdWUzMjM0MzIwMTI=", "number": 399, "title": "link that should fail succeeds (no symlinks involved)", "user": {"login": "agroce", "id": 967816, "node_id": "MDQ6VXNlcjk2NzgxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/967816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroce", "html_url": "https://github.com/agroce", "followers_url": "https://api.github.com/users/agroce/followers", "following_url": "https://api.github.com/users/agroce/following{/other_user}", "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroce/subscriptions", "organizations_url": "https://api.github.com/users/agroce/orgs", "repos_url": "https://api.github.com/users/agroce/repos", "events_url": "https://api.github.com/users/agroce/events{/privacy}", "received_events_url": "https://api.github.com/users/agroce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 640333076, "node_id": "MDU6TGFiZWw2NDAzMzMwNzY=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/TSTL", "name": "TSTL", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-16T00:49:23Z", "updated_at": "2018-05-27T11:41:44Z", "closed_at": "2018-05-27T11:41:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport shutil\r\nimport pyfakefs.fake_filesystem\r\nimport os\r\n\r\nROOT_PATH = \"/Volumes/ramdisk/test\"\r\n\r\nfs = pyfakefs.fake_filesystem.FakeFilesystem()\r\nfs.CreateDirectory('/Volumes')\r\nfs.CreateDirectory('/Volumes/ramdisk')\r\nfs.CreateDirectory('/Volumes/ramdisk/test')\r\nos0 = pyfakefs.fake_filesystem.FakeOsModule(fs)\r\nopener0 = pyfakefs.fake_filesystem.FakeFileOpen(fs)\r\n\r\nif False:\r\n    os0 = os\r\n    shutil.rmtree(ROOT_PATH)\r\n    os.mkdir(ROOT_PATH)\r\n    opener0 = open\r\n\r\ncomponent0 = \"alpha\" \r\ncomponent1 = \"\" \r\npath0 = ROOT_PATH \r\npath1 = ROOT_PATH \r\npath0 += os.path.sep + component0 \r\ncomponent0 = \"beta\" \r\npath1 += os.path.sep + component0 \r\nfile0 = opener0(path0,'w') \r\npath0 += os.path.sep + component1 \r\nos0.link(path0,path1) \r\n```\r\n\r\nOS raises OSError [Errno 20] Not a directory", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/398", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/398/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/398/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/398", "id": 323429719, "node_id": "MDU6SXNzdWUzMjM0Mjk3MTk=", "number": 398, "title": "rmdir that should succeed fails (MacOS only)", "user": {"login": "agroce", "id": 967816, "node_id": "MDQ6VXNlcjk2NzgxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/967816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroce", "html_url": "https://github.com/agroce", "followers_url": "https://api.github.com/users/agroce/followers", "following_url": "https://api.github.com/users/agroce/following{/other_user}", "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroce/subscriptions", "organizations_url": "https://api.github.com/users/agroce/orgs", "repos_url": "https://api.github.com/users/agroce/repos", "events_url": "https://api.github.com/users/agroce/events{/privacy}", "received_events_url": "https://api.github.com/users/agroce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 640333076, "node_id": "MDU6TGFiZWw2NDAzMzMwNzY=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/TSTL", "name": "TSTL", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-16T00:34:06Z", "updated_at": "2018-05-27T12:44:37Z", "closed_at": "2018-05-27T12:44:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport shutil\r\nimport pyfakefs.fake_filesystem\r\nimport os\r\n\r\nROOT_PATH = \"/Volumes/ramdisk/test\"\r\n\r\nfs = pyfakefs.fake_filesystem.FakeFilesystem()\r\nfs.CreateDirectory('/Volumes')\r\nfs.CreateDirectory('/Volumes/ramdisk')\r\nfs.CreateDirectory('/Volumes/ramdisk/test')\r\nos0 = pyfakefs.fake_filesystem.FakeOsModule(fs)\r\nopener0 = pyfakefs.fake_filesystem.FakeFileOpen(fs)\r\n\r\nif False:\r\n    os0 = os\r\n    shutil.rmtree(ROOT_PATH)\r\n    os.mkdir(ROOT_PATH)\r\n    opener0 = open\r\n\r\ncomponent0 = \"alpha\" \r\ncomponent1 = \"\" \r\npath0 = ROOT_PATH \r\npath1 = ROOT_PATH \r\npath0 += os.path.sep + component0 \r\ncomponent0 = \"beta\" \r\npath1 += os.path.sep + component0 \r\nos0.mkdir(path1) \r\nos0.symlink(path1,path0) \r\npath0 += os.path.sep + component1 \r\nos0.rmdir(path0) \r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/397", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/397/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/397/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/397", "id": 323429063, "node_id": "MDU6SXNzdWUzMjM0MjkwNjM=", "number": 397, "title": "open that should fail succeeds", "user": {"login": "agroce", "id": 967816, "node_id": "MDQ6VXNlcjk2NzgxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/967816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroce", "html_url": "https://github.com/agroce", "followers_url": "https://api.github.com/users/agroce/followers", "following_url": "https://api.github.com/users/agroce/following{/other_user}", "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroce/subscriptions", "organizations_url": "https://api.github.com/users/agroce/orgs", "repos_url": "https://api.github.com/users/agroce/repos", "events_url": "https://api.github.com/users/agroce/events{/privacy}", "received_events_url": "https://api.github.com/users/agroce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 640333076, "node_id": "MDU6TGFiZWw2NDAzMzMwNzY=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/TSTL", "name": "TSTL", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-16T00:29:54Z", "updated_at": "2018-05-26T19:09:42Z", "closed_at": "2018-05-26T19:09:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport shutil\r\nimport pyfakefs.fake_filesystem\r\nimport os\r\n\r\nROOT_PATH = \"/Volumes/ramdisk/test\"\r\n\r\nfs = pyfakefs.fake_filesystem.FakeFilesystem()\r\nfs.CreateDirectory('/Volumes')\r\nfs.CreateDirectory('/Volumes/ramdisk')\r\nfs.CreateDirectory('/Volumes/ramdisk/test')\r\nos0 = pyfakefs.fake_filesystem.FakeOsModule(fs)\r\nopener0 = pyfakefs.fake_filesystem.FakeFileOpen(fs)\r\n\r\nif False:\r\n    os0 = os\r\n    shutil.rmtree(ROOT_PATH)\r\n    os.mkdir(ROOT_PATH)\r\n    opener0 = open\r\n\r\ncomponent0 = \"alpha\" \r\npath0 = ROOT_PATH \r\npath1 = ROOT_PATH \r\npath0 += os.path.sep + component0 \r\ncomponent0 = \"\" \r\npath0 += os.path.sep + component0 \r\ncomponent0 = \"beta\" \r\npath1 += os.path.sep + component0 \r\nos0.symlink(path0,path1) \r\nfile0 = opener0(path1,'a') \r\n```\r\n\r\nOS returns `IOError: [Errno 2] No such file or directory: '/Volumes/ramdisk/test/beta'`\r\n\r\nThe 'a'  in the open could also be a 'w' and it still fails", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/396", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/396/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/396/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/396", "id": 323416943, "node_id": "MDU6SXNzdWUzMjM0MTY5NDM=", "number": 396, "title": "lstat succeeds that should fail (part of pattern with multiple other operations)", "user": {"login": "agroce", "id": 967816, "node_id": "MDQ6VXNlcjk2NzgxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/967816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroce", "html_url": "https://github.com/agroce", "followers_url": "https://api.github.com/users/agroce/followers", "following_url": "https://api.github.com/users/agroce/following{/other_user}", "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroce/subscriptions", "organizations_url": "https://api.github.com/users/agroce/orgs", "repos_url": "https://api.github.com/users/agroce/repos", "events_url": "https://api.github.com/users/agroce/events{/privacy}", "received_events_url": "https://api.github.com/users/agroce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 640333076, "node_id": "MDU6TGFiZWw2NDAzMzMwNzY=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/TSTL", "name": "TSTL", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-05-15T23:19:24Z", "updated_at": "2018-05-18T19:01:33Z", "closed_at": "2018-05-18T18:57:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport shutil\r\nimport pyfakefs.fake_filesystem\r\nimport os\r\n\r\nROOT_PATH = \"/Volumes/ramdisk/test\"\r\n\r\nfs = pyfakefs.fake_filesystem.FakeFilesystem()\r\nfs.CreateDirectory('/Volumes')\r\nfs.CreateDirectory('/Volumes/ramdisk')\r\nfs.CreateDirectory('/Volumes/ramdisk/test')\r\nos0 = pyfakefs.fake_filesystem.FakeOsModule(fs)\r\nopener0 = pyfakefs.fake_filesystem.FakeFileOpen(fs)\r\n\r\nif False:\r\n    os0 = os\r\n    shutil.rmtree(ROOT_PATH)\r\n    os.mkdir(ROOT_PATH)\r\n    opener0 = open\r\n\r\ncomponent0 = \"alpha\" \r\npath0 = ROOT_PATH \r\npath1 = ROOT_PATH \r\npath0 += os.path.sep + component0 \r\ncomponent0 = \"beta\" \r\npath1 += os.path.sep + component0 \r\ncomponent0 = \"\" \r\nos0.symlink(path1,path0) \r\npath0 += os.path.sep + component0 \r\nstat0 = os0.lstat(path0) \r\n```\r\n\r\nOS raises `OSError: [Errno 2] No such file or directory: '/Volumes/ramdisk/test/alpha/'`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/395", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/395/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/395/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/395", "id": 323416151, "node_id": "MDU6SXNzdWUzMjM0MTYxNTE=", "number": 395, "title": "rename succeeds that should fail", "user": {"login": "agroce", "id": 967816, "node_id": "MDQ6VXNlcjk2NzgxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/967816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroce", "html_url": "https://github.com/agroce", "followers_url": "https://api.github.com/users/agroce/followers", "following_url": "https://api.github.com/users/agroce/following{/other_user}", "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroce/subscriptions", "organizations_url": "https://api.github.com/users/agroce/orgs", "repos_url": "https://api.github.com/users/agroce/repos", "events_url": "https://api.github.com/users/agroce/events{/privacy}", "received_events_url": "https://api.github.com/users/agroce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 640333076, "node_id": "MDU6TGFiZWw2NDAzMzMwNzY=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/TSTL", "name": "TSTL", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-15T23:15:13Z", "updated_at": "2018-05-18T21:26:05Z", "closed_at": "2018-05-18T21:26:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport shutil\r\nimport pyfakefs.fake_filesystem\r\nimport os\r\n\r\nROOT_PATH = \"/Volumes/ramdisk/test\"\r\n\r\nfs = pyfakefs.fake_filesystem.FakeFilesystem()\r\nfs.CreateDirectory('/Volumes')\r\nfs.CreateDirectory('/Volumes/ramdisk')\r\nfs.CreateDirectory('/Volumes/ramdisk/test')\r\nos0 = pyfakefs.fake_filesystem.FakeOsModule(fs)\r\nopener0 = pyfakefs.fake_filesystem.FakeFileOpen(fs)\r\n\r\nif False:\r\n    os0 = os\r\n    shutil.rmtree(ROOT_PATH)\r\n    os.mkdir(ROOT_PATH)\r\n    opener0 = open\r\n\r\ncomponent0 = \"alpha\" \r\ncomponent1 = \"\" \r\npath0 = ROOT_PATH \r\npath1 = ROOT_PATH \r\npath1 += os.path.sep + component0 \r\nos0.symlink(path0,path1) \r\npath0 += os.path.sep + component0 \r\npath0 += os.path.sep + component1 \r\nos0.rename(path0,path1) \r\n```\r\n\r\nOS raises `OSError: [Errno 20] Not a directory`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/392", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/392/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/392/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/392", "id": 322870675, "node_id": "MDU6SXNzdWUzMjI4NzA2NzU=", "number": 392, "title": "mismatch in readlink results (MacOS only)", "user": {"login": "agroce", "id": 967816, "node_id": "MDQ6VXNlcjk2NzgxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/967816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroce", "html_url": "https://github.com/agroce", "followers_url": "https://api.github.com/users/agroce/followers", "following_url": "https://api.github.com/users/agroce/following{/other_user}", "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroce/subscriptions", "organizations_url": "https://api.github.com/users/agroce/orgs", "repos_url": "https://api.github.com/users/agroce/repos", "events_url": "https://api.github.com/users/agroce/events{/privacy}", "received_events_url": "https://api.github.com/users/agroce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 640333076, "node_id": "MDU6TGFiZWw2NDAzMzMwNzY=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/TSTL", "name": "TSTL", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-14T15:36:42Z", "updated_at": "2018-05-27T18:45:20Z", "closed_at": "2018-05-27T18:45:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport shutil\r\nimport pyfakefs.fake_filesystem\r\nimport os\r\n\r\nROOT_PATH = \"/Volumes/ramdisk/test\"\r\n\r\nfs = pyfakefs.fake_filesystem.FakeFilesystem()\r\nfs.CreateDirectory('/Volumes')\r\nfs.CreateDirectory('/Volumes/ramdisk')\r\nfs.CreateDirectory('/Volumes/ramdisk/test')\r\nos0 = pyfakefs.fake_filesystem.FakeOsModule(fs)\r\nopener0 = pyfakefs.fake_filesystem.FakeFileOpen(fs)\r\n\r\nif False:\r\n    os0 = os\r\n    shutil.rmtree(ROOT_PATH)\r\n    os.mkdir(ROOT_PATH)\r\n\r\ncomponent0 = \"alpha\" \r\ncomponent1 = \"\" \r\npath0 = ROOT_PATH \r\npath1 = ROOT_PATH \r\npath1 += os.path.sep + component0 \r\ncomponent0 = \"beta\" \r\npath0 += os.path.sep + component0 \r\nos0.symlink(path0,path1) \r\nos0.symlink(path1,path0) \r\npath0 += os.path.sep + component1 \r\nresult = os0.readlink(path0) \r\n\r\nprint result\r\n```\r\n\r\n`/Volumes/ramdisk/test/alpha` for OS, but `/Volumes/ramdisk/test/beta` for pyfakefs", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/391", "repository_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs", "labels_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/391/comments", "events_url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/issues/391/events", "html_url": "https://github.com/jmcgeheeiv/pyfakefs/issues/391", "id": 322857885, "node_id": "MDU6SXNzdWUzMjI4NTc4ODU=", "number": 391, "title": "rename allowed by OS, disallowed by pyfakefs", "user": {"login": "agroce", "id": 967816, "node_id": "MDQ6VXNlcjk2NzgxNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/967816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agroce", "html_url": "https://github.com/agroce", "followers_url": "https://api.github.com/users/agroce/followers", "following_url": "https://api.github.com/users/agroce/following{/other_user}", "gists_url": "https://api.github.com/users/agroce/gists{/gist_id}", "starred_url": "https://api.github.com/users/agroce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agroce/subscriptions", "organizations_url": "https://api.github.com/users/agroce/orgs", "repos_url": "https://api.github.com/users/agroce/repos", "events_url": "https://api.github.com/users/agroce/events{/privacy}", "received_events_url": "https://api.github.com/users/agroce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 640333076, "node_id": "MDU6TGFiZWw2NDAzMzMwNzY=", "url": "https://api.github.com/repos/jmcgeheeiv/pyfakefs/labels/TSTL", "name": "TSTL", "color": "b60205", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-14T15:05:59Z", "updated_at": "2018-05-15T19:20:37Z", "closed_at": "2018-05-15T19:20:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimport shutil\r\nimport pyfakefs.fake_filesystem\r\nimport os\r\n\r\nROOT_PATH = \"/Volumes/ramdisk/test\"\r\n\r\nfs = pyfakefs.fake_filesystem.FakeFilesystem()\r\nfs.CreateDirectory('/Volumes')\r\nfs.CreateDirectory('/Volumes/ramdisk')\r\nfs.CreateDirectory('/Volumes/ramdisk/test')\r\nos0 = pyfakefs.fake_filesystem.FakeOsModule(fs)\r\nopener0 = pyfakefs.fake_filesystem.FakeFileOpen(fs)\r\n\r\nif True:\r\n    os0 = os\r\n    shutil.rmtree(ROOT_PATH)\r\n    os.mkdir(ROOT_PATH)\r\n\r\npath0 = ROOT_PATH \r\npath1 = ROOT_PATH \r\ncomponent0 = \"alpha\" \r\ncomponent1 = \"\" \r\npath1 += os.path.sep + component0 \r\nos0.symlink(path0,path1) \r\npath1 += os.path.sep + component1 \r\nos0.rename(path1,path0) \r\n```\r\n\r\npyfakefs raises: `OSError: [Errno 21] Is a directory in the fake filesystem: '/Volumes/ramdisk/test'`\r\n", "performed_via_github_app": null, "score": 1.0}]}