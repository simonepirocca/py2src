{"total_count": 67, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/217", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/217/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/217/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/217", "id": 606975793, "node_id": "MDU6SXNzdWU2MDY5NzU3OTM=", "number": 217, "title": "Duplicate orders", "user": {"login": "Arico1985", "id": 28898776, "node_id": "MDQ6VXNlcjI4ODk4Nzc2", "avatar_url": "https://avatars2.githubusercontent.com/u/28898776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arico1985", "html_url": "https://github.com/Arico1985", "followers_url": "https://api.github.com/users/Arico1985/followers", "following_url": "https://api.github.com/users/Arico1985/following{/other_user}", "gists_url": "https://api.github.com/users/Arico1985/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arico1985/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arico1985/subscriptions", "organizations_url": "https://api.github.com/users/Arico1985/orgs", "repos_url": "https://api.github.com/users/Arico1985/repos", "events_url": "https://api.github.com/users/Arico1985/events{/privacy}", "received_events_url": "https://api.github.com/users/Arico1985/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-26T10:19:39Z", "updated_at": "2020-04-26T12:19:57Z", "closed_at": "2020-04-26T12:19:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello hello,\r\n\r\nI know this comment has been made tons of times before but the issue seem to persist: using top()/bottom()/above()/below() I systematically end up with duplicated orders. How can I fix that please ?\r\n\r\nthank you !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/216", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/216/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/216/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/216", "id": 604652959, "node_id": "MDU6SXNzdWU2MDQ2NTI5NTk=", "number": 216, "title": "query on child model returns parent objects when order_class_path is set to parent model", "user": {"login": "zainsattar-avomd", "id": 62427083, "node_id": "MDQ6VXNlcjYyNDI3MDgz", "avatar_url": "https://avatars1.githubusercontent.com/u/62427083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zainsattar-avomd", "html_url": "https://github.com/zainsattar-avomd", "followers_url": "https://api.github.com/users/zainsattar-avomd/followers", "following_url": "https://api.github.com/users/zainsattar-avomd/following{/other_user}", "gists_url": "https://api.github.com/users/zainsattar-avomd/gists{/gist_id}", "starred_url": "https://api.github.com/users/zainsattar-avomd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zainsattar-avomd/subscriptions", "organizations_url": "https://api.github.com/users/zainsattar-avomd/orgs", "repos_url": "https://api.github.com/users/zainsattar-avomd/repos", "events_url": "https://api.github.com/users/zainsattar-avomd/events{/privacy}", "received_events_url": "https://api.github.com/users/zainsattar-avomd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "imomaliev", "id": 3041675, "node_id": "MDQ6VXNlcjMwNDE2NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3041675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imomaliev", "html_url": "https://github.com/imomaliev", "followers_url": "https://api.github.com/users/imomaliev/followers", "following_url": "https://api.github.com/users/imomaliev/following{/other_user}", "gists_url": "https://api.github.com/users/imomaliev/gists{/gist_id}", "starred_url": "https://api.github.com/users/imomaliev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imomaliev/subscriptions", "organizations_url": "https://api.github.com/users/imomaliev/orgs", "repos_url": "https://api.github.com/users/imomaliev/repos", "events_url": "https://api.github.com/users/imomaliev/events{/privacy}", "received_events_url": "https://api.github.com/users/imomaliev/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "imomaliev", "id": 3041675, "node_id": "MDQ6VXNlcjMwNDE2NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3041675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imomaliev", "html_url": "https://github.com/imomaliev", "followers_url": "https://api.github.com/users/imomaliev/followers", "following_url": "https://api.github.com/users/imomaliev/following{/other_user}", "gists_url": "https://api.github.com/users/imomaliev/gists{/gist_id}", "starred_url": "https://api.github.com/users/imomaliev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imomaliev/subscriptions", "organizations_url": "https://api.github.com/users/imomaliev/orgs", "repos_url": "https://api.github.com/users/imomaliev/repos", "events_url": "https://api.github.com/users/imomaliev/events{/privacy}", "received_events_url": "https://api.github.com/users/imomaliev/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-04-22T10:43:08Z", "updated_at": "2020-05-11T09:48:03Z", "closed_at": "2020-05-11T09:48:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "class BaseQuestion(OrderedModel):\r\n    order_class_path = __module__ + '.BaseQuestion'\r\n    question = models.TextField(max_length=100)\r\n\r\n    class Meta:\r\n        ordering = ('order',)\r\n\r\nclass MultipleChoiceQuestion(BaseQuestion):\r\n    good_answer = models.TextField(max_length=100)\r\n    wrong_answer1 = models.TextField(max_length=100)\r\n    wrong_answer2 = models.TextField(max_length=100)\r\n    wrong_answer3 = models.TextField(max_length=100)\r\n\r\nclass OpenQuestion(BaseQuestion):\r\n    answer = models.TextField(max_length=100)\r\n\r\nIn this example the following query always returns a queryset of BaseQuestions when i query MultipleChoiceQuestion/OpenQuestion.objects", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/208", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/208/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/208/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/208", "id": 548955374, "node_id": "MDU6SXNzdWU1NDg5NTUzNzQ=", "number": 208, "title": "Django 3.0 compatibility", "user": {"login": "sergei-maertens", "id": 5518550, "node_id": "MDQ6VXNlcjU1MTg1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5518550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergei-maertens", "html_url": "https://github.com/sergei-maertens", "followers_url": "https://api.github.com/users/sergei-maertens/followers", "following_url": "https://api.github.com/users/sergei-maertens/following{/other_user}", "gists_url": "https://api.github.com/users/sergei-maertens/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergei-maertens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergei-maertens/subscriptions", "organizations_url": "https://api.github.com/users/sergei-maertens/orgs", "repos_url": "https://api.github.com/users/sergei-maertens/repos", "events_url": "https://api.github.com/users/sergei-maertens/events{/privacy}", "received_events_url": "https://api.github.com/users/sergei-maertens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-13T14:10:45Z", "updated_at": "2020-05-11T14:31:18Z", "closed_at": "2020-05-11T14:31:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I was trying out to use django-ordered-model while updating our project boilerplate to be Django 3.0 compatible.\r\n\r\nThis project imports `django.utils.six`, which was removed in 3.0. I haven't checked if there are any other issues, but replacing `django.utils.six` with `six` OR dropping Python 2 support (Python 2.7 is EOL after all ;) ) would both be fixes.\r\n\r\nWhich approach has your preference?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/204", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/204/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/204/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/204", "id": 470468383, "node_id": "MDU6SXNzdWU0NzA0NjgzODM=", "number": 204, "title": "Latest refactor release (3.2/3.3) doesn't work with model inheritance", "user": {"login": "mands", "id": 1010043, "node_id": "MDQ6VXNlcjEwMTAwNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1010043?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mands", "html_url": "https://github.com/mands", "followers_url": "https://api.github.com/users/mands/followers", "following_url": "https://api.github.com/users/mands/following{/other_user}", "gists_url": "https://api.github.com/users/mands/gists{/gist_id}", "starred_url": "https://api.github.com/users/mands/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mands/subscriptions", "organizations_url": "https://api.github.com/users/mands/orgs", "repos_url": "https://api.github.com/users/mands/repos", "events_url": "https://api.github.com/users/mands/events{/privacy}", "received_events_url": "https://api.github.com/users/mands/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-19T18:07:27Z", "updated_at": "2020-02-03T18:12:56Z", "closed_at": "2019-12-24T08:56:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Have updated to the latest release and have found that model inheritance doesn't seem to work as previously. Given two models as follows,\r\n\r\n```python\r\nfrom ordered_model.models import OrderedModel\r\n\r\nclass A(OrderedModel):\r\n    x = models.CharField(default=True)\r\n\r\n    class Meta(OrderedModel.Meta):\r\n        ordering = (\"order\",)\r\n\r\nclass B(A):\r\n    class Meta:\r\n        proxy = True\r\n```\r\n\r\nWhen creating an object of class `B` via the new manager, an instance of class `A` is instantiated. I can see this when using `django-rest-framework`, which creates the model object as follows,\r\n\r\n```python\r\n    instance = ModelClass._default_manager.create(**validated_data)\r\n```\r\n\r\nwhere `ModelClass` is `B` and `default_manager` is now a `OrderedModelManager`, which internally has an `OrderedManagerQuerySet` whose model parameter is `A`. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/197", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/197/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/197/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/197", "id": 440143669, "node_id": "MDU6SXNzdWU0NDAxNDM2Njk=", "number": 197, "title": "Reserved keyword \"order\" should not be name of column", "user": {"login": "quorth0n", "id": 6278600, "node_id": "MDQ6VXNlcjYyNzg2MDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6278600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quorth0n", "html_url": "https://github.com/quorth0n", "followers_url": "https://api.github.com/users/quorth0n/followers", "following_url": "https://api.github.com/users/quorth0n/following{/other_user}", "gists_url": "https://api.github.com/users/quorth0n/gists{/gist_id}", "starred_url": "https://api.github.com/users/quorth0n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quorth0n/subscriptions", "organizations_url": "https://api.github.com/users/quorth0n/orgs", "repos_url": "https://api.github.com/users/quorth0n/repos", "events_url": "https://api.github.com/users/quorth0n/events{/privacy}", "received_events_url": "https://api.github.com/users/quorth0n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-03T17:24:53Z", "updated_at": "2020-06-11T22:45:48Z", "closed_at": "2020-06-11T22:45:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "This means that raw SQL queries cannot be performed for ordered models. Queries such as the following: `UPDATE [table] SET order = 1 WHERE id = 3;` will fail.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/191", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/191/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/191/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/191", "id": 420252392, "node_id": "MDU6SXNzdWU0MjAyNTIzOTI=", "number": 191, "title": "IntegrityError when changing ordering to negative number", "user": {"login": "davidcorbin", "id": 5752872, "node_id": "MDQ6VXNlcjU3NTI4NzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5752872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidcorbin", "html_url": "https://github.com/davidcorbin", "followers_url": "https://api.github.com/users/davidcorbin/followers", "following_url": "https://api.github.com/users/davidcorbin/following{/other_user}", "gists_url": "https://api.github.com/users/davidcorbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidcorbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidcorbin/subscriptions", "organizations_url": "https://api.github.com/users/davidcorbin/orgs", "repos_url": "https://api.github.com/users/davidcorbin/repos", "events_url": "https://api.github.com/users/davidcorbin/events{/privacy}", "received_events_url": "https://api.github.com/users/davidcorbin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-12T23:38:20Z", "updated_at": "2020-06-11T16:12:20Z", "closed_at": "2020-06-11T16:12:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "When changing the order of an object with the `.to(<position>)` method, if a negative index is passed there is a database IntegrityError.\r\n\r\n```python\r\ndef update(self, request, *args, **kwargs):\r\n    instance = self.get_object()\r\n    partial = kwargs.pop('partial', False)\r\n    serializer = self.get_serializer(instance, data=request.data, partial=partial)\r\n    serializer.is_valid(raise_exception=True)\r\n    self.perform_update(serializer)\r\n    if \"order\" in request.data and instance.order != request.data[\"order\"]:\r\n        instance.to(request.data[\"order\"])\r\n    return Response(serializer.data)\r\n```\r\n\r\nIf `request.data[\"order\"]` is a negative number, the following error occurs: `django.db.utils.IntegrityError: new row for relation \"api_modelname\" violates check constraint \"api_modelname_order_check\"`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/187", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/187/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/187/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/187", "id": 411816242, "node_id": "MDU6SXNzdWU0MTE4MTYyNDI=", "number": 187, "title": "Compatibility Matrix for Django < 2.0 is incorrect", "user": {"login": "rafagarciac", "id": 32666357, "node_id": "MDQ6VXNlcjMyNjY2MzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/32666357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafagarciac", "html_url": "https://github.com/rafagarciac", "followers_url": "https://api.github.com/users/rafagarciac/followers", "following_url": "https://api.github.com/users/rafagarciac/following{/other_user}", "gists_url": "https://api.github.com/users/rafagarciac/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafagarciac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafagarciac/subscriptions", "organizations_url": "https://api.github.com/users/rafagarciac/orgs", "repos_url": "https://api.github.com/users/rafagarciac/repos", "events_url": "https://api.github.com/users/rafagarciac/events{/privacy}", "received_events_url": "https://api.github.com/users/rafagarciac/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-19T09:06:27Z", "updated_at": "2020-06-11T16:21:29Z", "closed_at": "2020-06-11T16:21:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! n the [Version and Compatibility with Django and Python Table](https://github.com/bfirsh/django-ordered-model/tree/master#compatibility-with-django-and-python) there are some mistakes, because I tried to setup this package in Django 1.8 with Python 2.7 and according to this table I should pick django-ordered-model version 2.1.x, but when I run the server on django (`python manage.py runserver`) I get an error in the next import:\r\nhttps://github.com/bfirsh/django-ordered-model/blob/bfc133e13507635123282953dd1857bfcea73e21/ordered_model/admin.py#L7\r\nFor the other hand, I also tried downgrade one version from 2.1.x to 2.0.x but I get the same error in the same line...\r\nIn my point of view there are 2 approaches:\r\n### 1. Change the Version Compatibilities Table (Actual and Wrong Version):\r\n\r\n|django-ordered-model version | Django version      | Python version\r\n|-----------------------------|---------------------|--------------------\r\n| **2.1.x**                   | **1.x**             | **2.7** to **3.6**\r\n| **2.0.x**                   | **1.x**             | **2.7** to **3.6** \r\n\r\n### 2. Change this import on each version\r\nAccording to [Django Documentation v1.8](https://docs.djangoproject.com/en/1.8/ref/urlresolvers/#reverse)\r\nWe should change from:  \r\n`from django.urls import reverse`\r\nTo:\r\n`from django.core.urlresolvers import reverse `", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/181", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/181/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/181/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/181", "id": 403732648, "node_id": "MDU6SXNzdWU0MDM3MzI2NDg=", "number": 181, "title": "Add support for bulk_create", "user": {"login": "imomaliev", "id": 3041675, "node_id": "MDQ6VXNlcjMwNDE2NzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3041675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imomaliev", "html_url": "https://github.com/imomaliev", "followers_url": "https://api.github.com/users/imomaliev/followers", "following_url": "https://api.github.com/users/imomaliev/following{/other_user}", "gists_url": "https://api.github.com/users/imomaliev/gists{/gist_id}", "starred_url": "https://api.github.com/users/imomaliev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imomaliev/subscriptions", "organizations_url": "https://api.github.com/users/imomaliev/orgs", "repos_url": "https://api.github.com/users/imomaliev/repos", "events_url": "https://api.github.com/users/imomaliev/events{/privacy}", "received_events_url": "https://api.github.com/users/imomaliev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-28T10:02:02Z", "updated_at": "2019-07-10T05:37:51Z", "closed_at": "2019-07-10T05:37:51Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/178", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/178/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/178/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/178", "id": 382762578, "node_id": "MDU6SXNzdWUzODI3NjI1Nzg=", "number": 178, "title": "Feature Request: First & Last", "user": {"login": "Speedy1991", "id": 15920408, "node_id": "MDQ6VXNlcjE1OTIwNDA4", "avatar_url": "https://avatars3.githubusercontent.com/u/15920408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Speedy1991", "html_url": "https://github.com/Speedy1991", "followers_url": "https://api.github.com/users/Speedy1991/followers", "following_url": "https://api.github.com/users/Speedy1991/following{/other_user}", "gists_url": "https://api.github.com/users/Speedy1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/Speedy1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Speedy1991/subscriptions", "organizations_url": "https://api.github.com/users/Speedy1991/orgs", "repos_url": "https://api.github.com/users/Speedy1991/repos", "events_url": "https://api.github.com/users/Speedy1991/events{/privacy}", "received_events_url": "https://api.github.com/users/Speedy1991/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-20T17:05:56Z", "updated_at": "2018-12-17T11:22:27Z", "closed_at": "2018-11-21T17:07:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "In a current project i need first() and last() as methods on OrderedModel.\r\nI don't know if this is needed in this package, but i can provide a PR + tests if you are interested in", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/169", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/169/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/169/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/169", "id": 373566946, "node_id": "MDU6SXNzdWUzNzM1NjY5NDY=", "number": 169, "title": "Template error when using move_up_down_links with OrderedTabularInline", "user": {"login": "hughtopping", "id": 5038668, "node_id": "MDQ6VXNlcjUwMzg2Njg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5038668?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hughtopping", "html_url": "https://github.com/hughtopping", "followers_url": "https://api.github.com/users/hughtopping/followers", "following_url": "https://api.github.com/users/hughtopping/following{/other_user}", "gists_url": "https://api.github.com/users/hughtopping/gists{/gist_id}", "starred_url": "https://api.github.com/users/hughtopping/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hughtopping/subscriptions", "organizations_url": "https://api.github.com/users/hughtopping/orgs", "repos_url": "https://api.github.com/users/hughtopping/repos", "events_url": "https://api.github.com/users/hughtopping/events{/privacy}", "received_events_url": "https://api.github.com/users/hughtopping/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-24T16:22:49Z", "updated_at": "2018-10-25T11:11:32Z", "closed_at": "2018-10-25T02:13:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "- Django version 2.1\r\n- Python version 3.6.5\r\n- django-ordered-model version 2.1.0\r\n\r\nI am having problems getting the `move_up_down_links` field to work in an `OrderedTabularInline`. When the `move_up_down_links` field is omitted from both `readonly_fields` and `fields`, the admin page loads as expected (but without the buttons to allow re-ordering). However with `move_up_down_links` present, the admin page gives the following error on page load:\r\n\r\n```\r\nTemplate error:\r\nIn template /Users/<redacted>/.virtualenvs/<redacted>/lib/python3.6/site-packages/django/contrib/admin/templates/admin/edit_inline/tabular.html, error at line 56\r\n   Reverse for '<app>_<model>_order_up_inline' not found. '<app>_<model>_order_up_inline' is not a valid view function or pattern name.\r\n```\r\nThe problem only occurs using `OrderedTabularInline` or `OrderedStackedInline`. If I create an `OrderedModelAdmin`, I'm able to use the `move_up_down_links` without any errors.\r\n\r\nHere is a sample code snippet:\r\n\r\n```python\r\nfrom django.db import models\r\nfrom ordered_model.models import OrderedModel\r\nfrom ordered_model.admin import OrderedTabularInline\r\nfrom django.contrib import admin\r\n\r\n\r\nclass Book(models.Model):\r\n    name = models.CharField(max_length=256)\r\n\r\n\r\nclass Section(OrderedModel):\r\n    book = models.ForeignKey(Book, on_delete=models.CASCADE)\r\n    name = models.CharField(max_length=256)\r\n    order_with_respect_to = \"book\"\r\n\r\n\r\nclass SectionInline(OrderedTabularInline):\r\n    model = Section\r\n    readonly_fields = (\"order\", \"move_up_down_links\")\r\n    fields = (\"name\", \"order\", \"move_up_down_links\")\r\n    ordering = (\"order\",)\r\n\r\n\r\nclass BookAdmin(admin.ModelAdmin):\r\n    inlines = [SectionInline]\r\n\r\n\r\nadmin.site.register(Book, BookAdmin)\r\n```\r\n\r\nAny guidance on where I'm going wrong very much appreciated - thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/167", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/167/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/167/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/167", "id": 373459002, "node_id": "MDU6SXNzdWUzNzM0NTkwMDI=", "number": 167, "title": "next and previous", "user": {"login": "Speedy1991", "id": 15920408, "node_id": "MDQ6VXNlcjE1OTIwNDA4", "avatar_url": "https://avatars3.githubusercontent.com/u/15920408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Speedy1991", "html_url": "https://github.com/Speedy1991", "followers_url": "https://api.github.com/users/Speedy1991/followers", "following_url": "https://api.github.com/users/Speedy1991/following{/other_user}", "gists_url": "https://api.github.com/users/Speedy1991/gists{/gist_id}", "starred_url": "https://api.github.com/users/Speedy1991/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Speedy1991/subscriptions", "organizations_url": "https://api.github.com/users/Speedy1991/orgs", "repos_url": "https://api.github.com/users/Speedy1991/repos", "events_url": "https://api.github.com/users/Speedy1991/events{/privacy}", "received_events_url": "https://api.github.com/users/Speedy1991/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-24T12:33:48Z", "updated_at": "2018-10-24T12:58:46Z", "closed_at": "2018-10-24T12:58:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "In a current project i need the behaviour of `next` and `previous`.\r\nThis should be easy to implement and i'll create a PR if you are interested in", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/166", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/166/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/166/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/166", "id": 373414351, "node_id": "MDU6SXNzdWUzNzM0MTQzNTE=", "number": 166, "title": "Need Add to Readme.md notes for Django<2.0", "user": {"login": "mmmcorpsvit", "id": 9638835, "node_id": "MDQ6VXNlcjk2Mzg4MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/9638835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmmcorpsvit", "html_url": "https://github.com/mmmcorpsvit", "followers_url": "https://api.github.com/users/mmmcorpsvit/followers", "following_url": "https://api.github.com/users/mmmcorpsvit/following{/other_user}", "gists_url": "https://api.github.com/users/mmmcorpsvit/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmmcorpsvit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmmcorpsvit/subscriptions", "organizations_url": "https://api.github.com/users/mmmcorpsvit/orgs", "repos_url": "https://api.github.com/users/mmmcorpsvit/repos", "events_url": "https://api.github.com/users/mmmcorpsvit/events{/privacy}", "received_events_url": "https://api.github.com/users/mmmcorpsvit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-24T10:30:59Z", "updated_at": "2018-11-08T02:42:20Z", "closed_at": "2018-11-08T02:42:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "For legacy Django < 2.0 need use package django-ordered-model<3.0.0\r\nplease add to readme.md\r\n\r\nth. for great package!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/164", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/164/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/164/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/164", "id": 365768779, "node_id": "MDU6SXNzdWUzNjU3Njg3Nzk=", "number": 164, "title": "Do not use __import__ function", "user": {"login": "sevdog", "id": 13779643, "node_id": "MDQ6VXNlcjEzNzc5NjQz", "avatar_url": "https://avatars1.githubusercontent.com/u/13779643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sevdog", "html_url": "https://github.com/sevdog", "followers_url": "https://api.github.com/users/sevdog/followers", "following_url": "https://api.github.com/users/sevdog/following{/other_user}", "gists_url": "https://api.github.com/users/sevdog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sevdog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sevdog/subscriptions", "organizations_url": "https://api.github.com/users/sevdog/orgs", "repos_url": "https://api.github.com/users/sevdog/repos", "events_url": "https://api.github.com/users/sevdog/events{/privacy}", "received_events_url": "https://api.github.com/users/sevdog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-02T07:15:24Z", "updated_at": "2018-10-16T15:37:16Z", "closed_at": "2018-10-16T15:37:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Function `_order_model_get_class` could and **should** be replaced by django [`import_string`](https://docs.djangoproject.com/en/2.0/ref/utils/#django.utils.module_loading.import_string).\r\n\r\nThis because using `__import__` may be a bad idea and is also discouraged by [Python official docs](https://docs.python.org/3.7/library/functions.html#__import__):\r\n\r\n> **Note:** This is an advanced function that is not needed in everyday Python programming, unlike `importlib.import_module()`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/162", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/162/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/162/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/162", "id": 361723469, "node_id": "MDU6SXNzdWUzNjE3MjM0Njk=", "number": 162, "title": "2.1 version is still incompatible with Django 2.1, already fixed in master", "user": {"login": "jillro", "id": 301998, "node_id": "MDQ6VXNlcjMwMTk5OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/301998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jillro", "html_url": "https://github.com/jillro", "followers_url": "https://api.github.com/users/jillro/followers", "following_url": "https://api.github.com/users/jillro/following{/other_user}", "gists_url": "https://api.github.com/users/jillro/gists{/gist_id}", "starred_url": "https://api.github.com/users/jillro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jillro/subscriptions", "organizations_url": "https://api.github.com/users/jillro/orgs", "repos_url": "https://api.github.com/users/jillro/repos", "events_url": "https://api.github.com/users/jillro/events{/privacy}", "received_events_url": "https://api.github.com/users/jillro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-19T12:25:17Z", "updated_at": "2018-09-21T09:24:27Z", "closed_at": "2018-09-19T12:28:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/bfirsh/django-ordered-model/commit/11385644e46d2f37e8eaf4c5d03dacdd04c50b91 introduces necessary changes OrderedModelAdmin to be compatible with Django 2.1, but fails to introduce the same change for OrderInlineMixin. OrderInlineMixin is still incompatible with Django 2.1, generating an exception at ChangeList \\_\\_init__.\r\n\r\nhttps://github.com/bfirsh/django-ordered-model/commit/05178cad0ef0b61130e04b2cd6e993ffa0b9a642, solves the problem, but a new release seems necessary as soon as possible to fix the bug.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/152", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/152/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/152/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/152", "id": 350587219, "node_id": "MDU6SXNzdWUzNTA1ODcyMTk=", "number": 152, "title": "Admin breaks on Django 2.1", "user": {"login": "agronick", "id": 2042303, "node_id": "MDQ6VXNlcjIwNDIzMDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2042303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/agronick", "html_url": "https://github.com/agronick", "followers_url": "https://api.github.com/users/agronick/followers", "following_url": "https://api.github.com/users/agronick/following{/other_user}", "gists_url": "https://api.github.com/users/agronick/gists{/gist_id}", "starred_url": "https://api.github.com/users/agronick/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/agronick/subscriptions", "organizations_url": "https://api.github.com/users/agronick/orgs", "repos_url": "https://api.github.com/users/agronick/repos", "events_url": "https://api.github.com/users/agronick/events{/privacy}", "received_events_url": "https://api.github.com/users/agronick/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-14T20:33:52Z", "updated_at": "2018-08-27T05:10:22Z", "closed_at": "2018-08-16T10:42:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "They added another init property to the ChangeList object named sortable_by. Without passing None for that attribute an exception is thrown.\r\n\r\nFor anyone else that needs it, I fixed it with this monkey patch.\r\n```\r\nfrom ordered_model import admin as ord_admin\r\n# Monkey patch to fix Django ordered admin\r\nclass ChangeListPatch(ChangeList):\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        args = list(args)\r\n        if len(args) == 12:\r\n            args.append(None)\r\n        super().__init__(*args, **kwargs)\r\n\r\nord_admin.ChangeList = ChangeListPatch\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/150", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/150/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/150/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/150", "id": 330140746, "node_id": "MDU6SXNzdWUzMzAxNDA3NDY=", "number": 150, "title": "Would you like to help maintain this project?", "user": {"login": "bfirsh", "id": 40906, "node_id": "MDQ6VXNlcjQwOTA2", "avatar_url": "https://avatars1.githubusercontent.com/u/40906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bfirsh", "html_url": "https://github.com/bfirsh", "followers_url": "https://api.github.com/users/bfirsh/followers", "following_url": "https://api.github.com/users/bfirsh/following{/other_user}", "gists_url": "https://api.github.com/users/bfirsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/bfirsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bfirsh/subscriptions", "organizations_url": "https://api.github.com/users/bfirsh/orgs", "repos_url": "https://api.github.com/users/bfirsh/repos", "events_url": "https://api.github.com/users/bfirsh/events{/privacy}", "received_events_url": "https://api.github.com/users/bfirsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-07T06:57:50Z", "updated_at": "2018-11-02T11:15:56Z", "closed_at": "2018-11-02T11:15:56Z", "author_association": "OWNER", "active_lock_reason": null, "body": "As you can tell, I haven't done the best job of looking after this library. A bunch of people are using it, so I could do with help from other people to maintain it.\r\n\r\nWould you like to help? Email me at ben@firshman.co.uk. \u2764\ufe0f ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/146", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/146/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/146/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/146", "id": 289920245, "node_id": "MDU6SXNzdWUyODk5MjAyNDU=", "number": 146, "title": "Unknown field(s) (move_up_down_links) specified for Topic. Check fields/fieldsets/exclude attributes of class TopicAdmin.", "user": {"login": "Logmytech", "id": 6367897, "node_id": "MDQ6VXNlcjYzNjc4OTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6367897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Logmytech", "html_url": "https://github.com/Logmytech", "followers_url": "https://api.github.com/users/Logmytech/followers", "following_url": "https://api.github.com/users/Logmytech/following{/other_user}", "gists_url": "https://api.github.com/users/Logmytech/gists{/gist_id}", "starred_url": "https://api.github.com/users/Logmytech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Logmytech/subscriptions", "organizations_url": "https://api.github.com/users/Logmytech/orgs", "repos_url": "https://api.github.com/users/Logmytech/repos", "events_url": "https://api.github.com/users/Logmytech/events{/privacy}", "received_events_url": "https://api.github.com/users/Logmytech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-19T09:58:45Z", "updated_at": "2018-09-22T12:35:25Z", "closed_at": "2018-09-22T12:35:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following in my admin\r\n```\r\n\r\nclass TopicAdmin(OrderedModelAdmin):\r\n    fields = ('title', 'description', 'move_up_down_links',)\r\n\r\nadmin.site.register(Topic, TopicAdmin)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/143", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/143/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/143/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/143", "id": 285313257, "node_id": "MDU6SXNzdWUyODUzMTMyNTc=", "number": 143, "title": "Expected behavior when deleting an instance earlier in the stack?", "user": {"login": "daneah", "id": 1808306, "node_id": "MDQ6VXNlcjE4MDgzMDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1808306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daneah", "html_url": "https://github.com/daneah", "followers_url": "https://api.github.com/users/daneah/followers", "following_url": "https://api.github.com/users/daneah/following{/other_user}", "gists_url": "https://api.github.com/users/daneah/gists{/gist_id}", "starred_url": "https://api.github.com/users/daneah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daneah/subscriptions", "organizations_url": "https://api.github.com/users/daneah/orgs", "repos_url": "https://api.github.com/users/daneah/repos", "events_url": "https://api.github.com/users/daneah/events{/privacy}", "received_events_url": "https://api.github.com/users/daneah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-01T15:33:46Z", "updated_at": "2018-02-28T04:26:49Z", "closed_at": "2018-02-28T04:26:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I really like this work!\r\n\r\nThe only thing tripping me up at the moment is when deleting instances. Suppose I have:\r\n\r\n* Instance 1 (order 0)\r\n* Instance 2 (order 1)\r\n* Instance 3 (order 2)\r\n\r\nWhen I delete Instance 2, I see that the outcome is:\r\n\r\n* Instance 1 (order 0)\r\n* Instance 3 (order 2)\r\n\r\nI'm wondering if this is expected behavior (seems possible for performance reasons) and, if so, what the recommended way of updating the order of everything below the deleted instance would be. It's possible I'm using the `order` in an unintended way\u2014I leverage it for display purposes. I could instead generate a QuerySet and determine the index that way, but that could also have performance issues for large datasets since it can't be evaluated lazily.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/141", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/141/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/141/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/141", "id": 277317722, "node_id": "MDU6SXNzdWUyNzczMTc3MjI=", "number": 141, "title": "Feature request: order_with_respect_to on a field of a related model", "user": {"login": "BarrensZeppelin", "id": 2784791, "node_id": "MDQ6VXNlcjI3ODQ3OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2784791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BarrensZeppelin", "html_url": "https://github.com/BarrensZeppelin", "followers_url": "https://api.github.com/users/BarrensZeppelin/followers", "following_url": "https://api.github.com/users/BarrensZeppelin/following{/other_user}", "gists_url": "https://api.github.com/users/BarrensZeppelin/gists{/gist_id}", "starred_url": "https://api.github.com/users/BarrensZeppelin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BarrensZeppelin/subscriptions", "organizations_url": "https://api.github.com/users/BarrensZeppelin/orgs", "repos_url": "https://api.github.com/users/BarrensZeppelin/repos", "events_url": "https://api.github.com/users/BarrensZeppelin/events{/privacy}", "received_events_url": "https://api.github.com/users/BarrensZeppelin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-28T09:43:42Z", "updated_at": "2018-06-25T04:57:24Z", "closed_at": "2018-06-25T04:57:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\nI have a use case where it would be beneficial to be able to specify order_with_respect_to on a field of a related model.\r\n\r\nIf you have the following models\r\n```python\r\nclass QueueInfo(models.model):\r\n    user = models.ForeignKey('User')\r\n\r\n    additional = models.ForeignKey('OtherModel')\r\n    fields = ...\r\n\r\nclass QueueItem(OrderedModel):\r\n     info = models.ForeignKey('QueueInfo')\r\n     order_with_respect_to = 'info__user'\r\n```\r\n\r\nThe QueueInfo contains some information specific to the items that point to it, but the QueueItems should be ordered between all of a user's items.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/138", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/138/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/138/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/138", "id": 270844642, "node_id": "MDU6SXNzdWUyNzA4NDQ2NDI=", "number": 138, "title": "TemplateDoesNotExist ordered_model/admin/order_controls.html", "user": {"login": "GraysonAdams", "id": 1523519, "node_id": "MDQ6VXNlcjE1MjM1MTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1523519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GraysonAdams", "html_url": "https://github.com/GraysonAdams", "followers_url": "https://api.github.com/users/GraysonAdams/followers", "following_url": "https://api.github.com/users/GraysonAdams/following{/other_user}", "gists_url": "https://api.github.com/users/GraysonAdams/gists{/gist_id}", "starred_url": "https://api.github.com/users/GraysonAdams/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GraysonAdams/subscriptions", "organizations_url": "https://api.github.com/users/GraysonAdams/orgs", "repos_url": "https://api.github.com/users/GraysonAdams/repos", "events_url": "https://api.github.com/users/GraysonAdams/events{/privacy}", "received_events_url": "https://api.github.com/users/GraysonAdams/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-02T23:56:18Z", "updated_at": "2017-11-03T16:41:14Z", "closed_at": "2017-11-03T16:41:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "After setting up a Many-To-Many object with what I believe were the necessary fields and successfully installed django-ordered-model, I get this error when I try to view an object with any foreign objects tied to it:\r\n\r\n\r\n```\r\nTemplateDoesNotExist\r\nordered_model/admin/order_controls.html\r\n/usr/local/lib/python3.6/site-packages/django/template/loader.py in get_template, line 25\r\n/usr/local/bin/python\r\n3.6.1\r\n['/django',  '/usr/local/lib/python36.zip',  '/usr/local/lib/python3.6',  '/usr/local/lib/python3.6/lib-dynload',  '/usr/local/lib/python3.6/site-packages']\r\nThu, 2 Nov 2017 19:55:01 -0400\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/137", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/137/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/137/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/137", "id": 267249262, "node_id": "MDU6SXNzdWUyNjcyNDkyNjI=", "number": 137, "title": "Move up/down links to non-existant url with tabular inline", "user": {"login": "tritium21", "id": 1781587, "node_id": "MDQ6VXNlcjE3ODE1ODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1781587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tritium21", "html_url": "https://github.com/tritium21", "followers_url": "https://api.github.com/users/tritium21/followers", "following_url": "https://api.github.com/users/tritium21/following{/other_user}", "gists_url": "https://api.github.com/users/tritium21/gists{/gist_id}", "starred_url": "https://api.github.com/users/tritium21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tritium21/subscriptions", "organizations_url": "https://api.github.com/users/tritium21/orgs", "repos_url": "https://api.github.com/users/tritium21/repos", "events_url": "https://api.github.com/users/tritium21/events{/privacy}", "received_events_url": "https://api.github.com/users/tritium21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-10-20T17:35:00Z", "updated_at": "2019-05-25T11:41:16Z", "closed_at": "2019-05-25T11:41:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I click the up or down links with tabular inline, it dumps out to the main admin interface with the error message \"**Story with ID \"1/chapter/1/move-up\" doesn't exist. Perhaps it was deleted?**\"  I'm dumbfounded on how to fix this.\r\n\r\n```python\r\n# admin.py\r\nfrom django.contrib import admin\r\nfrom ordered_model.admin import OrderedTabularInline\r\n\r\nfrom .models import Story, Chapter\r\n\r\n\r\n# Register your models here.\r\nclass ChapterInline(OrderedTabularInline):\r\n    model = Chapter\r\n    fields = ('title', 'author', 'pub_date', 'body', 'order', 'move_up_down_links')\r\n    readonly_fields = ('order', 'move_up_down_links')\r\n    extra = 1\r\n    order = ('order',)\r\n\r\n\r\nclass StoryAdmin(admin.ModelAdmin):\r\n    list_display = ('title', 'keywords')\r\n    inlines = (ChapterInline,)\r\n\r\n    def get_urls(self):\r\n        urls = super().get_urls()\r\n        print(urls)\r\n        for inline in self.inlines:\r\n            if hasattr(inline, 'get_urls'):\r\n                urls += inline.get_urls(self)\r\n        print(urls)\r\n        return urls\r\n\r\nadmin.site.register(Story, StoryAdmin)\r\n```\r\n\r\n```python\r\n# models.py\r\nfrom django.db import models\r\nfrom ordered_model.models import OrderedModel\r\nfrom autoslug import AutoSlugField\r\n\r\n\r\n# Create your models here.\r\nclass Story(models.Model):\r\n    title = models.CharField(max_length=200, unique=True)\r\n    slug = AutoSlugField(populate_from='title', unique=True)\r\n    description = models.TextField()\r\n    keywords = models.CharField(max_length=200)\r\n\r\n    def __str__(self):\r\n        return self.title\r\n\r\n\r\nclass Chapter(OrderedModel):\r\n    title = models.CharField(max_length=200)\r\n    story = models.ForeignKey(Story, on_delete=models.CASCADE)\r\n    slug = AutoSlugField(populate_from='title')\r\n    author = models.ForeignKey('users.User')\r\n    pub_date = models.DateTimeField()\r\n    body = models.TextField()\r\n    order_with_respect_to = 'story'\r\n\r\n    class Meta(OrderedModel.Meta):\r\n        pass\r\n\r\n    def __str__(self):\r\n        return f\"{self.story.title}: {self.title}\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/132", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/132/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/132/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/132", "id": 254293115, "node_id": "MDU6SXNzdWUyNTQyOTMxMTU=", "number": 132, "title": "Support for move_top and move_down", "user": {"login": "madEng84", "id": 2088831, "node_id": "MDQ6VXNlcjIwODg4MzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2088831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madEng84", "html_url": "https://github.com/madEng84", "followers_url": "https://api.github.com/users/madEng84/followers", "following_url": "https://api.github.com/users/madEng84/following{/other_user}", "gists_url": "https://api.github.com/users/madEng84/gists{/gist_id}", "starred_url": "https://api.github.com/users/madEng84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madEng84/subscriptions", "organizations_url": "https://api.github.com/users/madEng84/orgs", "repos_url": "https://api.github.com/users/madEng84/repos", "events_url": "https://api.github.com/users/madEng84/events{/privacy}", "received_events_url": "https://api.github.com/users/madEng84/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-31T10:47:46Z", "updated_at": "2018-11-02T11:10:14Z", "closed_at": "2018-11-02T11:10:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, it could be very useful if there were the possibility to add move_top and move_bottom in the change_list.\r\n\r\nThanks for your great work", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/129", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/129/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/129/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/129", "id": 251789659, "node_id": "MDU6SXNzdWUyNTE3ODk2NTk=", "number": 129, "title": "Admin site with filtering", "user": {"login": "sysradium", "id": 16747951, "node_id": "MDQ6VXNlcjE2NzQ3OTUx", "avatar_url": "https://avatars0.githubusercontent.com/u/16747951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sysradium", "html_url": "https://github.com/sysradium", "followers_url": "https://api.github.com/users/sysradium/followers", "following_url": "https://api.github.com/users/sysradium/following{/other_user}", "gists_url": "https://api.github.com/users/sysradium/gists{/gist_id}", "starred_url": "https://api.github.com/users/sysradium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sysradium/subscriptions", "organizations_url": "https://api.github.com/users/sysradium/orgs", "repos_url": "https://api.github.com/users/sysradium/repos", "events_url": "https://api.github.com/users/sysradium/events{/privacy}", "received_events_url": "https://api.github.com/users/sysradium/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-08-21T22:39:47Z", "updated_at": "2017-08-29T20:46:28Z", "closed_at": "2017-08-29T20:46:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I open admin site page on pricegroup page and click up/down link, the request goes to:\r\n`/admin/main/pricegroup/f0cd8f4a-e715-11e6-b3ee-0242ac110009/move-up/?shop__id__exact=93e0f534-c99c-11e5-9475-0242ac110006` \r\nAnd is being redirected to: `Location:../../?` which is weird.\r\n\r\nAlso sometimes `shop__id__exact`  is being set to the wrong PK in 302 redirect.\r\n\r\nIt seems that it for some reason uses query string from a previous request. So if filter pricegroup by one shop__id, then against another and after that click `move_up` - it will return a redirect to the first shop. Problem appears when you use gunicorn with gevent. Apparently because of this https://github.com/bfirsh/django-ordered-model/blob/master/ordered_model/admin.py#L46 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/127", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/127/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/127/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/127", "id": 251271373, "node_id": "MDU6SXNzdWUyNTEyNzEzNzM=", "number": 127, "title": "OrderedTabularInline move_up_down_links() fails when order_with_respect_to has non-standard primary_key", "user": {"login": "shuckc", "id": 1188286, "node_id": "MDQ6VXNlcjExODgyODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1188286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shuckc", "html_url": "https://github.com/shuckc", "followers_url": "https://api.github.com/users/shuckc/followers", "following_url": "https://api.github.com/users/shuckc/following{/other_user}", "gists_url": "https://api.github.com/users/shuckc/gists{/gist_id}", "starred_url": "https://api.github.com/users/shuckc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shuckc/subscriptions", "organizations_url": "https://api.github.com/users/shuckc/orgs", "repos_url": "https://api.github.com/users/shuckc/repos", "events_url": "https://api.github.com/users/shuckc/events{/privacy}", "received_events_url": "https://api.github.com/users/shuckc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-18T14:57:36Z", "updated_at": "2017-08-18T18:05:38Z", "closed_at": "2017-08-18T18:05:38Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I'm working on a case of missing up/down links on an `OrderedTabularInline` caused by an error thrown from `move_up_down_links`:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\cshucks\\repos\\abfw-app\\venv\\lib\\site-packages\\ordered_model\\admin.py\", line 253, in move_up_down_links\r\n    r = self._move_up_down_links(obj)\r\n  File \"C:\\Users\\cshucks\\repos\\abfw-app\\venv\\lib\\site-packages\\ordered_model\\admin.py\", line 280, in _move_up_down_links\r\n    if value.__class__ is self.parent_model and value is not None and value.id is not None]\r\nAttributeError: 'Account' object has no attribute 'id'\r\n```\r\n\r\nThe class with which we are ordering with respect to (Account) has a custom primary key:\r\n```\r\nclass Account(models.Model):\r\n    acc = models.CharField(max_length=10, primary_key=True)\r\n    name = models.CharField(max_length=100)\r\n    ...\r\n\r\nclass OrderFormLine(OrderedModel):\r\n    acc = models.ForeignKey(hello.models.Account)\r\n    bin_no = models.CharField(max_length=20)\r\n    title = models.CharField(max_length=50, blank=True)\r\n    ...\r\n\r\n```\r\nWhich trips up [this code](https://github.com/bfirsh/django-ordered-model/blob/0d6ae776e48802dafc6bb5af1fcde33146b33ef0/ordered_model/admin.py#L265):\r\n```\r\n        order_with_respect_to = obj._get_order_with_respect_to() or []  # [(u'acc', <Account: Z1>)]\r\n        parent_model = self.parent_model._meta  # hello.account\r\n\r\n        fields = [\r\n            str(value.id) for field_name, value in order_with_respect_to\r\n            if value.__class__ is self.parent_model and value is not None and value.id is not None]\r\n```\r\nChanging it to use `value.pk` works - I'll prepare a pull request \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/126", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/126/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/126/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/126", "id": 249182935, "node_id": "MDU6SXNzdWUyNDkxODI5MzU=", "number": 126, "title": "Start at one?", "user": {"login": "derek-adair", "id": 847236, "node_id": "MDQ6VXNlcjg0NzIzNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/847236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derek-adair", "html_url": "https://github.com/derek-adair", "followers_url": "https://api.github.com/users/derek-adair/followers", "following_url": "https://api.github.com/users/derek-adair/following{/other_user}", "gists_url": "https://api.github.com/users/derek-adair/gists{/gist_id}", "starred_url": "https://api.github.com/users/derek-adair/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derek-adair/subscriptions", "organizations_url": "https://api.github.com/users/derek-adair/orgs", "repos_url": "https://api.github.com/users/derek-adair/repos", "events_url": "https://api.github.com/users/derek-adair/events{/privacy}", "received_events_url": "https://api.github.com/users/derek-adair/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-09T22:40:54Z", "updated_at": "2017-08-31T15:17:25Z", "closed_at": "2017-08-31T15:17:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "How would I start the ordering at one?\r\n\r\nReally not sure if i should even do this, but I am using this field for a multiplier used in score calculation.  Would it be best for me to just use MyModel.order +1 in the calculation, and display whenever this is used?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/124", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/124/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/124/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/124", "id": 241620274, "node_id": "MDU6SXNzdWUyNDE2MjAyNzQ=", "number": 124, "title": "down() method.", "user": {"login": "tomaszgiedziun", "id": 17527425, "node_id": "MDQ6VXNlcjE3NTI3NDI1", "avatar_url": "https://avatars3.githubusercontent.com/u/17527425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomaszgiedziun", "html_url": "https://github.com/tomaszgiedziun", "followers_url": "https://api.github.com/users/tomaszgiedziun/followers", "following_url": "https://api.github.com/users/tomaszgiedziun/following{/other_user}", "gists_url": "https://api.github.com/users/tomaszgiedziun/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomaszgiedziun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomaszgiedziun/subscriptions", "organizations_url": "https://api.github.com/users/tomaszgiedziun/orgs", "repos_url": "https://api.github.com/users/tomaszgiedziun/repos", "events_url": "https://api.github.com/users/tomaszgiedziun/events{/privacy}", "received_events_url": "https://api.github.com/users/tomaszgiedziun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-10T07:15:33Z", "updated_at": "2017-08-31T06:48:40Z", "closed_at": "2017-08-31T06:48:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, i've noticed that in OrderedModelBase.down() method, ordering_queryset is missing order_by.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/122", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/122/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/122/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/122", "id": 236126331, "node_id": "MDU6SXNzdWUyMzYxMjYzMzE=", "number": 122, "title": "No Reverse Match with OrderedTabularInline", "user": {"login": "madEng84", "id": 2088831, "node_id": "MDQ6VXNlcjIwODg4MzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2088831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madEng84", "html_url": "https://github.com/madEng84", "followers_url": "https://api.github.com/users/madEng84/followers", "following_url": "https://api.github.com/users/madEng84/following{/other_user}", "gists_url": "https://api.github.com/users/madEng84/gists{/gist_id}", "starred_url": "https://api.github.com/users/madEng84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madEng84/subscriptions", "organizations_url": "https://api.github.com/users/madEng84/orgs", "repos_url": "https://api.github.com/users/madEng84/repos", "events_url": "https://api.github.com/users/madEng84/events{/privacy}", "received_events_url": "https://api.github.com/users/madEng84/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-15T09:15:42Z", "updated_at": "2017-08-31T10:45:25Z", "closed_at": "2017-08-30T22:10:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "With Django 1.11.2 i have an error like this:\r\n\r\n> Django Version:\t1.11.2\r\n> Python Version:    2.7\r\n> Exception Type:\tNoReverseMatch\r\n> Exception Value:\t\r\n> Reverse for '{app_label}_{model_name}_order_up_inline' not found. \r\n\r\np.s. Obviously app_label and model_name are substituted from real attrs\r\n\r\nIf i use django_extensions `show_urls` command i cannot see them in project urls, but i can see the ones of the OrderedModelAdmin i used in the whole admin site", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/118", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/118/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/118/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/118", "id": 221964683, "node_id": "MDU6SXNzdWUyMjE5NjQ2ODM=", "number": 118, "title": "Couldn't install django-ordered-model", "user": {"login": "Asqiir", "id": 27573239, "node_id": "MDQ6VXNlcjI3NTczMjM5", "avatar_url": "https://avatars0.githubusercontent.com/u/27573239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Asqiir", "html_url": "https://github.com/Asqiir", "followers_url": "https://api.github.com/users/Asqiir/followers", "following_url": "https://api.github.com/users/Asqiir/following{/other_user}", "gists_url": "https://api.github.com/users/Asqiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/Asqiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Asqiir/subscriptions", "organizations_url": "https://api.github.com/users/Asqiir/orgs", "repos_url": "https://api.github.com/users/Asqiir/repos", "events_url": "https://api.github.com/users/Asqiir/events{/privacy}", "received_events_url": "https://api.github.com/users/Asqiir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-15T18:28:37Z", "updated_at": "2017-04-16T14:20:28Z", "closed_at": "2017-04-16T14:18:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "What I did:\r\n`python3 -m pip install django-ordered-model` (`python3 -m pip` is the equivalent to `pip3` on my computer)\r\n\r\nThe traceback I got:\r\n`Collecting django-ordered-model\r\n  Downloading django-ordered-model-1.4.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-d1idycat/django-ordered-model/setup.py\", line 5, in <module>\r\n        with open('requirements.txt') as f:\r\n    FileNotFoundError: [Errno 2] No such file or directory: 'requirements.txt'\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-d1idycat/django-ordered-model/`\r\n\r\nI got the same error when I downloaded the code here and built it myself.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/107", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/107/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/107/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/107", "id": 183289894, "node_id": "MDU6SXNzdWUxODMyODk4OTQ=", "number": 107, "title": "six is used but not in requirements.txt", "user": {"login": "RevolutionTech", "id": 6820092, "node_id": "MDQ6VXNlcjY4MjAwOTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6820092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RevolutionTech", "html_url": "https://github.com/RevolutionTech", "followers_url": "https://api.github.com/users/RevolutionTech/followers", "following_url": "https://api.github.com/users/RevolutionTech/following{/other_user}", "gists_url": "https://api.github.com/users/RevolutionTech/gists{/gist_id}", "starred_url": "https://api.github.com/users/RevolutionTech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RevolutionTech/subscriptions", "organizations_url": "https://api.github.com/users/RevolutionTech/orgs", "repos_url": "https://api.github.com/users/RevolutionTech/repos", "events_url": "https://api.github.com/users/RevolutionTech/events{/privacy}", "received_events_url": "https://api.github.com/users/RevolutionTech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-16T20:36:09Z", "updated_at": "2016-10-28T14:22:13Z", "closed_at": "2016-10-28T14:22:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Python package `six` is not declared in `requirements.txt`, but it is used by the library.\n\nThis wouldn't be an issue for most users as virtually all Python users have `six` installed already, but if a user didn't have `six` installed, they would run into an `ImportError`.\n\n(I ran into this issue when installing `django-ordered-model` in a fresh Virtualenv).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/102", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/102/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/102/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/102", "id": 177992220, "node_id": "MDU6SXNzdWUxNzc5OTIyMjA=", "number": 102, "title": "Missing move up down links in OrderedTabularInline", "user": {"login": "darbula", "id": 1332382, "node_id": "MDQ6VXNlcjEzMzIzODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1332382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darbula", "html_url": "https://github.com/darbula", "followers_url": "https://api.github.com/users/darbula/followers", "following_url": "https://api.github.com/users/darbula/following{/other_user}", "gists_url": "https://api.github.com/users/darbula/gists{/gist_id}", "starred_url": "https://api.github.com/users/darbula/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darbula/subscriptions", "organizations_url": "https://api.github.com/users/darbula/orgs", "repos_url": "https://api.github.com/users/darbula/repos", "events_url": "https://api.github.com/users/darbula/events{/privacy}", "received_events_url": "https://api.github.com/users/darbula/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-09-20T08:03:40Z", "updated_at": "2020-05-13T06:38:54Z", "closed_at": "2020-05-13T06:38:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As noted in this comment https://github.com/bfirsh/django-ordered-model/commit/20bf5ebbbaa30a7bda3bb379c3302c500f5d4919#comments by cybercase\n\n> Currently _get_order_with_respect_to() returns a list of tuples. This statement fails silently raising an AttributeError.\n\ncausing no move up down links in tabular view.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/100", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/100/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/100/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/100", "id": 174922278, "node_id": "MDU6SXNzdWUxNzQ5MjIyNzg=", "number": 100, "title": "Django 1.10 RemovedInDjango20Warning: Importing from django.core.urlresolvers is deprecated in favor of django.urls.", "user": {"login": "RevolutionTech", "id": 6820092, "node_id": "MDQ6VXNlcjY4MjAwOTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6820092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RevolutionTech", "html_url": "https://github.com/RevolutionTech", "followers_url": "https://api.github.com/users/RevolutionTech/followers", "following_url": "https://api.github.com/users/RevolutionTech/following{/other_user}", "gists_url": "https://api.github.com/users/RevolutionTech/gists{/gist_id}", "starred_url": "https://api.github.com/users/RevolutionTech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RevolutionTech/subscriptions", "organizations_url": "https://api.github.com/users/RevolutionTech/orgs", "repos_url": "https://api.github.com/users/RevolutionTech/repos", "events_url": "https://api.github.com/users/RevolutionTech/events{/privacy}", "received_events_url": "https://api.github.com/users/RevolutionTech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-03T23:09:37Z", "updated_at": "2017-07-20T16:21:40Z", "closed_at": "2017-07-20T16:21:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "In some locations, `reverse` is imported from `django.core.urlresolvers` which in Django 1.10 has been deprecated in favour of `django.urls`:\nhttps://github.com/bfirsh/django-ordered-model/blob/0617d88984cbcc43fb69ba3cd5bfabdcb8444b20/ordered_model/models.py#L3\n\nThis causes a warning in Django 1.10 and will cease to work in Django 2.0.\n\nRef: https://docs.djangoproject.com/en/1.10/ref/urlresolvers/#module-django.urls\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/99", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/99/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/99/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/99", "id": 174202390, "node_id": "MDU6SXNzdWUxNzQyMDIzOTA=", "number": 99, "title": "Django 1.9 RemovedInDjango20Warning: Deprecated allow_tags attribute used", "user": {"login": "RevolutionTech", "id": 6820092, "node_id": "MDQ6VXNlcjY4MjAwOTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6820092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RevolutionTech", "html_url": "https://github.com/RevolutionTech", "followers_url": "https://api.github.com/users/RevolutionTech/followers", "following_url": "https://api.github.com/users/RevolutionTech/following{/other_user}", "gists_url": "https://api.github.com/users/RevolutionTech/gists{/gist_id}", "starred_url": "https://api.github.com/users/RevolutionTech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RevolutionTech/subscriptions", "organizations_url": "https://api.github.com/users/RevolutionTech/orgs", "repos_url": "https://api.github.com/users/RevolutionTech/repos", "events_url": "https://api.github.com/users/RevolutionTech/events{/privacy}", "received_events_url": "https://api.github.com/users/RevolutionTech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-31T07:22:43Z", "updated_at": "2018-10-16T15:37:49Z", "closed_at": "2018-10-16T15:37:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Django 1.9, the attribute `allow_tags` was deprecated. However, it is currently used on the field `move_up_down_links` in `OrderedModelAdmin` and `OrderedTabularInline`. It is now preferred to use `format_html()`, `format_html_join()`, or `mark_safe()` when constructing the method's return value instead.\n\nThis causes a warning in Django 1.9 and will cease to work in Django 2.0.\n\nRef: https://docs.djangoproject.com/en/1.10/releases/1.9/#id1\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/97", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/97/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/97/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/97", "id": 167307413, "node_id": "MDU6SXNzdWUxNjczMDc0MTM=", "number": 97, "title": "Admin up/down links don't seem to work with order_with_respect_to", "user": {"login": "bfirsh", "id": 40906, "node_id": "MDQ6VXNlcjQwOTA2", "avatar_url": "https://avatars1.githubusercontent.com/u/40906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bfirsh", "html_url": "https://github.com/bfirsh", "followers_url": "https://api.github.com/users/bfirsh/followers", "following_url": "https://api.github.com/users/bfirsh/following{/other_user}", "gists_url": "https://api.github.com/users/bfirsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/bfirsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bfirsh/subscriptions", "organizations_url": "https://api.github.com/users/bfirsh/orgs", "repos_url": "https://api.github.com/users/bfirsh/repos", "events_url": "https://api.github.com/users/bfirsh/events{/privacy}", "received_events_url": "https://api.github.com/users/bfirsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-07-25T08:09:52Z", "updated_at": "2019-11-25T11:19:16Z", "closed_at": "2017-08-30T18:06:57Z", "author_association": "OWNER", "active_lock_reason": null, "body": "As noted in https://github.com/bfirsh/django-ordered-model/commit/20bf5ebbbaa30a7bda3bb379c3302c500f5d4919#commitcomment-18368306\n\nThere are now tests for the admin interface, so first step is probably writing some tests for the admin with order_with_respect_to...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/96", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/96/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/96/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/96", "id": 166494556, "node_id": "MDU6SXNzdWUxNjY0OTQ1NTY=", "number": 96, "title": "`to()` not updating all indices request.POST", "user": {"login": "robmoggach", "id": 184759, "node_id": "MDQ6VXNlcjE4NDc1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/184759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robmoggach", "html_url": "https://github.com/robmoggach", "followers_url": "https://api.github.com/users/robmoggach/followers", "following_url": "https://api.github.com/users/robmoggach/following{/other_user}", "gists_url": "https://api.github.com/users/robmoggach/gists{/gist_id}", "starred_url": "https://api.github.com/users/robmoggach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robmoggach/subscriptions", "organizations_url": "https://api.github.com/users/robmoggach/orgs", "repos_url": "https://api.github.com/users/robmoggach/repos", "events_url": "https://api.github.com/users/robmoggach/events{/privacy}", "received_events_url": "https://api.github.com/users/robmoggach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-20T04:41:26Z", "updated_at": "2017-09-04T07:31:00Z", "closed_at": "2017-09-04T07:31:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the `to()` method and it's not updating all the object indices as expected. I have a number of images that are limited in order scope using `order_with_respect_to \" (\"album\",)`. When I use the `to()` method to move an object to a new location, not all objects are updated properly. Subsequently I have multiple objects with the same order index.\n\nSpecifically I'm using a `jquery.ajax` `POST` request to change the order of some images in a gallery. I send `image_id` and `new_order` via `POST` to a view that finds the image `image=Image.objects.get(id=image_id)` and then calls `image.to(new_order)`. Only the image in question is updated. \n\n> **In the django shell calling the same commands works as expected.**\n\n```\n>>> from gallery.models import Image\n>>> Image.objects.all()\n[\n    <Image: Gallery Image: 0-change-01>,\n    <Image: Gallery Image: 1-change-02>,\n    <Image: Gallery Image: 2-change-03>,\n    <Image: Gallery Image: 3-change-04>\n]\n>>> Image.objects.all()[1].to(0)\n>>> Image.objects.all()\n[\n    <Image: Gallery Image: 0-change-02>, \n    <Image: Gallery Image: 1-change-01>, \n    <Image: Gallery Image: 2-change-03>, \n    <Image: Gallery Image: 3-change-04>\n]\n```\n\n**I've tidied up the list display above so it's more readable on github**\n\nHere's my view code... pretty basic stuff:\n\n```\ndef image_order(request):\n    if request.method == 'POST':\n        response = {}\n        image_id=request.POST.get('imageid')\n        new_order=request.POST.get('neworder')\n        try:\n            image = Image.objects.get(id=image_id)\n        except Image.DoesNotExist:\n            response = {'message': 'Image not found, yo.'}\n            return HttpResponse( json.dumps(response), content_type=\"application/json\" ) #404\n        image.to(new_order)\n        response = {\n            'message': 'Image #{id} moved to  {neworder} successfully!'.format(id=image_id, neworder=new_order),\n        }\n        return HttpResponse( json.dumps(response), content_type=\"application/json\" ) #200\n    else:\n        return HttpResponse( json.dumps({\"Err\": \"that didn't work\"}), content_type=\"application/json\") #400\n\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/91", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/91/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/91/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/91", "id": 159338986, "node_id": "MDU6SXNzdWUxNTkzMzg5ODY=", "number": 91, "title": "new release", "user": {"login": "mjholtkamp", "id": 26104, "node_id": "MDQ6VXNlcjI2MTA0", "avatar_url": "https://avatars3.githubusercontent.com/u/26104?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mjholtkamp", "html_url": "https://github.com/mjholtkamp", "followers_url": "https://api.github.com/users/mjholtkamp/followers", "following_url": "https://api.github.com/users/mjholtkamp/following{/other_user}", "gists_url": "https://api.github.com/users/mjholtkamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/mjholtkamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mjholtkamp/subscriptions", "organizations_url": "https://api.github.com/users/mjholtkamp/orgs", "repos_url": "https://api.github.com/users/mjholtkamp/repos", "events_url": "https://api.github.com/users/mjholtkamp/events{/privacy}", "received_events_url": "https://api.github.com/users/mjholtkamp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-09T06:48:19Z", "updated_at": "2016-07-08T11:21:40Z", "closed_at": "2016-07-08T11:21:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\n\nFirst of all, thanks for this awesome package! I was thinking about implementing something like this and when I looked to see if someone else implemented this, I found your project and it's exactly what I needed.\n\nThere is a small thing that bugs me and that's already fixed in #73, but it has not been released on PyPi yet.\n\nCould you release a new version so I don't have this warning anymore?\n\nThanks in advance!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/90", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/90/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/90/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/90", "id": 157511293, "node_id": "MDU6SXNzdWUxNTc1MTEyOTM=", "number": 90, "title": "swap method seems to take an model instance but use a queryset", "user": {"login": "avoiney", "id": 1880968, "node_id": "MDQ6VXNlcjE4ODA5Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1880968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avoiney", "html_url": "https://github.com/avoiney", "followers_url": "https://api.github.com/users/avoiney/followers", "following_url": "https://api.github.com/users/avoiney/following{/other_user}", "gists_url": "https://api.github.com/users/avoiney/gists{/gist_id}", "starred_url": "https://api.github.com/users/avoiney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avoiney/subscriptions", "organizations_url": "https://api.github.com/users/avoiney/orgs", "repos_url": "https://api.github.com/users/avoiney/repos", "events_url": "https://api.github.com/users/avoiney/events{/privacy}", "received_events_url": "https://api.github.com/users/avoiney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-30T14:16:43Z", "updated_at": "2017-08-30T11:49:39Z", "closed_at": "2017-08-30T11:49:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nThe docstring of the `swap` method speaks of object but the method definition get `qs` (queryset??):\n\n```\ndef swap(self, qs):\n    \"\"\"\n    Swap the positions of this object with a reference object.\n    \"\"\"\n```\n\nThe documentation (in the README) says\n\n```\nfoo = Item.objects.create(name=\"Foo\")\nbar = Item.objects.create(name=\"Bar\")\n### Swap positions\nfoo.swap(bar)\n```\n\nBUT, in the code, the swap method try to get the first element of the qs (queryset??) argument.\nA solution could be to use a `isinstance(qs, QuerySet)` check to handle both of the case.\nThe other is to rewrite the docstring and the documentation to reflect the actual code.\n\nThanks in advance,\nRegards,\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/89", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/89/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/89/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/89", "id": 155858278, "node_id": "MDU6SXNzdWUxNTU4NTgyNzg=", "number": 89, "title": "Fix urlpatterns warning", "user": {"login": "iuriikomarov", "id": 295919, "node_id": "MDQ6VXNlcjI5NTkxOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/295919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iuriikomarov", "html_url": "https://github.com/iuriikomarov", "followers_url": "https://api.github.com/users/iuriikomarov/followers", "following_url": "https://api.github.com/users/iuriikomarov/following{/other_user}", "gists_url": "https://api.github.com/users/iuriikomarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/iuriikomarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iuriikomarov/subscriptions", "organizations_url": "https://api.github.com/users/iuriikomarov/orgs", "repos_url": "https://api.github.com/users/iuriikomarov/repos", "events_url": "https://api.github.com/users/iuriikomarov/events{/privacy}", "received_events_url": "https://api.github.com/users/iuriikomarov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-19T23:33:38Z", "updated_at": "2016-07-08T11:21:59Z", "closed_at": "2016-07-08T11:21:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nlib/python3.5/site-packages/ordered_model/admin.py:32: RemovedInDjango110Warning: django.conf.urls.patterns() is deprecated and will be removed in Django 1.10. Update your urlpatterns to be a list of django.conf.urls.url() instances instead.\n  name='{app}_{model}_order_down'.format(**self._get_model_info())),\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/87", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/87/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/87/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/87", "id": 147864941, "node_id": "MDU6SXNzdWUxNDc4NjQ5NDE=", "number": 87, "title": "Django Admin 1.9 not working when related elements", "user": {"login": "hisie", "id": 690193, "node_id": "MDQ6VXNlcjY5MDE5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/690193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hisie", "html_url": "https://github.com/hisie", "followers_url": "https://api.github.com/users/hisie/followers", "following_url": "https://api.github.com/users/hisie/following{/other_user}", "gists_url": "https://api.github.com/users/hisie/gists{/gist_id}", "starred_url": "https://api.github.com/users/hisie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hisie/subscriptions", "organizations_url": "https://api.github.com/users/hisie/orgs", "repos_url": "https://api.github.com/users/hisie/repos", "events_url": "https://api.github.com/users/hisie/events{/privacy}", "received_events_url": "https://api.github.com/users/hisie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-04-12T20:31:14Z", "updated_at": "2016-04-12T20:34:55Z", "closed_at": "2016-04-12T20:34:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/82", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/82/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/82/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/82", "id": 140272940, "node_id": "MDU6SXNzdWUxNDAyNzI5NDA=", "number": 82, "title": "OrderedTabularInline move arrows don't appear (Django 1.8+?)", "user": {"login": "adam-iris", "id": 2521495, "node_id": "MDQ6VXNlcjI1MjE0OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2521495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adam-iris", "html_url": "https://github.com/adam-iris", "followers_url": "https://api.github.com/users/adam-iris/followers", "following_url": "https://api.github.com/users/adam-iris/following{/other_user}", "gists_url": "https://api.github.com/users/adam-iris/gists{/gist_id}", "starred_url": "https://api.github.com/users/adam-iris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adam-iris/subscriptions", "organizations_url": "https://api.github.com/users/adam-iris/orgs", "repos_url": "https://api.github.com/users/adam-iris/repos", "events_url": "https://api.github.com/users/adam-iris/events{/privacy}", "received_events_url": "https://api.github.com/users/adam-iris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-11T19:39:34Z", "updated_at": "2016-07-12T14:04:06Z", "closed_at": "2016-07-12T14:04:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "The problem is in the move_up_down_links method, it's trying to get `self.model._meta.module_name`, I think this should be `self.model._meta.model_name`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/80", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/80/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/80/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/80", "id": 137304174, "node_id": "MDU6SXNzdWUxMzczMDQxNzQ=", "number": 80, "title": "'Manager' object has no attribute 'get_query_set'", "user": {"login": "madEng84", "id": 2088831, "node_id": "MDQ6VXNlcjIwODg4MzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2088831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madEng84", "html_url": "https://github.com/madEng84", "followers_url": "https://api.github.com/users/madEng84/followers", "following_url": "https://api.github.com/users/madEng84/following{/other_user}", "gists_url": "https://api.github.com/users/madEng84/gists{/gist_id}", "starred_url": "https://api.github.com/users/madEng84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madEng84/subscriptions", "organizations_url": "https://api.github.com/users/madEng84/orgs", "repos_url": "https://api.github.com/users/madEng84/repos", "events_url": "https://api.github.com/users/madEng84/events{/privacy}", "received_events_url": "https://api.github.com/users/madEng84/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-29T16:39:26Z", "updated_at": "2016-07-12T14:04:29Z", "closed_at": "2016-07-12T14:04:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "The problem is in Line 177 of _admin.py_ module\nCan you fix this? On Pypi too? (django-ordered-model==1.1.0)\n\nThanks in advance\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/77", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/77/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/77/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/77", "id": 133573010, "node_id": "MDU6SXNzdWUxMzM1NzMwMTA=", "number": 77, "title": "Admin Integration many-to-many relationship issue", "user": {"login": "Madalosso", "id": 7397747, "node_id": "MDQ6VXNlcjczOTc3NDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7397747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Madalosso", "html_url": "https://github.com/Madalosso", "followers_url": "https://api.github.com/users/Madalosso/followers", "following_url": "https://api.github.com/users/Madalosso/following{/other_user}", "gists_url": "https://api.github.com/users/Madalosso/gists{/gist_id}", "starred_url": "https://api.github.com/users/Madalosso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Madalosso/subscriptions", "organizations_url": "https://api.github.com/users/Madalosso/orgs", "repos_url": "https://api.github.com/users/Madalosso/repos", "events_url": "https://api.github.com/users/Madalosso/events{/privacy}", "received_events_url": "https://api.github.com/users/Madalosso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-14T19:48:57Z", "updated_at": "2016-02-28T14:07:19Z", "closed_at": "2016-02-28T14:07:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "hey, i just try to run a project with the examples copied from documentation and it raises this error:\n\n`AttributeError at /admin/ord/pizza/add/\n'Manager' object has no attribute 'get_query_set'`\n\nmy models.py and admin.py are both exactly copied from docs.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/73", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/73/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/73/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/73", "id": 131013539, "node_id": "MDU6SXNzdWUxMzEwMTM1Mzk=", "number": 73, "title": "Admin URL config deprecation", "user": {"login": "mcwebb", "id": 610528, "node_id": "MDQ6VXNlcjYxMDUyOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/610528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcwebb", "html_url": "https://github.com/mcwebb", "followers_url": "https://api.github.com/users/mcwebb/followers", "following_url": "https://api.github.com/users/mcwebb/following{/other_user}", "gists_url": "https://api.github.com/users/mcwebb/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcwebb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcwebb/subscriptions", "organizations_url": "https://api.github.com/users/mcwebb/orgs", "repos_url": "https://api.github.com/users/mcwebb/repos", "events_url": "https://api.github.com/users/mcwebb/events{/privacy}", "received_events_url": "https://api.github.com/users/mcwebb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-03T12:43:58Z", "updated_at": "2016-05-16T16:56:03Z", "closed_at": "2016-05-16T16:56:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for a really great module.\nJust thought I should report (since it doesn't seem to have been reported yet), I'm getting the following deprecation warning for this module.\n\n```\n[...]/site-packages/ordered_model/admin.py:32:\nRemovedInDjango110Warning: django.conf.urls.patterns() is deprecated and will be removed in Django 1.10.\nUpdate your urlpatterns to be a list of django.conf.urls.url() instances instead.\n  name='{app}_{model}_order_down'.format(**self._get_model_info())),\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/62", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/62/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/62/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/62", "id": 115235731, "node_id": "MDU6SXNzdWUxMTUyMzU3MzE=", "number": 62, "title": "Unicode string literal prefix breaks Python 3.2", "user": {"login": "jrschneider", "id": 2309584, "node_id": "MDQ6VXNlcjIzMDk1ODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2309584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrschneider", "html_url": "https://github.com/jrschneider", "followers_url": "https://api.github.com/users/jrschneider/followers", "following_url": "https://api.github.com/users/jrschneider/following{/other_user}", "gists_url": "https://api.github.com/users/jrschneider/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrschneider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrschneider/subscriptions", "organizations_url": "https://api.github.com/users/jrschneider/orgs", "repos_url": "https://api.github.com/users/jrschneider/repos", "events_url": "https://api.github.com/users/jrschneider/events{/privacy}", "received_events_url": "https://api.github.com/users/jrschneider/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-05T08:50:50Z", "updated_at": "2016-02-09T08:07:33Z", "closed_at": "2016-02-09T08:07:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears that the Unicode string literal prefixes break Python 3.2 (where support for the u'' prefix was removed). For Python >3.2, PEP 414 makes the Unicode string literal available again.\n\nDjango 1.8 officially supports Python >= 3.2, so support for this version of Python would be advisable. \n\nVirtualenv Freeze List:\nDjango==1.8.6\ndaemonize==2.4.1\ndjango-ordered-model==0.4.2\ndjangorestframework==3.3.1\nwsgiref==0.1.2\n\nPython 3.2.3\nOS: Raspbian (Raspberry Pi Linux rpi 4.1.7+ #817 PREEMPT Sat Sep 19 15:25:36 BST 2015 armv6l GNU/Linux)\n\nWorks fine under Python 2.7 on the RPi and Ubuntu 14.04LTS (Python 3.4.3). I believe Debian Jessie ships with 3.2 as it's default implementation for Python 3.X. \n\nI'm compiling 3.4.3 manually on the RPi for my own use with this library, but I suspect that won't be an issue.\n\nGiven that there is an outstanding issue for adding tests into Travis CI (#27), I would expect at that point for this issue to be illuminated.\n\nIf support for Python 3.2 is not desired, feel free to close the issue. I'm working around it by upgrading the Python version I'm using manually.\n\n``` python\n$ python manage.py makemigrations\nTraceback (most recent call last):\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/var/lib/storage/virtualenv/wrccdc-temp-py3/lib/python3.2/site-packages/django/core/management/__init__.py\", line 354, in execute_from_command_line\n    utility.execute()\n  File \"/var/lib/storage/virtualenv/wrccdc-temp-py3/lib/python3.2/site-packages/django/core/management/__init__.py\", line 328, in execute\n    django.setup()\n  File \"/var/lib/storage/virtualenv/wrccdc-temp-py3/lib/python3.2/site-packages/django/__init__.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/var/lib/storage/virtualenv/wrccdc-temp-py3/lib/python3.2/site-packages/django/apps/registry.py\", line 115, in populate\n    app_config.ready()\n  File \"/var/lib/storage/virtualenv/wrccdc-temp-py3/build/django/django/contrib/admin/apps.py\", line 22, in ready\n  File \"/var/lib/storage/virtualenv/wrccdc-temp-py3/build/django/django/contrib/admin/__init__.py\", line 24, in autodiscover\n  File \"/var/lib/storage/virtualenv/wrccdc-temp-py3/lib/python3.2/site-packages/django/utils/module_loading.py\", line 74, in autodiscover_modules\n    import_module('%s.%s' % (app_config.name, module_to_search))\n  File \"/usr/lib/python3.2/importlib/__init__.py\", line 124, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"/usr/lib/python3.2/importlib/_bootstrap.py\", line 821, in _gcd_import\n    loader.load_module(name)\n  File \"/usr/lib/python3.2/importlib/_bootstrap.py\", line 436, in load_module\n    return self._load_module(fullname)\n  File \"/usr/lib/python3.2/importlib/_bootstrap.py\", line 141, in decorated\n    return fxn(self, module, *args, **kwargs)\n  File \"/usr/lib/python3.2/importlib/_bootstrap.py\", line 330, in _load_module\n    code_object = self.get_code(name)\n  File \"/usr/lib/python3.2/importlib/_bootstrap.py\", line 413, in get_code\n    dont_inherit=True)\n  File \"/var/lib/storage/virtualenv/wrccdc-temp-py3/lib/python3.2/site-packages/ordered_model/admin.py\", line 78\n    move_up_down_links.short_description = _(u'Move')\n                                                   ^\nSyntaxError: invalid syntax\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/60", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/60/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/60/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/60", "id": 111638153, "node_id": "MDU6SXNzdWUxMTE2MzgxNTM=", "number": 60, "title": "order_with_respect_to causes additional _order field and ignores original order field", "user": {"login": "gbezyuk", "id": 1452165, "node_id": "MDQ6VXNlcjE0NTIxNjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1452165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbezyuk", "html_url": "https://github.com/gbezyuk", "followers_url": "https://api.github.com/users/gbezyuk/followers", "following_url": "https://api.github.com/users/gbezyuk/following{/other_user}", "gists_url": "https://api.github.com/users/gbezyuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbezyuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbezyuk/subscriptions", "organizations_url": "https://api.github.com/users/gbezyuk/orgs", "repos_url": "https://api.github.com/users/gbezyuk/repos", "events_url": "https://api.github.com/users/gbezyuk/events{/privacy}", "received_events_url": "https://api.github.com/users/gbezyuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-15T15:08:28Z", "updated_at": "2017-09-04T08:36:34Z", "closed_at": "2017-09-04T08:36:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "`order_with_respect_to` causes additional `_order` field creation and ignores original `order` field.\nProbably the `order` field name used here should be changed to `_order`, as django itself does.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/59", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/59/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/59/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/59", "id": 106744574, "node_id": "MDU6SXNzdWUxMDY3NDQ1NzQ=", "number": 59, "title": "Admin integration: moving fails if the object has a `move` field", "user": {"login": "mitranim", "id": 4263831, "node_id": "MDQ6VXNlcjQyNjM4MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4263831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitranim", "html_url": "https://github.com/mitranim", "followers_url": "https://api.github.com/users/mitranim/followers", "following_url": "https://api.github.com/users/mitranim/following{/other_user}", "gists_url": "https://api.github.com/users/mitranim/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitranim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitranim/subscriptions", "organizations_url": "https://api.github.com/users/mitranim/orgs", "repos_url": "https://api.github.com/users/mitranim/repos", "events_url": "https://api.github.com/users/mitranim/events{/privacy}", "received_events_url": "https://api.github.com/users/mitranim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-16T10:27:09Z", "updated_at": "2018-07-25T14:40:41Z", "closed_at": "2018-07-25T14:40:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "The title is self-explanatory. The `OrderedModelAdmin.move_view()` method tries to call the `OrderedModel.move()` method, which fails if the model has a field named `move`. The same might happen for `up`, `down` or any other fields that could clash with `OrderedModel`'s methods.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/57", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/57/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/57/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/57", "id": 82820995, "node_id": "MDU6SXNzdWU4MjgyMDk5NQ==", "number": 57, "title": "New release", "user": {"login": "palm86", "id": 3036645, "node_id": "MDQ6VXNlcjMwMzY2NDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3036645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/palm86", "html_url": "https://github.com/palm86", "followers_url": "https://api.github.com/users/palm86/followers", "following_url": "https://api.github.com/users/palm86/following{/other_user}", "gists_url": "https://api.github.com/users/palm86/gists{/gist_id}", "starred_url": "https://api.github.com/users/palm86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/palm86/subscriptions", "organizations_url": "https://api.github.com/users/palm86/orgs", "repos_url": "https://api.github.com/users/palm86/repos", "events_url": "https://api.github.com/users/palm86/events{/privacy}", "received_events_url": "https://api.github.com/users/palm86/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-05-30T14:04:52Z", "updated_at": "2015-06-02T10:06:57Z", "closed_at": "2015-06-02T10:05:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since Django 1.8 has been released, it would be nice to have a PyPI release of django-ordered-model that is compatible with Django 1.8.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/50", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/50/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/50/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/50", "id": 58820026, "node_id": "MDU6SXNzdWU1ODgyMDAyNg==", "number": 50, "title": "Support url namespace other than 'admin'", "user": {"login": "jdavisp3", "id": 43582, "node_id": "MDQ6VXNlcjQzNTgy", "avatar_url": "https://avatars3.githubusercontent.com/u/43582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdavisp3", "html_url": "https://github.com/jdavisp3", "followers_url": "https://api.github.com/users/jdavisp3/followers", "following_url": "https://api.github.com/users/jdavisp3/following{/other_user}", "gists_url": "https://api.github.com/users/jdavisp3/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdavisp3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdavisp3/subscriptions", "organizations_url": "https://api.github.com/users/jdavisp3/orgs", "repos_url": "https://api.github.com/users/jdavisp3/repos", "events_url": "https://api.github.com/users/jdavisp3/events{/privacy}", "received_events_url": "https://api.github.com/users/jdavisp3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-24T22:57:28Z", "updated_at": "2016-07-12T14:19:35Z", "closed_at": "2016-07-12T14:18:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "The changelist assumes that it will be registered under the 'admin' namespace. It would be useful to be able to specify an alternate namespace.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/49", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/49/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/49/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/49", "id": 58395762, "node_id": "MDU6SXNzdWU1ODM5NTc2Mg==", "number": 49, "title": "admin broken for custom pks", "user": {"login": "pterk", "id": 188764, "node_id": "MDQ6VXNlcjE4ODc2NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/188764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pterk", "html_url": "https://github.com/pterk", "followers_url": "https://api.github.com/users/pterk/followers", "following_url": "https://api.github.com/users/pterk/following{/other_user}", "gists_url": "https://api.github.com/users/pterk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pterk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pterk/subscriptions", "organizations_url": "https://api.github.com/users/pterk/orgs", "repos_url": "https://api.github.com/users/pterk/repos", "events_url": "https://api.github.com/users/pterk/events{/privacy}", "received_events_url": "https://api.github.com/users/pterk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-20T19:02:04Z", "updated_at": "2015-04-06T14:10:43Z", "closed_at": "2015-04-06T14:10:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off: Thanks for a nice reusable app.\n\nI have a model w/ a custom pk and the admin is broken because it relies on 'id'. However the fix is trivial:\n\n```\n--- admin.py.org    2015-02-20 20:04:34.074953287 +0100\n+++ admin.py    2015-02-20 19:52:52.182713848 +0100\n@@ -65,10 +65,10 @@\n         return render_to_string(\"ordered_model/admin/order_controls.html\", {\n             'app_label': self.model._meta.app_label,\n             'module_name': self.model._meta.module_name,\n-            'object_id': obj.id,\n+            'object_id': obj.pk,\n             'urls': {\n-                'up': reverse(\"admin:{app}_{model}_order_up\".format(**self.get_model_info()), args=[obj.id, 'up']),\n-                'down': reverse(\"admin:{app}_{model}_order_down\".format(**self.get_model_info()), args=[obj.id, 'down']),\n+                'up': reverse(\"admin:{app}_{model}_order_up\".format(**self.get_model_info()), args=[obj.pk, 'up']),\n+                'down': reverse(\"admin:{app}_{model}_order_down\".format(**self.get_model_info()), args=[obj.pk, 'down']),\n             },\n             'query_string': self.request_query_string\n         })\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/48", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/48/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/48/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/48", "id": 58395535, "node_id": "MDU6SXNzdWU1ODM5NTUzNQ==", "number": 48, "title": "admin broken for custom pks", "user": {"login": "pterk", "id": 188764, "node_id": "MDQ6VXNlcjE4ODc2NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/188764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pterk", "html_url": "https://github.com/pterk", "followers_url": "https://api.github.com/users/pterk/followers", "following_url": "https://api.github.com/users/pterk/following{/other_user}", "gists_url": "https://api.github.com/users/pterk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pterk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pterk/subscriptions", "organizations_url": "https://api.github.com/users/pterk/orgs", "repos_url": "https://api.github.com/users/pterk/repos", "events_url": "https://api.github.com/users/pterk/events{/privacy}", "received_events_url": "https://api.github.com/users/pterk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-02-20T19:00:28Z", "updated_at": "2015-02-20T19:03:22Z", "closed_at": "2015-02-20T19:03:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Made an error w/ pasting see next issue. Pls ignore this one\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/44", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/44/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/44/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/44", "id": 53459569, "node_id": "MDU6SXNzdWU1MzQ1OTU2OQ==", "number": 44, "title": "Cannot save instances when the model inherits both from OrderedModel and PolymorphicModel", "user": {"login": "mkaput", "id": 3450050, "node_id": "MDQ6VXNlcjM0NTAwNTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/3450050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkaput", "html_url": "https://github.com/mkaput", "followers_url": "https://api.github.com/users/mkaput/followers", "following_url": "https://api.github.com/users/mkaput/following{/other_user}", "gists_url": "https://api.github.com/users/mkaput/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkaput/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkaput/subscriptions", "organizations_url": "https://api.github.com/users/mkaput/orgs", "repos_url": "https://api.github.com/users/mkaput/repos", "events_url": "https://api.github.com/users/mkaput/events{/privacy}", "received_events_url": "https://api.github.com/users/mkaput/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-05T23:03:34Z", "updated_at": "2015-05-06T14:27:27Z", "closed_at": "2015-05-06T14:27:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nI am currently playing with django-ordered-model and also django-polymorphic. I have created a, rather simple, model:\n\n``` python\nclass CourseItem(PolymorphicModel, OrderedModel, VisibleModel):\n    name = models.CharField(max_length=100, verbose_name=_('item name'))\n\n    item_group = models.ForeignKey(CourseItemGroup, related_name='items', verbose_name=_('item group'))\n\n    order_with_respect_to = 'item_group'\n\n    def __str__(self):\n        return self.name\n\n    class Meta(OrderedModel.Meta):\n        verbose_name = _('course item')\n        verbose_name_plural = _('course items')\n```\n\nThe problem is, I cannot save instances of this model: I get following exception:\n\n``` python\nTraceback (most recent call last):\n  File \"[...]\\tests\\tests\\test_courses\\test_course_item.py\", line 8, in test___str__\n    item = CourseItemFactory(name='foo')\n  File \"[...]\\env\\lib\\site-packages\\factory\\base.py\", line 82, in __call__\n    return cls.create(**kwargs)\n  File \"[...]\\env\\lib\\site-packages\\factory\\base.py\", line 585, in create\n    return cls._generate(True, attrs)\n  File \"[...]\\env\\lib\\site-packages\\factory\\base.py\", line 510, in _generate\n    obj = cls._prepare(create, **attrs)\n  File \"[...]\\env\\lib\\site-packages\\factory\\base.py\", line 485, in _prepare\n    return cls._create(model_class, *args, **kwargs)\n  File \"[...]\\env\\lib\\site-packages\\factory\\django.py\", line 153, in _create\n    return manager.create(*args, **kwargs)\n  File \"[...]\\env\\lib\\site-packages\\django\\db\\models\\manager.py\", line 92, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n  File \"[...]\\env\\lib\\site-packages\\django\\db\\models\\query.py\", line 372, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"[...]\\env\\lib\\site-packages\\polymorphic\\polymorphic_model.py\", line 90, in save\n    return super(PolymorphicModel, self).save(*args, **kwargs)\n  File \"[...]\\env\\lib\\site-packages\\ordered_model\\models.py\", line 40, in save\n    c = self.get_ordering_queryset().aggregate(Max('order')).get('order__max')\n  File \"[...]\\env\\lib\\site-packages\\ordered_model\\models.py\", line 31, in get_ordering_queryset\n    qs = qs or self._default_manager.all()\n  File \"[...]\\env\\lib\\site-packages\\django\\db\\models\\manager.py\", line 206, in __get__\n    raise AttributeError(\"Manager isn't accessible via %s instances\" % type.__name__)\nAttributeError: Manager isn't accessible via CourseItem instances\n```\n\nI have figured out, that the problem sits in `OrderedModel.get_ordering_queryset` in this line:\n\n``` python\nqs = qs or self._default_manager.all()\n```\n\nAfter some googling I have found [this StackOverflow answer](http://stackoverflow.com/a/10111121/3657395); the 2nd comment proposes to use `__class__.objects` instead of `_default_manager` and after the change everything automagically started to work. I am not a Django expert, so I cannot say why this works, but it works :) \n\nI will fill a pull request in a moment with this patch soon.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/41", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/41/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/41/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/41", "id": 45674539, "node_id": "MDU6SXNzdWU0NTY3NDUzOQ==", "number": 41, "title": "django 1.7 support?", "user": {"login": "YAmikep", "id": 1226080, "node_id": "MDQ6VXNlcjEyMjYwODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1226080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YAmikep", "html_url": "https://github.com/YAmikep", "followers_url": "https://api.github.com/users/YAmikep/followers", "following_url": "https://api.github.com/users/YAmikep/following{/other_user}", "gists_url": "https://api.github.com/users/YAmikep/gists{/gist_id}", "starred_url": "https://api.github.com/users/YAmikep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YAmikep/subscriptions", "organizations_url": "https://api.github.com/users/YAmikep/orgs", "repos_url": "https://api.github.com/users/YAmikep/repos", "events_url": "https://api.github.com/users/YAmikep/events{/privacy}", "received_events_url": "https://api.github.com/users/YAmikep/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-10-13T18:58:52Z", "updated_at": "2015-04-06T13:40:00Z", "closed_at": "2015-04-06T13:40:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nDoes this app fully support Django 1.7?\nI am trying django-ordered-model==0.4.0 and there is a Deprecated warning:\n\n```\n/venv/local/lib/python2.7/site-packages/ordered_model/admin.py:19: RemovedInDjango18Warning: Options.module_name has been deprecated in favor of model_name\n  model=self.model._meta.module_name)\n```\n\nIt's not a big issue since it's just a warning but I am wondering whether there is something else I should be aware of when using it with django 1.7?\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/40", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/40/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/40/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/40", "id": 41808695, "node_id": "MDU6SXNzdWU0MTgwODY5NQ==", "number": 40, "title": "Pip install git+ don't pull templates", "user": {"login": "Lagovas", "id": 6237700, "node_id": "MDQ6VXNlcjYyMzc3MDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6237700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lagovas", "html_url": "https://github.com/Lagovas", "followers_url": "https://api.github.com/users/Lagovas/followers", "following_url": "https://api.github.com/users/Lagovas/following{/other_user}", "gists_url": "https://api.github.com/users/Lagovas/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lagovas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lagovas/subscriptions", "organizations_url": "https://api.github.com/users/Lagovas/orgs", "repos_url": "https://api.github.com/users/Lagovas/repos", "events_url": "https://api.github.com/users/Lagovas/events{/privacy}", "received_events_url": "https://api.github.com/users/Lagovas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-03T12:04:08Z", "updated_at": "2016-07-12T14:17:58Z", "closed_at": "2016-07-12T14:17:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "When execute pip install git+...., templates will not pulled and when look on sources in github, he show that \"this path skips through empty directories\".  Maybe i do something wrong? But django doesn't see this templates too and in package this templates not exists too.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/39", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/39/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/39/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/39", "id": 41281420, "node_id": "MDU6SXNzdWU0MTI4MTQyMA==", "number": 39, "title": "Configurable field name", "user": {"login": "joke2k", "id": 359076, "node_id": "MDQ6VXNlcjM1OTA3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/359076?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joke2k", "html_url": "https://github.com/joke2k", "followers_url": "https://api.github.com/users/joke2k/followers", "following_url": "https://api.github.com/users/joke2k/following{/other_user}", "gists_url": "https://api.github.com/users/joke2k/gists{/gist_id}", "starred_url": "https://api.github.com/users/joke2k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joke2k/subscriptions", "organizations_url": "https://api.github.com/users/joke2k/orgs", "repos_url": "https://api.github.com/users/joke2k/repos", "events_url": "https://api.github.com/users/joke2k/events{/privacy}", "received_events_url": "https://api.github.com/users/joke2k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-27T13:09:45Z", "updated_at": "2015-11-24T16:25:13Z", "closed_at": "2015-11-24T16:25:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Would be very useful to be able to configure the name of the field used by the package to order a model.\nGoogling around I saw that is **not** possible to add an attribute to Meta class of models.\n\nwhat do you think about?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/37", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/37/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/37/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/37", "id": 39218171, "node_id": "MDU6SXNzdWUzOTIxODE3MQ==", "number": 37, "title": "0.3.0 is broken / github fixed / why not release new version?", "user": {"login": "andresriancho", "id": 865200, "node_id": "MDQ6VXNlcjg2NTIwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/865200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andresriancho", "html_url": "https://github.com/andresriancho", "followers_url": "https://api.github.com/users/andresriancho/followers", "following_url": "https://api.github.com/users/andresriancho/following{/other_user}", "gists_url": "https://api.github.com/users/andresriancho/gists{/gist_id}", "starred_url": "https://api.github.com/users/andresriancho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andresriancho/subscriptions", "organizations_url": "https://api.github.com/users/andresriancho/orgs", "repos_url": "https://api.github.com/users/andresriancho/repos", "events_url": "https://api.github.com/users/andresriancho/events{/privacy}", "received_events_url": "https://api.github.com/users/andresriancho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-07-31T17:36:17Z", "updated_at": "2014-07-31T19:07:08Z", "closed_at": "2014-07-31T19:05:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "This small change [here](https://github.com/bfirsh/django-ordered-model/blob/master/ordered_model/models.py#L41) fixes a horrible bug which makes 0.3.0 almost useless (since all items get order 0, and because of `_move` implementation you can't reorder).\n\nI lost +45min on this issue and would love to spare the agony to others... so... why don't you release a new version to pypi?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/30", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/30/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/30/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/30", "id": 34137931, "node_id": "MDU6SXNzdWUzNDEzNzkzMQ==", "number": 30, "title": "Options.module_name has been deprecated in favor of model_name", "user": {"login": "pryankster", "id": 4298409, "node_id": "MDQ6VXNlcjQyOTg0MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4298409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pryankster", "html_url": "https://github.com/pryankster", "followers_url": "https://api.github.com/users/pryankster/followers", "following_url": "https://api.github.com/users/pryankster/following{/other_user}", "gists_url": "https://api.github.com/users/pryankster/gists{/gist_id}", "starred_url": "https://api.github.com/users/pryankster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pryankster/subscriptions", "organizations_url": "https://api.github.com/users/pryankster/orgs", "repos_url": "https://api.github.com/users/pryankster/repos", "events_url": "https://api.github.com/users/pryankster/events{/privacy}", "received_events_url": "https://api.github.com/users/pryankster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-23T01:59:46Z", "updated_at": "2015-04-06T13:40:13Z", "closed_at": "2015-04-06T13:40:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "(Discovered this issue while trying to switch to mysql-connector from SQLite3.)\n\nApparently, _meta.module_name is going away, to be replaced by _meta.model_name.  There are a couple of instances of _meta.module_name in the ordered-model code which should be replaced with model_name ... HOWEVER, that may break backward compatibility with older (1.5?) django.\n\ndjango bug referring to deprecation:\nhttps://code.djangoproject.com/ticket/19689\n\n(mysql-connector has a bug where all warnings are considered errors if DEBUG = True, so it turned up this warning as an error\nhttp://bugs.mysql.com/bug.php?id=71806)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/29", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/29/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/29/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/29", "id": 33272001, "node_id": "MDU6SXNzdWUzMzI3MjAwMQ==", "number": 29, "title": "save fails if model's primary key is not auto-assigned and called 'id'", "user": {"login": "pryankster", "id": 4298409, "node_id": "MDQ6VXNlcjQyOTg0MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4298409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pryankster", "html_url": "https://github.com/pryankster", "followers_url": "https://api.github.com/users/pryankster/followers", "following_url": "https://api.github.com/users/pryankster/following{/other_user}", "gists_url": "https://api.github.com/users/pryankster/gists{/gist_id}", "starred_url": "https://api.github.com/users/pryankster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pryankster/subscriptions", "organizations_url": "https://api.github.com/users/pryankster/orgs", "repos_url": "https://api.github.com/users/pryankster/repos", "events_url": "https://api.github.com/users/pryankster/events{/privacy}", "received_events_url": "https://api.github.com/users/pryankster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-05-11T22:13:54Z", "updated_at": "2017-08-30T20:34:34Z", "closed_at": "2017-08-30T20:34:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you have a model which has a manually-assigned primary key, it will not be 'None' going into save.  Also, if that key isn't called 'id', the OrderedModel.Save() method will fail.\n\nIt also fails setting order when there are not records in the db already, because:\n\nself.order = c and c + 1 or 0\n\nfails if c is 0 (like it will be with an empty table)\n\nHere's a fix (ordered_model\\models.py):\n\n```\n    def save(self, *args, **kwargs):\n        # print \"save: %r %r\" % (self.__class__, self.pk)\n        # used to be 'if not self.key', but that fails when primary key \n        # isn't called 'id'.  so tried 'if not self.pk', but that fails \n        # when pk isn't autoassigned.\n        if self.order is None:\n            c = self.__class__.objects.all().aggregate(Max('order')).get('order__max')\n            # this doesn't catch c == None.\n            # self.order = c and c + 1 or 0\n            self.order = c is not None and c + 1 or 0\n            # print \"c = %r\" % (c,)\n        # print \"order=%r\" % ( self.order, )\n        super(OrderedModel, self).save(*args, **kwargs)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/27", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/27/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/27/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/27", "id": 28977136, "node_id": "MDU6SXNzdWUyODk3NzEzNg==", "number": 27, "title": "Add Python 3 to CI builds and testing", "user": {"login": "leo-the-manic", "id": 3373776, "node_id": "MDQ6VXNlcjMzNzM3NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3373776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leo-the-manic", "html_url": "https://github.com/leo-the-manic", "followers_url": "https://api.github.com/users/leo-the-manic/followers", "following_url": "https://api.github.com/users/leo-the-manic/following{/other_user}", "gists_url": "https://api.github.com/users/leo-the-manic/gists{/gist_id}", "starred_url": "https://api.github.com/users/leo-the-manic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leo-the-manic/subscriptions", "organizations_url": "https://api.github.com/users/leo-the-manic/orgs", "repos_url": "https://api.github.com/users/leo-the-manic/repos", "events_url": "https://api.github.com/users/leo-the-manic/events{/privacy}", "received_events_url": "https://api.github.com/users/leo-the-manic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-03-07T16:14:38Z", "updated_at": "2015-11-24T16:57:37Z", "closed_at": "2015-11-24T16:57:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whether intentionally or unintentionally, this lightweight library works out of the box with Python 3 (haven't tested the admin, just the core ordering). However, to feel comfortable using this  project going forward, I have to know that Python 3 will have formal support. If there is interest in this I will take the time to make a pull request to add formal Python 3 support (whether that's changing the Travis config or fixing possible admin issues in Python 3 or whatever it may take). Please let me know what you think.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/25", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/25/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/25/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/25", "id": 28069410, "node_id": "MDU6SXNzdWUyODA2OTQxMA==", "number": 25, "title": "inline OrederedModelAdmin", "user": {"login": "fariza", "id": 1490153, "node_id": "MDQ6VXNlcjE0OTAxNTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1490153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fariza", "html_url": "https://github.com/fariza", "followers_url": "https://api.github.com/users/fariza/followers", "following_url": "https://api.github.com/users/fariza/following{/other_user}", "gists_url": "https://api.github.com/users/fariza/gists{/gist_id}", "starred_url": "https://api.github.com/users/fariza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fariza/subscriptions", "organizations_url": "https://api.github.com/users/fariza/orgs", "repos_url": "https://api.github.com/users/fariza/repos", "events_url": "https://api.github.com/users/fariza/events{/privacy}", "received_events_url": "https://api.github.com/users/fariza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-02-21T20:12:12Z", "updated_at": "2016-03-17T23:31:14Z", "closed_at": "2016-03-17T23:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\n\nFirst, thanks for the great model.\n\nThe fact that we can do SubsetOrdering is very useful, but it becomes a problem to administrate, because there is no an INLINE OrderedModelAdmin.\n\nI am not very strong in django internals, so I prefer not to offer my help, it will be more a problem than anything else. \n\nThanks again\nFederico\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/23", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/23/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/23/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/23", "id": 27876495, "node_id": "MDU6SXNzdWUyNzg3NjQ5NQ==", "number": 23, "title": "MPTT with OrderedModel", "user": {"login": "gam-phon", "id": 1763722, "node_id": "MDQ6VXNlcjE3NjM3MjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1763722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gam-phon", "html_url": "https://github.com/gam-phon", "followers_url": "https://api.github.com/users/gam-phon/followers", "following_url": "https://api.github.com/users/gam-phon/following{/other_user}", "gists_url": "https://api.github.com/users/gam-phon/gists{/gist_id}", "starred_url": "https://api.github.com/users/gam-phon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gam-phon/subscriptions", "organizations_url": "https://api.github.com/users/gam-phon/orgs", "repos_url": "https://api.github.com/users/gam-phon/repos", "events_url": "https://api.github.com/users/gam-phon/events{/privacy}", "received_events_url": "https://api.github.com/users/gam-phon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-19T14:01:24Z", "updated_at": "2017-08-30T18:09:00Z", "closed_at": "2017-08-30T18:09:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using django-mptt with django-ordered-model. I have some problems.\nFirst:\nThis problem happens when saving an instance\n**Manager isn't accessible via [Model] instances***\nAfter checking the problem I have found that is line is causing the problem\nin model > get_ordering_queryset function\n\n```\nqs = qs or self._default_manager.all()\n```\n\nI have seen MPTT code they change the default manager to a special manager called TreeManager.\n\nIf I change the code to this \n\n```\nqs = qs or self._tree_manager.all()\n```\n\nor this one\n\n```\nqs = qs or [Model]._tree_manager.all()\n```\n\nit will work. I am sorry if I could not help more than that.\n\nBeside this is my order of inheritance in the model\nclass Name(MPTTModel, OrderedModel)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/21", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/21/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/21/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/21", "id": 24858743, "node_id": "MDU6SXNzdWUyNDg1ODc0Mw==", "number": 21, "title": "Subset Ordering with many-to-many relationship", "user": {"login": "gam-phon", "id": 1763722, "node_id": "MDQ6VXNlcjE3NjM3MjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1763722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gam-phon", "html_url": "https://github.com/gam-phon", "followers_url": "https://api.github.com/users/gam-phon/followers", "following_url": "https://api.github.com/users/gam-phon/following{/other_user}", "gists_url": "https://api.github.com/users/gam-phon/gists{/gist_id}", "starred_url": "https://api.github.com/users/gam-phon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gam-phon/subscriptions", "organizations_url": "https://api.github.com/users/gam-phon/orgs", "repos_url": "https://api.github.com/users/gam-phon/repos", "events_url": "https://api.github.com/users/gam-phon/events{/privacy}", "received_events_url": "https://api.github.com/users/gam-phon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2013-12-29T11:27:32Z", "updated_at": "2017-09-04T08:34:12Z", "closed_at": "2017-09-04T08:34:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using Subset Ordering with many-to-many relationship This error appear:\n\nValueError: \"<Item: Item object>\" needs to have a value for field \"item\" before this many-to-many relationship can be used.\n\nit1 = Item.objects.create(name=\"Foo\")\n\nTraceback (most recent call last):\n  File \"<console>\", line 1, in <module>\n  File \"/home/yaser/.virtualenvs/aleqt/local/lib/python2.7/site-packages/django/db/models/manager.py\", line 157, in create\n    return self.get_queryset().create(**kwargs)\n  File \"/home/yaser/.virtualenvs/aleqt/local/lib/python2.7/site-packages/django/db/models/query.py\", line 319, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/home/yaser/.virtualenvs/aleqt/local/lib/python2.7/site-packages/ordered_model/models.py\", line 40, in save\n    c = self.get_ordering_queryset().aggregate(Max('order')).get('order__max')\n  File \"/home/yaser/.virtualenvs/aleqt/local/lib/python2.7/site-packages/ordered_model/models.py\", line 34, in get_ordering_queryset\n    value = self._get_order_with_respect_to()\n  File \"/home/yaser/.virtualenvs/aleqt/local/lib/python2.7/site-packages/ordered_model/models.py\", line 23, in _get_order_with_respect_to\n    return getattr(self, self.order_with_respect_to)\n  File \"/home/yaser/.virtualenvs/aleqt/local/lib/python2.7/site-packages/django/db/models/fields/related.py\", line 815, in __get__\n    through=self.field.rel.through,\n  File \"/home/yaser/.virtualenvs/aleqt/local/lib/python2.7/site-packages/django/db/models/fields/related.py\", line 512, in **init**\n    (instance, source_field_name))\nValueError: \"<Item: Item object>\" needs to have a value for field \"item\" before this many-to-many relationship can be used.\n# \n\n```\nclass Issue(models.Model):\n    number = models.IntegerField()\n    pub_time = models.DateTimeField()\n\n    class Meta:\n        ordering = [\"-number\"]\n\nclass Item(OrderedModel):\n    name = models.CharField(max_length=100)\n    issue = models.ManyToManyField(Issue)\n    order_with_respect_to = 'issue'\n\n    class Meta(OrderedModel.Meta):\n        pass\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/20", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/20/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/20/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/20", "id": 24858385, "node_id": "MDU6SXNzdWUyNDg1ODM4NQ==", "number": 20, "title": "Installation via pip", "user": {"login": "gam-phon", "id": 1763722, "node_id": "MDQ6VXNlcjE3NjM3MjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1763722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gam-phon", "html_url": "https://github.com/gam-phon", "followers_url": "https://api.github.com/users/gam-phon/followers", "following_url": "https://api.github.com/users/gam-phon/following{/other_user}", "gists_url": "https://api.github.com/users/gam-phon/gists{/gist_id}", "starred_url": "https://api.github.com/users/gam-phon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gam-phon/subscriptions", "organizations_url": "https://api.github.com/users/gam-phon/orgs", "repos_url": "https://api.github.com/users/gam-phon/repos", "events_url": "https://api.github.com/users/gam-phon/events{/privacy}", "received_events_url": "https://api.github.com/users/gam-phon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-12-29T10:40:04Z", "updated_at": "2014-07-31T19:06:54Z", "closed_at": "2014-07-31T19:06:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I searched about it on pip I have found it and the version 0.3 I installed it and when I checked it it seems that it is missing all function in model except move_up and move_down functions. So I suggest to enable it in pip with the full version to be easy to install and deploy.\n\nthank you\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/19", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/19/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/19/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/19", "id": 24364603, "node_id": "MDU6SXNzdWUyNDM2NDYwMw==", "number": 19, "title": "Deleting an object does not change subsequent orders", "user": {"login": "yuvadm", "id": 315080, "node_id": "MDQ6VXNlcjMxNTA4MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/315080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuvadm", "html_url": "https://github.com/yuvadm", "followers_url": "https://api.github.com/users/yuvadm/followers", "following_url": "https://api.github.com/users/yuvadm/following{/other_user}", "gists_url": "https://api.github.com/users/yuvadm/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuvadm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuvadm/subscriptions", "organizations_url": "https://api.github.com/users/yuvadm/orgs", "repos_url": "https://api.github.com/users/yuvadm/repos", "events_url": "https://api.github.com/users/yuvadm/events{/privacy}", "received_events_url": "https://api.github.com/users/yuvadm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-16T17:23:18Z", "updated_at": "2014-06-19T07:33:20Z", "closed_at": "2014-02-16T15:18:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given two objects with order (that have order `0` and `1`, respectively), if the first object is deleted, the second object will remain with order `1`. (This behavior obviously happens with larger lists of objects as well.)\n\nThis breaks the implicit promise (that might be incorrect) that order values are always in the range `[0,n)` for any `n` objects.\n\nIs `delete()` the only place that this promise breaks, or are there other requirements for satisfying this invariant?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/17", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/17/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/17/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/17", "id": 23629578, "node_id": "MDU6SXNzdWUyMzYyOTU3OA==", "number": 17, "title": "Order nulled on creation", "user": {"login": "codingjoe", "id": 1772890, "node_id": "MDQ6VXNlcjE3NzI4OTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1772890?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codingjoe", "html_url": "https://github.com/codingjoe", "followers_url": "https://api.github.com/users/codingjoe/followers", "following_url": "https://api.github.com/users/codingjoe/following{/other_user}", "gists_url": "https://api.github.com/users/codingjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/codingjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codingjoe/subscriptions", "organizations_url": "https://api.github.com/users/codingjoe/orgs", "repos_url": "https://api.github.com/users/codingjoe/repos", "events_url": "https://api.github.com/users/codingjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/codingjoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-12-03T09:13:14Z", "updated_at": "2017-08-30T22:05:09Z", "closed_at": "2017-08-30T22:05:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI realized that the order field doesn't increment on when you create new instances inside an empty table using Django admin.\n\nI haven't fully debuged it yet,  the code seems correct on first glimpse. If I increment a value manually and then add some more instances everything works just fine.\n\nAnyone else having that problem on other DBMs maybe? I'm using sqlite3.\n\nCheers,\nJoe\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/13", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/13/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/13/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/13", "id": 22560595, "node_id": "MDU6SXNzdWUyMjU2MDU5NQ==", "number": 13, "title": "suggestion: move tests out of app", "user": {"login": "airtonix", "id": 61225, "node_id": "MDQ6VXNlcjYxMjI1", "avatar_url": "https://avatars0.githubusercontent.com/u/61225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/airtonix", "html_url": "https://github.com/airtonix", "followers_url": "https://api.github.com/users/airtonix/followers", "following_url": "https://api.github.com/users/airtonix/following{/other_user}", "gists_url": "https://api.github.com/users/airtonix/gists{/gist_id}", "starred_url": "https://api.github.com/users/airtonix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/airtonix/subscriptions", "organizations_url": "https://api.github.com/users/airtonix/orgs", "repos_url": "https://api.github.com/users/airtonix/repos", "events_url": "https://api.github.com/users/airtonix/events{/privacy}", "received_events_url": "https://api.github.com/users/airtonix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-12T23:57:58Z", "updated_at": "2017-08-30T21:59:40Z", "closed_at": "2017-08-30T21:59:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I should probably make this issue ticket when I'm not overtired, but here goes:\n\nWith the django packages I create, I normally have the tests package along side the app package. \nThe main reason for this is : \n- project integrators don't run \"out of project\" tests\n- app developers will have the tests since they \"git clone\"\n- there exists a simple runtests.py which bootstraps django.conf.settings for the tests.\n\nresources: \n- running tests without a project: http://stackoverflow.com/a/12260597/454615\n\ngah this is me being overtired: I can't find it yet, but I did read a convincing article that discouraged putting the tests for a pluggable django app within the app.  \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/10", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/10/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/10/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/10", "id": 22548713, "node_id": "MDU6SXNzdWUyMjU0ODcxMw==", "number": 10, "title": "use templates for buttons", "user": {"login": "airtonix", "id": 61225, "node_id": "MDQ6VXNlcjYxMjI1", "avatar_url": "https://avatars0.githubusercontent.com/u/61225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/airtonix", "html_url": "https://github.com/airtonix", "followers_url": "https://api.github.com/users/airtonix/followers", "following_url": "https://api.github.com/users/airtonix/following{/other_user}", "gists_url": "https://api.github.com/users/airtonix/gists{/gist_id}", "starred_url": "https://api.github.com/users/airtonix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/airtonix/subscriptions", "organizations_url": "https://api.github.com/users/airtonix/orgs", "repos_url": "https://api.github.com/users/airtonix/repos", "events_url": "https://api.github.com/users/airtonix/events{/privacy}", "received_events_url": "https://api.github.com/users/airtonix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-12T20:42:41Z", "updated_at": "2013-11-12T22:00:43Z", "closed_at": "2013-11-12T22:00:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I feel that it would be better for project integrators if the string interpolation were instead implemented as a django template.\n\nincoming pull request...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/8", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/8/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/8/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/8", "id": 21411702, "node_id": "MDU6SXNzdWUyMTQxMTcwMg==", "number": 8, "title": "Bumping version", "user": {"login": "cypreess", "id": 1564334, "node_id": "MDQ6VXNlcjE1NjQzMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1564334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cypreess", "html_url": "https://github.com/cypreess", "followers_url": "https://api.github.com/users/cypreess/followers", "following_url": "https://api.github.com/users/cypreess/following{/other_user}", "gists_url": "https://api.github.com/users/cypreess/gists{/gist_id}", "starred_url": "https://api.github.com/users/cypreess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cypreess/subscriptions", "organizations_url": "https://api.github.com/users/cypreess/orgs", "repos_url": "https://api.github.com/users/cypreess/repos", "events_url": "https://api.github.com/users/cypreess/events{/privacy}", "received_events_url": "https://api.github.com/users/cypreess/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-10-22T19:42:11Z", "updated_at": "2013-10-25T11:54:03Z", "closed_at": "2013-10-25T11:54:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that some great work was done lately, could you consider bumping version && uploading to pypi? Maybe after successful merging with #4 and #7 ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/1", "repository_url": "https://api.github.com/repos/bfirsh/django-ordered-model", "labels_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/1/comments", "events_url": "https://api.github.com/repos/bfirsh/django-ordered-model/issues/1/events", "html_url": "https://github.com/bfirsh/django-ordered-model/issues/1", "id": 169780, "node_id": "MDU6SXNzdWUxNjk3ODA=", "number": 1, "title": "unique = True constraint", "user": {"login": "driesdesmet", "id": 60802, "node_id": "MDQ6VXNlcjYwODAy", "avatar_url": "https://avatars3.githubusercontent.com/u/60802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/driesdesmet", "html_url": "https://github.com/driesdesmet", "followers_url": "https://api.github.com/users/driesdesmet/followers", "following_url": "https://api.github.com/users/driesdesmet/following{/other_user}", "gists_url": "https://api.github.com/users/driesdesmet/gists{/gist_id}", "starred_url": "https://api.github.com/users/driesdesmet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/driesdesmet/subscriptions", "organizations_url": "https://api.github.com/users/driesdesmet/orgs", "repos_url": "https://api.github.com/users/driesdesmet/repos", "events_url": "https://api.github.com/users/driesdesmet/events{/privacy}", "received_events_url": "https://api.github.com/users/driesdesmet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2010-04-12T09:17:19Z", "updated_at": "2012-11-14T23:57:08Z", "closed_at": "2012-11-14T23:56:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Wouldn't it make sense for the order field to have a unique = True contstraint?\n", "performed_via_github_app": null, "score": 1.0}]}