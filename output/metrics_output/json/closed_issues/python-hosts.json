{"total_count": 16, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/24", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/24/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/24/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/24", "id": 504151184, "node_id": "MDU6SXNzdWU1MDQxNTExODQ=", "number": 24, "title": "can't add ipv6 entry", "user": {"login": "ford153focus", "id": 16035807, "node_id": "MDQ6VXNlcjE2MDM1ODA3", "avatar_url": "https://avatars2.githubusercontent.com/u/16035807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ford153focus", "html_url": "https://github.com/ford153focus", "followers_url": "https://api.github.com/users/ford153focus/followers", "following_url": "https://api.github.com/users/ford153focus/following{/other_user}", "gists_url": "https://api.github.com/users/ford153focus/gists{/gist_id}", "starred_url": "https://api.github.com/users/ford153focus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ford153focus/subscriptions", "organizations_url": "https://api.github.com/users/ford153focus/orgs", "repos_url": "https://api.github.com/users/ford153focus/repos", "events_url": "https://api.github.com/users/ford153focus/events{/privacy}", "received_events_url": "https://api.github.com/users/ford153focus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-08T16:33:12Z", "updated_at": "2019-10-09T11:31:09Z", "closed_at": "2019-10-09T11:31:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I have next code:\r\n\r\n```python\r\n#!/usr/bin/python3\r\nfrom python_hosts import Hosts, HostsEntry\r\n\r\nhosts = Hosts(path='/etc/hosts')\r\n\r\nip4_localhost_entries = list(filter(lambda host_entry: host_entry.address == '127.0.0.1' and 'mc.yandex.ru' in host_entry.names, hosts.entries))\r\nip6_localhost_entries = list(filter(lambda host_entry: host_entry.address == '::1' and 'mc.yandex.ru' in host_entry.names, hosts.entries))\r\n\r\nif len(ip4_localhost_entries) == 0:\r\n    new_entry = HostsEntry(entry_type='ipv4', address='127.0.0.1', names=['mc.yandex.ru'])\r\n    hosts.add([new_entry])\r\n\r\nif len(ip6_localhost_entries) == 0:\r\n    new_entry = HostsEntry(entry_type='ipv6', address='::1', names=['mc.yandex.ru'])\r\n    hosts.add([new_entry])\r\n\r\nhosts.write()\r\n```\r\n\r\nI'm expecting to see in `/etc/hosts` 2 records: `127.0.0.1 mc.yandex.ru` and `::1 mc.yandex.ru`, but only first is appeared.\r\n\r\nDid i something wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/23", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/23/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/23/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/23", "id": 496924460, "node_id": "MDU6SXNzdWU0OTY5MjQ0NjA=", "number": 23, "title": "cannot import name 'Hosts'", "user": {"login": "deadstar2011", "id": 48271511, "node_id": "MDQ6VXNlcjQ4MjcxNTEx", "avatar_url": "https://avatars2.githubusercontent.com/u/48271511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deadstar2011", "html_url": "https://github.com/deadstar2011", "followers_url": "https://api.github.com/users/deadstar2011/followers", "following_url": "https://api.github.com/users/deadstar2011/following{/other_user}", "gists_url": "https://api.github.com/users/deadstar2011/gists{/gist_id}", "starred_url": "https://api.github.com/users/deadstar2011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deadstar2011/subscriptions", "organizations_url": "https://api.github.com/users/deadstar2011/orgs", "repos_url": "https://api.github.com/users/deadstar2011/repos", "events_url": "https://api.github.com/users/deadstar2011/events{/privacy}", "received_events_url": "https://api.github.com/users/deadstar2011/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-23T06:56:33Z", "updated_at": "2019-09-23T21:16:54Z", "closed_at": "2019-09-23T21:16:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, at 0.4.6 version had error with command:\r\nfrom python_hosts import Hosts, HostsEntry\r\n\r\nError:\"cannot import name Hosts\"\r\n\r\nAt version 0.4.5 anythink work perfect", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/22", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/22/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/22/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/22", "id": 484816318, "node_id": "MDU6SXNzdWU0ODQ4MTYzMTg=", "number": 22, "title": "ipv4 host added to bottom of /etc/hosts and not in the ipv4 section", "user": {"login": "Knowledge-Wisdom-Understanding", "id": 36655901, "node_id": "MDQ6VXNlcjM2NjU1OTAx", "avatar_url": "https://avatars0.githubusercontent.com/u/36655901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Knowledge-Wisdom-Understanding", "html_url": "https://github.com/Knowledge-Wisdom-Understanding", "followers_url": "https://api.github.com/users/Knowledge-Wisdom-Understanding/followers", "following_url": "https://api.github.com/users/Knowledge-Wisdom-Understanding/following{/other_user}", "gists_url": "https://api.github.com/users/Knowledge-Wisdom-Understanding/gists{/gist_id}", "starred_url": "https://api.github.com/users/Knowledge-Wisdom-Understanding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Knowledge-Wisdom-Understanding/subscriptions", "organizations_url": "https://api.github.com/users/Knowledge-Wisdom-Understanding/orgs", "repos_url": "https://api.github.com/users/Knowledge-Wisdom-Understanding/repos", "events_url": "https://api.github.com/users/Knowledge-Wisdom-Understanding/events{/privacy}", "received_events_url": "https://api.github.com/users/Knowledge-Wisdom-Understanding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-24T13:19:13Z", "updated_at": "2019-09-18T09:04:19Z", "closed_at": "2019-09-18T09:04:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python3\r\nfrom python_hosts.hosts import Hosts, HostsEntry\r\n\r\nfz = \"friendzone.red\"\r\ntarget = \"10.10.10.123\"\r\n\r\nhosts = Hosts(path=\"hosts\")\r\nnew_entry = HostsEntry(entry_type=\"ipv4\", address=target, names=[fz])\r\nhosts.add([new_entry])\r\nhosts.write()\r\n```\r\noutput:\r\n```\r\n127.0.0.1       localhost\r\n127.0.1.1       kali.kali kali\r\n\r\n#10.10.10.145   player.htb\r\n\r\n# The following lines are desirable for IPv6 capable hosts\r\n::1     localhost ip6-localhost ip6-loopback\r\nff02::1 ip6-allnodes\r\nff02::2 ip6-allrouters\r\n10.10.10.123    friendzone.red\r\n```\r\nIt's not a huge deal but for organizational purposes it would be nice if 10.10.10.123    friendzone.red test.htb was added either above or below #10.10.10.145   player.htb in the \"ipv4\" section. Also. I mentioned this in a closed issue, but if I run hosts.write() with a different host for the same IPV4 address, it doesn't append the new host to the existing line or anywhere for that matter. Being a library solely dedicated to working with the /etc/hosts file , it would be optimal to have the feature to append new hosts to an existing line. The CLI pyhostman doesn't work either for this purpose. You can use --force but that will remove the other hosts which is annoying as I'm writing a python script and in multiple functions it appends hosts to the /etc/hosts file for the same ipv4 address. I've already written this program in bash and it works great but i have to do a lot of if grep -q $htbdomain /etc/hosts; then  sed -i $\"/$rhost/ s/$/\\t$htbdomain/\" /etc/hosts   etc....  Cool project by the way, but it could really use the appending feature", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/21", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/21/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/21/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/21", "id": 472253833, "node_id": "MDU6SXNzdWU0NzIyNTM4MzM=", "number": 21, "title": "Permission denied: '/etc/hosts'", "user": {"login": "robooo", "id": 7584540, "node_id": "MDQ6VXNlcjc1ODQ1NDA=", "avatar_url": "https://avatars3.githubusercontent.com/u/7584540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robooo", "html_url": "https://github.com/robooo", "followers_url": "https://api.github.com/users/robooo/followers", "following_url": "https://api.github.com/users/robooo/following{/other_user}", "gists_url": "https://api.github.com/users/robooo/gists{/gist_id}", "starred_url": "https://api.github.com/users/robooo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robooo/subscriptions", "organizations_url": "https://api.github.com/users/robooo/orgs", "repos_url": "https://api.github.com/users/robooo/repos", "events_url": "https://api.github.com/users/robooo/events{/privacy}", "received_events_url": "https://api.github.com/users/robooo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-24T12:25:30Z", "updated_at": "2019-07-29T10:31:40Z", "closed_at": "2019-07-29T10:31:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to deal with:\r\nPermissionError: [Errno 13] Permission denied: '/etc/hosts'\r\nwhen I can't change perms on hosts file? (default ubuntu setting)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/18", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/18/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/18/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/18", "id": 392936307, "node_id": "MDU6SXNzdWUzOTI5MzYzMDc=", "number": 18, "title": "provide option to append to hosts using open file mode 'a' ", "user": {"login": "shopee-jin", "id": 40892357, "node_id": "MDQ6VXNlcjQwODkyMzU3", "avatar_url": "https://avatars3.githubusercontent.com/u/40892357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shopee-jin", "html_url": "https://github.com/shopee-jin", "followers_url": "https://api.github.com/users/shopee-jin/followers", "following_url": "https://api.github.com/users/shopee-jin/following{/other_user}", "gists_url": "https://api.github.com/users/shopee-jin/gists{/gist_id}", "starred_url": "https://api.github.com/users/shopee-jin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shopee-jin/subscriptions", "organizations_url": "https://api.github.com/users/shopee-jin/orgs", "repos_url": "https://api.github.com/users/shopee-jin/repos", "events_url": "https://api.github.com/users/shopee-jin/events{/privacy}", "received_events_url": "https://api.github.com/users/shopee-jin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-20T08:21:37Z", "updated_at": "2019-08-24T13:02:03Z", "closed_at": "2019-04-06T15:18:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/17", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/17/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/17/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/17", "id": 357732576, "node_id": "MDU6SXNzdWUzNTc3MzI1NzY=", "number": 17, "title": "CLI?", "user": {"login": "blopker", "id": 757503, "node_id": "MDQ6VXNlcjc1NzUwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/757503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blopker", "html_url": "https://github.com/blopker", "followers_url": "https://api.github.com/users/blopker/followers", "following_url": "https://api.github.com/users/blopker/following{/other_user}", "gists_url": "https://api.github.com/users/blopker/gists{/gist_id}", "starred_url": "https://api.github.com/users/blopker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blopker/subscriptions", "organizations_url": "https://api.github.com/users/blopker/orgs", "repos_url": "https://api.github.com/users/blopker/repos", "events_url": "https://api.github.com/users/blopker/events{/privacy}", "received_events_url": "https://api.github.com/users/blopker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-06T16:25:50Z", "updated_at": "2018-09-06T17:57:20Z", "closed_at": "2018-09-06T17:54:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, this is a nice project. Nice work!\r\n\r\nQuestion: would you be interested in adding a CLI entrypoint? Basically just a way to use this package from the commandline for simple use cases. I was thinking an interface similar to https://github.com/lextoumbourou/goodhosts\r\n\r\nI could put a PR together.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/16", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/16/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/16/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/16", "id": 299072624, "node_id": "MDU6SXNzdWUyOTkwNzI2MjQ=", "number": 16, "title": "'HostsEntry' object is not iterable", "user": {"login": "blckjack", "id": 7814724, "node_id": "MDQ6VXNlcjc4MTQ3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7814724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blckjack", "html_url": "https://github.com/blckjack", "followers_url": "https://api.github.com/users/blckjack/followers", "following_url": "https://api.github.com/users/blckjack/following{/other_user}", "gists_url": "https://api.github.com/users/blckjack/gists{/gist_id}", "starred_url": "https://api.github.com/users/blckjack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blckjack/subscriptions", "organizations_url": "https://api.github.com/users/blckjack/orgs", "repos_url": "https://api.github.com/users/blckjack/repos", "events_url": "https://api.github.com/users/blckjack/events{/privacy}", "received_events_url": "https://api.github.com/users/blckjack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-21T18:09:20Z", "updated_at": "2018-02-28T22:35:11Z", "closed_at": "2018-02-28T22:35:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there, thanks for this lib!\r\nI have an issue, but not sure, about expected behavior of the code. So I have **2 lists**:\r\n```\r\naddresses = ['127.0.0.1', '127.0.1.1']\r\nnames = ['google.com', 'microsoft.com']\r\n```\r\nAnd want to run my tests in all possible variations:\r\n```\r\nfor test in tests:\r\n    for address in addresses:\r\n        hosts.add(HostsEntry(entry_type='ipv4', address=address, names=names))\r\n        hosts.write()\r\n        for name in names:\r\n            cmd = ['ruby', test, name]\r\n            run = Popen(cmd, stdout=PIPE)\r\n```\r\nunfortunatelly **exception** appears:\r\n```\r\n File \"/usr/local/lib/python2.7/dist-packages/python_hosts/hosts.py\", line 354, in add for entry in entries:\r\nTypeError: 'HostsEntry' object is not iterable\r\n```\r\nprobably, I missed something but, anyway, looking forward your assist.\r\nthx, ^_^", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/13", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/13/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/13/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/13", "id": 203171826, "node_id": "MDU6SXNzdWUyMDMxNzE4MjY=", "number": 13, "title": "remove_all_matching assumes it's being passed a single name but is frequently called with a list if names", "user": {"login": "graemerobertson", "id": 5907876, "node_id": "MDQ6VXNlcjU5MDc4NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5907876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graemerobertson", "html_url": "https://github.com/graemerobertson", "followers_url": "https://api.github.com/users/graemerobertson/followers", "following_url": "https://api.github.com/users/graemerobertson/following{/other_user}", "gists_url": "https://api.github.com/users/graemerobertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/graemerobertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graemerobertson/subscriptions", "organizations_url": "https://api.github.com/users/graemerobertson/orgs", "repos_url": "https://api.github.com/users/graemerobertson/repos", "events_url": "https://api.github.com/users/graemerobertson/events{/privacy}", "received_events_url": "https://api.github.com/users/graemerobertson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-25T17:38:18Z", "updated_at": "2017-01-26T14:15:40Z", "closed_at": "2017-01-26T14:15:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example, [here](https://github.com/jonhadfield/python-hosts/blob/7eddbb4e8bcac723a14092db87d69c94c56dd41a/python_hosts/hosts.py#L357) we call `remove_all_matching` with a list of names to match on. However, the `remove_all_matching` [implentation](https://github.com/jonhadfield/python-hosts/blob/7eddbb4e8bcac723a14092db87d69c94c56dd41a/python_hosts/hosts.py#L250) assumes it's being passed a single host name.\r\n\r\nThis means that, for example, when you try and add an entry for `127.0.0.1` with the force flag set, old entries for `127.0.0.1` don't get removed even though they should do.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/11", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/11/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/11/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/11", "id": 196080790, "node_id": "MDU6SXNzdWUxOTYwODA3OTA=", "number": 11, "title": "hosts.py:Hosts.remove_all_matching: fails with TypeError if hosts file contains empty lines", "user": {"login": "stardust85", "id": 3637559, "node_id": "MDQ6VXNlcjM2Mzc1NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3637559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stardust85", "html_url": "https://github.com/stardust85", "followers_url": "https://api.github.com/users/stardust85/followers", "following_url": "https://api.github.com/users/stardust85/following{/other_user}", "gists_url": "https://api.github.com/users/stardust85/gists{/gist_id}", "starred_url": "https://api.github.com/users/stardust85/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stardust85/subscriptions", "organizations_url": "https://api.github.com/users/stardust85/orgs", "repos_url": "https://api.github.com/users/stardust85/repos", "events_url": "https://api.github.com/users/stardust85/events{/privacy}", "received_events_url": "https://api.github.com/users/stardust85/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-16T15:13:03Z", "updated_at": "2016-12-23T14:49:33Z", "closed_at": "2016-12-23T14:49:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n  File \"/usr/lib/python2.6/site-packages/python_hosts/hosts.py\", line 261, in <lambda>\r\n    func = lambda entry: entry.comment or name not in entry.names\r\nTypeError: argument of type 'NoneType' is not iterable\r\n```\r\nThe code of class HostsEntry looks like it should support blank lines.\r\n\r\nAlso please add a regression test for that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/9", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/9/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/9/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/9", "id": 179732557, "node_id": "MDU6SXNzdWUxNzk3MzI1NTc=", "number": 9, "title": "Cannot Remove/Override the existing host records", "user": {"login": "CyberBaby", "id": 287282, "node_id": "MDQ6VXNlcjI4NzI4Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/287282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CyberBaby", "html_url": "https://github.com/CyberBaby", "followers_url": "https://api.github.com/users/CyberBaby/followers", "following_url": "https://api.github.com/users/CyberBaby/following{/other_user}", "gists_url": "https://api.github.com/users/CyberBaby/gists{/gist_id}", "starred_url": "https://api.github.com/users/CyberBaby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CyberBaby/subscriptions", "organizations_url": "https://api.github.com/users/CyberBaby/orgs", "repos_url": "https://api.github.com/users/CyberBaby/repos", "events_url": "https://api.github.com/users/CyberBaby/events{/privacy}", "received_events_url": "https://api.github.com/users/CyberBaby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-28T10:12:18Z", "updated_at": "2016-10-16T12:35:02Z", "closed_at": "2016-10-16T12:35:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "## I've got below error when i was trying to remove_all_matching by using name or set the force=True in adding a host record.\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/python_hosts/hosts.py\", line 371, in add\n    self.remove_all_matching(name=entry.names)\n  File \"/usr/local/lib/python2.7/dist-packages/python_hosts/hosts.py\", line 264, in remove_all_matching\n    self.entries = list(filter(func, self.entries))\n  File \"/usr/local/lib/python2.7/dist-packages/python_hosts/hosts.py\", line 261, in <lambda>\n    func = lambda entry: entry.comment or name not in entry.names\nTypeError: argument of type 'NoneType' is not iterable\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/8", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/8/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/8/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/8", "id": 179219221, "node_id": "MDU6SXNzdWUxNzkyMTkyMjE=", "number": 8, "title": "Issue when forcing update via link", "user": {"login": "sruslanas", "id": 182879, "node_id": "MDQ6VXNlcjE4Mjg3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/182879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sruslanas", "html_url": "https://github.com/sruslanas", "followers_url": "https://api.github.com/users/sruslanas/followers", "following_url": "https://api.github.com/users/sruslanas/following{/other_user}", "gists_url": "https://api.github.com/users/sruslanas/gists{/gist_id}", "starred_url": "https://api.github.com/users/sruslanas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sruslanas/subscriptions", "organizations_url": "https://api.github.com/users/sruslanas/orgs", "repos_url": "https://api.github.com/users/sruslanas/repos", "events_url": "https://api.github.com/users/sruslanas/events{/privacy}", "received_events_url": "https://api.github.com/users/sruslanas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-26T12:49:18Z", "updated_at": "2016-10-16T12:34:22Z", "closed_at": "2016-10-16T12:34:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI have started using this module and overall it is pretty usefull, but I miss one function or maybe I am just using it in incorrect way. I have a file with records, that is updated often.\ni.e. \n_1.2.3.4 one.example.com two.example.com_\n\nWhen record in file changes, I expect that records would be updated,\n_1.2.3.4 one.example.com_\n\nUsing the code below it never happens and two.example.com is never removed, even remote file is updated\n\n```\nhosts_path.import_url(url='https://dl.dropboxusercontent.com/s/nfivpnt39vua05v/hosts?dl=0',force=True)\nhosts_path.write()\n```\n\nHowever if we I try to use for same scenario below code, it is working fine. \n\n```\nnew_entry = HostsEntry(entry_type='ipv4', address='1.2.3.4', names=['one.example.com','two.example.com'])\nhosts_path.add([new_entry],force=True)\nhosts_path.write()\n```\n\n_**Could be there some bug or I am doing wrong, when passing file via link?**_\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/7", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/7/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/7/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/7", "id": 177900227, "node_id": "MDU6SXNzdWUxNzc5MDAyMjc=", "number": 7, "title": "remove_all_matching(None, name) broken in 0.3.4 if hosts file contains comments.", "user": {"login": "bbeausej", "id": 643376, "node_id": "MDQ6VXNlcjY0MzM3Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/643376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbeausej", "html_url": "https://github.com/bbeausej", "followers_url": "https://api.github.com/users/bbeausej/followers", "following_url": "https://api.github.com/users/bbeausej/following{/other_user}", "gists_url": "https://api.github.com/users/bbeausej/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbeausej/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbeausej/subscriptions", "organizations_url": "https://api.github.com/users/bbeausej/orgs", "repos_url": "https://api.github.com/users/bbeausej/repos", "events_url": "https://api.github.com/users/bbeausej/events{/privacy}", "received_events_url": "https://api.github.com/users/bbeausej/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-19T21:16:07Z", "updated_at": "2016-09-21T16:06:40Z", "closed_at": "2016-09-21T16:06:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "PR #6 that was merged in 03.4 breaks remove_all_matching for line identified as comments.\n\nSince entry.names is initialized as None by default, comment entries have a None value in the names property. The filtering used in remove_all_matching() in 0.3.4 breaks in those cases.\n\nTo replicate simply have a hosts file with comments and invoke remove_all_matching(None, name) to remove an entry by name.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/5", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/5/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/5/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/5", "id": 172807563, "node_id": "MDU6SXNzdWUxNzI4MDc1NjM=", "number": 5, "title": "Conditionals for remove_all_matching are always True", "user": {"login": "dmtucker", "id": 1817814, "node_id": "MDQ6VXNlcjE4MTc4MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1817814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmtucker", "html_url": "https://github.com/dmtucker", "followers_url": "https://api.github.com/users/dmtucker/followers", "following_url": "https://api.github.com/users/dmtucker/following{/other_user}", "gists_url": "https://api.github.com/users/dmtucker/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmtucker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmtucker/subscriptions", "organizations_url": "https://api.github.com/users/dmtucker/orgs", "repos_url": "https://api.github.com/users/dmtucker/repos", "events_url": "https://api.github.com/users/dmtucker/events{/privacy}", "received_events_url": "https://api.github.com/users/dmtucker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-23T21:10:14Z", "updated_at": "2016-08-27T23:24:25Z", "closed_at": "2016-08-27T10:16:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/jonhadfield/python-hosts/blob/devel/python_hosts/hosts.py#L253\n\n``` python\nself.entries = [x for x in self.entries if not (lambda y: y.address == address)]\n```\n\nSince this lambda is not invoked, this is essentially doing `bool(func)` which is always True.\n\n```\nPython 2.7.9 (default, Mar  1 2015, 12:57:24) \n[GCC 4.9.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> bool(bool)\nTrue\n```\n\n```\nPython 3.4.2 (default, Oct  8 2014, 10:45:20) \n[GCC 4.9.1] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> bool(bool)\nTrue\n```\n\nThis would probably be better:\n\n``` python\nself.entries = list(filter(lambda entry: entry.address != address, self.entries))\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/4", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/4/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/4/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/4", "id": 172581424, "node_id": "MDU6SXNzdWUxNzI1ODE0MjQ=", "number": 4, "title": "Work with strings instead of files.", "user": {"login": "dmtucker", "id": 1817814, "node_id": "MDQ6VXNlcjE4MTc4MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1817814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmtucker", "html_url": "https://github.com/dmtucker", "followers_url": "https://api.github.com/users/dmtucker/followers", "following_url": "https://api.github.com/users/dmtucker/following{/other_user}", "gists_url": "https://api.github.com/users/dmtucker/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmtucker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmtucker/subscriptions", "organizations_url": "https://api.github.com/users/dmtucker/orgs", "repos_url": "https://api.github.com/users/dmtucker/repos", "events_url": "https://api.github.com/users/dmtucker/events{/privacy}", "received_events_url": "https://api.github.com/users/dmtucker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-22T23:50:49Z", "updated_at": "2016-08-27T15:26:15Z", "closed_at": "2016-08-27T15:26:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This library looks really handy :+1: \n\nHaving to interact with files is a bit painful for my current use case, though, because I need to change the /etc/hosts on a remote host.\nI believe that would mean:\n1. `cat /etc/hosts` on the remote host.\n2. Write stdout to a local tempfile.\n3. Give the path of the tempfile to `Hosts`.\n4. Do my changes.\n5. `Hosts.write`\n6. Read the tempfile.\n7. Tell the host to overwrite its /etc/hosts with `str_from_reading_tempfile`.\n8. Delete the tempfile.\n\nIs this the correct / most optimal flow?\n\n---\n\nI think things would be simpler if this supported strings directly:\n1. `cat /etc/hosts` on the remote host.\n2. Feed stdout to `Hosts`.\n3. Do my changes.\n4. `new_etc_hosts = Hosts.dumps()` (like the `json` module)\n5. Tell the host to overwrite its /etc/hosts with `new_etc_hosts`.\n\nJust a thought...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/3", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/3/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/3/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/3", "id": 170898741, "node_id": "MDU6SXNzdWUxNzA4OTg3NDE=", "number": 3, "title": "Verify against an object", "user": {"login": "mattouille", "id": 8207468, "node_id": "MDQ6VXNlcjgyMDc0Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8207468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattouille", "html_url": "https://github.com/mattouille", "followers_url": "https://api.github.com/users/mattouille/followers", "following_url": "https://api.github.com/users/mattouille/following{/other_user}", "gists_url": "https://api.github.com/users/mattouille/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattouille/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattouille/subscriptions", "organizations_url": "https://api.github.com/users/mattouille/orgs", "repos_url": "https://api.github.com/users/mattouille/repos", "events_url": "https://api.github.com/users/mattouille/events{/privacy}", "received_events_url": "https://api.github.com/users/mattouille/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-12T15:35:16Z", "updated_at": "2016-08-16T15:09:06Z", "closed_at": "2016-08-16T15:09:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is more or less a feature request. I'd like to be able to verify the existence of some hosts entries. I may go ahead and do a PR to implement this. I'm already doing this through putting each line into a hash and splitting it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/1", "repository_url": "https://api.github.com/repos/jonhadfield/python-hosts", "labels_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/1/comments", "events_url": "https://api.github.com/repos/jonhadfield/python-hosts/issues/1/events", "html_url": "https://github.com/jonhadfield/python-hosts/issues/1", "id": 131134819, "node_id": "MDU6SXNzdWUxMzExMzQ4MTk=", "number": 1, "title": "Nonsensical results with shared names", "user": {"login": "twm", "id": 43662, "node_id": "MDQ6VXNlcjQzNjYy", "avatar_url": "https://avatars2.githubusercontent.com/u/43662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/twm", "html_url": "https://github.com/twm", "followers_url": "https://api.github.com/users/twm/followers", "following_url": "https://api.github.com/users/twm/following{/other_user}", "gists_url": "https://api.github.com/users/twm/gists{/gist_id}", "starred_url": "https://api.github.com/users/twm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/twm/subscriptions", "organizations_url": "https://api.github.com/users/twm/orgs", "repos_url": "https://api.github.com/users/twm/repos", "events_url": "https://api.github.com/users/twm/events{/privacy}", "received_events_url": "https://api.github.com/users/twm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-03T19:55:34Z", "updated_at": "2016-02-04T19:15:25Z", "closed_at": "2016-02-04T19:15:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I see strange results when entries share secondary names.  In this example, I create a file where `foo-1` and `foo-2` both alias `foo`, then clear `foo` by name, and re-add `foo-1` with a different address.  The result is a file that only contains `foo-2`.\n\n```\n$ virtualenv hosts\nNew python executable in hosts/bin/python\nInstalling setuptools, pip, wheel...cdone.\n\n$ hosts/bin/pip install python-hosts\n...\nSuccessfully installed python-hosts-0.3.2\n\n$ hosts/bin/python\nPython 2.7.6 (default, Jun 22 2015, 17:58:13) \n[GCC 4.8.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from python_hosts import Hosts, HostsEntry\n>>> hosts = Hosts(path='foo_hosts')\n>>> hosts.add([HostsEntry(entry_type='ipv4', address='1.2.3.4', names=['foo-1', 'foo']),\n...            HostsEntry(entry_type='ipv4', address='2.3.4.5', names=['foo-2', 'foo'])])\n{'ipv6_count': 0, 'ipv4_count': 2, 'invalid_count': 0, 'duplicate_count': 0, 'replaced_count': 0}\n>>> hosts.write()\n{'ipv4_entries_written': 2, 'ipv6_entries_written': 0, 'total_written': 2, 'comments_written': 0, 'blanks_written': 0}\n>>> with open('foo_hosts') as f:\n...     print f.read()\n... \n1.2.3.4 foo-1 foo\n2.3.4.5 foo-2 foo\n\n>>> hosts = Hosts(path='foo_hosts')\n>>> hosts.remove_all_matching(name='foo')\n>>> hosts.add([HostsEntry(entry_type='ipv4', address='1.2.3.6', names=['foo-1', 'foo'])])\n{'ipv6_count': 0, 'ipv4_count': 0, 'invalid_count': 0, 'duplicate_count': 1, 'replaced_count': 0}\n>>> hosts.write()\n{'ipv4_entries_written': 1, 'ipv6_entries_written': 0, 'total_written': 1, 'comments_written': 0, 'blanks_written': 0}\n>>> with open('foo_hosts') as f:\n...     print f.read()\n... \n2.3.4.5 foo-2 foo\n\n>>> \n```\n\nI would expect this as the result:\n\n```\n1.2.3.6 foo-1 foo\n```\n", "performed_via_github_app": null, "score": 1.0}]}