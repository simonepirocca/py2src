{"total_count": 19, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/weka-io/easypy/issues/220", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/220/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/220/events", "html_url": "https://github.com/weka-io/easypy/issues/220", "id": 558250633, "node_id": "MDU6SXNzdWU1NTgyNTA2MzM=", "number": 220, "title": "Syntax warning due to comparison of literals using is in Python 3.8", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-31T17:00:25Z", "updated_at": "2020-02-01T13:43:26Z", "closed_at": "2020-02-01T13:43:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n```\r\nfind . -iname '*.py'  | xargs -P 4 -I{} python3.8 -Wall -m py_compile {}\r\n\r\n./tests/test_concurrency.py:193: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  assert ret is 0\r\n./tests/test_caching.py:174: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  assert ps.get(TEST_KEY, default=\"1\") is \"1\", \"Wrong default value returned\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/210", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/210/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/210/events", "html_url": "https://github.com/weka-io/easypy/issues/210", "id": 541858330, "node_id": "MDU6SXNzdWU1NDE4NTgzMzA=", "number": 210, "title": "Improve infinite recursion exception when aliasing", "user": {"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-23T18:23:15Z", "updated_at": "2020-01-20T15:39:35Z", "closed_at": "2020-01-20T15:39:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Aliasing should catch the `RecursionError` and emit a better error that tells you about the object, the aliased object, and the attribute.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/195", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/195/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/195/events", "html_url": "https://github.com/weka-io/easypy/issues/195", "id": 477460680, "node_id": "MDU6SXNzdWU0Nzc0NjA2ODA=", "number": 195, "title": "Modify 'times' argument in 'retry' to do what it says in the documentation", "user": {"login": "YuvalEvron", "id": 21259980, "node_id": "MDQ6VXNlcjIxMjU5OTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/21259980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuvalEvron", "html_url": "https://github.com/YuvalEvron", "followers_url": "https://api.github.com/users/YuvalEvron/followers", "following_url": "https://api.github.com/users/YuvalEvron/following{/other_user}", "gists_url": "https://api.github.com/users/YuvalEvron/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuvalEvron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuvalEvron/subscriptions", "organizations_url": "https://api.github.com/users/YuvalEvron/orgs", "repos_url": "https://api.github.com/users/YuvalEvron/repos", "events_url": "https://api.github.com/users/YuvalEvron/events{/privacy}", "received_events_url": "https://api.github.com/users/YuvalEvron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-06T15:51:11Z", "updated_at": "2019-08-07T10:42:38Z", "closed_at": "2019-08-07T10:42:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`:param times: How many times to retry the function.`\r\n\r\nWhile in reality:\r\n\r\n```\r\nif isinstance(times, Timer):\r\n        stopper = times  # a timer is a valid stopper\r\n    elif isinstance(times, Duration):\r\n        stopper = Timer(expiration=times)\r\n    elif isinstance(times, int):\r\n        stopper = ExpiringCounter(times)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/174", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/174/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/174/events", "html_url": "https://github.com/weka-io/easypy/issues/174", "id": 457528535, "node_id": "MDU6SXNzdWU0NTc1Mjg1MzU=", "number": 174, "title": "Based unnamed thread names on named threads", "user": {"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": {"login": "koreno", "id": 180551, "node_id": "MDQ6VXNlcjE4MDU1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/180551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koreno", "html_url": "https://github.com/koreno", "followers_url": "https://api.github.com/users/koreno/followers", "following_url": "https://api.github.com/users/koreno/following{/other_user}", "gists_url": "https://api.github.com/users/koreno/gists{/gist_id}", "starred_url": "https://api.github.com/users/koreno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koreno/subscriptions", "organizations_url": "https://api.github.com/users/koreno/orgs", "repos_url": "https://api.github.com/users/koreno/repos", "events_url": "https://api.github.com/users/koreno/events{/privacy}", "received_events_url": "https://api.github.com/users/koreno/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "koreno", "id": 180551, "node_id": "MDQ6VXNlcjE4MDU1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/180551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koreno", "html_url": "https://github.com/koreno", "followers_url": "https://api.github.com/users/koreno/followers", "following_url": "https://api.github.com/users/koreno/following{/other_user}", "gists_url": "https://api.github.com/users/koreno/gists{/gist_id}", "starred_url": "https://api.github.com/users/koreno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koreno/subscriptions", "organizations_url": "https://api.github.com/users/koreno/orgs", "repos_url": "https://api.github.com/users/koreno/repos", "events_url": "https://api.github.com/users/koreno/events{/privacy}", "received_events_url": "https://api.github.com/users/koreno/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-06-18T14:50:09Z", "updated_at": "2019-08-11T09:42:43Z", "closed_at": "2019-08-11T09:42:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There are three \"styles\" of thread names:\r\n* Unnamed threads - get the name Python assigns to them (\"Thread-1234\")\r\n* Arbitrarily named threads - created with `concurrent()`, get names like \"anon-7F4A1EE18A20\".\r\n    * For some reason `concurrent` creates them but `concurrent_map` - which `MultiObject` uses - does not. @koreno - was there a particular reason for that? Why did you rename these threads in the first place?\r\n* Named threads - which we purposefully give names to (\"wd-my-watchdog-thread\")\r\n\r\nNamed threads are usually used for macro scale processes (like watchdogs or mayhem actions). The problem is that when they need to \"split up\" they get arbitrary names making it harder to associate log lines to them.\r\n\r\nI think you should use the following rule:\r\n\r\n1. If a thread is explicitly named - use that name.\r\n2. Otherwise, go up the thread tree to find a named thread, and append some random/incrementing subidentifier to it (\"wd-my-watchdog:AABBCC\")\r\n    * Instead of scaling the tree, we can just put the named thread's name in the thread context.\r\n3. If there is no named thread ancestor - use a generic name.\r\n\r\nThis will improve the ability to read the logs.\r\n\r\nc.c. @DoronCohen @YuvalEvron ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/168", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/168/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/168/events", "html_url": "https://github.com/weka-io/easypy/issues/168", "id": 443086917, "node_id": "MDU6SXNzdWU0NDMwODY5MTc=", "number": 168, "title": "Add `unacceptable` argument to `retrying` decorator in resilience", "user": {"login": "YuvalEvron", "id": 21259980, "node_id": "MDQ6VXNlcjIxMjU5OTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/21259980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuvalEvron", "html_url": "https://github.com/YuvalEvron", "followers_url": "https://api.github.com/users/YuvalEvron/followers", "following_url": "https://api.github.com/users/YuvalEvron/following{/other_user}", "gists_url": "https://api.github.com/users/YuvalEvron/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuvalEvron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuvalEvron/subscriptions", "organizations_url": "https://api.github.com/users/YuvalEvron/orgs", "repos_url": "https://api.github.com/users/YuvalEvron/repos", "events_url": "https://api.github.com/users/YuvalEvron/events{/privacy}", "received_events_url": "https://api.github.com/users/YuvalEvron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-12T10:04:46Z", "updated_at": "2019-08-04T09:35:23Z", "closed_at": "2019-08-04T09:35:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`unacceptable` argument can be overridden in `retry` function but not in `retrying`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/163", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/163/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/163/events", "html_url": "https://github.com/weka-io/easypy/issues/163", "id": 431523362, "node_id": "MDU6SXNzdWU0MzE1MjMzNjI=", "number": 163, "title": "easypy.collections - bug in predicate ordering with FilteredCollection", "user": {"login": "koreno", "id": 180551, "node_id": "MDQ6VXNlcjE4MDU1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/180551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koreno", "html_url": "https://github.com/koreno", "followers_url": "https://api.github.com/users/koreno/followers", "following_url": "https://api.github.com/users/koreno/following{/other_user}", "gists_url": "https://api.github.com/users/koreno/gists{/gist_id}", "starred_url": "https://api.github.com/users/koreno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koreno/subscriptions", "organizations_url": "https://api.github.com/users/koreno/orgs", "repos_url": "https://api.github.com/users/koreno/repos", "events_url": "https://api.github.com/users/koreno/events{/privacy}", "received_events_url": "https://api.github.com/users/koreno/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-10T14:04:51Z", "updated_at": "2019-05-12T09:06:05Z", "closed_at": "2019-05-12T09:06:05Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\r\n>> ListCollection([Bunch(a='b', b=5), Bunch(a='c', c='c')]).filtered(a='b').select(lambda o: o.b > 4)\r\nAttributeError: <class 'easypy.bunch.Bunch'> has no attribute 'b'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/154", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/154/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/154/events", "html_url": "https://github.com/weka-io/easypy/issues/154", "id": 416525189, "node_id": "MDU6SXNzdWU0MTY1MjUxODk=", "number": 154, "title": "Check where (and if) we use functions from randutils.py module and rearrange it.", "user": {"login": "YuvalEvron", "id": 21259980, "node_id": "MDQ6VXNlcjIxMjU5OTgw", "avatar_url": "https://avatars0.githubusercontent.com/u/21259980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuvalEvron", "html_url": "https://github.com/YuvalEvron", "followers_url": "https://api.github.com/users/YuvalEvron/followers", "following_url": "https://api.github.com/users/YuvalEvron/following{/other_user}", "gists_url": "https://api.github.com/users/YuvalEvron/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuvalEvron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuvalEvron/subscriptions", "organizations_url": "https://api.github.com/users/YuvalEvron/orgs", "repos_url": "https://api.github.com/users/YuvalEvron/repos", "events_url": "https://api.github.com/users/YuvalEvron/events{/privacy}", "received_events_url": "https://api.github.com/users/YuvalEvron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-03T15:01:42Z", "updated_at": "2019-08-08T08:31:22Z", "closed_at": "2019-08-08T08:31:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/150", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/150/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/150/events", "html_url": "https://github.com/weka-io/easypy/issues/150", "id": 407195242, "node_id": "MDU6SXNzdWU0MDcxOTUyNDI=", "number": 150, "title": "SynchronizationCoordinator on contextmanager deadlocks when some threads fail in __enter__", "user": {"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-02-06T11:40:05Z", "updated_at": "2019-02-07T09:07:22Z", "closed_at": "2019-02-07T09:07:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Can be replicated with the following test:\r\n\r\n```python\r\ndef test_synchronization_coordinator_failing_context_manager():\r\n    class MyException(Exception):\r\n        pass\r\n\r\n    @contextmanager\r\n    def foo(should_fail, _sync=SYNC):\r\n        if should_fail:\r\n            raise MyException()\r\n        else:\r\n            yield\r\n\r\n    inside_executed = False\r\n    with pytest.raises(MultiException[MyException]):\r\n        with MultiObject([False, True]).call(foo):\r\n            inside_executed = True\r\n\r\n    assert not inside_executed, 'CM body executed even though __enter__ failed in one thread'\r\n```\r\n\r\n* The thread that got `should_fail=False` ignored the `SynchronizationCoordinator`, returned from `__enter__()`, and relied on the `MultiObject` to wait for the other threads to finish their `__enter__()`. Its `__exit__()` is not called because...\r\n* The main thread received the result of the thread that got `should_fail=False`, but it cannot execute the body of the `with` statement because it is still waiting for the result of the thread that got `should_fail=True`, and...\r\n* The thread that got `should_fail=True` failed, called `abandon()` on the `SynchronizationCoordinator`, and waited for the thread that got `should_fail=False` to reach a wait point. And we go back to the first bullet...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/138", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/138/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/138/events", "html_url": "https://github.com/weka-io/easypy/issues/138", "id": 389028034, "node_id": "MDU6SXNzdWUzODkwMjgwMzQ=", "number": 138, "title": "Reorganize multithreading init code", "user": {"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-09T14:24:09Z", "updated_at": "2019-01-01T20:42:25Z", "closed_at": "2019-01-01T20:42:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`easypy.__init__` defines some methods and functions that are needed for some multithreading modules like `easypy.threadtree`, `easypy.concurrency` or `easypy.gevent`. We want to move these to their own module (their rightful place is `easypy.threadtree`, but putting them there would create import cycles) and leave `__init__.py` empty (later we will add a documentation of the whole package to there)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/120", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/120/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/120/events", "html_url": "https://github.com/weka-io/easypy/issues/120", "id": 374757502, "node_id": "MDU6SXNzdWUzNzQ3NTc1MDI=", "number": 120, "title": "Document caching module", "user": {"login": "doron-cohen", "id": 4966182, "node_id": "MDQ6VXNlcjQ5NjYxODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4966182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doron-cohen", "html_url": "https://github.com/doron-cohen", "followers_url": "https://api.github.com/users/doron-cohen/followers", "following_url": "https://api.github.com/users/doron-cohen/following{/other_user}", "gists_url": "https://api.github.com/users/doron-cohen/gists{/gist_id}", "starred_url": "https://api.github.com/users/doron-cohen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doron-cohen/subscriptions", "organizations_url": "https://api.github.com/users/doron-cohen/orgs", "repos_url": "https://api.github.com/users/doron-cohen/repos", "events_url": "https://api.github.com/users/doron-cohen/events{/privacy}", "received_events_url": "https://api.github.com/users/doron-cohen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": {"login": "doron-cohen", "id": 4966182, "node_id": "MDQ6VXNlcjQ5NjYxODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4966182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doron-cohen", "html_url": "https://github.com/doron-cohen", "followers_url": "https://api.github.com/users/doron-cohen/followers", "following_url": "https://api.github.com/users/doron-cohen/following{/other_user}", "gists_url": "https://api.github.com/users/doron-cohen/gists{/gist_id}", "starred_url": "https://api.github.com/users/doron-cohen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doron-cohen/subscriptions", "organizations_url": "https://api.github.com/users/doron-cohen/orgs", "repos_url": "https://api.github.com/users/doron-cohen/repos", "events_url": "https://api.github.com/users/doron-cohen/events{/privacy}", "received_events_url": "https://api.github.com/users/doron-cohen/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "doron-cohen", "id": 4966182, "node_id": "MDQ6VXNlcjQ5NjYxODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4966182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doron-cohen", "html_url": "https://github.com/doron-cohen", "followers_url": "https://api.github.com/users/doron-cohen/followers", "following_url": "https://api.github.com/users/doron-cohen/following{/other_user}", "gists_url": "https://api.github.com/users/doron-cohen/gists{/gist_id}", "starred_url": "https://api.github.com/users/doron-cohen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doron-cohen/subscriptions", "organizations_url": "https://api.github.com/users/doron-cohen/orgs", "repos_url": "https://api.github.com/users/doron-cohen/repos", "events_url": "https://api.github.com/users/doron-cohen/events{/privacy}", "received_events_url": "https://api.github.com/users/doron-cohen/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2018-10-28T14:05:34Z", "updated_at": "2018-11-15T14:44:31Z", "closed_at": "2018-11-15T14:44:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/114", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/114/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/114/events", "html_url": "https://github.com/weka-io/easypy/issues/114", "id": 366699002, "node_id": "MDU6SXNzdWUzNjY2OTkwMDI=", "number": 114, "title": "documentation for resilience", "user": {"login": "koreno", "id": 180551, "node_id": "MDQ6VXNlcjE4MDU1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/180551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koreno", "html_url": "https://github.com/koreno", "followers_url": "https://api.github.com/users/koreno/followers", "following_url": "https://api.github.com/users/koreno/following{/other_user}", "gists_url": "https://api.github.com/users/koreno/gists{/gist_id}", "starred_url": "https://api.github.com/users/koreno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koreno/subscriptions", "organizations_url": "https://api.github.com/users/koreno/orgs", "repos_url": "https://api.github.com/users/koreno/repos", "events_url": "https://api.github.com/users/koreno/events{/privacy}", "received_events_url": "https://api.github.com/users/koreno/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": {"login": "koreno", "id": 180551, "node_id": "MDQ6VXNlcjE4MDU1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/180551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koreno", "html_url": "https://github.com/koreno", "followers_url": "https://api.github.com/users/koreno/followers", "following_url": "https://api.github.com/users/koreno/following{/other_user}", "gists_url": "https://api.github.com/users/koreno/gists{/gist_id}", "starred_url": "https://api.github.com/users/koreno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koreno/subscriptions", "organizations_url": "https://api.github.com/users/koreno/orgs", "repos_url": "https://api.github.com/users/koreno/repos", "events_url": "https://api.github.com/users/koreno/events{/privacy}", "received_events_url": "https://api.github.com/users/koreno/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "koreno", "id": 180551, "node_id": "MDQ6VXNlcjE4MDU1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/180551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koreno", "html_url": "https://github.com/koreno", "followers_url": "https://api.github.com/users/koreno/followers", "following_url": "https://api.github.com/users/koreno/following{/other_user}", "gists_url": "https://api.github.com/users/koreno/gists{/gist_id}", "starred_url": "https://api.github.com/users/koreno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koreno/subscriptions", "organizations_url": "https://api.github.com/users/koreno/orgs", "repos_url": "https://api.github.com/users/koreno/repos", "events_url": "https://api.github.com/users/koreno/events{/privacy}", "received_events_url": "https://api.github.com/users/koreno/received_events", "type": "User", "site_admin": false}, {"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}, {"login": "hjbyt", "id": 5450806, "node_id": "MDQ6VXNlcjU0NTA4MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/5450806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjbyt", "html_url": "https://github.com/hjbyt", "followers_url": "https://api.github.com/users/hjbyt/followers", "following_url": "https://api.github.com/users/hjbyt/following{/other_user}", "gists_url": "https://api.github.com/users/hjbyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjbyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjbyt/subscriptions", "organizations_url": "https://api.github.com/users/hjbyt/orgs", "repos_url": "https://api.github.com/users/hjbyt/repos", "events_url": "https://api.github.com/users/hjbyt/events{/privacy}", "received_events_url": "https://api.github.com/users/hjbyt/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-10-04T09:27:33Z", "updated_at": "2018-12-09T14:15:26Z", "closed_at": "2018-12-09T14:14:55Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/112", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/112/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/112/events", "html_url": "https://github.com/weka-io/easypy/issues/112", "id": 366697947, "node_id": "MDU6SXNzdWUzNjY2OTc5NDc=", "number": 112, "title": "need documentation for 'tokens', and remove magic import", "user": {"login": "koreno", "id": 180551, "node_id": "MDQ6VXNlcjE4MDU1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/180551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koreno", "html_url": "https://github.com/koreno", "followers_url": "https://api.github.com/users/koreno/followers", "following_url": "https://api.github.com/users/koreno/following{/other_user}", "gists_url": "https://api.github.com/users/koreno/gists{/gist_id}", "starred_url": "https://api.github.com/users/koreno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koreno/subscriptions", "organizations_url": "https://api.github.com/users/koreno/orgs", "repos_url": "https://api.github.com/users/koreno/repos", "events_url": "https://api.github.com/users/koreno/events{/privacy}", "received_events_url": "https://api.github.com/users/koreno/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": {"login": "koreno", "id": 180551, "node_id": "MDQ6VXNlcjE4MDU1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/180551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koreno", "html_url": "https://github.com/koreno", "followers_url": "https://api.github.com/users/koreno/followers", "following_url": "https://api.github.com/users/koreno/following{/other_user}", "gists_url": "https://api.github.com/users/koreno/gists{/gist_id}", "starred_url": "https://api.github.com/users/koreno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koreno/subscriptions", "organizations_url": "https://api.github.com/users/koreno/orgs", "repos_url": "https://api.github.com/users/koreno/repos", "events_url": "https://api.github.com/users/koreno/events{/privacy}", "received_events_url": "https://api.github.com/users/koreno/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "koreno", "id": 180551, "node_id": "MDQ6VXNlcjE4MDU1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/180551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koreno", "html_url": "https://github.com/koreno", "followers_url": "https://api.github.com/users/koreno/followers", "following_url": "https://api.github.com/users/koreno/following{/other_user}", "gists_url": "https://api.github.com/users/koreno/gists{/gist_id}", "starred_url": "https://api.github.com/users/koreno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koreno/subscriptions", "organizations_url": "https://api.github.com/users/koreno/orgs", "repos_url": "https://api.github.com/users/koreno/repos", "events_url": "https://api.github.com/users/koreno/events{/privacy}", "received_events_url": "https://api.github.com/users/koreno/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-10-04T09:24:53Z", "updated_at": "2018-10-28T14:51:02Z", "closed_at": "2018-10-28T14:51:02Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/84", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/84/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/84/events", "html_url": "https://github.com/weka-io/easypy/issues/84", "id": 331975365, "node_id": "MDU6SXNzdWUzMzE5NzUzNjU=", "number": 84, "title": "Lockstep doesn't work well with class methods", "user": {"login": "doron-cohen", "id": 4966182, "node_id": "MDQ6VXNlcjQ5NjYxODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4966182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doron-cohen", "html_url": "https://github.com/doron-cohen", "followers_url": "https://api.github.com/users/doron-cohen/followers", "following_url": "https://api.github.com/users/doron-cohen/following{/other_user}", "gists_url": "https://api.github.com/users/doron-cohen/gists{/gist_id}", "starred_url": "https://api.github.com/users/doron-cohen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doron-cohen/subscriptions", "organizations_url": "https://api.github.com/users/doron-cohen/orgs", "repos_url": "https://api.github.com/users/doron-cohen/repos", "events_url": "https://api.github.com/users/doron-cohen/events{/privacy}", "received_events_url": "https://api.github.com/users/doron-cohen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-13T12:36:24Z", "updated_at": "2018-06-14T21:32:10Z", "closed_at": "2018-06-14T21:32:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Let's take `Cluster.provision` for an example. When decorating it with `lockstep` the `cls` param is never passed so this will not work:\r\n\r\n    Cluster.provision.lockstep(**kwargs)\r\n\r\nbecause `Cluster` is passed to `provision` but not to `lockstep`. They way it works now is:\r\n\r\n    Cluster.provision.lockstep(Cluster, **kwargs)\r\n\r\nwhich I believe is ugly", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/80", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/80/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/80/events", "html_url": "https://github.com/weka-io/easypy/issues/80", "id": 327684445, "node_id": "MDU6SXNzdWUzMjc2ODQ0NDU=", "number": 80, "title": "The case for EasyMeta", "user": {"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-30T11:14:53Z", "updated_at": "2018-07-03T06:44:44Z", "closed_at": "2018-07-03T06:44:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We use a lot of metaclasses:\r\n\r\n| Meta Class | What it does |\r\n| -------------- | ---------------- |\r\n| `easypy.concurrency.MultiExceptionMeta` | Generate subtypes with generics syntax |\r\n| `easypy.concurrency.SynchronizedSingleton` | Make all instances of each subclass share the same object, thread safe |\r\n| `easypy.typed_struct.TypedStructMeta` | DSL for declaring typed structs |\r\n| `wepy.aws.instance_types.InstanceTypeMeta` | Not really sure... @koreno / @DoronCohen? |\r\n| `wepy.devops.cluster.setup.ReplaceWithOuter` | @tigrawap? |\r\n| `wepy.devops.jira.JiraProjectMeta` | Register the subclasses |\r\n| `wepy.devops.roles.RoleMeta` | Make subclasses behave like objects, not types |\r\n| `wepy.devops.roles.HostRoleMeta` | Inherits `RoleMeta` and does some trivial setup on top of it |\r\n| `wepy.devops.triage.TriagePluginMeta` | Register the subclasses (unless a `SHOULD_RUN` field is set) |\r\n| `wepy.explore.faults.FaultsMeta` | Decorate methods |\r\n| `qa.mayhem.mayhem_actions.MayhemActionMeta` | Register the subclasses (unless they are abstract) and does some field verification and auto-setting |\r\n| `qa.testlight.system_setup._ABCMetaWithLRUCache` | Cache all instances of each subclass constructed with the same parameters |\r\n| `qa.testlight.utils.ParametrizedBehaviorFixture` | DSL for creating a pytest fixture (not a type!) |\r\n\r\n`ParametrizedBehaviorFixture` does not create a type, so it should remain it's own metaclass.\r\n\r\n`RoleMeta`/`HostRoleMeta` are data notation - they would benefit from the discussion at https://github.com/weka-io/black-magic/issues/1\r\n\r\nFor everything else on the list (except `InstanceTypeMeta` and `ReplaceWithOuter`, which I didn't really understand what they do), I want to create a new module - `easypy.meta` - with a metaclass named `EasyMeta` that will contain all these features:\r\n* Automatic class registration\r\n* Subclass verification/modification\r\n* Automatic method decoration\r\n* Easy DSL definitions\r\n\r\nThe reason for using a single metaclass is that multi-inheritance does not work well with different metaclasses.\r\n\r\n----------------\r\n\r\nMy grepping also found these:\r\n```\r\n$ git grep 'a metaclass could make this go away...'\r\n\r\nwepy/devops/jobs/coverage/__init__.py:TestDefinitionRow.table_cls.DATA_CLS = TestDefinitionRow  # a metaclass could make this go away...\r\nwepy/devops/jobs/coverage/__init__.py:JobExecutionRow.table_cls.DATA_CLS = JobExecutionRow  # a metaclass could make this go away...\r\nwepy/devops/jobs/coverage/__init__.py:TestExecution.table_cls.DATA_CLS = TestExecution  # a metaclass could make this go away...\r\n```\r\nWe can probably add that functionality to `EasyMeta` too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/58", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/58/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/58/events", "html_url": "https://github.com/weka-io/easypy/issues/58", "id": 292413507, "node_id": "MDU6SXNzdWUyOTI0MTM1MDc=", "number": 58, "title": "Add a facility for synchronizing concurrent actions", "user": {"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-29T13:50:25Z", "updated_at": "2018-02-07T10:19:27Z", "closed_at": "2018-02-07T10:19:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running tasks concurrently with `MultiObject`, we often have problems:\r\n\r\n* The tasks need to do a certain part in parallel, but reach there at different times.\r\n    * Example: when killing nodes, we want to kill them at the same time (or as closely as possible)\r\n    * Another example: when waiting for nodes to get lease, we want to start waiting together, after all of them were resurrected.\r\n* The tasks need to do something that is expensive or has side-effects or otherwise does not play work that well with concurrency, but the operation and it's result could have been shared between the tasks.\r\n    * Example: writing to the logs - it could be nice to have a single log line(with some aggregated data) instead of separate log line for each concurrent task.\r\n    * Another example: holding an exclusive lock. Sometimes the tasks can share that lock, and just don't want for other things to get it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/46", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/46/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/46/events", "html_url": "https://github.com/weka-io/easypy/issues/46", "id": 254864053, "node_id": "MDU6SXNzdWUyNTQ4NjQwNTM=", "number": 46, "title": "TypedStruct list/dict/Bunch fields do not work in constructor", "user": {"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-03T09:38:10Z", "updated_at": "2017-09-03T11:15:26Z", "closed_at": "2017-09-03T11:15:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "These collection fields work with assignments:\r\n\r\n```python\r\nIn [1]: import easypy.typed_struct as ts\r\n\r\nIn [2]: class Foo(ts.TypedStruct):\r\n   ...:     bars = ts.Field([int])\r\n   ...:\r\n\r\nIn [3]: foo = Foo()\r\n\r\nIn [4]: foo.bars = [1, 2, 3]\r\n\r\nIn [5]: foo\r\nOut[5]: Foo(bars=[1, 2, 3])\r\n```\r\n\r\nBut not in the constructor:\r\n\r\n```python\r\nIn [6]: Foo(bars=[1, 2, 3])\r\n---------------------------------------------------------------------------\r\nNotFields                                 Traceback (most recent call last)\r\n/files/code/wekapp/subcommands/explore.py in <module>()\r\n----> 1 Foo(bars=[1, 2, 3])\r\n\r\n/files/code/wekapp/deps/easypy/easypy/typed_struct.py in __init__(self, **kwargs)\r\n    381                 field.__set__(self, value)\r\n    382         if kwargs:\r\n--> 383             raise NotFields(typed_struct=type(self), field_names=', '.join(kwargs.keys()))\r\n    384\r\n    385     def __delitem__(self, key):\r\n\r\nNotFields: bars are not fields of Foo\r\n    field_names = bars\r\n    typed_struct = <class 'subcommands.explore.Foo'>\r\n    timestamp = 2017-09-03T12:35:31.949800\r\n```\r\n\r\nNor in `.from_dict()`:\r\n\r\n```python\r\nIn [7]: Foo.from_dict({'bars': [1, 2, 3]})\r\n---------------------------------------------------------------------------\r\nNotFields                                 Traceback (most recent call last)\r\n/files/code/wekapp/subcommands/explore.py in <module>()\r\n----> 1 Foo.from_dict({'bars': [1, 2, 3]})\r\n\r\n/files/code/wekapp/deps/easypy/easypy/typed_struct.py in from_dict(cls, dct)\r\n    351     @classmethod\r\n    352     def from_dict(cls, dct):\r\n--> 353         return cls(**dct)\r\n    354\r\n    355     def items(self):\r\n\r\n/files/code/wekapp/deps/easypy/easypy/typed_struct.py in __init__(self, **kwargs)\r\n    381                 field.__set__(self, value)\r\n    382         if kwargs:\r\n--> 383             raise NotFields(typed_struct=type(self), field_names=', '.join(kwargs.keys()))\r\n    384\r\n    385     def __delitem__(self, key):\r\n\r\nNotFields: bars are not fields of Foo\r\n    field_names = bars\r\n    typed_struct = <class 'subcommands.explore.Foo'>\r\n    timestamp = 2017-09-03T12:36:32.566079\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/38", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/38/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/38/events", "html_url": "https://github.com/weka-io/easypy/issues/38", "id": 251489418, "node_id": "MDU6SXNzdWUyNTE0ODk0MTg=", "number": 38, "title": "TypedStruct - schematic classes for structured people", "user": {"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 563676725, "node_id": "MDU6TGFiZWw1NjM2NzY3MjU=", "url": "https://api.github.com/repos/weka-io/easypy/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": true, "assignee": {"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2017-08-20T13:44:31Z", "updated_at": "2017-08-27T12:10:04Z", "closed_at": "2017-08-27T12:10:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We want a schema for our configuration - a declarative way to define what fields it should have and all sorts of info on these fields. We also want to be able to reflectively use these schemas - create Plumbum CLI flags, store the info in databases, send it to external services(like AWS) etc.\r\n\r\nGoals:\r\n* Allow creating types with lists of fields.\r\n    * Automatic c'tor for these fields.\r\n    * Getters and setters should work.\r\n* Allow declaring the types of the fields.\r\n    * Types should be verified at runtime, in the c'tor and in the setters.\r\n* Allow declaring constraints on the fields(e.g. - \"number can be from 13 to 42\")\r\n    * Of course, constraints should also be verified at runtime.\r\n* Allow custom metadata - e.g. help text for Plumbum CLI.\r\n* Allow default value for fields. Fields without default values are mandatory.\r\n* Allow nesting of types.\r\n* Should work well with IDEs' autocompletion.\r\n* Nice-to-have: integration with MyPy. Not sure if it's even possible though - certainly not without Python 3.6's variable annotation...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/13", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/13/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/13/events", "html_url": "https://github.com/weka-io/easypy/issues/13", "id": 224403389, "node_id": "MDU6SXNzdWUyMjQ0MDMzODk=", "number": 13, "title": "Better lockstep API", "user": {"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": {"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-04-26T09:32:21Z", "updated_at": "2017-08-28T13:13:28Z", "closed_at": "2017-08-28T13:13:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "@koreno - what's our policy regarding breaking changes in easypy?\r\n\r\n[You wanted to add `process.execute()`](https://github.com/weka-io/easypy/pull/9#discussion_r112005932) to ease the execution without stepping into the process. We decided against it because it's not super-trivial(we can't just put a method on the wrapper - it won't get bound to the object) and because we want the non-stepping invocation to be a direct method of the object, so we'd still need a wrapper method - which kind of nullifies the benefit of `process.execute()`.\r\n\r\nBut what if we reverse it? Instead of:\r\n\r\n```python\r\n@lockstep\r\ndef my_process_lockstep():\r\n    # ...\r\n\r\n# step-by-step\r\nwith my_process_lockstep() as process:\r\n    # ...\r\n\r\n# just do it\r\nmy_process_lockstep.execute()\r\n```\r\n\r\nWe'll do this:\r\n```python\r\n@lockstep\r\ndef my_process():\r\n    # ...\r\n\r\n# step-by-step\r\nwith my_process.lockstep() as process:\r\n    # ...\r\n\r\n# just do it\r\nmy_process()\r\n```\r\n\r\nWe'll still need our own property descriptor, but we'll have the benefit of having the direct execution as the main API, which will save us the need for a wrapper method.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/weka-io/easypy/issues/10", "repository_url": "https://api.github.com/repos/weka-io/easypy", "labels_url": "https://api.github.com/repos/weka-io/easypy/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/weka-io/easypy/issues/10/comments", "events_url": "https://api.github.com/repos/weka-io/easypy/issues/10/events", "html_url": "https://github.com/weka-io/easypy/issues/10", "id": 222440437, "node_id": "MDU6SXNzdWUyMjI0NDA0Mzc=", "number": 10, "title": "`Logger.context` can not handle generators:", "user": {"login": "idanarye", "id": 1149255, "node_id": "MDQ6VXNlcjExNDkyNTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1149255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/idanarye", "html_url": "https://github.com/idanarye", "followers_url": "https://api.github.com/users/idanarye/followers", "following_url": "https://api.github.com/users/idanarye/following{/other_user}", "gists_url": "https://api.github.com/users/idanarye/gists{/gist_id}", "starred_url": "https://api.github.com/users/idanarye/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/idanarye/subscriptions", "organizations_url": "https://api.github.com/users/idanarye/orgs", "repos_url": "https://api.github.com/users/idanarye/repos", "events_url": "https://api.github.com/users/idanarye/events{/privacy}", "received_events_url": "https://api.github.com/users/idanarye/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": {"login": "koreno", "id": 180551, "node_id": "MDQ6VXNlcjE4MDU1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/180551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koreno", "html_url": "https://github.com/koreno", "followers_url": "https://api.github.com/users/koreno/followers", "following_url": "https://api.github.com/users/koreno/following{/other_user}", "gists_url": "https://api.github.com/users/koreno/gists{/gist_id}", "starred_url": "https://api.github.com/users/koreno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koreno/subscriptions", "organizations_url": "https://api.github.com/users/koreno/orgs", "repos_url": "https://api.github.com/users/koreno/repos", "events_url": "https://api.github.com/users/koreno/events{/privacy}", "received_events_url": "https://api.github.com/users/koreno/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "koreno", "id": 180551, "node_id": "MDQ6VXNlcjE4MDU1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/180551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koreno", "html_url": "https://github.com/koreno", "followers_url": "https://api.github.com/users/koreno/followers", "following_url": "https://api.github.com/users/koreno/following{/other_user}", "gists_url": "https://api.github.com/users/koreno/gists{/gist_id}", "starred_url": "https://api.github.com/users/koreno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koreno/subscriptions", "organizations_url": "https://api.github.com/users/koreno/orgs", "repos_url": "https://api.github.com/users/koreno/repos", "events_url": "https://api.github.com/users/koreno/events{/privacy}", "received_events_url": "https://api.github.com/users/koreno/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2017-04-18T14:43:20Z", "updated_at": "2017-05-10T15:11:51Z", "closed_at": "2017-05-10T15:11:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```python\r\nIn [1]: @_logger.context('my-ctx', indent='my-indent')\r\n   ...: def my_generator():\r\n   ...:     _logger.info('before yield')\r\n   ...:     yield\r\n   ...:     _logger.info('after yield')\r\n   ...:\r\n\r\nIn [2]: for _ in my_generator():\r\n   ...:     pass\r\n   ...:\r\n17:42:19|INFO1|IdanArye                 |  \u251c\u2500\u2500\u2500\u252e my-indent\r\n17:42:19|INFO1|IdanArye                 |  \u2502   \u2570\u257cDONE in no-time (my-indent)\r\n17:42:19|INFO |IdanArye                 |  \u2502 before yield\r\n17:42:19|INFO |IdanArye                 |  \u2502 after yield\r\n```", "performed_via_github_app": null, "score": 1.0}]}