{"total_count": 32, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/105", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/105/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/105/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/105", "id": 466441879, "node_id": "MDU6SXNzdWU0NjY0NDE4Nzk=", "number": 105, "title": "Issue working with Sentry celery integration", "user": {"login": "mumumumu", "id": 1393482, "node_id": "MDQ6VXNlcjEzOTM0ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1393482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mumumumu", "html_url": "https://github.com/mumumumu", "followers_url": "https://api.github.com/users/mumumumu/followers", "following_url": "https://api.github.com/users/mumumumu/following{/other_user}", "gists_url": "https://api.github.com/users/mumumumu/gists{/gist_id}", "starred_url": "https://api.github.com/users/mumumumu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mumumumu/subscriptions", "organizations_url": "https://api.github.com/users/mumumumu/orgs", "repos_url": "https://api.github.com/users/mumumumu/repos", "events_url": "https://api.github.com/users/mumumumu/events{/privacy}", "received_events_url": "https://api.github.com/users/mumumumu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-10T17:56:27Z", "updated_at": "2019-10-17T10:34:21Z", "closed_at": "2019-10-17T10:34:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use `celery-once` with the Sentry celery integration, but I'm running into an issue with how Sentry patches the task tracer. \r\n\r\nThe issue I'm seeing is that the key before and after the task is patched are different. I believe this is because of how `inspect.getcallargs` is working with Sentry's wrapped `run` method. \r\n\r\nWould there be anything wrong with storing the key on the task instance like this:\r\n```py\r\n    def get_key(self, args=None, kwargs=None):\r\n        \"\"\"\r\n        Generate the key from the name of the task (e.g. 'tasks.example') and\r\n        args/kwargs.\r\n        \"\"\"\r\n        if not hasattr(self, '_key'):\r\n            restrict_to = self.once.get('keys', None)\r\n            args = args or {}\r\n            kwargs = kwargs or {}\r\n            call_args = getcallargs(\r\n                    getattr(self, '_orig_run', self.run), *args, **kwargs)\r\n            # Remove the task instance from the kwargs. This only happens when the\r\n            # task has the 'bind' attribute set to True. We remove it, as the task\r\n            # has a memory pointer in its repr, that will change between the task\r\n            # caller and the celery worker\r\n            if isinstance(call_args.get('self'), Task):\r\n                del call_args['self']\r\n            self._key = queue_once_key(self.name, call_args, restrict_to)\r\n        return self._key\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/102", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/102/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/102/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/102", "id": 454811331, "node_id": "MDU6SXNzdWU0NTQ4MTEzMzE=", "number": 102, "title": "Pypi version not aligned with git releases.", "user": {"login": "x-warrior", "id": 293885, "node_id": "MDQ6VXNlcjI5Mzg4NQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/293885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/x-warrior", "html_url": "https://github.com/x-warrior", "followers_url": "https://api.github.com/users/x-warrior/followers", "following_url": "https://api.github.com/users/x-warrior/following{/other_user}", "gists_url": "https://api.github.com/users/x-warrior/gists{/gist_id}", "starred_url": "https://api.github.com/users/x-warrior/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/x-warrior/subscriptions", "organizations_url": "https://api.github.com/users/x-warrior/orgs", "repos_url": "https://api.github.com/users/x-warrior/repos", "events_url": "https://api.github.com/users/x-warrior/events{/privacy}", "received_events_url": "https://api.github.com/users/x-warrior/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-11T17:20:14Z", "updated_at": "2019-06-11T18:33:59Z", "closed_at": "2019-06-11T18:33:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just noticed that on PyPi there is a version 3.0 but here there is not.\r\n\r\nIs this correct? It felt super weird to have a version 3.0 there and not here. \r\n\r\nhttps://pypi.python.org/pypi/celery_once/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/96", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/96/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/96/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/96", "id": 441940635, "node_id": "MDU6SXNzdWU0NDE5NDA2MzU=", "number": 96, "title": "Bug: OSError Filename too long", "user": {"login": "mlaythe", "id": 15862573, "node_id": "MDQ6VXNlcjE1ODYyNTcz", "avatar_url": "https://avatars1.githubusercontent.com/u/15862573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlaythe", "html_url": "https://github.com/mlaythe", "followers_url": "https://api.github.com/users/mlaythe/followers", "following_url": "https://api.github.com/users/mlaythe/following{/other_user}", "gists_url": "https://api.github.com/users/mlaythe/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlaythe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlaythe/subscriptions", "organizations_url": "https://api.github.com/users/mlaythe/orgs", "repos_url": "https://api.github.com/users/mlaythe/repos", "events_url": "https://api.github.com/users/mlaythe/events{/privacy}", "received_events_url": "https://api.github.com/users/mlaythe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-08T21:30:35Z", "updated_at": "2019-05-13T12:47:28Z", "closed_at": "2019-05-13T12:46:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the `File` backend and I'm passing a relatively large dictionary as a param to the celery task. Is it possible to use a hash or something else instead of the function params to generate the task filename?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/94", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/94/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/94/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/94", "id": 441623386, "node_id": "MDU6SXNzdWU0NDE2MjMzODY=", "number": 94, "title": "Rediss", "user": {"login": "gustavoalmeida", "id": 2158577, "node_id": "MDQ6VXNlcjIxNTg1Nzc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2158577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gustavoalmeida", "html_url": "https://github.com/gustavoalmeida", "followers_url": "https://api.github.com/users/gustavoalmeida/followers", "following_url": "https://api.github.com/users/gustavoalmeida/following{/other_user}", "gists_url": "https://api.github.com/users/gustavoalmeida/gists{/gist_id}", "starred_url": "https://api.github.com/users/gustavoalmeida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gustavoalmeida/subscriptions", "organizations_url": "https://api.github.com/users/gustavoalmeida/orgs", "repos_url": "https://api.github.com/users/gustavoalmeida/repos", "events_url": "https://api.github.com/users/gustavoalmeida/events{/privacy}", "received_events_url": "https://api.github.com/users/gustavoalmeida/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-08T08:53:07Z", "updated_at": "2019-05-13T12:28:27Z", "closed_at": "2019-05-13T12:28:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello all\r\n\r\nWhat about urls with rediss://? We are not allowing this protocol here?\r\nhttps://github.com/cameronmaske/celery-once/blob/master/celery_once/backends/redis.py#L29", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/93", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/93/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/93/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/93", "id": 434558171, "node_id": "MDU6SXNzdWU0MzQ1NTgxNzE=", "number": 93, "title": "Default lock keys use process memory address", "user": {"login": "kuba-lilz", "id": 30581417, "node_id": "MDQ6VXNlcjMwNTgxNDE3", "avatar_url": "https://avatars0.githubusercontent.com/u/30581417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kuba-lilz", "html_url": "https://github.com/kuba-lilz", "followers_url": "https://api.github.com/users/kuba-lilz/followers", "following_url": "https://api.github.com/users/kuba-lilz/following{/other_user}", "gists_url": "https://api.github.com/users/kuba-lilz/gists{/gist_id}", "starred_url": "https://api.github.com/users/kuba-lilz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kuba-lilz/subscriptions", "organizations_url": "https://api.github.com/users/kuba-lilz/orgs", "repos_url": "https://api.github.com/users/kuba-lilz/repos", "events_url": "https://api.github.com/users/kuba-lilz/events{/privacy}", "received_events_url": "https://api.github.com/users/kuba-lilz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-18T02:05:26Z", "updated_at": "2019-04-19T09:38:55Z", "closed_at": "2019-04-19T02:20:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried using QueueOnce tasks and see that lock keys they generate look like this:\r\n`qo_simple_test_task_args-(<@task: simple_test_task of __main__ at 0x10af06d38>,)_kwargs-{}`\r\n\r\nI see two problems with this key:\r\n- `of __main__ `\r\n- `at 0x10af06d38`\r\n\r\n**Problem with `of __main__ `**\r\nIf entry point for process that called the task wouldn't be `__main__`, this part would be different. Not sure how could I achieve such entry point, but I just don't see why use process entry point as part of task key - same task posted from processes that use different entry point would be mapped to different lock keys.\r\n\r\n\r\n**Problem with `at 0x10af06d38`**\r\nThis is a memory address and will be different for every process. If I have two separate processes posting same task, then they will be mapped to two different keys and both will get queued - not the expected behaviour for QueueOnce task. I was able to verify this problem simply by running same tasks posting code from two different terminal windows.\r\n\r\nAre both conscious choices? They really don't seem very natural defaults to me.\r\n\r\nFor completeness - here are library versions I used to produce above key:\r\n```python\r\nIn [1]: import redis, celery, celery_once\r\n\r\nIn [2]: redis.__version__\r\nOut[2]: '3.2.0'\r\n\r\nIn [3]: celery.__version__\r\nOut[3]: '4.2.1'\r\n\r\nIn [4]: celery_once.__version__\r\nOut[4]: '2.1.0'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/88", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/88/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/88/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/88", "id": 427826524, "node_id": "MDU6SXNzdWU0Mjc4MjY1MjQ=", "number": 88, "title": "Task conflict detection at runtime", "user": {"login": "molten-firescar96", "id": 42944112, "node_id": "MDQ6VXNlcjQyOTQ0MTEy", "avatar_url": "https://avatars3.githubusercontent.com/u/42944112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/molten-firescar96", "html_url": "https://github.com/molten-firescar96", "followers_url": "https://api.github.com/users/molten-firescar96/followers", "following_url": "https://api.github.com/users/molten-firescar96/following{/other_user}", "gists_url": "https://api.github.com/users/molten-firescar96/gists{/gist_id}", "starred_url": "https://api.github.com/users/molten-firescar96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/molten-firescar96/subscriptions", "organizations_url": "https://api.github.com/users/molten-firescar96/orgs", "repos_url": "https://api.github.com/users/molten-firescar96/repos", "events_url": "https://api.github.com/users/molten-firescar96/events{/privacy}", "received_events_url": "https://api.github.com/users/molten-firescar96/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-04-01T17:32:01Z", "updated_at": "2019-04-03T17:01:35Z", "closed_at": "2019-04-03T17:01:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "One thing that confused me is that celery_once tries to detect conflicts and acquire locks before _inputting_ a task into the queue and not when a task is _pulled_ from the queue to run. Do you have opinions about also including a task existance check as part of the `QueueOnce.__call__` method?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/80", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/80/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/80/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/80", "id": 388618458, "node_id": "MDU6SXNzdWUzODg2MTg0NTg=", "number": 80, "title": "celey_once does not work", "user": {"login": "EyecatWang", "id": 26106551, "node_id": "MDQ6VXNlcjI2MTA2NTUx", "avatar_url": "https://avatars1.githubusercontent.com/u/26106551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EyecatWang", "html_url": "https://github.com/EyecatWang", "followers_url": "https://api.github.com/users/EyecatWang/followers", "following_url": "https://api.github.com/users/EyecatWang/following{/other_user}", "gists_url": "https://api.github.com/users/EyecatWang/gists{/gist_id}", "starred_url": "https://api.github.com/users/EyecatWang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EyecatWang/subscriptions", "organizations_url": "https://api.github.com/users/EyecatWang/orgs", "repos_url": "https://api.github.com/users/EyecatWang/repos", "events_url": "https://api.github.com/users/EyecatWang/events{/privacy}", "received_events_url": "https://api.github.com/users/EyecatWang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-07T11:37:00Z", "updated_at": "2019-07-18T10:13:44Z", "closed_at": "2019-07-18T10:13:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I set up a task with celecy. Repeated multiple times. so i used celecy-once. but also can't.\r\n![wechatimg9](https://user-images.githubusercontent.com/26106551/49645522-3bf7e280-fa57-11e8-9582-46f50434cdb6.png)\r\n\r\n![wechatimg10](https://user-images.githubusercontent.com/26106551/49645579-719ccb80-fa57-11e8-8194-145b7cc53c58.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/77", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/77/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/77/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/77", "id": 357230148, "node_id": "MDU6SXNzdWUzNTcyMzAxNDg=", "number": 77, "title": "Django", "user": {"login": "basitiyidir", "id": 1632765, "node_id": "MDQ6VXNlcjE2MzI3NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1632765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basitiyidir", "html_url": "https://github.com/basitiyidir", "followers_url": "https://api.github.com/users/basitiyidir/followers", "following_url": "https://api.github.com/users/basitiyidir/following{/other_user}", "gists_url": "https://api.github.com/users/basitiyidir/gists{/gist_id}", "starred_url": "https://api.github.com/users/basitiyidir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basitiyidir/subscriptions", "organizations_url": "https://api.github.com/users/basitiyidir/orgs", "repos_url": "https://api.github.com/users/basitiyidir/repos", "events_url": "https://api.github.com/users/basitiyidir/events{/privacy}", "received_events_url": "https://api.github.com/users/basitiyidir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-09-05T13:29:40Z", "updated_at": "2019-04-15T11:29:20Z", "closed_at": "2019-04-15T11:29:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "It does not work in Django applications. Are you aware?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/76", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/76/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/76/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/76", "id": 355229502, "node_id": "MDU6SXNzdWUzNTUyMjk1MDI=", "number": 76, "title": "celery-once and Redlock", "user": {"login": "NicolasLM", "id": 7612656, "node_id": "MDQ6VXNlcjc2MTI2NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/7612656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NicolasLM", "html_url": "https://github.com/NicolasLM", "followers_url": "https://api.github.com/users/NicolasLM/followers", "following_url": "https://api.github.com/users/NicolasLM/following{/other_user}", "gists_url": "https://api.github.com/users/NicolasLM/gists{/gist_id}", "starred_url": "https://api.github.com/users/NicolasLM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NicolasLM/subscriptions", "organizations_url": "https://api.github.com/users/NicolasLM/orgs", "repos_url": "https://api.github.com/users/NicolasLM/repos", "events_url": "https://api.github.com/users/NicolasLM/events{/privacy}", "received_events_url": "https://api.github.com/users/NicolasLM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-29T16:02:23Z", "updated_at": "2019-02-25T17:05:13Z", "closed_at": "2019-02-25T17:05:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I hope this issue doesn't come as too pedantic but the README mentions that celery-once uses the Redlock algorithm.\r\n\r\nAfter digging a bit it looks like `redis.lock.Lock` uses a plain lock on a single instance, whereas Redlock is about using multiple Redis instances in parallel for fault-tolerance.\r\n\r\nThe confusion probably comes from the fact that both algorithms are presented in the same page in the Redis documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/74", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/74/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/74/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/74", "id": 342916412, "node_id": "MDU6SXNzdWUzNDI5MTY0MTI=", "number": 74, "title": "get_key doesn't work with autoretry_for", "user": {"login": "pkariz", "id": 4921363, "node_id": "MDQ6VXNlcjQ5MjEzNjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/4921363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkariz", "html_url": "https://github.com/pkariz", "followers_url": "https://api.github.com/users/pkariz/followers", "following_url": "https://api.github.com/users/pkariz/following{/other_user}", "gists_url": "https://api.github.com/users/pkariz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkariz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkariz/subscriptions", "organizations_url": "https://api.github.com/users/pkariz/orgs", "repos_url": "https://api.github.com/users/pkariz/repos", "events_url": "https://api.github.com/users/pkariz/events{/privacy}", "received_events_url": "https://api.github.com/users/pkariz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-19T22:53:04Z", "updated_at": "2019-02-25T15:39:04Z", "closed_at": "2019-02-25T15:39:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "OS: debian 9 stretch\r\n\r\nWhen autoretry_for is passed as a kwarg to a task, celery wraps task.run method and stores original task.run method in task._orig_run. Currently get_key always checks task.run and the inspection of arguments doesn't return the right values. The solution is to check if _orig_run exists on task and if it does, inspect this method for arguments. I have created a PR #75 which includes a proposed fix and a test which covers that problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/72", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/72/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/72/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/72", "id": 323725383, "node_id": "MDU6SXNzdWUzMjM3MjUzODM=", "number": 72, "title": "Getting celery beat error 'SchedulingError: Couldn't apply scheduled task'", "user": {"login": "kowsari", "id": 1079552, "node_id": "MDQ6VXNlcjEwNzk1NTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1079552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kowsari", "html_url": "https://github.com/kowsari", "followers_url": "https://api.github.com/users/kowsari/followers", "following_url": "https://api.github.com/users/kowsari/following{/other_user}", "gists_url": "https://api.github.com/users/kowsari/gists{/gist_id}", "starred_url": "https://api.github.com/users/kowsari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kowsari/subscriptions", "organizations_url": "https://api.github.com/users/kowsari/orgs", "repos_url": "https://api.github.com/users/kowsari/repos", "events_url": "https://api.github.com/users/kowsari/events{/privacy}", "received_events_url": "https://api.github.com/users/kowsari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-05-16T17:57:23Z", "updated_at": "2019-08-21T14:57:10Z", "closed_at": "2019-08-21T14:57:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nThank you for writing a useful project for celery.\r\n\r\nI am attempting to use this with scheduled tasks that run every minute that are configured in settings.py using celery beat config like below:\r\n```\r\nCELERYBEAT_SCHEDULE = {\r\n    'check_products': {\r\n      'task': 'com.ixlayer.tasks.check_products', 'schedule': timedelta(minutes=1),\r\n    },\r\n}\r\n\r\n\r\n```\r\n\r\nHowever sometimes I get an exception in the process that runs celery beat.\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/kowsari/workspace/ixlayer-be/venv/lib/python2.7/site-packages/celery/beat.py\", line 222, in apply_entry\r\n    result = self.apply_async(entry, producer=producer, advance=False)\r\n  File \"/Users/kowsari/workspace/ixlayer-be/venv/lib/python2.7/site-packages/celery/beat.py\", line 328, in apply_async\r\n    entry, exc=exc)), sys.exc_info()[2])\r\n  File \"/Users/kowsari/workspace/ixlayer-be/venv/lib/python2.7/site-packages/celery/beat.py\", line 320, in apply_async\r\n    **entry.options)\r\n  File \"/Users/kowsari/workspace/ixlayer-be/venv/lib/python2.7/site-packages/celery_once/tasks.py\", line 99, in apply_async\r\n    raise e\r\nSchedulingError: Couldn't apply scheduled task check_products:\r\n```\r\nI am using this configuration.\r\n```\r\napp.conf.ONCE = {\r\n  'backend': 'celery_once.backends.Redis',\r\n  'settings': {\r\n    'url': settings.BROKER_URL,\r\n    'default_timeout': 60 * 60\r\n  }\r\n}\r\n\r\n```\r\nIs this celerybeat getting the AlreadyQueued exception? Or is this something else?\r\nHelp is much appreciated.\r\n\r\nThanks ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/64", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/64/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/64/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/64", "id": 305797799, "node_id": "MDU6SXNzdWUzMDU3OTc3OTk=", "number": 64, "title": "With Flask-SQLAlchemy query, I get RuntimeError: Working outside of application context.", "user": {"login": "pdoggi", "id": 2193746, "node_id": "MDQ6VXNlcjIxOTM3NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2193746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pdoggi", "html_url": "https://github.com/pdoggi", "followers_url": "https://api.github.com/users/pdoggi/followers", "following_url": "https://api.github.com/users/pdoggi/following{/other_user}", "gists_url": "https://api.github.com/users/pdoggi/gists{/gist_id}", "starred_url": "https://api.github.com/users/pdoggi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pdoggi/subscriptions", "organizations_url": "https://api.github.com/users/pdoggi/orgs", "repos_url": "https://api.github.com/users/pdoggi/repos", "events_url": "https://api.github.com/users/pdoggi/events{/privacy}", "received_events_url": "https://api.github.com/users/pdoggi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-16T04:20:04Z", "updated_at": "2019-02-11T14:03:35Z", "closed_at": "2019-02-11T14:03:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you for the great work on this library! \r\n\r\n| Info | Details |\r\n| ---------------------- |:---------------------------:|\r\n| OS name and version  | macOS High Sierra v10.13.3 |\r\n| Broker | RabbitMQ |\r\n| Other details | RedBeat, Flask-SQLAlchemy |\r\n\r\nFollowing the usage directions worked perfectly out of the box, but once I needed to lookup a record in my database, I get a `RuntimeError: Working outside of application context.`\r\n\r\n#### This code works\r\n```python\r\n@celery.task(base=QueueOnce, once={'graceful': True})\r\ndef slow_task(id):\r\n    sleep(20)\r\n    return \"Done!\"\r\n```\r\n\r\n#### This code doesn't work\r\n```python\r\n@celery.task(base=QueueOnce, once={'graceful': True})\r\ndef slow_task(id):\r\n    result = CustomORModel.query.filter_by(id=id).first()\r\n    do_something_with(result)\r\n    return \"Fails!!\"\r\n```\r\nUsing celery's base Task class plays nicely with my db lookup--that is, it works when I remove `base=QueueOnce, once={'graceful': True}`, but I need the task locking mechanism offered by celery-once.\r\n\r\nAnyone else have experience with this? Maybe, I'm missing something pretty basic in my setup or the way I'm calling my query.\r\n\r\nAny help would be greatly appreciated! Thanks in advance.\r\n\r\nConnie\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/62", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/62/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/62/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/62", "id": 290908384, "node_id": "MDU6SXNzdWUyOTA5MDgzODQ=", "number": 62, "title": "Is there a SSL support for Redis?", "user": {"login": "michelpf", "id": 8541053, "node_id": "MDQ6VXNlcjg1NDEwNTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/8541053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michelpf", "html_url": "https://github.com/michelpf", "followers_url": "https://api.github.com/users/michelpf/followers", "following_url": "https://api.github.com/users/michelpf/following{/other_user}", "gists_url": "https://api.github.com/users/michelpf/gists{/gist_id}", "starred_url": "https://api.github.com/users/michelpf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michelpf/subscriptions", "organizations_url": "https://api.github.com/users/michelpf/orgs", "repos_url": "https://api.github.com/users/michelpf/repos", "events_url": "https://api.github.com/users/michelpf/events{/privacy}", "received_events_url": "https://api.github.com/users/michelpf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-23T16:43:38Z", "updated_at": "2019-05-08T08:52:32Z", "closed_at": "2018-01-23T17:25:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to make it work with SSL connection using Redis on Azure, but with no sucess.\r\nCould you confirm if it's possible?\r\n\r\nOn Celery, it is, https://github.com/celery/celery/pull/3831.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/61", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/61/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/61/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/61", "id": 282560421, "node_id": "MDU6SXNzdWUyODI1NjA0MjE=", "number": 61, "title": "Is there a way to set graceful to True globally?", "user": {"login": "hugobessa", "id": 1779823, "node_id": "MDQ6VXNlcjE3Nzk4MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1779823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugobessa", "html_url": "https://github.com/hugobessa", "followers_url": "https://api.github.com/users/hugobessa/followers", "following_url": "https://api.github.com/users/hugobessa/following{/other_user}", "gists_url": "https://api.github.com/users/hugobessa/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugobessa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugobessa/subscriptions", "organizations_url": "https://api.github.com/users/hugobessa/orgs", "repos_url": "https://api.github.com/users/hugobessa/repos", "events_url": "https://api.github.com/users/hugobessa/events{/privacy}", "received_events_url": "https://api.github.com/users/hugobessa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-15T22:05:18Z", "updated_at": "2019-02-25T16:39:55Z", "closed_at": "2019-02-25T16:39:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to fail gracefully for every task except some few, so setting this to True globally would be really nice. Is it possible?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/58", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/58/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/58/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/58", "id": 272925484, "node_id": "MDU6SXNzdWUyNzI5MjU0ODQ=", "number": 58, "title": "Tasks with autoretry_for stuck in locked state", "user": {"login": "andbortnik", "id": 17045710, "node_id": "MDQ6VXNlcjE3MDQ1NzEw", "avatar_url": "https://avatars3.githubusercontent.com/u/17045710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andbortnik", "html_url": "https://github.com/andbortnik", "followers_url": "https://api.github.com/users/andbortnik/followers", "following_url": "https://api.github.com/users/andbortnik/following{/other_user}", "gists_url": "https://api.github.com/users/andbortnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/andbortnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andbortnik/subscriptions", "organizations_url": "https://api.github.com/users/andbortnik/orgs", "repos_url": "https://api.github.com/users/andbortnik/repos", "events_url": "https://api.github.com/users/andbortnik/events{/privacy}", "received_events_url": "https://api.github.com/users/andbortnik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-10T13:02:13Z", "updated_at": "2018-04-25T12:08:57Z", "closed_at": "2018-04-25T12:08:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've discovered a bug in `get_key` method which prevents lock release.\r\n```\r\n@app.task(name='mytask', base=celery_once.QueueOnce)\r\ndef mytask(foo, bar):\r\n    ...\r\n\r\nmytask.delay(foo=1, bar=2)\r\n```\r\nThe `getcallargs(self.run, *args, **kwargs)` call returns `{'foo': 1, 'bar': 2}`. \r\nThe `get_key` call returns `qo_mytask_foo-1_bar-2`. Everything works properly.\r\n\r\nIf I'd add `autoretry_for` argument:\r\n```\r\n@app.task(name='mytask_retry', base=celery_once.QueueOnce, autoretry_for=(Exception, ))\r\ndef mytask_retry(foo, bar):\r\n    ...\r\n\r\nmytask_retry.delay(foo=1, bar=2)\r\n```\r\n\r\nThe `getcallargs(self.run, *args, **kwargs)` call returns `{'args': (), 'kwargs': {'foo': 1, 'bar': 2}}`. \r\nThe `get_key` call returns `qo_mytask_retry_args-()_kwargs={'bar': 2, 'foo': 1}`. \r\nThe `{'bar': 2, 'foo': 1}` part is unsorted and sometimes the order changes to  `{'foo': 1, 'bar': 2}`. \r\n\r\nThe same issue takes place when a nested dict is passed as task's argument. For example, `mytask(foo={'spam': 10, 'eggs': 20}, bar=2)`. The `get_key` call returns `qo_mytask_foo-{'eggs': 20, 'spam': 10}_bar-2` and sometimes `qo_mytask_foo-{'spam': 10, 'eggs': 20}_bar-2`\r\n\r\n\r\nThis lead to lock release issues because `get_key` result is different on lock stage and release stage.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/56", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/56/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/56/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/56", "id": 241625930, "node_id": "MDU6SXNzdWUyNDE2MjU5MzA=", "number": 56, "title": "AttributeError: 'Settings' object has no attribute 'ONCE'", "user": {"login": "Dean-Christian-Armada", "id": 9837087, "node_id": "MDQ6VXNlcjk4MzcwODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9837087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dean-Christian-Armada", "html_url": "https://github.com/Dean-Christian-Armada", "followers_url": "https://api.github.com/users/Dean-Christian-Armada/followers", "following_url": "https://api.github.com/users/Dean-Christian-Armada/following{/other_user}", "gists_url": "https://api.github.com/users/Dean-Christian-Armada/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dean-Christian-Armada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dean-Christian-Armada/subscriptions", "organizations_url": "https://api.github.com/users/Dean-Christian-Armada/orgs", "repos_url": "https://api.github.com/users/Dean-Christian-Armada/repos", "events_url": "https://api.github.com/users/Dean-Christian-Armada/events{/privacy}", "received_events_url": "https://api.github.com/users/Dean-Christian-Armada/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-07-10T07:43:56Z", "updated_at": "2018-02-09T07:45:32Z", "closed_at": "2017-08-09T11:35:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am always receiving this error in celery logs after execution like \r\n```\r\n[2017-07-10 15:40:33,053: CRITICAL/MainProcess] Task provider.KENO.tasks.add[1da681d2-2815-4257-b139-01facaaef67d] INTERNAL ERROR: AttributeError(u\"'Settings' object has no attribute 'ONCE'\",)\r\nTraceback (most recent call last):\r\n  File \"/Users/deanchristianarmada/Desktop/projects/radars/radar/lib/python2.7/site-packages/celery/app/trace.py\", line 299, in trace_task\r\n    state, retval, uuid, args, kwargs, None,\r\n  File \"/Users/deanchristianarmada/Desktop/projects/radars/radar/lib/python2.7/site-packages/celery_once/tasks.py\", line 129, in after_return\r\n    self.once_backend.clear_lock(key)\r\n  File \"/Users/deanchristianarmada/Desktop/projects/radars/radar/lib/python2.7/site-packages/celery_once/tasks.py\", line 52, in once_backend\r\n    return import_backend(self.once_config)\r\n  File \"/Users/deanchristianarmada/Desktop/projects/radars/radar/lib/python2.7/site-packages/celery_once/tasks.py\", line 48, in once_config\r\n    return self.config.ONCE\r\n  File \"/Users/deanchristianarmada/Desktop/projects/radars/radar/lib/python2.7/site-packages/celery/datastructures.py\", line 353, in __getattr__\r\n    type(self).__name__, k))\r\nAttributeError: 'Settings' object has no attribute 'ONCE'\r\n```\r\n\r\nMy celery version is **3.1.24**. I tried it in 4.02 and the error still exists\r\n\r\nMy code is:\r\n```\r\nfrom celery import Celery\r\nfrom celery_once import QueueOnce\r\n\r\ncelery = Celery('tasks', broker='amqp://guest:guest@localhost:5672//')\r\ncelery.conf.ONCE = {\r\n  'backend': 'celery_once.backends.Redis',\r\n  'settings': {\r\n    'url': 'redis://127.0.0.1:6379',\r\n    'default_timeout': 60 * 60\r\n  }\r\n}\r\n\r\n@celery.task(base=QueueOnce)\r\ndef add(x, y):\r\n    return x + y\r\n```\r\n\r\nI run  it through terminal `celery -A proj -l info` and coded in `python manage.py shell` like:\r\n```\r\n>>> from app import add\r\n>>> x = add.apply_async(args=[6, 74])\r\n>>> \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/43", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/43/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/43/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/43", "id": 199008882, "node_id": "MDU6SXNzdWUxOTkwMDg4ODI=", "number": 43, "title": "Lock gets deleted shortly after it's set", "user": {"login": "bepetersn", "id": 1389463, "node_id": "MDQ6VXNlcjEzODk0NjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1389463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bepetersn", "html_url": "https://github.com/bepetersn", "followers_url": "https://api.github.com/users/bepetersn/followers", "following_url": "https://api.github.com/users/bepetersn/following{/other_user}", "gists_url": "https://api.github.com/users/bepetersn/gists{/gist_id}", "starred_url": "https://api.github.com/users/bepetersn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bepetersn/subscriptions", "organizations_url": "https://api.github.com/users/bepetersn/orgs", "repos_url": "https://api.github.com/users/bepetersn/repos", "events_url": "https://api.github.com/users/bepetersn/events{/privacy}", "received_events_url": "https://api.github.com/users/bepetersn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-05T17:11:10Z", "updated_at": "2017-01-06T16:19:12Z", "closed_at": "2017-01-06T16:19:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "My setup is intricate, so this may not be the fault of celery-once... Working on an example repo to reproduce, but if anyone has seen this before, would love to know. \r\n\r\nSpecifically, what I'm doing is monitoring the redis server while running my tasks, and I see something like `GET, SETEX, DEL`, on the celery-once key, all in quick succession.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/42", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/42/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/42/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/42", "id": 194487782, "node_id": "MDU6SXNzdWUxOTQ0ODc3ODI=", "number": 42, "title": "cannot be used as base class?", "user": {"login": "Zuckonit", "id": 988858, "node_id": "MDQ6VXNlcjk4ODg1OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/988858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zuckonit", "html_url": "https://github.com/Zuckonit", "followers_url": "https://api.github.com/users/Zuckonit/followers", "following_url": "https://api.github.com/users/Zuckonit/following{/other_user}", "gists_url": "https://api.github.com/users/Zuckonit/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zuckonit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zuckonit/subscriptions", "organizations_url": "https://api.github.com/users/Zuckonit/orgs", "repos_url": "https://api.github.com/users/Zuckonit/repos", "events_url": "https://api.github.com/users/Zuckonit/events{/privacy}", "received_events_url": "https://api.github.com/users/Zuckonit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-09T01:05:16Z", "updated_at": "2017-06-06T15:57:32Z", "closed_at": "2017-06-06T15:57:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "in celery 4.0, we can use class to create a task as:\r\n\r\n```\r\nfrom celery.task import Task\r\n\r\nclass DemoTask(Task):\r\n    \r\n    def run(self, *args, **kwargs):\r\n        #do something\r\n```\r\n\r\nbut if using celery-once, how to do that? I am trying to: \r\n\r\n```\r\nfrom celery_once import QueueOnce\r\n\r\nclass DemoTask2(QueueOnce):\r\n    \r\n    def run(self, *args, **kwargs):\r\n        #do something\r\n```\r\nbut ```DemoTask2``` task do not be loaded\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/41", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/41/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/41/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/41", "id": 162426385, "node_id": "MDU6SXNzdWUxNjI0MjYzODU=", "number": 41, "title": "Test files should not be installed", "user": {"login": "syabro", "id": 29029, "node_id": "MDQ6VXNlcjI5MDI5", "avatar_url": "https://avatars1.githubusercontent.com/u/29029?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syabro", "html_url": "https://github.com/syabro", "followers_url": "https://api.github.com/users/syabro/followers", "following_url": "https://api.github.com/users/syabro/following{/other_user}", "gists_url": "https://api.github.com/users/syabro/gists{/gist_id}", "starred_url": "https://api.github.com/users/syabro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syabro/subscriptions", "organizations_url": "https://api.github.com/users/syabro/orgs", "repos_url": "https://api.github.com/users/syabro/repos", "events_url": "https://api.github.com/users/syabro/events{/privacy}", "received_events_url": "https://api.github.com/users/syabro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-06-27T11:03:50Z", "updated_at": "2017-06-06T17:02:14Z", "closed_at": "2017-06-06T17:02:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nInstalling collected packages: celery-once\nSetting utime for /home/hosts/develop/venv/lib/python2.7/site-packages/tests/conftest.py\nSetting utime for /home/hosts/develop/venv/lib/python2.7/site-packages/tests/__init__.py\nSetting utime for /home/hosts/develop/venv/lib/python2.7/site-packages/tests/__init__.pyc\nSetting utime for /home/hosts/develop/venv/lib/python2.7/site-packages/tests/conftest.pyc\n...\nSuccessfully installed celery-once-0.1.4\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/40", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/40/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/40/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/40", "id": 154154178, "node_id": "MDU6SXNzdWUxNTQxNTQxNzg=", "number": 40, "title": "Using redis through a unix socket", "user": {"login": "sinasaharkhiz", "id": 4835278, "node_id": "MDQ6VXNlcjQ4MzUyNzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4835278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinasaharkhiz", "html_url": "https://github.com/sinasaharkhiz", "followers_url": "https://api.github.com/users/sinasaharkhiz/followers", "following_url": "https://api.github.com/users/sinasaharkhiz/following{/other_user}", "gists_url": "https://api.github.com/users/sinasaharkhiz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinasaharkhiz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinasaharkhiz/subscriptions", "organizations_url": "https://api.github.com/users/sinasaharkhiz/orgs", "repos_url": "https://api.github.com/users/sinasaharkhiz/repos", "events_url": "https://api.github.com/users/sinasaharkhiz/events{/privacy}", "received_events_url": "https://api.github.com/users/sinasaharkhiz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-11T03:46:18Z", "updated_at": "2017-06-06T15:59:29Z", "closed_at": "2017-06-06T15:59:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to use redis with a unix socket instead of TCP connection. I changed ONCE_REDIS_URL (`ONCE_REDIS_URL = 'unix:/tmp/redis.sock:1'`) but I got an error when celery_once tried to set the redis port.\n\n```\n/usr/local/lib/python2.7/dist-packages/redis/connection.pyc in __init__(self, host, port, db, password, socket_timeout, socket_connect_timeout, socket_keepalive, socket_keepalive_options, retry_on_timeout, encoding, encoding_errors, decode_responses, parser_class, socket_read_size)\n    397         self.pid = os.getpid()\n    398         self.host = host\n--> 399         self.port = int(port)\n    400         self.db = db\n    401         self.password = password\n\nTypeError: int() argument must be a string or a number, not 'NoneType'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/36", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/36/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/36/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/36", "id": 133565300, "node_id": "MDU6SXNzdWUxMzM1NjUzMDA=", "number": 36, "title": "Long running tasks do not seem to hold the lock ", "user": {"login": "VidJa", "id": 6108142, "node_id": "MDQ6VXNlcjYxMDgxNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6108142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VidJa", "html_url": "https://github.com/VidJa", "followers_url": "https://api.github.com/users/VidJa/followers", "following_url": "https://api.github.com/users/VidJa/following{/other_user}", "gists_url": "https://api.github.com/users/VidJa/gists{/gist_id}", "starred_url": "https://api.github.com/users/VidJa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VidJa/subscriptions", "organizations_url": "https://api.github.com/users/VidJa/orgs", "repos_url": "https://api.github.com/users/VidJa/repos", "events_url": "https://api.github.com/users/VidJa/events{/privacy}", "received_events_url": "https://api.github.com/users/VidJa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-14T18:33:31Z", "updated_at": "2017-06-06T16:58:51Z", "closed_at": "2017-06-06T16:58:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some very long running processes (48-60h) but I've noticed the running tasks are released before the task finishes an thus other workers start processing the same task. \nIf I simulate the long task by a simple sleep command of a few minutes, all task locks are preserved as expected. Am I missing a setting?\nBelow are my settings for Celery 3.1.20\n\n`# -_\\- coding: utf-8 -_-\nBROKER_URL = 'redis://localhost:6379/8'\n\nBROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 262800}  # 73 hours.\n# Celery result backend\n\nCELERY_RESULT_BACKEND = 'redis://localhost:6379/8'\nCELERY_RESULT_PERSISTENT = True\n\nCELERY_ACKS_LATE = True\nCELERYD_CONCURRENCY = 1\nCELERYD_PREFETCH_MULTIPLIER = 1\n\nCELERY_TASK_SERIALIZER = 'json'\nCELERY_RESULT_SERIALIZER = 'json'\nCELERY_ACCEPT_CONTENT=['json']\nCELERY_TIMEZONE = 'Europe/Amsterdam'\nCELERY_ENABLE_UTC = True\n# List of modules to import when celery starts.\n\nCELERY_IMPORTS = ('worker.tasks', )\n# CeleryOnce for task locking\n\nONCE_REDIS_URL = 'redis://localhost:6379/8'\nONCE_DEFAULT_TIMEOUT = 259200 # 72 hours\n`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/35", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/35/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/35/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/35", "id": 123827602, "node_id": "MDU6SXNzdWUxMjM4Mjc2MDI=", "number": 35, "title": "Support redlock", "user": {"login": "dkiser", "id": 5595213, "node_id": "MDQ6VXNlcjU1OTUyMTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5595213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkiser", "html_url": "https://github.com/dkiser", "followers_url": "https://api.github.com/users/dkiser/followers", "following_url": "https://api.github.com/users/dkiser/following{/other_user}", "gists_url": "https://api.github.com/users/dkiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkiser/subscriptions", "organizations_url": "https://api.github.com/users/dkiser/orgs", "repos_url": "https://api.github.com/users/dkiser/repos", "events_url": "https://api.github.com/users/dkiser/events{/privacy}", "received_events_url": "https://api.github.com/users/dkiser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-24T18:42:12Z", "updated_at": "2017-06-06T17:01:50Z", "closed_at": "2017-06-06T17:01:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given That I am a celery-once consumer, I Should Be Able To Configure the use of [redlock](https://github.com/glasslion/redlock) as provider So That I Can take advantage of the [distlock](http://redis.io/topics/distlock) algorithm to solve redis replication race conditions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/26", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/26/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/26/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/26", "id": 96519341, "node_id": "MDU6SXNzdWU5NjUxOTM0MQ==", "number": 26, "title": "Is there any way to queue a task instead or rejecting it?", "user": {"login": "danechitoaie", "id": 10779010, "node_id": "MDQ6VXNlcjEwNzc5MDEw", "avatar_url": "https://avatars1.githubusercontent.com/u/10779010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danechitoaie", "html_url": "https://github.com/danechitoaie", "followers_url": "https://api.github.com/users/danechitoaie/followers", "following_url": "https://api.github.com/users/danechitoaie/following{/other_user}", "gists_url": "https://api.github.com/users/danechitoaie/gists{/gist_id}", "starred_url": "https://api.github.com/users/danechitoaie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danechitoaie/subscriptions", "organizations_url": "https://api.github.com/users/danechitoaie/orgs", "repos_url": "https://api.github.com/users/danechitoaie/repos", "events_url": "https://api.github.com/users/danechitoaie/events{/privacy}", "received_events_url": "https://api.github.com/users/danechitoaie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-22T09:24:35Z", "updated_at": "2016-12-05T14:21:20Z", "closed_at": "2015-07-29T21:31:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "From what I see in the documentation now if I try to queue same task twice I will get an exception \"AlreadyQueued()\"\n\nIs there any way that the task is still queued but doesn't actually start until the previous one (with same key) is finished instead of just dropping it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/23", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/23/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/23/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/23", "id": 63030126, "node_id": "MDU6SXNzdWU2MzAzMDEyNg==", "number": 23, "title": "Task with base OnceQueue causes my celery task invisible.", "user": {"login": "fatihsucu", "id": 5585735, "node_id": "MDQ6VXNlcjU1ODU3MzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5585735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fatihsucu", "html_url": "https://github.com/fatihsucu", "followers_url": "https://api.github.com/users/fatihsucu/followers", "following_url": "https://api.github.com/users/fatihsucu/following{/other_user}", "gists_url": "https://api.github.com/users/fatihsucu/gists{/gist_id}", "starred_url": "https://api.github.com/users/fatihsucu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fatihsucu/subscriptions", "organizations_url": "https://api.github.com/users/fatihsucu/orgs", "repos_url": "https://api.github.com/users/fatihsucu/repos", "events_url": "https://api.github.com/users/fatihsucu/events{/privacy}", "received_events_url": "https://api.github.com/users/fatihsucu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-19T16:28:37Z", "updated_at": "2017-06-06T15:45:37Z", "closed_at": "2017-06-06T15:45:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i use rabbitmq as my celery broker it works fine. But if i prefer to use redis as celery broker and celery-once broker at same time my `OnceQueue` task becomes invisible. Worker doesn't receive that task.\n\nBy the way, if i remove `OnceQueue` it works fine too.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/19", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/19/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/19/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/19", "id": 59646724, "node_id": "MDU6SXNzdWU1OTY0NjcyNA==", "number": 19, "title": "Key collisions", "user": {"login": "chripede", "id": 406836, "node_id": "MDQ6VXNlcjQwNjgzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/406836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chripede", "html_url": "https://github.com/chripede", "followers_url": "https://api.github.com/users/chripede/followers", "following_url": "https://api.github.com/users/chripede/following{/other_user}", "gists_url": "https://api.github.com/users/chripede/gists{/gist_id}", "starred_url": "https://api.github.com/users/chripede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chripede/subscriptions", "organizations_url": "https://api.github.com/users/chripede/orgs", "repos_url": "https://api.github.com/users/chripede/repos", "events_url": "https://api.github.com/users/chripede/events{/privacy}", "received_events_url": "https://api.github.com/users/chripede/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-03T14:13:23Z", "updated_at": "2016-11-29T14:58:25Z", "closed_at": "2015-03-16T03:18:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When sending Django models as args to tasks, part of the key is generated by converting the model to a string. This causes key collisions for us since we have multiple objects that outputs the same from `__unicode__`\n\nI propose something like this https://github.com/chripede/celery-once/commit/a2b465ce8fd1aa6593cfb5bfe7712320e792bf5f to allow objects to create unique keys.\n\nThe code in my django model would look something like this\n\n```\n    def __unicode__(self):\n        return self.domain\n\n    def celery_once_key(self):\n        return \"{}-{}\".format(self.pk, self.domain)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/18", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/18/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/18/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/18", "id": 59484326, "node_id": "MDU6SXNzdWU1OTQ4NDMyNg==", "number": 18, "title": "UnicodeDecodeError", "user": {"login": "chripede", "id": 406836, "node_id": "MDQ6VXNlcjQwNjgzNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/406836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chripede", "html_url": "https://github.com/chripede", "followers_url": "https://api.github.com/users/chripede/followers", "following_url": "https://api.github.com/users/chripede/following{/other_user}", "gists_url": "https://api.github.com/users/chripede/gists{/gist_id}", "starred_url": "https://api.github.com/users/chripede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chripede/subscriptions", "organizations_url": "https://api.github.com/users/chripede/orgs", "repos_url": "https://api.github.com/users/chripede/repos", "events_url": "https://api.github.com/users/chripede/events{/privacy}", "received_events_url": "https://api.github.com/users/chripede/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 168200378, "node_id": "MDU6TGFiZWwxNjgyMDAzNzg=", "url": "https://api.github.com/repos/cameronmaske/celery-once/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-03-02T14:01:05Z", "updated_at": "2015-03-16T03:08:12Z", "closed_at": "2015-03-16T03:03:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "When one of the parameters is not an ascii character this happens:\n\n```\nTask x[42ce145b-9364-4961-b9ea-12cd192aa49c] raised unexpected: UnicodeDecodeError('ascii', 'l\\xc3\\xa5n', 8, 9, 'ordinal not in range(128)')\n...\n line 76, in queue_once_key\n    key = \"_\".join(keys)\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 8: ordinal not in range(128)\n```\n\nPython 2.7\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/15", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/15/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/15/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/15", "id": 59089959, "node_id": "MDU6SXNzdWU1OTA4OTk1OQ==", "number": 15, "title": "Allow not setting any timeout on the lock", "user": {"login": "brouberol", "id": 480131, "node_id": "MDQ6VXNlcjQ4MDEzMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/480131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brouberol", "html_url": "https://github.com/brouberol", "followers_url": "https://api.github.com/users/brouberol/followers", "following_url": "https://api.github.com/users/brouberol/following{/other_user}", "gists_url": "https://api.github.com/users/brouberol/gists{/gist_id}", "starred_url": "https://api.github.com/users/brouberol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brouberol/subscriptions", "organizations_url": "https://api.github.com/users/brouberol/orgs", "repos_url": "https://api.github.com/users/brouberol/repos", "events_url": "https://api.github.com/users/brouberol/events{/privacy}", "received_events_url": "https://api.github.com/users/brouberol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-02-26T15:38:22Z", "updated_at": "2018-12-08T11:11:21Z", "closed_at": "2018-12-08T11:11:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is more a feature request/suggestion than a bug. \n\nI sugest adding the possibility of setting `timeout = None` on the task (and also on the `ONCE_DEFAULT_TIMEOUT` configuration key). When doing so, no TTL would be set on the lock keys. Only the completion (or the failure) of the task itself would remove the lock, in the `Task.after_return` method.\n\nI think this could be useful in the case of regular tasks with a highly variable time of execution, given the amount of work they have to perform. In this case, we just want to make sure the task is not executed concurrently multiple times, intead of having to guess an appropriate timeout.\n\nIt also should not break any pre-existing behaviour. What do you think? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/11", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/11/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/11/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/11", "id": 58929193, "node_id": "MDU6SXNzdWU1ODkyOTE5Mw==", "number": 11, "title": "Keyword-arg as list of str not handled properly", "user": {"login": "brouberol", "id": 480131, "node_id": "MDQ6VXNlcjQ4MDEzMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/480131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brouberol", "html_url": "https://github.com/brouberol", "followers_url": "https://api.github.com/users/brouberol/followers", "following_url": "https://api.github.com/users/brouberol/following{/other_user}", "gists_url": "https://api.github.com/users/brouberol/gists{/gist_id}", "starred_url": "https://api.github.com/users/brouberol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brouberol/subscriptions", "organizations_url": "https://api.github.com/users/brouberol/orgs", "repos_url": "https://api.github.com/users/brouberol/repos", "events_url": "https://api.github.com/users/brouberol/events{/privacy}", "received_events_url": "https://api.github.com/users/brouberol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 168200378, "node_id": "MDU6TGFiZWwxNjgyMDAzNzg=", "url": "https://api.github.com/repos/cameronmaske/celery-once/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-25T16:37:00Z", "updated_at": "2015-02-27T02:04:47Z", "closed_at": "2015-02-27T02:04:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm facing an issue when sending a keyword argument containing a list of strings.\n\nThe task is called as\n\n``` python\n>>> import_files.delay(access_type='local:files', filepaths=map(os.path.abspath, ['tmp/tmpfile1', 'tmp/tmpfile2'])\n```\n\nThe `getcallargs(self.run, *args, **kwargs)` [call](https://github.com/TrackMaven/celery-once/blob/dbce7508536eb8a2d3184dd2dded42a86357882c/celery_once/tasks.py#L94), returns the following dict:\n\n``` python\n{\n    'access_type': 'local:files', \n    'server': None, \n    'user': None, \n    'filepaths': ['/home/br/code/project/project/tmp/tmpfile1', '/home/br/code/project/project/tmp/tmpfile2'], \n    'password': None\n}\n```\n\nwhich generates the key \n\n``` python\n\"qo_externalapi.tasks.marin.import_marin_files_access_type-local:files_filepaths-['/home/br/code/project/project/tmp/tmpfile1', '/home/br/code/project/project/tmp/tmpfile2']_password-None_server-None_user-None\"\n```\n\nWhen the task call returns, the  `getcallargs(self.run, *args, **kwargs)` [call](https://github.com/TrackMaven/celery-once/blob/dbce7508536eb8a2d3184dd2dded42a86357882c/celery_once/tasks.py#L94) now returns the following dict:\n\n``` python\n{\n    'access_type': 'local:files', \n    'server': None, \n    'user': None, \n    'filepaths': [u'/home/br/code/project/project/tmp/tmpfile1', u'/home/br/code/project/project/tmp/tmpfile2'], \n    'password': None\n}\n```\n\nwhich generates the key \n\n``` python\n\"qo_externalapi.tasks.marin.import_marin_files_access_type-local:files_filepaths-[u'/home/br/code/project/project/tmp/tmpfile1', u'/home/br/code/project/project/tmp/tmpfile2']_password-None_server-None_user-None\"\n```\n\nThe (subtle) difference is that inspect.getcallargs added the \"u\" prefix in front of each string in the `filepaths` kwargs. As this results in two different keys, I can only delay a task once, until the lock expires. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/10", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/10/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/10/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/10", "id": 57250559, "node_id": "MDU6SXNzdWU1NzI1MDU1OQ==", "number": 10, "title": "Advantage over vanilla celery", "user": {"login": "mafrosis", "id": 243851, "node_id": "MDQ6VXNlcjI0Mzg1MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/243851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mafrosis", "html_url": "https://github.com/mafrosis", "followers_url": "https://api.github.com/users/mafrosis/followers", "following_url": "https://api.github.com/users/mafrosis/following{/other_user}", "gists_url": "https://api.github.com/users/mafrosis/gists{/gist_id}", "starred_url": "https://api.github.com/users/mafrosis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mafrosis/subscriptions", "organizations_url": "https://api.github.com/users/mafrosis/orgs", "repos_url": "https://api.github.com/users/mafrosis/repos", "events_url": "https://api.github.com/users/mafrosis/events{/privacy}", "received_events_url": "https://api.github.com/users/mafrosis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-10T22:51:52Z", "updated_at": "2015-02-11T00:06:55Z", "closed_at": "2015-02-10T23:41:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, could you outline the advantage to using `celery_once`, over vanilla `celery`? I can start a worker with `concurrency=1` and route tasks to that to achieve (what appears to be) the same thing. For example:\n\nStart a celery worker with a named queue:\n\n```\ncelery -n conversion-worker -Q conversion --concurrency 1\n```\n\nCelery queues configuration:\n\n```\nconfig['CELERY_QUEUES'] = (\n    Queue('conversion', Exchange('conversion', type='direct'), routing_key='convert'),\n)\n```\n\nAnd route the task to that queue:\n\n```\n@app.celery.task(queue=\"conversion\")\ndef convert():\n    pass\n```\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/9", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/9/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/9/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/9", "id": 56843525, "node_id": "MDU6SXNzdWU1Njg0MzUyNQ==", "number": 9, "title": "Test with real Redis on Travis", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-06T17:43:45Z", "updated_at": "2017-06-06T15:45:21Z", "closed_at": "2017-06-06T15:45:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Travis allows an instance of Redis to be run when testing\n\nhttp://docs.travis-ci.com/user/database-setup/#Redis\n\nIt'd be great if tests ran using that instead of FakeRedis\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/7", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/7/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/7/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/7", "id": 56842685, "node_id": "MDU6SXNzdWU1Njg0MjY4NQ==", "number": 7, "title": "Use SETNX when setting the lock", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-02-06T17:36:56Z", "updated_at": "2018-04-26T08:56:11Z", "closed_at": "2018-04-26T08:56:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://redis.io/commands/setnx\n\nThis would prevent a race condition in which a lock is set multiple times. The result would need to be checked to make sure the lock was successfully set.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/cameronmaske/celery-once/issues/5", "repository_url": "https://api.github.com/repos/cameronmaske/celery-once", "labels_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/5/comments", "events_url": "https://api.github.com/repos/cameronmaske/celery-once/issues/5/events", "html_url": "https://github.com/cameronmaske/celery-once/issues/5", "id": 56817869, "node_id": "MDU6SXNzdWU1NjgxNzg2OQ==", "number": 5, "title": "Support other backends than Redis", "user": {"login": "jezdez", "id": 1610, "node_id": "MDQ6VXNlcjE2MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jezdez", "html_url": "https://github.com/jezdez", "followers_url": "https://api.github.com/users/jezdez/followers", "following_url": "https://api.github.com/users/jezdez/following{/other_user}", "gists_url": "https://api.github.com/users/jezdez/gists{/gist_id}", "starred_url": "https://api.github.com/users/jezdez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jezdez/subscriptions", "organizations_url": "https://api.github.com/users/jezdez/orgs", "repos_url": "https://api.github.com/users/jezdez/repos", "events_url": "https://api.github.com/users/jezdez/events{/privacy}", "received_events_url": "https://api.github.com/users/jezdez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-02-06T14:29:14Z", "updated_at": "2017-06-06T20:17:52Z", "closed_at": "2017-06-06T15:44:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Memcache comes to mind for distributed locks and it'd be nice to use that instead of Redis if it's more likely to be available than Redis\n", "performed_via_github_app": null, "score": 1.0}]}