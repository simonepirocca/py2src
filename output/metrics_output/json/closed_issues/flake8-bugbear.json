{"total_count": 43, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/126", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/126/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/126/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/126", "id": 643814712, "node_id": "MDU6SXNzdWU2NDM4MTQ3MTI=", "number": 126, "title": "Erroneous report message in B014", "user": {"login": "neutrinoceros", "id": 14075922, "node_id": "MDQ6VXNlcjE0MDc1OTIy", "avatar_url": "https://avatars0.githubusercontent.com/u/14075922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neutrinoceros", "html_url": "https://github.com/neutrinoceros", "followers_url": "https://api.github.com/users/neutrinoceros/followers", "following_url": "https://api.github.com/users/neutrinoceros/following{/other_user}", "gists_url": "https://api.github.com/users/neutrinoceros/gists{/gist_id}", "starred_url": "https://api.github.com/users/neutrinoceros/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neutrinoceros/subscriptions", "organizations_url": "https://api.github.com/users/neutrinoceros/orgs", "repos_url": "https://api.github.com/users/neutrinoceros/repos", "events_url": "https://api.github.com/users/neutrinoceros/events{/privacy}", "received_events_url": "https://api.github.com/users/neutrinoceros/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 342183989, "node_id": "MDU6TGFiZWwzNDIxODM5ODk=", "url": "https://api.github.com/repos/PyCQA/flake8-bugbear/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 342183992, "node_id": "MDU6TGFiZWwzNDIxODM5OTI=", "url": "https://api.github.com/repos/PyCQA/flake8-bugbear/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-23T12:49:37Z", "updated_at": "2020-06-30T05:24:58Z", "closed_at": "2020-06-30T05:24:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "flake8 reports on this line\r\n```python\r\n    except (IOError, OSError, ImportError):\r\n```\r\nwith\r\n```\r\nB014 Redundant exception types in `except (IOError, OSError, ImportError):`.  Write `except ImportError:`, which catches exactly the same exceptions.\r\n```\r\n\r\nI believe this message is incorrect, as is demonstrated by the following snippets\r\n\r\n```python\r\ntry:\r\n    raise OSError\r\nexcept ImportError:\r\n    print(\"gotcha\")\r\n# OSError is raised\r\n```\r\n\r\n```python\r\ntry:\r\n    raise IOError\r\nexcept ImportError:\r\n    print(\"gotcha\")\r\n# IOError is raised\r\n```\r\n\r\nHowever\r\n```python\r\ntry:\r\n    raise OSError\r\nexcept IOError:\r\n    print(\"gotcha\")\r\n# ... \"gotcha\"\r\n```\r\n\r\n```python\r\ntry:\r\n    raise IOError\r\nexcept OSError:\r\n    print(\"gotcha\")\r\n# ... \"gotcha\"\r\n```\r\n\r\nSo  the original line is indeed redundant, but the report message is misleading", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/120", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/120/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/120/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/120", "id": 597285422, "node_id": "MDU6SXNzdWU1OTcyODU0MjI=", "number": 120, "title": "B009 inconsistent behaviour with default argument", "user": {"login": "vchaptsev", "id": 9744948, "node_id": "MDQ6VXNlcjk3NDQ5NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9744948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vchaptsev", "html_url": "https://github.com/vchaptsev", "followers_url": "https://api.github.com/users/vchaptsev/followers", "following_url": "https://api.github.com/users/vchaptsev/following{/other_user}", "gists_url": "https://api.github.com/users/vchaptsev/gists{/gist_id}", "starred_url": "https://api.github.com/users/vchaptsev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vchaptsev/subscriptions", "organizations_url": "https://api.github.com/users/vchaptsev/orgs", "repos_url": "https://api.github.com/users/vchaptsev/repos", "events_url": "https://api.github.com/users/vchaptsev/events{/privacy}", "received_events_url": "https://api.github.com/users/vchaptsev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-09T13:32:35Z", "updated_at": "2020-04-09T13:39:56Z", "closed_at": "2020-04-09T13:39:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I guess it should be consistent\r\n\r\nExample:\r\n```python\r\n# no warnings\r\ngetattr(obj, 'attr', None)\r\n\r\n# B009\r\ngetattr(obj, 'attr', default=None)\r\n```\r\n\r\nAdditional context:\r\npython3.7.3\r\nflake8-bugbear==20.1.4", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/114", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/114/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/114/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/114", "id": 551940409, "node_id": "MDU6SXNzdWU1NTE5NDA0MDk=", "number": 114, "title": "Feature request: unreachable code detection", "user": {"login": "joaoe", "id": 461983, "node_id": "MDQ6VXNlcjQ2MTk4Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/461983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joaoe", "html_url": "https://github.com/joaoe", "followers_url": "https://api.github.com/users/joaoe/followers", "following_url": "https://api.github.com/users/joaoe/following{/other_user}", "gists_url": "https://api.github.com/users/joaoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/joaoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joaoe/subscriptions", "organizations_url": "https://api.github.com/users/joaoe/orgs", "repos_url": "https://api.github.com/users/joaoe/repos", "events_url": "https://api.github.com/users/joaoe/events{/privacy}", "received_events_url": "https://api.github.com/users/joaoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-19T15:36:50Z", "updated_at": "2020-01-22T08:03:39Z", "closed_at": "2020-01-22T08:03:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**The use case**\r\n\r\nConsider some cases, which have happened to me.\r\n\r\n1. You have code like:\r\n```\r\nfoo()\r\nif bar():\r\n  foo()\r\n```\r\nand you want to force some condition to test/debug, so you change the conditions to `if 1 or bar()` or `if False and ...`.\r\n\r\n2. For the same reason, in some complex code flow, you inject a couple of `raise`, `assert` or `return` and forget to remove them.\r\n\r\n3. Instead of writing\r\n```\r\nassert 0, \"message\"\r\n```\r\nyou write\r\n```\r\nassert \"message\"\r\n```\r\n\r\n4. Subtle misunderstanding of how `while/else` works\r\n```\r\nwhile True:\r\n  if something_2:\r\n    break\r\n  do_work()\r\nelse:\r\n  do_more_work()\r\n```\r\nGiven the loop needs to be forcefully stopped with `break`, the `else` block will never run.\r\n\r\n5. Infinite loops\r\n```\r\nwhile True:\r\n  client = listen()\r\n  client.do_stuff()\r\n```\r\nIn this case `listen` could `raise` an exception, but it is not readable at all from the code and a bad practice.\r\n\r\n6. Others....\r\n\r\n**The feature**\r\n\r\nThe feature should warn the user when specific blocks of code are not reachable at all, because of such \"bugs\" with control statements.\r\nPremises:\r\n1. constant expressions in `if`, `while` (only false), and `assert` are a bug/evil and they negate the benefit of using a control statement.\r\n1.1. `if` or `while` with a constant expression should be fixed or removed.\r\n1.2. `assert True-ish` is a useless statement and most likely a bug, while `assert False-ish` is commonly used, but should ideally be replaced with a `raise`statement always.\r\n2. assume that `while True-ish` blocks without any `break`, `return`, `raise` or `assert` will never break. This might cause a false positive in the case the loop calls a function that throws an error. But that is poorly designed code and how code execution runs is not immediately readable.\r\n\r\nThe new warnings:\r\n* B01x constants expressions in control statements\r\n* B01x+1 unreachable code\r\n* B01x+2 infinite loop\r\n\r\n**For discussion**\r\n\r\nWhile this would be quite usable for mode code examples, there are some instances which I think will raise some protest\r\n\r\n1. Disabling code on purpose\r\n```\r\nif False:\r\n  disabled_code()\r\n```\r\nThere is no way to know if this was intentional or not. But `flake8` itself has some instances of a `if False` to disable some `import`s.\r\nProposal: `if False` or `if 0` in the Module context become opinionated warnings, B91x\r\n\r\n2. The infamous `assert 0` or any other false-like value. This is quite valid for unit tests. For prodution code, people might run with `assert`s disabled.\r\nProposal: all `assert False-ish` become `B011`, not just with a `False` literal. This will trap more cases, more people will get annoyed, but it's for a good cause. If you want your code to return, use a `raise` statement. This stays enabled by default. It's up to `flake8` to give the option of disabling specific warnings per folder/path.\r\n\r\n3. I have seen some code with infinite loops without any statement that breaks the loop, for instance in `pyparsing`.\r\nProposal: none. This is just a bad way to design your code. But if people insist, detect a `while True-ish` loop child of a `try` block and use a opinionated warning `B91x+2.\r\n\r\n**Status**\r\nI have implemented all of this, with the exception of the opinionated bits, and flagging all `assert False-ish` as B011.\r\nSo, I'd like first to discuss the bits above.\r\nThe feature adds new ~700 lines of code and 1000 lines of testing code.\r\nIt includes a class that evaluates all types of constant conditional expressions supporting short circuiting.\r\nIs this code you/we'd be willing to maintain in bug bear or should I give this to some other plugin or maintain it myself (not so happy about that) ? \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/113", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/113/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/113/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/113", "id": 551921927, "node_id": "MDU6SXNzdWU1NTE5MjE5Mjc=", "number": 113, "title": "B009 false positive when attribute is not a keyword", "user": {"login": "pkolbus", "id": 16658020, "node_id": "MDQ6VXNlcjE2NjU4MDIw", "avatar_url": "https://avatars2.githubusercontent.com/u/16658020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pkolbus", "html_url": "https://github.com/pkolbus", "followers_url": "https://api.github.com/users/pkolbus/followers", "following_url": "https://api.github.com/users/pkolbus/following{/other_user}", "gists_url": "https://api.github.com/users/pkolbus/gists{/gist_id}", "starred_url": "https://api.github.com/users/pkolbus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pkolbus/subscriptions", "organizations_url": "https://api.github.com/users/pkolbus/orgs", "repos_url": "https://api.github.com/users/pkolbus/repos", "events_url": "https://api.github.com/users/pkolbus/events{/privacy}", "received_events_url": "https://api.github.com/users/pkolbus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-19T13:25:23Z", "updated_at": "2020-01-29T03:03:17Z", "closed_at": "2020-01-29T03:03:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When the attribute is not a valid Python token, use of `getattr` can be required; flake8-bugbear emits a B009.\r\n\r\nExample:\r\n\r\n    class DictProxy():\r\n\r\n        def __init__(self, data):\r\n            self._data = data\r\n\r\n        def __getattr__(self, key):\r\n            try:\r\n                return self._data[key]\r\n            except KeyError:\r\n                raise AttributeError\r\n\r\n\r\n    d = DictProxy({\"foo\": \"bar\", \"123\": \"456\"})\r\n    print(d.foo)\r\n    print(getattr(d, \"123\"))    # B009\r\n\r\nThe implied suggestion, `d.123`, would be a SyntaxError.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/112", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/112/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/112/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/112", "id": 550169579, "node_id": "MDU6SXNzdWU1NTAxNjk1Nzk=", "number": 112, "title": "Clarify how to enable opinionated warnings", "user": {"login": "RazerM", "id": 1337586, "node_id": "MDQ6VXNlcjEzMzc1ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1337586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RazerM", "html_url": "https://github.com/RazerM", "followers_url": "https://api.github.com/users/RazerM/followers", "following_url": "https://api.github.com/users/RazerM/following{/other_user}", "gists_url": "https://api.github.com/users/RazerM/gists{/gist_id}", "starred_url": "https://api.github.com/users/RazerM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RazerM/subscriptions", "organizations_url": "https://api.github.com/users/RazerM/orgs", "repos_url": "https://api.github.com/users/RazerM/repos", "events_url": "https://api.github.com/users/RazerM/events{/privacy}", "received_events_url": "https://api.github.com/users/RazerM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-15T12:55:55Z", "updated_at": "2020-01-29T03:02:49Z", "closed_at": "2020-01-29T03:02:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "The section does not mention that ignore has to be overridden, which was non-obvious to me. I was attempting to use extend-ignore for E501, and so never saw B950 warnings because it was still in the ignore list as added by flake8-bugbear.\r\n\r\nThe README says:\r\n\r\n> To enable these checks, specify a `--select` command-line option or\r\n`select=` option in your config file.  As of Flake8 3.0, this option\r\nis a whitelist (checks not listed are being implicitly disabled), so you\r\nhave to explicitly specify all checks you want enabled. For example:\r\n>\r\n> ```\r\n> [flake8]\r\n> max-line-length = 80\r\n> max-complexity = 12\r\n> ...\r\n> select = C,E,F,W,B,B901\r\n> ```\r\n\r\nExample (no output from flake8):\r\n```\r\n$ pip install flake8 flake8-bugbear\r\n$ printf '#%.0s' {0..100} > test.py\r\n$ flake8 --select E,B9 --extend-ignore=E501 test.py\r\n```\r\n\r\nignore must be set before there is any output:\r\n\r\n```\r\n$ flake8 --select E,B9 --ignore=E501 test.py\r\ntest.py:1:101: B950 line too long (100 > 79 characters)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/110", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/110/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/110/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/110", "id": 545545887, "node_id": "MDU6SXNzdWU1NDU1NDU4ODc=", "number": 110, "title": "B014 recommends `except ():`", "user": {"login": "robinst", "id": 16778, "node_id": "MDQ6VXNlcjE2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/16778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robinst", "html_url": "https://github.com/robinst", "followers_url": "https://api.github.com/users/robinst/followers", "following_url": "https://api.github.com/users/robinst/following{/other_user}", "gists_url": "https://api.github.com/users/robinst/gists{/gist_id}", "starred_url": "https://api.github.com/users/robinst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robinst/subscriptions", "organizations_url": "https://api.github.com/users/robinst/orgs", "repos_url": "https://api.github.com/users/robinst/repos", "events_url": "https://api.github.com/users/robinst/events{/privacy}", "received_events_url": "https://api.github.com/users/robinst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 342183989, "node_id": "MDU6TGFiZWwzNDIxODM5ODk=", "url": "https://api.github.com/repos/PyCQA/flake8-bugbear/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 342183992, "node_id": "MDU6TGFiZWwzNDIxODM5OTI=", "url": "https://api.github.com/repos/PyCQA/flake8-bugbear/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-06T05:22:40Z", "updated_at": "2020-06-30T05:24:58Z", "closed_at": "2020-06-30T05:24:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the following code:\r\n\r\n```\r\n    try:\r\n        with open(fn) as f:\r\n            return f.read().split('\\n')\r\n    except (OSError, IOError):\r\n        pass\r\n```\r\n\r\nThe new B014 warning shows this:\r\n\r\n> B014 Redundant exception types in `except (OSError, IOError):`.  Write `except ():`, which catches exactly the same exceptions.\r\n\r\nDoesn't seem to make sense to me. Is this a bug :bear:?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/108", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/108/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/108/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/108", "id": 545465654, "node_id": "MDU6SXNzdWU1NDU0NjU2NTQ=", "number": 108, "title": "Version 20.1.1, AttributeError: 'Attribute' object has no attribute 'id'", "user": {"login": "AlexandreYang", "id": 49917914, "node_id": "MDQ6VXNlcjQ5OTE3OTE0", "avatar_url": "https://avatars0.githubusercontent.com/u/49917914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexandreYang", "html_url": "https://github.com/AlexandreYang", "followers_url": "https://api.github.com/users/AlexandreYang/followers", "following_url": "https://api.github.com/users/AlexandreYang/following{/other_user}", "gists_url": "https://api.github.com/users/AlexandreYang/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexandreYang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexandreYang/subscriptions", "organizations_url": "https://api.github.com/users/AlexandreYang/orgs", "repos_url": "https://api.github.com/users/AlexandreYang/repos", "events_url": "https://api.github.com/users/AlexandreYang/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexandreYang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-05T20:55:52Z", "updated_at": "2020-01-06T11:29:21Z", "closed_at": "2020-01-06T02:03:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "CC @Zac-HD @cooperlees \r\n\r\nHey, we are getting this error after upgrade to `flake8-bugbear==20.1.1` (`20.1.0` works fine):\r\n\r\n```\r\n  File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/bugbear.py\", line 150, in visit_ExceptHandler\r\n    names.append(\"{}.{}\".format(e.value.id, e.attr))\r\nAttributeError: 'Attribute' object has no attribute 'id'\r\n```\r\n\r\n<details><summary>Show full stacktrace</summary>\r\n<p>\r\n\r\n```\r\n2020-01-05T19:55:25.4865073Z Traceback (most recent call last):\r\n2020-01-05T19:55:25.4865330Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/multiprocessing/pool.py\", line 121, in worker\r\n2020-01-05T19:55:25.4865652Z     result = (True, func(*args, **kwds))\r\n2020-01-05T19:55:25.4866300Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/flake8/checker.py\", line 666, in _run_checks\r\n2020-01-05T19:55:25.4866616Z     return checker.run_checks()\r\n2020-01-05T19:55:25.4867190Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/flake8/checker.py\", line 598, in run_checks\r\n2020-01-05T19:55:25.4867536Z     self.run_ast_checks()\r\n2020-01-05T19:55:25.4868064Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/flake8/checker.py\", line 502, in run_ast_checks\r\n2020-01-05T19:55:25.4868414Z     for (line_number, offset, text, check) in runner:\r\n2020-01-05T19:55:25.4868944Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/bugbear.py\", line 34, in run\r\n2020-01-05T19:55:25.4869587Z     visitor.visit(self.tree)\r\n2020-01-05T19:55:25.4870122Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/bugbear.py\", line 135, in visit\r\n2020-01-05T19:55:25.4870474Z     super().visit(node)\r\n2020-01-05T19:55:25.4870764Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/ast.py\", line 271, in visit\r\n2020-01-05T19:55:25.4871012Z     return visitor(node)\r\n2020-01-05T19:55:25.4871300Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/ast.py\", line 279, in generic_visit\r\n2020-01-05T19:55:25.4871543Z     self.visit(item)\r\n2020-01-05T19:55:25.4872360Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/bugbear.py\", line 135, in visit\r\n2020-01-05T19:55:25.4872950Z     super().visit(node)\r\n2020-01-05T19:55:25.4877504Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/ast.py\", line 271, in visit\r\n2020-01-05T19:55:25.4878104Z     return visitor(node)\r\n2020-01-05T19:55:25.4878934Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/bugbear.py\", line 271, in visit_ClassDef\r\n2020-01-05T19:55:25.4879331Z     self.generic_visit(node)\r\n2020-01-05T19:55:25.4879809Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/ast.py\", line 279, in generic_visit\r\n2020-01-05T19:55:25.4880331Z     self.visit(item)\r\n2020-01-05T19:55:25.4881377Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/bugbear.py\", line 135, in visit\r\n2020-01-05T19:55:25.4881709Z     super().visit(node)\r\n2020-01-05T19:55:25.4882043Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/ast.py\", line 271, in visit\r\n2020-01-05T19:55:25.4882366Z     return visitor(node)\r\n2020-01-05T19:55:25.4882948Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/bugbear.py\", line 267, in visit_FunctionDef\r\n2020-01-05T19:55:25.4883342Z     self.generic_visit(node)\r\n2020-01-05T19:55:25.4883633Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/ast.py\", line 279, in generic_visit\r\n2020-01-05T19:55:25.4883977Z     self.visit(item)\r\n2020-01-05T19:55:25.4884933Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/bugbear.py\", line 135, in visit\r\n2020-01-05T19:55:25.4885248Z     super().visit(node)\r\n2020-01-05T19:55:25.4885698Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/ast.py\", line 271, in visit\r\n2020-01-05T19:55:25.4885947Z     return visitor(node)\r\n2020-01-05T19:55:25.4886510Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/bugbear.py\", line 275, in visit_Try\r\n2020-01-05T19:55:25.4886861Z     self.generic_visit(node)\r\n2020-01-05T19:55:25.4887118Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/ast.py\", line 279, in generic_visit\r\n2020-01-05T19:55:25.4887411Z     self.visit(item)\r\n2020-01-05T19:55:25.4887925Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/bugbear.py\", line 135, in visit\r\n2020-01-05T19:55:25.4888484Z     super().visit(node)\r\n2020-01-05T19:55:25.4888758Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/ast.py\", line 271, in visit\r\n2020-01-05T19:55:25.4889062Z     return visitor(node)\r\n2020-01-05T19:55:25.4889660Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/bugbear.py\", line 150, in visit_ExceptHandler\r\n2020-01-05T19:55:25.4889978Z     names.append(\"{}.{}\".format(e.value.id, e.attr))\r\n2020-01-05T19:55:25.4890750Z AttributeError: 'Attribute' object has no attribute 'id'\r\n2020-01-05T19:55:25.4891043Z \"\"\"\r\n2020-01-05T19:55:25.4891306Z \r\n2020-01-05T19:55:25.4891553Z The above exception was the direct cause of the following exception:\r\n2020-01-05T19:55:25.4891824Z \r\n2020-01-05T19:55:25.4892056Z Traceback (most recent call last):\r\n2020-01-05T19:55:25.4892362Z   File \"/home/vsts/work/1/s/druid/.tox/style/bin/flake8\", line 8, in <module>\r\n2020-01-05T19:55:25.4892770Z     sys.exit(main())\r\n2020-01-05T19:55:25.4893338Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/flake8/main/cli.py\", line 18, in main\r\n2020-01-05T19:55:25.4893850Z     app.run(argv)\r\n2020-01-05T19:55:25.4894513Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/flake8/main/application.py\", line 393, in run\r\n2020-01-05T19:55:25.4894897Z     self._run(argv)\r\n2020-01-05T19:55:25.4896230Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/flake8/main/application.py\", line 381, in _run\r\n2020-01-05T19:55:25.4896613Z     self.run_checks()\r\n2020-01-05T19:55:25.4897283Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/flake8/main/application.py\", line 300, in run_checks\r\n2020-01-05T19:55:25.4897588Z     self.file_checker_manager.run()\r\n2020-01-05T19:55:25.4898100Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/flake8/checker.py\", line 329, in run\r\n2020-01-05T19:55:25.4898390Z     self.run_parallel()\r\n2020-01-05T19:55:25.4899047Z   File \"/home/vsts/work/1/s/druid/.tox/style/lib/python3.7/site-packages/flake8/checker.py\", line 293, in run_parallel\r\n2020-01-05T19:55:25.4899688Z     for ret in pool_map:\r\n2020-01-05T19:55:25.4899922Z   File \"/opt/hostedtoolcache/Python/3.7.5/x64/lib/python3.7/multiprocessing/pool.py\", line 748, in next\r\n2020-01-05T19:55:25.4900110Z     raise value\r\n2020-01-05T19:55:25.4900577Z AttributeError: 'Attribute' object has no attribute 'id'\r\n2020-01-05T19:55:25.5194690Z \u001b[31mERROR: InvocationError for command /home/vsts/work/1/s/druid/.tox/style/bin/flake8 --config=../.flake8 . (exited with code 1)\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\nThis can be reproduced with this minimal case:\r\n\r\n```\r\nimport requests\r\n\r\ndef foo():\r\n    try:\r\n        pass\r\n    except (requests.exceptions.RequestException, AttributeError):\r\n        pass\r\n```\r\n\r\nflake8 config\r\n```\r\n# TODO: port this to pyproject.toml when supported: https://gitlab.com/pycqa/flake8/merge_requests/245\r\n\r\n[flake8]\r\nselect = B,C,E,F,W,B001,B003,B006,B007,B301,B305,B306,B902\r\n# Ignore reasons:\r\n# - G200: logging exception is ok, we don't always want to log the stack trace too\r\nignore = E203,E722,W503,G200\r\nexclude = .eggs,.tox,build,compat.py,__init__.py,datadog_checks/dev/tooling/templates/*,datadog_checks/*/vendor/*\r\nmax-line-length = 120\r\n```\r\n\r\nWhen `requests.exceptions.RequestException` is changed to something else like `IndexError`, it works fine. So, somehow when using `requests.exceptions.RequestException`, the `Attribute.id` is missing.\r\n\r\nAny idea why?\r\n\r\n## Additional info\r\n\r\nConcrete CI fail example: https://dev.azure.com/datadoghq/integrations-core/_build/results?buildId=6209&view=logs&jobId=5e7fd8a3-b132-5246-3e9c-553f252343b6&j=6856723d-645b-5a7b-98a0-8af874afe33f&t=763e838c-8ffd-5432-4e53-c53eda38d033\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/106", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/106/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/106/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/106", "id": 545302648, "node_id": "MDU6SXNzdWU1NDUzMDI2NDg=", "number": 106, "title": "B012 false positive when break is in a loop in a finally block", "user": {"login": "davidism", "id": 1242887, "node_id": "MDQ6VXNlcjEyNDI4ODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1242887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidism", "html_url": "https://github.com/davidism", "followers_url": "https://api.github.com/users/davidism/followers", "following_url": "https://api.github.com/users/davidism/following{/other_user}", "gists_url": "https://api.github.com/users/davidism/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidism/subscriptions", "organizations_url": "https://api.github.com/users/davidism/orgs", "repos_url": "https://api.github.com/users/davidism/repos", "events_url": "https://api.github.com/users/davidism/events{/privacy}", "received_events_url": "https://api.github.com/users/davidism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-04T16:19:47Z", "updated_at": "2020-01-11T17:35:10Z", "closed_at": "2020-01-05T02:05:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "#99 and #100 added a new check B012 warning about `return`/`continue`/`break` inside `finally` blocks. The implementation raises a false positive when the `continue` or `break` is in a loop in the `finally` block.\r\n\r\nHere's some [code in Werkzeug](https://github.com/pallets/werkzeug/blob/ea0d6b95fb118f33025163b7441577ee5755d971/src/werkzeug/formparser.py#L126-L142) demonstrating the issue.\r\n\r\n```python\r\ndef exhaust_stream(f):\r\n    \"\"\"Helper decorator for methods that exhausts the stream on return.\"\"\"\r\n\r\n    def wrapper(self, stream, *args, **kwargs):\r\n        try:\r\n            return f(self, stream, *args, **kwargs)\r\n        finally:\r\n            exhaust = getattr(stream, \"exhaust\", None)\r\n            if exhaust is not None:\r\n                exhaust()\r\n            else:\r\n                while 1:\r\n                    chunk = stream.read(1024 * 64)\r\n                    if not chunk:\r\n                        break\r\n\r\n    return update_wrapper(wrapper, f)\r\n```\r\n\r\nPerhaps the code itself could be written differently regardless, I haven't gone down that path yet. But it doesn't seem like the code would cause exceptions to be silenced, which is what B012 is warning about.\r\n\r\ncc @joaoe ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/99", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/99/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/99/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/99", "id": 544181718, "node_id": "MDU6SXNzdWU1NDQxODE3MTg=", "number": 99, "title": "Warn about continue/return/break in finally block", "user": {"login": "joaoe", "id": 461983, "node_id": "MDQ6VXNlcjQ2MTk4Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/461983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joaoe", "html_url": "https://github.com/joaoe", "followers_url": "https://api.github.com/users/joaoe/followers", "following_url": "https://api.github.com/users/joaoe/following{/other_user}", "gists_url": "https://api.github.com/users/joaoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/joaoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joaoe/subscriptions", "organizations_url": "https://api.github.com/users/joaoe/orgs", "repos_url": "https://api.github.com/users/joaoe/repos", "events_url": "https://api.github.com/users/joaoe/events{/privacy}", "received_events_url": "https://api.github.com/users/joaoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 342183991, "node_id": "MDU6TGFiZWwzNDIxODM5OTE=", "url": "https://api.github.com/repos/PyCQA/flake8-bugbear/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-31T12:48:28Z", "updated_at": "2020-01-01T23:07:30Z", "closed_at": "2020-01-01T23:07:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I reported this issue originally to pyflakes but they decided that is it not an error, and hence it should better be flagged as a warning by flake8-bugbear.\r\n\r\nThe issue:\r\n```\r\ntry:\r\n    raise ValueError(1)\r\nfinally:\r\n  return # or break or continue\r\n```\r\nwill silence the exception. Same with a `break` or `continue` statement in Python 3.8+, which has since been allowed in `finally` blocks. If there is a desire to silence the exception, they should explicitly be silenced in an `except` block. Putting a `if something: return` in a `finally` block is something I've done before, thinking that the exception would always be propagated, but it is actually not the case.\r\n\r\nAnother edge case\r\n```\r\ndef a():\r\n  try:\r\n    return 1\r\n  finally:\r\n    return 2\r\n\r\na() = ?\r\n```\r\nWhich value is returned ?\r\n\r\n**References**\r\n* original pyflakes issue about `return` in `finally` https://github.com/PyCQA/pyflakes/issues/404\r\n* pyflakes adding support for `continue` in `finally` https://github.com/PyCQA/pyflakes/pull/476\r\n* a PEP proposal to forbid return+continue in finally https://www.python.org/dev/peps/pep-0601/ \r\n* returns in finally are generally considered a bad practice. https://cwe.mitre.org/data/definitions/584.html\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/98", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/98/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/98/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/98", "id": 543341604, "node_id": "MDU6SXNzdWU1NDMzNDE2MDQ=", "number": 98, "title": "Warn on useless entries in multi-type `except` clauses", "user": {"login": "Zac-HD", "id": 12229877, "node_id": "MDQ6VXNlcjEyMjI5ODc3", "avatar_url": "https://avatars1.githubusercontent.com/u/12229877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zac-HD", "html_url": "https://github.com/Zac-HD", "followers_url": "https://api.github.com/users/Zac-HD/followers", "following_url": "https://api.github.com/users/Zac-HD/following{/other_user}", "gists_url": "https://api.github.com/users/Zac-HD/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zac-HD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zac-HD/subscriptions", "organizations_url": "https://api.github.com/users/Zac-HD/orgs", "repos_url": "https://api.github.com/users/Zac-HD/repos", "events_url": "https://api.github.com/users/Zac-HD/events{/privacy}", "received_events_url": "https://api.github.com/users/Zac-HD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-29T09:02:37Z", "updated_at": "2020-01-04T17:38:59Z", "closed_at": "2020-01-04T17:38:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When using a tuple of exception types in an `except` clause, it's easy for inexperienced Pythonistas to include elements that don't have any function at all.  For example:\r\n\r\n```python\r\n# TypeError is a subclass of Exception, so it doesn't add anything\r\ntry: ...\r\nexcept (Exception, TypeError): ...\r\n\r\n# Duplicate exception types are useless\r\ntry: ...\r\nexcept (OSError, OSError): ...\r\n\r\n# Literal single-element tuple is pointless complexity\r\ntry: ...\r\nexcept (ValueError,): ...\r\n```\r\n\r\nIt would be nice if `flake8-bugbear` could warn about these, or at least about the first!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/95", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/95/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/95/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/95", "id": 514882732, "node_id": "MDU6SXNzdWU1MTQ4ODI3MzI=", "number": 95, "title": "Replace `python setup.py test` in CI", "user": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-30T18:17:13Z", "updated_at": "2020-01-01T23:53:46Z", "closed_at": "2020-01-01T23:53:46Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Setuptools has deprecated this. Lets run tests with `coverage` or `tox` or some other runner. My vote is for coverage so we can enforce / print out stats there.\r\n\r\n## Setuptools Deprecation Issues for reference:\r\n- https://github.com/pytest-dev/pytest/issues/5534\r\n- https://github.com/pytest-dev/pytest/issues/5534", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/94", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/94/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/94/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/94", "id": 512798115, "node_id": "MDU6SXNzdWU1MTI3OTgxMTU=", "number": 94, "title": "Proposed check: use suppress context manager", "user": {"login": "atugushev", "id": 7377671, "node_id": "MDQ6VXNlcjczNzc2NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7377671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atugushev", "html_url": "https://github.com/atugushev", "followers_url": "https://api.github.com/users/atugushev/followers", "following_url": "https://api.github.com/users/atugushev/following{/other_user}", "gists_url": "https://api.github.com/users/atugushev/gists{/gist_id}", "starred_url": "https://api.github.com/users/atugushev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atugushev/subscriptions", "organizations_url": "https://api.github.com/users/atugushev/orgs", "repos_url": "https://api.github.com/users/atugushev/repos", "events_url": "https://api.github.com/users/atugushev/events{/privacy}", "received_events_url": "https://api.github.com/users/atugushev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-10-26T06:28:41Z", "updated_at": "2020-02-28T09:11:05Z", "closed_at": "2020-02-28T09:11:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Instead of\r\n\r\n```python\r\ntry:\r\n    do_something()\r\nexcept RuntimeError:\r\n    pass\r\n```\r\n\r\nsuggest using\r\n\r\n```python\r\nwith contextlib.suppress(RuntimeError):\r\n    do_something()\r\n```\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/92", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/92/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/92/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/92", "id": 506299504, "node_id": "MDU6SXNzdWU1MDYyOTk1MDQ=", "number": 92, "title": "Clarify why warnings \"don't belong in pyflakes and pycodestyle\"", "user": {"login": "l0b0", "id": 168301, "node_id": "MDQ6VXNlcjE2ODMwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/168301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/l0b0", "html_url": "https://github.com/l0b0", "followers_url": "https://api.github.com/users/l0b0/followers", "following_url": "https://api.github.com/users/l0b0/following{/other_user}", "gists_url": "https://api.github.com/users/l0b0/gists{/gist_id}", "starred_url": "https://api.github.com/users/l0b0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/l0b0/subscriptions", "organizations_url": "https://api.github.com/users/l0b0/orgs", "repos_url": "https://api.github.com/users/l0b0/repos", "events_url": "https://api.github.com/users/l0b0/events{/privacy}", "received_events_url": "https://api.github.com/users/l0b0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-13T09:48:16Z", "updated_at": "2019-11-07T13:37:06Z", "closed_at": "2019-11-07T13:37:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Many of these seem like useful warnings, so I don't get why you say they don't belong in the main projects. Why not just make them disabled by default there?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/89", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/89/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/89/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/89", "id": 493179989, "node_id": "MDU6SXNzdWU0OTMxNzk5ODk=", "number": 89, "title": "test_selfclean_bugbear fails with PyPI sdist", "user": {"login": "scarabeusiv", "id": 1055830, "node_id": "MDQ6VXNlcjEwNTU4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarabeusiv", "html_url": "https://github.com/scarabeusiv", "followers_url": "https://api.github.com/users/scarabeusiv/followers", "following_url": "https://api.github.com/users/scarabeusiv/following{/other_user}", "gists_url": "https://api.github.com/users/scarabeusiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarabeusiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarabeusiv/subscriptions", "organizations_url": "https://api.github.com/users/scarabeusiv/orgs", "repos_url": "https://api.github.com/users/scarabeusiv/repos", "events_url": "https://api.github.com/users/scarabeusiv/events{/privacy}", "received_events_url": "https://api.github.com/users/scarabeusiv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 342183989, "node_id": "MDU6TGFiZWwzNDIxODM5ODk=", "url": "https://api.github.com/repos/PyCQA/flake8-bugbear/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-13T07:38:26Z", "updated_at": "2020-01-01T23:42:24Z", "closed_at": "2020-01-01T23:42:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "When packaging the 19.8.0 release the test fails (openSUSE; python 3.7):\r\n\r\n```\r\n[    4s] ======================================================================\r\n[    4s] FAIL: test_selfclean_bugbear (tests.test_bugbear.BugbearTestCase)\r\n[    4s] ----------------------------------------------------------------------\r\n[    4s] Traceback (most recent call last):\r\n[    4s]   File \"/home/abuild/rpmbuild/BUILD/flake8-bugbear-19.8.0/tests/test_bugbear.py\", line 200, in test_selfclean_bugbear\r\n[    4s]     self.assertEqual(proc.returncode, 0, proc.stdout.decode(\"utf8\"))\r\n[    4s] AssertionError: 1 != 0 : /home/abuild/rpmbuild/BUILD/flake8-bugbear-19.8.0/bugbear.py:133:67: E203 whitespace before ':'\r\n[    4s] \r\n[    4s] \r\n[    4s] ----------------------------------------------------------------------\r\n\r\n```\r\n\r\nFor the complete log with the dependencies see: \r\n[bugbear.txt](https://github.com/PyCQA/flake8-bugbear/files/3608881/bugbear.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/88", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/88/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/88/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/88", "id": 493177988, "node_id": "MDU6SXNzdWU0OTMxNzc5ODg=", "number": 88, "title": "Missing tag for 19.8.0", "user": {"login": "scarabeusiv", "id": 1055830, "node_id": "MDQ6VXNlcjEwNTU4MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1055830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scarabeusiv", "html_url": "https://github.com/scarabeusiv", "followers_url": "https://api.github.com/users/scarabeusiv/followers", "following_url": "https://api.github.com/users/scarabeusiv/following{/other_user}", "gists_url": "https://api.github.com/users/scarabeusiv/gists{/gist_id}", "starred_url": "https://api.github.com/users/scarabeusiv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scarabeusiv/subscriptions", "organizations_url": "https://api.github.com/users/scarabeusiv/orgs", "repos_url": "https://api.github.com/users/scarabeusiv/repos", "events_url": "https://api.github.com/users/scarabeusiv/events{/privacy}", "received_events_url": "https://api.github.com/users/scarabeusiv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-09-13T07:32:18Z", "updated_at": "2019-09-13T07:37:26Z", "closed_at": "2019-09-13T07:37:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "$SUBJ says it all. The package is on pypi but the tag is not present here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/87", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/87/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/87/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/87", "id": 484643508, "node_id": "MDU6SXNzdWU0ODQ2NDM1MDg=", "number": 87, "title": "B007 triggers when loop variable is used after loop", "user": {"login": "kerrick-lyft", "id": 15618653, "node_id": "MDQ6VXNlcjE1NjE4NjUz", "avatar_url": "https://avatars1.githubusercontent.com/u/15618653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kerrick-lyft", "html_url": "https://github.com/kerrick-lyft", "followers_url": "https://api.github.com/users/kerrick-lyft/followers", "following_url": "https://api.github.com/users/kerrick-lyft/following{/other_user}", "gists_url": "https://api.github.com/users/kerrick-lyft/gists{/gist_id}", "starred_url": "https://api.github.com/users/kerrick-lyft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kerrick-lyft/subscriptions", "organizations_url": "https://api.github.com/users/kerrick-lyft/orgs", "repos_url": "https://api.github.com/users/kerrick-lyft/repos", "events_url": "https://api.github.com/users/kerrick-lyft/events{/privacy}", "received_events_url": "https://api.github.com/users/kerrick-lyft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-23T17:51:08Z", "updated_at": "2019-08-23T18:03:39Z", "closed_at": "2019-08-23T18:03:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think this code is valid and idiomatic, but `flake8-bugbear` reports a B007 warning that `idx` is unused:\r\n\r\n```\r\n# Print the slice of nums starting from the first multiple of 7 until the end, or the whole list if there are no multiples of 7.\r\nnums = list(range(10, 20))\r\n\r\nidx = 0\r\nfor idx, num in enumerate(nums):\r\n    if num % 7 == 0:\r\n        break\r\n\r\nprint(nums[idx:])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/86", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/86/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/86/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/86", "id": 483649240, "node_id": "MDU6SXNzdWU0ODM2NDkyNDA=", "number": 86, "title": "This plugin cannot be used with Python 2.7 codebases", "user": {"login": "caioariede", "id": 55533, "node_id": "MDQ6VXNlcjU1NTMz", "avatar_url": "https://avatars0.githubusercontent.com/u/55533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/caioariede", "html_url": "https://github.com/caioariede", "followers_url": "https://api.github.com/users/caioariede/followers", "following_url": "https://api.github.com/users/caioariede/following{/other_user}", "gists_url": "https://api.github.com/users/caioariede/gists{/gist_id}", "starred_url": "https://api.github.com/users/caioariede/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/caioariede/subscriptions", "organizations_url": "https://api.github.com/users/caioariede/orgs", "repos_url": "https://api.github.com/users/caioariede/repos", "events_url": "https://api.github.com/users/caioariede/events{/privacy}", "received_events_url": "https://api.github.com/users/caioariede/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-21T20:58:59Z", "updated_at": "2020-01-01T23:52:43Z", "closed_at": "2020-01-01T23:52:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the **README**:\r\n\r\n> Relax, you can run flake8 with all popular plugins as a tool perfectly fine under Python 3.5+ even if you want to analyze Python 2 code. This way you'll be able to parse all of the new syntax supported on Python 3 but also effectively all the Python 2 syntax at the same time.\r\n\r\nThis is **wrong**. You cannot use flake8 installed under Python 3 with a codebase under Python 2.7, as stated in their docs:\r\n\r\n> It is very important to install Flake8 on the correct version of Python for your needs. If you want Flake8 to properly parse new language features in Python 3.5 (for example), you need it to be installed on 3.5 for Flake8 to understand those features. In many ways, Flake8 is tied to the version of Python on which it runs.\r\n> http://flake8.pycqa.org/en/latest/#installation\r\n\r\nThis plugin cannot be used with Python 2.7 codebases and the README should state this correctly", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/82", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/82/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/82/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/82", "id": 476932373, "node_id": "MDU6SXNzdWU0NzY5MzIzNzM=", "number": 82, "title": "Fix failing Unit Tests", "user": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 342183989, "node_id": "MDU6TGFiZWwzNDIxODM5ODk=", "url": "https://api.github.com/repos/PyCQA/flake8-bugbear/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 342183992, "node_id": "MDU6TGFiZWwzNDIxODM5OTI=", "url": "https://api.github.com/repos/PyCQA/flake8-bugbear/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-08-05T15:45:40Z", "updated_at": "2019-08-06T15:11:18Z", "closed_at": "2019-08-06T15:11:18Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I broke CI, this lead to missing some tests being broken. I'll fix asap.\r\n\r\n- test_b006_b008\r\n- test_selfclean_bugbear\r\n\r\nExamples: https://travis-ci.org/PyCQA/flake8-bugbear/jobs/567947175\r\n\r\nIf anyone else has time, PRs welcome.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/80", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/80/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/80/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/80", "id": 469255699, "node_id": "MDU6SXNzdWU0NjkyNTU2OTk=", "number": 80, "title": "Proposed Check: Unclosed files", "user": {"login": "wanaryytel", "id": 13919593, "node_id": "MDQ6VXNlcjEzOTE5NTkz", "avatar_url": "https://avatars3.githubusercontent.com/u/13919593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wanaryytel", "html_url": "https://github.com/wanaryytel", "followers_url": "https://api.github.com/users/wanaryytel/followers", "following_url": "https://api.github.com/users/wanaryytel/following{/other_user}", "gists_url": "https://api.github.com/users/wanaryytel/gists{/gist_id}", "starred_url": "https://api.github.com/users/wanaryytel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wanaryytel/subscriptions", "organizations_url": "https://api.github.com/users/wanaryytel/orgs", "repos_url": "https://api.github.com/users/wanaryytel/repos", "events_url": "https://api.github.com/users/wanaryytel/events{/privacy}", "received_events_url": "https://api.github.com/users/wanaryytel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-17T14:39:39Z", "updated_at": "2020-06-15T18:13:02Z", "closed_at": "2020-06-15T18:13:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's good programming practice to close all the files that you've opened. Maybe it would be a good idea to check for code like:\r\n```python3\r\nfile = open('file.txt', 'r')\r\ndata = file.read()\r\n# do sth to data\r\n# no file close statement\r\nreturn 'something'\r\n```\r\n\r\nProbably most people use the `with open...` syntax nowadays, but I just stumbled upon this in a piece of legacy code and was quite surprised that none of the linters I have has caught this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/72", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/72/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/72/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/72", "id": 447319676, "node_id": "MDU6SXNzdWU0NDczMTk2NzY=", "number": 72, "title": "Feature Request: warning for re-raising a caught exception", "user": {"login": "firba1", "id": 800788, "node_id": "MDQ6VXNlcjgwMDc4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/800788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/firba1", "html_url": "https://github.com/firba1", "followers_url": "https://api.github.com/users/firba1/followers", "following_url": "https://api.github.com/users/firba1/following{/other_user}", "gists_url": "https://api.github.com/users/firba1/gists{/gist_id}", "starred_url": "https://api.github.com/users/firba1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/firba1/subscriptions", "organizations_url": "https://api.github.com/users/firba1/orgs", "repos_url": "https://api.github.com/users/firba1/repos", "events_url": "https://api.github.com/users/firba1/events{/privacy}", "received_events_url": "https://api.github.com/users/firba1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-22T20:07:13Z", "updated_at": "2020-01-21T19:20:52Z", "closed_at": "2020-01-21T19:20:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "In python 2 if you have the following code:\r\n```\r\ntry:\r\n    foo()\r\nexcept Exception as e:\r\n    raise e\r\n```\r\nThe original traceback gets swallowed. This has caused me a lot of problems and I feel like it would be useful for most developers in the ecosystem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/69", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/69/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/69/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/69", "id": 437658896, "node_id": "MDU6SXNzdWU0Mzc2NTg4OTY=", "number": 69, "title": "B901 should not apply to __await__ methods", "user": {"login": "maxfischer2781", "id": 5708444, "node_id": "MDQ6VXNlcjU3MDg0NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/5708444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxfischer2781", "html_url": "https://github.com/maxfischer2781", "followers_url": "https://api.github.com/users/maxfischer2781/followers", "following_url": "https://api.github.com/users/maxfischer2781/following{/other_user}", "gists_url": "https://api.github.com/users/maxfischer2781/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxfischer2781/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxfischer2781/subscriptions", "organizations_url": "https://api.github.com/users/maxfischer2781/orgs", "repos_url": "https://api.github.com/users/maxfischer2781/repos", "events_url": "https://api.github.com/users/maxfischer2781/events{/privacy}", "received_events_url": "https://api.github.com/users/maxfischer2781/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-26T12:52:51Z", "updated_at": "2019-08-05T15:34:12Z", "closed_at": "2019-08-05T15:34:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Custom awaitable objects need to implement ``__await__`` generator methods with a ``return`` to provide values. B901 triggers on these for Python2 compatibility, but it is very unlikely that Python2 would use an ``__await__`` method. [The ``__await__`` method must be an iterator](https://docs.python.org/3/reference/datamodel.html#object.__await__), so using ``async def`` as suggested by B901 is not valid.\r\n\r\nMarking every occurrence as ``# noqa: B901`` is very annoying in an async library. Disabling it entirely is suboptimal, because a generator-``return`` outside of ``__await__`` usually hints at an error indeed.\r\n\r\n```python3\r\n    def __await__(self) -> Generator[Any, Any, ST]:\r\n        return (yield from self._await_message().__await__())\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/68", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/68/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/68/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/68", "id": 437393274, "node_id": "MDU6SXNzdWU0MzczOTMyNzQ=", "number": 68, "title": "B007: False positive if loop control variable is used after the loop", "user": {"login": "jdufresne", "id": 347634, "node_id": "MDQ6VXNlcjM0NzYzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/347634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdufresne", "html_url": "https://github.com/jdufresne", "followers_url": "https://api.github.com/users/jdufresne/followers", "following_url": "https://api.github.com/users/jdufresne/following{/other_user}", "gists_url": "https://api.github.com/users/jdufresne/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdufresne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdufresne/subscriptions", "organizations_url": "https://api.github.com/users/jdufresne/orgs", "repos_url": "https://api.github.com/users/jdufresne/repos", "events_url": "https://api.github.com/users/jdufresne/events{/privacy}", "received_events_url": "https://api.github.com/users/jdufresne/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 342183994, "node_id": "MDU6TGFiZWwzNDIxODM5OTQ=", "url": "https://api.github.com/repos/PyCQA/flake8-bugbear/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-04-25T20:54:20Z", "updated_at": "2019-08-23T21:51:50Z", "closed_at": "2019-05-04T16:59:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Example code:\r\n\r\n```py\r\nfrom mymodule import myiter\r\n\r\n\r\ndef main():\r\n    for result in myiter():\r\n        pass\r\n    print(result)\r\n```\r\n\r\nOuptut:\r\n\r\n```\r\nfoo.py:6:9: B007 Loop control variable 'result' not used within the loop body. If this is intended, start the name with an underscore.\r\n```\r\n\r\nThis code is intentionally exhausting an iterator without generating a temporary data structure. As the loop control variable is used, I believe this should not emit a warning.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/67", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/67/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/67/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/67", "id": 436405403, "node_id": "MDU6SXNzdWU0MzY0MDU0MDM=", "number": 67, "title": "B950 text is misleading", "user": {"login": "jcardali", "id": 13664362, "node_id": "MDQ6VXNlcjEzNjY0MzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/13664362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcardali", "html_url": "https://github.com/jcardali", "followers_url": "https://api.github.com/users/jcardali/followers", "following_url": "https://api.github.com/users/jcardali/following{/other_user}", "gists_url": "https://api.github.com/users/jcardali/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcardali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcardali/subscriptions", "organizations_url": "https://api.github.com/users/jcardali/orgs", "repos_url": "https://api.github.com/users/jcardali/repos", "events_url": "https://api.github.com/users/jcardali/events{/privacy}", "received_events_url": "https://api.github.com/users/jcardali/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-23T21:49:09Z", "updated_at": "2019-06-25T13:29:58Z", "closed_at": "2019-06-25T13:29:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "B950 checks for 1.1 * `max-line-length`, but the actual error text that is returned shows just `max-line-length`\r\n\r\nhttps://github.com/PyCQA/flake8-bugbear/blob/master/bugbear.py#L48", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/57", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/57/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/57/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/57", "id": 399813801, "node_id": "MDU6SXNzdWUzOTk4MTM4MDE=", "number": 57, "title": "Mutable class attributes", "user": {"login": "cleder", "id": 1218010, "node_id": "MDQ6VXNlcjEyMTgwMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1218010?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cleder", "html_url": "https://github.com/cleder", "followers_url": "https://api.github.com/users/cleder/followers", "following_url": "https://api.github.com/users/cleder/following{/other_user}", "gists_url": "https://api.github.com/users/cleder/gists{/gist_id}", "starred_url": "https://api.github.com/users/cleder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cleder/subscriptions", "organizations_url": "https://api.github.com/users/cleder/orgs", "repos_url": "https://api.github.com/users/cleder/repos", "events_url": "https://api.github.com/users/cleder/events{/privacy}", "received_events_url": "https://api.github.com/users/cleder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-16T13:41:32Z", "updated_at": "2019-01-23T13:38:04Z", "closed_at": "2019-01-23T13:38:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Mutable class attributes may lead to information leaking from one instance to another.\r\n\r\n```\r\nclass MyClass(object):\r\n    errors = []\r\n\r\n    def do_something(self):\r\n        try:\r\n            ...\r\n        except SomeException as e:\r\n            self.errors.append(e)\r\n```\r\n\r\nMutable class attributes should be reported similar to *B006*: Do not use mutable data structures for argument defaults.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/54", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/54/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/54/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/54", "id": 367108708, "node_id": "MDU6SXNzdWUzNjcxMDg3MDg=", "number": 54, "title": "What is the difference between B950 and max-line-length=88?", "user": {"login": "pquentin", "id": 42327, "node_id": "MDQ6VXNlcjQyMzI3", "avatar_url": "https://avatars1.githubusercontent.com/u/42327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pquentin", "html_url": "https://github.com/pquentin", "followers_url": "https://api.github.com/users/pquentin/followers", "following_url": "https://api.github.com/users/pquentin/following{/other_user}", "gists_url": "https://api.github.com/users/pquentin/gists{/gist_id}", "starred_url": "https://api.github.com/users/pquentin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pquentin/subscriptions", "organizations_url": "https://api.github.com/users/pquentin/orgs", "repos_url": "https://api.github.com/users/pquentin/repos", "events_url": "https://api.github.com/users/pquentin/events{/privacy}", "received_events_url": "https://api.github.com/users/pquentin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-10-05T08:25:48Z", "updated_at": "2018-10-10T14:34:25Z", "closed_at": "2018-10-10T13:06:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see that black recommends the following flake8 configuration:\r\n\r\n```\r\n[flake8]\r\nmax-line-length = 80\r\n...\r\nselect = C,E,F,W,B,B950\r\nignore = E501\r\n```\r\n\r\nHowever, the same thing can be achieved with the following configuration, which is shorter and possibly more explicit:\r\n\r\n```\r\n[flake8]\r\nmax-line-length = 88\r\n...\r\nselect = C,E,F,W,B\r\n```\r\n\r\nCan you please help me understand why we need B950, then?\r\n\r\nThank you for flake8-bugbear!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/53", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/53/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/53/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/53", "id": 357426707, "node_id": "MDU6SXNzdWUzNTc0MjY3MDc=", "number": 53, "title": "Update changelog + release new version", "user": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-09-05T22:26:35Z", "updated_at": "2020-01-01T23:54:24Z", "closed_at": "2020-01-01T23:54:24Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "- Need to document 18.8.0 (forgot)\r\n- Have a new bug fix to not report forzensets + tuples as defaults", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/50", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/50/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/50/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/50", "id": 348453096, "node_id": "MDU6SXNzdWUzNDg0NTMwOTY=", "number": 50, "title": "Tests fail when building 18.2.0 with Python 3.7", "user": {"login": "polyzen", "id": 3533182, "node_id": "MDQ6VXNlcjM1MzMxODI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3533182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polyzen", "html_url": "https://github.com/polyzen", "followers_url": "https://api.github.com/users/polyzen/followers", "following_url": "https://api.github.com/users/polyzen/following{/other_user}", "gists_url": "https://api.github.com/users/polyzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/polyzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polyzen/subscriptions", "organizations_url": "https://api.github.com/users/polyzen/orgs", "repos_url": "https://api.github.com/users/polyzen/repos", "events_url": "https://api.github.com/users/polyzen/events{/privacy}", "received_events_url": "https://api.github.com/users/polyzen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 342183989, "node_id": "MDU6TGFiZWwzNDIxODM5ODk=", "url": "https://api.github.com/repos/PyCQA/flake8-bugbear/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-08-07T19:18:40Z", "updated_at": "2018-08-13T22:44:06Z", "closed_at": "2018-08-13T22:18:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Tests pass on master. Perhaps a release could be made.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/43", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/43/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/43/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/43", "id": 322227698, "node_id": "MDU6SXNzdWUzMjIyMjc2OTg=", "number": 43, "title": "IndexError: list index out of range", "user": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-11T09:21:31Z", "updated_at": "2018-05-11T20:46:18Z", "closed_at": "2018-05-11T20:46:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I am facing a strange bug.\r\n\r\n```\r\n__________________ FLAKE8-check(ignoring D100 D104 D106 D401) __________________\r\n/usr/local/lib/python3.6/site-packages/pluggy/__init__.py:617: in __call__\r\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\r\n/usr/local/lib/python3.6/site-packages/pluggy/__init__.py:222: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n/usr/local/lib/python3.6/site-packages/pluggy/__init__.py:216: in <lambda>\r\n    firstresult=hook.spec_opts.get('firstresult'),\r\n/usr/local/lib/python3.6/site-packages/_pytest/runner.py:110: in pytest_runtest_call\r\n    item.runtest()\r\n/usr/local/lib/python3.6/site-packages/pytest_flake8.py:117: in runtest\r\n    self.statistics)\r\n/usr/local/lib/python3.6/site-packages/py/_io/capture.py:150: in call\r\n    res = func(*args, **kwargs)\r\n/usr/local/lib/python3.6/site-packages/pytest_flake8.py:193: in check_file\r\n    app.run_checks([str(path)])\r\n/usr/local/lib/python3.6/site-packages/flake8/main/application.py:310: in run_checks\r\n    self.file_checker_manager.run()\r\n/usr/local/lib/python3.6/site-packages/flake8/checker.py:321: in run\r\n    self.run_serial()\r\n/usr/local/lib/python3.6/site-packages/flake8/checker.py:305: in run_serial\r\n    checker.run_checks()\r\n/usr/local/lib/python3.6/site-packages/flake8/checker.py:579: in run_checks\r\n    self.run_ast_checks()\r\n/usr/local/lib/python3.6/site-packages/flake8/checker.py:493: in run_ast_checks\r\n    for (line_number, offset, text, check) in runner:\r\n/usr/local/lib/python3.6/site-packages/bugbear.py:37: in run\r\n    visitor.visit(self.tree)\r\n/usr/local/lib/python3.6/site-packages/bugbear.py:143: in visit\r\n    super().visit(node)\r\n/usr/local/lib/python3.6/ast.py:253: in visit\r\n    return visitor(node)\r\n/usr/local/lib/python3.6/ast.py:261: in generic_visit\r\n    self.visit(item)\r\n/usr/local/lib/python3.6/site-packages/bugbear.py:143: in visit\r\n    super().visit(node)\r\n/usr/local/lib/python3.6/ast.py:253: in visit\r\n    return visitor(node)\r\n/usr/local/lib/python3.6/site-packages/bugbear.py:235: in visit_ClassDef\r\n    self.check_for_b903(node)\r\n/usr/local/lib/python3.6/site-packages/bugbear.py:414: in check_for_b903\r\n    if len(targets) > 1 or not isinstance(targets[0], ast.Attribute):\r\nE   IndexError: list index out of range\r\n------------------------------ Captured log call -------------------------------\r\nprocessor.py               248 WARNING  Plugin requested optional parameter \"builtins\" but this is not an available parameter.\r\nprocessor.py               248 WARNING  Plugin requested optional parameter \"visitor\" but this is not an available parameter.\r\n\r\n```\r\n\r\n## My setup\r\n\r\nConfiguration file: https://github.com/wemake-services/wemake-django-template/blob/master/%7B%7Bcookiecutter.project_name%7D%7D/setup.cfg\r\n\r\nCommand: `pytest`.\r\nOutput:\r\n\r\n```\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.6.5, pytest-3.5.1, py-1.5.3, pluggy-0.6.0\r\nUsing --randomly-seed=1526028157\r\nDjango settings: server.settings (from ini file)\r\nrootdir: /code, inifile: setup.cfg\r\nplugins: xdist-1.22.2, randomly-1.2.3, isort-0.2.0, forked-0.2, flake8-1.0.1, django-3.2.1, deadfixtures-2.0.1, cov-2.5.1, celery-4.1.0\r\ncollected 577 items\r\n\r\n```\r\n\r\n## Versions\r\n\r\n`pytest`: `\"version\": \"==3.5.1\"`\r\n`pytest-flake8`: `\"version\": \"==1.0.1\"`\r\n`flake8`: `\"version\": \"==3.5.0\"`\r\n`flake8-bugbear`: `\"version\": \"==18.2.0\"`\r\n\r\nLockfile: https://github.com/wemake-services/wemake-django-template/blob/master/%7B%7Bcookiecutter.project_name%7D%7D/Pipfile.lock\r\n\r\n## Reproduction\r\n\r\nI am using `docker` for both local testing and CI. That makes this bug quite strange.\r\nSince locally (macos) it passes without any problems. But inside CI it fails.\r\n\r\nThis bug happens in `gitlab`:\r\n<img width=\"760\" alt=\"2018-05-11 12 03 40\" src=\"https://user-images.githubusercontent.com/4660275/39916520-6482a8dc-5513-11e8-80fe-f20f95f9d560.png\">\r\n\r\nBut not locally.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/42", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/42/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/42/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/42", "id": 321701228, "node_id": "MDU6SXNzdWUzMjE3MDEyMjg=", "number": 42, "title": "B301 gives a false positive for pandas DataFrames, Series and Panels", "user": {"login": "mxr", "id": 252209, "node_id": "MDQ6VXNlcjI1MjIwOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/252209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mxr", "html_url": "https://github.com/mxr", "followers_url": "https://api.github.com/users/mxr/followers", "following_url": "https://api.github.com/users/mxr/following{/other_user}", "gists_url": "https://api.github.com/users/mxr/gists{/gist_id}", "starred_url": "https://api.github.com/users/mxr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mxr/subscriptions", "organizations_url": "https://api.github.com/users/mxr/orgs", "repos_url": "https://api.github.com/users/mxr/repos", "events_url": "https://api.github.com/users/mxr/events{/privacy}", "received_events_url": "https://api.github.com/users/mxr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 342183995, "node_id": "MDU6TGFiZWwzNDIxODM5OTU=", "url": "https://api.github.com/repos/PyCQA/flake8-bugbear/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-09T19:44:07Z", "updated_at": "2018-05-09T21:23:10Z", "closed_at": "2018-05-09T19:55:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "`iteritems` is a valid function for pandas DataFrames, Series, and Panels (see docs [here](http://pandas.pydata.org/pandas-docs/version/0.17.0/generated/pandas.DataFrame.iteritems.html#pandas.DataFrame.iteritems)). However `flake8-bugbear` flags uses of this function:\r\n\r\n```\r\n$ cat example.py\r\nimport pandas as pd\r\n\r\ndf = pd.DataFrame({\"A\": [1, 2, 3], \"B\": [4, 5, 6]})\r\nprint(list(df.iteritems()))\r\n$ flake8 example.py\r\nexample.py:4:12: B301 Python 3 does not include `.iter*` methods on dictionaries. Remove the `iter` prefix from the method name. For Python 2 compatibility, prefer the Python 3 equivalent unless you expect the size of the container to be large or unbounded. Then use `six.iter*` or `future.utils.iter*`.\r\n```\r\n\r\nMy environment:\r\n\r\n```\r\n$ python --version\r\nPython 3.6.5\r\n$ flake8 --version\r\n3.5.0 (flake8-bugbear: 18.2.0, mccabe: 0.6.1, pycodestyle: 2.3.1, pyflakes: 1.6.0) CPython 3.6.5 on Darwin\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/39", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/39/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/39/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/39", "id": 315211348, "node_id": "MDU6SXNzdWUzMTUyMTEzNDg=", "number": 39, "title": "Warnings from flake8 due to `visitor`", "user": {"login": "dopplershift", "id": 221526, "node_id": "MDQ6VXNlcjIyMTUyNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/221526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dopplershift", "html_url": "https://github.com/dopplershift", "followers_url": "https://api.github.com/users/dopplershift/followers", "following_url": "https://api.github.com/users/dopplershift/following{/other_user}", "gists_url": "https://api.github.com/users/dopplershift/gists{/gist_id}", "starred_url": "https://api.github.com/users/dopplershift/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dopplershift/subscriptions", "organizations_url": "https://api.github.com/users/dopplershift/orgs", "repos_url": "https://api.github.com/users/dopplershift/repos", "events_url": "https://api.github.com/users/dopplershift/events{/privacy}", "received_events_url": "https://api.github.com/users/dopplershift/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-17T20:06:56Z", "updated_at": "2018-04-17T20:37:20Z", "closed_at": "2018-04-17T20:19:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With flake8 3.5.0 and flake8-bugbear installed, I get the following messages spammed all over my test logs (when using pytest-flake8):\r\n\r\n```\r\nWARNING:flake8.processor:Plugin requested optional parameter \"visitor\" but this is not an available parameter.\r\n```\r\n\r\nThis is because `visitor` is an `attr.ib`, which gets added automatically to `__init__`. Apparently, flake8 [inspects](http://flake8.pycqa.org/en/latest/plugin-development/plugin-parameters.html#indicating-desired-data) and [validates](http://flake8.pycqa.org/en/latest/internal/utils.html#flake8.utils.parameters_for) all constructor parameters.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/37", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/37/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/37/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/37", "id": 309245153, "node_id": "MDU6SXNzdWUzMDkyNDUxNTM=", "number": 37, "title": "Codes B301-B306 conflict with openstack/bandit (via. flake8-bandit)", "user": {"login": "myii", "id": 10231489, "node_id": "MDQ6VXNlcjEwMjMxNDg5", "avatar_url": "https://avatars2.githubusercontent.com/u/10231489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/myii", "html_url": "https://github.com/myii", "followers_url": "https://api.github.com/users/myii/followers", "following_url": "https://api.github.com/users/myii/following{/other_user}", "gists_url": "https://api.github.com/users/myii/gists{/gist_id}", "starred_url": "https://api.github.com/users/myii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/myii/subscriptions", "organizations_url": "https://api.github.com/users/myii/orgs", "repos_url": "https://api.github.com/users/myii/repos", "events_url": "https://api.github.com/users/myii/events{/privacy}", "received_events_url": "https://api.github.com/users/myii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2018-03-28T07:06:58Z", "updated_at": "2018-04-01T09:12:32Z", "closed_at": "2018-03-29T04:19:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Similar situation to #20, there are conflicts across codes `B301`-`B306`.\r\n\r\nhttps://github.com/openstack/bandit:\r\n\r\n> ```\r\n> The following tests were discovered and loaded:\r\n>   ...\r\n>   B301  pickle\r\n>   B302  marshal\r\n>   B303  md5\r\n>   B304  ciphers\r\n>   B305  cipher_modes\r\n>   B306  mktemp_q\r\n> ```\r\n\r\n* https://github.com/tylerwince/flake8-bandit is \"a flake8 wrapper around [bandit]\"\r\n\r\nIn my situation:\r\n\r\n* When both are installed, `bandit` is still available while `bugbear` is deactivated\r\n* If I uninstall `bandit`, `bugbear` is activated and works as expected", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/34", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/34/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/34/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/34", "id": 304116357, "node_id": "MDU6SXNzdWUzMDQxMTYzNTc=", "number": 34, "title": "Please give us feedback about AST change in Python 3.7", "user": {"login": "methane", "id": 199592, "node_id": "MDQ6VXNlcjE5OTU5Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/199592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/methane", "html_url": "https://github.com/methane", "followers_url": "https://api.github.com/users/methane/followers", "following_url": "https://api.github.com/users/methane/following{/other_user}", "gists_url": "https://api.github.com/users/methane/gists{/gist_id}", "starred_url": "https://api.github.com/users/methane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/methane/subscriptions", "organizations_url": "https://api.github.com/users/methane/orgs", "repos_url": "https://api.github.com/users/methane/repos", "events_url": "https://api.github.com/users/methane/events{/privacy}", "received_events_url": "https://api.github.com/users/methane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-10T23:52:25Z", "updated_at": "2018-03-13T13:32:16Z", "closed_at": "2018-03-13T13:32:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Python 3.6, docstring was expression in AST.\r\n\r\n    FunctionDef(name='foo', ..., body=[Expr(value=Str(s='docstring'))], ...)\r\n\r\nSince docstring is special and it's unclear that expression is docstring or not, we changed AST in 3.7a1.\r\ndocstring is moved from body to field. ([bpo-29463](https://bugs.python.org/issue29463))\r\n\r\n    FunctionDef(name='foo', ..., body=[], ..., docstring='docstring')\r\n\r\nBut it removed syntactic information about docstring (e.g. lineno).  We are considering changing it again.  Docstring is moved back to body, but it is special statement named `DocString(s)`. `Expr(value=Str(s))` is not docstring. ([bpo-32911](https://bugs.python.org/issue32911))\r\n\r\n    FunctionDef(name='foo', ..., body=[DocString(s='docstring')], ...)\r\n\r\nIt means tools broken by 3.7a1 will be broken again.  But 3.7b3 will be the last chance to change AST.\r\n\r\nHow do you think about it?  Please give comment / vote on [the issue tracker](https://bugs.python.org/issue32911).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/32", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/32/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/32/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/32", "id": 291323705, "node_id": "MDU6SXNzdWUyOTEzMjM3MDU=", "number": 32, "title": "17.4.0 Wheel build fails due to LICENSE file missing", "user": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 342183989, "node_id": "MDU6TGFiZWwzNDIxODM5ODk=", "url": "https://api.github.com/repos/PyCQA/flake8-bugbear/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "ambv", "id": 55281, "node_id": "MDQ6VXNlcjU1Mjgx", "avatar_url": "https://avatars1.githubusercontent.com/u/55281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ambv", "html_url": "https://github.com/ambv", "followers_url": "https://api.github.com/users/ambv/followers", "following_url": "https://api.github.com/users/ambv/following{/other_user}", "gists_url": "https://api.github.com/users/ambv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ambv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ambv/subscriptions", "organizations_url": "https://api.github.com/users/ambv/orgs", "repos_url": "https://api.github.com/users/ambv/repos", "events_url": "https://api.github.com/users/ambv/events{/privacy}", "received_events_url": "https://api.github.com/users/ambv/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ambv", "id": 55281, "node_id": "MDQ6VXNlcjU1Mjgx", "avatar_url": "https://avatars1.githubusercontent.com/u/55281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ambv", "html_url": "https://github.com/ambv", "followers_url": "https://api.github.com/users/ambv/followers", "following_url": "https://api.github.com/users/ambv/following{/other_user}", "gists_url": "https://api.github.com/users/ambv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ambv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ambv/subscriptions", "organizations_url": "https://api.github.com/users/ambv/orgs", "repos_url": "https://api.github.com/users/ambv/repos", "events_url": "https://api.github.com/users/ambv/events{/privacy}", "received_events_url": "https://api.github.com/users/ambv/received_events", "type": "User", "site_admin": false}, {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-01-24T19:05:24Z", "updated_at": "2018-02-05T13:16:39Z", "closed_at": "2018-02-05T13:06:20Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I'm unable to build a wheel due to LICENSE file missing. Will investigate and fix.\r\n\r\n```\r\nBuilding wheels for collected packages: flake8-bugbear, flake8, attrs, pyflakes, pycodestyle, mccabe, setuptools\r\n  Running setup.py bdist_wheel for flake8-bugbear: started\r\n  Destination directory: /tmp/tmpcxf7s8htpip-wheel-\r\n  Running command /tmp/pyfi/pyfi_venv/bin/python3.6 -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-h5tf698v/flake8-bugbear/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d /tmp/tmpcxf7s8htpip-wheel- --plat-name=gcc_5_glibc_2_23\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib\r\n  copying bugbear.py -> build/lib\r\n  installing to build/bdist.linux-x86_64/wheel\r\n  running install\r\n  running install_lib\r\n  creating build/bdist.linux-x86_64\r\n  creating build/bdist.linux-x86_64/wheel\r\n  copying build/lib/bugbear.py -> build/bdist.linux-x86_64/wheel\r\n  running install_egg_info\r\n  running egg_info\r\n  writing flake8_bugbear.egg-info/PKG-INFO\r\n  writing dependency_links to flake8_bugbear.egg-info/dependency_links.txt\r\n  writing entry points to flake8_bugbear.egg-info/entry_points.txt\r\n  writing requirements to flake8_bugbear.egg-info/requires.txt\r\n  writing top-level names to flake8_bugbear.egg-info/top_level.txt\r\n  reading manifest file 'flake8_bugbear.egg-info/SOURCES.txt'\r\n  reading manifest template 'MANIFEST.in'\r\n  warning: no files found matching '*.txt' under directory 'tests'\r\n  writing manifest file 'flake8_bugbear.egg-info/SOURCES.txt'\r\n  Copying flake8_bugbear.egg-info to build/bdist.linux-x86_64/wheel/flake8_bugbear-17.12.0-py3.6.egg-info\r\n  running install_scripts\r\n  error: [Errno 2] No such file or directory: 'LICENSE'\r\n  Running setup.py bdist_wheel for flake8-bugbear: finished with status 'error'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/20", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/20/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/20/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/20", "id": 249081823, "node_id": "MDU6SXNzdWUyNDkwODE4MjM=", "number": 20, "title": "Bugbear and builtins both using B001", "user": {"login": "cas--", "id": 606038, "node_id": "MDQ6VXNlcjYwNjAzOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/606038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cas--", "html_url": "https://github.com/cas--", "followers_url": "https://api.github.com/users/cas--/followers", "following_url": "https://api.github.com/users/cas--/following{/other_user}", "gists_url": "https://api.github.com/users/cas--/gists{/gist_id}", "starred_url": "https://api.github.com/users/cas--/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cas--/subscriptions", "organizations_url": "https://api.github.com/users/cas--/orgs", "repos_url": "https://api.github.com/users/cas--/repos", "events_url": "https://api.github.com/users/cas--/events{/privacy}", "received_events_url": "https://api.github.com/users/cas--/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-09T16:05:38Z", "updated_at": "2017-08-30T13:34:54Z", "closed_at": "2017-08-30T13:34:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have not tested the consequences of this but I found googling for B001 that you both picked the same B prefix code in March 2016!\r\n\r\nhttps://github.com/gforcada/flake8-builtins\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/17", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/17/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/17/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/17", "id": 219753017, "node_id": "MDU6SXNzdWUyMTk3NTMwMTc=", "number": 17, "title": "async def methods are not checked", "user": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-06T00:24:48Z", "updated_at": "2017-04-14T17:25:44Z", "closed_at": "2017-04-14T17:25:44Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "B006 and B902 should hit async def methods as well. PR incoming.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/14", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/14/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/14/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/14", "id": 210792840, "node_id": "MDU6SXNzdWUyMTA3OTI4NDA=", "number": 14, "title": "Lint and test using Travis", "user": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-28T13:53:03Z", "updated_at": "2017-02-28T19:26:11Z", "closed_at": "2017-02-28T19:26:11Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not sure how you can live without CI :P If you enable it I'll send a PR", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/10", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/10/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/10/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/10", "id": 208756840, "node_id": "MDU6SXNzdWUyMDg3NTY4NDA=", "number": 10, "title": "B902 requires first parameter named self for __init__ of metaclass", "user": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-19T23:41:29Z", "updated_at": "2017-02-26T00:32:36Z", "closed_at": "2017-02-26T00:32:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a metaclass defined like this:\r\n\r\n    class StorageMeta(type):\r\n        def __init__(cls, name, bases, d):\r\n\r\nNaturally B902 flagged the first parameter of `__init__`, but I'm not sure if it's intended in the case of metaclasses. I can imagine arguments for and against this behavior.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/9", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/9/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/9/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/9", "id": 195278539, "node_id": "MDU6SXNzdWUxOTUyNzg1Mzk=", "number": 9, "title": "AttributeError: 'Tuple' object has no attribute 'id'", "user": {"login": "jaap3", "id": 48517, "node_id": "MDQ6VXNlcjQ4NTE3", "avatar_url": "https://avatars1.githubusercontent.com/u/48517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jaap3", "html_url": "https://github.com/jaap3", "followers_url": "https://api.github.com/users/jaap3/followers", "following_url": "https://api.github.com/users/jaap3/following{/other_user}", "gists_url": "https://api.github.com/users/jaap3/gists{/gist_id}", "starred_url": "https://api.github.com/users/jaap3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jaap3/subscriptions", "organizations_url": "https://api.github.com/users/jaap3/orgs", "repos_url": "https://api.github.com/users/jaap3/repos", "events_url": "https://api.github.com/users/jaap3/events{/privacy}", "received_events_url": "https://api.github.com/users/jaap3/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-13T15:11:56Z", "updated_at": "2016-12-14T08:10:25Z", "closed_at": "2016-12-13T18:58:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm able to consistently get an exception when running flake8-bugbear on this seemingly innocent code snippet (this has been reduced from code that actually did something):\r\n\r\n```\r\ndef foo():\r\n    for a, b in {}.items():\r\n        pass\r\n```\r\n\r\nI'm using:\r\n\r\nPython 3.5.2\r\nflake8==3.2.1\r\nflake8-bugbear==16.12.0\r\n\r\n```\r\nTraceback (most recent call last):\r\n  ...\r\n  File \"bugbear.py\", line 173, in visit_For\r\n    if not node.target.id.startswith('_'):\r\nAttributeError: 'Tuple' object has no attribute 'id'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/8", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/8/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/8/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/8", "id": 190438291, "node_id": "MDU6SXNzdWUxOTA0MzgyOTE=", "number": 8, "title": "B301 false positive on pathlib.Path().iterdir()", "user": {"login": "ambv", "id": 55281, "node_id": "MDQ6VXNlcjU1Mjgx", "avatar_url": "https://avatars1.githubusercontent.com/u/55281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ambv", "html_url": "https://github.com/ambv", "followers_url": "https://api.github.com/users/ambv/followers", "following_url": "https://api.github.com/users/ambv/following{/other_user}", "gists_url": "https://api.github.com/users/ambv/gists{/gist_id}", "starred_url": "https://api.github.com/users/ambv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ambv/subscriptions", "organizations_url": "https://api.github.com/users/ambv/orgs", "repos_url": "https://api.github.com/users/ambv/repos", "events_url": "https://api.github.com/users/ambv/events{/privacy}", "received_events_url": "https://api.github.com/users/ambv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-18T22:34:47Z", "updated_at": "2016-11-27T09:15:23Z", "closed_at": "2016-11-27T09:15:23Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "That's a bad method name but oh well. We have to white list this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/7", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/7/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/7/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/7", "id": 187993864, "node_id": "MDU6SXNzdWUxODc5OTM4NjQ=", "number": 7, "title": "python3.4 compatiblity", "user": {"login": "spaceone", "id": 1100188, "node_id": "MDQ6VXNlcjExMDAxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1100188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spaceone", "html_url": "https://github.com/spaceone", "followers_url": "https://api.github.com/users/spaceone/followers", "following_url": "https://api.github.com/users/spaceone/following{/other_user}", "gists_url": "https://api.github.com/users/spaceone/gists{/gist_id}", "starred_url": "https://api.github.com/users/spaceone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spaceone/subscriptions", "organizations_url": "https://api.github.com/users/spaceone/orgs", "repos_url": "https://api.github.com/users/spaceone/repos", "events_url": "https://api.github.com/users/spaceone/events{/privacy}", "received_events_url": "https://api.github.com/users/spaceone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-11-08T13:38:56Z", "updated_at": "2016-11-08T16:56:36Z", "closed_at": "2016-11-08T16:44:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems this project only supports python > 3.5 ?\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.4/multiprocessing/process.py\", line 254, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib/python3.4/multiprocessing/process.py\", line 93, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/usr/local/lib/python3.4/dist-packages/flake8/checker.py\", line 633, in _run_checks_from_queue\r\n    checker.run_checks(results_queue, statistics_queue)\r\n  File \"/usr/local/lib/python3.4/dist-packages/flake8/checker.py\", line 573, in run_checks\r\n    self.run_ast_checks()\r\n  File \"/usr/local/lib/python3.4/dist-packages/flake8/checker.py\", line 484, in run_ast_checks\r\n    for (line_number, offset, text, check) in runner:\r\n  File \"/usr/local/lib/python3.4/dist-packages/bugbear.py\", line 31, in run\r\n    visitor.visit(self.tree)\r\n  File \"/usr/local/lib/python3.4/dist-packages/bugbear.py\", line 82, in visit\r\n    super().visit(node)\r\n  File \"/usr/lib/python3.4/ast.py\", line 245, in visit\r\n    return visitor(node)\r\n  File \"/usr/lib/python3.4/ast.py\", line 253, in generic_visit\r\n    self.visit(item)\r\n  File \"/usr/local/lib/python3.4/dist-packages/bugbear.py\", line 82, in visit\r\n    super().visit(node)\r\n  File \"/usr/lib/python3.4/ast.py\", line 245, in visit\r\n    return visitor(node)\r\n  File \"/usr/local/lib/python3.4/dist-packages/bugbear.py\", line 162, in visit_FunctionDef\r\n    if isinstance(x, (ast.AsyncFunctionDef, ast.FunctionDef)):\r\nAttributeError: 'module' object has no attribute 'AsyncFunctionDef'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/6", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/6/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/6/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/6", "id": 187987270, "node_id": "MDU6SXNzdWUxODc5ODcyNzA=", "number": 6, "title": "doesn't install via pip", "user": {"login": "spaceone", "id": 1100188, "node_id": "MDQ6VXNlcjExMDAxODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1100188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spaceone", "html_url": "https://github.com/spaceone", "followers_url": "https://api.github.com/users/spaceone/followers", "following_url": "https://api.github.com/users/spaceone/following{/other_user}", "gists_url": "https://api.github.com/users/spaceone/gists{/gist_id}", "starred_url": "https://api.github.com/users/spaceone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spaceone/subscriptions", "organizations_url": "https://api.github.com/users/spaceone/orgs", "repos_url": "https://api.github.com/users/spaceone/repos", "events_url": "https://api.github.com/users/spaceone/events{/privacy}", "received_events_url": "https://api.github.com/users/spaceone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-11-08T13:07:51Z", "updated_at": "2016-11-08T16:57:23Z", "closed_at": "2016-11-08T16:57:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n# pip install flake8-bugbear\r\nCollecting flake8-bugbear\r\n  Downloading flake8-bugbear-16.10.1.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-RE3yha/flake8-bugbear/setup.py\", line 10, in <module>\r\n        with open(os.path.join(current_dir, 'README.rst'), encoding='utf8') as ld_file:\r\n    TypeError: 'encoding' is an invalid keyword argument for this function\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/2", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/2/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/2/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/2", "id": 180236775, "node_id": "MDU6SXNzdWUxODAyMzY3NzU=", "number": 2, "title": "Warn against using yield and return x", "user": {"login": "untitaker", "id": 837573, "node_id": "MDQ6VXNlcjgzNzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/837573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/untitaker", "html_url": "https://github.com/untitaker", "followers_url": "https://api.github.com/users/untitaker/followers", "following_url": "https://api.github.com/users/untitaker/following{/other_user}", "gists_url": "https://api.github.com/users/untitaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/untitaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/untitaker/subscriptions", "organizations_url": "https://api.github.com/users/untitaker/orgs", "repos_url": "https://api.github.com/users/untitaker/repos", "events_url": "https://api.github.com/users/untitaker/events{/privacy}", "received_events_url": "https://api.github.com/users/untitaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2016-09-30T07:18:32Z", "updated_at": "2016-10-04T20:19:23Z", "closed_at": "2016-10-03T20:27:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "[Python 3 allows mixing of return-with-value and yield in the same function](https://bugs.python.org/issue28310). I got bitten by this behavior multiple times, so I want to write a flake8 plugin for it. I wonder if I should add the lint to this package instead of making a separate one. What do you think?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/1", "repository_url": "https://api.github.com/repos/PyCQA/flake8-bugbear", "labels_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/1/comments", "events_url": "https://api.github.com/repos/PyCQA/flake8-bugbear/issues/1/events", "html_url": "https://github.com/PyCQA/flake8-bugbear/issues/1", "id": 169307562, "node_id": "MDU6SXNzdWUxNjkzMDc1NjI=", "number": 1, "title": "`pip install flake8-bugbear` failed in python 2.7.12", "user": {"login": "number5", "id": 1545, "node_id": "MDQ6VXNlcjE1NDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/number5", "html_url": "https://github.com/number5", "followers_url": "https://api.github.com/users/number5/followers", "following_url": "https://api.github.com/users/number5/following{/other_user}", "gists_url": "https://api.github.com/users/number5/gists{/gist_id}", "starred_url": "https://api.github.com/users/number5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/number5/subscriptions", "organizations_url": "https://api.github.com/users/number5/orgs", "repos_url": "https://api.github.com/users/number5/repos", "events_url": "https://api.github.com/users/number5/events{/privacy}", "received_events_url": "https://api.github.com/users/number5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-04T07:19:38Z", "updated_at": "2016-08-04T10:12:33Z", "closed_at": "2016-08-04T10:12:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is the backtrace:\n\n```\n\u03bb pip install flake8-bugbear                                  ]\nCollecting flake8-bugbear\n  Downloading flake8-bugbear-16.7.1.tar.gz\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/private/var/folders/t4/4r0q_f752vn1qr36pw1tq2280000gn/T/pip-build-mSeIFo/flake8-bugbear/setup.py\", line 10, in <module>\n        with open(os.path.join(current_dir, 'README.rst'), encoding='utf8') as ld_file:\n    TypeError: 'encoding' is an invalid keyword argument for this function\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/t4/4r0q_f752vn1qr36pw1tq2280000gn/T/pip-build-mSeIFo/flake8-bugbear/\n```\n", "performed_via_github_app": null, "score": 1.0}]}