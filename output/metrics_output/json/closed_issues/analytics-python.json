{"total_count": 57, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/segmentio/analytics-python/issues/170", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/170/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/170/events", "html_url": "https://github.com/segmentio/analytics-python/issues/170", "id": 660379084, "node_id": "MDU6SXNzdWU2NjAzNzkwODQ=", "number": 170, "title": "Data not being pushed to Segment with Django + uWSGI + Supervisor", "user": {"login": "joetheone", "id": 1305655, "node_id": "MDQ6VXNlcjEzMDU2NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1305655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joetheone", "html_url": "https://github.com/joetheone", "followers_url": "https://api.github.com/users/joetheone/followers", "following_url": "https://api.github.com/users/joetheone/following{/other_user}", "gists_url": "https://api.github.com/users/joetheone/gists{/gist_id}", "starred_url": "https://api.github.com/users/joetheone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joetheone/subscriptions", "organizations_url": "https://api.github.com/users/joetheone/orgs", "repos_url": "https://api.github.com/users/joetheone/repos", "events_url": "https://api.github.com/users/joetheone/events{/privacy}", "received_events_url": "https://api.github.com/users/joetheone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-18T21:02:38Z", "updated_at": "2020-07-18T21:11:01Z", "closed_at": "2020-07-18T21:10:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\r\n\r\nEverything works great locally when using Django's runserver command, but when I put the code into prod no errors and raised and no events are being sent to Segment. I noticed all the events come in when I restart supervisor or if I explicitly call flush() after a call to track().\r\n\r\nI suspect something in uWSGI or Supervisor is messing with the background threads. Any help would be appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/148", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/148/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/148/events", "html_url": "https://github.com/segmentio/analytics-python/issues/148", "id": 439291154, "node_id": "MDU6SXNzdWU0MzkyOTExNTQ=", "number": 148, "title": "Strange Compiling error w/ make", "user": {"login": "MRPData", "id": 40032476, "node_id": "MDQ6VXNlcjQwMDMyNDc2", "avatar_url": "https://avatars0.githubusercontent.com/u/40032476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MRPData", "html_url": "https://github.com/MRPData", "followers_url": "https://api.github.com/users/MRPData/followers", "following_url": "https://api.github.com/users/MRPData/following{/other_user}", "gists_url": "https://api.github.com/users/MRPData/gists{/gist_id}", "starred_url": "https://api.github.com/users/MRPData/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MRPData/subscriptions", "organizations_url": "https://api.github.com/users/MRPData/orgs", "repos_url": "https://api.github.com/users/MRPData/repos", "events_url": "https://api.github.com/users/MRPData/events{/privacy}", "received_events_url": "https://api.github.com/users/MRPData/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-01T19:30:52Z", "updated_at": "2020-04-18T07:54:46Z", "closed_at": "2020-04-17T16:27:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Every time I try compiling the make file, this happens, is this problematic? Any insight?\r\n\r\n```\r\n------------------------------------------------------------------\r\nYour code has been rated at 8.03/10 (previous run: 8.03/10, +0.00)\r\n\r\n# fail on pycodestyle errors on the code change\r\ngit diff origin/master..HEAD analytics | pycodestyle --ignore=E501 --diff --statistics --count\r\npycodestyle --ignore=E501 --statistics analytics > pycodestyle.out || true\r\ncoverage run --branch --include=analytics/\\* --omit=*/test* setup.py test\r\n/bin/sh: 1: coverage: not found\r\nmake: *** [Makefile:6: test] Error 127\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/110", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/110/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/110/events", "html_url": "https://github.com/segmentio/analytics-python/issues/110", "id": 338690028, "node_id": "MDU6SXNzdWUzMzg2OTAwMjg=", "number": 110, "title": "Can't start new thread", "user": {"login": "ShailChoksi", "id": 2770931, "node_id": "MDQ6VXNlcjI3NzA5MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2770931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ShailChoksi", "html_url": "https://github.com/ShailChoksi", "followers_url": "https://api.github.com/users/ShailChoksi/followers", "following_url": "https://api.github.com/users/ShailChoksi/following{/other_user}", "gists_url": "https://api.github.com/users/ShailChoksi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ShailChoksi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ShailChoksi/subscriptions", "organizations_url": "https://api.github.com/users/ShailChoksi/orgs", "repos_url": "https://api.github.com/users/ShailChoksi/repos", "events_url": "https://api.github.com/users/ShailChoksi/events{/privacy}", "received_events_url": "https://api.github.com/users/ShailChoksi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-05T19:00:08Z", "updated_at": "2018-07-05T21:36:21Z", "closed_at": "2018-07-05T21:36:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\nFile \"/var/task/src/utils/lambda_decorators.py\", line 47, in handle_internal\r\nreturn handler_fn(event, context)\r\nFile \"/var/task/src/utils/lambda_decorators.py\", line 30, in handle_internal\r\nreturn handler_fn(event, context)\r\nFile \"/var/task/src/handlers/log_analytics.py\", line 12, in handle_analytics_identify\r\nanalytics_identify(body[\"uid\"], body[\"cid\"], body[\"identity_info\"])\r\nFile \"/var/task/src/integrations/segment.py\", line 12, in analytics_identify\r\ns_client = Client(secrets.segmentWriteKey, debug=False) # segement client object\r\nFile \"/var/task/analytics/client.py\", line 49, in __init__\r\nself.consumer.start()\r\nFile \"/usr/lib64/python2.7/threading.py\", line 739, in start\r\n_start_new_thread(self.__bootstrap, ())\r\nerror: can't start new thread\r\n```\r\n\r\nRunning into this on AWS Lambdas. analytics-python v1.2.8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/101", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/101/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/101/events", "html_url": "https://github.com/segmentio/analytics-python/issues/101", "id": 276234742, "node_id": "MDU6SXNzdWUyNzYyMzQ3NDI=", "number": 101, "title": "Synchronous Mode", "user": {"login": "f2prateek", "id": 843979, "node_id": "MDQ6VXNlcjg0Mzk3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/843979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/f2prateek", "html_url": "https://github.com/f2prateek", "followers_url": "https://api.github.com/users/f2prateek/followers", "following_url": "https://api.github.com/users/f2prateek/following{/other_user}", "gists_url": "https://api.github.com/users/f2prateek/gists{/gist_id}", "starred_url": "https://api.github.com/users/f2prateek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/f2prateek/subscriptions", "organizations_url": "https://api.github.com/users/f2prateek/orgs", "repos_url": "https://api.github.com/users/f2prateek/repos", "events_url": "https://api.github.com/users/f2prateek/events{/privacy}", "received_events_url": "https://api.github.com/users/f2prateek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9611232, "node_id": "MDU6TGFiZWw5NjExMjMy", "url": "https://api.github.com/repos/segmentio/analytics-python/labels/improvement", "name": "improvement", "color": "84b6eb", "default": false, "description": null}, {"id": 9611235, "node_id": "MDU6TGFiZWw5NjExMjM1", "url": "https://api.github.com/repos/segmentio/analytics-python/labels/jira", "name": "jira", "color": "db9808", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-22T23:49:39Z", "updated_at": "2019-04-28T02:13:31Z", "closed_at": "2019-04-28T02:13:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think both https://github.com/segmentio/analytics-python/issues/34 and https://github.com/segmentio/analytics-python/issues/51 are symptoms of the same underlying issue - that our threading does not play nicely with Celery and Google App Engine.\r\n\r\nAs @calvinfo mentioned in https://github.com/segmentio/analytics-python/issues/51#issuecomment-174096065; the right solution would be to allow users to control/skip the async nature of this library and use it as a dumb HTTP API wrapper when needed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/100", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/100/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/100/events", "html_url": "https://github.com/segmentio/analytics-python/issues/100", "id": 250567543, "node_id": "MDU6SXNzdWUyNTA1Njc1NDM=", "number": 100, "title": "Missing GitHub tag / release for 1.2.7", "user": {"login": "gcs-github", "id": 381093, "node_id": "MDQ6VXNlcjM4MTA5Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/381093?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcs-github", "html_url": "https://github.com/gcs-github", "followers_url": "https://api.github.com/users/gcs-github/followers", "following_url": "https://api.github.com/users/gcs-github/following{/other_user}", "gists_url": "https://api.github.com/users/gcs-github/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcs-github/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcs-github/subscriptions", "organizations_url": "https://api.github.com/users/gcs-github/orgs", "repos_url": "https://api.github.com/users/gcs-github/repos", "events_url": "https://api.github.com/users/gcs-github/events{/privacy}", "received_events_url": "https://api.github.com/users/gcs-github/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-16T09:39:19Z", "updated_at": "2017-09-21T04:08:54Z", "closed_at": "2017-09-21T04:08:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhile https://pypi.python.org/pypi/analytics-python/1.2.7 seems to be the latest release, an equivalent `1.2.7` release / tag wasn't published on GitHub\r\n\r\nIt'd be helpful to have it here so we can keep track of the project on GitHub as well. Thanks! :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/97", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/97/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/97/events", "html_url": "https://github.com/segmentio/analytics-python/issues/97", "id": 242160324, "node_id": "MDU6SXNzdWUyNDIxNjAzMjQ=", "number": 97, "title": "API calls being dropped due to improper queue.empty() call", "user": {"login": "jhh3000", "id": 10123077, "node_id": "MDQ6VXNlcjEwMTIzMDc3", "avatar_url": "https://avatars0.githubusercontent.com/u/10123077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhh3000", "html_url": "https://github.com/jhh3000", "followers_url": "https://api.github.com/users/jhh3000/followers", "following_url": "https://api.github.com/users/jhh3000/following{/other_user}", "gists_url": "https://api.github.com/users/jhh3000/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhh3000/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhh3000/subscriptions", "organizations_url": "https://api.github.com/users/jhh3000/orgs", "repos_url": "https://api.github.com/users/jhh3000/repos", "events_url": "https://api.github.com/users/jhh3000/events{/privacy}", "received_events_url": "https://api.github.com/users/jhh3000/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-11T19:37:44Z", "updated_at": "2017-09-21T04:07:16Z", "closed_at": "2017-09-21T04:07:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Possible root cause of https://github.com/segmentio/analytics-python/issues/96\r\n\r\nWe were batching API calls (~5000 per day) to .identify() but were seeing 80% losses. The issue is that you are calling queue.empty() after the previous member was pulled from the queue, but before the next member was added. This resulted in a batch size greater than the default upload size (100), which resulted in totally rejected HTTP requests.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/96", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/96/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/96/events", "html_url": "https://github.com/segmentio/analytics-python/issues/96", "id": 240708303, "node_id": "MDU6SXNzdWUyNDA3MDgzMDM=", "number": 96, "title": "Not all \"tracks\" being sent using Celery", "user": {"login": "jorgemdnt", "id": 7728049, "node_id": "MDQ6VXNlcjc3MjgwNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7728049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorgemdnt", "html_url": "https://github.com/jorgemdnt", "followers_url": "https://api.github.com/users/jorgemdnt/followers", "following_url": "https://api.github.com/users/jorgemdnt/following{/other_user}", "gists_url": "https://api.github.com/users/jorgemdnt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorgemdnt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorgemdnt/subscriptions", "organizations_url": "https://api.github.com/users/jorgemdnt/orgs", "repos_url": "https://api.github.com/users/jorgemdnt/repos", "events_url": "https://api.github.com/users/jorgemdnt/events{/privacy}", "received_events_url": "https://api.github.com/users/jorgemdnt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-05T16:35:14Z", "updated_at": "2017-09-21T04:19:07Z", "closed_at": "2017-09-21T04:19:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there! I have a problem upgrading to versions >1.2.3. \r\n\r\nWe had code that was something like this:\r\n```python\r\nfor model in model_list:\r\n    # ...\r\n    send_foo_metric.delay(model.company_id, model.id)\r\n```\r\nInside the task there is the usual `analytics.track`.\r\n\r\nEvery day this code is ran with about 100 to 150 \"models\". It worked on every model until we tried to upgrade to 1.2.4 and above. There is no exception thrown, no errors on any tasks, but only about 10% ~ 20% from the tracks are sent. \r\n\r\nI have tried checking the [diff from version 1.2.3 to 1.2.4](https://github.com/segmentio/analytics-python/compare/1.2.3...1.2.4) but there was nothing very obvious to me that could cause the problem. The problem also occurs on the latest version. Can anyone help?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/94", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/94/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/94/events", "html_url": "https://github.com/segmentio/analytics-python/issues/94", "id": 227139378, "node_id": "MDU6SXNzdWUyMjcxMzkzNzg=", "number": 94, "title": "Date objects are removed from event properties", "user": {"login": "hadrien", "id": 75603, "node_id": "MDQ6VXNlcjc1NjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/75603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hadrien", "html_url": "https://github.com/hadrien", "followers_url": "https://api.github.com/users/hadrien/followers", "following_url": "https://api.github.com/users/hadrien/following{/other_user}", "gists_url": "https://api.github.com/users/hadrien/gists{/gist_id}", "starred_url": "https://api.github.com/users/hadrien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hadrien/subscriptions", "organizations_url": "https://api.github.com/users/hadrien/orgs", "repos_url": "https://api.github.com/users/hadrien/repos", "events_url": "https://api.github.com/users/hadrien/events{/privacy}", "received_events_url": "https://api.github.com/users/hadrien/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-08T18:52:13Z", "updated_at": "2017-09-19T19:53:18Z", "closed_at": "2017-09-19T19:53:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\r\n>>> from datetime import date\r\n>>> from analytics import utils\r\n>>> simple = {'birthdate': date(1981, 2, 2)}\r\n>>> utils.clean(simple)\r\nDictionary values must be serializeable to JSON \"birthdate\" value 1981-02-02 of type <class 'datetime.date'> is unsupported.\r\n{}\r\n```\r\n\r\nIt should not be removed as json serializer permits date object.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/91", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/91/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/91/events", "html_url": "https://github.com/segmentio/analytics-python/issues/91", "id": 202624105, "node_id": "MDU6SXNzdWUyMDI2MjQxMDU=", "number": 91, "title": "Date objects fail json serialization", "user": {"login": "hadrien", "id": 75603, "node_id": "MDQ6VXNlcjc1NjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/75603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hadrien", "html_url": "https://github.com/hadrien", "followers_url": "https://api.github.com/users/hadrien/followers", "following_url": "https://api.github.com/users/hadrien/following{/other_user}", "gists_url": "https://api.github.com/users/hadrien/gists{/gist_id}", "starred_url": "https://api.github.com/users/hadrien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hadrien/subscriptions", "organizations_url": "https://api.github.com/users/hadrien/orgs", "repos_url": "https://api.github.com/users/hadrien/repos", "events_url": "https://api.github.com/users/hadrien/events{/privacy}", "received_events_url": "https://api.github.com/users/hadrien/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-23T19:14:36Z", "updated_at": "2017-01-25T20:29:59Z", "closed_at": "2017-01-25T20:29:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Date objects fail json serialization:\r\n\r\n```\r\n>>> import json\r\n>>> from datetime import date\r\n>>> from analytics.request import DatetimeSerializer\r\n>>> json.dumps(date.today(), cls=DatetimeSerializer)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/hadrien/.pyenv/versions/3.5.2/lib/python3.5/json/__init__.py\", line 237, in dumps\r\n    **kw).encode(obj)\r\n  File \"/Users/hadrien/.pyenv/versions/3.5.2/lib/python3.5/json/encoder.py\", line 198, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File \"/Users/hadrien/.pyenv/versions/3.5.2/lib/python3.5/json/encoder.py\", line 256, in iterencode\r\n    return _iterencode(o, 0)\r\n  File \"/Users/hadrien/.virtualenvs/coredata/lib/python3.5/site-packages/analytics/request.py\", line 53, in default\r\n    return json.JSONEncoder.default(self, obj)\r\n  File \"/Users/hadrien/.pyenv/versions/3.5.2/lib/python3.5/json/encoder.py\", line 179, in default\r\n    raise TypeError(repr(o) + \" is not JSON serializable\")\r\nTypeError: datetime.date(2017, 1, 23) is not JSON serializable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/89", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/89/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/89/events", "html_url": "https://github.com/segmentio/analytics-python/issues/89", "id": 201975891, "node_id": "MDU6SXNzdWUyMDE5NzU4OTE=", "number": 89, "title": "Weird error while running on AWS Lambda", "user": {"login": "mchristen", "id": 1231534, "node_id": "MDQ6VXNlcjEyMzE1MzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1231534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mchristen", "html_url": "https://github.com/mchristen", "followers_url": "https://api.github.com/users/mchristen/followers", "following_url": "https://api.github.com/users/mchristen/following{/other_user}", "gists_url": "https://api.github.com/users/mchristen/gists{/gist_id}", "starred_url": "https://api.github.com/users/mchristen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mchristen/subscriptions", "organizations_url": "https://api.github.com/users/mchristen/orgs", "repos_url": "https://api.github.com/users/mchristen/repos", "events_url": "https://api.github.com/users/mchristen/events{/privacy}", "received_events_url": "https://api.github.com/users/mchristen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-19T21:08:32Z", "updated_at": "2017-11-23T00:11:10Z", "closed_at": "2017-11-23T00:11:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to flush the event queue I get the following error\r\n\r\n```error uploading: [Errno 2] No such file or directory```\r\n\r\nI added some print debugging to get the full stacktrace and this is it\r\n```\r\nTraceback (most recent call last):\r\n  File \"/var/task/analytics/consumer.py\", line 51, in upload\r\n    self.request(batch)\r\n  File \"/var/task/analytics/consumer.py\", line 87, in request\r\n    self.request(batch, attempt+1)\r\n  File \"/var/task/analytics/consumer.py\", line 87, in request\r\n    self.request(batch, attempt+1)\r\n  File \"/var/task/analytics/consumer.py\", line 87, in request\r\n    self.request(batch, attempt+1)\r\n  File \"/var/task/analytics/consumer.py\", line 87, in request\r\n    self.request(batch, attempt+1)\r\n  File \"/var/task/analytics/consumer.py\", line 83, in request\r\n    post(self.write_key, batch=batch)\r\n  File \"/var/task/analytics/request.py\", line 22, in post\r\n    res = _session.post(url, data=data, auth=auth, headers=headers, timeout=15)\r\n  File \"/var/task/requests/sessions.py\", line 535, in post\r\n    return self.request('POST', url, data=data, json=json, **kwargs)\r\n  File \"/var/task/requests/sessions.py\", line 488, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/var/task/requests/sessions.py\", line 609, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/var/task/requests/adapters.py\", line 497, in send\r\n    raise SSLError(e, request=request)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/87", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/87/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/87/events", "html_url": "https://github.com/segmentio/analytics-python/issues/87", "id": 192397211, "node_id": "MDU6SXNzdWUxOTIzOTcyMTE=", "number": 87, "title": "Drop Python 3.2 support", "user": {"login": "wojcikstefan", "id": 1718372, "node_id": "MDQ6VXNlcjE3MTgzNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1718372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wojcikstefan", "html_url": "https://github.com/wojcikstefan", "followers_url": "https://api.github.com/users/wojcikstefan/followers", "following_url": "https://api.github.com/users/wojcikstefan/following{/other_user}", "gists_url": "https://api.github.com/users/wojcikstefan/gists{/gist_id}", "starred_url": "https://api.github.com/users/wojcikstefan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wojcikstefan/subscriptions", "organizations_url": "https://api.github.com/users/wojcikstefan/orgs", "repos_url": "https://api.github.com/users/wojcikstefan/repos", "events_url": "https://api.github.com/users/wojcikstefan/events{/privacy}", "received_events_url": "https://api.github.com/users/wojcikstefan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-11-29T20:58:00Z", "updated_at": "2016-11-29T22:39:27Z", "closed_at": "2016-11-29T22:39:27Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As you can see under https://github.com/kennethreitz/requests#feature-support, `requests` (your dependency) doesn't support Python 3.2 anymore. New versions of virtualenv don't either (https://virtualenv.pypa.io/en/stable/changes/#id12).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/85", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/85/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/85/events", "html_url": "https://github.com/segmentio/analytics-python/issues/85", "id": 192391921, "node_id": "MDU6SXNzdWUxOTIzOTE5MjE=", "number": 85, "title": "analytics.flush can hang forever if analytics.send == False", "user": {"login": "wojcikstefan", "id": 1718372, "node_id": "MDQ6VXNlcjE3MTgzNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1718372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wojcikstefan", "html_url": "https://github.com/wojcikstefan", "followers_url": "https://api.github.com/users/wojcikstefan/followers", "following_url": "https://api.github.com/users/wojcikstefan/following{/other_user}", "gists_url": "https://api.github.com/users/wojcikstefan/gists{/gist_id}", "starred_url": "https://api.github.com/users/wojcikstefan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wojcikstefan/subscriptions", "organizations_url": "https://api.github.com/users/wojcikstefan/orgs", "repos_url": "https://api.github.com/users/wojcikstefan/repos", "events_url": "https://api.github.com/users/wojcikstefan/events{/privacy}", "received_events_url": "https://api.github.com/users/wojcikstefan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-29T20:34:10Z", "updated_at": "2016-12-08T03:35:55Z", "closed_at": "2016-12-08T03:35:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Calling `analytics.flush()` makes the shell hang forever, even keyboard interrupts don't work.\r\n\r\n```\r\nIn [1]: import analytics\r\n\r\nIn [2]: analytics.write_key = 'TEST_WRITE_KEY'\r\n\r\nIn [3]: analytics.send = False\r\n\r\nIn [4]: analytics.track('fake_user_id', 'Sent Email')\r\n\r\nIn [5]: analytics.flush()\r\n^C^C^C^C^C^C\r\n```\r\n\r\nTwo alternative options how to improve the behavior if `analytics.send` is set to `False`:\r\n1. `Client._enqueue` should never put items into the queue (it still makes sense to do everything else that that method does so that its behavior can be covered by unit tests).\r\n2. Let `Client.flush` return immediately or raise an exception saying that flush won't work if `send` is `False` because the consumer is not running.\r\n\r\nPersonally I prefer the 1st option.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/84", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/84/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/84/events", "html_url": "https://github.com/segmentio/analytics-python/issues/84", "id": 186881560, "node_id": "MDU6SXNzdWUxODY4ODE1NjA=", "number": 84, "title": "_coerce_unicode() is wrong", "user": {"login": "m-vdb", "id": 1931615, "node_id": "MDQ6VXNlcjE5MzE2MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1931615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-vdb", "html_url": "https://github.com/m-vdb", "followers_url": "https://api.github.com/users/m-vdb/followers", "following_url": "https://api.github.com/users/m-vdb/following{/other_user}", "gists_url": "https://api.github.com/users/m-vdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-vdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-vdb/subscriptions", "organizations_url": "https://api.github.com/users/m-vdb/orgs", "repos_url": "https://api.github.com/users/m-vdb/repos", "events_url": "https://api.github.com/users/m-vdb/events{/privacy}", "received_events_url": "https://api.github.com/users/m-vdb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9611232, "node_id": "MDU6TGFiZWw5NjExMjMy", "url": "https://api.github.com/repos/segmentio/analytics-python/labels/improvement", "name": "improvement", "color": "84b6eb", "default": false, "description": null}, {"id": 9611235, "node_id": "MDU6TGFiZWw5NjExMjM1", "url": "https://api.github.com/repos/segmentio/analytics-python/labels/jira", "name": "jira", "color": "db9808", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-11-02T18:21:15Z", "updated_at": "2020-03-09T20:23:49Z", "closed_at": "2020-03-09T20:23:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI noticed that in your [`clean()`](https://github.com/segmentio/analytics-python/blob/master/analytics/utils.py#L37-L48) function that sanitizes data before sending it to your API, if you encounter an unknown type, you will end up trying to coerce it to unicode, by using the [`_coerce_unicode()`](https://github.com/segmentio/analytics-python/blob/master/analytics/utils.py#L66-L76) function. Unfortunately, this doesn't play well with anything except strings (requires the `decode()` method). And sadly, you only log a warning [here](https://github.com/segmentio/analytics-python/blob/a74f9bd54596ecbce3c378236164ad19da473bb9/analytics/utils.py#L72).\r\n\r\nWe can do two things:\r\n- really coerce the item to unicode by calling `unicode()` on it if it's not a string (and keep the call to `decode()` if and only if `isinstance(item, basestring)`\r\n- enhance `logging` with more context so that when errors come up, we can actually retry sending the full event (and maybe log at error level)\r\n\r\nWe circumvented the errors in our codebase by checking that everything is JSON serializable before handing them to the SDK, but I really believe these are must-have enhancements :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/78", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/78/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/78/events", "html_url": "https://github.com/segmentio/analytics-python/issues/78", "id": 160883468, "node_id": "MDU6SXNzdWUxNjA4ODM0Njg=", "number": 78, "title": "Should not force dependency on python-dateutil < 2", "user": {"login": "BrunoDesthuilliers", "id": 15106675, "node_id": "MDQ6VXNlcjE1MTA2Njc1", "avatar_url": "https://avatars2.githubusercontent.com/u/15106675?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrunoDesthuilliers", "html_url": "https://github.com/BrunoDesthuilliers", "followers_url": "https://api.github.com/users/BrunoDesthuilliers/followers", "following_url": "https://api.github.com/users/BrunoDesthuilliers/following{/other_user}", "gists_url": "https://api.github.com/users/BrunoDesthuilliers/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrunoDesthuilliers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrunoDesthuilliers/subscriptions", "organizations_url": "https://api.github.com/users/BrunoDesthuilliers/orgs", "repos_url": "https://api.github.com/users/BrunoDesthuilliers/repos", "events_url": "https://api.github.com/users/BrunoDesthuilliers/events{/privacy}", "received_events_url": "https://api.github.com/users/BrunoDesthuilliers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-17T13:04:55Z", "updated_at": "2016-07-02T22:03:19Z", "closed_at": "2016-07-02T22:03:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Starting with 2.2, python-dateutil is python 2 (>= 2.6.x) compatible, and quite a few other python2 packages depends on dateutil > 2.1.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/75", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/75/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/75/events", "html_url": "https://github.com/segmentio/analytics-python/issues/75", "id": 154520474, "node_id": "MDU6SXNzdWUxNTQ1MjA0NzQ=", "number": 75, "title": "No changelog", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-12T16:03:25Z", "updated_at": "2016-05-15T09:06:18Z", "closed_at": "2016-05-13T20:48:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm upgrading from 1.1.0 to 1.2.3 and I have no idea what has changed\n\nThe [docs](https://segment.com/docs/libraries/python/) link to the [github releases atom](https://github.com/segmentio/analytics-python/releases.atom) which is useless as there is no metadata, jsut version numbers\n\nThe commit log is not readable when trying to determine the relevance of upgrades.\n\nPlease [keep a changelog](http://keepachangelog.com/) and make Segment.io a more useable product.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/74", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/74/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/74/events", "html_url": "https://github.com/segmentio/analytics-python/issues/74", "id": 144425914, "node_id": "MDU6SXNzdWUxNDQ0MjU5MTQ=", "number": 74, "title": "\"Python's standard datetime object is broken\"", "user": {"login": "dwieeb", "id": 236501, "node_id": "MDQ6VXNlcjIzNjUwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/236501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwieeb", "html_url": "https://github.com/dwieeb", "followers_url": "https://api.github.com/users/dwieeb/followers", "following_url": "https://api.github.com/users/dwieeb/following{/other_user}", "gists_url": "https://api.github.com/users/dwieeb/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwieeb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwieeb/subscriptions", "organizations_url": "https://api.github.com/users/dwieeb/orgs", "repos_url": "https://api.github.com/users/dwieeb/repos", "events_url": "https://api.github.com/users/dwieeb/events{/privacy}", "received_events_url": "https://api.github.com/users/dwieeb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-03-30T00:27:28Z", "updated_at": "2018-01-04T22:53:22Z", "closed_at": "2016-06-08T23:08:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a documentation issue, but I figure it may be best to talk directly to developers. \n\nhttps://segment.com/docs/libraries/python/#timezones-in-python\n\nPython datetime objects are not \"broken\". The Python datetime module, in fact, is one of the best standard library implementations of all the programming languages I've worked with. The Python core devs knew timezones were [difficult to work with](https://www.youtube.com/watch?v=-5wpm-gesOY). Libraries that deal with timezones are gnarly messes of spaghetti code that are constantly updated. Most people use `pytz`, which is able to be versioned independently of your installed Python, instead of being locked into timezones that existed at the date your version of Python was released.\n\nThe core team abstracted the timezone madness into the `tzinfo` classes, which you can implement to determine the offsets for a particular date.\n\n`tzinfo` classes are not required to use datetime objects in Python, which is good. It allows you to work with dates in an abstract way. These are called \"naive\" datetime objects. datetime objects which do have `tzinfo` objects are called \"aware\" datetime objects. This is documented in the second paragraph of the [datetime module docs](https://docs.python.org/3.5/library/datetime.html).\n\nThe following sentence on your docs shows a misunderstanding of how Python datetime objects work.\n\n![image](https://cloud.githubusercontent.com/assets/236501/14128074/03e1c6ca-f5e3-11e5-976d-8131ad766abd.png)\n\nThey don't \"lose timezone information\", whatever that means. You're not giving timezone information to the `now()` function in the first place. Try this: `datetime.datetime.now(tz=pytz.utc)`.\n\nThe following image on your docs depict the behavior of naive datetime objects in a way as if you're expecting them to be timezone aware. `now()` doesn't create timezone aware datetime objects unless you pass the `tz` keyword.\n\n![image](https://cloud.githubusercontent.com/assets/236501/14127660/3e12d20c-f5df-11e5-9483-21302fbe6ee4.png)\n\nAll you need to do, as a library, is require timezone aware datetime objects. Then you can `isoformat` them and all will be fine.\n\nPlease fix the documentation to not hate on Python datetime objects because of a misunderstanding.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/69", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/69/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/69/events", "html_url": "https://github.com/segmentio/analytics-python/issues/69", "id": 136862844, "node_id": "MDU6SXNzdWUxMzY4NjI4NDQ=", "number": 69, "title": "<type 'exceptions.ValueError'>: list.remove(x): x not in list", "user": {"login": "Dieterbe", "id": 20774, "node_id": "MDQ6VXNlcjIwNzc0", "avatar_url": "https://avatars2.githubusercontent.com/u/20774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dieterbe", "html_url": "https://github.com/Dieterbe", "followers_url": "https://api.github.com/users/Dieterbe/followers", "following_url": "https://api.github.com/users/Dieterbe/following{/other_user}", "gists_url": "https://api.github.com/users/Dieterbe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dieterbe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dieterbe/subscriptions", "organizations_url": "https://api.github.com/users/Dieterbe/orgs", "repos_url": "https://api.github.com/users/Dieterbe/repos", "events_url": "https://api.github.com/users/Dieterbe/events{/privacy}", "received_events_url": "https://api.github.com/users/Dieterbe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-27T01:54:28Z", "updated_at": "2016-06-06T21:49:52Z", "closed_at": "2016-06-06T20:39:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nwe signed up for your service and are trying it out for the first time.\ni wrote a simple script (not threaded) that sends some data but it crashes with this error, which seems to be caused by your library.\n\n```\nException in thread Thread-1 (most likely raised during interpreter shutdown):\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n  File \"/usr/local/lib/python2.7/dist-packages/analytics/consumer.py\", line 28, in run\n  File \"/usr/local/lib/python2.7/dist-packages/analytics/consumer.py\", line 39, in upload\n  File \"/usr/local/lib/python2.7/dist-packages/analytics/consumer.py\", line 62, in next\n  File \"/usr/local/lib/python2.7/dist-packages/analytics/consumer.py\", line 78, in next_item\n  File \"/usr/lib/python2.7/Queue.py\", line 177, in get\n  File \"/usr/lib/python2.7/threading.py\", line 363, in wait\n<type 'exceptions.ValueError'>: list.remove(x): x not in list\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/67", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/67/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/67/events", "html_url": "https://github.com/segmentio/analytics-python/issues/67", "id": 132281973, "node_id": "MDU6SXNzdWUxMzIyODE5NzM=", "number": 67, "title": "Remove param={} from all the methods", "user": {"login": "m-vdb", "id": 1931615, "node_id": "MDQ6VXNlcjE5MzE2MTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1931615?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-vdb", "html_url": "https://github.com/m-vdb", "followers_url": "https://api.github.com/users/m-vdb/followers", "following_url": "https://api.github.com/users/m-vdb/following{/other_user}", "gists_url": "https://api.github.com/users/m-vdb/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-vdb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-vdb/subscriptions", "organizations_url": "https://api.github.com/users/m-vdb/orgs", "repos_url": "https://api.github.com/users/m-vdb/repos", "events_url": "https://api.github.com/users/m-vdb/events{/privacy}", "received_events_url": "https://api.github.com/users/m-vdb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-08T23:01:38Z", "updated_at": "2016-02-08T23:32:16Z", "closed_at": "2016-02-08T23:26:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\nThe issue with [having mutable default arguments](https://github.com/segmentio/analytics-python/blob/master/analytics/client.py#L44-L45) is [that](http://docs.python-guide.org/en/latest/writing/gotchas/#mutable-default-arguments). Usually it can be replaced by `param = param or {}` or `param = param or []`.\n\nMax.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/66", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/66/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/66/events", "html_url": "https://github.com/segmentio/analytics-python/issues/66", "id": 132243667, "node_id": "MDU6SXNzdWUxMzIyNDM2Njc=", "number": 66, "title": "Give an ability to overwrite messageID", "user": {"login": "salvador-dali", "id": 7028169, "node_id": "MDQ6VXNlcjcwMjgxNjk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7028169?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salvador-dali", "html_url": "https://github.com/salvador-dali", "followers_url": "https://api.github.com/users/salvador-dali/followers", "following_url": "https://api.github.com/users/salvador-dali/following{/other_user}", "gists_url": "https://api.github.com/users/salvador-dali/gists{/gist_id}", "starred_url": "https://api.github.com/users/salvador-dali/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salvador-dali/subscriptions", "organizations_url": "https://api.github.com/users/salvador-dali/orgs", "repos_url": "https://api.github.com/users/salvador-dali/repos", "events_url": "https://api.github.com/users/salvador-dali/events{/privacy}", "received_events_url": "https://api.github.com/users/salvador-dali/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-08T20:06:15Z", "updated_at": "2018-10-15T18:08:08Z", "closed_at": "2016-05-09T20:53:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently I have not found a way to overwrite messageID. Python's library [sets it automatically ](https://github.com/segmentio/analytics-python/blob/master/analytics/client.py#L178)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/65", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/65/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/65/events", "html_url": "https://github.com/segmentio/analytics-python/issues/65", "id": 131394886, "node_id": "MDU6SXNzdWUxMzEzOTQ4ODY=", "number": 65, "title": "analytics.track() - asynchronous", "user": {"login": "patillacode", "id": 10074977, "node_id": "MDQ6VXNlcjEwMDc0OTc3", "avatar_url": "https://avatars3.githubusercontent.com/u/10074977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patillacode", "html_url": "https://github.com/patillacode", "followers_url": "https://api.github.com/users/patillacode/followers", "following_url": "https://api.github.com/users/patillacode/following{/other_user}", "gists_url": "https://api.github.com/users/patillacode/gists{/gist_id}", "starred_url": "https://api.github.com/users/patillacode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patillacode/subscriptions", "organizations_url": "https://api.github.com/users/patillacode/orgs", "repos_url": "https://api.github.com/users/patillacode/repos", "events_url": "https://api.github.com/users/patillacode/events{/privacy}", "received_events_url": "https://api.github.com/users/patillacode/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-02-04T16:08:27Z", "updated_at": "2016-02-04T18:37:20Z", "closed_at": "2016-02-04T17:48:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\nI have been working with Segment's analytics-python module for a little while now.\n\nToday I discovered that for example the `track` method is _asynchronous_.\nI never realized this before, since I usually use it within services that are always up (listeners, queues, etc)\n\nToday I had to do a simple script to read from a file and push some data into my Segment bucket. Surprisingly when I run the super simple script the data didn't get to my Segment debugger, although when I ran the same exact code in a python console it worked like a charm.\n\nI finally saw the problem was that my script finished before the `analytics.track()` function was done.\nI added an extra 10 seconds to wait for it to be executed and I made sure that was the problem indeed.\n\nSo, is there anyway to make the `track` method wait for itself? Any extra args I could put in? \nCallbacks? Any suggestions?\n\nI took sometime to go through all the options I didn't figure out a way to do it,\nany help is greatly appreciated.\n\nThanks for your time.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/63", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/63/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/63/events", "html_url": "https://github.com/segmentio/analytics-python/issues/63", "id": 125730177, "node_id": "MDU6SXNzdWUxMjU3MzAxNzc=", "number": 63, "title": "Decimals cause an error", "user": {"login": "cjhenck", "id": 2380566, "node_id": "MDQ6VXNlcjIzODA1NjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2380566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjhenck", "html_url": "https://github.com/cjhenck", "followers_url": "https://api.github.com/users/cjhenck/followers", "following_url": "https://api.github.com/users/cjhenck/following{/other_user}", "gists_url": "https://api.github.com/users/cjhenck/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjhenck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjhenck/subscriptions", "organizations_url": "https://api.github.com/users/cjhenck/orgs", "repos_url": "https://api.github.com/users/cjhenck/repos", "events_url": "https://api.github.com/users/cjhenck/events{/privacy}", "received_events_url": "https://api.github.com/users/cjhenck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-09T02:05:17Z", "updated_at": "2016-06-06T21:47:21Z", "closed_at": "2016-06-06T20:45:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Decimals are not serialized by the built in json package, but the code in analytics-python/analytics/utils.py reads:\n\n``` python\ndef clean(item):\n    if isinstance(item, (six.string_types, bool, numbers.Number, datetime,\n                         type(None))):\n        return item\n    elif isinstance(item, (set, list, tuple)):\n        return _clean_list(item)\n    elif isinstance(item, dict):\n        return _clean_dict(item)\n    else:\n        return _coerce_unicode(item)\n```\n\nDecimal is a numeric type so it is returned, but it should be cleaned somehow first.  Ideally this would be a custom JSONEncoder subclass (so that the string value of the JSON will be sent), but a float() conversion would help.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/62", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/62/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/62/events", "html_url": "https://github.com/segmentio/analytics-python/issues/62", "id": 120276371, "node_id": "MDU6SXNzdWUxMjAyNzYzNzE=", "number": 62, "title": "App Engine Stripped prohibited headers from URLFetch request: ['Content-Length']", "user": {"login": "Jonovono", "id": 775808, "node_id": "MDQ6VXNlcjc3NTgwOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/775808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jonovono", "html_url": "https://github.com/Jonovono", "followers_url": "https://api.github.com/users/Jonovono/followers", "following_url": "https://api.github.com/users/Jonovono/following{/other_user}", "gists_url": "https://api.github.com/users/Jonovono/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jonovono/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jonovono/subscriptions", "organizations_url": "https://api.github.com/users/Jonovono/orgs", "repos_url": "https://api.github.com/users/Jonovono/repos", "events_url": "https://api.github.com/users/Jonovono/events{/privacy}", "received_events_url": "https://api.github.com/users/Jonovono/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-12-03T21:41:27Z", "updated_at": "2016-05-09T20:50:08Z", "closed_at": "2016-05-09T20:50:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting this error running on appengine and the requests get blocked at it. Any idea?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/59", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/59/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/59/events", "html_url": "https://github.com/segmentio/analytics-python/issues/59", "id": 113600452, "node_id": "MDU6SXNzdWUxMTM2MDA0NTI=", "number": 59, "title": "Docs - urls.py vs App Ready", "user": {"login": "shredding", "id": 930136, "node_id": "MDQ6VXNlcjkzMDEzNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/930136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shredding", "html_url": "https://github.com/shredding", "followers_url": "https://api.github.com/users/shredding/followers", "following_url": "https://api.github.com/users/shredding/following{/other_user}", "gists_url": "https://api.github.com/users/shredding/gists{/gist_id}", "starred_url": "https://api.github.com/users/shredding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shredding/subscriptions", "organizations_url": "https://api.github.com/users/shredding/orgs", "repos_url": "https://api.github.com/users/shredding/repos", "events_url": "https://api.github.com/users/shredding/events{/privacy}", "received_events_url": "https://api.github.com/users/shredding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-27T14:43:37Z", "updated_at": "2016-05-09T20:49:52Z", "closed_at": "2016-05-09T20:49:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs state that I have to import analytics on the toplevel of django:\n\nhttps://segment.com/docs/libraries/python/#django\n\nFirst of all, this is outdated, as there is now an App Ready Hook Point in django: https://docs.djangoproject.com/en/dev/ref/applications/#django.apps.AppConfig.ready\n\nSecond: Can you elaborate why you are so fancy about having this in my urls.py?\n\nI do not want to hardcode an external service at such a prominent point in my architecture and I do not understand the reasons why.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/58", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/58/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/58/events", "html_url": "https://github.com/segmentio/analytics-python/issues/58", "id": 108946493, "node_id": "MDU6SXNzdWUxMDg5NDY0OTM=", "number": 58, "title": "Add versioning to setup.py requirements", "user": {"login": "brettpthomas", "id": 421686, "node_id": "MDQ6VXNlcjQyMTY4Ng==", "avatar_url": "https://avatars2.githubusercontent.com/u/421686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettpthomas", "html_url": "https://github.com/brettpthomas", "followers_url": "https://api.github.com/users/brettpthomas/followers", "following_url": "https://api.github.com/users/brettpthomas/following{/other_user}", "gists_url": "https://api.github.com/users/brettpthomas/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettpthomas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettpthomas/subscriptions", "organizations_url": "https://api.github.com/users/brettpthomas/orgs", "repos_url": "https://api.github.com/users/brettpthomas/repos", "events_url": "https://api.github.com/users/brettpthomas/events{/privacy}", "received_events_url": "https://api.github.com/users/brettpthomas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-09-29T19:54:32Z", "updated_at": "2016-03-11T22:40:53Z", "closed_at": "2016-03-11T22:12:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I had a previous version of python-dateutil (1.5) installed from another library, which broke `pip install analytics-python`. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/57", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/57/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/57/events", "html_url": "https://github.com/segmentio/analytics-python/issues/57", "id": 107849072, "node_id": "MDU6SXNzdWUxMDc4NDkwNzI=", "number": 57, "title": "\"No module named analytics\" error in Python", "user": {"login": "gadybadger", "id": 2170642, "node_id": "MDQ6VXNlcjIxNzA2NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/2170642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gadybadger", "html_url": "https://github.com/gadybadger", "followers_url": "https://api.github.com/users/gadybadger/followers", "following_url": "https://api.github.com/users/gadybadger/following{/other_user}", "gists_url": "https://api.github.com/users/gadybadger/gists{/gist_id}", "starred_url": "https://api.github.com/users/gadybadger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gadybadger/subscriptions", "organizations_url": "https://api.github.com/users/gadybadger/orgs", "repos_url": "https://api.github.com/users/gadybadger/repos", "events_url": "https://api.github.com/users/gadybadger/events{/privacy}", "received_events_url": "https://api.github.com/users/gadybadger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-23T04:47:57Z", "updated_at": "2016-11-14T12:20:09Z", "closed_at": "2016-05-09T20:49:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have followed the [instructions for installing the Python library](https://segment.com/docs/libraries/python/), specifically for Django.\n\nI ran `pip install analytics-python`, but when I try to add `import analytics` anywhere in my project, I get `No module named analytics` in both the PyCharm IDE and when running the app. I have confirmed that I'm using the correct Python Interpreter and `analytics-python` is indeed recognized as being installed. It isn't listed in the docs, but should anything be added to `INSTALLED_APPS`?\n\nAny help to resolve this is much appreciated.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/55", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/55/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/55/events", "html_url": "https://github.com/segmentio/analytics-python/issues/55", "id": 100760502, "node_id": "MDU6SXNzdWUxMDA3NjA1MDI=", "number": 55, "title": "App freezing with uwsgi", "user": {"login": "aidos", "id": 91913, "node_id": "MDQ6VXNlcjkxOTEz", "avatar_url": "https://avatars1.githubusercontent.com/u/91913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aidos", "html_url": "https://github.com/aidos", "followers_url": "https://api.github.com/users/aidos/followers", "following_url": "https://api.github.com/users/aidos/following{/other_user}", "gists_url": "https://api.github.com/users/aidos/gists{/gist_id}", "starred_url": "https://api.github.com/users/aidos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aidos/subscriptions", "organizations_url": "https://api.github.com/users/aidos/orgs", "repos_url": "https://api.github.com/users/aidos/repos", "events_url": "https://api.github.com/users/aidos/events{/privacy}", "received_events_url": "https://api.github.com/users/aidos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-13T12:44:54Z", "updated_at": "2015-09-21T11:10:40Z", "closed_at": "2015-08-13T15:05:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've just been trying to track down a really weird issue with running segment in flask under uwsgi. I'm explicitly creating the segment client myself.\n\nThe curious (non-app loading) bits of uwsgi look like this:\n\n```\nuwsgi --master -p 1 --vacuum --enable-threads \\\n        --carbon stats.example.com:2003 \\\n        --carbon-name-resolve\n```\n\nI actually contact segment during the starting of the app - which may be what's causing the issue. The code looks a little like this:\n\n```\napp = Flask(__name__)\napp.analytics = analytics.Client(write_key='blah')\napp.analytics.identify(user account info)\n```\n\nI have a whole lot of totally separate instances of the app and some of them load and some don't with no obvious reason for the differences. It won't even accept the first request.\n\nIf I add `app.analytics.flush()` after this bit of code - so it forces the thread to block and pump the data out to segment then the apps can start fine. I don't understand it at all but it seems to be something to do with running that thread before uwsgi takes control of the app. Or something.\n\nI thought I'd post it here in case someone else runs into the same issue.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/51", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/51/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/51/events", "html_url": "https://github.com/segmentio/analytics-python/issues/51", "id": 88856570, "node_id": "MDU6SXNzdWU4ODg1NjU3MA==", "number": 51, "title": "Segment causing celery workers to hang in django", "user": {"login": "gitumarkk", "id": 3369114, "node_id": "MDQ6VXNlcjMzNjkxMTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3369114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gitumarkk", "html_url": "https://github.com/gitumarkk", "followers_url": "https://api.github.com/users/gitumarkk/followers", "following_url": "https://api.github.com/users/gitumarkk/following{/other_user}", "gists_url": "https://api.github.com/users/gitumarkk/gists{/gist_id}", "starred_url": "https://api.github.com/users/gitumarkk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gitumarkk/subscriptions", "organizations_url": "https://api.github.com/users/gitumarkk/orgs", "repos_url": "https://api.github.com/users/gitumarkk/repos", "events_url": "https://api.github.com/users/gitumarkk/events{/privacy}", "received_events_url": "https://api.github.com/users/gitumarkk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2015-06-16T22:29:53Z", "updated_at": "2017-11-22T23:49:54Z", "closed_at": "2017-11-22T23:49:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use the django post save signal to trigger segment analytics tracking asynchronously using celery. However when multiple events (about 350 in 20 seconds) are created, all the celery workers hang up consistently at the following output.\n\n`[2015-06-12 22:41:34,245: INFO/Worker-2] Starting new HTTPS connection (1): api.segment.io\n[2015-06-12 22:41:34,574: DEBUG/Worker-2] \"POST /v1/batch HTTP/1.1\" 200 21\n[2015-06-12 22:41:34,578: DEBUG/Worker-2] data uploaded successfully`\n\nWhen the analytics tracking is commented out the workers function as expected. When the the celery rate limit is set to \"600/m\" the celery workers run without hanging. We have a celery hard time limit of 30 seconds to prevent segment from hanging. We found at a higher rate limit, the hard time limit was hit at high frequency and the analytics tracking was not sent through.\n\nNot sure why the segment library is causing this to happen, please advice.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/48", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/48/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/48/events", "html_url": "https://github.com/segmentio/analytics-python/issues/48", "id": 81475273, "node_id": "MDU6SXNzdWU4MTQ3NTI3Mw==", "number": 48, "title": "debug option to client works oddly (and doesn't work in python2.6)", "user": {"login": "greghball", "id": 649671, "node_id": "MDQ6VXNlcjY0OTY3MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/649671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greghball", "html_url": "https://github.com/greghball", "followers_url": "https://api.github.com/users/greghball/followers", "following_url": "https://api.github.com/users/greghball/following{/other_user}", "gists_url": "https://api.github.com/users/greghball/gists{/gist_id}", "starred_url": "https://api.github.com/users/greghball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greghball/subscriptions", "organizations_url": "https://api.github.com/users/greghball/orgs", "repos_url": "https://api.github.com/users/greghball/repos", "events_url": "https://api.github.com/users/greghball/events{/privacy}", "received_events_url": "https://api.github.com/users/greghball/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-27T14:41:28Z", "updated_at": "2015-06-23T06:42:24Z", "closed_at": "2015-06-23T06:42:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "When you create an instance of the `Client` class and pass `debug=True`, the `__init__` method will execute\n\n```\nself.log.setLevel('DEBUG')\n```\n\nand there are 2 problems with this.\n\n1) `self.log` is the logger instance named 'segment' - it's the same instance for every client, so if you create multiple clients you can't use different values for `debug` or things get confused.\n\n2) In python 2.6, you can't say `log.setLevel('DEBUG')`, you have to say `log.setLevel(logging.DEBUG)`, otherwise you're effectively setting the log level to an arbitrary high level and no log messages appear.\n\nIs python 2.6 supported? I can't find any documentation that specifies either way. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/47", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/47/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/47/events", "html_url": "https://github.com/segmentio/analytics-python/issues/47", "id": 69508828, "node_id": "MDU6SXNzdWU2OTUwODgyOA==", "number": 47, "title": "Cast non-string objects to string types", "user": {"login": "poswald", "id": 49721, "node_id": "MDQ6VXNlcjQ5NzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/49721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poswald", "html_url": "https://github.com/poswald", "followers_url": "https://api.github.com/users/poswald/followers", "following_url": "https://api.github.com/users/poswald/following{/other_user}", "gists_url": "https://api.github.com/users/poswald/gists{/gist_id}", "starred_url": "https://api.github.com/users/poswald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poswald/subscriptions", "organizations_url": "https://api.github.com/users/poswald/orgs", "repos_url": "https://api.github.com/users/poswald/repos", "events_url": "https://api.github.com/users/poswald/events{/privacy}", "received_events_url": "https://api.github.com/users/poswald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-20T05:17:21Z", "updated_at": "2015-06-23T07:43:21Z", "closed_at": "2015-06-23T07:43:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I previously hit this problem in this library, [fixed it](https://github.com/segmentio/analytics-python/commit/6310705df96fb8ee2faf0538443528f4b08a6850) and my PR was merged. Since then it seems like you rewrote much of it and reintroduced the problem. The problem is basically [with this line](https://github.com/segmentio/analytics-python/blob/fca319715715f54390960f017524e6c8117492d7/analytics/client.py#L204) of code. Here's the scenario:\n\n```\n>>> from decimal import Decimal\n>>> from six import string_types\n>>> isinstance(\"100.00\", string_types)\nTrue\n>>> isinstance(unicode(Decimal(\"100.00\")), string_types)\nTrue\n>>>\n>>> isinstance(Decimal(\"100.00\"), string_types)\nFalse\n```\n\nThere is no reason to reject decimal types. They serialize to JSON-compatible strings perfectly well. In short: many, many objects developers deal with in python are not strings but can still be serialized out and you probably shouldn't be so aggressive about rejecting them. This happens with Decimals, custom types, lazy localization strings, etc... Your users can all pepper their code with `unicode()` calls to explicitly cast them into the types you need for your JSON transport but the proper way to solve this would be for you to just try casting to whatever types your API expects/support for serialization.\n\nI am not 100% sure but I think this is also the problem outlined in issue #39.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/46", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/46/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/46/events", "html_url": "https://github.com/segmentio/analytics-python/issues/46", "id": 69464531, "node_id": "MDU6SXNzdWU2OTQ2NDUzMQ==", "number": 46, "title": "daemon thread exception", "user": {"login": "mgummelt", "id": 153734, "node_id": "MDQ6VXNlcjE1MzczNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/153734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgummelt", "html_url": "https://github.com/mgummelt", "followers_url": "https://api.github.com/users/mgummelt/followers", "following_url": "https://api.github.com/users/mgummelt/following{/other_user}", "gists_url": "https://api.github.com/users/mgummelt/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgummelt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgummelt/subscriptions", "organizations_url": "https://api.github.com/users/mgummelt/orgs", "repos_url": "https://api.github.com/users/mgummelt/repos", "events_url": "https://api.github.com/users/mgummelt/events{/privacy}", "received_events_url": "https://api.github.com/users/mgummelt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-19T21:08:40Z", "updated_at": "2016-06-06T20:38:59Z", "closed_at": "2016-06-06T20:38:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "This line: https://github.com/segmentio/analytics-python/blob/master/analytics/consumer.py#L15\n\n...during process shutdown causes \"Exception in thread Thread-1 (most likely raised during interpreter shutdown)\"\n\nthis is a known problem with daemon threads: http://stackoverflow.com/questions/20596918/python-exception-in-thread-thread-1-most-likely-raised-during-interpreter-shutd\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/44", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/44/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/44/events", "html_url": "https://github.com/segmentio/analytics-python/issues/44", "id": 64641690, "node_id": "MDU6SXNzdWU2NDY0MTY5MA==", "number": 44, "title": "Allow analytics to operate in passthrough mode", "user": {"login": "shakefu", "id": 1046227, "node_id": "MDQ6VXNlcjEwNDYyMjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1046227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakefu", "html_url": "https://github.com/shakefu", "followers_url": "https://api.github.com/users/shakefu/followers", "following_url": "https://api.github.com/users/shakefu/following{/other_user}", "gists_url": "https://api.github.com/users/shakefu/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakefu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakefu/subscriptions", "organizations_url": "https://api.github.com/users/shakefu/orgs", "repos_url": "https://api.github.com/users/shakefu/repos", "events_url": "https://api.github.com/users/shakefu/events{/privacy}", "received_events_url": "https://api.github.com/users/shakefu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-26T21:48:15Z", "updated_at": "2015-06-23T20:27:25Z", "closed_at": "2015-06-23T06:39:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you be open to a PR that allows the analytics to operate without a write_key?\n\nThis would let developers directly integrate analytics in their apps but not actually write data to the API. Definitely useful for debugging and teams where there are variants of dev, staging, test and demo environments, where it's not appropriate to send data to Segment.\n\nOtherwise a developer has to wrap the analytics API in a bunch of boilerplate to not enable/send data.\n\nThere's a couple ways that would make it easy to enable this. One would just to add `analytics.passthrough` and change `analytics._proxy` to not actually create the client instance if that is set, perhaps logging the calls instead.\n\nAnother could be to make this the default behavior if `analytics.write_key` is `None` or another known, default value. This has the added advantage of allowing late configuration of the `analytics.write_key` setting, which may be necessary in some large, complex applications (e.g. it would get rid of the need for the Django work-around that you have in the docs.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/42", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/42/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/42/events", "html_url": "https://github.com/segmentio/analytics-python/issues/42", "id": 62490618, "node_id": "MDU6SXNzdWU2MjQ5MDYxOA==", "number": 42, "title": "Package name should NOT be \"analytics\", rename to segment/segmentio", "user": {"login": "alvinchow86", "id": 5131063, "node_id": "MDQ6VXNlcjUxMzEwNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5131063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alvinchow86", "html_url": "https://github.com/alvinchow86", "followers_url": "https://api.github.com/users/alvinchow86/followers", "following_url": "https://api.github.com/users/alvinchow86/following{/other_user}", "gists_url": "https://api.github.com/users/alvinchow86/gists{/gist_id}", "starred_url": "https://api.github.com/users/alvinchow86/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alvinchow86/subscriptions", "organizations_url": "https://api.github.com/users/alvinchow86/orgs", "repos_url": "https://api.github.com/users/alvinchow86/repos", "events_url": "https://api.github.com/users/alvinchow86/events{/privacy}", "received_events_url": "https://api.github.com/users/alvinchow86/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9611235, "node_id": "MDU6TGFiZWw5NjExMjM1", "url": "https://api.github.com/repos/segmentio/analytics-python/labels/jira", "name": "jira", "color": "db9808", "default": false, "description": null}, {"id": 9611234, "node_id": "MDU6TGFiZWw5NjExMjM0", "url": "https://api.github.com/repos/segmentio/analytics-python/labels/support", "name": "support", "color": "cc317c", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 29, "created_at": "2015-03-17T19:12:10Z", "updated_at": "2017-11-27T19:31:17Z", "closed_at": "2017-11-27T19:31:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "The top-level package name really should be something unique, like **segmentio** or something. If you have another package or module loaded in your Python load path named analytics, a very common word, there is a name-space collision and it's possible (or very difficult) to resolve in Python\n\n``` python\n# import analytics\nimport segmentio\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/41", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/41/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/41/events", "html_url": "https://github.com/segmentio/analytics-python/issues/41", "id": 57490690, "node_id": "MDU6SXNzdWU1NzQ5MDY5MA==", "number": 41, "title": "Might be an issue with selecting integrations", "user": {"login": "stevenmiller888", "id": 7015626, "node_id": "MDQ6VXNlcjcwMTU2MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7015626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevenmiller888", "html_url": "https://github.com/stevenmiller888", "followers_url": "https://api.github.com/users/stevenmiller888/followers", "following_url": "https://api.github.com/users/stevenmiller888/following{/other_user}", "gists_url": "https://api.github.com/users/stevenmiller888/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevenmiller888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevenmiller888/subscriptions", "organizations_url": "https://api.github.com/users/stevenmiller888/orgs", "repos_url": "https://api.github.com/users/stevenmiller888/repos", "events_url": "https://api.github.com/users/stevenmiller888/events{/privacy}", "received_events_url": "https://api.github.com/users/stevenmiller888/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-02-12T17:19:29Z", "updated_at": "2015-02-12T19:09:15Z", "closed_at": "2015-02-12T19:09:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "e.g. { 'all': False, 'Mixpanel': True }\n\njust wanted to get this on here. need to investigate more\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/39", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/39/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/39/events", "html_url": "https://github.com/segmentio/analytics-python/issues/39", "id": 54368111, "node_id": "MDU6SXNzdWU1NDM2ODExMQ==", "number": 39, "title": "track event fails", "user": {"login": "stevenmiller888", "id": 7015626, "node_id": "MDQ6VXNlcjcwMTU2MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/7015626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevenmiller888", "html_url": "https://github.com/stevenmiller888", "followers_url": "https://api.github.com/users/stevenmiller888/followers", "following_url": "https://api.github.com/users/stevenmiller888/following{/other_user}", "gists_url": "https://api.github.com/users/stevenmiller888/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevenmiller888/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevenmiller888/subscriptions", "organizations_url": "https://api.github.com/users/stevenmiller888/orgs", "repos_url": "https://api.github.com/users/stevenmiller888/repos", "events_url": "https://api.github.com/users/stevenmiller888/events{/privacy}", "received_events_url": "https://api.github.com/users/stevenmiller888/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-01-14T19:54:08Z", "updated_at": "2015-06-23T07:43:27Z", "closed_at": "2015-06-23T07:43:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "e.g. analytics.track(1, \"Exception\", {\"fn\": lambda x: x })\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/37", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/37/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/37/events", "html_url": "https://github.com/segmentio/analytics-python/issues/37", "id": 52516928, "node_id": "MDU6SXNzdWU1MjUxNjkyOA==", "number": 37, "title": "Test coverage", "user": {"login": "ijl", "id": 1977222, "node_id": "MDQ6VXNlcjE5NzcyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1977222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijl", "html_url": "https://github.com/ijl", "followers_url": "https://api.github.com/users/ijl/followers", "following_url": "https://api.github.com/users/ijl/following{/other_user}", "gists_url": "https://api.github.com/users/ijl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijl/subscriptions", "organizations_url": "https://api.github.com/users/ijl/orgs", "repos_url": "https://api.github.com/users/ijl/repos", "events_url": "https://api.github.com/users/ijl/events{/privacy}", "received_events_url": "https://api.github.com/users/ijl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-19T19:03:48Z", "updated_at": "2015-12-25T06:36:01Z", "closed_at": "2015-12-25T06:36:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could you calculate test coverage on your build and link to it? This is useful in evaluating whether the use the library.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/36", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/36/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/36/events", "html_url": "https://github.com/segmentio/analytics-python/issues/36", "id": 52516855, "node_id": "MDU6SXNzdWU1MjUxNjg1NQ==", "number": 36, "title": "clean TypeError", "user": {"login": "ijl", "id": 1977222, "node_id": "MDQ6VXNlcjE5NzcyMjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1977222?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ijl", "html_url": "https://github.com/ijl", "followers_url": "https://api.github.com/users/ijl/followers", "following_url": "https://api.github.com/users/ijl/following{/other_user}", "gists_url": "https://api.github.com/users/ijl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ijl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ijl/subscriptions", "organizations_url": "https://api.github.com/users/ijl/orgs", "repos_url": "https://api.github.com/users/ijl/repos", "events_url": "https://api.github.com/users/ijl/events{/privacy}", "received_events_url": "https://api.github.com/users/ijl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-19T19:03:02Z", "updated_at": "2015-06-23T06:39:57Z", "closed_at": "2015-06-23T06:39:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "`analytics.utils.clean` will error if L43 `return _coerce_unicode(item)` is reached due to `_coerce_unicode` taking two arguments. This can be found by using Pylint: `No value passed for parameter 'cmplx' in function call (no-value-for-parameter)`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/35", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/35/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/35/events", "html_url": "https://github.com/segmentio/analytics-python/issues/35", "id": 51873734, "node_id": "MDU6SXNzdWU1MTg3MzczNA==", "number": 35, "title": "add Python 3 classifier to pypi", "user": {"login": "collinanderson", "id": 129234, "node_id": "MDQ6VXNlcjEyOTIzNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/129234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/collinanderson", "html_url": "https://github.com/collinanderson", "followers_url": "https://api.github.com/users/collinanderson/followers", "following_url": "https://api.github.com/users/collinanderson/following{/other_user}", "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}", "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions", "organizations_url": "https://api.github.com/users/collinanderson/orgs", "repos_url": "https://api.github.com/users/collinanderson/repos", "events_url": "https://api.github.com/users/collinanderson/events{/privacy}", "received_events_url": "https://api.github.com/users/collinanderson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-13T02:38:18Z", "updated_at": "2014-12-13T21:04:09Z", "closed_at": "2014-12-13T21:04:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "This will correct report analytics-python as being python3 compatible.\n\nProgramming Language :: Python :: 3\n\nHere's an example of a python 3 checker that says this isn't compatible:\n\nhttps://caniusepython3.com/project/analytics-python\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/34", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/34/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/34/events", "html_url": "https://github.com/segmentio/analytics-python/issues/34", "id": 47945425, "node_id": "MDU6SXNzdWU0Nzk0NTQyNQ==", "number": 34, "title": "Thread running after request in app engine", "user": {"login": "ubaldo", "id": 37529, "node_id": "MDQ6VXNlcjM3NTI5", "avatar_url": "https://avatars3.githubusercontent.com/u/37529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubaldo", "html_url": "https://github.com/ubaldo", "followers_url": "https://api.github.com/users/ubaldo/followers", "following_url": "https://api.github.com/users/ubaldo/following{/other_user}", "gists_url": "https://api.github.com/users/ubaldo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubaldo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubaldo/subscriptions", "organizations_url": "https://api.github.com/users/ubaldo/orgs", "repos_url": "https://api.github.com/users/ubaldo/repos", "events_url": "https://api.github.com/users/ubaldo/events{/privacy}", "received_events_url": "https://api.github.com/users/ubaldo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2014-11-06T10:22:00Z", "updated_at": "2018-03-12T19:26:20Z", "closed_at": "2017-11-22T23:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "In google app engine I consistently get the following error (not always, but very often). See stack trace below\n\nThe effect is that the event doesn't get recorded. When I first encounter this, I tried to isolate the call to analytics.track() in a task (using the handy deferred library), to avoid side effects on a user facing http request. So, I sleep better but still many events don't get recorded \n\nI'm only interested in executing one analytics track per task in the task queue. Was looking at the code to try avoiding the starting a new thread etc (threading is very tricky in app engine), but I don't see how to avoid it, even it queue-size is 1 I don't think it would work. \n\nIdeas?\n\n2014-11-06 10:39:41.179 consumer is running...\nD 2014-11-06 10:39:41.179 enqueued track.\nD 2014-11-06 10:39:41.181 making request: {\"batch\": [{\"event\": \"Payment Failed\", \"anonymousId\": null, \"context\": {\"library\": {\"version\": \"1.0.3\", \"name\": \"analytics-python\"}},\nI 2014-11-06 10:39:41.195 Starting new HTTPS connection (1): api.segment.io\nD 2014-11-06 10:39:41.836 \"POST /v1/batch HTTP/1.1\" 200 None\nD 2014-11-06 10:39:41.838 data uploaded successfully\nD 2014-11-06 10:39:41.959 successfully flushed 1 items.\nE 2014-11-06 10:49:39.608 Thread running after request. Creation traceback: File \"/base/data/home/runtimes/python27/python27_lib/versions/1/google/appengine/runtime/runtime.p\nI 2014-11-06 10:49:39.609 This request caused a new process to be started for your application, and thus caused your application code to be loaded for the first time. This requ\nW 2014-11-06 10:49:39.609 Threads started by this request continued executing past the hard deadline\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/33", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/33/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/33/events", "html_url": "https://github.com/segmentio/analytics-python/issues/33", "id": 45107543, "node_id": "MDU6SXNzdWU0NTEwNzU0Mw==", "number": 33, "title": "errors when calling client..", "user": {"login": "sirvon", "id": 1570089, "node_id": "MDQ6VXNlcjE1NzAwODk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1570089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sirvon", "html_url": "https://github.com/sirvon", "followers_url": "https://api.github.com/users/sirvon/followers", "following_url": "https://api.github.com/users/sirvon/following{/other_user}", "gists_url": "https://api.github.com/users/sirvon/gists{/gist_id}", "starred_url": "https://api.github.com/users/sirvon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sirvon/subscriptions", "organizations_url": "https://api.github.com/users/sirvon/orgs", "repos_url": "https://api.github.com/users/sirvon/repos", "events_url": "https://api.github.com/users/sirvon/events{/privacy}", "received_events_url": "https://api.github.com/users/sirvon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-10-07T13:35:12Z", "updated_at": "2016-02-01T23:21:02Z", "closed_at": "2015-06-23T07:28:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i call\n\n``` python\n client.identity(userid,)\n\nor\n\nanalytics.identity(userid,)\n```\n\nif get this error....\nNo handlers could be found for logger \"segment\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/32", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/32/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/32/events", "html_url": "https://github.com/segmentio/analytics-python/issues/32", "id": 44765016, "node_id": "MDU6SXNzdWU0NDc2NTAxNg==", "number": 32, "title": "Submit 1.0.3 to Pypi", "user": {"login": "diwu1989", "id": 380950, "node_id": "MDQ6VXNlcjM4MDk1MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/380950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diwu1989", "html_url": "https://github.com/diwu1989", "followers_url": "https://api.github.com/users/diwu1989/followers", "following_url": "https://api.github.com/users/diwu1989/following{/other_user}", "gists_url": "https://api.github.com/users/diwu1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/diwu1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diwu1989/subscriptions", "organizations_url": "https://api.github.com/users/diwu1989/orgs", "repos_url": "https://api.github.com/users/diwu1989/repos", "events_url": "https://api.github.com/users/diwu1989/events{/privacy}", "received_events_url": "https://api.github.com/users/diwu1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-03T03:49:47Z", "updated_at": "2014-10-03T05:07:50Z", "closed_at": "2014-10-03T05:07:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/30", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/30/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/30/events", "html_url": "https://github.com/segmentio/analytics-python/issues/30", "id": 44410444, "node_id": "MDU6SXNzdWU0NDQxMDQ0NA==", "number": 30, "title": "Make it possible to toggle send=False", "user": {"login": "diwu1989", "id": 380950, "node_id": "MDQ6VXNlcjM4MDk1MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/380950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diwu1989", "html_url": "https://github.com/diwu1989", "followers_url": "https://api.github.com/users/diwu1989/followers", "following_url": "https://api.github.com/users/diwu1989/following{/other_user}", "gists_url": "https://api.github.com/users/diwu1989/gists{/gist_id}", "starred_url": "https://api.github.com/users/diwu1989/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diwu1989/subscriptions", "organizations_url": "https://api.github.com/users/diwu1989/orgs", "repos_url": "https://api.github.com/users/diwu1989/repos", "events_url": "https://api.github.com/users/diwu1989/events{/privacy}", "received_events_url": "https://api.github.com/users/diwu1989/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-30T08:35:17Z", "updated_at": "2014-09-30T23:19:39Z", "closed_at": "2014-09-30T23:15:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When we are running our unit tests, we need to be able to set analytics.send to be False and not let the thread client waste time enqueueing.\n\nPlease add this capability.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/27", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/27/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/27/events", "html_url": "https://github.com/segmentio/analytics-python/issues/27", "id": 42258212, "node_id": "MDU6SXNzdWU0MjI1ODIxMg==", "number": 27, "title": "easy_install not working", "user": {"login": "ivolo", "id": 658544, "node_id": "MDQ6VXNlcjY1ODU0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/658544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivolo", "html_url": "https://github.com/ivolo", "followers_url": "https://api.github.com/users/ivolo/followers", "following_url": "https://api.github.com/users/ivolo/following{/other_user}", "gists_url": "https://api.github.com/users/ivolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivolo/subscriptions", "organizations_url": "https://api.github.com/users/ivolo/orgs", "repos_url": "https://api.github.com/users/ivolo/repos", "events_url": "https://api.github.com/users/ivolo/events{/privacy}", "received_events_url": "https://api.github.com/users/ivolo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-09T00:12:58Z", "updated_at": "2014-09-09T01:30:14Z", "closed_at": "2014-09-09T01:30:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Not sure will use `easy_install`, but I assume its some :)\n\n```\nivolo:~ ivolo$ easy_install analytics-python\nSearching for analytics-python\nReading http://pypi.python.org/simple/analytics-python/\nBest match: analytics-python 1.0.0\nDownloading https://pypi.python.org/packages/source/a/analytics-python/analytics-python-1.0.0.tar.gz#md5=89d4025...\nProcessing analytics-python-1.0.0.tar.gz\nRunning analytics-python-1.0.0/setup.py -q bdist_egg --dist-dir /var/folders/zl/db8k00cd6q387kg7nht3vn4h0000gn/T/easy_install-y5ctsJ/analytics-python-1.0.0/egg-dist-tmp-YlUYW2\nzip_safe flag not set; analyzing archive contents...\nanalytics.test.__init__: module references __path__\nAdding analytics-python 1.0.0 to easy-install.pth file\n\nInstalled /Library/Python/2.7/site-packages/analytics_python-1.0.0-py2.7.egg\nProcessing dependencies for analytics-python\nFinished processing dependencies for analytics-python\nivolo:~ ivolo$ python\nPython 2.7.5 (default, Mar  9 2014, 22:15:05)\n[GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import analytics\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Library/Python/2.7/site-packages/analytics_python-1.0.0-py2.7.egg/analytics/__init__.py\", line 3, in <module>\n    from analytics.client import Client\n  File \"/Library/Python/2.7/site-packages/analytics_python-1.0.0-py2.7.egg/analytics/client.py\", line 5, in <module>\n    import six\nImportError: No module named six\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/26", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/26/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/26/events", "html_url": "https://github.com/segmentio/analytics-python/issues/26", "id": 42257641, "node_id": "MDU6SXNzdWU0MjI1NzY0MQ==", "number": 26, "title": "Breaking on unicode arguments", "user": {"login": "samiruppaluru", "id": 967710, "node_id": "MDQ6VXNlcjk2NzcxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/967710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samiruppaluru", "html_url": "https://github.com/samiruppaluru", "followers_url": "https://api.github.com/users/samiruppaluru/followers", "following_url": "https://api.github.com/users/samiruppaluru/following{/other_user}", "gists_url": "https://api.github.com/users/samiruppaluru/gists{/gist_id}", "starred_url": "https://api.github.com/users/samiruppaluru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samiruppaluru/subscriptions", "organizations_url": "https://api.github.com/users/samiruppaluru/orgs", "repos_url": "https://api.github.com/users/samiruppaluru/repos", "events_url": "https://api.github.com/users/samiruppaluru/events{/privacy}", "received_events_url": "https://api.github.com/users/samiruppaluru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-09-09T00:02:28Z", "updated_at": "2014-09-09T22:43:57Z", "closed_at": "2014-09-09T01:02:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use the \n\n``` python\n# -*- coding: utf-8 -*-\nfrom __future__ import unicode_literals\n```\n\nheading on all our files, which defaults our strings to type 'unicode'. \n\nUpon upgrading to v1.0, analytics-python throws an exception being passed any unicode arguments, as it appears to do type-checking to explicitly check for 'str' type only. This applied for the analytics.write_key argument as well as the analytics.track 'event' name argument, but may be an issue elsewhere as well.\n\nNot sure if the explicit type-checking was intentional, but a more lenient 'isinstance' type-check seems more appropriate to allow for unicode strings, which worked in the previous 0.4.4 version.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/23", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/23/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/23/events", "html_url": "https://github.com/segmentio/analytics-python/issues/23", "id": 33311463, "node_id": "MDU6SXNzdWUzMzMxMTQ2Mw==", "number": 23, "title": "[Errno 8] _ssl.c:504: EOF occurred in violation of protocol", "user": {"login": "chrisdl", "id": 1074818, "node_id": "MDQ6VXNlcjEwNzQ4MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1074818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdl", "html_url": "https://github.com/chrisdl", "followers_url": "https://api.github.com/users/chrisdl/followers", "following_url": "https://api.github.com/users/chrisdl/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdl/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdl/subscriptions", "organizations_url": "https://api.github.com/users/chrisdl/orgs", "repos_url": "https://api.github.com/users/chrisdl/repos", "events_url": "https://api.github.com/users/chrisdl/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2014-05-12T14:18:11Z", "updated_at": "2016-05-10T09:03:00Z", "closed_at": "2016-05-09T20:43:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "My logs (sentry) are showing a Segment.io request error in `python2.7/site-packages/analytics/client.py`\n\n``` PYTHON\nStacktrace (most recent call last):\n\n  File \"analytics/client.py\", line 71, in request\n    timeout=client.timeout)\n  File \"requests/api.py\", line 88, in post\n    return request('post', url, data=data, **kwargs)\n  File \"requests/api.py\", line 44, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"requests/sessions.py\", line 383, in request\n    resp = self.send(prep, **send_kwargs)\n  File \"requests/sessions.py\", line 486, in send\n    r = adapter.send(request, **kwargs)\n  File \"requests/adapters.py\", line 389, in send\n    raise SSLError(e)\n```\n\nIt has happened about 900 times in the past 4 days. Any thoughts? Any more info I can give you?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/21", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/21/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/21/events", "html_url": "https://github.com/segmentio/analytics-python/issues/21", "id": 28300251, "node_id": "MDU6SXNzdWUyODMwMDI1MQ==", "number": 21, "title": "Ongoing changes for API v2", "user": {"login": "ianstormtaylor", "id": 311752, "node_id": "MDQ6VXNlcjMxMTc1Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/311752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianstormtaylor", "html_url": "https://github.com/ianstormtaylor", "followers_url": "https://api.github.com/users/ianstormtaylor/followers", "following_url": "https://api.github.com/users/ianstormtaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianstormtaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianstormtaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianstormtaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianstormtaylor/orgs", "repos_url": "https://api.github.com/users/ianstormtaylor/repos", "events_url": "https://api.github.com/users/ianstormtaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianstormtaylor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-02-26T01:04:22Z", "updated_at": "2014-09-05T22:17:15Z", "closed_at": "2014-09-05T22:17:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/segmentio/spec\n- [ ] Use HTTP Basic Auth with the project's **Write Key**.\n- [ ] Rename to `anonymousId` from `sessionId` for clarity.\n- [ ] Separate `integrations` (was `providers`) object from `context`, for cleaner logs.\n- [ ] Add `requestId` for easily tracing calls through to the raw logs.\n- [ ] Change `library` to be a object with `name` and `version` for consistency.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/20", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/20/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/20/events", "html_url": "https://github.com/segmentio/analytics-python/issues/20", "id": 24869462, "node_id": "MDU6SXNzdWUyNDg2OTQ2Mg==", "number": 20, "title": "add requestId's to each action flushed", "user": {"login": "reinpk", "id": 658545, "node_id": "MDQ6VXNlcjY1ODU0NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/reinpk", "html_url": "https://github.com/reinpk", "followers_url": "https://api.github.com/users/reinpk/followers", "following_url": "https://api.github.com/users/reinpk/following{/other_user}", "gists_url": "https://api.github.com/users/reinpk/gists{/gist_id}", "starred_url": "https://api.github.com/users/reinpk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/reinpk/subscriptions", "organizations_url": "https://api.github.com/users/reinpk/orgs", "repos_url": "https://api.github.com/users/reinpk/repos", "events_url": "https://api.github.com/users/reinpk/events{/privacy}", "received_events_url": "https://api.github.com/users/reinpk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9611232, "node_id": "MDU6TGFiZWw5NjExMjMy", "url": "https://api.github.com/repos/segmentio/analytics-python/labels/improvement", "name": "improvement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-29T23:18:40Z", "updated_at": "2014-09-05T22:17:26Z", "closed_at": "2014-09-05T22:17:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "the spec developed and deployed with the iOS SDK: https://gist.github.com/reinpk/7bd33d29694578b06cce (ignore the requestTimestamp on batch flushing since we don't want to correct timestamps coming from a server)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/19", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/19/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/19/events", "html_url": "https://github.com/segmentio/analytics-python/issues/19", "id": 22979119, "node_id": "MDU6SXNzdWUyMjk3OTExOQ==", "number": 19, "title": "python wheels support", "user": {"login": "ivolo", "id": 658544, "node_id": "MDQ6VXNlcjY1ODU0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/658544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivolo", "html_url": "https://github.com/ivolo", "followers_url": "https://api.github.com/users/ivolo/followers", "following_url": "https://api.github.com/users/ivolo/following{/other_user}", "gists_url": "https://api.github.com/users/ivolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivolo/subscriptions", "organizations_url": "https://api.github.com/users/ivolo/orgs", "repos_url": "https://api.github.com/users/ivolo/repos", "events_url": "https://api.github.com/users/ivolo/events{/privacy}", "received_events_url": "https://api.github.com/users/ivolo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 9611232, "node_id": "MDU6TGFiZWw5NjExMjMy", "url": "https://api.github.com/repos/segmentio/analytics-python/labels/improvement", "name": "improvement", "color": "84b6eb", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-11-20T09:09:56Z", "updated_at": "2015-06-23T07:56:43Z", "closed_at": "2015-06-23T07:56:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "http://pythonwheels.com/\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/16", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/16/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/16/events", "html_url": "https://github.com/segmentio/analytics-python/issues/16", "id": 17255711, "node_id": "MDU6SXNzdWUxNzI1NTcxMQ==", "number": 16, "title": "Django Stop/Restart flush events?", "user": {"login": "cmabastar", "id": 4414453, "node_id": "MDQ6VXNlcjQ0MTQ0NTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4414453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cmabastar", "html_url": "https://github.com/cmabastar", "followers_url": "https://api.github.com/users/cmabastar/followers", "following_url": "https://api.github.com/users/cmabastar/following{/other_user}", "gists_url": "https://api.github.com/users/cmabastar/gists{/gist_id}", "starred_url": "https://api.github.com/users/cmabastar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cmabastar/subscriptions", "organizations_url": "https://api.github.com/users/cmabastar/orgs", "repos_url": "https://api.github.com/users/cmabastar/repos", "events_url": "https://api.github.com/users/cmabastar/events{/privacy}", "received_events_url": "https://api.github.com/users/cmabastar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-26T09:40:53Z", "updated_at": "2013-08-10T18:35:01Z", "closed_at": "2013-08-10T18:35:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \n\nSorry this isn't a bug but more of a question.\n\nI would like to integrate segmentio in a django app however I have concern on what it does in cases that django would be restarted or stopped using through uwsgi. \nSince its using threads in background, will it flush all the messages before being stop or restarted?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/12", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/12/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/12/events", "html_url": "https://github.com/segmentio/analytics-python/issues/12", "id": 11896259, "node_id": "MDU6SXNzdWUxMTg5NjI1OQ==", "number": 12, "title": "Add empty method signatures in analytics module to silence static analyzers", "user": {"login": "tonyxiao", "id": 696842, "node_id": "MDQ6VXNlcjY5Njg0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/696842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonyxiao", "html_url": "https://github.com/tonyxiao", "followers_url": "https://api.github.com/users/tonyxiao/followers", "following_url": "https://api.github.com/users/tonyxiao/following{/other_user}", "gists_url": "https://api.github.com/users/tonyxiao/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonyxiao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonyxiao/subscriptions", "organizations_url": "https://api.github.com/users/tonyxiao/orgs", "repos_url": "https://api.github.com/users/tonyxiao/repos", "events_url": "https://api.github.com/users/tonyxiao/events{/privacy}", "received_events_url": "https://api.github.com/users/tonyxiao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-03-11T20:28:13Z", "updated_at": "2013-06-25T19:43:33Z", "closed_at": "2013-06-25T19:43:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "In `**init**.py', currently the code reads\n\n```\nfor method in methods:\n    setattr(this_module, method, uninitialized)\n```\n\nWhich definitely works in runtime, but some IDEs (e.g. PyCharm) and static analyzers are not able to provider autocompletion and marks method calls to say `analytics.track` as warning and complain that method doesn't exist. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/11", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/11/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/11/events", "html_url": "https://github.com/segmentio/analytics-python/issues/11", "id": 11896097, "node_id": "MDU6SXNzdWUxMTg5NjA5Nw==", "number": 11, "title": "Allow specifying sessionId rather than just userId", "user": {"login": "tonyxiao", "id": 696842, "node_id": "MDQ6VXNlcjY5Njg0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/696842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tonyxiao", "html_url": "https://github.com/tonyxiao", "followers_url": "https://api.github.com/users/tonyxiao/followers", "following_url": "https://api.github.com/users/tonyxiao/following{/other_user}", "gists_url": "https://api.github.com/users/tonyxiao/gists{/gist_id}", "starred_url": "https://api.github.com/users/tonyxiao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tonyxiao/subscriptions", "organizations_url": "https://api.github.com/users/tonyxiao/orgs", "repos_url": "https://api.github.com/users/tonyxiao/repos", "events_url": "https://api.github.com/users/tonyxiao/events{/privacy}", "received_events_url": "https://api.github.com/users/tonyxiao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-03-11T20:24:38Z", "updated_at": "2014-08-07T16:54:26Z", "closed_at": "2013-06-25T19:47:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sometimes we want to log metrics for unlogged in user on server side. Currently we could specify a random userId but that's really not the intended meaning of userId (which according to the docs is a persistent database identifier for the user). \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/10", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/10/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/10/events", "html_url": "https://github.com/segmentio/analytics-python/issues/10", "id": 11226010, "node_id": "MDU6SXNzdWUxMTIyNjAxMA==", "number": 10, "title": "Improve logging/callback/failfast of the library", "user": {"login": "poswald", "id": 49721, "node_id": "MDQ6VXNlcjQ5NzIx", "avatar_url": "https://avatars0.githubusercontent.com/u/49721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poswald", "html_url": "https://github.com/poswald", "followers_url": "https://api.github.com/users/poswald/followers", "following_url": "https://api.github.com/users/poswald/following{/other_user}", "gists_url": "https://api.github.com/users/poswald/gists{/gist_id}", "starred_url": "https://api.github.com/users/poswald/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poswald/subscriptions", "organizations_url": "https://api.github.com/users/poswald/orgs", "repos_url": "https://api.github.com/users/poswald/repos", "events_url": "https://api.github.com/users/poswald/events{/privacy}", "received_events_url": "https://api.github.com/users/poswald/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-02-21T02:59:20Z", "updated_at": "2016-05-09T20:42:29Z", "closed_at": "2016-05-09T20:42:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Giving the whole logging thing a bit more thought here's what I think would be ideal:\n- no print sys.stderr calls, everything should use logging\n- calls to `track()`, `identify()`, etc\u2026 should check if the library is configured right away and log to `ERROR` if it isn't however this shouldn't cause the call to return. It should still queue the data and behave as it normally would.\n- failed preconditions should use python's `assert` for internal checks/safeguards and raise `ValueError` if something is called improperly by the calling developer (with a missing `event` string for example). This gives the developer the chance to catch `ValueError`s and not have to catch `Exception` which is too general.\n- All calls to `track`, `identify`, etc... should cause an `on_success` or `on_failure` callback, not matter what. Ideally the call will be queued just like normal and then the sync thread would decide if it is properly configured and can send to the server or not. This allows a developer to check their code and print/debug even if they don't have a segment.io key.\n- In general, reduce the chance that calls to identify/track will raise exceptions on the request handling thread.\n\nThe main issue is that not all developers on a team should be sending data to segment.io but they should still be a) testing as much of the identify/track/queue/sync pathway as possible and b) have the option to receive the callbacks `on_failure` and `on_success` so they can see and test what _would_ have been sent.\n\nI just want to get these ideas down here for discussion.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/7", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/7/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/7/events", "html_url": "https://github.com/segmentio/analytics-python/issues/7", "id": 10932778, "node_id": "MDU6SXNzdWUxMDkzMjc3OA==", "number": 7, "title": "Fails to install in a clean virtualenv", "user": {"login": "hamstah", "id": 188302, "node_id": "MDQ6VXNlcjE4ODMwMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/188302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hamstah", "html_url": "https://github.com/hamstah", "followers_url": "https://api.github.com/users/hamstah/followers", "following_url": "https://api.github.com/users/hamstah/following{/other_user}", "gists_url": "https://api.github.com/users/hamstah/gists{/gist_id}", "starred_url": "https://api.github.com/users/hamstah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hamstah/subscriptions", "organizations_url": "https://api.github.com/users/hamstah/orgs", "repos_url": "https://api.github.com/users/hamstah/repos", "events_url": "https://api.github.com/users/hamstah/events{/privacy}", "received_events_url": "https://api.github.com/users/hamstah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-02-12T23:03:18Z", "updated_at": "2013-02-19T21:39:47Z", "closed_at": "2013-02-19T21:39:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\n\nSteps to reproduce\n\n```\nvirtualenv venv\nsource venv/bin/activate\npip install analytics-python\n```\n\nError message:\n\n```\n$ pip install analytics-python\nDownloading/unpacking analytics-python\n  Downloading analytics-python-0.3.5.tar.gz\n  Running setup.py egg_info for package analytics-python\n    analytics-python requires that you have a Python \"requests\" library installed. Try running \"pip install requests\"\n    Traceback (most recent call last):\n      File \"<string>\", line 16, in <module>\n      File \"/tmp/venv2/build/analytics-python/setup.py\", line 1, in <module>\n        from analytics import VERSION\n      File \"analytics/__init__.py\", line 17, in <module>\n        from client import Client\n      File \"analytics/client.py\", line 7, in <module>\n        from dateutil.tz import tzutc\n    ImportError: No module named dateutil.tz\n    Complete output from command python setup.py egg_info:\n    analytics-python requires that you have a Python \"requests\" library installed. Try running \"pip install requests\"\n\nTraceback (most recent call last):\n\n  File \"<string>\", line 16, in <module>\n\n  File \"/tmp/venv2/build/analytics-python/setup.py\", line 1, in <module>\n\n    from analytics import VERSION\n\n  File \"analytics/__init__.py\", line 17, in <module>\n\n    from client import Client\n\n  File \"analytics/client.py\", line 7, in <module>\n\n    from dateutil.tz import tzutc\n\nImportError: No module named dateutil.tz\n\n----------------------------------------\nCommand python setup.py egg_info failed with error code 1 in /tmp/venv2/build/analytics-python\nStoring complete log in /tmp/tmpq6IXRz\n```\n\nThis is caused by the version import from analytics.\nWhen the module is imported, the presence of required dependencies is checked, before setup processes them.\n\nThis makes it a problem to deploy cleanly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/6", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/6/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/6/events", "html_url": "https://github.com/segmentio/analytics-python/issues/6", "id": 10932570, "node_id": "MDU6SXNzdWUxMDkzMjU3MA==", "number": 6, "title": "Test \"randomly\" fail", "user": {"login": "hamstah", "id": 188302, "node_id": "MDQ6VXNlcjE4ODMwMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/188302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hamstah", "html_url": "https://github.com/hamstah", "followers_url": "https://api.github.com/users/hamstah/followers", "following_url": "https://api.github.com/users/hamstah/following{/other_user}", "gists_url": "https://api.github.com/users/hamstah/gists{/gist_id}", "starred_url": "https://api.github.com/users/hamstah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hamstah/subscriptions", "organizations_url": "https://api.github.com/users/hamstah/orgs", "repos_url": "https://api.github.com/users/hamstah/repos", "events_url": "https://api.github.com/users/hamstah/events{/privacy}", "received_events_url": "https://api.github.com/users/hamstah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-02-12T22:59:49Z", "updated_at": "2014-09-05T22:18:59Z", "closed_at": "2014-09-05T22:18:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\nBeen running the tests a few times and they seem to fail randomly (from what I can see).\nExample of failures below\n\n```\n======================================================================\nFAIL: test_async_basic_identify (__main__.AnalyticsBasicTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test.py\", line 98, in test_async_basic_identify\n    self.assertEqual(analytics.stats.successful, last_successful + 1)\nAssertionError: 0 != 1\n\n======================================================================\nFAIL: test_async_basic_track (__main__.AnalyticsBasicTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test.py\", line 119, in test_async_basic_track\n    self.assertEqual(analytics.stats.successful, last_successful + 1)\nAssertionError: 2 != 1\n\n======================================================================\nFAIL: test_async_full_track (__main__.AnalyticsBasicTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test.py\", line 175, in test_async_full_track\n    self.assertEqual(analytics.stats.successful, last_successful + 1)\nAssertionError: 3 != 4\n\n======================================================================\nFAIL: test_blocking_flush (__main__.AnalyticsBasicTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test.py\", line 194, in test_blocking_flush\n    self.assertEqual(analytics.stats.successful, last_successful + 1)\nAssertionError: 5 != 4\n\n----------------------------------------------------------------------\nRan 9 tests in 12.105s\n\nFAILED (failures=4)\n```\n\n```\n======================================================================\nFAIL: test_async_full_track (__main__.AnalyticsBasicTests)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test.py\", line 176, in test_async_full_track\n    self.assertEqual(analytics.stats.successful, last_successful + 1)\nAssertionError: 3 != 4\n\n----------------------------------------------------------------------\nRan 9 tests in 13.122s\n\nFAILED (failures=1)\n```\n\nlet me know if you need more details to reproduce\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/5", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/5/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/5/events", "html_url": "https://github.com/segmentio/analytics-python/issues/5", "id": 10320746, "node_id": "MDU6SXNzdWUxMDMyMDc0Ng==", "number": 5, "title": "Add timeout to requests.post() in client", "user": {"login": "Bpless", "id": 573606, "node_id": "MDQ6VXNlcjU3MzYwNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/573606?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bpless", "html_url": "https://github.com/Bpless", "followers_url": "https://api.github.com/users/Bpless/followers", "following_url": "https://api.github.com/users/Bpless/following{/other_user}", "gists_url": "https://api.github.com/users/Bpless/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bpless/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bpless/subscriptions", "organizations_url": "https://api.github.com/users/Bpless/orgs", "repos_url": "https://api.github.com/users/Bpless/repos", "events_url": "https://api.github.com/users/Bpless/events{/privacy}", "received_events_url": "https://api.github.com/users/Bpless/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-01-25T18:14:46Z", "updated_at": "2013-01-31T04:32:47Z", "closed_at": "2013-01-31T04:32:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looks like you guys are not adding a timeout here.   Seems like a nice way to degrade in the event that you service is down.\n\nAt the very least, offer it up as a configurable option.\n\nThe requests library allows you to specify a timeout as an optional keyword arg.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/3", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/3/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/3/events", "html_url": "https://github.com/segmentio/analytics-python/issues/3", "id": 7303511, "node_id": "MDU6SXNzdWU3MzAzNTEx", "number": 3, "title": "Add size-based flush test", "user": {"login": "ivolo", "id": 658544, "node_id": "MDQ6VXNlcjY1ODU0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/658544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivolo", "html_url": "https://github.com/ivolo", "followers_url": "https://api.github.com/users/ivolo/followers", "following_url": "https://api.github.com/users/ivolo/following{/other_user}", "gists_url": "https://api.github.com/users/ivolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivolo/subscriptions", "organizations_url": "https://api.github.com/users/ivolo/orgs", "repos_url": "https://api.github.com/users/ivolo/repos", "events_url": "https://api.github.com/users/ivolo/events{/privacy}", "received_events_url": "https://api.github.com/users/ivolo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ivolo", "id": 658544, "node_id": "MDQ6VXNlcjY1ODU0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/658544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivolo", "html_url": "https://github.com/ivolo", "followers_url": "https://api.github.com/users/ivolo/followers", "following_url": "https://api.github.com/users/ivolo/following{/other_user}", "gists_url": "https://api.github.com/users/ivolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivolo/subscriptions", "organizations_url": "https://api.github.com/users/ivolo/orgs", "repos_url": "https://api.github.com/users/ivolo/repos", "events_url": "https://api.github.com/users/ivolo/events{/privacy}", "received_events_url": "https://api.github.com/users/ivolo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ivolo", "id": 658544, "node_id": "MDQ6VXNlcjY1ODU0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/658544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivolo", "html_url": "https://github.com/ivolo", "followers_url": "https://api.github.com/users/ivolo/followers", "following_url": "https://api.github.com/users/ivolo/following{/other_user}", "gists_url": "https://api.github.com/users/ivolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivolo/subscriptions", "organizations_url": "https://api.github.com/users/ivolo/orgs", "repos_url": "https://api.github.com/users/ivolo/repos", "events_url": "https://api.github.com/users/ivolo/events{/privacy}", "received_events_url": "https://api.github.com/users/ivolo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2012-10-02T19:50:29Z", "updated_at": "2012-10-25T15:56:07Z", "closed_at": "2012-10-25T15:56:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "``` python\ntarget_flushes = 4\nactions = 0\nfor i in range(target_flushes * size_trigger):\n    action()\n    actions += 1\n\nassert stats.flushes == target_flushes\nassert stats.successful == actions\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/2", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/2/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/2/events", "html_url": "https://github.com/segmentio/analytics-python/issues/2", "id": 7303460, "node_id": "MDU6SXNzdWU3MzAzNDYw", "number": 2, "title": "Add time-based flush test", "user": {"login": "ivolo", "id": 658544, "node_id": "MDQ6VXNlcjY1ODU0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/658544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivolo", "html_url": "https://github.com/ivolo", "followers_url": "https://api.github.com/users/ivolo/followers", "following_url": "https://api.github.com/users/ivolo/following{/other_user}", "gists_url": "https://api.github.com/users/ivolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivolo/subscriptions", "organizations_url": "https://api.github.com/users/ivolo/orgs", "repos_url": "https://api.github.com/users/ivolo/repos", "events_url": "https://api.github.com/users/ivolo/events{/privacy}", "received_events_url": "https://api.github.com/users/ivolo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ivolo", "id": 658544, "node_id": "MDQ6VXNlcjY1ODU0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/658544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivolo", "html_url": "https://github.com/ivolo", "followers_url": "https://api.github.com/users/ivolo/followers", "following_url": "https://api.github.com/users/ivolo/following{/other_user}", "gists_url": "https://api.github.com/users/ivolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivolo/subscriptions", "organizations_url": "https://api.github.com/users/ivolo/orgs", "repos_url": "https://api.github.com/users/ivolo/repos", "events_url": "https://api.github.com/users/ivolo/events{/privacy}", "received_events_url": "https://api.github.com/users/ivolo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ivolo", "id": 658544, "node_id": "MDQ6VXNlcjY1ODU0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/658544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivolo", "html_url": "https://github.com/ivolo", "followers_url": "https://api.github.com/users/ivolo/followers", "following_url": "https://api.github.com/users/ivolo/following{/other_user}", "gists_url": "https://api.github.com/users/ivolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivolo/subscriptions", "organizations_url": "https://api.github.com/users/ivolo/orgs", "repos_url": "https://api.github.com/users/ivolo/repos", "events_url": "https://api.github.com/users/ivolo/events{/privacy}", "received_events_url": "https://api.github.com/users/ivolo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2012-10-02T19:48:56Z", "updated_at": "2012-10-25T15:56:07Z", "closed_at": "2012-10-25T15:56:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "1. Perform action\n2. Wait larger than time triggered flush\n3. Perform another action\n4. Check that the flush and successful matches 2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/segmentio/analytics-python/issues/1", "repository_url": "https://api.github.com/repos/segmentio/analytics-python", "labels_url": "https://api.github.com/repos/segmentio/analytics-python/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/segmentio/analytics-python/issues/1/comments", "events_url": "https://api.github.com/repos/segmentio/analytics-python/issues/1/events", "html_url": "https://github.com/segmentio/analytics-python/issues/1", "id": 7289368, "node_id": "MDU6SXNzdWU3Mjg5MzY4", "number": 1, "title": "Fix ordering issue in test.py", "user": {"login": "ivolo", "id": 658544, "node_id": "MDQ6VXNlcjY1ODU0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/658544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivolo", "html_url": "https://github.com/ivolo", "followers_url": "https://api.github.com/users/ivolo/followers", "following_url": "https://api.github.com/users/ivolo/following{/other_user}", "gists_url": "https://api.github.com/users/ivolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivolo/subscriptions", "organizations_url": "https://api.github.com/users/ivolo/orgs", "repos_url": "https://api.github.com/users/ivolo/repos", "events_url": "https://api.github.com/users/ivolo/events{/privacy}", "received_events_url": "https://api.github.com/users/ivolo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "ivolo", "id": 658544, "node_id": "MDQ6VXNlcjY1ODU0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/658544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivolo", "html_url": "https://github.com/ivolo", "followers_url": "https://api.github.com/users/ivolo/followers", "following_url": "https://api.github.com/users/ivolo/following{/other_user}", "gists_url": "https://api.github.com/users/ivolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivolo/subscriptions", "organizations_url": "https://api.github.com/users/ivolo/orgs", "repos_url": "https://api.github.com/users/ivolo/repos", "events_url": "https://api.github.com/users/ivolo/events{/privacy}", "received_events_url": "https://api.github.com/users/ivolo/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ivolo", "id": 658544, "node_id": "MDQ6VXNlcjY1ODU0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/658544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivolo", "html_url": "https://github.com/ivolo", "followers_url": "https://api.github.com/users/ivolo/followers", "following_url": "https://api.github.com/users/ivolo/following{/other_user}", "gists_url": "https://api.github.com/users/ivolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivolo/subscriptions", "organizations_url": "https://api.github.com/users/ivolo/orgs", "repos_url": "https://api.github.com/users/ivolo/repos", "events_url": "https://api.github.com/users/ivolo/events{/privacy}", "received_events_url": "https://api.github.com/users/ivolo/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2012-10-02T10:34:30Z", "updated_at": "2012-10-25T15:54:47Z", "closed_at": "2012-10-25T15:54:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The first request isn't made before the assert statement in only the first test. \n", "performed_via_github_app": null, "score": 1.0}]}