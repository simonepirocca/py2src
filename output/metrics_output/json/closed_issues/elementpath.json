{"total_count": 15, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/sissaschool/elementpath/issues/29", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/29/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/29/events", "html_url": "https://github.com/sissaschool/elementpath/issues/29", "id": 678984707, "node_id": "MDU6SXNzdWU2Nzg5ODQ3MDc=", "number": 29, "title": "Missing git tag for 2.0.0 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-14T08:12:14Z", "updated_at": "2020-08-14T10:53:45Z", "closed_at": "2020-08-14T10:53:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/28", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/28/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/28/events", "html_url": "https://github.com/sissaschool/elementpath/issues/28", "id": 663850221, "node_id": "MDU6SXNzdWU2NjM4NTAyMjE=", "number": 28, "title": "Second argument of 'index-of' method doesn't evaluate to element content", "user": {"login": "Elucin", "id": 3124891, "node_id": "MDQ6VXNlcjMxMjQ4OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3124891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elucin", "html_url": "https://github.com/Elucin", "followers_url": "https://api.github.com/users/Elucin/followers", "following_url": "https://api.github.com/users/Elucin/following{/other_user}", "gists_url": "https://api.github.com/users/Elucin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elucin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elucin/subscriptions", "organizations_url": "https://api.github.com/users/Elucin/orgs", "repos_url": "https://api.github.com/users/Elucin/repos", "events_url": "https://api.github.com/users/Elucin/events{/privacy}", "received_events_url": "https://api.github.com/users/Elucin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-22T15:26:50Z", "updated_at": "2020-08-14T10:54:47Z", "closed_at": "2020-08-14T10:54:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a piece of test code I'm working with:\r\n\r\n```\r\nfrom lxml import etree as ET\r\nimport elementpath\r\n\r\nroot = ET.fromstring(\"\"\"<root>\r\n    <incode>030</incode>\r\n    <descript></descript>\r\n</root>\"\"\")\r\n\r\ntest1 = \"/root/descript[index-of(('030','031'), '030')]\"\r\ntest2 = \"/root/descript[ancestor::root/incode = '030']\"\r\ntest3 = \"/root/descript[index-of(('030','031'), ancestor::root/incode)]\"\r\n\r\nassert len(elementpath.select(root, test1)) == 1\r\nassert len(elementpath.select(root, test2)) == 1\r\nassert len(elementpath.select(root, test3)) == 1\r\n```\r\n\r\n`test1` uses a literal string and finds the index in the list. As expected, it works fine and selects the <descript> element. \r\n`test2` is meant to prove that `ancestor::root/incode` does indeed return the expected value of `'030'`. \r\nBut then I get to `test3`, which should give the same results as `test1` given that  `ancestor::root/incode = '030'` is true, but instead I get an assert error, as the length of the selection is 0.\r\n\r\nSo I know that `ancestor::root/incode` gives the right value, but not when contained within the `index-of` method. (at least, I haven't tried it with other methods, but it may not be exclusive to the `index-of` method.)\r\n\r\nI'm using Python 3.8.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/27", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/27/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/27/events", "html_url": "https://github.com/sissaschool/elementpath/issues/27", "id": 622609565, "node_id": "MDU6SXNzdWU2MjI2MDk1NjU=", "number": 27, "title": "issue with attribute names in expressions that have a prefix matching a symbol", "user": {"login": "tjeb", "id": 1710740, "node_id": "MDQ6VXNlcjE3MTA3NDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1710740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tjeb", "html_url": "https://github.com/tjeb", "followers_url": "https://api.github.com/users/tjeb/followers", "following_url": "https://api.github.com/users/tjeb/following{/other_user}", "gists_url": "https://api.github.com/users/tjeb/gists{/gist_id}", "starred_url": "https://api.github.com/users/tjeb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tjeb/subscriptions", "organizations_url": "https://api.github.com/users/tjeb/orgs", "repos_url": "https://api.github.com/users/tjeb/repos", "events_url": "https://api.github.com/users/tjeb/events{/privacy}", "received_events_url": "https://api.github.com/users/tjeb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-21T16:07:26Z", "updated_at": "2020-05-25T21:38:26Z", "closed_at": "2020-05-22T21:24:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nI ran into another issue, and this time I don't really have any idea on how to fix it :/\r\n\r\nI have this document with elements that have an attribute '@is-a':\r\n\r\n`<sch:pattern is-a=\"requiredAttribute\">`\r\n\r\nThe xpath context expression that wants to find these is:\r\n\r\n`sch:pattern[@is-a]`\r\n\r\nParsing this throws an error in the XPath2Parser:\r\n\r\n`elementpath.exceptions.ElementPathSyntaxError: unexpected symbol 'is' at line`\r\n\r\nLooking into this, it appears that the tokenizer recognizes 'is' as a next token (since it is a symbol in xpath2), but in this case it should match 'is-a' as a potential name. Changing the attribute name in the expression to 'isa', 'xis-a', or 'isx-a' works fine. Unfortunately these are documents from a specific standard and changing the attribute name is not really an option :)\r\n\r\nI've taken a stab at trying to fix this, by adding lookaheads into the regular expression for the tokenizer, but so far I have not had much success.\r\n\r\nMy current workaround for this one specific example is to fall back to an XPath1 parser, but there are likely to be many use-cases where this is simply not an option.\r\n\r\nDo you have any ideas on whether and how this could be solved?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/25", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/25/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/25/events", "html_url": "https://github.com/sissaschool/elementpath/issues/25", "id": 600296594, "node_id": "MDU6SXNzdWU2MDAyOTY1OTQ=", "number": 25, "title": "Issues with count() and possibly other methods", "user": {"login": "RabbitJackTrade", "id": 39741388, "node_id": "MDQ6VXNlcjM5NzQxMzg4", "avatar_url": "https://avatars3.githubusercontent.com/u/39741388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RabbitJackTrade", "html_url": "https://github.com/RabbitJackTrade", "followers_url": "https://api.github.com/users/RabbitJackTrade/followers", "following_url": "https://api.github.com/users/RabbitJackTrade/following{/other_user}", "gists_url": "https://api.github.com/users/RabbitJackTrade/gists{/gist_id}", "starred_url": "https://api.github.com/users/RabbitJackTrade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RabbitJackTrade/subscriptions", "organizations_url": "https://api.github.com/users/RabbitJackTrade/orgs", "repos_url": "https://api.github.com/users/RabbitJackTrade/repos", "events_url": "https://api.github.com/users/RabbitJackTrade/events{/privacy}", "received_events_url": "https://api.github.com/users/RabbitJackTrade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-15T13:26:13Z", "updated_at": "2020-04-24T13:53:31Z", "closed_at": "2020-04-23T16:07:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Assume this xml:\r\n\r\n`sizes = \"\"\"<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<pages>\r\n    <page>\r\n        <box>\r\n            <line>\r\n                <text size=\"12.482\">C</text>\r\n                <text size=\"12.333\">A</text>\r\n                <text size=\"12.333\">P</text>\r\n                <text size=\"12.333\">I</text>\r\n                <text size=\"12.482\">T</text>\r\n                <text size=\"12.482\">O</text>\r\n                <text size=\"12.482\">L</text>\r\n                <text size=\"12.482\">O</text>\r\n                <text></text>\r\n                <text size=\"12.482\">I</text>\r\n                <text size=\"12.482\">I</text>\r\n                <text size=\"12.482\">I</text>\r\n                <text></text>\r\n            </line>\r\n        </box>\r\n    </page>\r\n</pages>\r\n\"\"\"`\r\n\r\nAnd this code:\r\n`from lxml import etree`\r\n`import elementpath`\r\n`content = sizes.encode('utf-8')`\r\n`root = etree.XML(content)`\r\n\r\n\r\nSay I want to count using the following xpath expression:\r\n\r\n`expres = 'count(//text[@size=\"12.482\"][not(preceding-sibling::text[1][@size=\"12.482\"])])'`\r\n\r\nThe right answer is '3'. It can be verified by eyeballing the xml, or [online here](http://xpather.com/AMDrlC2B).\r\n\r\nBut when I compare etree to elemenpath I get this:\r\n\r\n`et_cnt = root.xpath(expres)`\r\n`ep_cnt = elementpath.select(root,expres)`\r\n`print('etree count =',int(et_cnt))`\r\n`print('elementpath count =',ep_cnt)`\r\n\r\nWith the output being:\r\n`etree count = 3`\r\n`elementpath count = 1`\r\n\r\nAm I doing something wrong or is it a bug?\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/18", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/18/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/18/events", "html_url": "https://github.com/sissaschool/elementpath/issues/18", "id": 581508331, "node_id": "MDU6SXNzdWU1ODE1MDgzMzE=", "number": 18, "title": "Test regressions on PyPy3", "user": {"login": "mgorny", "id": 110765, "node_id": "MDQ6VXNlcjExMDc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/110765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgorny", "html_url": "https://github.com/mgorny", "followers_url": "https://api.github.com/users/mgorny/followers", "following_url": "https://api.github.com/users/mgorny/following{/other_user}", "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions", "organizations_url": "https://api.github.com/users/mgorny/orgs", "repos_url": "https://api.github.com/users/mgorny/repos", "events_url": "https://api.github.com/users/mgorny/events{/privacy}", "received_events_url": "https://api.github.com/users/mgorny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-15T04:30:51Z", "updated_at": "2020-03-20T14:35:21Z", "closed_at": "2020-03-20T14:35:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ pypy3 --version\r\nPython 3.6.9 (1608da62bfc71e8ac775121dd0b21bb72e61c6ea, Dec 25 2019, 15:23:23)\r\n[PyPy 7.3.0 with GCC 9.2.0]\r\n```\r\n\r\n```\r\n======================================================================\r\nFAIL: test_base64_binary_constructor (tests.test_xpath2_constructors.LxmlXPath2ConstructorsTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/portage/dev-python/elementpath-1.4.2/work/elementpath-1.4.2/tests/test_xpath2_constructors.py\", line 520, in test_base64_binary_constructor\r\n    self.check_value('xs:base64Binary(.)', TypeError, context=context)\r\n  File \"/tmp/portage/dev-python/elementpath-1.4.2/work/elementpath-1.4.2/tests/xpath_test_class.py\", line 126, in check_value\r\n    self.assertRaises(expected, root_token.evaluate, context)\r\nAssertionError: TypeError not raised by evaluate\r\n\r\n======================================================================\r\nFAIL: test_hex_binary_constructor (tests.test_xpath2_constructors.LxmlXPath2ConstructorsTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/portage/dev-python/elementpath-1.4.2/work/elementpath-1.4.2/tests/test_xpath2_constructors.py\", line 498, in test_hex_binary_constructor\r\n    self.check_value('xs:hexBinary(.)', TypeError, context=context)\r\n  File \"/tmp/portage/dev-python/elementpath-1.4.2/work/elementpath-1.4.2/tests/xpath_test_class.py\", line 126, in check_value\r\n    self.assertRaises(expected, root_token.evaluate, context)\r\nAssertionError: TypeError not raised by evaluate\r\n\r\n======================================================================\r\nFAIL: test_base64_binary_constructor (tests.test_xpath2_constructors.XPath2ConstructorsTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/portage/dev-python/elementpath-1.4.2/work/elementpath-1.4.2/tests/test_xpath2_constructors.py\", line 520, in test_base64_binary_constructor\r\n    self.check_value('xs:base64Binary(.)', TypeError, context=context)\r\n  File \"/tmp/portage/dev-python/elementpath-1.4.2/work/elementpath-1.4.2/tests/xpath_test_class.py\", line 126, in check_value\r\n    self.assertRaises(expected, root_token.evaluate, context)\r\nAssertionError: TypeError not raised by evaluate\r\n\r\n======================================================================\r\nFAIL: test_hex_binary_constructor (tests.test_xpath2_constructors.XPath2ConstructorsTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/portage/dev-python/elementpath-1.4.2/work/elementpath-1.4.2/tests/test_xpath2_constructors.py\", line 498, in test_hex_binary_constructor\r\n    self.check_value('xs:hexBinary(.)', TypeError, context=context)\r\n  File \"/tmp/portage/dev-python/elementpath-1.4.2/work/elementpath-1.4.2/tests/xpath_test_class.py\", line 126, in check_value\r\n    self.assertRaises(expected, root_token.evaluate, context)\r\nAssertionError: TypeError not raised by evaluate\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/17", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/17/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/17/events", "html_url": "https://github.com/sissaschool/elementpath/issues/17", "id": 552270602, "node_id": "MDU6SXNzdWU1NTIyNzA2MDI=", "number": 17, "title": "Two unittest Stra\u00dfe vs Strasse fails", "user": {"login": "eLvErDe", "id": 1586757, "node_id": "MDQ6VXNlcjE1ODY3NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1586757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eLvErDe", "html_url": "https://github.com/eLvErDe", "followers_url": "https://api.github.com/users/eLvErDe/followers", "following_url": "https://api.github.com/users/eLvErDe/following{/other_user}", "gists_url": "https://api.github.com/users/eLvErDe/gists{/gist_id}", "starred_url": "https://api.github.com/users/eLvErDe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eLvErDe/subscriptions", "organizations_url": "https://api.github.com/users/eLvErDe/orgs", "repos_url": "https://api.github.com/users/eLvErDe/repos", "events_url": "https://api.github.com/users/eLvErDe/events{/privacy}", "received_events_url": "https://api.github.com/users/eLvErDe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-20T12:29:08Z", "updated_at": "2020-01-28T21:56:00Z", "closed_at": "2020-01-28T21:55:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nUsing latest elementpath and xmlschema schema I have two failure on my box with Python 3.7:\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n___________ XPath2ParserXMLSchemaTest.test_compare_strings_function ____________\r\n\r\nself = <tests.test_schema_proxy.XPath2ParserXMLSchemaTest testMethod=test_compare_strings_function>\r\n\r\n    def test_compare_strings_function(self):\r\n        self.check_value(\"fn:compare('abc', 'abc')\", 0)\r\n        self.check_value(\"fn:compare('abc', 'abcd')\", -1)\r\n        self.check_value(\"fn:compare('abcd', 'abc')\", 1)\r\n    \r\n        self.check_value(u\"fn:compare('Strasse', 'Stra\u00dfe')\", -1)\r\n>       self.check_value(u\"fn:compare('Strassen', 'Stra\u00dfe')\", 1)\r\n\r\ntests/test_xpath2_parser.py:365: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntests/test_xpath1_parser.py:161: in check_value\r\n    self.assertEqual(root_token.evaluate(context), expected)\r\nE   AssertionError: -1 != 1\r\n_________ LxmlXPath2ParserXMLSchemaTest.test_compare_strings_function __________\r\n\r\nself = <tests.test_schema_proxy.LxmlXPath2ParserXMLSchemaTest testMethod=test_compare_strings_function>\r\n\r\n    def test_compare_strings_function(self):\r\n        self.check_value(\"fn:compare('abc', 'abc')\", 0)\r\n        self.check_value(\"fn:compare('abc', 'abcd')\", -1)\r\n        self.check_value(\"fn:compare('abcd', 'abc')\", 1)\r\n    \r\n        self.check_value(u\"fn:compare('Strasse', 'Stra\u00dfe')\", -1)\r\n>       self.check_value(u\"fn:compare('Strassen', 'Stra\u00dfe')\", 1)\r\n\r\ntests/test_xpath2_parser.py:365: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\ntests/test_xpath1_parser.py:161: in check_value\r\n    self.assertEqual(root_token.evaluate(context), expected)\r\nE   AssertionError: -1 != 1\r\n===================== 2 failed, 934 passed in 6.06 seconds =====================\r\n```\r\n\r\nRegards, Adam.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/15", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/15/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/15/events", "html_url": "https://github.com/sissaschool/elementpath/issues/15", "id": 539559189, "node_id": "MDU6SXNzdWU1Mzk1NTkxODk=", "number": 15, "title": "test_datatypes.(Duration|Timezone)TypesTest.test_hashing fails on 32bit arches", "user": {"login": "hroncok", "id": 2401856, "node_id": "MDQ6VXNlcjI0MDE4NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2401856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hroncok", "html_url": "https://github.com/hroncok", "followers_url": "https://api.github.com/users/hroncok/followers", "following_url": "https://api.github.com/users/hroncok/following{/other_user}", "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}", "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions", "organizations_url": "https://api.github.com/users/hroncok/orgs", "repos_url": "https://api.github.com/users/hroncok/repos", "events_url": "https://api.github.com/users/hroncok/events{/privacy}", "received_events_url": "https://api.github.com/users/hroncok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-18T09:29:41Z", "updated_at": "2020-01-01T11:15:02Z", "closed_at": "2020-01-01T11:15:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ma packaging elementpath for Fedora. As a arch independent package, it gets a random (Fedora supported) architecture during build. On armv7hl I have a test failure, <del>probably due to overflow</del>:\r\n\r\n```\r\nFAIL: test_hashing (tests.test_datatypes.DurationTypesTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/elementpath-1.3.2/tests/test_datatypes.py\", line 603, in test_hashing\r\n    self.assertEqual(hash(Duration(16)), 6141449309508620102)\r\nAssertionError: -1561201661 != 6141449309508620102\r\n======================================================================\r\nFAIL: test_hashing (tests.test_datatypes.TimezoneTypeTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/elementpath-1.3.2/tests/test_datatypes.py\", line 653, in test_hashing\r\n    self.assertEqual(hash(Timezone.fromstring('+05:00')), 7009945331308913293)\r\nAssertionError: 1370907298 != 7009945331308913293\r\n```\r\n\r\nThat is with elementpath 1.3.2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/14", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/14/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/14/events", "html_url": "https://github.com/sissaschool/elementpath/issues/14", "id": 538655421, "node_id": "MDU6SXNzdWU1Mzg2NTU0MjE=", "number": 14, "title": "Improper behavior of '//' expression", "user": {"login": "Elucin", "id": 3124891, "node_id": "MDQ6VXNlcjMxMjQ4OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3124891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elucin", "html_url": "https://github.com/Elucin", "followers_url": "https://api.github.com/users/Elucin/followers", "following_url": "https://api.github.com/users/Elucin/following{/other_user}", "gists_url": "https://api.github.com/users/Elucin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elucin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elucin/subscriptions", "organizations_url": "https://api.github.com/users/Elucin/orgs", "repos_url": "https://api.github.com/users/Elucin/repos", "events_url": "https://api.github.com/users/Elucin/events{/privacy}", "received_events_url": "https://api.github.com/users/Elucin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-16T21:00:23Z", "updated_at": "2019-12-19T07:08:48Z", "closed_at": "2019-12-19T07:08:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following xpath expression:\r\n\r\n`/pm/content/pmEntry/pmEntry//pmEntry[@pmEntryType]` \r\n\r\nThis is a fairly straightforward expression, and is compatible with XPath 1.0. When I use the `Element.xpath` method from `lxml`, it evaluates properly. But when using `elementpath.select`, it selects elements that do not match the selector.\r\n\r\nHere's an example:\r\n\r\n```python3\r\n>>> from lxml import etree as ET\r\n>>> import elementpath\r\n>>> root = ET.fromstring(\"\"\"<pm>\r\n...     <content>\r\n...         <pmEntry>\r\n...             <pmEntry pmEntryType=\"pm001\">\r\n...             </pmEntry>\r\n...         </pmEntry>\r\n...     </content>\r\n... </pm>\"\"\")\r\n>>> root.xpath(\"/pm/content/pmEntry/pmEntry//pmEntry[@pmEntryType]\")\r\n[]\r\n>>> elementpath.select(root, \"/pm/content/pmEntry/pmEntry//pmEntry[@pmEntryType]\r\n\")\r\n[<Element pmEntry at 0x29e08e8>]\r\n```\r\n\r\nThe selector should only select `pmEntry` elements with `@pmEntryType` nested in the second `pmEntry`. As you can see, the `xpath` expression correctly returns an empty list, whereas the `select` method returns the `pmEntry` element.\r\n\r\nUnless there was some change to syntax from 1.0 to 2.0, both of these methods should return an empty list.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/13", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/13/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/13/events", "html_url": "https://github.com/sissaschool/elementpath/issues/13", "id": 537200502, "node_id": "MDU6SXNzdWU1MzcyMDA1MDI=", "number": 13, "title": "normalize-space() expecting at least one argument", "user": {"login": "Elucin", "id": 3124891, "node_id": "MDQ6VXNlcjMxMjQ4OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3124891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elucin", "html_url": "https://github.com/Elucin", "followers_url": "https://api.github.com/users/Elucin/followers", "following_url": "https://api.github.com/users/Elucin/following{/other_user}", "gists_url": "https://api.github.com/users/Elucin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elucin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elucin/subscriptions", "organizations_url": "https://api.github.com/users/Elucin/orgs", "repos_url": "https://api.github.com/users/Elucin/repos", "events_url": "https://api.github.com/users/Elucin/events{/privacy}", "received_events_url": "https://api.github.com/users/Elucin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-12T20:37:08Z", "updated_at": "2019-12-19T07:09:30Z", "closed_at": "2019-12-19T07:09:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "When trying to use the `select` method on an XPath expression with `normalize-space()`, it throws an error:\r\n\r\n```\r\n'normalize-space' function: [err:XPST0017] Too few arguments: expected at least 1 argument.\r\n```\r\n\r\nBut as far as I'm aware, `normalize-space()`  takes an _optional_ string argument. Is this behavior intended?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/12", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/12/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/12/events", "html_url": "https://github.com/sissaschool/elementpath/issues/12", "id": 526736245, "node_id": "MDU6SXNzdWU1MjY3MzYyNDU=", "number": 12, "title": "test_compare_strings_function does not handle missing locales gracefully", "user": {"login": "mgorny", "id": 110765, "node_id": "MDQ6VXNlcjExMDc2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/110765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgorny", "html_url": "https://github.com/mgorny", "followers_url": "https://api.github.com/users/mgorny/followers", "following_url": "https://api.github.com/users/mgorny/following{/other_user}", "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions", "organizations_url": "https://api.github.com/users/mgorny/orgs", "repos_url": "https://api.github.com/users/mgorny/repos", "events_url": "https://api.github.com/users/mgorny/events{/privacy}", "received_events_url": "https://api.github.com/users/mgorny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-21T17:24:12Z", "updated_at": "2019-12-10T10:40:42Z", "closed_at": "2019-12-10T10:40:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "The tests fail on systems not having all tested locales installed. Instead, I think the particular parts of tests should be skipped if locale in question is not available.\r\n\r\nExample error:\r\n\r\n```\r\n======================================================================\r\nERROR: test_compare_strings_function (tests.test_xpath2_parser.LxmlXPath2ParserTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/tmp/elementpath-1.3.1/tests/test_xpath2_parser.py\", line 362, in test_compare_strings_function\r\n    self.check_value(u\"fn:compare('Strasse', 'Stra\u00dfe', 'it_IT')\", -1)\r\n  File \"/tmp/elementpath-1.3.1/tests/test_xpath1_parser.py\", line 145, in check_value\r\n    root_token = self.parser.parse(path)\r\n  File \"/tmp/elementpath-1.3.1/elementpath/xpath2_parser.py\", line 348, in parse\r\n    root_token.evaluate()  # Static context evaluation\r\n  File \"/tmp/elementpath-1.3.1/elementpath/xpath1_parser.py\", line 350, in evaluate\r\n    return self[1].evaluate(context)\r\n  File \"/tmp/elementpath-1.3.1/elementpath/xpath2_functions.py\", line 640, in evaluate\r\n    with self.use_locale(collation=self.get_argument(context, 2)):\r\n  File \"/usr/lib64/python2.7/contextlib.py\", line 17, in __enter__\r\n    return self.gen.next()\r\n  File \"/tmp/elementpath-1.3.1/elementpath/xpath_token.py\", line 469, in use_locale\r\n    raise self.error('FOCH0002', 'Unsupported collation %r' % collation)\r\nElementPathLocaleError: 'compare' function: [err:FOCH0002] Unsupported collation u'it_IT'.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/10", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/10/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/10/events", "html_url": "https://github.com/sissaschool/elementpath/issues/10", "id": 508543549, "node_id": "MDU6SXNzdWU1MDg1NDM1NDk=", "number": 10, "title": "XPath tokenizer problem: Namespaces with URLs containing hashes (#) cause 'unbalanced parenthesis' or 'invalid expression' regexp error", "user": {"login": "denebolar", "id": 3278561, "node_id": "MDQ6VXNlcjMyNzg1NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3278561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denebolar", "html_url": "https://github.com/denebolar", "followers_url": "https://api.github.com/users/denebolar/followers", "following_url": "https://api.github.com/users/denebolar/following{/other_user}", "gists_url": "https://api.github.com/users/denebolar/gists{/gist_id}", "starred_url": "https://api.github.com/users/denebolar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denebolar/subscriptions", "organizations_url": "https://api.github.com/users/denebolar/orgs", "repos_url": "https://api.github.com/users/denebolar/repos", "events_url": "https://api.github.com/users/denebolar/events{/privacy}", "received_events_url": "https://api.github.com/users/denebolar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-17T15:09:45Z", "updated_at": "2019-10-22T15:58:47Z", "closed_at": "2019-10-21T12:13:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently relying on the XML schema `http://www.w3.org/2000/09/xmldsig#` to create &lt;signature&gt; elements in signed XML documents. The hash (#) in the URL causes a problem in the XPath parser.\r\n\r\nAs soon as `elementpath/tdop_parser.py:create_tokenizer()` tries to compile the regexp\r\n\r\n    pattern = tokenizer_pattern_template % (\r\n        '|'.join(sorted(string_patterns, key=lambda x: -len(x))),\r\n        ''.join(character_patterns),\r\n        name_pattern\r\n    )\r\n    return re.compile(pattern, re.VERBOSE)\r\n\r\nwhere one resulting `string_pattern` is \r\n\r\n    '\\\\b{http://www.w3.org/2000/09/xmldsig#}CryptoBinary(?=\\\\s*\\\\(|\\\\s*\\\\(\\\\:.*\\\\:\\\\)\\\\()'\r\n\r\nthe hash (#) in the pattern masks the string right of it as a comment towards Python's regexp module resulting in an incomplete pattern:\r\n\r\n      File \"/usr/local/lib/python2.7/dist-packages/xmlschema/validators/schema.py\", line 1317, in encode\r\n        for result in self.iter_encode(obj, path, validation, *args, **kwargs):\r\n      File \"/usr/local/lib/python2.7/dist-packages/xmlschema/validators/schema.py\", line 1287, in iter_encode\r\n        xsd_element = self.find(path, namespaces=namespaces)\r\n      File \"/usr/local/lib/python2.7/dist-packages/xmlschema/xpath.py\", line 233, in find\r\n        default_namespace=self.xpath_default_namespace)\r\n      File \"/usr/local/lib/python2.7/dist-packages/elementpath/xpath2_parser.py\", line 183, in __init__\r\n        self.tokenizer = create_tokenizer(self.symbol_table, XML_NCNAME_PATTERN)\r\n      File \"/usr/local/lib/python2.7/dist-packages/elementpath/tdop_parser.py\", line 93, in create_tokenizer\r\n        return re.compile(pattern, re.VERBOSE)\r\n      File \"/usr/lib/python2.7/re.py\", line 194, in compile\r\n        return _compile(pattern, flags)\r\n      File \"/usr/lib/python2.7/re.py\", line 251, in _compile\r\n        raise error, v # invalid expression\r\n    error: unbalanced parenthesis\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/6", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/6/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/6/events", "html_url": "https://github.com/sissaschool/elementpath/issues/6", "id": 487743026, "node_id": "MDU6SXNzdWU0ODc3NDMwMjY=", "number": 6, "title": "Missing git tag for 1.2.1 release", "user": {"login": "felixonmars", "id": 1006477, "node_id": "MDQ6VXNlcjEwMDY0Nzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1006477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felixonmars", "html_url": "https://github.com/felixonmars", "followers_url": "https://api.github.com/users/felixonmars/followers", "following_url": "https://api.github.com/users/felixonmars/following{/other_user}", "gists_url": "https://api.github.com/users/felixonmars/gists{/gist_id}", "starred_url": "https://api.github.com/users/felixonmars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felixonmars/subscriptions", "organizations_url": "https://api.github.com/users/felixonmars/orgs", "repos_url": "https://api.github.com/users/felixonmars/repos", "events_url": "https://api.github.com/users/felixonmars/events{/privacy}", "received_events_url": "https://api.github.com/users/felixonmars/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-31T07:51:50Z", "updated_at": "2019-08-31T08:05:18Z", "closed_at": "2019-08-31T08:05:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to keep PyPI releases and git tags in sync :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/4", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/4/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/4/events", "html_url": "https://github.com/sissaschool/elementpath/issues/4", "id": 437681469, "node_id": "MDU6SXNzdWU0Mzc2ODE0Njk=", "number": 4, "title": "Problems with min max for german locals", "user": {"login": "jmeyer65", "id": 49978828, "node_id": "MDQ6VXNlcjQ5OTc4ODI4", "avatar_url": "https://avatars1.githubusercontent.com/u/49978828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmeyer65", "html_url": "https://github.com/jmeyer65", "followers_url": "https://api.github.com/users/jmeyer65/followers", "following_url": "https://api.github.com/users/jmeyer65/following{/other_user}", "gists_url": "https://api.github.com/users/jmeyer65/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmeyer65/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmeyer65/subscriptions", "organizations_url": "https://api.github.com/users/jmeyer65/orgs", "repos_url": "https://api.github.com/users/jmeyer65/repos", "events_url": "https://api.github.com/users/jmeyer65/events{/privacy}", "received_events_url": "https://api.github.com/users/jmeyer65/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-26T13:47:05Z", "updated_at": "2019-05-20T21:31:14Z", "closed_at": "2019-05-20T21:31:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The function for the XPath function min/max retrieves as first the locale for resetting the local at the end. \r\nThe simplified command \r\n`locale.setlocale(locale.LC_ALL, locale.getlocale())`\r\nexecuted inside a python shell crashes with the exception:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<pyshell#4>\", line 1, in <module>\r\n    locale.setlocale(locale.LC_ALL, locale.getlocale())\r\n  File \"C:\\Users\\hjo\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\locale.py\", line 604, in setlocale\r\n    return _setlocale(category, locale)\r\nlocale.Error: unsupported locale setting\r\n```\r\nFor me it seems to be a problem of python. \r\nLooking at the code inside xpath2_functions.py the problem could be postpone when using locale only when it is really necessary. Furthermore adding a finally clause for set back the locales also in case of an exception. Attached you find my proposal line 323 till 359 for the rewriting of the  min and max XPath functions. \r\n[xpath2_functions.txt](https://github.com/brunato/elementpath/files/3121805/xpath2_functions.txt)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/3", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/3/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/3/events", "html_url": "https://github.com/sissaschool/elementpath/issues/3", "id": 412918592, "node_id": "MDU6SXNzdWU0MTI5MTg1OTI=", "number": 3, "title": "\"'minInclusive' must be less or equal to 'maxInclusive'.\" error for correct data", "user": {"login": "wswswsk", "id": 47848040, "node_id": "MDQ6VXNlcjQ3ODQ4MDQw", "avatar_url": "https://avatars3.githubusercontent.com/u/47848040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wswswsk", "html_url": "https://github.com/wswswsk", "followers_url": "https://api.github.com/users/wswswsk/followers", "following_url": "https://api.github.com/users/wswswsk/following{/other_user}", "gists_url": "https://api.github.com/users/wswswsk/gists{/gist_id}", "starred_url": "https://api.github.com/users/wswswsk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wswswsk/subscriptions", "organizations_url": "https://api.github.com/users/wswswsk/orgs", "repos_url": "https://api.github.com/users/wswswsk/repos", "events_url": "https://api.github.com/users/wswswsk/events{/privacy}", "received_events_url": "https://api.github.com/users/wswswsk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-21T13:15:02Z", "updated_at": "2019-02-23T21:59:05Z", "closed_at": "2019-02-23T21:59:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "XMLSchema raises an error:\r\n```\r\nxmlschema.validators.exceptions.XMLSchemaParseError: 'minInclusive' must be less or equal to 'maxInclusive':\r\n\r\nSchema:\r\n\r\n  <xsd:restriction xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" base=\"xsd:gYear\">\r\n      <xsd:minInclusive value=\"1900\" />\r\n      <xsd:maxInclusive value=\"2030\" />\r\n  </xsd:restriction>\r\n\r\nPath: /xsd:schema/xsd:simpleType[13]/xsd:restriction\r\n```\r\n\r\nThe issue happens ~half the time, but not always, when I'm trying to create XMLSchema. The code is as simple as\r\n```\r\nimport xmlschema\r\nschema = xmlschema.XMLSchema(\"JednostkaInnaWZlotych(1)_v1-0.xsd\")\r\n```\r\nIf you'd want to check out the .xsd file, [you can download it here.](https://www.mf.gov.pl/documents/764034/6464789/JednostkaInnaWZlotych%281%29_v1-0.xsd)\r\nThe related part is in one of the imported files:\r\n```\r\n\t<xsd:simpleType name=\"TRok\">\r\n\t\t<xsd:annotation>\r\n\t\t\t<xsd:documentation>Oznaczenie roku</xsd:documentation>\r\n\t\t</xsd:annotation>\r\n\t\t<xsd:restriction base=\"xsd:gYear\">\r\n\t\t\t<xsd:minInclusive value=\"1900\"/>\r\n\t\t\t<xsd:maxInclusive value=\"2030\"/>\r\n\t\t</xsd:restriction>\r\n\t</xsd:simpleType>\r\n```\r\n\r\nWhat I found during the debugging, the check_facets inside XMLSchema sometimes says that 1900 > 2030 when it's of the GregorianYear10 type, as an ugly fix, we modified xmlschema/validators/simple_types.py by adding \r\n```\r\n        if isinstance(max_inclusive, elementpath.datatypes.GregorianYear10):\r\n            max_inclusive = max_inclusive._dt\r\n        if isinstance(min_inclusive, elementpath.datatypes.GregorianYear10):\r\n            min_inclusive = min_inclusive._dt\r\n        if isinstance(max_exclusive, elementpath.datatypes.GregorianYear10):\r\n            max_exclusive = max_exclusive._dt\r\n        if isinstance(min_exclusive, elementpath.datatypes.GregorianYear10):\r\n            min_exclusive = min_exclusive._dt\r\n```\r\nat 218 line.\r\n\r\nI know that the issue is almost entirely about XMLSchema, but the source of the problem is that comparing GregorianYear10 type from this library doesn't always yield expected results.\r\n\r\nIf there's any more info you need, I'll try to help if I'm able to.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sissaschool/elementpath/issues/1", "repository_url": "https://api.github.com/repos/sissaschool/elementpath", "labels_url": "https://api.github.com/repos/sissaschool/elementpath/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/sissaschool/elementpath/issues/1/comments", "events_url": "https://api.github.com/repos/sissaschool/elementpath/issues/1/events", "html_url": "https://github.com/sissaschool/elementpath/issues/1", "id": 405744798, "node_id": "MDU6SXNzdWU0MDU3NDQ3OTg=", "number": 1, "title": "Using . in ends-with results in an exception", "user": {"login": "imoore76", "id": 11607287, "node_id": "MDQ6VXNlcjExNjA3Mjg3", "avatar_url": "https://avatars1.githubusercontent.com/u/11607287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imoore76", "html_url": "https://github.com/imoore76", "followers_url": "https://api.github.com/users/imoore76/followers", "following_url": "https://api.github.com/users/imoore76/following{/other_user}", "gists_url": "https://api.github.com/users/imoore76/gists{/gist_id}", "starred_url": "https://api.github.com/users/imoore76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imoore76/subscriptions", "organizations_url": "https://api.github.com/users/imoore76/orgs", "repos_url": "https://api.github.com/users/imoore76/repos", "events_url": "https://api.github.com/users/imoore76/events{/privacy}", "received_events_url": "https://api.github.com/users/imoore76/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-01T15:18:49Z", "updated_at": "2019-02-08T16:00:43Z", "closed_at": "2019-02-06T22:59:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Example code:\r\n\r\n```\r\nPython 2.7.5 (default, Nov 20 2015, 02:00:19) \r\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-4)] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import elementpath\r\n>>> elementpath.Selector(\"//FullPath[ends-with(., 'Temp')]\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python2.7/site-packages/elementpath/xpath_selectors.py\", line 71, in __init__\r\n    self.root_token = self.parser.parse(path)\r\n  File \"/usr/lib/python2.7/site-packages/elementpath/tdop_parser.py\", line 400, in parse\r\n    root_token = self.expression()\r\n  File \"/usr/lib/python2.7/site-packages/elementpath/tdop_parser.py\", line 523, in expression\r\n    left = token.led(left)\r\n  File \"/usr/lib/python2.7/site-packages/elementpath/xpath1_parser.py\", line 635, in led\r\n    self[:] = left, self.parser.expression()\r\n  File \"/usr/lib/python2.7/site-packages/elementpath/tdop_parser.py\", line 519, in expression\r\n    left = token.nud()\r\n  File \"/usr/lib/python2.7/site-packages/elementpath/xpath1_parser.py\", line 170, in nud_\r\n    self.value = self.evaluate()  # Static context evaluation\r\n  File \"/usr/lib/python2.7/site-packages/elementpath/xpath2_functions.py\", line 744, in evaluate\r\n    return arg1.endswith(arg2)\r\nAttributeError: 'NoneType' object has no attribute 'endswith'\r\n```\r\n\r\nI'm guessing starts-with, et. al. have the same problem. Using version 1.1.1.\r\n", "performed_via_github_app": null, "score": 1.0}]}