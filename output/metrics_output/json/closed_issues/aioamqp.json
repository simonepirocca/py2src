{"total_count": 72, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/220", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/220/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/220/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/220", "id": 623979437, "node_id": "MDU6SXNzdWU2MjM5Nzk0Mzc=", "number": 220, "title": "Is there any usage example or tutorial documents", "user": {"login": "tony-is-coding", "id": 34122761, "node_id": "MDQ6VXNlcjM0MTIyNzYx", "avatar_url": "https://avatars0.githubusercontent.com/u/34122761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tony-is-coding", "html_url": "https://github.com/tony-is-coding", "followers_url": "https://api.github.com/users/tony-is-coding/followers", "following_url": "https://api.github.com/users/tony-is-coding/following{/other_user}", "gists_url": "https://api.github.com/users/tony-is-coding/gists{/gist_id}", "starred_url": "https://api.github.com/users/tony-is-coding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tony-is-coding/subscriptions", "organizations_url": "https://api.github.com/users/tony-is-coding/orgs", "repos_url": "https://api.github.com/users/tony-is-coding/repos", "events_url": "https://api.github.com/users/tony-is-coding/events{/privacy}", "received_events_url": "https://api.github.com/users/tony-is-coding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-25T00:32:17Z", "updated_at": "2020-05-25T06:45:20Z", "closed_at": "2020-05-25T06:45:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "kindly: \r\n         acctually , it is hard to get how to use this library for me,  please give me something haveful! ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/214", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/214/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/214/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/214", "id": 575479324, "node_id": "MDU6SXNzdWU1NzU0NzkzMjQ=", "number": 214, "title": "Init login method default value 'AMQPLAIN'", "user": {"login": "MelvinLikeABird", "id": 22747323, "node_id": "MDQ6VXNlcjIyNzQ3MzIz", "avatar_url": "https://avatars0.githubusercontent.com/u/22747323?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MelvinLikeABird", "html_url": "https://github.com/MelvinLikeABird", "followers_url": "https://api.github.com/users/MelvinLikeABird/followers", "following_url": "https://api.github.com/users/MelvinLikeABird/following{/other_user}", "gists_url": "https://api.github.com/users/MelvinLikeABird/gists{/gist_id}", "starred_url": "https://api.github.com/users/MelvinLikeABird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MelvinLikeABird/subscriptions", "organizations_url": "https://api.github.com/users/MelvinLikeABird/orgs", "repos_url": "https://api.github.com/users/MelvinLikeABird/repos", "events_url": "https://api.github.com/users/MelvinLikeABird/events{/privacy}", "received_events_url": "https://api.github.com/users/MelvinLikeABird/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-04T15:05:20Z", "updated_at": "2020-03-11T15:00:46Z", "closed_at": "2020-03-11T15:00:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the __init__.py file \r\nThe default value of login_method is 'AMQPLAIN'.\r\n\r\nIn protocol.py there is a warning : \r\n`logger.warning('only PLAIN login_method is supported, falling back to AMQPLAIN')`\r\n\r\nThe new default value of login_method should be 'PLAIN'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/210", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/210/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/210/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/210", "id": 520107940, "node_id": "MDU6SXNzdWU1MjAxMDc5NDA=", "number": 210, "title": "Python3.8", "user": {"login": "ndavydovdev", "id": 21359293, "node_id": "MDQ6VXNlcjIxMzU5Mjkz", "avatar_url": "https://avatars1.githubusercontent.com/u/21359293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndavydovdev", "html_url": "https://github.com/ndavydovdev", "followers_url": "https://api.github.com/users/ndavydovdev/followers", "following_url": "https://api.github.com/users/ndavydovdev/following{/other_user}", "gists_url": "https://api.github.com/users/ndavydovdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndavydovdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndavydovdev/subscriptions", "organizations_url": "https://api.github.com/users/ndavydovdev/orgs", "repos_url": "https://api.github.com/users/ndavydovdev/repos", "events_url": "https://api.github.com/users/ndavydovdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ndavydovdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-08T16:26:14Z", "updated_at": "2020-03-17T12:57:53Z", "closed_at": "2020-03-17T12:57:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Your example https://github.com/Polyconseil/aioamqp/blob/master/examples/send.py\r\n\r\nDoesn't work with Python3.8\r\n\r\n```\r\nAn open stream was garbage collected prior to establishing network connection; call \"stream.close()\" explicitly.\r\n\r\nTraceback (most recent call last):\r\n  File \"hello.py\", line 31, in <module>\r\n    asyncio.get_event_loop().run_until_complete(send())\r\n  File \"/Users/apple/.pyenv/versions/3.8.0/lib/python3.8/asyncio/base_events.py\", line 608, in run_until_complete\r\n    return future.result()\r\n  File \"hello.py\", line 14, in send\r\n    transport, protocol = await aioamqp.connect(host=\"127.0.0.1\", port=5672, login=\"guest\", password=\"guest\", login_method=\"PLAIN\")\r\n  File \"/Users/apple/.virtualenvs/venv_380/lib/python3.8/site-packages/aioamqp/__init__.py\", line 59, in connect\r\n    sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\r\n  File \"/Users/apple/.pyenv/versions/3.8.0/lib/python3.8/asyncio/trsock.py\", line 82, in setsockopt\r\n    self._sock.setsockopt(*args, **kwargs)\r\n\r\nOSError: [Errno 9] Bad file descriptor\r\n```\r\n\r\nGot this error  \r\nTried to research -- found nothing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/192", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/192/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/192/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/192", "id": 408509320, "node_id": "MDU6SXNzdWU0MDg1MDkzMjA=", "number": 192, "title": "rabbitmqctl list_queues via aioamqp", "user": {"login": "vgoklani", "id": 180487, "node_id": "MDQ6VXNlcjE4MDQ4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/180487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vgoklani", "html_url": "https://github.com/vgoklani", "followers_url": "https://api.github.com/users/vgoklani/followers", "following_url": "https://api.github.com/users/vgoklani/following{/other_user}", "gists_url": "https://api.github.com/users/vgoklani/gists{/gist_id}", "starred_url": "https://api.github.com/users/vgoklani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vgoklani/subscriptions", "organizations_url": "https://api.github.com/users/vgoklani/orgs", "repos_url": "https://api.github.com/users/vgoklani/repos", "events_url": "https://api.github.com/users/vgoklani/events{/privacy}", "received_events_url": "https://api.github.com/users/vgoklani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-10T07:28:54Z", "updated_at": "2019-02-11T09:17:09Z", "closed_at": "2019-02-11T09:17:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello - how would i replicate the results of \"rabbitmqctl list_queues\" via aioamqp?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/191", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/191/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/191/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/191", "id": 405916646, "node_id": "MDU6SXNzdWU0MDU5MTY2NDY=", "number": 191, "title": "What is happening when I debug my code?", "user": {"login": "alairock", "id": 1480236, "node_id": "MDQ6VXNlcjE0ODAyMzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1480236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alairock", "html_url": "https://github.com/alairock", "followers_url": "https://api.github.com/users/alairock/followers", "following_url": "https://api.github.com/users/alairock/following{/other_user}", "gists_url": "https://api.github.com/users/alairock/gists{/gist_id}", "starred_url": "https://api.github.com/users/alairock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alairock/subscriptions", "organizations_url": "https://api.github.com/users/alairock/orgs", "repos_url": "https://api.github.com/users/alairock/repos", "events_url": "https://api.github.com/users/alairock/events{/privacy}", "received_events_url": "https://api.github.com/users/alairock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-02-01T23:47:39Z", "updated_at": "2019-02-06T22:18:25Z", "closed_at": "2019-02-05T08:49:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "So, I noticed this really interesting behavior. The below code is what I was testing. Really straightforward. I have a breakpoint set on the callback. I have 5 messages per second building in my queue, (Another service is populating my queue)\r\n\r\nWhen I run this script it slurps all the messages in the queue and then breaks on the callback. Everything working just as expected so far. \r\n\r\nThe really weird thing that happens is that while I am paused in execution of my code and after I slurped in all the events sitting in the queue, NEW events continue to get delivered. There is only one consumer, and that consumer is paused. \r\n\r\nIt's also good to know that I have all threads paused on my breakpoint as well, so it's not another thread. \r\n\r\nThen after about 5 minutes, the consumer no receives new messages and they start building up in the queue again. No error messages happen in the console of rabbit, or in my code.\r\n\r\nSo my question is, how are the messages being delivered after my breakpoint? Are the messages after the \"slurp and pause\" lost or do they sit somewhere in transit waiting for the connection to open up again. \r\n\r\nI know the question is confusing, and I'm sure it works as expected, but I am trying to understand how it works at a more fundamental level. Thanks ahead for any help.   \r\n\r\n```\r\nimport aioamqp\r\nimport asyncio\r\n\r\nasync def callback(channel, body, envelope, properties):\r\n    print(body, \" [x] Done\")  # breakpoint goes here\r\n\r\nasync def connect():\r\n    transport, protocol = await aioamqp.connect()\r\n    channel = await protocol.channel()\r\n    await channel.basic_consume(callback, queue_name='analytics_delete_me', no_ack=True)\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(connect())\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/190", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/190/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/190/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/190", "id": 405062260, "node_id": "MDU6SXNzdWU0MDUwNjIyNjA=", "number": 190, "title": "Connection lost warning closing the protocol", "user": {"login": "JoelBender", "id": 10273490, "node_id": "MDQ6VXNlcjEwMjczNDkw", "avatar_url": "https://avatars3.githubusercontent.com/u/10273490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoelBender", "html_url": "https://github.com/JoelBender", "followers_url": "https://api.github.com/users/JoelBender/followers", "following_url": "https://api.github.com/users/JoelBender/following{/other_user}", "gists_url": "https://api.github.com/users/JoelBender/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoelBender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoelBender/subscriptions", "organizations_url": "https://api.github.com/users/JoelBender/orgs", "repos_url": "https://api.github.com/users/JoelBender/repos", "events_url": "https://api.github.com/users/JoelBender/events{/privacy}", "received_events_url": "https://api.github.com/users/JoelBender/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-31T03:16:24Z", "updated_at": "2019-01-31T03:30:19Z", "closed_at": "2019-01-31T03:30:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm going to be running an application with communications between multiple protocols so I turned the `rpc_server.py` sample into an object.  [This code](https://gist.github.com/JoelBender/c1c5c0dcd67a56f89869f48790d59927) doesn't seem to matter if the channel is closed before closing the protocol, it always prints a `Connection lost exc=None` warning message.  I would like to be able to open and close channels as necessary.  I tried awaiting for some connection close event but there doesn't seem to be one.\r\n\r\nI thought maybe it was because `eof_received()` was overridden to always return `False` so I over-overrode that to return the value from the base class but as it turns out it doesn't seem to be called, so that's a off in the weeds.\r\n\r\nThe `main_loop()` function is similar to something that was posted someplace I now can't seem to find :-/.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/186", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/186/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/186/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/186", "id": 392088766, "node_id": "MDU6SXNzdWUzOTIwODg3NjY=", "number": 186, "title": "Clustered rabbitmq: having multiple hosts in connection parameters", "user": {"login": "rrader", "id": 300061, "node_id": "MDQ6VXNlcjMwMDA2MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/300061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rrader", "html_url": "https://github.com/rrader", "followers_url": "https://api.github.com/users/rrader/followers", "following_url": "https://api.github.com/users/rrader/following{/other_user}", "gists_url": "https://api.github.com/users/rrader/gists{/gist_id}", "starred_url": "https://api.github.com/users/rrader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rrader/subscriptions", "organizations_url": "https://api.github.com/users/rrader/orgs", "repos_url": "https://api.github.com/users/rrader/repos", "events_url": "https://api.github.com/users/rrader/events{/privacy}", "received_events_url": "https://api.github.com/users/rrader/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-18T10:25:13Z", "updated_at": "2018-12-18T15:48:44Z", "closed_at": "2018-12-18T15:48:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "We have clustered rabbitmq with 3 instances running, so I'd like to pass all those instances to connection parameters of library. Is that possible?\r\nIf no, how can I hook into the reconnection process to substitute next server? (if one of instances is down I don't want to keep trying to reconnect to it, I want to try another one)\r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/183", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/183/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/183/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/183", "id": 388569292, "node_id": "MDU6SXNzdWUzODg1NjkyOTI=", "number": 183, "title": "How to reconnect channel after aioamqp.exceptions.ChannelClosed?", "user": {"login": "Jacobh2", "id": 6471372, "node_id": "MDQ6VXNlcjY0NzEzNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6471372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jacobh2", "html_url": "https://github.com/Jacobh2", "followers_url": "https://api.github.com/users/Jacobh2/followers", "following_url": "https://api.github.com/users/Jacobh2/following{/other_user}", "gists_url": "https://api.github.com/users/Jacobh2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jacobh2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jacobh2/subscriptions", "organizations_url": "https://api.github.com/users/Jacobh2/orgs", "repos_url": "https://api.github.com/users/Jacobh2/repos", "events_url": "https://api.github.com/users/Jacobh2/events{/privacy}", "received_events_url": "https://api.github.com/users/Jacobh2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-07T09:23:45Z", "updated_at": "2018-12-10T09:42:11Z", "closed_at": "2018-12-10T09:42:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey!\r\n\r\nThis is not a bug of the lib per say, but a question about a problem I'm facing. Sorry if this is the wrong place to ask this.\r\n\r\nI'm getting `aioamqp.exceptions.ChannelClosed` being thrown at me after some time when I do `channel.basic_client_ack`.\r\n\r\nI'm not 100% why the channel is getting closed, the `protocol.ensure_open()` doesn't throw any errors, so it seems to still have _some_ connection to the broker.\r\n\r\nMy idea was to simply recreate the `channel` object by running\r\n\r\n```py\r\nchannel = await protocol.channel()\r\nawait channel.exchange_declare(EXCHANGE, EXCHANGE_TYPE)\r\nqueue = await channel.queue_declare(\r\n    queue_name=QUEUE_NAME,\r\n    durable=True,\r\n    arguments={\r\n        'x-message-ttl': MESSAGE_TTL,\r\n        'x-max-priority': DEFAULT_MESSAGE_PRIORITY\r\n    }\r\n)\r\nawait channel.basic_qos(prefetch_count=QUEUE_PREFETCH)\r\nawait channel.queue_bind(QUEUE_NAME, EXCHANGE, ROUTING_KEY)\r\nawait channel.basic_consume(on_message, queue_name=QUEUE_NAME)\r\n```\r\non the same `protocol` instance, which seems to still be open and working.\r\n\r\nThis seems to now be the way to go, since I then see the following in the broker's logs (`unknown delivery tag`):\r\n```\r\n2018-12-07 07:34:34.346 [error] <0.11836.5> Channel error on connection <0.10381.5> (client_sender_1.client_default:50362 -> testhost:5672, vhost: '/', user: 'guest'), channel 1: operation basic.ack caused a channel exception precondition_failed: unknown delivery tag 160\r\n2018-12-07 07:34:34.801 [error] <0.11843.5> Channel error on connection <0.10381.5> (client_sender_1.client_default:50362 -> testhost:5672, vhost: '/', user: 'guest'), channel 1: operation basic.ack caused a channel exception precondition_failed: unknown delivery tag 200\r\n2018-12-07 07:34:35.091 [error] <0.11850.5> Channel error on connection <0.10381.5> (client_sender_1.client_default:50362 -> testhost:5672, vhost: '/', user: 'guest'), channel 1: operation basic.ack caused a channel exception precondition_failed: unknown delivery tag 60\r\n```\r\n\r\nMy thought was then that when I recreate the channel, it gets a new `channel_id`, which might throw it off, but it seems like by looking in the broker logs, that it is always `channel 1` that is being used.\r\n\r\n- Is there any particular things I can check for why my channel is getting closed?\r\n- Is it possible to actually reconnect a channel in such a way that the `delivery_tag`s that are out, are still valid?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/180", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/180/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/180/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/180", "id": 385130611, "node_id": "MDU6SXNzdWUzODUxMzA2MTE=", "number": 180, "title": "Wrong conversion for message-ttl", "user": {"login": "Jacobh2", "id": 6471372, "node_id": "MDQ6VXNlcjY0NzEzNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6471372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jacobh2", "html_url": "https://github.com/Jacobh2", "followers_url": "https://api.github.com/users/Jacobh2/followers", "following_url": "https://api.github.com/users/Jacobh2/following{/other_user}", "gists_url": "https://api.github.com/users/Jacobh2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jacobh2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jacobh2/subscriptions", "organizations_url": "https://api.github.com/users/Jacobh2/orgs", "repos_url": "https://api.github.com/users/Jacobh2/repos", "events_url": "https://api.github.com/users/Jacobh2/events{/privacy}", "received_events_url": "https://api.github.com/users/Jacobh2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-11-28T07:08:27Z", "updated_at": "2018-11-30T16:47:45Z", "closed_at": "2018-11-30T16:40:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Declaring a queue, which I know already exist, gives a 406 Precondition Failed error:\r\n```\r\naioamqp.exceptions.ChannelClosed: (406, \"PRECONDITION_FAILED - inequivalent arg 'x-message-ttl' for queue 'text' in vhost '/': received '-1875767295' but current is '2419200000'\")\r\n```\r\n\r\nSeems like when I declare the queue (`2419200000` = 4 weeks in milliseconds):\r\n```\r\nawait channel.queue_declare(\r\n        queue_name=QUEUE, durable=True, arguments={\r\n            'x-message-ttl': 2419200000,\r\n            'x-max-priority': 2\r\n        }\r\n    )\r\n```\r\nit is somehow interpreted as `-1875767295`.  I found what I think is the location where it parses the `arguments` values, which is shown [here](https://github.com/Polyconseil/aioamqp/blob/master/aioamqp/frame.py#L84).\r\n\r\nMy best guess is that it is parsing the value as a signed 32 bit int, when it should be a 64 bit number, but I'm really not sure since the method used in the linked code *is* using `write_long`.\r\n\r\nAny ideas on what is wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/176", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/176/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/176/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/176", "id": 363330740, "node_id": "MDU6SXNzdWUzNjMzMzA3NDA=", "number": 176, "title": "Why can payload not be empty?", "user": {"login": "madss", "id": 1157293, "node_id": "MDQ6VXNlcjExNTcyOTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/1157293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/madss", "html_url": "https://github.com/madss", "followers_url": "https://api.github.com/users/madss/followers", "following_url": "https://api.github.com/users/madss/following{/other_user}", "gists_url": "https://api.github.com/users/madss/gists{/gist_id}", "starred_url": "https://api.github.com/users/madss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/madss/subscriptions", "organizations_url": "https://api.github.com/users/madss/orgs", "repos_url": "https://api.github.com/users/madss/repos", "events_url": "https://api.github.com/users/madss/events{/privacy}", "received_events_url": "https://api.github.com/users/madss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-24T21:39:27Z", "updated_at": "2018-10-02T08:24:16Z", "closed_at": "2018-10-02T08:24:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is currently not possible to send an empty payload with `basic_publish` because of [this assertion](https://github.com/Polyconseil/aioamqp/blob/master/aioamqp/channel.py#L479). [The original commit that introduced the assertion](https://github.com/Polyconseil/aioamqp/commit/32d60abebd5c232595d4eb2827434cb6e10a2f16) doesn't mention anything about why it was added, but it makes it difficult to send protobuf encoded messages since an empty sequence of bytes is actually a perfectly valid protobuf message.\r\n\r\nIs there a technical reason for this or is it purely to prevent people from making mistakes in certain situations? If the latter is the case, I would like to see it removed so it doesn't prevent the use of protobuf.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/172", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/172/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/172/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/172", "id": 336465230, "node_id": "MDU6SXNzdWUzMzY0NjUyMzA=", "number": 172, "title": "How to efficiently drain events from a consumer without spiking the CPU", "user": {"login": "vgoklani", "id": 180487, "node_id": "MDQ6VXNlcjE4MDQ4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/180487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vgoklani", "html_url": "https://github.com/vgoklani", "followers_url": "https://api.github.com/users/vgoklani/followers", "following_url": "https://api.github.com/users/vgoklani/following{/other_user}", "gists_url": "https://api.github.com/users/vgoklani/gists{/gist_id}", "starred_url": "https://api.github.com/users/vgoklani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vgoklani/subscriptions", "organizations_url": "https://api.github.com/users/vgoklani/orgs", "repos_url": "https://api.github.com/users/vgoklani/repos", "events_url": "https://api.github.com/users/vgoklani/events{/privacy}", "received_events_url": "https://api.github.com/users/vgoklani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-06-28T04:02:50Z", "updated_at": "2018-06-28T16:07:22Z", "closed_at": "2018-06-28T07:57:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to drain messages from multiple queues. I have a list of queues (self.queues) and I used the approach below:\r\n\r\n```\r\n\tasync def _start(self):\r\n\t\twhile True:\r\n\t\t\tfor queue_name in self.queue_names:\r\n\t\t\t\tawait self.channel.basic_consume(self.callback, queue_name=queue_name, no_ack=True)\r\n\t\t\t\tawait asyncio.sleep(0.01)\r\n\r\n\tdef start(self):\r\n\t\tself.loop.run_until_complete(self._start())\r\n\r\n```\r\n\r\nThe CPU spikes hard If I remove the asyncio.sleep(0.01) statement...\r\n\r\nIs there a more efficient way of continuously draining the queue?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/171", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/171/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/171/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/171", "id": 335215756, "node_id": "MDU6SXNzdWUzMzUyMTU3NTY=", "number": 171, "title": "Support for an async logging", "user": {"login": "diogommartins", "id": 6271498, "node_id": "MDQ6VXNlcjYyNzE0OTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/6271498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diogommartins", "html_url": "https://github.com/diogommartins", "followers_url": "https://api.github.com/users/diogommartins/followers", "following_url": "https://api.github.com/users/diogommartins/following{/other_user}", "gists_url": "https://api.github.com/users/diogommartins/gists{/gist_id}", "starred_url": "https://api.github.com/users/diogommartins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diogommartins/subscriptions", "organizations_url": "https://api.github.com/users/diogommartins/orgs", "repos_url": "https://api.github.com/users/diogommartins/repos", "events_url": "https://api.github.com/users/diogommartins/events{/privacy}", "received_events_url": "https://api.github.com/users/diogommartins/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-24T22:03:06Z", "updated_at": "2018-06-25T12:33:19Z", "closed_at": "2018-06-25T12:33:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently protocol.py and channel.py have their own logger. I use an async logging implementation[1] and it would be nice to have the possibility of nonblocking log calls at aioamqp. What do you guys think about that ? Also, would you be confortable with changing the interfaces of `AmqpProtocol` an `Channel` so that it would be possible to pass a logger and remove the global `logger` ? \r\n\r\n[1] [https://github.com/B2W-BIT/aiologger](https://github.com/B2W-BIT/aiologger)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/170", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/170/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/170/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/170", "id": 334196010, "node_id": "MDU6SXNzdWUzMzQxOTYwMTA=", "number": 170, "title": "Question: how does aioamqp serialize outgoing messages? ", "user": {"login": "alonisser", "id": 1434992, "node_id": "MDQ6VXNlcjE0MzQ5OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1434992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alonisser", "html_url": "https://github.com/alonisser", "followers_url": "https://api.github.com/users/alonisser/followers", "following_url": "https://api.github.com/users/alonisser/following{/other_user}", "gists_url": "https://api.github.com/users/alonisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/alonisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alonisser/subscriptions", "organizations_url": "https://api.github.com/users/alonisser/orgs", "repos_url": "https://api.github.com/users/alonisser/repos", "events_url": "https://api.github.com/users/alonisser/events{/privacy}", "received_events_url": "https://api.github.com/users/alonisser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-20T18:20:13Z", "updated_at": "2018-06-21T19:43:07Z", "closed_at": "2018-06-21T07:58:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "does it implement a json serializer?  Or should I implement it? Same for incoming messages", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/169", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/169/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/169/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/169", "id": 334190402, "node_id": "MDU6SXNzdWUzMzQxOTA0MDI=", "number": 169, "title": "handling disconnection/reconnection logic", "user": {"login": "alonisser", "id": 1434992, "node_id": "MDQ6VXNlcjE0MzQ5OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1434992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alonisser", "html_url": "https://github.com/alonisser", "followers_url": "https://api.github.com/users/alonisser/followers", "following_url": "https://api.github.com/users/alonisser/following{/other_user}", "gists_url": "https://api.github.com/users/alonisser/gists{/gist_id}", "starred_url": "https://api.github.com/users/alonisser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alonisser/subscriptions", "organizations_url": "https://api.github.com/users/alonisser/orgs", "repos_url": "https://api.github.com/users/alonisser/repos", "events_url": "https://api.github.com/users/alonisser/events{/privacy}", "received_events_url": "https://api.github.com/users/alonisser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-20T18:02:09Z", "updated_at": "2019-02-21T13:28:30Z", "closed_at": "2019-02-21T13:28:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've failed to find where and how I can gracefully handle disconnection from rabbitmq instance. Currently when I shutdown rabbitmq after connecting, allow keepalive to fail, I don't see automated reconnection after rabbitmq is online again", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/168", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/168/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/168/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/168", "id": 331940810, "node_id": "MDU6SXNzdWUzMzE5NDA4MTA=", "number": 168, "title": "New release required for Python 3.7 compatibility", "user": {"login": "kalaspuff", "id": 89139, "node_id": "MDQ6VXNlcjg5MTM5", "avatar_url": "https://avatars2.githubusercontent.com/u/89139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kalaspuff", "html_url": "https://github.com/kalaspuff", "followers_url": "https://api.github.com/users/kalaspuff/followers", "following_url": "https://api.github.com/users/kalaspuff/following{/other_user}", "gists_url": "https://api.github.com/users/kalaspuff/gists{/gist_id}", "starred_url": "https://api.github.com/users/kalaspuff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kalaspuff/subscriptions", "organizations_url": "https://api.github.com/users/kalaspuff/orgs", "repos_url": "https://api.github.com/users/kalaspuff/repos", "events_url": "https://api.github.com/users/kalaspuff/events{/privacy}", "received_events_url": "https://api.github.com/users/kalaspuff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-13T10:46:51Z", "updated_at": "2018-06-21T20:40:55Z", "closed_at": "2018-06-20T15:36:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With the upcoming Python 3.7 release and now when Python 3.7rc1 is available it would be great to have an `aioamqp` release that includes the commit for Python 3.7 support (https://github.com/Polyconseil/aioamqp/commit/d35011900ae52904ac36326533ba43974a637a6a) as `async` and `await` now will be reserved keywords.\r\n\r\n**Error in aioamqp==0.10.0**\r\n```bash\r\nede240405a6b:/# pip install aioamqp\r\nCollecting aioamqp\r\n  Using cached https://files.pythonhosted.org/packages/90/73/96561edbc743e8f95f55ce8852d40bac8b413857b273a625321de8f0143d/aioamqp-0.10.0-py33.py34.py35-none-any.whl\r\nInstalling collected packages: aioamqp\r\nSuccessfully installed aioamqp-0.10.0\r\n\r\nede240405a6b:/# python\r\nPython 3.7.0rc1 (default, Jun 13 2018, 09:19:31) \r\n[GCC 6.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import aioamqp\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.7/site-packages/aioamqp/__init__.py\", line 8, in <module>\r\n    from .protocol import AmqpProtocol\r\n  File \"/usr/local/lib/python3.7/site-packages/aioamqp/protocol.py\", line 13, in <module>\r\n    from .compat import ensure_future\r\n  File \"/usr/local/lib/python3.7/site-packages/aioamqp/compat.py\", line 11\r\n    ensure_future = asyncio.async\r\n                                ^\r\nSyntaxError: invalid syntax\r\n>>> \r\n```\r\n\r\n**Fixed in master**\r\n```bash\r\nede240405a6b:/# pip install git+ssh://git@github.com/Polyconseil/aioamqp.git\r\nCollecting git+ssh://git@github.com/Polyconseil/aioamqp.git\r\n  Cloning ssh://git@github.com/Polyconseil/aioamqp.git to /tmp/pip-req-build-ubfxh2fx\r\nInstalling collected packages: aioamqp\r\n  Running setup.py install for aioamqp ... done\r\nSuccessfully installed aioamqp-0.10.0\r\n\r\nede240405a6b:/# python\r\nPython 3.7.0rc1 (default, Jun 13 2018, 09:19:31) \r\n[GCC 6.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import aioamqp\r\n>>> \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/160", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/160/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/160/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/160", "id": 307258160, "node_id": "MDU6SXNzdWUzMDcyNTgxNjA=", "number": 160, "title": "Python 3.7 support - support for <3.4.4 needs to be dropped", "user": {"login": "mikmatko", "id": 20861891, "node_id": "MDQ6VXNlcjIwODYxODkx", "avatar_url": "https://avatars0.githubusercontent.com/u/20861891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikmatko", "html_url": "https://github.com/mikmatko", "followers_url": "https://api.github.com/users/mikmatko/followers", "following_url": "https://api.github.com/users/mikmatko/following{/other_user}", "gists_url": "https://api.github.com/users/mikmatko/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikmatko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikmatko/subscriptions", "organizations_url": "https://api.github.com/users/mikmatko/orgs", "repos_url": "https://api.github.com/users/mikmatko/repos", "events_url": "https://api.github.com/users/mikmatko/events{/privacy}", "received_events_url": "https://api.github.com/users/mikmatko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-21T14:03:46Z", "updated_at": "2018-03-22T08:58:53Z", "closed_at": "2018-03-22T08:58:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "compat.py:\r\n\r\n```python\r\nimport asyncio\r\n\r\ntry:\r\n    from asyncio import ensure_future\r\nexcept ImportError:\r\n    ensure_future = asyncio.async\r\n```\r\n\r\n```async``` is a reserved keyword in Python 3.7 so this will always result in a ```SyntaxError```. This happens **before** the try/except block, so it **cannot** be handled properly backwards-compatible as far as I know.\r\n\r\n```asyncio.ensure_future``` was added in Python 3.4.4 and ```asyncio.async``` was deprecated then. See https://docs.python.org/3.4/library/asyncio-task.html#asyncio.ensure_future\r\n\r\nBasically, to have Python 3.7 support, support for <3.4.4 needs to be dropped. Since there is nothing else in ```compat.py```, it can be completely removed.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/157", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/157/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/157/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/157", "id": 285918717, "node_id": "MDU6SXNzdWUyODU5MTg3MTc=", "number": 157, "title": "AmqpProtocol worker should not swallow asyncio.CancelledError", "user": {"login": "jkr78", "id": 24533927, "node_id": "MDQ6VXNlcjI0NTMzOTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/24533927?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jkr78", "html_url": "https://github.com/jkr78", "followers_url": "https://api.github.com/users/jkr78/followers", "following_url": "https://api.github.com/users/jkr78/following{/other_user}", "gists_url": "https://api.github.com/users/jkr78/gists{/gist_id}", "starred_url": "https://api.github.com/users/jkr78/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jkr78/subscriptions", "organizations_url": "https://api.github.com/users/jkr78/orgs", "repos_url": "https://api.github.com/users/jkr78/repos", "events_url": "https://api.github.com/users/jkr78/events{/privacy}", "received_events_url": "https://api.github.com/users/jkr78/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-04T08:58:13Z", "updated_at": "2019-04-29T15:03:15Z", "closed_at": "2018-06-28T15:59:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/Polyconseil/aioamqp/blob/aa915ab2e89861899d6b39acc4475fb500867d00/aioamqp/protocol.py#L332-L340\r\n\r\nAs it is now it swallows asyncio.CanceledError and it is not possible to .cancel() the task.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/153", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/153/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/153/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/153", "id": 249161088, "node_id": "MDU6SXNzdWUyNDkxNjEwODg=", "number": 153, "title": "x-priority argument cannot have negative values on basic_consume", "user": {"login": "lphuberdeau", "id": 444229, "node_id": "MDQ6VXNlcjQ0NDIyOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/444229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lphuberdeau", "html_url": "https://github.com/lphuberdeau", "followers_url": "https://api.github.com/users/lphuberdeau/followers", "following_url": "https://api.github.com/users/lphuberdeau/following{/other_user}", "gists_url": "https://api.github.com/users/lphuberdeau/gists{/gist_id}", "starred_url": "https://api.github.com/users/lphuberdeau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lphuberdeau/subscriptions", "organizations_url": "https://api.github.com/users/lphuberdeau/orgs", "repos_url": "https://api.github.com/users/lphuberdeau/repos", "events_url": "https://api.github.com/users/lphuberdeau/events{/privacy}", "received_events_url": "https://api.github.com/users/lphuberdeau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 223123336, "node_id": "MDU6TGFiZWwyMjMxMjMzMzY=", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/need%20inspection", "name": "need inspection", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-08-09T21:03:48Z", "updated_at": "2019-02-06T06:58:50Z", "closed_at": "2019-02-06T06:58:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "The RabbitMQ documentation explicitly states that the x-priority argument can have positive or negative values. However, when a negative value is provided, it is packed as an unsigned integer, causing a `struct.error: argument out of range` error.\r\n\r\n```\r\n    def write_long(self, integer):\r\n        self.payload.write(struct.pack('!I', integer))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/150", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/150/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/150/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/150", "id": 244881048, "node_id": "MDU6SXNzdWUyNDQ4ODEwNDg=", "number": 150, "title": "Message consumption is totally NOT async", "user": {"login": "Skorpyon", "id": 12496447, "node_id": "MDQ6VXNlcjEyNDk2NDQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/12496447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Skorpyon", "html_url": "https://github.com/Skorpyon", "followers_url": "https://api.github.com/users/Skorpyon/followers", "following_url": "https://api.github.com/users/Skorpyon/following{/other_user}", "gists_url": "https://api.github.com/users/Skorpyon/gists{/gist_id}", "starred_url": "https://api.github.com/users/Skorpyon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Skorpyon/subscriptions", "organizations_url": "https://api.github.com/users/Skorpyon/orgs", "repos_url": "https://api.github.com/users/Skorpyon/repos", "events_url": "https://api.github.com/users/Skorpyon/events{/privacy}", "received_events_url": "https://api.github.com/users/Skorpyon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-23T00:57:55Z", "updated_at": "2017-07-24T08:15:51Z", "closed_at": "2017-07-24T08:15:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Today I was surprized, because aioamqp don't launch message callbacks in async loop.\r\n\r\nA little explanations here:\r\n\r\n**protocol.py**\r\n``` python\r\n@asyncio.coroutine\r\ndef run(self):\r\n    while not self.stop_now.done():\r\n        try:\r\n            yield from self.dispatch_frame()   # <-- HERE WE WAIT NEXT FRAME\r\n        except exceptions.AmqpClosedConnection as exc:\r\n        ...\r\n\r\nasync def dispatch_frame(self, frame=None):\r\n    \"\"\"Dispatch the received frame to the corresponding handler\"\"\"\r\n    ...\r\n    if frame.channel is not 0:\r\n        channel = self.channels.get(frame.channel)\r\n            if channel is not None:\r\n                await channel.dispatch_frame(frame)  # <-- HERE WE WAIT UNTIL CHANNEL DISPATCH FRAME\r\n            else:\r\n                logger.info(\"Unknown channel %s\", frame.channel)\r\n            return\r\n            ...\r\n```\r\n\r\n**channel.py**\r\n```python\r\n    @asyncio.coroutine\r\n    def basic_deliver(self, frame):\r\n    ...\r\n    yield from callback(self, body, envelope, properties)  # <-- HERE FINALY WE WAIT UNTIL CALLBACK DONE\r\n```\r\n\r\nSo each time, when it got frame, it launch callback and wait until it return result.\r\nIf you have difficult logic in callback works with DB and do long work, like me, you will be surprized when all your system stuck in one callback and even dont receive new messages from AMQP provider.\r\n\r\nYou may easy check it with basic example code from spec, just add `asyncio.sleep()`:\r\n```python\r\nimport asyncio\r\n\r\nasync def callback(channel, body, envelope, properties):\r\n    print(body)\r\n    await asyncio.sleep(30, loop=channel._loop)\r\n\r\nawait channel.basic_consume(callback, queue_name='hello', no_ack=True)\r\n```\r\nSo, just feed `hello` exchange with hundred messages.\r\nYou will see, how it print first body and go to sllep for 30 seconds. All next messages will be lost or delayed for unpredictable time.\r\n\r\nFor me I temporary solved it this way:\r\n**protocol.py**\r\n```python\r\n@asyncio.coroutine\r\ndef basic_deliver(self, frame):\r\n...\r\n    self._loop.create_task(callback(self, body, envelope, properties))\r\n```\r\nIt just create new task in loop for callback, dont wait until it finished and unlock loop for new message.\r\n\r\nI'm not very professional in async, maybe exists more elegant way.\r\nBut right now aioamqp is not usable with this issue.\r\n\r\nReally it require deep check for same problems in sending messages and internal logic.\r\nI hope you fix it ASAP, because few my projects totally depend from your perfect library.\r\nRegards.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/148", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/148/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/148/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/148", "id": 244021975, "node_id": "MDU6SXNzdWUyNDQwMjE5NzU=", "number": 148, "title": "how can i get queue length ?", "user": {"login": "inzem77", "id": 931915, "node_id": "MDQ6VXNlcjkzMTkxNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/931915?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inzem77", "html_url": "https://github.com/inzem77", "followers_url": "https://api.github.com/users/inzem77/followers", "following_url": "https://api.github.com/users/inzem77/following{/other_user}", "gists_url": "https://api.github.com/users/inzem77/gists{/gist_id}", "starred_url": "https://api.github.com/users/inzem77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inzem77/subscriptions", "organizations_url": "https://api.github.com/users/inzem77/orgs", "repos_url": "https://api.github.com/users/inzem77/repos", "events_url": "https://api.github.com/users/inzem77/events{/privacy}", "received_events_url": "https://api.github.com/users/inzem77/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-07-19T12:21:53Z", "updated_at": "2018-04-26T05:52:35Z", "closed_at": "2018-04-26T05:52:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\nI read all examples and documentation but didn't find as i can get queue length", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/147", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/147/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/147/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/147", "id": 242968779, "node_id": "MDU6SXNzdWUyNDI5Njg3Nzk=", "number": 147, "title": "Catching this error after RabbitMQ server is stopped: Connection lost exc=ConnectionResetError(104, 'Connection reset by peer') ", "user": {"login": "MaxOvcharov", "id": 13488059, "node_id": "MDQ6VXNlcjEzNDg4MDU5", "avatar_url": "https://avatars3.githubusercontent.com/u/13488059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaxOvcharov", "html_url": "https://github.com/MaxOvcharov", "followers_url": "https://api.github.com/users/MaxOvcharov/followers", "following_url": "https://api.github.com/users/MaxOvcharov/following{/other_user}", "gists_url": "https://api.github.com/users/MaxOvcharov/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaxOvcharov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaxOvcharov/subscriptions", "organizations_url": "https://api.github.com/users/MaxOvcharov/orgs", "repos_url": "https://api.github.com/users/MaxOvcharov/repos", "events_url": "https://api.github.com/users/MaxOvcharov/events{/privacy}", "received_events_url": "https://api.github.com/users/MaxOvcharov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-14T11:16:33Z", "updated_at": "2017-10-27T16:40:39Z", "closed_at": "2017-10-27T16:40:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run my consumer:\r\n```\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\n    Webhook service for sending message from\r\n    mobile clients to PGTA via mobile backend\r\n\"\"\"\r\nimport aiohttp\r\nimport aioamqp\r\nimport asyncio\r\nimport async_timeout\r\nimport functools\r\nimport os\r\n\r\nfrom utils import load_config\r\nfrom settings import BASE_DIR, WH_ADDRESS, logger, parse_args_for_init_worker\r\n\r\nopt = parse_args_for_init_worker()\r\nWH_TIMEOUT = opt.wh_timeout\r\nWORKERS_NUM = opt.worker_number\r\n\r\nasync def send_webhook(body, properties):\r\n    wh_is_send = False\r\n    logger.debug(\"Received msg: %r\" % body)\r\n    try:\r\n        async with aiohttp.ClientSession() as session:\r\n            for _ in range(5):\r\n                try:\r\n                    with async_timeout.timeout(1, loop=session.loop):\r\n                        async with session.get(WH_ADDRESS) as resp:\r\n                            if resp.status == 200:\r\n                                wh_is_send = True\r\n                                break\r\n                    logger.debug(\"PGTA STATUS CODE: %s. Sleep: %s sec.\"\r\n                                 % (resp.status, WH_TIMEOUT))\r\n                    await asyncio.sleep(WH_TIMEOUT)\r\n                except aiohttp.client_exceptions.ClientConnectorError as e:\r\n                    logger.debug(\"Handle ERROR: %s. \\nSleep: %s sec\" % (e, WH_TIMEOUT))\r\n                    await asyncio.sleep(WH_TIMEOUT)\r\n                    continue\r\n            if wh_is_send:\r\n                logger.debug(\"SENDING SUCCESS: MSG_ID - %s\" % properties.message_id)\r\n            else:\r\n                logger.debug(\"SENDING FAIL: MSG_ID - %s\" % properties.items())\r\n    except Exception as e:\r\n        logger.debug(\"Handle ERROR: %s\" % e)\r\n\r\n\r\n@asyncio.coroutine\r\ndef callback(channel, body, envelope, properties):\r\n    yield from send_webhook(body, properties)\r\n    yield from channel.basic_client_ack(delivery_tag=envelope.delivery_tag)\r\n\r\n\r\n@asyncio.coroutine\r\ndef worker(conf):\r\n    rb_conf = conf.get('rabbitmq')\r\n    try:\r\n        transport, protocol = yield from aioamqp.connect(host=rb_conf['host'],\r\n                                                         port=rb_conf['port'],\r\n                                                         login=rb_conf['login'],\r\n                                                         password=rb_conf['password'])\r\n        logger.debug(\"WORKER IS CREATED\")\r\n    except aioamqp.AmqpClosedConnection as e:\r\n        logger.error('Handle ERROR: %s' % e)\r\n        return\r\n\r\n    channel = yield from protocol.channel()\r\n    yield from channel.queue(queue_name='client_msg_q', durable=True)\r\n    yield from channel.basic_qos(prefetch_count=1, prefetch_size=0, connection_global=False)\r\n    yield from channel.basic_consume(callback, queue_name='client_msg_q')\r\n\r\n\r\ndef main():\r\n    # load config from yaml file\r\n    conf = load_config(os.path.join(BASE_DIR, \"config/settings.yml\"))\r\n    loop = asyncio.get_event_loop()\r\n    try:\r\n        w = asyncio.coroutine(functools.partial(worker, conf))\r\n        loop.run_until_complete(w())\r\n        loop.run_forever()\r\n    except ConnectionRefusedError as e:\r\n        logger.error('Handle ERROR: %s' % e)\r\n        loop.close()\r\n    finally:\r\n        loop.close()\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\nHow can I restart my current worker, after RabbitMQ server start again. In this version of my consumer code I have to restart it after every server restarts.     ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/144", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/144/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/144/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/144", "id": 235862461, "node_id": "MDU6SXNzdWUyMzU4NjI0NjE=", "number": 144, "title": "The correct way of handling connection problems", "user": {"login": "greatvovan", "id": 4903007, "node_id": "MDQ6VXNlcjQ5MDMwMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4903007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/greatvovan", "html_url": "https://github.com/greatvovan", "followers_url": "https://api.github.com/users/greatvovan/followers", "following_url": "https://api.github.com/users/greatvovan/following{/other_user}", "gists_url": "https://api.github.com/users/greatvovan/gists{/gist_id}", "starred_url": "https://api.github.com/users/greatvovan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/greatvovan/subscriptions", "organizations_url": "https://api.github.com/users/greatvovan/orgs", "repos_url": "https://api.github.com/users/greatvovan/repos", "events_url": "https://api.github.com/users/greatvovan/events{/privacy}", "received_events_url": "https://api.github.com/users/greatvovan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-14T12:28:35Z", "updated_at": "2017-06-20T08:50:46Z", "closed_at": "2017-06-20T08:50:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the correct approach of keeping application running in case of Rabbit connection problems?\r\nI am imitating connection issues by disconnecting network cable (or enabling/disabling network adapter in Windows).\r\n\r\nI tried:\r\n\r\n- handling AMQP exceptions from protocol functions with subsequent reconnect,\r\n- setting `heartbeat=30`,\r\n- `on_error` callback,\r\n- approach from https://github.com/Polyconseil/aioamqp/issues/65#issuecomment-301737344\r\n\r\nNeither of this makes library reconnect in my test case. I am getting the following results:\r\n- nothing throws any exceptions and `on_error` callback does not fire,\r\n- in rare cases library functions throw exceptions and `on_error` fires, but any further call to protocol function (including `connect()`) hangs forever,\r\nand eventually:\r\n- message callback basically stops being called.\r\n\r\nIn the first case it is even impossible to identify that a problem exists, as everything looks like just there is no messages.\r\nDoes anybody have any idea?\r\n\r\nMy environment:\r\n- CPython 3.6 (natively on Windows 8.1 or in Docker Toolbox),\r\n- aioamqp 0.10.0.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/140", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/140/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/140/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/140", "id": 228936478, "node_id": "MDU6SXNzdWUyMjg5MzY0Nzg=", "number": 140, "title": "basic.publish mandatory bit broken", "user": {"login": "kerma", "id": 735108, "node_id": "MDQ6VXNlcjczNTEwOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/735108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kerma", "html_url": "https://github.com/kerma", "followers_url": "https://api.github.com/users/kerma/followers", "following_url": "https://api.github.com/users/kerma/following{/other_user}", "gists_url": "https://api.github.com/users/kerma/gists{/gist_id}", "starred_url": "https://api.github.com/users/kerma/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kerma/subscriptions", "organizations_url": "https://api.github.com/users/kerma/orgs", "repos_url": "https://api.github.com/users/kerma/repos", "events_url": "https://api.github.com/users/kerma/events{/privacy}", "received_events_url": "https://api.github.com/users/kerma/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921191, "node_id": "MDU6TGFiZWw4MTkyMTE5MQ==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-16T07:17:05Z", "updated_at": "2018-04-25T16:28:19Z", "closed_at": "2018-04-25T16:28:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that `mandatory` is not really implemented. `mandatory=False` works, but any attemp with `True` results in:\r\n\r\n```\r\n[2017-05-16 10:10:38,767] ERROR aioamqp.protocol error on dispatch\r\n    Traceback (most recent call last):\r\n      File \"/lib/python3.5/site-packages/aioamqp/protocol.py\", line 333, in run\r\n        yield from self.dispatch_frame()\r\n      File \"/lib/python3.5/site-packages/aioamqp/protocol.py\", line 288, in dispatch_frame\r\n        yield from channel.dispatch_frame(frame)\r\n      File \"/lib/python3.5/site-packages/aioamqp/channel.py\", line 106, in dispatch_frame\r\n        raise NotImplementedError(\"Frame (%s, %s) is not implemented\" % (frame.class_id, frame.method_id))\r\n    NotImplementedError: Frame (None, None) is not implemented\r\n```\r\n\r\nIt would be nicer to have such constraints documented in method docstrings or to remove unimplemented parameters from public methods.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/139", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/139/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/139/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/139", "id": 222757330, "node_id": "MDU6SXNzdWUyMjI3NTczMzA=", "number": 139, "title": "AttributeError: 'NoneType' object has no attribute 'readexactly'", "user": {"login": "EliRibble", "id": 2319207, "node_id": "MDQ6VXNlcjIzMTkyMDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2319207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EliRibble", "html_url": "https://github.com/EliRibble", "followers_url": "https://api.github.com/users/EliRibble/followers", "following_url": "https://api.github.com/users/EliRibble/following{/other_user}", "gists_url": "https://api.github.com/users/EliRibble/gists{/gist_id}", "starred_url": "https://api.github.com/users/EliRibble/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EliRibble/subscriptions", "organizations_url": "https://api.github.com/users/EliRibble/orgs", "repos_url": "https://api.github.com/users/EliRibble/repos", "events_url": "https://api.github.com/users/EliRibble/events{/privacy}", "received_events_url": "https://api.github.com/users/EliRibble/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-19T14:28:31Z", "updated_at": "2017-07-09T13:37:22Z", "closed_at": "2017-07-09T13:37:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure yet what is causing this. We're seeing it in production about once a day at this point. I had previously been running aioamqp 0.8.2 on Python 3.5.2 on Ubuntu LTS 16.04.1 LTS and didn't have the problem. I recently moved to aioamqp 0.9.0 on Python 3.5.2 on Alpine Linux 3.5 and started getting this exception:\r\n\r\n```\r\nAttributeError: 'NoneType' object has no attribute 'readexactly'\r\n  File \"aioamqp/protocol.py\", line 304, in run\r\n    yield from self.dispatch_frame()\r\n  File \"aioamqp/protocol.py\", line 251, in dispatch_frame\r\n    frame = yield from self.get_frame()\r\n  File \"aioamqp/protocol.py\", line 235, in get_frame\r\n    yield from frame.read_frame()\r\n  File \"aioamqp/frame.py\", line 412, in read_frame\r\n    data = yield from self.reader.readexactly(7)\r\n```\r\n\r\nThe error causes a tight loop. I don't know yet how to reproduce it. I've attempted forcibly killing RabbitMQ while connected, gracefully shutting down, etc. In an attempt to mask the error I created a child class to attempt to convert the error:\r\n\r\n```\r\nimport aioamqp\r\nimport aioamqp.exceptions\r\nimport aioamqp.protocol\r\n\r\n\r\nLOGGER = logging.getLogger(__name__)\r\n\r\nclass ProtocolSafe(aioamqp.protocol.AmqpProtocol):\r\n    \"\"\"\r\n    This class exists to sidestep an issue\r\n    https://github.com/Polyconseil/aioamqp/issues/115\r\n    which we are plagued with in production\r\n    \"\"\"\r\n    @asyncio.coroutine\r\n    def read_frame(self):\r\n        try:\r\n            super().read_frame(self)\r\n        except AttributeError:\r\n            LOGGER.warning(\"Translating '%s' into a closed connection\")\r\n            raise aioamqp.exceptions.AmqpClosedConnection('Inferred from AttributeError')\r\n\r\n\r\n...\r\nyield from aioamqp.connect(..., protocol_factory=ProtocolSafe)\r\n```\r\n\r\nAfter deploying that I still get the problem. Something about my class isn't working correctly because while sentry indicates that the protocol instance is a `ProtocolSafe` the stack trace does *not* show my version of `read_frame`. I'm going to keep working this angle and report back here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/138", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/138/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/138/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/138", "id": 221557091, "node_id": "MDU6SXNzdWUyMjE1NTcwOTE=", "number": 138, "title": "Tests sometimes fail when running locally", "user": {"login": "ilia-khaustov", "id": 3787628, "node_id": "MDQ6VXNlcjM3ODc2Mjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3787628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilia-khaustov", "html_url": "https://github.com/ilia-khaustov", "followers_url": "https://api.github.com/users/ilia-khaustov/followers", "following_url": "https://api.github.com/users/ilia-khaustov/following{/other_user}", "gists_url": "https://api.github.com/users/ilia-khaustov/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilia-khaustov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilia-khaustov/subscriptions", "organizations_url": "https://api.github.com/users/ilia-khaustov/orgs", "repos_url": "https://api.github.com/users/ilia-khaustov/repos", "events_url": "https://api.github.com/users/ilia-khaustov/events{/privacy}", "received_events_url": "https://api.github.com/users/ilia-khaustov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921191, "node_id": "MDU6TGFiZWw4MTkyMTE5MQ==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-13T13:04:37Z", "updated_at": "2017-04-18T10:03:45Z", "closed_at": "2017-04-18T10:03:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "It makes sense to change default `AMQP_REFRESH_TIME` [taken from os.environ](https://github.com/Polyconseil/aioamqp/blob/master/aioamqp/tests/testcase.py#L185) from 3 to 5 as defined in `.travis.yml`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/130", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/130/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/130/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/130", "id": 207308715, "node_id": "MDU6SXNzdWUyMDczMDg3MTU=", "number": 130, "title": "Typo 'presistent'", "user": {"login": "jllorente", "id": 1442953, "node_id": "MDQ6VXNlcjE0NDI5NTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1442953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jllorente", "html_url": "https://github.com/jllorente", "followers_url": "https://api.github.com/users/jllorente/followers", "following_url": "https://api.github.com/users/jllorente/following{/other_user}", "gists_url": "https://api.github.com/users/jllorente/gists{/gist_id}", "starred_url": "https://api.github.com/users/jllorente/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jllorente/subscriptions", "organizations_url": "https://api.github.com/users/jllorente/orgs", "repos_url": "https://api.github.com/users/jllorente/repos", "events_url": "https://api.github.com/users/jllorente/events{/privacy}", "received_events_url": "https://api.github.com/users/jllorente/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-13T19:01:18Z", "updated_at": "2017-03-09T08:38:11Z", "closed_at": "2017-03-09T08:38:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a typo with presistent, should be persistent,  where it says \"This publisher creates a queue with the durable flag and publish a message with the property presistent.\"\r\n\r\nhttps://github.com/Polyconseil/aioamqp/blob/master/docs/examples/work_queue.rst\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/128", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/128/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/128/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/128", "id": 201600346, "node_id": "MDU6SXNzdWUyMDE2MDAzNDY=", "number": 128, "title": "Timeout parameter seems to be not used in channels' module api", "user": {"login": "a-urth", "id": 3456803, "node_id": "MDQ6VXNlcjM0NTY4MDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3456803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a-urth", "html_url": "https://github.com/a-urth", "followers_url": "https://api.github.com/users/a-urth/followers", "following_url": "https://api.github.com/users/a-urth/following{/other_user}", "gists_url": "https://api.github.com/users/a-urth/gists{/gist_id}", "starred_url": "https://api.github.com/users/a-urth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a-urth/subscriptions", "organizations_url": "https://api.github.com/users/a-urth/orgs", "repos_url": "https://api.github.com/users/a-urth/repos", "events_url": "https://api.github.com/users/a-urth/events{/privacy}", "received_events_url": "https://api.github.com/users/a-urth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-18T15:10:30Z", "updated_at": "2017-04-13T14:16:19Z", "closed_at": "2017-04-13T14:16:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Which leads to impossibility to set timeout for `open`/`close` operations and all other operations using `_write_frame` method.\r\nIs this intended behavior or just a bug?\r\nBecause I see no other possibility to set timeout for close operation (in case of lost connection in my particular case) and even async_timeout does not help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/127", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/127/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/127/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/127", "id": 195009982, "node_id": "MDU6SXNzdWUxOTUwMDk5ODI=", "number": 127, "title": "Can't create channel in basic_consume callback", "user": {"login": "chemiron", "id": 7299611, "node_id": "MDQ6VXNlcjcyOTk2MTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7299611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chemiron", "html_url": "https://github.com/chemiron", "followers_url": "https://api.github.com/users/chemiron/followers", "following_url": "https://api.github.com/users/chemiron/following{/other_user}", "gists_url": "https://api.github.com/users/chemiron/gists{/gist_id}", "starred_url": "https://api.github.com/users/chemiron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chemiron/subscriptions", "organizations_url": "https://api.github.com/users/chemiron/orgs", "repos_url": "https://api.github.com/users/chemiron/repos", "events_url": "https://api.github.com/users/chemiron/events{/privacy}", "received_events_url": "https://api.github.com/users/chemiron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-12T15:55:06Z", "updated_at": "2017-01-28T08:09:35Z", "closed_at": "2017-01-28T08:09:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, \r\nI need to create a temporary channel in the consume callback but when I call protocol.channel() method, the execution hangs. The bellow is the test code you can use to repeat the issue:\r\n\r\n```\r\nimport asyncio\r\nimport aioamqp\r\n\r\n\r\nAMQP_SETTINGS = {\r\n    'host': 'localhost',\r\n    'port': 5672,\r\n}\r\n\r\nclass Test:\r\n    proto = None\r\n\r\n    @asyncio.coroutine\r\n    def callback(self, channel, body, envelope, properties):\r\n        yield from self.proto.channel()  # the problem is here, comment the line and you will see output\r\n        print(body)\r\n\r\n    @asyncio.coroutine\r\n    def connect(self):\r\n        transport, self.proto = yield from aioamqp.connect(**AMQP_SETTINGS)\r\n        channel = yield from self.proto.channel()\r\n        yield from channel.queue_declare(queue_name='hello')\r\n        yield from channel.basic_consume(self.callback, queue_name='hello', no_ack=True)\r\n\r\n    @asyncio.coroutine\r\n    def send(self):\r\n        channel = yield from self.proto.channel()\r\n        yield from channel.basic_publish(\r\n            payload='Hello World!',\r\n            exchange_name='',\r\n            routing_key='hello'\r\n        )\r\n\r\n    @asyncio.coroutine\r\n    def execute(self):\r\n        yield from self.connect()\r\n        yield from self.send()\r\n        yield from asyncio.sleep(5)\r\n\r\n\r\ntest = Test()\r\nasyncio.get_event_loop().run_until_complete(test.execute())\r\n```\r\n\r\nIs it a bug or amqp doesn't allow create a new chennel inside the callback ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/126", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/126/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/126/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/126", "id": 194144626, "node_id": "MDU6SXNzdWUxOTQxNDQ2MjY=", "number": 126, "title": "Error when using \"basic_cancel\"", "user": {"login": "nhumrich", "id": 4661889, "node_id": "MDQ6VXNlcjQ2NjE4ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4661889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nhumrich", "html_url": "https://github.com/nhumrich", "followers_url": "https://api.github.com/users/nhumrich/followers", "following_url": "https://api.github.com/users/nhumrich/following{/other_user}", "gists_url": "https://api.github.com/users/nhumrich/gists{/gist_id}", "starred_url": "https://api.github.com/users/nhumrich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nhumrich/subscriptions", "organizations_url": "https://api.github.com/users/nhumrich/orgs", "repos_url": "https://api.github.com/users/nhumrich/repos", "events_url": "https://api.github.com/users/nhumrich/events{/privacy}", "received_events_url": "https://api.github.com/users/nhumrich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-07T19:28:48Z", "updated_at": "2017-03-23T17:29:06Z", "closed_at": "2017-03-23T17:29:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Everytime I try to use `basic_cancel` I get an error that says \"501 Frame Error\"\r\n\r\n`aioamqp.exceptions.ChannelClosed: (501, 'FRAME_ERROR - cannot decode <<1,0>>')`\r\n\r\nHere is an example program:\r\n```python\r\nimport asyncio\r\n\r\nimport aioamqp\r\n\r\nchannel = None\r\nasync def run():\r\n    global channel\r\n    t, p = await aioamqp.connect()\r\n    channel = await p.channel()\r\n    await channel.queue_declare(queue_name='test')\r\n    await channel.basic_qos(prefetch_count=1, prefetch_size=0)\r\n    return await channel.basic_consume(handle, queue_name='test', no_ack=True)\r\n\r\nasync def handle(channel, body, envelope, properties):\r\n    print('do stuff')\r\n\r\nasync def close(consumer_id):\r\n    await channel.basic_cancel(consumer_id)\r\n\r\nloop = asyncio.get_event_loop()\r\nconsumer_id = loop.run_until_complete(run())\r\nloop.run_until_complete(close(consumer_id))\r\n```\r\nRunning on Python 3.5.2 gives me:\r\n\r\n```\r\nServer closed connection: FRAME_ERROR - cannot decode <<1,0>>, code=501, class_id=60, method_id=30\r\nTraceback (most recent call last):\r\n  File \"/home/nhumrich/test3.py\", line 22, in <module>\r\n    loop.run_until_complete(close(consumer_id))\r\n  File \"/usr/lib/python3.5/asyncio/base_events.py\", line 387, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 274, in result\r\n    raise self._exception\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 241, in _step\r\n    result = coro.throw(exc)\r\n  File \"/home/nhumrich/test3.py\", line 18, in close\r\n    await channel.basic_cancel(consumer_id)\r\n  File \"/usr/lib/python3.5/site-packages/aioamqp/channel.py\", line 678, in basic_cancel\r\n    'basic_cancel', frame, request, no_wait=no_wait, timeout=timeout))\r\n  File \"/usr/lib/python3.5/site-packages/aioamqp/channel.py\", line 201, in _write_frame_awaiting_response\r\n    return (yield from f)\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 361, in __iter__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 296, in _wakeup\r\n    future.result()\r\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 274, in result\r\n    raise self._exception\r\naioamqp.exceptions.ChannelClosed: (501, 'FRAME_ERROR - cannot decode <<1,0>>')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/123", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/123/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/123/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/123", "id": 190015681, "node_id": "MDU6SXNzdWUxOTAwMTU2ODE=", "number": 123, "title": "Dropping python 3.3 & 3.4 support", "user": {"login": "dzen", "id": 50241, "node_id": "MDQ6VXNlcjUwMjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/50241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzen", "html_url": "https://github.com/dzen", "followers_url": "https://api.github.com/users/dzen/followers", "following_url": "https://api.github.com/users/dzen/following{/other_user}", "gists_url": "https://api.github.com/users/dzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzen/subscriptions", "organizations_url": "https://api.github.com/users/dzen/orgs", "repos_url": "https://api.github.com/users/dzen/repos", "events_url": "https://api.github.com/users/dzen/events{/privacy}", "received_events_url": "https://api.github.com/users/dzen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-11-17T11:09:48Z", "updated_at": "2019-01-03T15:55:12Z", "closed_at": "2019-01-03T15:55:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm currently thinking of removing python 3.3 support.\r\nWhat if aioamqp 0.9 drops it ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/116", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/116/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/116/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/116", "id": 187373339, "node_id": "MDU6SXNzdWUxODczNzMzMzk=", "number": 116, "title": "Publishing to non existing exchange", "user": {"login": "chemiron", "id": 7299611, "node_id": "MDQ6VXNlcjcyOTk2MTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7299611?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chemiron", "html_url": "https://github.com/chemiron", "followers_url": "https://api.github.com/users/chemiron/followers", "following_url": "https://api.github.com/users/chemiron/following{/other_user}", "gists_url": "https://api.github.com/users/chemiron/gists{/gist_id}", "starred_url": "https://api.github.com/users/chemiron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chemiron/subscriptions", "organizations_url": "https://api.github.com/users/chemiron/orgs", "repos_url": "https://api.github.com/users/chemiron/repos", "events_url": "https://api.github.com/users/chemiron/events{/privacy}", "received_events_url": "https://api.github.com/users/chemiron/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921191, "node_id": "MDU6TGFiZWw4MTkyMTE5MQ==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-11-04T16:06:14Z", "updated_at": "2019-02-21T13:39:46Z", "closed_at": "2019-02-21T13:39:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\naccording to the documentation https://www.rabbitmq.com/amqp-0-9-1-reference.html#basic.publish basic_publish method have to return not-found error code if the exchange doesn't exist, but it returns nothing and doesn't raise any exception:\r\n```\r\nawait channel.basic_publish(\r\n       payload=pickle.dumps(request),\r\n       exchange_name='non_existing_exc',\r\n       routing_key=q_name)\r\n```\r\nis it an issue or it have to work the such way ? and also is there any way how I could to check if the exchange or queue exists ?\r\nThanks\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/115", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/115/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/115/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/115", "id": 186072088, "node_id": "MDU6SXNzdWUxODYwNzIwODg=", "number": 115, "title": "AttributeError: 'NoneType' object has no attribute 'readexactly'", "user": {"login": "comzyh", "id": 1068203, "node_id": "MDQ6VXNlcjEwNjgyMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1068203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comzyh", "html_url": "https://github.com/comzyh", "followers_url": "https://api.github.com/users/comzyh/followers", "following_url": "https://api.github.com/users/comzyh/following{/other_user}", "gists_url": "https://api.github.com/users/comzyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/comzyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comzyh/subscriptions", "organizations_url": "https://api.github.com/users/comzyh/orgs", "repos_url": "https://api.github.com/users/comzyh/repos", "events_url": "https://api.github.com/users/comzyh/events{/privacy}", "received_events_url": "https://api.github.com/users/comzyh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921191, "node_id": "MDU6TGFiZWw4MTkyMTE5MQ==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-10-29T10:49:13Z", "updated_at": "2018-06-08T17:11:49Z", "closed_at": "2017-07-10T09:00:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nERROR:aioamqp.protocol:error on dispatch\nTraceback (most recent call last):\n  File \"/home/vagrant/venv/lib/python3.5/site-packages/aioamqp-0.8.2-py3.5.egg/aioamqp/protocol.py\", line 284, in run\n    yield from self.dispatch_frame()\n  File \"/home/vagrant/venv/lib/python3.5/site-packages/aioamqp-0.8.2-py3.5.egg/aioamqp/protocol.py\", line 231, in dispatch_frame\n    frame = yield from self.get_frame()\n  File \"/home/vagrant/venv/lib/python3.5/site-packages/aioamqp-0.8.2-py3.5.egg/aioamqp/protocol.py\", line 215, in get_frame\n    yield from frame.read_frame()\n  File \"/home/vagrant/venv/lib/python3.5/site-packages/aioamqp-0.8.2-py3.5.egg/aioamqp/frame.py\", line 412, in read_frame\n    data = yield from self.reader.readexactly(7)\nAttributeError: 'NoneType' object has no attribute 'readexactly'\n```\n\nThis Error occur randomly, but it does occure many times. And because this error pollute logs, I can't locate the cause of this error.\n\nSorry for that I can't make reproduce this time. Just let you know about it.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/114", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/114/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/114/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/114", "id": 181323467, "node_id": "MDU6SXNzdWUxODEzMjM0Njc=", "number": 114, "title": "Cancel hearbeat on Close connection", "user": {"login": "VitalySh", "id": 22338551, "node_id": "MDQ6VXNlcjIyMzM4NTUx", "avatar_url": "https://avatars1.githubusercontent.com/u/22338551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VitalySh", "html_url": "https://github.com/VitalySh", "followers_url": "https://api.github.com/users/VitalySh/followers", "following_url": "https://api.github.com/users/VitalySh/following{/other_user}", "gists_url": "https://api.github.com/users/VitalySh/gists{/gist_id}", "starred_url": "https://api.github.com/users/VitalySh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VitalySh/subscriptions", "organizations_url": "https://api.github.com/users/VitalySh/orgs", "repos_url": "https://api.github.com/users/VitalySh/repos", "events_url": "https://api.github.com/users/VitalySh/events{/privacy}", "received_events_url": "https://api.github.com/users/VitalySh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-06T04:44:22Z", "updated_at": "2017-03-23T13:52:53Z", "closed_at": "2017-03-23T13:52:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The time between events depends sraight on hearbeat value\n\n2016-10-06 11:35:55,628 | INFO    | 14179 | aioamqp.protocol    | 286 | Close connection\n2016-10-06 11:36:10,999 | WARNING | 14179 | aioamqp.protocol    | 100 | Connection lost exc=None\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/112", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/112/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/112/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/112", "id": 180320307, "node_id": "MDU6SXNzdWUxODAzMjAzMDc=", "number": 112, "title": "heartbeat timers completely pollute logs with thousands of errors per second", "user": {"login": "RemiCardona", "id": 708740, "node_id": "MDQ6VXNlcjcwODc0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/708740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RemiCardona", "html_url": "https://github.com/RemiCardona", "followers_url": "https://api.github.com/users/RemiCardona/followers", "following_url": "https://api.github.com/users/RemiCardona/following{/other_user}", "gists_url": "https://api.github.com/users/RemiCardona/gists{/gist_id}", "starred_url": "https://api.github.com/users/RemiCardona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RemiCardona/subscriptions", "organizations_url": "https://api.github.com/users/RemiCardona/orgs", "repos_url": "https://api.github.com/users/RemiCardona/repos", "events_url": "https://api.github.com/users/RemiCardona/events{/privacy}", "received_events_url": "https://api.github.com/users/RemiCardona/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921191, "node_id": "MDU6TGFiZWw4MTkyMTE5MQ==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-30T14:38:08Z", "updated_at": "2016-09-30T14:52:09Z", "closed_at": "2016-09-30T14:52:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\nINFO 2016-09-30 16:33:48,614 asyncio poll 2994.933 ms took 2998.075 ms: timeout\nWARNING 2016-09-30 16:33:48,615 aioamqp.protocol Connection lost exc=None\nINFO 2016-09-30 16:33:48,621 aioamqp.protocol Close connection\nWARNING 2016-09-30 16:33:48,630 asyncio socket.send() raised exception.\nWARNING 2016-09-30 16:33:48,630 asyncio socket.send() raised exception.\nWARNING 2016-09-30 16:33:48,631 asyncio socket.send() raised exception.\n[...]\n```\n\nThe patch for #111 actually made things **much** worse. This is thoroughly embarrassing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/111", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/111/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/111/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/111", "id": 178254401, "node_id": "MDU6SXNzdWUxNzgyNTQ0MDE=", "number": 111, "title": "heartbeat timers are still on after connection is closed", "user": {"login": "VitalySh", "id": 22338551, "node_id": "MDQ6VXNlcjIyMzM4NTUx", "avatar_url": "https://avatars1.githubusercontent.com/u/22338551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VitalySh", "html_url": "https://github.com/VitalySh", "followers_url": "https://api.github.com/users/VitalySh/followers", "following_url": "https://api.github.com/users/VitalySh/following{/other_user}", "gists_url": "https://api.github.com/users/VitalySh/gists{/gist_id}", "starred_url": "https://api.github.com/users/VitalySh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VitalySh/subscriptions", "organizations_url": "https://api.github.com/users/VitalySh/orgs", "repos_url": "https://api.github.com/users/VitalySh/repos", "events_url": "https://api.github.com/users/VitalySh/events{/privacy}", "received_events_url": "https://api.github.com/users/VitalySh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921191, "node_id": "MDU6TGFiZWw4MTkyMTE5MQ==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-21T06:01:41Z", "updated_at": "2016-09-23T14:16:15Z", "closed_at": "2016-09-23T14:16:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "WARNING:aioamqp.protocol:Connection lost exc=BrokenPipeError(32, 'Broken pipe')\nERROR:asyncio:Exception in callback AmqpProtocol._heartbeat_timer_recv_timeout()\nhandle: <TimerHandle when=75311.867231919 AmqpProtocol._heartbeat_timer_recv_timeout()>\nTraceback (most recent call last):\n  File \"/usr/lib/python3.5/asyncio/events.py\", line 125, in _run\n    self._callback(*self._args)\n  File \"/usr/lib/python3.5/site-packages/aioamqp/protocol.py\", line 318, in _heartbeat_timer_recv_timeout\n    self._stream_writer.close()\nAttributeError: 'NoneType' object has no attribute 'close'\n\nSteps to reproduce:\n- Restart RabbitMQ server.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/107", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/107/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/107/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/107", "id": 171713187, "node_id": "MDU6SXNzdWUxNzE3MTMxODc=", "number": 107, "title": "tests break with python 3.5.2", "user": {"login": "RemiCardona", "id": 708740, "node_id": "MDQ6VXNlcjcwODc0MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/708740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RemiCardona", "html_url": "https://github.com/RemiCardona", "followers_url": "https://api.github.com/users/RemiCardona/followers", "following_url": "https://api.github.com/users/RemiCardona/following{/other_user}", "gists_url": "https://api.github.com/users/RemiCardona/gists{/gist_id}", "starred_url": "https://api.github.com/users/RemiCardona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RemiCardona/subscriptions", "organizations_url": "https://api.github.com/users/RemiCardona/orgs", "repos_url": "https://api.github.com/users/RemiCardona/repos", "events_url": "https://api.github.com/users/RemiCardona/events{/privacy}", "received_events_url": "https://api.github.com/users/RemiCardona/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921191, "node_id": "MDU6TGFiZWw4MTkyMTE5MQ==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-17T17:21:17Z", "updated_at": "2016-09-23T14:16:15Z", "closed_at": "2016-09-23T14:16:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://travis-ci.org/Polyconseil/aioamqp/jobs/153019740\n\nTravis switched from python 3.5.0 to 3.5.2 since the last master build and so this went unnoticed.\n\nThe upstream asyncio commit that broke the code is likely to be https://hg.python.org/cpython/rev/d1479e05ed0f. On our side, 1f5460a93d3ba35cbbd9a1224d3af1ce412369aa is most likely the guilty patch (though I don't think we want to revert that patch since the upstream commit was probably made for a very good reason).\n\nWill look at it ASAP.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/105", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/105/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/105/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/105", "id": 170374066, "node_id": "MDU6SXNzdWUxNzAzNzQwNjY=", "number": 105, "title": "Error while consuming from multiple queues: Waiter already exists", "user": {"login": "farefernandez", "id": 11508850, "node_id": "MDQ6VXNlcjExNTA4ODUw", "avatar_url": "https://avatars2.githubusercontent.com/u/11508850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/farefernandez", "html_url": "https://github.com/farefernandez", "followers_url": "https://api.github.com/users/farefernandez/followers", "following_url": "https://api.github.com/users/farefernandez/following{/other_user}", "gists_url": "https://api.github.com/users/farefernandez/gists{/gist_id}", "starred_url": "https://api.github.com/users/farefernandez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/farefernandez/subscriptions", "organizations_url": "https://api.github.com/users/farefernandez/orgs", "repos_url": "https://api.github.com/users/farefernandez/repos", "events_url": "https://api.github.com/users/farefernandez/events{/privacy}", "received_events_url": "https://api.github.com/users/farefernandez/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921191, "node_id": "MDU6TGFiZWw4MTkyMTE5MQ==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-08-10T09:38:00Z", "updated_at": "2019-07-15T15:52:50Z", "closed_at": "2019-07-15T15:52:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to set up my code to be able to consume from multiple queues concurrently, using one channel.\n\nApart from connecting and creating the channel, this is the relevant part of the code:\n\n``` python\ntasks = []\nfor u in users:\n    tasks.append(channel.basic_consume(callback, queue_name=u.name))\nawait asyncio.gather(*tasks)\n```\n\nUnfortunately, when I run it, I receive the following `Waiter already exists` error:\n\n```\n  File \"manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/home/app/.local/lib/python3.5/site-packages/django/core/management/__init__.py\", line 367, in execute_from_command_line\n    utility.execute()\n  File \"/home/app/.local/lib/python3.5/site-packages/django/core/management/__init__.py\", line 359, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/home/app/.local/lib/python3.5/site-packages/django/core/management/base.py\", line 305, in run_from_argv\n    self.execute(*args, **cmd_options)\n  File \"/home/app/.local/lib/python3.5/site-packages/django/core/management/base.py\", line 356, in execute\n    output = self.handle(*args, **options)\n  File \"/code/callgen/management/commands/filldata.py\", line 79, in handle\n    loop.run_until_complete(self.connect(loop))\n  File \"/usr/local/lib/python3.5/asyncio/base_events.py\", line 387, in run_until_complete\n    return future.result()\n  File \"/usr/local/lib/python3.5/asyncio/futures.py\", line 274, in result\n    raise self._exception\n  File \"/usr/local/lib/python3.5/asyncio/tasks.py\", line 241, in _step\n    result = coro.throw(exc)\n  File \"/code/callgen/management/commands/filldata.py\", line 75, in connect\n    await asyncio.gather(*tasks)\n  File \"/usr/local/lib/python3.5/asyncio/futures.py\", line 361, in __iter__\n    yield self  # This tells Task to wait for completion.\n  File \"/usr/local/lib/python3.5/asyncio/tasks.py\", line 296, in _wakeup\n    future.result()\n  File \"/usr/local/lib/python3.5/asyncio/futures.py\", line 274, in result\n    raise self._exception\n  File \"/usr/local/lib/python3.5/asyncio/tasks.py\", line 239, in _step\n    result = coro.send(None)\n  File \"/home/app/.local/lib/python3.5/site-packages/aioamqp/channel.py\", line 617, in basic_consume\n    'basic_consume', frame, request, no_wait, timeout=timeout)\n  File \"/home/app/.local/lib/python3.5/site-packages/aioamqp/channel.py\", line 196, in _write_frame_awaiting_response\n    f = self._set_waiter(waiter_id)\n  File \"/home/app/.local/lib/python3.5/site-packages/aioamqp/channel.py\", line 41, in _set_waiter\n    raise exceptions.SynchronizationError(\"Waiter already exists\")\naioamqp.exceptions.SynchronizationError: Waiter already exists\n```\n\nIs there a way to consume from multiple queues using one channel?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/99", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/99/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/99/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/99", "id": 155010871, "node_id": "MDU6SXNzdWUxNTUwMTA4NzE=", "number": 99, "title": "pip installs version 0.6.0", "user": {"login": "avigmati", "id": 3783945, "node_id": "MDQ6VXNlcjM3ODM5NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3783945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avigmati", "html_url": "https://github.com/avigmati", "followers_url": "https://api.github.com/users/avigmati/followers", "following_url": "https://api.github.com/users/avigmati/following{/other_user}", "gists_url": "https://api.github.com/users/avigmati/gists{/gist_id}", "starred_url": "https://api.github.com/users/avigmati/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avigmati/subscriptions", "organizations_url": "https://api.github.com/users/avigmati/orgs", "repos_url": "https://api.github.com/users/avigmati/repos", "events_url": "https://api.github.com/users/avigmati/events{/privacy}", "received_events_url": "https://api.github.com/users/avigmati/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-05-16T11:26:14Z", "updated_at": "2016-05-17T10:32:45Z", "closed_at": "2016-05-17T09:07:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "today i installed aioamqp and version is 0.6.0\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/98", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/98/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/98/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/98", "id": 154111128, "node_id": "MDU6SXNzdWUxNTQxMTExMjg=", "number": 98, "title": "Testing aioamqp code", "user": {"login": "timofurrer", "id": 1008252, "node_id": "MDQ6VXNlcjEwMDgyNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1008252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timofurrer", "html_url": "https://github.com/timofurrer", "followers_url": "https://api.github.com/users/timofurrer/followers", "following_url": "https://api.github.com/users/timofurrer/following{/other_user}", "gists_url": "https://api.github.com/users/timofurrer/gists{/gist_id}", "starred_url": "https://api.github.com/users/timofurrer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timofurrer/subscriptions", "organizations_url": "https://api.github.com/users/timofurrer/orgs", "repos_url": "https://api.github.com/users/timofurrer/repos", "events_url": "https://api.github.com/users/timofurrer/events{/privacy}", "received_events_url": "https://api.github.com/users/timofurrer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-10T21:28:12Z", "updated_at": "2016-07-18T14:18:46Z", "closed_at": "2016-07-18T14:18:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are there any example projects you could refer to which have tests for code using aioamqp?\nIs there any documentation about that? \nIs there an easy way to mock RabbitMQ (Exchanges, Queues, ...). e.g. so I'm able to manually put messages into a queue or just trigger the consumer handler?\n\nDo you have other noteworthy comments for testing aioamqp code?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/96", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/96/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/96/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/96", "id": 153589068, "node_id": "MDU6SXNzdWUxNTM1ODkwNjg=", "number": 96, "title": "RabbitMQ heartbeat issue ([Errno 104] Connection reset by peer)", "user": {"login": "comzyh", "id": 1068203, "node_id": "MDQ6VXNlcjEwNjgyMDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1068203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/comzyh", "html_url": "https://github.com/comzyh", "followers_url": "https://api.github.com/users/comzyh/followers", "following_url": "https://api.github.com/users/comzyh/following{/other_user}", "gists_url": "https://api.github.com/users/comzyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/comzyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/comzyh/subscriptions", "organizations_url": "https://api.github.com/users/comzyh/orgs", "repos_url": "https://api.github.com/users/comzyh/repos", "events_url": "https://api.github.com/users/comzyh/events{/privacy}", "received_events_url": "https://api.github.com/users/comzyh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921191, "node_id": "MDU6TGFiZWw4MTkyMTE5MQ==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-05-07T11:06:22Z", "updated_at": "2016-07-18T14:14:46Z", "closed_at": "2016-07-18T14:14:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using aioamqp 0.7 in python 3.5 envioronment.\n\nAbout 180 seconds after I called basic_consume \n\n> await self.channel.basic_consume(queue_name='worker_heartbeat', callback=self.handle_heartbeat, no_ack=True)\n\nthere are error message in my terminal\n\n```\n[2016-05-07 18:39:39,461] asyncio:ERROR: Task exception was never retrieved\nfuture: <Task finished coro=<disconnected() done, defined at /home/vagrant/Project/foo/bar/core/mq_connection.py:31> exception=AmqpClosedConnection()>\nTraceback (most recent call last):\n  File \"/home/vagrant/venv/foo/lib/python3.5/site-packages/aioamqp/frame.py\", line 413, in read_frame\n    data = yield from self.reader.readexactly(7)\n  File \"/usr/lib/python3.5/asyncio/streams.py\", line 659, in readexactly\n    block = yield from self.read(n)\n  File \"/usr/lib/python3.5/asyncio/streams.py\", line 617, in read\n    yield from self._wait_for_data('read')\n  File \"/usr/lib/python3.5/asyncio/streams.py\", line 451, in _wait_for_data\n    yield from self._waiter\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 361, in __iter__\n    yield self  # This tells Task to wait for completion.\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 297, in _wakeup\n    future.result()\n  File \"/usr/lib/python3.5/asyncio/futures.py\", line 274, in result\n    raise self._exception\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 240, in _step\n    result = coro.send(None)\n  File \"/home/vagrant/Project/foo/bar/core/mq_connection.py\", line 37, in disconnected\n    raise exception\n  File \"/usr/lib/python3.5/asyncio/selector_events.py\", line 663, in _read_ready\n    data = self._sock.recv(self.max_size)\nConnectionResetError: [Errno 104] Connection reset by peer\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/usr/lib/python3.5/asyncio/tasks.py\", line 240, in _step\n    result = coro.send(None)\n  File \"/home/vagrant/Project/foo/bar/core/mq_connection.py\", line 37, in disconnected\n    raise exception\n  File \"/home/vagrant/venv/foo/lib/python3.5/site-packages/aioamqp/protocol.py\", line 262, in run\n    yield from self.dispatch_frame()\n  File \"/home/vagrant/venv/foo/lib/python3.5/site-packages/aioamqp/protocol.py\", line 204, in dispatch_frame\n    frame = yield from self.get_frame()\n  File \"/home/vagrant/venv/foo/lib/python3.5/site-packages/aioamqp/protocol.py\", line 189, in get_frame\n    yield from frame.read_frame()\n  File \"/home/vagrant/venv/foo/lib/python3.5/site-packages/aioamqp/frame.py\", line 415, in read_frame\n    raise exceptions.AmqpClosedConnection() from ex\naioamqp.exceptions.AmqpClosedConnection\n\n```\n\nAt the same time I got error message in rabbitMQ log like:\n\n```\n=INFO REPORT==== 7-May-2016::18:36:39 ===\naccepting AMQP connection <0.5469.0> (192.168.50.4:53416 -> 192.168.50.4:5672)\n\n=ERROR REPORT==== 7-May-2016::18:39:39 ===\nclosing AMQP connection <0.5469.0> (192.168.50.4:53416 -> 192.168.50.4:5672):\nMissed heartbeats from client, timeout: 60s\n```\n\nIt seems that after 3 missing heartbeat, the rabbitMQ server close the connection.\n\nAnd I notice that if nothing is published in the queue I consume, the connection will not be closed.\n\nBut in the rest part of my project, I use the same way to create channel, and consume the message, nothing seems to be wrong.\n\nMy question is: \n- How can I ensure aioamqp to send heartbeat normally? \n- Can you kindly tell me what is the possible mistake I made?\n\nplease forgive my poor English.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/91", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/91/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/91/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/91", "id": 146445804, "node_id": "MDU6SXNzdWUxNDY0NDU4MDQ=", "number": 91, "title": "connect() and from_url() factory methods should accept an ssl.SSLContext instance", "user": {"login": "surfacepatterns", "id": 3633252, "node_id": "MDQ6VXNlcjM2MzMyNTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/3633252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/surfacepatterns", "html_url": "https://github.com/surfacepatterns", "followers_url": "https://api.github.com/users/surfacepatterns/followers", "following_url": "https://api.github.com/users/surfacepatterns/following{/other_user}", "gists_url": "https://api.github.com/users/surfacepatterns/gists{/gist_id}", "starred_url": "https://api.github.com/users/surfacepatterns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/surfacepatterns/subscriptions", "organizations_url": "https://api.github.com/users/surfacepatterns/orgs", "repos_url": "https://api.github.com/users/surfacepatterns/repos", "events_url": "https://api.github.com/users/surfacepatterns/events{/privacy}", "received_events_url": "https://api.github.com/users/surfacepatterns/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921193, "node_id": "MDU6TGFiZWw4MTkyMTE5Mw==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-06T21:49:57Z", "updated_at": "2019-01-29T17:43:52Z", "closed_at": "2019-01-29T17:43:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, the connect() and from_url() methods have one point of customization for SSL connections in the form of a `verify_ssl` argument.  However, this misses the point as:\n1. [asyncio.create_connection](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.BaseEventLoop.create_connection) accepts `server_hostname` and `ssl` arguments\n2. The `ssl` argument can be an [ssl.SSLContext](https://docs.python.org/3/library/ssl.html#ssl-contexts) instance that can be customized further than just deciding whether or not server-side certificates should be verified.\n\nIn order to support such options, and to be future-compatible with any new options introduced to customize `ssl.SSLContext` instances, I suggest the following:\n1. Drop the `verify_ssl` argument.  It appears to be a short-sighted attempt to deal with the new default SSL policy introduced with newer versions of Python.\n2. Overload the `ssl` argument to accept `ssl.SSLContext` instances, and forward such instances to `asyncio.create_connection`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/89", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/89/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/89/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/89", "id": 145461053, "node_id": "MDU6SXNzdWUxNDU0NjEwNTM=", "number": 89, "title": "Connection and channel names", "user": {"login": "jared-mackey", "id": 10620022, "node_id": "MDQ6VXNlcjEwNjIwMDIy", "avatar_url": "https://avatars1.githubusercontent.com/u/10620022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jared-mackey", "html_url": "https://github.com/jared-mackey", "followers_url": "https://api.github.com/users/jared-mackey/followers", "following_url": "https://api.github.com/users/jared-mackey/following{/other_user}", "gists_url": "https://api.github.com/users/jared-mackey/gists{/gist_id}", "starred_url": "https://api.github.com/users/jared-mackey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jared-mackey/subscriptions", "organizations_url": "https://api.github.com/users/jared-mackey/orgs", "repos_url": "https://api.github.com/users/jared-mackey/repos", "events_url": "https://api.github.com/users/jared-mackey/events{/privacy}", "received_events_url": "https://api.github.com/users/jared-mackey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-04-03T06:44:12Z", "updated_at": "2016-04-04T15:52:22Z", "closed_at": "2016-04-04T15:52:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to get the connection and channel names from the driver? \n\nI want to be able to hit the API from rabbitmq and query for just the one connection/channel.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/87", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/87/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/87/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/87", "id": 144012964, "node_id": "MDU6SXNzdWUxNDQwMTI5NjQ=", "number": 87, "title": "RPC: How to nest calls?", "user": {"login": "timofurrer", "id": 1008252, "node_id": "MDQ6VXNlcjEwMDgyNTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1008252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timofurrer", "html_url": "https://github.com/timofurrer", "followers_url": "https://api.github.com/users/timofurrer/followers", "following_url": "https://api.github.com/users/timofurrer/following{/other_user}", "gists_url": "https://api.github.com/users/timofurrer/gists{/gist_id}", "starred_url": "https://api.github.com/users/timofurrer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timofurrer/subscriptions", "organizations_url": "https://api.github.com/users/timofurrer/orgs", "repos_url": "https://api.github.com/users/timofurrer/repos", "events_url": "https://api.github.com/users/timofurrer/events{/privacy}", "received_events_url": "https://api.github.com/users/timofurrer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-28T16:03:36Z", "updated_at": "2019-03-08T12:23:26Z", "closed_at": "2019-03-08T12:23:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Going from the RPC example ... Let's assume I want to call my caller again in the `on_request` callback and wait for the response. How can I achieve this without a deadlock?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/85", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/85/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/85/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/85", "id": 139538219, "node_id": "MDU6SXNzdWUxMzk1MzgyMTk=", "number": 85, "title": "How to consume / handle multiple messages simultaneously?", "user": {"login": "datakurre", "id": 160447, "node_id": "MDQ6VXNlcjE2MDQ0Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/160447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/datakurre", "html_url": "https://github.com/datakurre", "followers_url": "https://api.github.com/users/datakurre/followers", "following_url": "https://api.github.com/users/datakurre/following{/other_user}", "gists_url": "https://api.github.com/users/datakurre/gists{/gist_id}", "starred_url": "https://api.github.com/users/datakurre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/datakurre/subscriptions", "organizations_url": "https://api.github.com/users/datakurre/orgs", "repos_url": "https://api.github.com/users/datakurre/repos", "events_url": "https://api.github.com/users/datakurre/events{/privacy}", "received_events_url": "https://api.github.com/users/datakurre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-09T10:31:47Z", "updated_at": "2016-03-10T10:37:04Z", "closed_at": "2016-03-09T11:10:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "With a single connection and a single channel I am unable to handle more than one simultaneous message.\n\nAm I missing something?\n\nIf I create multiple connections, I'm able to simultaneously consume one message per connection (thus, 10 connections give 10 simultaneously handled messages). This also confirms that my handler code is not blocking asyncio from that.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/82", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/82/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/82/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/82", "id": 136203251, "node_id": "MDU6SXNzdWUxMzYyMDMyNTE=", "number": 82, "title": "Question: is it better than asynqp ?", "user": {"login": "socketpair", "id": 1157412, "node_id": "MDQ6VXNlcjExNTc0MTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1157412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/socketpair", "html_url": "https://github.com/socketpair", "followers_url": "https://api.github.com/users/socketpair/followers", "following_url": "https://api.github.com/users/socketpair/following{/other_user}", "gists_url": "https://api.github.com/users/socketpair/gists{/gist_id}", "starred_url": "https://api.github.com/users/socketpair/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/socketpair/subscriptions", "organizations_url": "https://api.github.com/users/socketpair/orgs", "repos_url": "https://api.github.com/users/socketpair/repos", "events_url": "https://api.github.com/users/socketpair/events{/privacy}", "received_events_url": "https://api.github.com/users/socketpair/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-02-24T22:15:59Z", "updated_at": "2016-07-18T14:22:41Z", "closed_at": "2016-07-18T14:22:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/benjamin-hodgson/asynqp\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/80", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/80/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/80/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/80", "id": 134942446, "node_id": "MDU6SXNzdWUxMzQ5NDI0NDY=", "number": 80, "title": "Test test_connection_unexistant_vhost failed", "user": {"login": "mastak", "id": 628807, "node_id": "MDQ6VXNlcjYyODgwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/628807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mastak", "html_url": "https://github.com/mastak", "followers_url": "https://api.github.com/users/mastak/followers", "following_url": "https://api.github.com/users/mastak/following{/other_user}", "gists_url": "https://api.github.com/users/mastak/gists{/gist_id}", "starred_url": "https://api.github.com/users/mastak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mastak/subscriptions", "organizations_url": "https://api.github.com/users/mastak/orgs", "repos_url": "https://api.github.com/users/mastak/repos", "events_url": "https://api.github.com/users/mastak/events{/privacy}", "received_events_url": "https://api.github.com/users/mastak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-02-19T18:36:15Z", "updated_at": "2016-03-24T10:37:46Z", "closed_at": "2016-03-24T10:37:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have one failure in tests (other tests are succeed):\n\n```\nnosetests  --verbosity=2 aioamqp.tests.test_protocol:ProtocolTestCase.test_connection_unexistant_vhost\ntest_connection_unexistant_vhost (aioamqp.tests.test_protocol.ProtocolTestCase) ... FAIL\n\n======================================================================\nFAIL: test_connection_unexistant_vhost (aioamqp.tests.test_protocol.ProtocolTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/mastak/aioamqp/aioamqp/tests/testing.py\", line 41, in wrapper\n    self.loop.run_until_complete(asyncio.wait_for(coro(self), timeout=timeout_, loop=self.loop))\n  File \"/usr/lib/python3.4/asyncio/base_events.py\", line 316, in run_until_complete\n    return future.result()\n  File \"/usr/lib/python3.4/asyncio/futures.py\", line 275, in result\n    raise self._exception\n  File \"/usr/lib/python3.4/asyncio/tasks.py\", line 238, in _step\n    result = next(coro)\n  File \"/usr/lib/python3.4/asyncio/tasks.py\", line 377, in wait_for\n    return fut.result()\n  File \"/usr/lib/python3.4/asyncio/futures.py\", line 275, in result\n    raise self._exception\n  File \"/usr/lib/python3.4/asyncio/tasks.py\", line 238, in _step\n    result = next(coro)\n  File \"/home/mastak/aioamqp/aioamqp/tests/test_protocol.py\", line 43, in test_connection_unexistant_vhost\n    yield from amqp_connect(virtualhost='/unexistant', loop=self.loop)\nnose.proxy.AssertionError: AmqpClosedConnection not raised\n-------------------- >> begin captured stdout << ---------------------\nhttp://localhost:15672/api/vhosts/%2Ftest-aioamqp\nhttp://localhost:15672/api/vhosts/%2Ftest-aioamqp\nhttp://localhost:15672/api/permissions/%2Ftest-aioamqp/guest\n\n--------------------- >> end captured stdout << ----------------------\n-------------------- >> begin captured logging << --------------------\nasyncio: DEBUG: Using selector: EpollSelector\naioamqp.protocol: INFO: Recv open ok\naioamqp.channel: DEBUG: Channel is open\naioamqp.protocol: WARNING: Server closed connection: NOT_ALLOWED - access to vhost '/unexistant' refused for user 'guest', code=530, class_id=10, method_id=40\naioamqp.tests.testcase: DEBUG: Delete channel <aioamqp.tests.testcase.ProxyChannel object at 0x7f7745bc4d30>\naioamqp.tests.testcase: DEBUG: Delete channel <aioamqp.tests.testcase.ProxyChannel object at 0x7f7745bc4d30>\naioamqp.tests.testcase: DEBUG: Delete amqp <aioamqp.tests.testcase.ProxyAmqpProtocol object at 0x7f7745bc4e10>\naioamqp.protocol: ERROR: error on dispatch\nTraceback (most recent call last):\n  File \"/home/mastak/aioamqp/aioamqp/protocol.py\", line 255, in run\n    yield from self.dispatch_frame()\n  File \"/home/mastak/aioamqp/aioamqp/protocol.py\", line 210, in dispatch_frame\n    yield from self.channels[frame.channel].dispatch_frame(frame)\n  File \"/home/mastak/aioamqp/aioamqp/channel.py\", line 111, in dispatch_frame\n    yield from methods[(frame.class_id, frame.method_id)](frame)\n  File \"/usr/lib/python3.4/asyncio/coroutines.py\", line 141, in coro\n    res = func(*args, **kw)\n  File \"/home/mastak/aioamqp/aioamqp/channel.py\", line 166, in close_ok\n    self._get_waiter('close').set_result(True)\n  File \"/home/mastak/aioamqp/aioamqp/channel.py\", line 50, in _get_waiter\n    raise exceptions.SynchronizationError(\"Call %s didn't set a waiter\" % rpc_name)\naioamqp.exceptions.SynchronizationError: Call close didn't set a waiter\naioamqp.protocol: WARNING: Server closed connection: CHANNEL_ERROR - expected 'channel.open', code=504, class_id=20, method_id=40\naioamqp.protocol: WARNING: Connection lost exc=None\n--------------------- >> end captured logging << ---------------------\n\n----------------------------------------------------------------------\nRan 1 test in 0.151s\n```\n\nAlso I have many failures tests when I run it on mac os.\nIt has some limits with docker, and I want to fix it. \nBut I think it would be better if all the tests will pass on linux, and only after that I will make changes.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/77", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/77/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/77/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/77", "id": 133652269, "node_id": "MDU6SXNzdWUxMzM2NTIyNjk=", "number": 77, "title": "Close callback or on error handler for protocol", "user": {"login": "mastak", "id": 628807, "node_id": "MDQ6VXNlcjYyODgwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/628807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mastak", "html_url": "https://github.com/mastak", "followers_url": "https://api.github.com/users/mastak/followers", "following_url": "https://api.github.com/users/mastak/following{/other_user}", "gists_url": "https://api.github.com/users/mastak/gists{/gist_id}", "starred_url": "https://api.github.com/users/mastak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mastak/subscriptions", "organizations_url": "https://api.github.com/users/mastak/orgs", "repos_url": "https://api.github.com/users/mastak/repos", "events_url": "https://api.github.com/users/mastak/events{/privacy}", "received_events_url": "https://api.github.com/users/mastak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-02-15T08:34:59Z", "updated_at": "2016-02-15T08:48:15Z", "closed_at": "2016-02-15T08:48:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "When server closed connection unexpectedly, my script (consumer) was working and do nothing (`run_forever`).\n\nAnd all what I can do: run some function after 'basic_consume', which would be periodically check connection state. I think it wrong way for async scripts. :)\n\n```\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/site-packages/aioamqp/protocol.py\", line 255, in run\n    yield from self.dispatch_frame()\n  File \"/usr/local/lib/python3.5/site-packages/aioamqp/protocol.py\", line 210, in dispatch_frame\n    yield from self.channels[frame.channel].dispatch_frame(frame)\n  File \"/usr/local/lib/python3.5/site-packages/aioamqp/channel.py\", line 110, in dispatch_frame\n    yield from methods[(frame.class_id, frame.method_id)](frame)\n  File \"/usr/local/lib/python3.5/site-packages/aioamqp/channel.py\", line 718, in basic_deliver\n    content_body_frame = yield from self.protocol.get_frame()\n  File \"/usr/local/lib/python3.5/site-packages/aioamqp/protocol.py\", line 183, in get_frame\n    yield from frame.read_frame()\n  File \"/usr/local/lib/python3.5/site-packages/aioamqp/frame.py\", line 434, in read_frame\n    payload_data = yield from self.reader.readexactly(self.frame_length)\n  File \"/usr/local/lib/python3.5/asyncio/streams.py\", line 509, in readexactly\n    block = yield from self.read(n)\n  File \"/usr/local/lib/python3.5/asyncio/streams.py\", line 482, in read\n    yield from self._wait_for_data('read')\n  File \"/usr/local/lib/python3.5/asyncio/streams.py\", line 423, in _wait_for_data\n    yield from self._waiter\n  File \"/usr/local/lib/python3.5/asyncio/futures.py\", line 358, in __iter__\n    yield self  # This tells Task to wait for completion.\n  File \"/usr/local/lib/python3.5/asyncio/tasks.py\", line 290, in _wakeup\n    future.result()\n  File \"/usr/local/lib/python3.5/asyncio/futures.py\", line 274, in result\n    raise self._exception\n  File \"/usr/local/lib/python3.5/asyncio/selector_events.py\", line 702, in write\n    n = self._sock.send(data)\nConnectionResetError: [Errno 104] Connection reset by peer\n2016-02-12 19:07:02 71897a856041 aioamqp.protocol[1] INFO Close connection\n```\n\nAs option we can add some callback/handler in `Exception` case\n`protocol.py`\n\n```\n    @asyncio.coroutine\n    def run(self):\n        while not self.stop_now.done():\n            try:\n                yield from self.dispatch_frame()\n            except exceptions.AmqpClosedConnection as exc:\n                logger.info(\"Close connection\")\n                self.stop_now.set_result(None)\n\n                self._close_channels(exception=exc)\n            except Exception:\n                logger.exception('error on dispatch')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/76", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/76/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/76/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/76", "id": 132926144, "node_id": "MDU6SXNzdWUxMzI5MjYxNDQ=", "number": 76, "title": "Operation basic.publish caused a connection exception unexpected_frame", "user": {"login": "mastak", "id": 628807, "node_id": "MDQ6VXNlcjYyODgwNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/628807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mastak", "html_url": "https://github.com/mastak", "followers_url": "https://api.github.com/users/mastak/followers", "following_url": "https://api.github.com/users/mastak/following{/other_user}", "gists_url": "https://api.github.com/users/mastak/gists{/gist_id}", "starred_url": "https://api.github.com/users/mastak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mastak/subscriptions", "organizations_url": "https://api.github.com/users/mastak/orgs", "repos_url": "https://api.github.com/users/mastak/repos", "events_url": "https://api.github.com/users/mastak/events{/privacy}", "received_events_url": "https://api.github.com/users/mastak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-02-11T09:32:42Z", "updated_at": "2018-06-25T14:50:28Z", "closed_at": "2018-06-25T14:50:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a big stream of data, and firstly I tried to push one data item in one `publish` call.\nBut periodically happened this error:\n\n```\nServer closed connection: UNEXPECTED_FRAME - expected content body, got non content body frame instead, code=505, class_id=60, method_id=40\n```\n\nIn server logs:\n\n```\nError on AMQP connection <0.11901.881> (172.30.0.83:56306 -> 172.17.0.26:5672, vhost: 'sync', user: 'producer', state: running), channel 1:\noperation basic.publish caused a connection exception unexpected_frame: \"expected content body, got non content body frame instead\"\n```\n\nIt was about 1000 - 10 000 items / sec.\n\nThen I started making groups and send it (100 - 300 items / sec). An error has gone.\nIs it has limit? :)\nHow can I fix it?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/70", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/70/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/70/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/70", "id": 126707378, "node_id": "MDU6SXNzdWUxMjY3MDczNzg=", "number": 70, "title": "rpc performance question", "user": {"login": "appetito", "id": 557573, "node_id": "MDQ6VXNlcjU1NzU3Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/557573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/appetito", "html_url": "https://github.com/appetito", "followers_url": "https://api.github.com/users/appetito/followers", "following_url": "https://api.github.com/users/appetito/following{/other_user}", "gists_url": "https://api.github.com/users/appetito/gists{/gist_id}", "starred_url": "https://api.github.com/users/appetito/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/appetito/subscriptions", "organizations_url": "https://api.github.com/users/appetito/orgs", "repos_url": "https://api.github.com/users/appetito/repos", "events_url": "https://api.github.com/users/appetito/events{/privacy}", "received_events_url": "https://api.github.com/users/appetito/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-14T17:35:52Z", "updated_at": "2016-03-24T10:37:46Z", "closed_at": "2016-03-24T10:37:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi!\n\ni have modified rpc server aand client and they are very slow:\n\nClient - sends requests in infitite loop:\n\n``` python\n#!/usr/bin/env python\n\n\"\"\"\n    RPC client, aioamqp implementation of RPC examples from RabbitMQ tutorial\n\n\"\"\"\n\nimport asyncio\nimport uuid\n\nimport aioamqp\n\n\nclass FibonacciRpcClient(object):\n    def __init__(self):\n        self.transport = None\n        self.protocol = None\n        self.channel = None\n        self.callback_queue = None\n        self.waiter = asyncio.Event()\n\n    @asyncio.coroutine\n    def connect(self):\n        \"\"\" an `__init__` method can't be a coroutine\"\"\"\n        self.transport, self.protocol = yield from aioamqp.connect()\n        self.channel = yield from self.protocol.channel()\n\n        result = yield from self.channel.queue_declare(queue_name='', exclusive=True)\n        self.callback_queue = result['queue']\n\n        yield from self.channel.basic_consume(\n            self.on_response,\n            no_ack=True,\n            queue_name=self.callback_queue,\n        )\n\n    @asyncio.coroutine\n    def on_response(self, channel, body, envelope, properties):\n        if self.corr_id == properties.correlation_id:\n            self.response = body\n\n        self.waiter.set()\n\n    @asyncio.coroutine\n    def call(self, n):\n        if not self.protocol:\n            yield from self.connect()\n        self.response = None\n        self.waiter.clear()\n        self.corr_id = str(uuid.uuid4())\n        yield from self.channel.basic_publish(\n            payload=str(n),\n            exchange_name='',\n            routing_key='rpc_queue',\n            properties={\n                'reply_to': self.callback_queue,\n                'correlation_id': self.corr_id,\n            },\n        )\n        yield from self.waiter.wait()\n\n        # yield from self.protocol.close()\n        return self.response\n\n\n@asyncio.coroutine\ndef rpc_client():\n    fibonacci_rpc = FibonacciRpcClient()\n    print(\" [x] Requesting fib(30)\")\n    while True:\n        pass\n        response = yield from fibonacci_rpc.call(30)\n        print(\" [.] Got %r\" % response)\n\n\nasyncio.get_event_loop().run_until_complete(rpc_client())\n\n```\n\nServer - no calculations, just echo:\n\n``` python\n\"\"\"\n    RPC server, aioamqp implementation of RPC examples from RabbitMQ tutorial\n\"\"\"\n\nimport asyncio\nimport aioamqp\n\n\n@asyncio.coroutine\ndef on_request(channel, body, envelope, properties):\n    n = int(body)\n\n    print(\" [.] fib(%s)\" % n)\n    # response = fib(n)\n    response = n\n\n    yield from channel.basic_publish(\n        payload=str(response),\n        exchange_name='',\n        routing_key=properties.reply_to,\n        properties={\n            'correlation_id': properties.correlation_id,\n        },\n    )\n\n    yield from channel.basic_client_ack(delivery_tag=envelope.delivery_tag)\n\n\n@asyncio.coroutine\ndef rpc_server():\n\n    transport, protocol = yield from aioamqp.connect()\n\n    channel = yield from protocol.channel()\n\n    yield from channel.queue_declare(queue_name='rpc_queue')\n    yield from channel.basic_qos(prefetch_count=1, prefetch_size=0, connection_global=False)\n    yield from channel.basic_consume(on_request, queue_name='rpc_queue')\n    print(\" [x] Awaiting RPC requests\")\n\n\nevent_loop = asyncio.get_event_loop()\nevent_loop.run_until_complete(rpc_server())\nevent_loop.run_forever()\n```\n\nAnd i have only 25 requests per second\n\nWhy so slow? why exactly 25?\n\nThanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/65", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/65/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/65/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/65", "id": 124232626, "node_id": "MDU6SXNzdWUxMjQyMzI2MjY=", "number": 65, "title": "[question]: Reconnection aioamqp", "user": {"login": "zloidemon", "id": 296371, "node_id": "MDQ6VXNlcjI5NjM3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/296371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zloidemon", "html_url": "https://github.com/zloidemon", "followers_url": "https://api.github.com/users/zloidemon/followers", "following_url": "https://api.github.com/users/zloidemon/following{/other_user}", "gists_url": "https://api.github.com/users/zloidemon/gists{/gist_id}", "starred_url": "https://api.github.com/users/zloidemon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zloidemon/subscriptions", "organizations_url": "https://api.github.com/users/zloidemon/orgs", "repos_url": "https://api.github.com/users/zloidemon/repos", "events_url": "https://api.github.com/users/zloidemon/events{/privacy}", "received_events_url": "https://api.github.com/users/zloidemon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-12-29T16:12:09Z", "updated_at": "2017-05-16T10:11:17Z", "closed_at": "2016-07-18T14:32:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nHow to correct handle event and reconnect to the server? (I don't see callbacks on_connect/on_disconnect/etc like [this](https://pika.readthedocs.org/en/latest/examples/asynchronous_consumer_example.html).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/62", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/62/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/62/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/62", "id": 123049273, "node_id": "MDU6SXNzdWUxMjMwNDkyNzM=", "number": 62, "title": "TypeError: basic_consume() got multiple values for argument 'callback'", "user": {"login": "ariddell", "id": 19950, "node_id": "MDQ6VXNlcjE5OTUw", "avatar_url": "https://avatars2.githubusercontent.com/u/19950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ariddell", "html_url": "https://github.com/ariddell", "followers_url": "https://api.github.com/users/ariddell/followers", "following_url": "https://api.github.com/users/ariddell/following{/other_user}", "gists_url": "https://api.github.com/users/ariddell/gists{/gist_id}", "starred_url": "https://api.github.com/users/ariddell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ariddell/subscriptions", "organizations_url": "https://api.github.com/users/ariddell/orgs", "repos_url": "https://api.github.com/users/ariddell/repos", "events_url": "https://api.github.com/users/ariddell/events{/privacy}", "received_events_url": "https://api.github.com/users/ariddell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-19T00:40:38Z", "updated_at": "2015-12-19T07:22:40Z", "closed_at": "2015-12-19T00:45:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "Upgrading from 0.4.0 to 0.5.1 with no code changes I get this error. Did the API change?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/55", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/55/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/55/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/55", "id": 115284977, "node_id": "MDU6SXNzdWUxMTUyODQ5Nzc=", "number": 55, "title": "Please don't check the basic_consume callback for iscoroutinefunction", "user": {"login": "smurfix", "id": 236571, "node_id": "MDQ6VXNlcjIzNjU3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/236571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smurfix", "html_url": "https://github.com/smurfix", "followers_url": "https://api.github.com/users/smurfix/followers", "following_url": "https://api.github.com/users/smurfix/following{/other_user}", "gists_url": "https://api.github.com/users/smurfix/gists{/gist_id}", "starred_url": "https://api.github.com/users/smurfix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smurfix/subscriptions", "organizations_url": "https://api.github.com/users/smurfix/orgs", "repos_url": "https://api.github.com/users/smurfix/repos", "events_url": "https://api.github.com/users/smurfix/events{/privacy}", "received_events_url": "https://api.github.com/users/smurfix/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-11-05T13:37:00Z", "updated_at": "2015-11-24T17:25:07Z", "closed_at": "2015-11-24T17:25:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "```\naioamqp.exceptions.ConfigurationError: basic_consume requires a coroutine callback\n```\n\nThis is a spurious error.\nOne might want to use tools like `functools.partial`, or a nested function, to create the callback. Example:\n\n```\nyield from my_channel.basic_consume(my_queue, callback=functools.partial(self._on_rpc, my_data))\n```\n\nChecking for None (or maybe `callable()`) should be sufficient.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/54", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/54/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/54/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/54", "id": 115225902, "node_id": "MDU6SXNzdWUxMTUyMjU5MDI=", "number": 54, "title": "Channel Connection Pool", "user": {"login": "kracekumar", "id": 311929, "node_id": "MDQ6VXNlcjMxMTkyOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/311929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kracekumar", "html_url": "https://github.com/kracekumar", "followers_url": "https://api.github.com/users/kracekumar/followers", "following_url": "https://api.github.com/users/kracekumar/following{/other_user}", "gists_url": "https://api.github.com/users/kracekumar/gists{/gist_id}", "starred_url": "https://api.github.com/users/kracekumar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kracekumar/subscriptions", "organizations_url": "https://api.github.com/users/kracekumar/orgs", "repos_url": "https://api.github.com/users/kracekumar/repos", "events_url": "https://api.github.com/users/kracekumar/events{/privacy}", "received_events_url": "https://api.github.com/users/kracekumar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-11-05T07:40:43Z", "updated_at": "2015-11-19T08:49:11Z", "closed_at": "2015-11-19T08:49:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "As per `amqp` docs it suggested to open one connection and have any number of channels open. There is a huge performance improvement for `1 connection - n channel` pattern. It will be worth to maintain pool of amqp channels.\n\nI am interested in sending a pull request. Please let me know if any more info is required.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/53", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/53/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/53/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/53", "id": 112387858, "node_id": "MDU6SXNzdWUxMTIzODc4NTg=", "number": 53, "title": "RPC call documentation/examples", "user": {"login": "zloidemon", "id": 296371, "node_id": "MDQ6VXNlcjI5NjM3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/296371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zloidemon", "html_url": "https://github.com/zloidemon", "followers_url": "https://api.github.com/users/zloidemon/followers", "following_url": "https://api.github.com/users/zloidemon/following{/other_user}", "gists_url": "https://api.github.com/users/zloidemon/gists{/gist_id}", "starred_url": "https://api.github.com/users/zloidemon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zloidemon/subscriptions", "organizations_url": "https://api.github.com/users/zloidemon/orgs", "repos_url": "https://api.github.com/users/zloidemon/repos", "events_url": "https://api.github.com/users/zloidemon/events{/privacy}", "received_events_url": "https://api.github.com/users/zloidemon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-20T14:59:04Z", "updated_at": "2015-12-22T12:21:48Z", "closed_at": "2015-12-22T12:21:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would you like add  documentation/examples to creation of rpc server/client?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/52", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/52/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/52/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/52", "id": 111420115, "node_id": "MDU6SXNzdWUxMTE0MjAxMTU=", "number": 52, "title": "Does aioamqp work?", "user": {"login": "zloidemon", "id": 296371, "node_id": "MDQ6VXNlcjI5NjM3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/296371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zloidemon", "html_url": "https://github.com/zloidemon", "followers_url": "https://api.github.com/users/zloidemon/followers", "following_url": "https://api.github.com/users/zloidemon/following{/other_user}", "gists_url": "https://api.github.com/users/zloidemon/gists{/gist_id}", "starred_url": "https://api.github.com/users/zloidemon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zloidemon/subscriptions", "organizations_url": "https://api.github.com/users/zloidemon/orgs", "repos_url": "https://api.github.com/users/zloidemon/repos", "events_url": "https://api.github.com/users/zloidemon/events{/privacy}", "received_events_url": "https://api.github.com/users/zloidemon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-10-14T15:13:32Z", "updated_at": "2015-10-20T14:33:53Z", "closed_at": "2015-10-16T08:03:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nDoes driver work?\n\nI only see this:\n\n```\n(.venv)vg %> python test_receive.py\nb'py2.queue'\nb'py2.queue'\nb'py2.queue'\nb'py2.queue'\nb'py2.queue'\n```\n\n```\n# rabbitmqctl list_channels\nListing channels ...\n<rabbit@tt01.1.11368.0> python_test 1   5\n```\n\nI sent 3 messages to:\n\n```\n(.venv)vg %> python send.py \nHello World!\n(.venv)vg %> python send.py\nHello World!\n(.venv)vg %> python send.py\nHello World!\n```\n\nBut I still see and expecting messages:\n\n```\n(.venv)vg %> python test_receive.py\nb'py2.queue'\nb'py2.queue'\nb'py2.queue'\nb'py2.queue'\nb'py2.queue'\n\n```\n\nOkey, time to run receiver based on pika:\n\n```\n(.venv)vg %> python recive.py \nReceived b'Hello backend2'\nReceived b'Hello backend2'\nReceived b'Hello backend2'\n```\n\n```\n# rabbitmqctl list_channels\nListing channels ...\n<rabbit@tt01.1.11368.0> python_test 1   5\n<rabbit@tt01.1.11424.0> python_test 1   0\n```\n\ntest_receive.py:\n\n```\n#!/usr/bin/env python\n\nimport asyncio\nimport aioamqp\n\n@asyncio.coroutine\ndef callback(body, envelope, properties):\n    print(body)\n\n@asyncio.coroutine\ndef receive():\n    try:\n        transport, protocol = yield from aioamqp.connect(host='10.10.80.23', port=5672,\n            login='python_test', password='python_test', virtualhost='hello')\n    except aioamqp.AmqpClosedConnection:\n        print(\"closed connections\")\n        return\n\n    channel = yield from protocol.channel()\n    queue_name = 'py2.queue'\n\n    yield from asyncio.wait_for(channel.queue(queue_name, durable=False, auto_delete=False), timeout=10)\n\n    yield from asyncio.wait_for(channel.basic_consume(queue_name, callback=callback), timeout=10)\n\n\nasyncio.get_event_loop().run_until_complete(receive())\nasyncio.get_event_loop().run_forever()\n```\n\nsend.py:\n\n```\n#!/usr/bin/env python\nimport pika\n\ncredentials = pika.PlainCredentials('python_test', 'python_test')\n\nconnection = pika.BlockingConnection(pika.ConnectionParameters(\n        host='10.10.80.25',credentials=credentials, virtual_host='hello'))\nchannel = connection.channel()\n\nchannel.queue_declare(queue='py2.queue')\n\nchannel.basic_publish(exchange='',\n                      routing_key='hello',\n                      body='Hello backend2')\nprint(\"Hello World!\")\nconnection.close()\n```\n\nrecive.py:\n\n```\n#!/usr/bin/env python\nimport pika\n\ncredentials = pika.PlainCredentials('python_test', 'python_test')\n\nconnection = pika.BlockingConnection(pika.ConnectionParameters(\n        host='10.10.80.23',credentials=credentials, virtual_host='hello'))\nchannel = connection.channel()\n\nchannel.queue_declare(queue='py2.queue')\n\ndef callback(ch, method, properties, body):\n    print(\"Received {}\".format(body))\n\nchannel.basic_consume(callback,\n                      queue='hello',\n                      no_ack=True)\n\nchannel.start_consuming()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/51", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/51/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/51/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/51", "id": 111228598, "node_id": "MDU6SXNzdWUxMTEyMjg1OTg=", "number": 51, "title": "Track flacky tests", "user": {"login": "dzen", "id": 50241, "node_id": "MDQ6VXNlcjUwMjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/50241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzen", "html_url": "https://github.com/dzen", "followers_url": "https://api.github.com/users/dzen/followers", "following_url": "https://api.github.com/users/dzen/following{/other_user}", "gists_url": "https://api.github.com/users/dzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzen/subscriptions", "organizations_url": "https://api.github.com/users/dzen/orgs", "repos_url": "https://api.github.com/users/dzen/repos", "events_url": "https://api.github.com/users/dzen/events{/privacy}", "received_events_url": "https://api.github.com/users/dzen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-10-13T17:25:23Z", "updated_at": "2016-07-18T14:34:46Z", "closed_at": "2016-07-18T14:34:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If I look at the travis build history, I think there are some flacky tests, or some Tasks are not cleanly terminated.\n\nhttps://travis-ci.org/Polyconseil/aioamqp/builds\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/50", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/50/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/50/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/50", "id": 110112277, "node_id": "MDU6SXNzdWUxMTAxMTIyNzc=", "number": 50, "title": "Port to python 3.5", "user": {"login": "mpaolini", "id": 523292, "node_id": "MDQ6VXNlcjUyMzI5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/523292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpaolini", "html_url": "https://github.com/mpaolini", "followers_url": "https://api.github.com/users/mpaolini/followers", "following_url": "https://api.github.com/users/mpaolini/following{/other_user}", "gists_url": "https://api.github.com/users/mpaolini/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpaolini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpaolini/subscriptions", "organizations_url": "https://api.github.com/users/mpaolini/orgs", "repos_url": "https://api.github.com/users/mpaolini/repos", "events_url": "https://api.github.com/users/mpaolini/events{/privacy}", "received_events_url": "https://api.github.com/users/mpaolini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2015-10-06T22:11:20Z", "updated_at": "2017-07-13T11:36:31Z", "closed_at": "2016-04-01T13:58:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/44", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/44/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/44/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/44", "id": 104646737, "node_id": "MDU6SXNzdWUxMDQ2NDY3Mzc=", "number": 44, "title": "Ack messages with multiple connections", "user": {"login": "thijsterlouw", "id": 126053, "node_id": "MDQ6VXNlcjEyNjA1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/126053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thijsterlouw", "html_url": "https://github.com/thijsterlouw", "followers_url": "https://api.github.com/users/thijsterlouw/followers", "following_url": "https://api.github.com/users/thijsterlouw/following{/other_user}", "gists_url": "https://api.github.com/users/thijsterlouw/gists{/gist_id}", "starred_url": "https://api.github.com/users/thijsterlouw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thijsterlouw/subscriptions", "organizations_url": "https://api.github.com/users/thijsterlouw/orgs", "repos_url": "https://api.github.com/users/thijsterlouw/repos", "events_url": "https://api.github.com/users/thijsterlouw/events{/privacy}", "received_events_url": "https://api.github.com/users/thijsterlouw/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921193, "node_id": "MDU6TGFiZWw4MTkyMTE5Mw==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2015-09-03T08:31:21Z", "updated_at": "2015-12-19T09:55:10Z", "closed_at": "2015-12-19T09:54:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Usecase: my Python application is connecting to multiple RabbitMQ servers. These are non-clustered. Our events are sharded across these servers. We want to consume events from all these servers. These events need to be ack'ed.\n\nProblem: \n`channel.basic_consume(queue_name, callback=callback)` \ncallback looks like:\n`def callback(body, envelope, properties):`\nthus inside the callback you have no idea from which server you received the event. \nTicket https://github.com/Polyconseil/aioamqp/issues/39 suggests creating a separate channel to ack. Problem I don't know which server to create the channel for.\n\nInitially I thought I just create a lambda for the callback and bind the ack-channel, but then I found:\nhttps://github.com/Polyconseil/aioamqp/commit/ff74ee7359910dd4647be58f11499e159549ce7a\nSo that's probably not going to work out. Wonder why this change was made anyway.\n\nI'm pretty new to Python, so I am not sure what I'm supposed to do in this case. Should I wrap these functions in objects and can the callback function point to a member-function of the object? The object would then have access to the server/channel, thus we're able to send an ack.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/41", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/41/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/41/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/41", "id": 101842608, "node_id": "MDU6SXNzdWUxMDE4NDI2MDg=", "number": 41, "title": "Using transport to close connection", "user": {"login": "mwfrojdman", "id": 9638369, "node_id": "MDQ6VXNlcjk2MzgzNjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9638369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwfrojdman", "html_url": "https://github.com/mwfrojdman", "followers_url": "https://api.github.com/users/mwfrojdman/followers", "following_url": "https://api.github.com/users/mwfrojdman/following{/other_user}", "gists_url": "https://api.github.com/users/mwfrojdman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwfrojdman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwfrojdman/subscriptions", "organizations_url": "https://api.github.com/users/mwfrojdman/orgs", "repos_url": "https://api.github.com/users/mwfrojdman/repos", "events_url": "https://api.github.com/users/mwfrojdman/events{/privacy}", "received_events_url": "https://api.github.com/users/mwfrojdman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-08-19T09:09:47Z", "updated_at": "2015-08-19T09:40:55Z", "closed_at": "2015-08-19T09:22:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems aioamqp.connect returns both the transport and the protocol objects now. And the docs at http://aioamqp.readthedocs.org/en/latest/api.html#starting-a-connection instruct to close the connection using `yield from transport.close()`.\n\nIs returning the transport to the library's user neat? It seems to make things more complicated than necessary as AmqpProtocol also has a close method.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/40", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/40/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/40/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/40", "id": 100538817, "node_id": "MDU6SXNzdWUxMDA1Mzg4MTc=", "number": 40, "title": "Add client connection properties", "user": {"login": "dzen", "id": 50241, "node_id": "MDQ6VXNlcjUwMjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/50241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzen", "html_url": "https://github.com/dzen", "followers_url": "https://api.github.com/users/dzen/followers", "following_url": "https://api.github.com/users/dzen/following{/other_user}", "gists_url": "https://api.github.com/users/dzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzen/subscriptions", "organizations_url": "https://api.github.com/users/dzen/orgs", "repos_url": "https://api.github.com/users/dzen/repos", "events_url": "https://api.github.com/users/dzen/events{/privacy}", "received_events_url": "https://api.github.com/users/dzen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-12T13:05:29Z", "updated_at": "2015-09-10T13:01:47Z", "closed_at": "2015-09-10T13:01:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We need to add a few client properties when the client connects to the server.\n\nFor the moment, properties are hardcoded:\n\nhttps://github.com/Polyconseil/aioamqp/blob/master/aioamqp/protocol.py#L107\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/39", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/39/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/39/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/39", "id": 94384778, "node_id": "MDU6SXNzdWU5NDM4NDc3OA==", "number": 39, "title": "Ack'ing messages inside the consumer's callback", "user": {"login": "kflavin", "id": 858861, "node_id": "MDQ6VXNlcjg1ODg2MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/858861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kflavin", "html_url": "https://github.com/kflavin", "followers_url": "https://api.github.com/users/kflavin/followers", "following_url": "https://api.github.com/users/kflavin/following{/other_user}", "gists_url": "https://api.github.com/users/kflavin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kflavin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kflavin/subscriptions", "organizations_url": "https://api.github.com/users/kflavin/orgs", "repos_url": "https://api.github.com/users/kflavin/repos", "events_url": "https://api.github.com/users/kflavin/events{/privacy}", "received_events_url": "https://api.github.com/users/kflavin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-10T20:25:05Z", "updated_at": "2015-07-13T16:36:21Z", "closed_at": "2015-07-13T16:36:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was able to get  a working consumer going using your examples, but I'm trying to figure out how to acknowledge messages from within a callback passed to basic_consume().  I have something that looks like this:\n\n``` python\nyield from channel.basic_consume(queue_name, callback=callback)\n```\n\nAnd then my co-routine looks roughly like this:\n\n``` python\n@asyncio.coroutine\ndef callback(body, envelope, properties):\n    loop = asyncio.get_event_loop()\n    loop.create_task(do_work(body))\n```\n\nIt doesn't look like I can acknowledge the message from within the callback.  When using other synchronous AMQP clients, such as pika, the channel is passed to the callback, and then I can do something like ch.basic_ack().  Is there another approach?  Or some other reason why this isn't viable with an asynchronous model?  I'm fairly new to asyncio.\n\nThanks very much for your work on this project, I've found it to be helpful.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/38", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/38/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/38/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/38", "id": 89519093, "node_id": "MDU6SXNzdWU4OTUxOTA5Mw==", "number": 38, "title": "Refactor TestCase", "user": {"login": "dzen", "id": 50241, "node_id": "MDQ6VXNlcjUwMjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/50241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzen", "html_url": "https://github.com/dzen", "followers_url": "https://api.github.com/users/dzen/followers", "following_url": "https://api.github.com/users/dzen/following{/other_user}", "gists_url": "https://api.github.com/users/dzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzen/subscriptions", "organizations_url": "https://api.github.com/users/dzen/orgs", "repos_url": "https://api.github.com/users/dzen/repos", "events_url": "https://api.github.com/users/dzen/events{/privacy}", "received_events_url": "https://api.github.com/users/dzen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921193, "node_id": "MDU6TGFiZWw4MTkyMTE5Mw==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-19T09:44:16Z", "updated_at": "2015-10-07T12:12:30Z", "closed_at": "2015-10-07T12:12:30Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We should refactor our test cases. A clean testcase should be reusable and it should keep the rabbit clean.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/36", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/36/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/36/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/36", "id": 87736554, "node_id": "MDU6SXNzdWU4NzczNjU1NA==", "number": 36, "title": "Reuse channel id ", "user": {"login": "dzen", "id": 50241, "node_id": "MDQ6VXNlcjUwMjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/50241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzen", "html_url": "https://github.com/dzen", "followers_url": "https://api.github.com/users/dzen/followers", "following_url": "https://api.github.com/users/dzen/following{/other_user}", "gists_url": "https://api.github.com/users/dzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzen/subscriptions", "organizations_url": "https://api.github.com/users/dzen/orgs", "repos_url": "https://api.github.com/users/dzen/repos", "events_url": "https://api.github.com/users/dzen/events{/privacy}", "received_events_url": "https://api.github.com/users/dzen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921191, "node_id": "MDU6TGFiZWw4MTkyMTE5MQ==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-12T13:53:53Z", "updated_at": "2015-06-19T09:33:34Z", "closed_at": "2015-06-19T09:33:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For now, the library does not reuse previously used channel ID.\n\nThus, it cant use more than 2^16 channel \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/35", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/35/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/35/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/35", "id": 86992116, "node_id": "MDU6SXNzdWU4Njk5MjExNg==", "number": 35, "title": "Refactor code on no_wait requests", "user": {"login": "dzen", "id": 50241, "node_id": "MDQ6VXNlcjUwMjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/50241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzen", "html_url": "https://github.com/dzen", "followers_url": "https://api.github.com/users/dzen/followers", "following_url": "https://api.github.com/users/dzen/following{/other_user}", "gists_url": "https://api.github.com/users/dzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzen/subscriptions", "organizations_url": "https://api.github.com/users/dzen/orgs", "repos_url": "https://api.github.com/users/dzen/repos", "events_url": "https://api.github.com/users/dzen/events{/privacy}", "received_events_url": "https://api.github.com/users/dzen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 81921193, "node_id": "MDU6TGFiZWw4MTkyMTE5Mw==", "url": "https://api.github.com/repos/Polyconseil/aioamqp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-10T14:38:31Z", "updated_at": "2016-03-11T09:07:51Z", "closed_at": "2016-03-11T09:07:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "no_wait requests use a common mechanism to cancel the waiter/future if the requests raises an exception.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/20", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/20/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/20/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/20", "id": 40170819, "node_id": "MDU6SXNzdWU0MDE3MDgxOQ==", "number": 20, "title": "Channel connections should close when server connection goes down", "user": {"login": "mpaolini", "id": 523292, "node_id": "MDQ6VXNlcjUyMzI5Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/523292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpaolini", "html_url": "https://github.com/mpaolini", "followers_url": "https://api.github.com/users/mpaolini/followers", "following_url": "https://api.github.com/users/mpaolini/following{/other_user}", "gists_url": "https://api.github.com/users/mpaolini/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpaolini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpaolini/subscriptions", "organizations_url": "https://api.github.com/users/mpaolini/orgs", "repos_url": "https://api.github.com/users/mpaolini/repos", "events_url": "https://api.github.com/users/mpaolini/events{/privacy}", "received_events_url": "https://api.github.com/users/mpaolini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-08-13T16:10:47Z", "updated_at": "2016-07-18T14:46:26Z", "closed_at": "2016-07-18T14:46:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently when protocol `connection_lost` is called by `asyncio`, no channel listeners notice it. If a greenlet is waiting on a `channel.consume()` it will be stuck there for good.\n\nI am noticing this in our staging environment. We sometimes see:\n\n```\n[WARNING aioamqp.protocol protocol: MainProcess] Connection lost exc=ConnectionResetError(104, 'Connection reset by peer')\n[INFO aioamqp.protocol protocol: MainProcess] Close connection\n```\n\nAnd after this log message, the program keeps waiting forever on a `channel.consume()` but it does not receive messages anymore.\n\nI guess it could be nice to propagate the exceptions to all open channels, a bit like the `server_channel_close` in `Channel` does.\n\nIf that's ok for you, I could try and submit a patch.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/18", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/18/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/18/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/18", "id": 34992333, "node_id": "MDU6SXNzdWUzNDk5MjMzMw==", "number": 18, "title": "Support for accessing message headers?", "user": {"login": "id-travis-bradshaw", "id": 245696, "node_id": "MDQ6VXNlcjI0NTY5Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/245696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/id-travis-bradshaw", "html_url": "https://github.com/id-travis-bradshaw", "followers_url": "https://api.github.com/users/id-travis-bradshaw/followers", "following_url": "https://api.github.com/users/id-travis-bradshaw/following{/other_user}", "gists_url": "https://api.github.com/users/id-travis-bradshaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/id-travis-bradshaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/id-travis-bradshaw/subscriptions", "organizations_url": "https://api.github.com/users/id-travis-bradshaw/orgs", "repos_url": "https://api.github.com/users/id-travis-bradshaw/repos", "events_url": "https://api.github.com/users/id-travis-bradshaw/events{/privacy}", "received_events_url": "https://api.github.com/users/id-travis-bradshaw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-06-04T19:11:11Z", "updated_at": "2015-06-10T14:28:37Z", "closed_at": "2015-06-10T14:28:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for writing and open sourcing this library.  It's great to be able to work with AMQP and asyncio already.\n\nI was curious if there were any current plans for supporting access to message headers.  I have a messaging pattern that requires the consumer to interrogate the message headers before working with the body, and those attributes are currently unavailable with the current implementation.\n\nSome libraries provide a \"message\" class that has accessing the content and headers of a message (txamqp is the library I have the most experience with), which might be an option.\n\nThanks again.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/11", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/11/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/11/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/11", "id": 33801021, "node_id": "MDU6SXNzdWUzMzgwMTAyMQ==", "number": 11, "title": "Examples crashing with Python 3.4", "user": {"login": "xordoquy", "id": 2340654, "node_id": "MDQ6VXNlcjIzNDA2NTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2340654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xordoquy", "html_url": "https://github.com/xordoquy", "followers_url": "https://api.github.com/users/xordoquy/followers", "following_url": "https://api.github.com/users/xordoquy/following{/other_user}", "gists_url": "https://api.github.com/users/xordoquy/gists{/gist_id}", "starred_url": "https://api.github.com/users/xordoquy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xordoquy/subscriptions", "organizations_url": "https://api.github.com/users/xordoquy/orgs", "repos_url": "https://api.github.com/users/xordoquy/repos", "events_url": "https://api.github.com/users/xordoquy/events{/privacy}", "received_events_url": "https://api.github.com/users/xordoquy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-19T13:52:15Z", "updated_at": "2014-05-19T17:57:29Z", "closed_at": "2014-05-19T14:28:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying aioamqp (master) today under Python 3.4\n\nI noticed some of the examples didn't finished well. Here's the associated stack trace.\n\n```\npython emit_log_topic.py\n [x] Sent 'Hello World!'\nTraceback (most recent call last):\n  File \"emit_log_topic.py\", line 38, in <module>\n    asyncio.get_event_loop().run_until_complete(exchange_routing())\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/asyncio/base_events.py\", line 208, in run_until_complete\n    return future.result()\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/asyncio/futures.py\", line 243, in result\n    raise self._exception\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/asyncio/tasks.py\", line 283, in _step\n    result = next(coro)\n  File \"emit_log_topic.py\", line 35, in exchange_routing\n    yield from asyncio.wait_for(protocol.client_close(), timeout=10)\nAttributeError: 'AmqpProtocol' object has no attribute 'client_close'\n--- Logging error ---\nTraceback (most recent call last):\nException ignored in: <generator object run at 0x10c621360>\nTraceback (most recent call last):\n  File \"/Users/xordoquy/Documents/Devs/aioamqp/aioamqp/protocol.py\", line 191, in run\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py\", line 1287, in exception\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py\", line 1280, in error\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py\", line 1386, in _log\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py\", line 1396, in handle\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py\", line 1466, in callHandlers\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py\", line 837, in handle\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py\", line 961, in emit\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py\", line 890, in handleError\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/traceback.py\", line 169, in print_exception\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/traceback.py\", line 153, in _format_exception_iter\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/traceback.py\", line 18, in _format_list_iter\n  File \"/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/traceback.py\", line 65, in _extract_tb_or_stack_iter\n  File \"/Users/xordoquy/.virtualenvs/aioamqp/lib/python3.4/linecache.py\", line 15, in getline\n  File \"/Users/xordoquy/.virtualenvs/aioamqp/lib/python3.4/linecache.py\", line 41, in getlines\n  File \"/Users/xordoquy/.virtualenvs/aioamqp/lib/python3.4/linecache.py\", line 126, in updatecache\n  File \"/Users/xordoquy/.virtualenvs/aioamqp/lib/python3.4/tokenize.py\", line 431, in open\nAttributeError: 'module' object has no attribute 'open'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/3", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/3/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/3/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/3", "id": 28720937, "node_id": "MDU6SXNzdWUyODcyMDkzNw==", "number": 3, "title": "Implement hearbeat", "user": {"login": "dzen", "id": 50241, "node_id": "MDQ6VXNlcjUwMjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/50241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzen", "html_url": "https://github.com/dzen", "followers_url": "https://api.github.com/users/dzen/followers", "following_url": "https://api.github.com/users/dzen/following{/other_user}", "gists_url": "https://api.github.com/users/dzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzen/subscriptions", "organizations_url": "https://api.github.com/users/dzen/orgs", "repos_url": "https://api.github.com/users/dzen/repos", "events_url": "https://api.github.com/users/dzen/events{/privacy}", "received_events_url": "https://api.github.com/users/dzen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-04T16:48:30Z", "updated_at": "2015-12-04T09:35:47Z", "closed_at": "2015-12-04T09:35:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There is currently no implementation of the amqp's heartbeat frame.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/2", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/2/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/2/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/2", "id": 28517014, "node_id": "MDU6SXNzdWUyODUxNzAxNA==", "number": 2, "title": "Find a way to unqueue messages asynchronously, without callbacks", "user": {"login": "dzen", "id": 50241, "node_id": "MDQ6VXNlcjUwMjQx", "avatar_url": "https://avatars2.githubusercontent.com/u/50241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dzen", "html_url": "https://github.com/dzen", "followers_url": "https://api.github.com/users/dzen/followers", "following_url": "https://api.github.com/users/dzen/following{/other_user}", "gists_url": "https://api.github.com/users/dzen/gists{/gist_id}", "starred_url": "https://api.github.com/users/dzen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dzen/subscriptions", "organizations_url": "https://api.github.com/users/dzen/orgs", "repos_url": "https://api.github.com/users/dzen/repos", "events_url": "https://api.github.com/users/dzen/events{/privacy}", "received_events_url": "https://api.github.com/users/dzen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-02-28T17:08:58Z", "updated_at": "2015-06-10T14:29:18Z", "closed_at": "2015-06-10T14:29:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, received frames are decoded, and forwarded to the correct channel.\nIn the case of a content-body frame, those frame are stacked in an asyncio's Queue, but I think it's not very efficient because of memory waste.\n\nIs there an efficient way to not use callbacks when consuming messages ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/1", "repository_url": "https://api.github.com/repos/Polyconseil/aioamqp", "labels_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/1/comments", "events_url": "https://api.github.com/repos/Polyconseil/aioamqp/issues/1/events", "html_url": "https://github.com/Polyconseil/aioamqp/issues/1", "id": 28511075, "node_id": "MDU6SXNzdWUyODUxMTA3NQ==", "number": 1, "title": "Relecture partie \"frame\"", "user": {"login": "tchaumeny", "id": 1296387, "node_id": "MDQ6VXNlcjEyOTYzODc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1296387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tchaumeny", "html_url": "https://github.com/tchaumeny", "followers_url": "https://api.github.com/users/tchaumeny/followers", "following_url": "https://api.github.com/users/tchaumeny/following{/other_user}", "gists_url": "https://api.github.com/users/tchaumeny/gists{/gist_id}", "starred_url": "https://api.github.com/users/tchaumeny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tchaumeny/subscriptions", "organizations_url": "https://api.github.com/users/tchaumeny/orgs", "repos_url": "https://api.github.com/users/tchaumeny/repos", "events_url": "https://api.github.com/users/tchaumeny/events{/privacy}", "received_events_url": "https://api.github.com/users/tchaumeny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-02-28T15:57:17Z", "updated_at": "2015-08-10T12:55:38Z", "closed_at": "2015-08-10T12:55:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/Polyconseil/aioamqp/blob/bcz/connect_to_amqp/aioamqp/frame.py#L53\n=> instancier un `AmqpEncoder` \u00e0 l'int\u00e9rieur de l'`AmqpEncoder` me semble louche. Pourquoi ne pas travailler directement avec l'instance en cours ? sinon, peut-\u00eatre envisager une `classmethod`.\n\nhttps://github.com/Polyconseil/aioamqp/blob/bcz/connect_to_amqp/aioamqp/frame.py#L78\n=> `ValueError` ?\n\nhttps://github.com/Polyconseil/aioamqp/blob/bcz/connect_to_amqp/aioamqp/frame.py#L84\n=> Plut\u00f4t qu'un cast :\n\n``` Python\nif bit:\n    byte_value |= (1 << arg_index)\n```\n\nPar ailleurs, \u00e7a va \u00e9crire les bits de droite \u00e0 gauche (\u00e0 l'inverse du sens dans lequels ils sont donn\u00e9s). Il faudrait sans doute aussi v\u00e9rifier le nombre de bits donn\u00e9s.\n\nhttps://github.com/Polyconseil/aioamqp/blob/bcz/connect_to_amqp/aioamqp/frame.py#L94\n=> Attention, \u00e7a va \u00eatre endianess-dependant. Pour \u00eatre ind\u00e9pendant de l'archi sous-jacente utiliser un \"<\" dans la cha\u00eene de format (pareil pour les fonctions en-dessous):\n\n``` Python\n>>> struct.pack(\"<H\", 1)\nb'\\x01\\x00'\n>>> struct.pack(\">H\", 1)\nb'\\x00\\x01'\n```\n\nhttps://github.com/Polyconseil/aioamqp/blob/bcz/connect_to_amqp/aioamqp/frame.py#L105\n=> Ne faudrait-il pas pr\u00e9ciser un `encoding` pour un comportement pr\u00e9visible ?\n\nhttps://github.com/Polyconseil/aioamqp/blob/bcz/connect_to_amqp/aioamqp/frame.py#L119\n=> M\u00eame remarque que sur le `write_table`, je ne comprends pas pourquoi on instancie un autre encodeur.\n\nhttps://github.com/Polyconseil/aioamqp/blob/bcz/connect_to_amqp/aioamqp/frame.py#L195\n=> M\u00eames remarques sur l'endianess. Il faut garantir un comportement ind\u00e9pendant de la machine.\n\nhttps://github.com/Polyconseil/aioamqp/blob/bcz/connect_to_amqp/aioamqp/frame.py#L218\n=> \u00c7a ne retourne rien ?\n", "performed_via_github_app": null, "score": 1.0}]}