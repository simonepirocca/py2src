{"total_count": 28, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/schollii/pypubsub/issues/40", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/40/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/40/events", "html_url": "https://github.com/schollii/pypubsub/issues/40", "id": 424657795, "node_id": "MDU6SXNzdWU0MjQ2NTc3OTU=", "number": 40, "title": "Replace obsolete references to sf.net", "user": {"login": "schollii", "id": 2598808, "node_id": "MDQ6VXNlcjI1OTg4MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2598808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schollii", "html_url": "https://github.com/schollii", "followers_url": "https://api.github.com/users/schollii/followers", "following_url": "https://api.github.com/users/schollii/following{/other_user}", "gists_url": "https://api.github.com/users/schollii/gists{/gist_id}", "starred_url": "https://api.github.com/users/schollii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schollii/subscriptions", "organizations_url": "https://api.github.com/users/schollii/orgs", "repos_url": "https://api.github.com/users/schollii/repos", "events_url": "https://api.github.com/users/schollii/events{/privacy}", "received_events_url": "https://api.github.com/users/schollii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-24T20:43:52Z", "updated_at": "2019-03-24T22:27:28Z", "closed_at": "2019-03-24T22:27:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Several places on the internet still refer to pubsub.sf.net. When possible, these link should be updated. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/38", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/38/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/38/events", "html_url": "https://github.com/schollii/pypubsub/issues/38", "id": 423139015, "node_id": "MDU6SXNzdWU0MjMxMzkwMTU=", "number": 38, "title": "Subscribe from another Script", "user": {"login": "matteopantano", "id": 26014548, "node_id": "MDQ6VXNlcjI2MDE0NTQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/26014548?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matteopantano", "html_url": "https://github.com/matteopantano", "followers_url": "https://api.github.com/users/matteopantano/followers", "following_url": "https://api.github.com/users/matteopantano/following{/other_user}", "gists_url": "https://api.github.com/users/matteopantano/gists{/gist_id}", "starred_url": "https://api.github.com/users/matteopantano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matteopantano/subscriptions", "organizations_url": "https://api.github.com/users/matteopantano/orgs", "repos_url": "https://api.github.com/users/matteopantano/repos", "events_url": "https://api.github.com/users/matteopantano/events{/privacy}", "received_events_url": "https://api.github.com/users/matteopantano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-20T09:06:37Z", "updated_at": "2019-03-27T15:19:46Z", "closed_at": "2019-03-24T19:42:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am trying to use pypubsub in order to subscribe to a topic from another python script. Is this feasible?\r\n\r\nMy setup is: One python script continuously looping with `pub.sendMessage('rootTopic', arg1=id, arg2=tvec, arg3=rvec)` and another script as follows.\r\n\r\n\r\n```\r\nfrom pubsub import pub\r\n\r\ndef listener0(arg1=None, arg2=None, arg3=None): \r\n    print(\"listener0: \", arg1, arg2, arg3)\r\n\r\nif __name__ == '__main__':\r\n    \r\n    while True:\r\n        pubListener, first = pub.subscribe(listener0, 'rootTopic')\r\n        print (pubListener.name())\r\n        assert first == True\r\n        assert pubListener.isDead() == False   \r\n```\r\n\r\nI cannot see any message in the console apart from:\r\n\r\n```\r\nlistener0_3800\r\nlistener0_3800\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 12, in <module>\r\n    assert first == True\r\nAssertionError\r\n```\r\nSo seems that first is true for the first is true for the first two instances and then is false.\r\n\r\nPS: Before splitting the code in two parts I have tried the sub/pub on the same script and it works\r\n\r\nLet me know,\r\n\r\nMatteo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/37", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/37/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/37/events", "html_url": "https://github.com/schollii/pypubsub/issues/37", "id": 421771310, "node_id": "MDU6SXNzdWU0MjE3NzEzMTA=", "number": 37, "title": "Complete the new 3.4 branch release", "user": {"login": "schollii", "id": 2598808, "node_id": "MDQ6VXNlcjI1OTg4MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2598808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schollii", "html_url": "https://github.com/schollii", "followers_url": "https://api.github.com/users/schollii/followers", "following_url": "https://api.github.com/users/schollii/following{/other_user}", "gists_url": "https://api.github.com/users/schollii/gists{/gist_id}", "starred_url": "https://api.github.com/users/schollii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schollii/subscriptions", "organizations_url": "https://api.github.com/users/schollii/orgs", "repos_url": "https://api.github.com/users/schollii/repos", "events_url": "https://api.github.com/users/schollii/events{/privacy}", "received_events_url": "https://api.github.com/users/schollii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-16T05:13:34Z", "updated_at": "2019-04-02T16:28:05Z", "closed_at": "2019-04-01T03:05:31Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The 3.4 version is needed because the 3.3 source was damaged during the transition from sourceforge to github a few years ago: the zip installer works and pubsub works, but installations based on the setup.py, including tests etc were not working properly because the zip was not designed to contain everything. \r\n\r\nVersion 3.4 is being released to support python 2.7 *only*, and as such is a deprecated version! but being released so we have an official complete release that works in python 2.7. \r\n\r\nAfter the issues raised by TheChymera regarding version 3.3 of pypubsub, the only thing left to fix is the documentation such as READMEs, docs etc. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/35", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/35/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/35/events", "html_url": "https://github.com/schollii/pypubsub/issues/35", "id": 406817518, "node_id": "MDU6SXNzdWU0MDY4MTc1MTg=", "number": 35, "title": "Generic topic in the tree", "user": {"login": "teharris1", "id": 9055260, "node_id": "MDQ6VXNlcjkwNTUyNjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/9055260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teharris1", "html_url": "https://github.com/teharris1", "followers_url": "https://api.github.com/users/teharris1/followers", "following_url": "https://api.github.com/users/teharris1/following{/other_user}", "gists_url": "https://api.github.com/users/teharris1/gists{/gist_id}", "starred_url": "https://api.github.com/users/teharris1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teharris1/subscriptions", "organizations_url": "https://api.github.com/users/teharris1/orgs", "repos_url": "https://api.github.com/users/teharris1/repos", "events_url": "https://api.github.com/users/teharris1/events{/privacy}", "received_events_url": "https://api.github.com/users/teharris1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-02-05T14:48:56Z", "updated_at": "2019-02-12T03:03:50Z", "closed_at": "2019-02-12T03:03:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have been looking at your module for an application that I am refactoring and your module looks very good. One thing that would make my application much easier to write is if I can have a generic subscipriton in the middle of the topic tree. For example if I had a topic tree:\r\n```\r\na1:\r\n  b1:\r\n    c1\r\n  b2:\r\n    c1\r\n```\r\nAnd if I had the ability to subscribe generically at the `b` level so that I would get `a1-b1-c1` and `a1-b2-c1`.  The obvious answers in the current model are:\r\n1) Move c up a level and b down a level but that will only flip the issue and not really solve it (i.e. I want a generic c selection as well.\r\n2) Stop at the b level and handle c in code. But this means more application logic rather than subscription logic.\r\n3) Subscribe to  `a1-b1-c1` and `a1-b2-c1` which means having more permutations to generate and manage.\r\n\r\nMy thought is if the topic manager could handle a iterable of hashable objects and each level would then just be a lookup of a hash plus a look up of a generic (like the Any object in pydispatcher.)\r\nThoughts?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/34", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/34/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/34/events", "html_url": "https://github.com/schollii/pypubsub/issues/34", "id": 406521338, "node_id": "MDU6SXNzdWU0MDY1MjEzMzg=", "number": 34, "title": "policies and py2and3 imports (3.3.0)", "user": {"login": "TheChymera", "id": 950524, "node_id": "MDQ6VXNlcjk1MDUyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/950524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheChymera", "html_url": "https://github.com/TheChymera", "followers_url": "https://api.github.com/users/TheChymera/followers", "following_url": "https://api.github.com/users/TheChymera/following{/other_user}", "gists_url": "https://api.github.com/users/TheChymera/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheChymera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheChymera/subscriptions", "organizations_url": "https://api.github.com/users/TheChymera/orgs", "repos_url": "https://api.github.com/users/TheChymera/repos", "events_url": "https://api.github.com/users/TheChymera/events{/privacy}", "received_events_url": "https://api.github.com/users/TheChymera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2019-02-04T21:12:20Z", "updated_at": "2019-03-16T05:14:54Z", "closed_at": "2019-03-16T05:00:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having issues while trying to run the tests with some imports, in particular this bit (in `pypubsub/src/pubsub/core/topicdefnprovider.py` ) :\r\n\r\n```\r\nfrom .. import (\r\n        policies,\r\n        py2and3\r\n)\r\n```\r\n\r\nany idea where these modules should be coming from?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/33", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/33/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/33/events", "html_url": "https://github.com/schollii/pypubsub/issues/33", "id": 405674477, "node_id": "MDU6SXNzdWU0MDU2NzQ0Nzc=", "number": 33, "title": "A listener has died", "user": {"login": "sander76", "id": 1688712, "node_id": "MDQ6VXNlcjE2ODg3MTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1688712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sander76", "html_url": "https://github.com/sander76", "followers_url": "https://api.github.com/users/sander76/followers", "following_url": "https://api.github.com/users/sander76/following{/other_user}", "gists_url": "https://api.github.com/users/sander76/gists{/gist_id}", "starred_url": "https://api.github.com/users/sander76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sander76/subscriptions", "organizations_url": "https://api.github.com/users/sander76/orgs", "repos_url": "https://api.github.com/users/sander76/repos", "events_url": "https://api.github.com/users/sander76/events{/privacy}", "received_events_url": "https://api.github.com/users/sander76/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-01T12:06:53Z", "updated_at": "2019-02-03T14:43:22Z", "closed_at": "2019-02-03T14:43:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to implement the MVC pattern using Python3.7, wxpython (4.0.4) and Pypubsub 4.0.3.\r\n\r\nSee below a code example. When I run this the following gets printed to the console:\r\n\r\n```console\r\nPUBSUB: New topic \"pressed\" created\r\nPUBSUB: Subscribed listener \"TestController.pressed\" to topic \"pressed\"\r\nPUBSUB: Listener \"TestController.pressed\" of Topic \"pressed\" has died\r\n```\r\nLast line shows Listener of Topic \"pressed\" has died. I don't understand why.\r\nAlso when I run this through the debugger (pycharm) and put a breakpoint where the listener is created, wait a bit and continue the Listener *doesn't* die and all works as it should.\r\nAny suggestion whether this might be a bug, or am I doing something wrong ?\r\n\r\n```python\r\nimport sys\r\nimport wx\r\nfrom pubsub import pub\r\nfrom pubsub.utils import useNotifyByWriteFile\r\n\r\nuseNotifyByWriteFile(sys.stdout)\r\n\r\n\r\nclass TestModel:\r\n    def do_something(self):\r\n        print(\"doing something\")\r\n\r\n\r\nclass TestView(wx.Window):\r\n    def __init__(self, parent):\r\n        wx.Window.__init__(self, parent, -1)\r\n\r\n        sizer = wx.BoxSizer(wx.VERTICAL)\r\n        self.btn = wx.Button(self, -1, \"Press\")\r\n        sizer.Add(self.btn, 0, wx.EXPAND | wx.ALL)\r\n        self.SetSizer(sizer)\r\n\r\n        self.btn.Bind(wx.EVT_BUTTON, self.on_press)\r\n\r\n    def on_press(self, evt):\r\n        print(\"button pressed\")\r\n        pub.sendMessage(\"pressed\", val=1)\r\n\r\n\r\nclass TestController:\r\n    def __init__(self, parent):\r\n\r\n        self.view = TestView(parent)\r\n        self.model = TestModel()\r\n\r\n        pub.subscribe(self.pressed, \"pressed\")\r\n\r\n    def pressed(self, val):\r\n        print(\"pressed event received\")\r\n        self.model.do_something()\r\n\r\n\r\nclass MainFrame(wx.Frame):\r\n    def __init__(self):\r\n        wx.Frame.__init__(self, None, title=\"a test\", size=(800, 600))\r\n        sizer = wx.BoxSizer(wx.VERTICAL)\r\n\r\n        controller = TestController(self)\r\n        sizer.Add(controller.view, 0, wx.EXPAND)\r\n\r\n        self.SetSizer(sizer)\r\n\r\n        self.Show()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    app = wx.App()\r\n\r\n    start = MainFrame()\r\n\r\n    sys.stdout = sys.__stdout__\r\n\r\n    app.MainLoop()\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/31", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/31/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/31/events", "html_url": "https://github.com/schollii/pypubsub/issues/31", "id": 403588102, "node_id": "MDU6SXNzdWU0MDM1ODgxMDI=", "number": 31, "title": "Release 4.0.1", "user": {"login": "schollii", "id": 2598808, "node_id": "MDQ6VXNlcjI1OTg4MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2598808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schollii", "html_url": "https://github.com/schollii", "followers_url": "https://api.github.com/users/schollii/followers", "following_url": "https://api.github.com/users/schollii/following{/other_user}", "gists_url": "https://api.github.com/users/schollii/gists{/gist_id}", "starred_url": "https://api.github.com/users/schollii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schollii/subscriptions", "organizations_url": "https://api.github.com/users/schollii/orgs", "repos_url": "https://api.github.com/users/schollii/repos", "events_url": "https://api.github.com/users/schollii/events{/privacy}", "received_events_url": "https://api.github.com/users/schollii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-27T19:51:06Z", "updated_at": "2019-01-28T02:08:18Z", "closed_at": "2019-01-28T02:08:17Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/27", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/27/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/27/events", "html_url": "https://github.com/schollii/pypubsub/issues/27", "id": 401041197, "node_id": "MDU6SXNzdWU0MDEwNDExOTc=", "number": 27, "title": "Update for Python 3.7", "user": {"login": "schollii", "id": 2598808, "node_id": "MDQ6VXNlcjI1OTg4MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2598808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schollii", "html_url": "https://github.com/schollii", "followers_url": "https://api.github.com/users/schollii/followers", "following_url": "https://api.github.com/users/schollii/following{/other_user}", "gists_url": "https://api.github.com/users/schollii/gists{/gist_id}", "starred_url": "https://api.github.com/users/schollii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schollii/subscriptions", "organizations_url": "https://api.github.com/users/schollii/orgs", "repos_url": "https://api.github.com/users/schollii/repos", "events_url": "https://api.github.com/users/schollii/events{/privacy}", "received_events_url": "https://api.github.com/users/schollii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-19T22:27:03Z", "updated_at": "2019-01-21T21:38:55Z", "closed_at": "2019-01-21T21:38:55Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Verify no changes needed\r\nUpdate docs", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/26", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/26/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/26/events", "html_url": "https://github.com/schollii/pypubsub/issues/26", "id": 401041075, "node_id": "MDU6SXNzdWU0MDEwNDEwNzU=", "number": 26, "title": "Support keyword-only arguments of Python 3", "user": {"login": "schollii", "id": 2598808, "node_id": "MDQ6VXNlcjI1OTg4MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2598808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schollii", "html_url": "https://github.com/schollii", "followers_url": "https://api.github.com/users/schollii/followers", "following_url": "https://api.github.com/users/schollii/following{/other_user}", "gists_url": "https://api.github.com/users/schollii/gists{/gist_id}", "starred_url": "https://api.github.com/users/schollii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schollii/subscriptions", "organizations_url": "https://api.github.com/users/schollii/orgs", "repos_url": "https://api.github.com/users/schollii/repos", "events_url": "https://api.github.com/users/schollii/events{/privacy}", "received_events_url": "https://api.github.com/users/schollii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-19T22:25:26Z", "updated_at": "2019-01-27T19:38:44Z", "closed_at": "2019-01-27T19:38:44Z", "author_association": "OWNER", "active_lock_reason": null, "body": "With issue #27 fixed, we can now revisit #6. \r\n\r\nBy design Pypubsub only cares whether args are optional or required (don't have a default value), so the update *should* be much simpler than done in PR #13, but further investigation needed. Other problem with PR#13 is that travis-CI indicates some tests broken by the PR. \r\n\r\nVerify with tests reported in #6 and PR #13", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/25", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/25/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/25/events", "html_url": "https://github.com/schollii/pypubsub/issues/25", "id": 401041030, "node_id": "MDU6SXNzdWU0MDEwNDEwMzA=", "number": 25, "title": "Support Type hints in listener signatures", "user": {"login": "schollii", "id": 2598808, "node_id": "MDQ6VXNlcjI1OTg4MDg=", "avatar_url": "https://avatars2.githubusercontent.com/u/2598808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schollii", "html_url": "https://github.com/schollii", "followers_url": "https://api.github.com/users/schollii/followers", "following_url": "https://api.github.com/users/schollii/following{/other_user}", "gists_url": "https://api.github.com/users/schollii/gists{/gist_id}", "starred_url": "https://api.github.com/users/schollii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schollii/subscriptions", "organizations_url": "https://api.github.com/users/schollii/orgs", "repos_url": "https://api.github.com/users/schollii/repos", "events_url": "https://api.github.com/users/schollii/events{/privacy}", "received_events_url": "https://api.github.com/users/schollii/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-19T22:24:54Z", "updated_at": "2019-01-27T03:49:36Z", "closed_at": "2019-01-27T03:49:36Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This is follow-up on #6, which has a PR that cannot be accepted due to test breakage and also seems to be more change than necessary (need investigation). The issue was likely caused by pypubsub use of deprecated inspect.getargspec instead of getargsfullspec. Since this was fixed in another PR, typehints are likely fine and the only portion of #6 that needs addressing is signatures with keyword-only args, to be addressed in #26 due to test failures with PR #13. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/24", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/24/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/24/events", "html_url": "https://github.com/schollii/pypubsub/issues/24", "id": 396216212, "node_id": "MDU6SXNzdWUzOTYyMTYyMTI=", "number": 24, "title": "Conda-forge package", "user": {"login": "constantinpape", "id": 4263537, "node_id": "MDQ6VXNlcjQyNjM1Mzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4263537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/constantinpape", "html_url": "https://github.com/constantinpape", "followers_url": "https://api.github.com/users/constantinpape/followers", "following_url": "https://api.github.com/users/constantinpape/following{/other_user}", "gists_url": "https://api.github.com/users/constantinpape/gists{/gist_id}", "starred_url": "https://api.github.com/users/constantinpape/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/constantinpape/subscriptions", "organizations_url": "https://api.github.com/users/constantinpape/orgs", "repos_url": "https://api.github.com/users/constantinpape/repos", "events_url": "https://api.github.com/users/constantinpape/events{/privacy}", "received_events_url": "https://api.github.com/users/constantinpape/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-01-06T00:50:43Z", "updated_at": "2019-01-07T13:10:22Z", "closed_at": "2019-01-07T13:10:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be very helpful to have this package on conda-forge https://conda-forge.org/\r\nin order to have a reliable conda source for `pypubsub`.\r\nSo far, the package is only available on some third-party channel:\r\nhttps://anaconda.org/ivoflipse/pypubsub\r\n\r\nIf someone with more knowledge of the package would support me, I could set up the conda-forge pull request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/23", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/23/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/23/events", "html_url": "https://github.com/schollii/pypubsub/issues/23", "id": 383051452, "node_id": "MDU6SXNzdWUzODMwNTE0NTI=", "number": 23, "title": "Get the topic name, which \"called\" a listener", "user": {"login": "ReinhardDaemon", "id": 32158102, "node_id": "MDQ6VXNlcjMyMTU4MTAy", "avatar_url": "https://avatars1.githubusercontent.com/u/32158102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ReinhardDaemon", "html_url": "https://github.com/ReinhardDaemon", "followers_url": "https://api.github.com/users/ReinhardDaemon/followers", "following_url": "https://api.github.com/users/ReinhardDaemon/following{/other_user}", "gists_url": "https://api.github.com/users/ReinhardDaemon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ReinhardDaemon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ReinhardDaemon/subscriptions", "organizations_url": "https://api.github.com/users/ReinhardDaemon/orgs", "repos_url": "https://api.github.com/users/ReinhardDaemon/repos", "events_url": "https://api.github.com/users/ReinhardDaemon/events{/privacy}", "received_events_url": "https://api.github.com/users/ReinhardDaemon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-11-21T10:27:42Z", "updated_at": "2019-01-19T19:03:24Z", "closed_at": "2019-01-19T19:03:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have this (not working) listener:\r\n> def uhu_listener(payload):\r\n>     print (\"uhu_listener:\")\r\n>     print (\"\\t topic:    \", ??? GET TOPIC WHICH CALLED ME ???)\r\n>     print(\"\\t` payload: \", payload)\r\n\r\n\r\n\r\nand this main entry:\r\n> if __name__ == \"__main__\":\r\n>    payload = 3\r\n>    pub.subscribe(uhu_listener, topicName=\"uhu1\")\r\n>    pub.subscribe(uhu_listener, topicName=\"uhu2\")\r\n>    pub.subscribe(uhu_listener, topicName=\"uhu3\")\r\n>    pub.sendMessage(\"uhu2\", payload=payload)\r\n\r\nSo, uhu_listener listens to 3 Topics (uhu1, uhu2 and uhu3).\r\n\r\nIs there a way to determine the topic, which \"called\" the uhu_listener method?\r\n\r\nBR,\r\nReinhard", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/22", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/22/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/22/events", "html_url": "https://github.com/schollii/pypubsub/issues/22", "id": 375301231, "node_id": "MDU6SXNzdWUzNzUzMDEyMzE=", "number": 22, "title": "New Publishers", "user": {"login": "paddymccrudden", "id": 17534832, "node_id": "MDQ6VXNlcjE3NTM0ODMy", "avatar_url": "https://avatars2.githubusercontent.com/u/17534832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paddymccrudden", "html_url": "https://github.com/paddymccrudden", "followers_url": "https://api.github.com/users/paddymccrudden/followers", "following_url": "https://api.github.com/users/paddymccrudden/following{/other_user}", "gists_url": "https://api.github.com/users/paddymccrudden/gists{/gist_id}", "starred_url": "https://api.github.com/users/paddymccrudden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paddymccrudden/subscriptions", "organizations_url": "https://api.github.com/users/paddymccrudden/orgs", "repos_url": "https://api.github.com/users/paddymccrudden/repos", "events_url": "https://api.github.com/users/paddymccrudden/events{/privacy}", "received_events_url": "https://api.github.com/users/paddymccrudden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-10-30T03:10:48Z", "updated_at": "2019-01-24T15:30:39Z", "closed_at": "2019-01-24T15:30:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "As noted at [pubsub.readthedocs](https://pypubsub.readthedocs.io/en/v4.0.0/usage/module_pub.html),  the expression\r\n\r\n    from pubsub import pub\r\n\r\n> ... creates a \u201cdefault\u201d instance of pubsub.core.Publisher and binds several local functions to \r\n> some of its methods and those of the pubsub.core.TopicManager instance that it contains. \r\n> However, an application may create as many independent instances of Publisher as\r\n> required (for instance, one in each thread; with a custom queue to mediate message transfer between > threads).\"\r\n\r\nAs noted in this quote, the pub module does quite at bit of work to expose methods and attributes, and it is not immediately obvious how to build a new Publisher() object with the correct attributes exposed.  I'd be really interested in knowing if there is a standard way to do this. Alternatively, perhaps we could add a new module that provides this. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/21", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/21/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/21/events", "html_url": "https://github.com/schollii/pypubsub/issues/21", "id": 374231386, "node_id": "MDU6SXNzdWUzNzQyMzEzODY=", "number": 21, "title": "Content Filtering", "user": {"login": "paddymccrudden", "id": 17534832, "node_id": "MDQ6VXNlcjE3NTM0ODMy", "avatar_url": "https://avatars2.githubusercontent.com/u/17534832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paddymccrudden", "html_url": "https://github.com/paddymccrudden", "followers_url": "https://api.github.com/users/paddymccrudden/followers", "following_url": "https://api.github.com/users/paddymccrudden/following{/other_user}", "gists_url": "https://api.github.com/users/paddymccrudden/gists{/gist_id}", "starred_url": "https://api.github.com/users/paddymccrudden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paddymccrudden/subscriptions", "organizations_url": "https://api.github.com/users/paddymccrudden/orgs", "repos_url": "https://api.github.com/users/paddymccrudden/repos", "events_url": "https://api.github.com/users/paddymccrudden/events{/privacy}", "received_events_url": "https://api.github.com/users/paddymccrudden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-26T05:24:21Z", "updated_at": "2018-11-06T13:22:49Z", "closed_at": "2018-11-06T06:20:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does pypubsub support content or header filtering for clients? Topic filtering looks great, but filtering based on a specific kwarg or arg would be a useful addition. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/20", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/20/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/20/events", "html_url": "https://github.com/schollii/pypubsub/issues/20", "id": 373768569, "node_id": "MDU6SXNzdWUzNzM3Njg1Njk=", "number": 20, "title": "Deprecation warning", "user": {"login": "paddymccrudden", "id": 17534832, "node_id": "MDQ6VXNlcjE3NTM0ODMy", "avatar_url": "https://avatars2.githubusercontent.com/u/17534832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paddymccrudden", "html_url": "https://github.com/paddymccrudden", "followers_url": "https://api.github.com/users/paddymccrudden/followers", "following_url": "https://api.github.com/users/paddymccrudden/following{/other_user}", "gists_url": "https://api.github.com/users/paddymccrudden/gists{/gist_id}", "starred_url": "https://api.github.com/users/paddymccrudden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paddymccrudden/subscriptions", "organizations_url": "https://api.github.com/users/paddymccrudden/orgs", "repos_url": "https://api.github.com/users/paddymccrudden/repos", "events_url": "https://api.github.com/users/paddymccrudden/events{/privacy}", "received_events_url": "https://api.github.com/users/paddymccrudden/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-25T04:26:37Z", "updated_at": "2018-10-26T04:04:45Z", "closed_at": "2018-10-26T04:04:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "It looks like there is a small issue with a Deprecated function. See below\r\n\r\nc:\\anaconda2\\envs\\py36\\lib\\site-packages\\pubsub\\core\\callables.py:147: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()\r\n  (allParams, varParamName, varOptParamName, defaultVals) = getargspec(func)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/17", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/17/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/17/events", "html_url": "https://github.com/schollii/pypubsub/issues/17", "id": 367215431, "node_id": "MDU6SXNzdWUzNjcyMTU0MzE=", "number": 17, "title": "Depends on wxpython?", "user": {"login": "TheChymera", "id": 950524, "node_id": "MDQ6VXNlcjk1MDUyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/950524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheChymera", "html_url": "https://github.com/TheChymera", "followers_url": "https://api.github.com/users/TheChymera/followers", "following_url": "https://api.github.com/users/TheChymera/following{/other_user}", "gists_url": "https://api.github.com/users/TheChymera/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheChymera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheChymera/subscriptions", "organizations_url": "https://api.github.com/users/TheChymera/orgs", "repos_url": "https://api.github.com/users/TheChymera/repos", "events_url": "https://api.github.com/users/TheChymera/events{/privacy}", "received_events_url": "https://api.github.com/users/TheChymera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-05T13:38:01Z", "updated_at": "2018-10-26T04:07:21Z", "closed_at": "2018-10-26T04:07:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "As far back as `3.3.0` I notice imports like `import wx`? This doesn't sound right. I am in fact packaging your software in order to satisfy the dependencies of the newer wxpython versions. Are you aware of this circular dependency?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/16", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/16/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/16/events", "html_url": "https://github.com/schollii/pypubsub/issues/16", "id": 367213136, "node_id": "MDU6SXNzdWUzNjcyMTMxMzY=", "number": 16, "title": "Running tests on 3.3.0", "user": {"login": "TheChymera", "id": 950524, "node_id": "MDQ6VXNlcjk1MDUyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/950524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheChymera", "html_url": "https://github.com/TheChymera", "followers_url": "https://api.github.com/users/TheChymera/followers", "following_url": "https://api.github.com/users/TheChymera/following{/other_user}", "gists_url": "https://api.github.com/users/TheChymera/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheChymera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheChymera/subscriptions", "organizations_url": "https://api.github.com/users/TheChymera/orgs", "repos_url": "https://api.github.com/users/TheChymera/repos", "events_url": "https://api.github.com/users/TheChymera/events{/privacy}", "received_events_url": "https://api.github.com/users/TheChymera/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2018-10-05T13:32:14Z", "updated_at": "2019-02-18T13:05:18Z", "closed_at": "2018-10-26T04:14:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am looking to package your software for Gentoo Linux. Iorder to maintain Python2/3 compatibility I have opted to start with the older verison:\r\n\r\nThe tests fail with [this log](http://bpaste.net/show/a303b994bb4d).\r\n\r\nThe issue seems to be the following:\r\n\r\n```\r\nImportError: cannot import name policies\r\n```\r\n\r\nIt is also a relative import, so I assume it should be somewhere in the directory tree of the package, however, I cannot locate this file. Can you help me out?\r\n\r\nThe tests are being run with `nosetests -v || die`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/15", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/15/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/15/events", "html_url": "https://github.com/schollii/pypubsub/issues/15", "id": 351725252, "node_id": "MDU6SXNzdWUzNTE3MjUyNTI=", "number": 15, "title": "License file and release notes are confusing and non-intuitive to find.", "user": {"login": "eli-schwartz", "id": 6551424, "node_id": "MDQ6VXNlcjY1NTE0MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6551424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eli-schwartz", "html_url": "https://github.com/eli-schwartz", "followers_url": "https://api.github.com/users/eli-schwartz/followers", "following_url": "https://api.github.com/users/eli-schwartz/following{/other_user}", "gists_url": "https://api.github.com/users/eli-schwartz/gists{/gist_id}", "starred_url": "https://api.github.com/users/eli-schwartz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eli-schwartz/subscriptions", "organizations_url": "https://api.github.com/users/eli-schwartz/orgs", "repos_url": "https://api.github.com/users/eli-schwartz/repos", "events_url": "https://api.github.com/users/eli-schwartz/events{/privacy}", "received_events_url": "https://api.github.com/users/eli-schwartz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-17T20:17:09Z", "updated_at": "2018-10-26T04:35:37Z", "closed_at": "2018-10-26T04:35:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Storing the license file as an oddly named file in src/pypubsub is very much not discoverable, and seems to be done for no reason other than to store it as package_data even though no one who was completely unable to discover either that or the release notes in the standard locations in the github web interface, is likely to go digging around in the egg directory.\r\n\r\nOn which note it looks like zip_safe=False may be being set just to make these files available outside of a zip, even though they're not relevant to the functionality of python at all. In fact, most people would just look at the setuptools metata via e.g. `pip show pypubsub`, and if they need the license for legal reasons they don't need it **in the egg distribution** so it would make more sense to have it in the root of the repository.\r\n\r\nI've literally never seen it done this way before. :(\r\n\r\nAlso, moving it to the root of the repository and giving it a standard name means github can automatically detect and display the status in the header bar for the repo. :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/14", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/14/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/14/events", "html_url": "https://github.com/schollii/pypubsub/issues/14", "id": 351723989, "node_id": "MDU6SXNzdWUzNTE3MjM5ODk=", "number": 14, "title": "Tests are confusing and non-intuitive to run, requiring magic incantations.", "user": {"login": "eli-schwartz", "id": 6551424, "node_id": "MDQ6VXNlcjY1NTE0MjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6551424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eli-schwartz", "html_url": "https://github.com/eli-schwartz", "followers_url": "https://api.github.com/users/eli-schwartz/followers", "following_url": "https://api.github.com/users/eli-schwartz/following{/other_user}", "gists_url": "https://api.github.com/users/eli-schwartz/gists{/gist_id}", "starred_url": "https://api.github.com/users/eli-schwartz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eli-schwartz/subscriptions", "organizations_url": "https://api.github.com/users/eli-schwartz/orgs", "repos_url": "https://api.github.com/users/eli-schwartz/repos", "events_url": "https://api.github.com/users/eli-schwartz/events{/privacy}", "received_events_url": "https://api.github.com/users/eli-schwartz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-17T20:12:31Z", "updated_at": "2018-10-26T04:27:12Z", "closed_at": "2018-10-26T04:27:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "- it depends on the current working directory that pytest is run from, because things like `open('test4_prov_module_actual.py', 'r')` and `self._parse_tree(_get_elem(open(xml, mode=\"r\")` (where xml is **just** \"xmlprovider_topics.xml\"), instead of using `os.path.join(os.path.dirname(__file__), 'xmlprovider_topics.xml'`)\r\n- src/pypubsub is not autodetected and added to the PYTHONPATH, whereas the common custom of using \"modulename\" as a directory in the root directory of the repository, would work fine.\r\n- using tests/suite/ as the test directory, instead of just tests/, means pytest needs to be explicitly passed the test directory, instead of just detecting it automatically.\r\n\r\nThe ideal case would be that one could `git clone https://github.com/schollii/pypubsub && cd pypubsub && python -m pytest` and everything would just work without a fuss.\r\nCurrently it instead requires an additional `cd tests/suite && PYTHONPATH=$PWD../../src/ python -m pytest` for no discernable reason.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/12", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/12/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/12/events", "html_url": "https://github.com/schollii/pypubsub/issues/12", "id": 339109400, "node_id": "MDU6SXNzdWUzMzkxMDk0MDA=", "number": 12, "title": "Include tests in archive", "user": {"login": "swt2c", "id": 971544, "node_id": "MDQ6VXNlcjk3MTU0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/971544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swt2c", "html_url": "https://github.com/swt2c", "followers_url": "https://api.github.com/users/swt2c/followers", "following_url": "https://api.github.com/users/swt2c/following{/other_user}", "gists_url": "https://api.github.com/users/swt2c/gists{/gist_id}", "starred_url": "https://api.github.com/users/swt2c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swt2c/subscriptions", "organizations_url": "https://api.github.com/users/swt2c/orgs", "repos_url": "https://api.github.com/users/swt2c/repos", "events_url": "https://api.github.com/users/swt2c/events{/privacy}", "received_events_url": "https://api.github.com/users/swt2c/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 98220484, "node_id": "MDU6TGFiZWw5ODIyMDQ4NA==", "url": "https://api.github.com/repos/schollii/pypubsub/labels/help%20wanted", "name": "help wanted", "color": "f2e252", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-07T02:13:24Z", "updated_at": "2018-10-26T04:25:12Z", "closed_at": "2018-10-26T04:25:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a request to include the unit tests in the .zip release archives.  It is useful to be able to run the tests after building a package to make sure everything is working.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/9", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/9/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/9/events", "html_url": "https://github.com/schollii/pypubsub/issues/9", "id": 333739952, "node_id": "MDU6SXNzdWUzMzM3Mzk5NTI=", "number": 9, "title": "Python 2 support", "user": {"login": "swt2c", "id": 971544, "node_id": "MDQ6VXNlcjk3MTU0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/971544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swt2c", "html_url": "https://github.com/swt2c", "followers_url": "https://api.github.com/users/swt2c/followers", "following_url": "https://api.github.com/users/swt2c/following{/other_user}", "gists_url": "https://api.github.com/users/swt2c/gists{/gist_id}", "starred_url": "https://api.github.com/users/swt2c/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swt2c/subscriptions", "organizations_url": "https://api.github.com/users/swt2c/orgs", "repos_url": "https://api.github.com/users/swt2c/repos", "events_url": "https://api.github.com/users/swt2c/events{/privacy}", "received_events_url": "https://api.github.com/users/swt2c/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2018-06-19T16:08:23Z", "updated_at": "2018-10-26T04:22:19Z", "closed_at": "2018-10-26T04:22:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any chance that you would be willing to consider supporting Python 2 again?  The embedded copy of PyPubSub was removed from wxPython Phoenix and a external dependency was added on PyPubSub. However, Phoenix still supports Python 2, so this has resulted in Phoenix being uninstallable in certain cases.\r\n\r\nRef https://github.com/wxWidgets/Phoenix/issues/887", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/7", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/7/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/7/events", "html_url": "https://github.com/schollii/pypubsub/issues/7", "id": 302660454, "node_id": "MDU6SXNzdWUzMDI2NjA0NTQ=", "number": 7, "title": "Using wx.lib.pubsub with PyInstaller", "user": {"login": "david-hughes", "id": 2462978, "node_id": "MDQ6VXNlcjI0NjI5Nzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/2462978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-hughes", "html_url": "https://github.com/david-hughes", "followers_url": "https://api.github.com/users/david-hughes/followers", "following_url": "https://api.github.com/users/david-hughes/following{/other_user}", "gists_url": "https://api.github.com/users/david-hughes/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-hughes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-hughes/subscriptions", "organizations_url": "https://api.github.com/users/david-hughes/orgs", "repos_url": "https://api.github.com/users/david-hughes/repos", "events_url": "https://api.github.com/users/david-hughes/events{/privacy}", "received_events_url": "https://api.github.com/users/david-hughes/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 98220484, "node_id": "MDU6TGFiZWw5ODIyMDQ4NA==", "url": "https://api.github.com/repos/schollii/pypubsub/labels/help%20wanted", "name": "help wanted", "color": "f2e252", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-03-06T11:16:41Z", "updated_at": "2018-10-26T04:40:07Z", "closed_at": "2018-10-26T04:40:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "wxPython 4 (Phoenix) has now been officially released and supports Python 3. Py2exe has not been fully converted for Python 3 and is now no longer maintained. Neither is Esky the software updater package that is (was) callable from wxPython. The way forward seems to be via PyInstaller and PyUpdater. Unfortunately when attempting to use PyInstaller on a wxPython application that uses pubsub it fails to import the items that are in wx\\lib\\pubsub\\core\\kwargs.\r\n\r\nLooking further into PyInstaller I see it has a powerful mechanism for locating problematic imports via Python scripted \"Hooks\" and that many such have been published at https://github.com/pyinstaller/pyinstaller for various Python packages. There is one there for wx.lib.pubsub but looking at the open Issues there have been several, so far unsuccessful attempts to complete it going back several years, in particular, issues #1367, #1530, #2215 and #2233.\r\n\r\nIs there any recommendation as to how pubsub can be used by PyInstaller?\r\n\r\nDavid Hughes\r\nForestfield Software", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/6", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/6/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/6/events", "html_url": "https://github.com/schollii/pypubsub/issues/6", "id": 278839327, "node_id": "MDU6SXNzdWUyNzg4MzkzMjc=", "number": 6, "title": "pub.subsribe fails when using python 3 typehints in callable", "user": {"login": "superdweebie", "id": 1670364, "node_id": "MDQ6VXNlcjE2NzAzNjQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1670364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superdweebie", "html_url": "https://github.com/superdweebie", "followers_url": "https://api.github.com/users/superdweebie/followers", "following_url": "https://api.github.com/users/superdweebie/following{/other_user}", "gists_url": "https://api.github.com/users/superdweebie/gists{/gist_id}", "starred_url": "https://api.github.com/users/superdweebie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superdweebie/subscriptions", "organizations_url": "https://api.github.com/users/superdweebie/orgs", "repos_url": "https://api.github.com/users/superdweebie/repos", "events_url": "https://api.github.com/users/superdweebie/events{/privacy}", "received_events_url": "https://api.github.com/users/superdweebie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-12-04T00:35:13Z", "updated_at": "2019-01-27T19:47:29Z", "closed_at": "2019-01-27T19:47:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is the error log:\r\n``File \"C:\\Users\\J84375\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\pubsub\\core\\publisher.py\", line 160, in subscribe\r\n    subscribedListener, success = topicObj.subscribe(listener, **curriedArgs)``\r\n\r\n``File \"C:\\Users\\J84375\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\pubsub\\core\\topicobj.py\", line 353, in subscribe\r\n    args, reqd = topicArgsFromCallable(listener, ignoreArgs=curriedArgs)``\r\n\r\n``File \"C:\\Users\\J84375\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\pubsub\\core\\topicargspec.py\", line 51, in topicArgsFromCallable\r\n    argsInfo = getListenerArgs(_callable, ignoreArgs=ignoreArgs)``\r\n\r\n``File \"C:\\Users\\J84375\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\pubsub\\core\\callables.py\", line 221, in getArgs\r\n    return CallArgsInfo(func, firstArgIdx, ignoreArgs=ignoreArgs)``\r\n\r\n``File \"C:\\Users\\J84375\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\pubsub\\core\\callables.py\", line 147, in __init__\r\n    (allParams, varParamName, varOptParamName, defaultVals) = getargspec(func)``\r\n\r\n``File \"C:\\Users\\J84375\\AppData\\Local\\Programs\\Python\\Python36\\lib\\inspect.py\", line 1072, in getargspec``\r\n\r\n``raise ValueError(\"Function has keyword-only parameters or annotations\"\r\nValueError: Function has keyword-only parameters or annotations, use getfullargspec() API which can support them``\r\n\r\nRemoving the type hints from the callable signature removes the error. However, it would be very nice to use typehints!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/5", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/5/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/5/events", "html_url": "https://github.com/schollii/pypubsub/issues/5", "id": 222556746, "node_id": "MDU6SXNzdWUyMjI1NTY3NDY=", "number": 5, "title": "DeprecationWarning", "user": {"login": "wossx", "id": 27557609, "node_id": "MDQ6VXNlcjI3NTU3NjA5", "avatar_url": "https://avatars1.githubusercontent.com/u/27557609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wossx", "html_url": "https://github.com/wossx", "followers_url": "https://api.github.com/users/wossx/followers", "following_url": "https://api.github.com/users/wossx/following{/other_user}", "gists_url": "https://api.github.com/users/wossx/gists{/gist_id}", "starred_url": "https://api.github.com/users/wossx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wossx/subscriptions", "organizations_url": "https://api.github.com/users/wossx/orgs", "repos_url": "https://api.github.com/users/wossx/repos", "events_url": "https://api.github.com/users/wossx/events{/privacy}", "received_events_url": "https://api.github.com/users/wossx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 98220484, "node_id": "MDU6TGFiZWw5ODIyMDQ4NA==", "url": "https://api.github.com/repos/schollii/pypubsub/labels/help%20wanted", "name": "help wanted", "color": "f2e252", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-18T21:52:50Z", "updated_at": "2018-10-26T04:23:19Z", "closed_at": "2018-10-26T04:23:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ndef foo():\r\n    pass\r\n\r\nimport wx.lib.plot\r\nfrom pubsub import pub\r\npub.subscribe(foo, 'topic')\r\n```\r\n\r\nResult of my reduced code in Python 3.6:\r\n\r\n_D:\\Python36\\lib\\site-packages\\pubsub\\core\\callables.py:147: DeprecationWarning:\r\ninspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()\r\n  (allParams, varParamName, varOptParamName, defaultVals) = getargspec(func)_\r\n\r\n(not without wx.lib.plot, and only in Python 3)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/4", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/4/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/4/events", "html_url": "https://github.com/schollii/pypubsub/issues/4", "id": 185824978, "node_id": "MDU6SXNzdWUxODU4MjQ5Nzg=", "number": 4, "title": "Feature request: subscribe non-global callables", "user": {"login": "DevPlayer-", "id": 1820422, "node_id": "MDQ6VXNlcjE4MjA0MjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1820422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevPlayer-", "html_url": "https://github.com/DevPlayer-", "followers_url": "https://api.github.com/users/DevPlayer-/followers", "following_url": "https://api.github.com/users/DevPlayer-/following{/other_user}", "gists_url": "https://api.github.com/users/DevPlayer-/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevPlayer-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevPlayer-/subscriptions", "organizations_url": "https://api.github.com/users/DevPlayer-/orgs", "repos_url": "https://api.github.com/users/DevPlayer-/repos", "events_url": "https://api.github.com/users/DevPlayer-/events{/privacy}", "received_events_url": "https://api.github.com/users/DevPlayer-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-28T02:30:29Z", "updated_at": "2016-11-16T01:12:13Z", "closed_at": "2016-11-06T17:52:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Seems I am only able to pub.subscribe(some_callable_in_global_namespace, 'topic'). If that is so can we change that to allow for non-globals to subscribe.\n\nMy current work-around is something like this:\n\n```\ndef init(kwargs={}):\n    global start, inited\n    inited = True\n    def start(kwargs={}):\n        global pause, started\n        started = True\n        def pause(kwargs={}):\n            global paused\n            paused = True\n            # do stuff\n        pub.subscribe(pause,'pause.myaddonA')\n    pub.subscribe(start, 'start.myaddonA')\npub.subscribe(init, 'init.myaddonA')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/3", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/3/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/3/events", "html_url": "https://github.com/schollii/pypubsub/issues/3", "id": 185512365, "node_id": "MDU6SXNzdWUxODU1MTIzNjU=", "number": 3, "title": "deleting all topics", "user": {"login": "polymerchm", "id": 6414226, "node_id": "MDQ6VXNlcjY0MTQyMjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6414226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polymerchm", "html_url": "https://github.com/polymerchm", "followers_url": "https://api.github.com/users/polymerchm/followers", "following_url": "https://api.github.com/users/polymerchm/following{/other_user}", "gists_url": "https://api.github.com/users/polymerchm/gists{/gist_id}", "starred_url": "https://api.github.com/users/polymerchm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polymerchm/subscriptions", "organizations_url": "https://api.github.com/users/polymerchm/orgs", "repos_url": "https://api.github.com/users/polymerchm/repos", "events_url": "https://api.github.com/users/polymerchm/events{/privacy}", "received_events_url": "https://api.github.com/users/polymerchm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-26T21:15:47Z", "updated_at": "2016-11-04T23:39:44Z", "closed_at": "2016-11-04T23:39:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Need a simple way to remove all topics/subscribers/reset pubsub without stopping the interpreter.   Working in Pythonista which does not reset the interpreter when a script finishes.  \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/2", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/2/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/2/events", "html_url": "https://github.com/schollii/pypubsub/issues/2", "id": 184823099, "node_id": "MDU6SXNzdWUxODQ4MjMwOTk=", "number": 2, "title": "AUTO_TOPIC_OBJ implementation missing ", "user": {"login": "Dowwie", "id": 2601236, "node_id": "MDQ6VXNlcjI2MDEyMzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2601236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dowwie", "html_url": "https://github.com/Dowwie", "followers_url": "https://api.github.com/users/Dowwie/followers", "following_url": "https://api.github.com/users/Dowwie/following{/other_user}", "gists_url": "https://api.github.com/users/Dowwie/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dowwie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dowwie/subscriptions", "organizations_url": "https://api.github.com/users/Dowwie/orgs", "repos_url": "https://api.github.com/users/Dowwie/repos", "events_url": "https://api.github.com/users/Dowwie/events{/privacy}", "received_events_url": "https://api.github.com/users/Dowwie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-10-24T12:10:14Z", "updated_at": "2016-11-04T23:22:04Z", "closed_at": "2016-11-04T23:22:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "AUTO_TOPIC_OBJ is documented yet missing from the actual implementation?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/schollii/pypubsub/issues/1", "repository_url": "https://api.github.com/repos/schollii/pypubsub", "labels_url": "https://api.github.com/repos/schollii/pypubsub/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/schollii/pypubsub/issues/1/comments", "events_url": "https://api.github.com/repos/schollii/pypubsub/issues/1/events", "html_url": "https://github.com/schollii/pypubsub/issues/1", "id": 184726469, "node_id": "MDU6SXNzdWUxODQ3MjY0Njk=", "number": 1, "title": "Release .zip", "user": {"login": "renzenicolai", "id": 9977517, "node_id": "MDQ6VXNlcjk5Nzc1MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/9977517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renzenicolai", "html_url": "https://github.com/renzenicolai", "followers_url": "https://api.github.com/users/renzenicolai/followers", "following_url": "https://api.github.com/users/renzenicolai/following{/other_user}", "gists_url": "https://api.github.com/users/renzenicolai/gists{/gist_id}", "starred_url": "https://api.github.com/users/renzenicolai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renzenicolai/subscriptions", "organizations_url": "https://api.github.com/users/renzenicolai/orgs", "repos_url": "https://api.github.com/users/renzenicolai/repos", "events_url": "https://api.github.com/users/renzenicolai/events{/privacy}", "received_events_url": "https://api.github.com/users/renzenicolai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-24T00:17:37Z", "updated_at": "2016-11-04T23:22:33Z", "closed_at": "2016-11-04T23:22:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nI am running into issues with installing the \"pypubsub\" package on Arch Linux.\nThis package depends on the file \"https://downloads.sf.net/project/$_project/$_project/$pkgver/$_pkgname-$pkgver.zip\" which no longer exists because of your switch to Github.\n\nWill you provide new releases as .zip files in the future and if so: where do I find those releases?\n\nAn alternative is a package that automatically builds your GIT repository: how stable will the master branch of this repository be?\n\nGreetings,\nRenze\n", "performed_via_github_app": null, "score": 1.0}]}