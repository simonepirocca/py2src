{"total_count": 11, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/unhaggle/django-memoize/issues/41", "repository_url": "https://api.github.com/repos/unhaggle/django-memoize", "labels_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/41/comments", "events_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/41/events", "html_url": "https://github.com/unhaggle/django-memoize/issues/41", "id": 602806881, "node_id": "MDU6SXNzdWU2MDI4MDY4ODE=", "number": 41, "title": "Does not work with Django3.x", "user": {"login": "debdolph", "id": 25152803, "node_id": "MDQ6VXNlcjI1MTUyODAz", "avatar_url": "https://avatars2.githubusercontent.com/u/25152803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/debdolph", "html_url": "https://github.com/debdolph", "followers_url": "https://api.github.com/users/debdolph/followers", "following_url": "https://api.github.com/users/debdolph/following{/other_user}", "gists_url": "https://api.github.com/users/debdolph/gists{/gist_id}", "starred_url": "https://api.github.com/users/debdolph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/debdolph/subscriptions", "organizations_url": "https://api.github.com/users/debdolph/orgs", "repos_url": "https://api.github.com/users/debdolph/repos", "events_url": "https://api.github.com/users/debdolph/events{/privacy}", "received_events_url": "https://api.github.com/users/debdolph/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-19T20:01:41Z", "updated_at": "2020-04-27T06:43:30Z", "closed_at": "2020-04-27T06:43:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/unhaggle/django-memoize/issues/33", "repository_url": "https://api.github.com/repos/unhaggle/django-memoize", "labels_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/33/comments", "events_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/33/events", "html_url": "https://github.com/unhaggle/django-memoize/issues/33", "id": 374520863, "node_id": "MDU6SXNzdWUzNzQ1MjA4NjM=", "number": 33, "title": "Git tag of releases", "user": {"login": "therefromhere", "id": 197540, "node_id": "MDQ6VXNlcjE5NzU0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/197540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therefromhere", "html_url": "https://github.com/therefromhere", "followers_url": "https://api.github.com/users/therefromhere/followers", "following_url": "https://api.github.com/users/therefromhere/following{/other_user}", "gists_url": "https://api.github.com/users/therefromhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/therefromhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therefromhere/subscriptions", "organizations_url": "https://api.github.com/users/therefromhere/orgs", "repos_url": "https://api.github.com/users/therefromhere/repos", "events_url": "https://api.github.com/users/therefromhere/events{/privacy}", "received_events_url": "https://api.github.com/users/therefromhere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-26T19:38:12Z", "updated_at": "2020-04-17T07:06:30Z", "closed_at": "2020-04-17T07:06:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Could you start doing git tags of pypi releases again so it's easy to match up code changes with package releases?  The last git tag/GitHub release is currently 1.2.0 from 2015 (https://github.com/tvavrys/django-memoize/releases)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/unhaggle/django-memoize/issues/32", "repository_url": "https://api.github.com/repos/unhaggle/django-memoize", "labels_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/32/comments", "events_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/32/events", "html_url": "https://github.com/unhaggle/django-memoize/issues/32", "id": 373619386, "node_id": "MDU6SXNzdWUzNzM2MTkzODY=", "number": 32, "title": "Deprecation warning ", "user": {"login": "wrvdklooster", "id": 549773, "node_id": "MDQ6VXNlcjU0OTc3Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/549773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wrvdklooster", "html_url": "https://github.com/wrvdklooster", "followers_url": "https://api.github.com/users/wrvdklooster/followers", "following_url": "https://api.github.com/users/wrvdklooster/following{/other_user}", "gists_url": "https://api.github.com/users/wrvdklooster/gists{/gist_id}", "starred_url": "https://api.github.com/users/wrvdklooster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wrvdklooster/subscriptions", "organizations_url": "https://api.github.com/users/wrvdklooster/orgs", "repos_url": "https://api.github.com/users/wrvdklooster/repos", "events_url": "https://api.github.com/users/wrvdklooster/events{/privacy}", "received_events_url": "https://api.github.com/users/wrvdklooster/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-24T18:33:56Z", "updated_at": "2018-10-26T08:37:21Z", "closed_at": "2018-10-26T08:37:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see the following deprecation warning in Python 3.5.2:\r\n\r\n`python3.5/site-packages/memoize/__init__.py:28: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() instead\r\n  argspec = inspect.getargspec(f)`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/unhaggle/django-memoize/issues/26", "repository_url": "https://api.github.com/repos/unhaggle/django-memoize", "labels_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/26/comments", "events_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/26/events", "html_url": "https://github.com/unhaggle/django-memoize/issues/26", "id": 316544707, "node_id": "MDU6SXNzdWUzMTY1NDQ3MDc=", "number": 26, "title": "test with new versions of django", "user": {"login": "thenewguy", "id": 77731, "node_id": "MDQ6VXNlcjc3NzMx", "avatar_url": "https://avatars2.githubusercontent.com/u/77731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thenewguy", "html_url": "https://github.com/thenewguy", "followers_url": "https://api.github.com/users/thenewguy/followers", "following_url": "https://api.github.com/users/thenewguy/following{/other_user}", "gists_url": "https://api.github.com/users/thenewguy/gists{/gist_id}", "starred_url": "https://api.github.com/users/thenewguy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thenewguy/subscriptions", "organizations_url": "https://api.github.com/users/thenewguy/orgs", "repos_url": "https://api.github.com/users/thenewguy/repos", "events_url": "https://api.github.com/users/thenewguy/events{/privacy}", "received_events_url": "https://api.github.com/users/thenewguy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-22T03:10:52Z", "updated_at": "2018-05-22T06:28:35Z", "closed_at": "2018-05-22T06:28:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure what versions you're interested in targeting but the tests run on older versions.  It would be nice to run against current versions and set travis up to rerun the build with a daily cron so you're hitting master as it changes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/unhaggle/django-memoize/issues/22", "repository_url": "https://api.github.com/repos/unhaggle/django-memoize", "labels_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/22/comments", "events_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/22/events", "html_url": "https://github.com/unhaggle/django-memoize/issues/22", "id": 238939710, "node_id": "MDU6SXNzdWUyMzg5Mzk3MTA=", "number": 22, "title": "How to use delete_memoized with a class @property?", "user": {"login": "unformatt", "id": 157132, "node_id": "MDQ6VXNlcjE1NzEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/157132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unformatt", "html_url": "https://github.com/unformatt", "followers_url": "https://api.github.com/users/unformatt/followers", "following_url": "https://api.github.com/users/unformatt/following{/other_user}", "gists_url": "https://api.github.com/users/unformatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/unformatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unformatt/subscriptions", "organizations_url": "https://api.github.com/users/unformatt/orgs", "repos_url": "https://api.github.com/users/unformatt/repos", "events_url": "https://api.github.com/users/unformatt/events{/privacy}", "received_events_url": "https://api.github.com/users/unformatt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-27T18:22:33Z", "updated_at": "2018-03-22T18:06:07Z", "closed_at": "2018-03-22T18:06:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nfrom random import random\r\nfrom memoize import memoize, delete_memoized\r\n\r\nclass Foo\r\n\r\n    @property\r\n    @memoize()\r\n    def thing(self):\r\n        return random()\r\n\r\n    def clear_thing(self):\r\n        # doesn't work because delete_memoized wants a function reference\r\n        delete_memoized('Foo.thing', self)\r\n        # doesn't work because returns the actual value of thing property, not the getter function\r\n        delete_memoized(self.thing)\r\n        # doesn't work because delete_memoized wants the function decorator from @memoize - it tries to call make_cache_key on the function you pass\r\n        delete_memoized(Foo.thing.getter, self)\r\n       ```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/unhaggle/django-memoize/issues/18", "repository_url": "https://api.github.com/repos/unhaggle/django-memoize", "labels_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/18/comments", "events_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/18/events", "html_url": "https://github.com/unhaggle/django-memoize/issues/18", "id": 201524470, "node_id": "MDU6SXNzdWUyMDE1MjQ0NzA=", "number": 18, "title": "Django-Memoize doesn't work on type annotated functions", "user": {"login": "LaurensBosscher", "id": 13363196, "node_id": "MDQ6VXNlcjEzMzYzMTk2", "avatar_url": "https://avatars0.githubusercontent.com/u/13363196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaurensBosscher", "html_url": "https://github.com/LaurensBosscher", "followers_url": "https://api.github.com/users/LaurensBosscher/followers", "following_url": "https://api.github.com/users/LaurensBosscher/following{/other_user}", "gists_url": "https://api.github.com/users/LaurensBosscher/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaurensBosscher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaurensBosscher/subscriptions", "organizations_url": "https://api.github.com/users/LaurensBosscher/orgs", "repos_url": "https://api.github.com/users/LaurensBosscher/repos", "events_url": "https://api.github.com/users/LaurensBosscher/events{/privacy}", "received_events_url": "https://api.github.com/users/LaurensBosscher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-18T09:50:35Z", "updated_at": "2017-02-07T19:02:25Z", "closed_at": "2017-02-07T19:02:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a function with the following signature:\r\n\r\n`@memoize(timeout=300)\r\ndef _start_sequence(self, exam: Exam):`\r\n\r\nThe moment I try to run the function with the annotation I get the following error:\r\n\r\n`Function has keyword-only arguments or annotations, use getfullargspec() API which can support them`\r\n\r\nIf I remove the type annotation everything works as expected. Given that type annotations have become quite useful with Python 3.5 it would be intrestring to support them.\r\n\r\nUnfortunately I see that the required function is only supported in Python 3: [inspect.getfullargspec](https://docs.python.org/3.5/library/inspect.html#inspect.getfullargspec) but with some Six magic we can probably make it work.\r\n\r\nIf you're interested and don't object to the inclusion of Six as an additional dependency I could create a pull request. Let me know!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/unhaggle/django-memoize/issues/13", "repository_url": "https://api.github.com/repos/unhaggle/django-memoize", "labels_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/13/comments", "events_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/13/events", "html_url": "https://github.com/unhaggle/django-memoize/issues/13", "id": 173471626, "node_id": "MDU6SXNzdWUxNzM0NzE2MjY=", "number": 13, "title": "Deleting cached instance methods with mutable parameters", "user": {"login": "joshgeller", "id": 5146971, "node_id": "MDQ6VXNlcjUxNDY5NzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5146971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshgeller", "html_url": "https://github.com/joshgeller", "followers_url": "https://api.github.com/users/joshgeller/followers", "following_url": "https://api.github.com/users/joshgeller/following{/other_user}", "gists_url": "https://api.github.com/users/joshgeller/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshgeller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshgeller/subscriptions", "organizations_url": "https://api.github.com/users/joshgeller/orgs", "repos_url": "https://api.github.com/users/joshgeller/repos", "events_url": "https://api.github.com/users/joshgeller/events{/privacy}", "received_events_url": "https://api.github.com/users/joshgeller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-26T14:50:39Z", "updated_at": "2016-08-26T15:41:40Z", "closed_at": "2016-08-26T15:33:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello, wonderful library - thank you!\n\nI'm not sure if this is a bug, or just not supported.\n\nI am trying to delete the cached version of an instance method, but only for a specific parameter. The parameter is this case in an object instance. All objects define their own `__repr__` method for use in the cache key.\n\nHere is an example of a failing test:\n\n``` python\n    def test_delete_memoized_instancemethod_with_mutable_param(self):\n        class Foo(object):\n            def __init__(self, id):\n                self.id = id\n\n            @self.memoizer.memoize(20)\n            def foo(self, bar_obj):\n                return random.randrange(0, 100000) + bar_obj.id\n\n            def __repr__(self):\n                return ('{}({})'.format(self.__class__.__name__, self.id))\n\n        class Bar(object):\n            def __init__(self, id):\n                self.id = id\n\n            def __repr__(self):\n                return ('{}({})'.format(self.__class__.__name__, self.id))\n\n        a = Foo(1)\n        b = Bar(1)\n        c = Bar(2)\n\n        # Assert foo is cached correctly\n        result1 = a.foo(b)\n        result2 = a.foo(c)\n        time.sleep(1)\n        assert(a.foo(b) == result1)\n        assert(a.foo(c) == result2)\n\n        # Only delete the cached function for a.foo(b)\n        self.memoizer.delete_memoized(a.foo, b)\n        # This result should change\n        assert(a.foo(b) != result1)\n        # This result should not change\n        assert(a.foo(c) == result2)\n```\n\nThis tests fails with the following error:\n\n```\nException possibly due to cache backend.\nTraceback (most recent call last):\n  File \"/Users/me/dev/django-memoize/memoize/__init__.py\", line 479, in delete_memoized\n    cache_key = f.make_cache_key(f.uncached, *args, **kwargs)\n  File \"/Users/me/dev/django-memoize/memoize/__init__.py\", line 184, in make_cache_key\n    f, *args, **kwargs\n  File \"/Users/me/dev/django-memoize/memoize/__init__.py\", line 223, in _memoize_kwargs_to_args\n    elif abs(i - args_len) <= len(argspec.defaults):\nTypeError: object of type 'NoneType' has no len()\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/unhaggle/django-memoize/issues/8", "repository_url": "https://api.github.com/repos/unhaggle/django-memoize", "labels_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/8/comments", "events_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/8/events", "html_url": "https://github.com/unhaggle/django-memoize/issues/8", "id": 118477885, "node_id": "MDU6SXNzdWUxMTg0Nzc4ODU=", "number": 8, "title": "*args are ignored by memoize. ", "user": {"login": "patgmiller", "id": 3914379, "node_id": "MDQ6VXNlcjM5MTQzNzk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3914379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patgmiller", "html_url": "https://github.com/patgmiller", "followers_url": "https://api.github.com/users/patgmiller/followers", "following_url": "https://api.github.com/users/patgmiller/following{/other_user}", "gists_url": "https://api.github.com/users/patgmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/patgmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patgmiller/subscriptions", "organizations_url": "https://api.github.com/users/patgmiller/orgs", "repos_url": "https://api.github.com/users/patgmiller/repos", "events_url": "https://api.github.com/users/patgmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/patgmiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-23T21:35:34Z", "updated_at": "2016-03-31T22:14:00Z", "closed_at": "2016-03-31T22:14:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is it intentional that the `*args` after the declared arguments are ignored by the `memoize` decorator, or is that a bug? Below is an example in an ipython shell with `python==2.7.6`, `django==1.4.22` of how memoize isn't taking into account the `*args`. \n\n``` python\nIn [16]: @memoize()\ndef func(*args, **kwargs):\n    return args, kwargs\n   ....:\n\nIn [17]: func(1)\nOut[17]: ((1,), {})\n\nIn [18]: func(2)\nOut[18]: ((1,), {})\n\nIn [19]: func(1, 2)\nOut[19]: ((1,), {})\n\nIn [20]: func(1, one=1)\nOut[20]: ((1,), {'one': 1})\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/unhaggle/django-memoize/issues/5", "repository_url": "https://api.github.com/repos/unhaggle/django-memoize", "labels_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/5/comments", "events_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/5/events", "html_url": "https://github.com/unhaggle/django-memoize/issues/5", "id": 64476792, "node_id": "MDU6SXNzdWU2NDQ3Njc5Mg==", "number": 5, "title": "Is memoize refresh possible ?", "user": {"login": "toxinu", "id": 293337, "node_id": "MDQ6VXNlcjI5MzMzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/293337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toxinu", "html_url": "https://github.com/toxinu", "followers_url": "https://api.github.com/users/toxinu/followers", "following_url": "https://api.github.com/users/toxinu/following{/other_user}", "gists_url": "https://api.github.com/users/toxinu/gists{/gist_id}", "starred_url": "https://api.github.com/users/toxinu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toxinu/subscriptions", "organizations_url": "https://api.github.com/users/toxinu/orgs", "repos_url": "https://api.github.com/users/toxinu/repos", "events_url": "https://api.github.com/users/toxinu/events{/privacy}", "received_events_url": "https://api.github.com/users/toxinu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-03-26T09:08:54Z", "updated_at": "2019-04-04T18:40:22Z", "closed_at": "2019-04-04T18:40:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nIs memoize refresh possible ? In order to doesn't have cache interrupt.\nFor example, I set a one day cache and a task that start 10 minutes before cache invalidation to refresh it by myself. But if I delete it and re-run the function, I'll have interruption. Am I clear ? :smile: \n\nThank you.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/unhaggle/django-memoize/issues/4", "repository_url": "https://api.github.com/repos/unhaggle/django-memoize", "labels_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/4/comments", "events_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/4/events", "html_url": "https://github.com/unhaggle/django-memoize/issues/4", "id": 47033941, "node_id": "MDU6SXNzdWU0NzAzMzk0MQ==", "number": 4, "title": "Please, mention in the docs which versions of Django are supported", "user": {"login": "barseghyanartur", "id": 4925587, "node_id": "MDQ6VXNlcjQ5MjU1ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/4925587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barseghyanartur", "html_url": "https://github.com/barseghyanartur", "followers_url": "https://api.github.com/users/barseghyanartur/followers", "following_url": "https://api.github.com/users/barseghyanartur/following{/other_user}", "gists_url": "https://api.github.com/users/barseghyanartur/gists{/gist_id}", "starred_url": "https://api.github.com/users/barseghyanartur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barseghyanartur/subscriptions", "organizations_url": "https://api.github.com/users/barseghyanartur/orgs", "repos_url": "https://api.github.com/users/barseghyanartur/repos", "events_url": "https://api.github.com/users/barseghyanartur/events{/privacy}", "received_events_url": "https://api.github.com/users/barseghyanartur/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-28T14:42:24Z", "updated_at": "2014-12-14T06:35:53Z", "closed_at": "2014-12-14T06:35:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "For instance, it doesn't work with 1.4.\n\nI see that the `test_settings` were created with Django 1.6, but whether it does work with Django 1.5 (likely it does) and Django 1.7 (not sure) - that's the question.\n\nIMHO, that's something worth mentioning at the very start of the documentation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/unhaggle/django-memoize/issues/2", "repository_url": "https://api.github.com/repos/unhaggle/django-memoize", "labels_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/2/comments", "events_url": "https://api.github.com/repos/unhaggle/django-memoize/issues/2/events", "html_url": "https://github.com/unhaggle/django-memoize/issues/2", "id": 34314298, "node_id": "MDU6SXNzdWUzNDMxNDI5OA==", "number": 2, "title": "Django debug toolbar shows the same query count even I'm using memoize decorator.", "user": {"login": "pathakamit88", "id": 1116703, "node_id": "MDQ6VXNlcjExMTY3MDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1116703?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pathakamit88", "html_url": "https://github.com/pathakamit88", "followers_url": "https://api.github.com/users/pathakamit88/followers", "following_url": "https://api.github.com/users/pathakamit88/following{/other_user}", "gists_url": "https://api.github.com/users/pathakamit88/gists{/gist_id}", "starred_url": "https://api.github.com/users/pathakamit88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pathakamit88/subscriptions", "organizations_url": "https://api.github.com/users/pathakamit88/orgs", "repos_url": "https://api.github.com/users/pathakamit88/repos", "events_url": "https://api.github.com/users/pathakamit88/events{/privacy}", "received_events_url": "https://api.github.com/users/pathakamit88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-26T15:16:46Z", "updated_at": "2014-12-14T06:23:49Z", "closed_at": "2014-12-14T06:23:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}]}