{"total_count": 132, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/273", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/273/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/273/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/273", "id": 681163915, "node_id": "MDU6SXNzdWU2ODExNjM5MTU=", "number": 273, "title": "Bluetooth headphones not showing in sd.query_devices()", "user": {"login": "MrHoseongLee", "id": 49748733, "node_id": "MDQ6VXNlcjQ5NzQ4NzMz", "avatar_url": "https://avatars2.githubusercontent.com/u/49748733?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrHoseongLee", "html_url": "https://github.com/MrHoseongLee", "followers_url": "https://api.github.com/users/MrHoseongLee/followers", "following_url": "https://api.github.com/users/MrHoseongLee/following{/other_user}", "gists_url": "https://api.github.com/users/MrHoseongLee/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrHoseongLee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrHoseongLee/subscriptions", "organizations_url": "https://api.github.com/users/MrHoseongLee/orgs", "repos_url": "https://api.github.com/users/MrHoseongLee/repos", "events_url": "https://api.github.com/users/MrHoseongLee/events{/privacy}", "received_events_url": "https://api.github.com/users/MrHoseongLee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-18T16:11:27Z", "updated_at": "2020-08-19T01:46:13Z", "closed_at": "2020-08-19T01:46:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running python3.8 on arch linux. When I use `sd.play()` it plays the audio to the built-in speaker. To change the device used `sd.query_devices()` but the output is \r\n```\r\n   0 HDA Intel PCH: ALC3266 Analog (hw:0,0), ALSA (2 in, 2 out)\r\n   1 HDA Intel PCH: HDMI 0 (hw:0,3), ALSA (0 in, 8 out)\r\n   2 HDA Intel PCH: HDMI 1 (hw:0,7), ALSA (0 in, 8 out)\r\n   3 HDA Intel PCH: HDMI 2 (hw:0,8), ALSA (0 in, 8 out)\r\n   4 HDA Intel PCH: HDMI 3 (hw:0,9), ALSA (0 in, 8 out)\r\n   5 HDA Intel PCH: HDMI 4 (hw:0,10), ALSA (0 in, 8 out)\r\n   6 sysdefault, ALSA (128 in, 128 out)\r\n   7 front, ALSA (0 in, 2 out)\r\n   8 surround40, ALSA (0 in, 2 out)\r\n   9 surround51, ALSA (0 in, 2 out)\r\n  10 surround71, ALSA (0 in, 2 out)\r\n  11 hdmi, ALSA (0 in, 8 out)\r\n* 12 default, ALSA (128 in, 128 out)\r\n  13 dmix, ALSA (0 in, 2 out)\r\n```\r\nFrom my understanding none of these is the Bluetooth headphone connect to my laptop. How can I get sounddevice to detect my bluetooth headphones? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/267", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/267/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/267/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/267", "id": 666033801, "node_id": "MDU6SXNzdWU2NjYwMzM4MDE=", "number": 267, "title": "Mac Mic Stream only giving indata as 0's", "user": {"login": "vineyugave", "id": 3990452, "node_id": "MDQ6VXNlcjM5OTA0NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3990452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vineyugave", "html_url": "https://github.com/vineyugave", "followers_url": "https://api.github.com/users/vineyugave/followers", "following_url": "https://api.github.com/users/vineyugave/following{/other_user}", "gists_url": "https://api.github.com/users/vineyugave/gists{/gist_id}", "starred_url": "https://api.github.com/users/vineyugave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vineyugave/subscriptions", "organizations_url": "https://api.github.com/users/vineyugave/orgs", "repos_url": "https://api.github.com/users/vineyugave/repos", "events_url": "https://api.github.com/users/vineyugave/events{/privacy}", "received_events_url": "https://api.github.com/users/vineyugave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-07-27T07:00:00Z", "updated_at": "2020-08-19T19:32:40Z", "closed_at": "2020-08-19T19:32:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using a streamer like this \r\n\r\n``` \r\nself.audio_streamer = sd.Stream(device=self.input_device, channels=self.channels,\r\n                                        samplerate=self.sampling_rate, dtype='int16',\r\n                                        callback=self.update_audio_feed, blocksize=self.audio_block_size,\r\n                                        latency='low')\r\n\r\n\r\n\r\ndef update_audio_feed(self, indata, outdata, frames, time, status):\r\n        print(\"update_audio_feed\")\r\n        if status:\r\n            print(status, file=sys.stderr)\r\n\r\n        print(indata)\r\n        outdata.fill(0)\r\n\r\n\r\nOutput :\r\n\r\nThe indata is an array with 0's always from the callback.\r\nupdate_audio_feed\r\n[[0]\r\n [0]\r\n [0]\r\n ...\r\n [0]\r\n [0]\r\n [0]]\r\n\r\nSounddevice is detectingt the mic fine but not getting the signal :\r\nDevice Info: {'name': 'MacBook Pro Microphone', 'hostapi': 0, 'max_input_channels': 1, 'max_output_channels': 0, 'default_low_input_latency': 0.04852607709750567, 'default_low_output_latency': 0.01, 'default_high_input_latency': 0.05868480725623583, 'default_high_output_latency': 0.1, 'default_samplerate': 44100.0}\r\nSampling rate: 44100.0 \r\n```\r\n\r\n\r\nAny ideas what is going on ? I checked that PortAudio is installed fine .. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/261", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/261/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/261/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/261", "id": 654066992, "node_id": "MDU6SXNzdWU2NTQwNjY5OTI=", "number": 261, "title": "How to record or stream sound though mono channel ?", "user": {"login": "multinucliated", "id": 16854852, "node_id": "MDQ6VXNlcjE2ODU0ODUy", "avatar_url": "https://avatars1.githubusercontent.com/u/16854852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/multinucliated", "html_url": "https://github.com/multinucliated", "followers_url": "https://api.github.com/users/multinucliated/followers", "following_url": "https://api.github.com/users/multinucliated/following{/other_user}", "gists_url": "https://api.github.com/users/multinucliated/gists{/gist_id}", "starred_url": "https://api.github.com/users/multinucliated/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/multinucliated/subscriptions", "organizations_url": "https://api.github.com/users/multinucliated/orgs", "repos_url": "https://api.github.com/users/multinucliated/repos", "events_url": "https://api.github.com/users/multinucliated/events{/privacy}", "received_events_url": "https://api.github.com/users/multinucliated/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-09T13:36:31Z", "updated_at": "2020-07-09T14:51:20Z", "closed_at": "2020-07-09T14:51:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im using one of your example for my personal project in which channel should be mono.\r\n\r\nIm checking using VLC ,opening wav file and looking for codec information,where it show as \r\n\r\n`Channels: Stereo`\r\n\r\nBut I want recorded sound info as \r\n\r\n`Channels: Mono`\r\n\r\nCan you help me how to do ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/238", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/238/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/238/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/238", "id": 606349266, "node_id": "MDU6SXNzdWU2MDYzNDkyNjY=", "number": 238, "title": "What is `blocksize` and callback's `frames` param?", "user": {"login": "hyansuper", "id": 44317361, "node_id": "MDQ6VXNlcjQ0MzE3MzYx", "avatar_url": "https://avatars0.githubusercontent.com/u/44317361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hyansuper", "html_url": "https://github.com/hyansuper", "followers_url": "https://api.github.com/users/hyansuper/followers", "following_url": "https://api.github.com/users/hyansuper/following{/other_user}", "gists_url": "https://api.github.com/users/hyansuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/hyansuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hyansuper/subscriptions", "organizations_url": "https://api.github.com/users/hyansuper/orgs", "repos_url": "https://api.github.com/users/hyansuper/repos", "events_url": "https://api.github.com/users/hyansuper/events{/privacy}", "received_events_url": "https://api.github.com/users/hyansuper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-04-24T14:19:38Z", "updated_at": "2020-04-26T08:28:59Z", "closed_at": "2020-04-26T08:28:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need a little help to understand what is `blocksize` and callback's `frames` param.\r\n\r\nAt first I thought len(outdata) equals frames, and so it is with [play-a-sine-signal](https://python-sounddevice.readthedocs.io/en/0.3.15/examples.html#play-a-sine-signal) example (on my machine), but no with [play-a-very-long-sound-file](https://python-sounddevice.readthedocs.io/en/0.3.15/examples.html#play-a-very-long-sound-file)\r\n\r\nI read the api section in doc:https://python-sounddevice.readthedocs.io/en/0.3.15/api/streams.html, but I still don't understand what is the relationship between blocksize, frames, and len(outdata). could you please explain more? Thank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/233", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/233/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/233/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/233", "id": 600186955, "node_id": "MDU6SXNzdWU2MDAxODY5NTU=", "number": 233, "title": "Error opening InputStream: Unanticipated host error [PaErrorCode -9999]: 'Undefined external error.' [MME error 1]", "user": {"login": "tigershan1130", "id": 39791762, "node_id": "MDQ6VXNlcjM5NzkxNzYy", "avatar_url": "https://avatars2.githubusercontent.com/u/39791762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tigershan1130", "html_url": "https://github.com/tigershan1130", "followers_url": "https://api.github.com/users/tigershan1130/followers", "following_url": "https://api.github.com/users/tigershan1130/following{/other_user}", "gists_url": "https://api.github.com/users/tigershan1130/gists{/gist_id}", "starred_url": "https://api.github.com/users/tigershan1130/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tigershan1130/subscriptions", "organizations_url": "https://api.github.com/users/tigershan1130/orgs", "repos_url": "https://api.github.com/users/tigershan1130/repos", "events_url": "https://api.github.com/users/tigershan1130/events{/privacy}", "received_events_url": "https://api.github.com/users/tigershan1130/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-15T10:19:37Z", "updated_at": "2020-04-16T02:49:50Z", "closed_at": "2020-04-16T02:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "`\r\nimport sounddevice as sd\r\n\r\nif __name__ == '__main__':\r\n    duration = 2\r\n    print(sd.query_devices())\r\n\r\n    #sd.default.device[0] = 6\r\n    sd.default.channels = 2\r\n\r\n\r\n    print(\"start recording..\")\r\n    print(sd.default.device)\r\n    print(sd.default.channels)\r\n    print(sd.default.extra_settings)\r\n    mydata = sd.rec(int(16000 * duration), blocking=True)\r\n    print(\"end recording...\")\r\n   \r\n    sd.wait()\r\n    sd.play(mydata)`\r\n\r\n Below is my audio input and output \r\n Input>  1 Microphone (Realtek(R) Audio), MME (2 in, 0 out)\r\n output<  4 Speakers/Headphones (Realtek(R), MME (0 in, 2 out)\r\nI had very simple code to run on my laptop trying to use my laptop's default realtek audio recording...\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/225", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/225/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/225/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/225", "id": 573299740, "node_id": "MDU6SXNzdWU1NzMyOTk3NDA=", "number": 225, "title": "Win10: AttributeError: partially initialized module 'sounddevice' has no attribute 'rec'", "user": {"login": "LenStruttmann", "id": 61624739, "node_id": "MDQ6VXNlcjYxNjI0NzM5", "avatar_url": "https://avatars2.githubusercontent.com/u/61624739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LenStruttmann", "html_url": "https://github.com/LenStruttmann", "followers_url": "https://api.github.com/users/LenStruttmann/followers", "following_url": "https://api.github.com/users/LenStruttmann/following{/other_user}", "gists_url": "https://api.github.com/users/LenStruttmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/LenStruttmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LenStruttmann/subscriptions", "organizations_url": "https://api.github.com/users/LenStruttmann/orgs", "repos_url": "https://api.github.com/users/LenStruttmann/repos", "events_url": "https://api.github.com/users/LenStruttmann/events{/privacy}", "received_events_url": "https://api.github.com/users/LenStruttmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-29T13:56:23Z", "updated_at": "2020-03-01T16:29:25Z", "closed_at": "2020-03-01T16:29:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I seem to be have trouble using sounddevice on Win10:\r\n\r\nD:\\SDRSharp\\Recordings>pip3 list\r\nPackage         Version\r\n--------------- --------\r\nBitVector       3.4.9\r\ncycler          0.10.0\r\nkiwisolver      1.1.0\r\nmatplotlib      3.1.2\r\nnumpy           1.18.1\r\nopencv-python   4.2.0.32\r\npandas          0.25.3\r\npip             20.0.2\r\npyparsing       2.4.6\r\npython-dateutil 2.8.1\r\npytz            2019.3\r\nscipy           1.4.1\r\nsetuptools      41.2.0\r\nsix             1.14.0\r\n\r\nD:\\SDRSharp\\Recordings>pip3 install sounddevice-0.3.14-cp38-cp38-win_amd64.whl --no-cache-dir\r\nProcessing d:\\sdrsharp\\recordings\\sounddevice-0.3.14-cp38-cp38-win_amd64.whl\r\nCollecting CFFI>=1.0\r\n  Downloading cffi-1.14.0-cp38-cp38-win_amd64.whl (177 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 177 kB 656 kB/s\r\nCollecting pycparser\r\n  Downloading pycparser-2.19.tar.gz (158 kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 158 kB 3.3 MB/s\r\nInstalling collected packages: pycparser, CFFI, sounddevice\r\n    Running setup.py install for pycparser ... done\r\nSuccessfully installed CFFI-1.14.0 pycparser-2.19 sounddevice-0.3.14\r\n\r\nD:\\SDRSharp\\Recordings>python\r\nPython 3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 23:11:46) [MSC v.1916 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import sounddevice as sd\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"D:\\SDRSharp\\Recordings\\sounddevice.py\", line 7, in <module>\r\n    myrecording = sd.rec(duration * fs, samplerate=fs, channels=2, dtype='float64')\r\nAttributeError: partially initialized module 'sounddevice' has no attribute 'rec' (most likely due to a circular import)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/224", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/224/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/224/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/224", "id": 569369851, "node_id": "MDU6SXNzdWU1NjkzNjk4NTE=", "number": 224, "title": "Example live plotting not working", "user": {"login": "DominikRoB", "id": 37909163, "node_id": "MDQ6VXNlcjM3OTA5MTYz", "avatar_url": "https://avatars3.githubusercontent.com/u/37909163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DominikRoB", "html_url": "https://github.com/DominikRoB", "followers_url": "https://api.github.com/users/DominikRoB/followers", "following_url": "https://api.github.com/users/DominikRoB/following{/other_user}", "gists_url": "https://api.github.com/users/DominikRoB/gists{/gist_id}", "starred_url": "https://api.github.com/users/DominikRoB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DominikRoB/subscriptions", "organizations_url": "https://api.github.com/users/DominikRoB/orgs", "repos_url": "https://api.github.com/users/DominikRoB/repos", "events_url": "https://api.github.com/users/DominikRoB/events{/privacy}", "received_events_url": "https://api.github.com/users/DominikRoB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-22T18:00:23Z", "updated_at": "2020-02-23T17:23:26Z", "closed_at": "2020-02-23T17:23:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\nwhen I tried the live input plotting example, the code runs for 1-2 seconds, then plots a zero-line graph once, and then finishes the program.\r\nI am using Python 3.6.10 and run the script in PyCharm with default arguments.\r\n\r\nIn comparison, the text-mode spectogram runs as expected. Edit: Works expected in showing the spectogram - the While loop within the Input-Stream is only executed once for me, as well\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/222", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/222/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/222/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/222", "id": 565318453, "node_id": "MDU6SXNzdWU1NjUzMTg0NTM=", "number": 222, "title": "Sounddevice in Spyder", "user": {"login": "ninadfr", "id": 61052968, "node_id": "MDQ6VXNlcjYxMDUyOTY4", "avatar_url": "https://avatars1.githubusercontent.com/u/61052968?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ninadfr", "html_url": "https://github.com/ninadfr", "followers_url": "https://api.github.com/users/ninadfr/followers", "following_url": "https://api.github.com/users/ninadfr/following{/other_user}", "gists_url": "https://api.github.com/users/ninadfr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ninadfr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ninadfr/subscriptions", "organizations_url": "https://api.github.com/users/ninadfr/orgs", "repos_url": "https://api.github.com/users/ninadfr/repos", "events_url": "https://api.github.com/users/ninadfr/events{/privacy}", "received_events_url": "https://api.github.com/users/ninadfr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-14T13:11:27Z", "updated_at": "2020-05-31T11:28:36Z", "closed_at": "2020-05-31T11:28:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello !\r\nI am currently working on a project at school. For this I have to plot an oscilloscope. I found on the sounddevice page a programm called \"plot_input\" which is working, BUT only if I execute it in my computer terminal. The problem is that I need to plot it in a Tkinter interface in order to create a small application. What can be the reasons why it is only working on my computer terminal and not on an IPython console ? Any kind of help and answer would really be appreciated ! Thank you !\r\n\r\nNina\r\n\r\nPS : sorry for my english !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/219", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/219/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/219/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/219", "id": 559422906, "node_id": "MDU6SXNzdWU1NTk0MjI5MDY=", "number": 219, "title": "How to select Channels on Stream ?", "user": {"login": "dschiller", "id": 3144986, "node_id": "MDQ6VXNlcjMxNDQ5ODY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3144986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dschiller", "html_url": "https://github.com/dschiller", "followers_url": "https://api.github.com/users/dschiller/followers", "following_url": "https://api.github.com/users/dschiller/following{/other_user}", "gists_url": "https://api.github.com/users/dschiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/dschiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dschiller/subscriptions", "organizations_url": "https://api.github.com/users/dschiller/orgs", "repos_url": "https://api.github.com/users/dschiller/repos", "events_url": "https://api.github.com/users/dschiller/events{/privacy}", "received_events_url": "https://api.github.com/users/dschiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-04T00:54:18Z", "updated_at": "2020-03-18T10:28:55Z", "closed_at": "2020-03-18T10:28:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Non Streaming:\r\n\r\n```\r\nrecording = sd.rec(int(self.duration * self.fs), dtype='float32', mapping=[4, 5])\r\n```\r\n\r\nStreaming:\r\n\r\n```\r\nwith sd.InputStream(int(self.duration * self.fs), blocksize=1024, dtype='float32', callback=audio_callback):\r\n                sd.sleep(int(self.duration * 100))\r\n```\r\n\r\nHow to set ``mapping=[4, 5]`` here ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/218", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/218/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/218/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/218", "id": 554155446, "node_id": "MDU6SXNzdWU1NTQxNTU0NDY=", "number": 218, "title": "Cannot find a way to send signal to a specific ouput", "user": {"login": "fatchild", "id": 47759261, "node_id": "MDQ6VXNlcjQ3NzU5MjYx", "avatar_url": "https://avatars1.githubusercontent.com/u/47759261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fatchild", "html_url": "https://github.com/fatchild", "followers_url": "https://api.github.com/users/fatchild/followers", "following_url": "https://api.github.com/users/fatchild/following{/other_user}", "gists_url": "https://api.github.com/users/fatchild/gists{/gist_id}", "starred_url": "https://api.github.com/users/fatchild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fatchild/subscriptions", "organizations_url": "https://api.github.com/users/fatchild/orgs", "repos_url": "https://api.github.com/users/fatchild/repos", "events_url": "https://api.github.com/users/fatchild/events{/privacy}", "received_events_url": "https://api.github.com/users/fatchild/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226879031, "node_id": "MDU6TGFiZWwyMjY4NzkwMzE=", "url": "https://api.github.com/repos/spatialaudio/python-sounddevice/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-01-23T13:26:19Z", "updated_at": "2020-03-18T10:27:42Z", "closed_at": "2020-03-18T10:27:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Lexicon Omega Audio interface. I have written a small program from examples to send a sinewave to the output through MME. This works. I have had a go at selecting an ASIO output and using the channel_selector argument, but no luck. I get invalid number of channels. Is there a way I am missing to be able to pass an argument that says I want outdata to go to a specific output of the device I am using?\r\n\r\n\r\n```\r\nimport sounddevice as sd\r\nimport numpy as np\r\nimport scipy.stats as ss\r\nimport queue\r\n\r\nasio_out = sd.AsioSettings(channel_selectors=[1, 2])\r\n\r\nout_q = queue.Queue()\r\n\r\nglobal start_idx\r\nstart_idx = 0\r\n\r\ndef callback(outdata, frames, time, status):\r\n\r\n    global start_idx\r\n    t = (start_idx + np.arange(frames)) / 48000\r\n    t = t.reshape(-1, 1)\r\n    sine = 0.9 * np.sin(2 * np.pi * 1000 * t)\r\n\r\n    outdata[:] = sine\r\n    out_q.put(sine)\r\n\r\n    start_idx += frames\r\n\r\nwith sd.OutputStream(device=24, samplerate=48000, channels=4, blocksize=4096, callback=callback, extra_settings=asio_out):\r\n    while True:\r\n        pass\r\n\r\n```\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/216", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/216/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/216/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/216", "id": 540386253, "node_id": "MDU6SXNzdWU1NDAzODYyNTM=", "number": 216, "title": "Comparison with soundcard", "user": {"login": "mpariente", "id": 18496796, "node_id": "MDQ6VXNlcjE4NDk2Nzk2", "avatar_url": "https://avatars2.githubusercontent.com/u/18496796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpariente", "html_url": "https://github.com/mpariente", "followers_url": "https://api.github.com/users/mpariente/followers", "following_url": "https://api.github.com/users/mpariente/following{/other_user}", "gists_url": "https://api.github.com/users/mpariente/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpariente/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpariente/subscriptions", "organizations_url": "https://api.github.com/users/mpariente/orgs", "repos_url": "https://api.github.com/users/mpariente/repos", "events_url": "https://api.github.com/users/mpariente/events{/privacy}", "received_events_url": "https://api.github.com/users/mpariente/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-19T15:31:25Z", "updated_at": "2020-01-07T13:08:30Z", "closed_at": "2020-01-07T13:08:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks a lot for the soft, that looks very nice !\r\n\r\nI've been working with `soundcard` until now and I'd just like to know how it compares to it for real-time recording and playback loops. Did you do any comparison? \r\nThanks in advance ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/211", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/211/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/211/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/211", "id": 513881558, "node_id": "MDU6SXNzdWU1MTM4ODE1NTg=", "number": 211, "title": "Mention in readme and docs main page that sounddevice is cross-OS", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-29T12:26:58Z", "updated_at": "2019-12-02T22:53:50Z", "closed_at": "2019-12-02T22:53:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Many people who's use sounddevice are not familiar with PortAudio, and might not understand whether sounddevice is Windows-only or what. Mentioning that it works on Windows, Mac and Linux would be helpful, both on the readme and the main page of the docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/210", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/210/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/210/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/210", "id": 513022301, "node_id": "MDU6SXNzdWU1MTMwMjIzMDE=", "number": 210, "title": "Recording and processing audio that gets played by the speakers", "user": {"login": "ziebam", "id": 31964869, "node_id": "MDQ6VXNlcjMxOTY0ODY5", "avatar_url": "https://avatars1.githubusercontent.com/u/31964869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ziebam", "html_url": "https://github.com/ziebam", "followers_url": "https://api.github.com/users/ziebam/followers", "following_url": "https://api.github.com/users/ziebam/following{/other_user}", "gists_url": "https://api.github.com/users/ziebam/gists{/gist_id}", "starred_url": "https://api.github.com/users/ziebam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ziebam/subscriptions", "organizations_url": "https://api.github.com/users/ziebam/orgs", "repos_url": "https://api.github.com/users/ziebam/repos", "events_url": "https://api.github.com/users/ziebam/events{/privacy}", "received_events_url": "https://api.github.com/users/ziebam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-27T21:09:32Z", "updated_at": "2019-11-17T21:45:40Z", "closed_at": "2019-11-17T21:45:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI'd like to ask if it's possible to record/listen to the audio output (like Spotify music playing in the background) and then analyze/process it somehow? So far I've only succeeded in recording audio from the input device (i.e. the microphone) and I'm struggling to find a way to make it work how I want it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/206", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/206/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/206/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/206", "id": 506560486, "node_id": "MDU6SXNzdWU1MDY1NjA0ODY=", "number": 206, "title": "Split `sounddevice.py` to multiple files", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-14T10:10:57Z", "updated_at": "2019-10-14T19:52:36Z", "closed_at": "2019-10-14T19:52:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I took a glance at `sounddevice.py` to figure out #204. Oh boy, it's quite a big file, at 2781 lines. I suggest breaking it down to a package with around 5-10 files.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/205", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/205/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/205/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/205", "id": 506338731, "node_id": "MDU6SXNzdWU1MDYzMzg3MzE=", "number": 205, "title": "Break down the API Documentation page", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-13T15:16:53Z", "updated_at": "2019-10-22T13:38:44Z", "closed_at": "2019-10-22T13:38:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using the API Documentation page and its length is make it difficult to use. Streams are a complicated subject, and it doesn't help that their documentation is on the same page with the other features.\r\n\r\nIn the beginning of the page you have an \"API overview\" section with 7 bullets, I suggest that the division to pages be roughly as that of the bullets.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/200", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/200/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/200/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/200", "id": 494631645, "node_id": "MDU6SXNzdWU0OTQ2MzE2NDU=", "number": 200, "title": "Sounddevice.InputStream: Does not record audio with given input parameters", "user": {"login": "DennisMAtGit", "id": 53865546, "node_id": "MDQ6VXNlcjUzODY1NTQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/53865546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DennisMAtGit", "html_url": "https://github.com/DennisMAtGit", "followers_url": "https://api.github.com/users/DennisMAtGit/followers", "following_url": "https://api.github.com/users/DennisMAtGit/following{/other_user}", "gists_url": "https://api.github.com/users/DennisMAtGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/DennisMAtGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DennisMAtGit/subscriptions", "organizations_url": "https://api.github.com/users/DennisMAtGit/orgs", "repos_url": "https://api.github.com/users/DennisMAtGit/repos", "events_url": "https://api.github.com/users/DennisMAtGit/events{/privacy}", "received_events_url": "https://api.github.com/users/DennisMAtGit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-17T13:41:02Z", "updated_at": "2020-03-18T10:21:17Z", "closed_at": "2020-03-18T10:21:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI will try to explain my problem as clearly as possible. I developed an audio manager, whose one of the functions is audio recording. The language I used is `Python 3.6.2` on `Windows 10`. The application utilizes the `Sounddevice` library for the recording function. The issue is the library records the audio with the settings specified under windows sounds settings `Recording / Mic Properties / Advanced` rather than using the parameters given as input to the record function. For example, lets say it is selected in the windows sounds settings as `2 Channel, 16 Bit, 44000 Hz (CD-Quality)` and the record function call looks like below:\r\n\r\n    sounddevice.InputStream(samplerate=48000, channels=2, callback=self.callback)\r\n\r\nNow, the `Sounddevice` is supposed to record audio at 48 kHz but it records the audio at 44000 Hz and upsamples it to 48 KHz. Why is it so? Why the `Sounddevice` is not overwritting or updating the windows sound settings? What can I do to solve this problem?\r\n\r\nA minimal working example:\r\n\r\n    import sys\r\n    import queue\r\n    import tempfile\r\n    import numpy as np\r\n    import sounddevice as sd\r\n    import soundfile as sf\r\n    assert np\r\n\r\n    q = queue.Queue()\r\n\r\n    def callback(indata, frames, time, status):\r\n        \"\"\"\r\n        This is called from a separate thread for each audio block\r\n        \"\"\"\r\n        if status:\r\n            print(status, file=sys.stderr)\r\n        q.put(indata.copy())\r\n\r\n    # Unique file name for every recording\r\n    filename = tempfile.mktemp(prefix='untitled_', suffix='.wav', dir='')\r\n    # Make sure the file is open before recording anything\r\n    with sf.SoundFile(filename, mode='x', samplerate=48000, channels=2) as file:\r\n        with sd.InputStream(samplerate=48000, channels=2, callback=callback):\r\n            print('#' * 80)\r\n            print('press Ctrl+C to stop the recording')\r\n            print('#' * 80)\r\n            while True:\r\n                file.write(q.get())\r\n\r\nBut make sure that the windows sound settings has a different sampling rate than in the function call.\r\n\r\nThank you and looking forward to your feedbacks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/198", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/198/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/198/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/198", "id": 485964083, "node_id": "MDU6SXNzdWU0ODU5NjQwODM=", "number": 198, "title": "Why does my tone sound better with lower samplerate", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-08-27T18:27:08Z", "updated_at": "2019-09-30T18:36:18Z", "closed_at": "2019-09-02T09:02:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nHere is a snippet of code that I wrote that produces a piano-like tone using sounddevice:\r\n\r\n\r\n```python\r\nimport sys\r\nimport numbers\r\nimport math\r\n\r\nimport numpy as np\r\nimport sounddevice\r\n\r\n\r\nnote_length = 3\r\nfrequency = 400\r\nhalf_life = 0.2\r\nvolume = 1\r\n\r\ndef get_pressure(time: numbers.Rational) -> numbers.Rational:\r\n    overtones = {i: 2 / (i ** 1.3) for i in range(1, 13)}\r\n    if time < 0 or time > note_length:\r\n        return 0\r\n    result = 0\r\n    for overtone, overtone_volume in overtones.items():\r\n        result += overtone_volume * math.sin(\r\n            time * frequency * overtone * (math.pi * 2)\r\n        )\r\n    result *= volume * 2 ** (- time / half_life)\r\n    return result\r\n\r\n\r\ndef play(hz):\r\n    n_frames = int(hz * note_length)\r\n\r\n    t = np.linspace(0, note_length, n_frames, False)\r\n\r\n    array_1 = np.vectorize(get_pressure)(t)\r\n\r\n    # Ensure that highest value is in 16-bit range\r\n    array_2 = array_1 * (2 ** 15 - 1) / np.max(np.abs(array_1)) * 0.5\r\n    # Convert to 16-bit data\r\n    array_2 = array_2.astype(np.int16)\r\n\r\n    sounddevice.play(array_2, samplerate=hz)\r\n\r\n    sounddevice.wait()\r\n\r\n\r\nsample_rate = int(sys.argv[1] if len(sys.argv) >= 2 else 8000)\r\nplay(sample_rate)\r\n```\r\n\r\nI was surprised to learn that when you play it at 8KHz, which is the default, it sounds really life-like, but if you raise it to 16Khz, it sounds too computer-generated. Try it by copying it to a file and running it with the samplerate as the argument, like this: `python foo.py 16000` or `python foo.py 32000` .\r\n\r\nIs there something weird here I'm not thinking about that is causing this phenomenon? And if not, and it's just a crazy fluke, how can I preserve this quality of sound even when I'm playing at a higher quality?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/196", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/196/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/196/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/196", "id": 483296786, "node_id": "MDU6SXNzdWU0ODMyOTY3ODY=", "number": 196, "title": "silent record audio on mac os", "user": {"login": "tsungruihon", "id": 11624203, "node_id": "MDQ6VXNlcjExNjI0MjAz", "avatar_url": "https://avatars1.githubusercontent.com/u/11624203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsungruihon", "html_url": "https://github.com/tsungruihon", "followers_url": "https://api.github.com/users/tsungruihon/followers", "following_url": "https://api.github.com/users/tsungruihon/following{/other_user}", "gists_url": "https://api.github.com/users/tsungruihon/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsungruihon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsungruihon/subscriptions", "organizations_url": "https://api.github.com/users/tsungruihon/orgs", "repos_url": "https://api.github.com/users/tsungruihon/repos", "events_url": "https://api.github.com/users/tsungruihon/events{/privacy}", "received_events_url": "https://api.github.com/users/tsungruihon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-21T09:11:56Z", "updated_at": "2020-02-29T22:22:41Z", "closed_at": "2019-09-10T02:04:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use `sounddevice` to record. But the output record audio is just silent on mac os.\r\n\r\nIt would be very grateful if someone could give me a hint. Thanks a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/195", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/195/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/195/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/195", "id": 481760940, "node_id": "MDU6SXNzdWU0ODE3NjA5NDA=", "number": 195, "title": "Is it possible to get small piece of audio every few seconds while keeping stream opened?", "user": {"login": "Laope94", "id": 26734609, "node_id": "MDQ6VXNlcjI2NzM0NjA5", "avatar_url": "https://avatars1.githubusercontent.com/u/26734609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Laope94", "html_url": "https://github.com/Laope94", "followers_url": "https://api.github.com/users/Laope94/followers", "following_url": "https://api.github.com/users/Laope94/following{/other_user}", "gists_url": "https://api.github.com/users/Laope94/gists{/gist_id}", "starred_url": "https://api.github.com/users/Laope94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Laope94/subscriptions", "organizations_url": "https://api.github.com/users/Laope94/orgs", "repos_url": "https://api.github.com/users/Laope94/repos", "events_url": "https://api.github.com/users/Laope94/events{/privacy}", "received_events_url": "https://api.github.com/users/Laope94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-16T19:51:49Z", "updated_at": "2019-09-01T09:58:08Z", "closed_at": "2019-09-01T09:58:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am working on project, which ultimate goal is emotion classification from speech in real time (actually close to real time with short delay). I can handle feature extraction and classification, but somehow I need to come up with good method of input from microphone. Basically what I need to do is open stream, extract features from piece of audio long about two or three seconds, but keep stream opened so I won't loose any data in next piece to process. More clearly - open stream and get small piece of audio from it as output every few seconds. It doesn't matter if output is raw numpy array or .wav, I can handle both.\r\nI've experimented with looping of rec() , but that of course led to short dropouts between wavs. as stream was opening and closing everytime. Is there a way how to do this with sounddevice or should I be looking for something else?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/194", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/194/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/194/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/194", "id": 474204486, "node_id": "MDU6SXNzdWU0NzQyMDQ0ODY=", "number": 194, "title": "Feature request: Provide a way to play sound from a function", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-29T18:56:43Z", "updated_at": "2019-08-09T14:24:12Z", "closed_at": "2019-08-09T14:24:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think that a popular pattern with sounddevice is to create an array from a function (like sine, or a complicated sum of sines) and then play that array. Then, if you want to play the sound before building the array is finished, you have to use sounddevice's stream API, which in my opinion is a bit complicated.\r\n\r\nHere's a cool idea: Let me run code like this: \r\n\r\n```\r\ndef f(x):\r\n    return a * sin(b * x)\r\n\r\nsounddevice.play_function(f, sample_rate=10_000, length=60)\r\n```\r\n\r\nInstead of me creating an array, sounddevice will just automatically use the stream API based on the function.\r\n\r\nIt's also possible to make the length change dynamically, in case you don't want to decide in advance what the length will be. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/192", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/192/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/192/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/192", "id": 472915685, "node_id": "MDU6SXNzdWU0NzI5MTU2ODU=", "number": 192, "title": "Playing a file to two or more devices at once", "user": {"login": "JoJolM", "id": 51709842, "node_id": "MDQ6VXNlcjUxNzA5ODQy", "avatar_url": "https://avatars3.githubusercontent.com/u/51709842?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoJolM", "html_url": "https://github.com/JoJolM", "followers_url": "https://api.github.com/users/JoJolM/followers", "following_url": "https://api.github.com/users/JoJolM/following{/other_user}", "gists_url": "https://api.github.com/users/JoJolM/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoJolM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoJolM/subscriptions", "organizations_url": "https://api.github.com/users/JoJolM/orgs", "repos_url": "https://api.github.com/users/JoJolM/repos", "events_url": "https://api.github.com/users/JoJolM/events{/privacy}", "received_events_url": "https://api.github.com/users/JoJolM/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-25T14:58:47Z", "updated_at": "2019-08-13T09:13:29Z", "closed_at": "2019-08-13T09:13:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\nI'm using this library for a project and I'm currently trying to play a file to two connected devices. I tried threading but the sound would still play on the first device and then on the other one, I also tried launching two instances of the play method with the blocking set to false. I wanted to know if it is possible to play to more than one device at a time a file and if it is how would you do it and execute the functions in a rapid succession.\r\nI thank any of you who'll help me and btw the library works very well", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/191", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/191/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/191/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/191", "id": 469463373, "node_id": "MDU6SXNzdWU0Njk0NjMzNzM=", "number": 191, "title": "wait() not working on short sound-files", "user": {"login": "Rackor", "id": 2229573, "node_id": "MDQ6VXNlcjIyMjk1NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/2229573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rackor", "html_url": "https://github.com/Rackor", "followers_url": "https://api.github.com/users/Rackor/followers", "following_url": "https://api.github.com/users/Rackor/following{/other_user}", "gists_url": "https://api.github.com/users/Rackor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rackor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rackor/subscriptions", "organizations_url": "https://api.github.com/users/Rackor/orgs", "repos_url": "https://api.github.com/users/Rackor/repos", "events_url": "https://api.github.com/users/Rackor/events{/privacy}", "received_events_url": "https://api.github.com/users/Rackor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-17T21:49:45Z", "updated_at": "2020-03-18T10:17:37Z", "closed_at": "2020-03-18T10:17:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I experienced the bug, that when im using play() and wait() with a short .wav file, like a single beep (~under 1 sec), the program stops without any sound, but its working great if im using something longer, like 6 secs.\r\nIf i am adding a short time.sleep statement between play and wait, like 0.5 sec, it works with the short beep, too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/190", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/190/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/190/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/190", "id": 467770510, "node_id": "MDU6SXNzdWU0Njc3NzA1MTA=", "number": 190, "title": "[error] Runtime Error in pa_win_wdmks.c", "user": {"login": "zzxjl1", "id": 34417063, "node_id": "MDQ6VXNlcjM0NDE3MDYz", "avatar_url": "https://avatars3.githubusercontent.com/u/34417063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zzxjl1", "html_url": "https://github.com/zzxjl1", "followers_url": "https://api.github.com/users/zzxjl1/followers", "following_url": "https://api.github.com/users/zzxjl1/following{/other_user}", "gists_url": "https://api.github.com/users/zzxjl1/gists{/gist_id}", "starred_url": "https://api.github.com/users/zzxjl1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zzxjl1/subscriptions", "organizations_url": "https://api.github.com/users/zzxjl1/orgs", "repos_url": "https://api.github.com/users/zzxjl1/repos", "events_url": "https://api.github.com/users/zzxjl1/events{/privacy}", "received_events_url": "https://api.github.com/users/zzxjl1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226879027, "node_id": "MDU6TGFiZWwyMjY4NzkwMjc=", "url": "https://api.github.com/repos/spatialaudio/python-sounddevice/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-13T21:59:00Z", "updated_at": "2019-07-16T04:49:17Z", "closed_at": "2019-07-16T04:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "PS C:\\Users\\z> python\r\nPython 3.6.3 (v3.6.3:2c5fed8, Oct  3 2017, 18:11:49) [MSC v.1900 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import sounddevice\r\nAssertion failed!\r\n\r\nProgram: C:\\Users\\z\\AppData\\Local\\Programs\\Python\\Python36\\python.exe\r\nFile: src/hostapi/wdmks/pa_win_wdmks.c, Line 1081\r\n\r\nExpression: FALSE\r\n\r\nThis application has requested the Runtime to terminate it in an unusual way.\r\nPlease contact the application's support team for more information.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/189", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/189/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/189/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/189/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/189", "id": 462429810, "node_id": "MDU6SXNzdWU0NjI0Mjk4MTA=", "number": 189, "title": "Documentation: Give example of populating numpy array with sine wave and playing it ", "user": {"login": "cool-RR", "id": 56778, "node_id": "MDQ6VXNlcjU2Nzc4", "avatar_url": "https://avatars1.githubusercontent.com/u/56778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cool-RR", "html_url": "https://github.com/cool-RR", "followers_url": "https://api.github.com/users/cool-RR/followers", "following_url": "https://api.github.com/users/cool-RR/following{/other_user}", "gists_url": "https://api.github.com/users/cool-RR/gists{/gist_id}", "starred_url": "https://api.github.com/users/cool-RR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cool-RR/subscriptions", "organizations_url": "https://api.github.com/users/cool-RR/orgs", "repos_url": "https://api.github.com/users/cool-RR/repos", "events_url": "https://api.github.com/users/cool-RR/events{/privacy}", "received_events_url": "https://api.github.com/users/cool-RR/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-30T17:53:30Z", "updated_at": "2019-08-25T16:28:48Z", "closed_at": "2019-08-25T16:28:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/188", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/188/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/188/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/188", "id": 459912204, "node_id": "MDU6SXNzdWU0NTk5MTIyMDQ=", "number": 188, "title": "In/out callback method on Linux", "user": {"login": "ryback08", "id": 24714750, "node_id": "MDQ6VXNlcjI0NzE0NzUw", "avatar_url": "https://avatars0.githubusercontent.com/u/24714750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryback08", "html_url": "https://github.com/ryback08", "followers_url": "https://api.github.com/users/ryback08/followers", "following_url": "https://api.github.com/users/ryback08/following{/other_user}", "gists_url": "https://api.github.com/users/ryback08/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryback08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryback08/subscriptions", "organizations_url": "https://api.github.com/users/ryback08/orgs", "repos_url": "https://api.github.com/users/ryback08/repos", "events_url": "https://api.github.com/users/ryback08/events{/privacy}", "received_events_url": "https://api.github.com/users/ryback08/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-06-24T14:05:56Z", "updated_at": "2019-09-30T17:03:59Z", "closed_at": "2019-09-30T17:03:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nI try test sounddevice lib in callback mode with stream class (need 2 channels in+out at same time).\r\nMy program works fine in windows 10, with python 3.6, portaudio 1.9.6, with different mode\r\nBut, the same program didn't works on linux ubuntu with alsa (tested on different hardware 16.04, 18.04, 19.04, python 3.6, 3.7) and raspberry with usb soundcard. I have many random \"crak\" only on linux  when i generate my sound (just sinusoidal tone with numpy)\r\n\r\nSo I tested \"Input to Output Pass-Through\" ([wire.py](https://python-sounddevice.readthedocs.io/en/0.3.13/_downloads/wire.py)) in exemple program documentation.\r\nSame conclusion and fault, works on windows, not in linux (didn't yet try in raspberry)\r\nIn configure manualy device with \"sysdefault, ALSA\"\r\n`with sd.Stream(device=( x, x), .....`\r\n\r\nI see that i have \"status\" flag on callback give input underflow, overflow or twice.\r\n\r\nhow can I solve the problem ?\r\nwhat can i do to help you to solve the problem ?\r\n\r\n\r\n_that is the output, you can see frame drop_\r\n![sounddevice_wire](https://user-images.githubusercontent.com/24714750/60021355-287a3500-9692-11e9-9aa9-6b78de22d380.jpg)\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/187", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/187/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/187/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/187", "id": 444150860, "node_id": "MDU6SXNzdWU0NDQxNTA4NjA=", "number": 187, "title": "Proper threading and thread-safety with sounddevice?", "user": {"login": "sparkyb", "id": 558826, "node_id": "MDQ6VXNlcjU1ODgyNg==", "avatar_url": "https://avatars1.githubusercontent.com/u/558826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sparkyb", "html_url": "https://github.com/sparkyb", "followers_url": "https://api.github.com/users/sparkyb/followers", "following_url": "https://api.github.com/users/sparkyb/following{/other_user}", "gists_url": "https://api.github.com/users/sparkyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sparkyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sparkyb/subscriptions", "organizations_url": "https://api.github.com/users/sparkyb/orgs", "repos_url": "https://api.github.com/users/sparkyb/repos", "events_url": "https://api.github.com/users/sparkyb/events{/privacy}", "received_events_url": "https://api.github.com/users/sparkyb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-14T22:21:03Z", "updated_at": "2019-06-25T20:54:31Z", "closed_at": "2019-06-25T17:22:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm building a higher-level multi-channel audio playback library built on top of sounddevice that wraps sounddevice and some other libraries (like PySoundFile and python-samplerate) to support easily reading audio files, playing multiple files as once (may require automatic samplerate conversion), adjusting/fading volume, complex channel remapping, and playback event callbacks. I'm a bit confused trying to figure out what is best practice for how many threads to use and what to do on each thread and yet be threadsafe enough to hide this complexity from users of my library who just want to asynchronously play audio files, adjust their volume while they're playing, and be alerted when they've finished without having to actually think about the streaming and so forth.\r\n\r\nFrom examples it seems standard practice to use callback streams rather than blocking streams and to use a queue to pass blocks of samples from the thread that is generating the data to the callback function (running in a thread created by PortAudio, I assume) in order to prevent the callback from being able to block. Doing this, I effectively have 3 threads: the main thread that application would use to request sound files to play, a processing thread in my library that does the work of reading those sound files in chunks and enqueuing them (asynchronously with respect to the main thread), and the stream callback thread.\r\n\r\nOne question I have is, what's the value of having that separate processing thread instead of doing all the file reading, channel remapping, etc in the callback or just writing to a blocking stream from the processing thread? I know that the callback should do as little as possible so it doesn't block, but if my processing thread can't generate the blocks of audio at the same rate the callback thread consumes them, then I'm going to get audio glitches/drop-outs anyway. Is this extra thread not just overhead if I need to hope I can generate audio fast enough regardless? Is the callback blocking for too long somehow worse than it just returning zeros one frame if the queue is empty? Or is there some reason it needs to return faster than the full amount of time between frames? Or is it simply about using the size of the queue as a buffer so that you won't get dropouts if an occasionally slow to generate frame only slightly drains the queues as long as the average is fast enough?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/186", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/186/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/186/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/186", "id": 443040409, "node_id": "MDU6SXNzdWU0NDMwNDA0MDk=", "number": 186, "title": "How does Sounddevice handle simultaneous play and rec", "user": {"login": "Den336", "id": 49614912, "node_id": "MDQ6VXNlcjQ5NjE0OTEy", "avatar_url": "https://avatars2.githubusercontent.com/u/49614912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Den336", "html_url": "https://github.com/Den336", "followers_url": "https://api.github.com/users/Den336/followers", "following_url": "https://api.github.com/users/Den336/following{/other_user}", "gists_url": "https://api.github.com/users/Den336/gists{/gist_id}", "starred_url": "https://api.github.com/users/Den336/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Den336/subscriptions", "organizations_url": "https://api.github.com/users/Den336/orgs", "repos_url": "https://api.github.com/users/Den336/repos", "events_url": "https://api.github.com/users/Den336/events{/privacy}", "received_events_url": "https://api.github.com/users/Den336/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226879031, "node_id": "MDU6TGFiZWwyMjY4NzkwMzE=", "url": "https://api.github.com/repos/spatialaudio/python-sounddevice/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-11T22:05:20Z", "updated_at": "2020-02-18T13:04:14Z", "closed_at": "2020-02-18T13:03:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\nNot an issue as such.\r\nI want to develop an understanding of how sounddevice handles simultaneous playrec.\r\n\r\nIf I try sounddevice.play and sounddevice.rec in different processes via multiprocessing , the playback affects the recorded audio. To clarify I listen to the file being played through headphones while recording so the interference I presume is from input and output through soundcard.\r\nUsing sounddevice.playrec - no such interference is heard. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/183", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/183/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/183/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/183", "id": 439580696, "node_id": "MDU6SXNzdWU0Mzk1ODA2OTY=", "number": 183, "title": "Volume boosted to insane levels", "user": {"login": "SimLoads", "id": 35179439, "node_id": "MDQ6VXNlcjM1MTc5NDM5", "avatar_url": "https://avatars2.githubusercontent.com/u/35179439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimLoads", "html_url": "https://github.com/SimLoads", "followers_url": "https://api.github.com/users/SimLoads/followers", "following_url": "https://api.github.com/users/SimLoads/following{/other_user}", "gists_url": "https://api.github.com/users/SimLoads/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimLoads/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimLoads/subscriptions", "organizations_url": "https://api.github.com/users/SimLoads/orgs", "repos_url": "https://api.github.com/users/SimLoads/repos", "events_url": "https://api.github.com/users/SimLoads/events{/privacy}", "received_events_url": "https://api.github.com/users/SimLoads/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-02T13:05:45Z", "updated_at": "2019-09-25T10:26:23Z", "closed_at": "2019-09-25T10:26:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if this is just me, but anything I play with Sounddevices sounds like its being sent through an overdrive pedal. It's insanely loud - what can be done?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/182", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/182/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/182/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/182", "id": 436938881, "node_id": "MDU6SXNzdWU0MzY5Mzg4ODE=", "number": 182, "title": "Tutorial / Workflow", "user": {"login": "mc-seatown", "id": 41558793, "node_id": "MDQ6VXNlcjQxNTU4Nzkz", "avatar_url": "https://avatars3.githubusercontent.com/u/41558793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mc-seatown", "html_url": "https://github.com/mc-seatown", "followers_url": "https://api.github.com/users/mc-seatown/followers", "following_url": "https://api.github.com/users/mc-seatown/following{/other_user}", "gists_url": "https://api.github.com/users/mc-seatown/gists{/gist_id}", "starred_url": "https://api.github.com/users/mc-seatown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mc-seatown/subscriptions", "organizations_url": "https://api.github.com/users/mc-seatown/orgs", "repos_url": "https://api.github.com/users/mc-seatown/repos", "events_url": "https://api.github.com/users/mc-seatown/events{/privacy}", "received_events_url": "https://api.github.com/users/mc-seatown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-24T22:46:39Z", "updated_at": "2019-04-28T17:47:40Z", "closed_at": "2019-04-28T17:47:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pyaudio does not work with my current setup. Sounddevices appears to do everything I want, but I am unsure how to pass a RawStream to a device output. I have set up my devices. My raw streaming code runs without error, but I don't hear anything. Is there documentation with a simple workflow to simply load audio into a Raw Stream and record that stream? I can't find the answer anywhere. My sincere apologies for such a basic question. I believe my issue could be useful for those who are just beginning the process of signal processing. I can use Librosa to covert to frequency and create an array, but I'd like to simply record an input for now, save that file and open in Librosa. Again, apologies... ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/180", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/180/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/180/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/180", "id": 435103999, "node_id": "MDU6SXNzdWU0MzUxMDM5OTk=", "number": 180, "title": "Exception: Exception: Error during playback: output underflow", "user": {"login": "amoxuk", "id": 26641021, "node_id": "MDQ6VXNlcjI2NjQxMDIx", "avatar_url": "https://avatars2.githubusercontent.com/u/26641021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoxuk", "html_url": "https://github.com/amoxuk", "followers_url": "https://api.github.com/users/amoxuk/followers", "following_url": "https://api.github.com/users/amoxuk/following{/other_user}", "gists_url": "https://api.github.com/users/amoxuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoxuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoxuk/subscriptions", "organizations_url": "https://api.github.com/users/amoxuk/orgs", "repos_url": "https://api.github.com/users/amoxuk/repos", "events_url": "https://api.github.com/users/amoxuk/events{/privacy}", "received_events_url": "https://api.github.com/users/amoxuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-04-19T08:56:20Z", "updated_at": "2020-03-18T10:15:19Z", "closed_at": "2020-03-18T10:15:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python \r\n           data, fs = sf.read(music, dtype='int16')\r\n            sd.default.channels = [2, 2]\r\n            sd.default.device = [input, output]\r\n            sd.default.samplerate = fs\r\n            my_record = sd.playrec(data)\r\n            status = sd.wait()\r\n            if status:\r\n                raise Exception('Error during playback: ' + str(status))\r\n```\r\nTraceback (most recent call last):\r\n  File \"F:/VCS-RF/Lib/AudioTest/AudioTest.py\", line 252, in <module>\r\n    at.paly_record(\"Standard_20s.wav\", \"new_Standard_20s.wav\", input=u'MZ0380 PCI, Analog 01 Audio (MZ', output=u'DigitalOutput (NVIDIA High Defi')\r\n  File \"F:/VCS-RF/Lib/AudioTest/AudioTest.py\", line 110, in paly_record\r\n    raise Exception(type(e).__name__ + ': ' + str(e))\r\nException: Exception: Error during playback: output underflow\r\n\r\nI have tried to change `sd.default.blocksize = 512`. But it cannot work well.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/179", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/179/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/179/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/179", "id": 431811546, "node_id": "MDU6SXNzdWU0MzE4MTE1NDY=", "number": 179, "title": "Can I change windows default setting by sounddevice?", "user": {"login": "KzDog", "id": 48339783, "node_id": "MDQ6VXNlcjQ4MzM5Nzgz", "avatar_url": "https://avatars0.githubusercontent.com/u/48339783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KzDog", "html_url": "https://github.com/KzDog", "followers_url": "https://api.github.com/users/KzDog/followers", "following_url": "https://api.github.com/users/KzDog/following{/other_user}", "gists_url": "https://api.github.com/users/KzDog/gists{/gist_id}", "starred_url": "https://api.github.com/users/KzDog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KzDog/subscriptions", "organizations_url": "https://api.github.com/users/KzDog/orgs", "repos_url": "https://api.github.com/users/KzDog/repos", "events_url": "https://api.github.com/users/KzDog/events{/privacy}", "received_events_url": "https://api.github.com/users/KzDog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-11T03:20:00Z", "updated_at": "2019-04-11T09:27:43Z", "closed_at": "2019-04-11T09:27:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "If there are two audio input interface on my windows: **Mac-in** and **Line-in** ,can I set one of them to be a default input and make it work on windows?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/178", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/178/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/178/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/178", "id": 430300890, "node_id": "MDU6SXNzdWU0MzAzMDA4OTA=", "number": 178, "title": "here are some question when i play and record .wav file", "user": {"login": "amoxuk", "id": 26641021, "node_id": "MDQ6VXNlcjI2NjQxMDIx", "avatar_url": "https://avatars2.githubusercontent.com/u/26641021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amoxuk", "html_url": "https://github.com/amoxuk", "followers_url": "https://api.github.com/users/amoxuk/followers", "following_url": "https://api.github.com/users/amoxuk/following{/other_user}", "gists_url": "https://api.github.com/users/amoxuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/amoxuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amoxuk/subscriptions", "organizations_url": "https://api.github.com/users/amoxuk/orgs", "repos_url": "https://api.github.com/users/amoxuk/repos", "events_url": "https://api.github.com/users/amoxuk/events{/privacy}", "received_events_url": "https://api.github.com/users/amoxuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-08T07:40:12Z", "updated_at": "2019-04-08T08:23:13Z", "closed_at": "2019-04-08T08:16:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "win7 64bit python 2.7\r\nuse [1,5] as follow\r\n\r\n```\r\n>  1 (Realtek High Definiti, MME (2 in, 0 out)\r\n<  5 (Realtek High Definition, MME (0 in, 2 out)\r\n```\r\n\r\nbut when i use wave lib to read the record, throw an error: wave.Error: unknown format: 3\r\ni found the format is \r\n`#define | WAVE_FORMAT_IEEE_FLOAT\u00a0\u00a0\u00a00x0003 /* Microsoft Corporation */` from `https://www.videolan.org/developers/vlc/doc/doxygen/html/vlc__codecs_8h.html`\r\n\r\nhowever, the inputstream is a stereo stream. how can i record the stereo as pyaudio do?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/175", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/175/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/175/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/175", "id": 426080865, "node_id": "MDU6SXNzdWU0MjYwODA4NjU=", "number": 175, "title": "Cancun Asio Driver not detected", "user": {"login": "yoachimhoryn", "id": 42274044, "node_id": "MDQ6VXNlcjQyMjc0MDQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/42274044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoachimhoryn", "html_url": "https://github.com/yoachimhoryn", "followers_url": "https://api.github.com/users/yoachimhoryn/followers", "following_url": "https://api.github.com/users/yoachimhoryn/following{/other_user}", "gists_url": "https://api.github.com/users/yoachimhoryn/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoachimhoryn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoachimhoryn/subscriptions", "organizations_url": "https://api.github.com/users/yoachimhoryn/orgs", "repos_url": "https://api.github.com/users/yoachimhoryn/repos", "events_url": "https://api.github.com/users/yoachimhoryn/events{/privacy}", "received_events_url": "https://api.github.com/users/yoachimhoryn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-27T17:05:04Z", "updated_at": "2019-04-04T09:51:07Z", "closed_at": "2019-04-04T09:07:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI hope you can help me with this issue\r\nMy release of sounddevice is 0.3.13 and my version of portaudio is V19.6.0-devel\r\nI have a sound card connected, model CANCUN 442-Mic.\r\nI have installed the latest drivers.\r\nWhen I use another app, the CANCUN ASIO DRIVER is detected\r\nHowever, when I use sd.query_devices(), I only get the following list :\r\n\r\n```\r\n   0 Mappeur de sons Microsoft - Input, MME (2 in, 0 out)\r\n>  1 Microphone sur casque (Jabra EV, MME (2 in, 0 out)\r\n   2 CANCUN AES In 1 (CANCUN 442-Mic, MME (2 in, 0 out)\r\n   3 CANCUN AES In 2 (CANCUN 442-Mic, MME (2 in, 0 out)\r\n   4 CANCUN Analog In 3/4 (CANCUN 44, MME (2 in, 0 out)\r\n   5 CANCUN Analog In 1/2 (CANCUN 44, MME (2 in, 0 out)\r\n   6 Mappeur de sons Microsoft - Output, MME (0 in, 2 out)\r\n<  7 CANCUN Analog Out 1/2 (CANCUN 4, MME (0 in, 2 out)\r\n   8 CANCUN AES Out 2 (CANCUN 442-Mi, MME (0 in, 2 out)\r\n   9 CANCUN AES Out 1 (CANCUN 442-Mi, MME (0 in, 2 out)\r\n  10 CANCUN Analog Out 3/4 (CANCUN 4, MME (0 in, 2 out)\r\n  11 Casque pour t\u00e9l\u00e9phone (Jabra EV, MME (0 in, 2 out)\r\n  12 Haut-parleurs / \u00e9couteurs (Real, MME (0 in, 2 out)\r\n```\r\n\r\nNo sign of the CANCUN ASIO DRIVER\r\n\r\nAny idea on how to solve this ?\r\nThanks for your help\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/174", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/174/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/174/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/174", "id": 416315439, "node_id": "MDU6SXNzdWU0MTYzMTU0Mzk=", "number": 174, "title": "PortAudio not able to use my default recording device", "user": {"login": "demongolem", "id": 1395338, "node_id": "MDQ6VXNlcjEzOTUzMzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/1395338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/demongolem", "html_url": "https://github.com/demongolem", "followers_url": "https://api.github.com/users/demongolem/followers", "following_url": "https://api.github.com/users/demongolem/following{/other_user}", "gists_url": "https://api.github.com/users/demongolem/gists{/gist_id}", "starred_url": "https://api.github.com/users/demongolem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/demongolem/subscriptions", "organizations_url": "https://api.github.com/users/demongolem/orgs", "repos_url": "https://api.github.com/users/demongolem/repos", "events_url": "https://api.github.com/users/demongolem/events{/privacy}", "received_events_url": "https://api.github.com/users/demongolem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-01T23:09:17Z", "updated_at": "2019-03-01T23:14:34Z", "closed_at": "2019-03-01T23:14:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I access PortAudio by calling the python sounddevice library.  With my current setup, I can do a number of different commands which try to record (such as googlesamples-assistant-pushtotalk) and I end up with the same error:\r\n\r\n> sounddevice.PortAudioError: Error opening RawStream: Device unavailable [PaErrorCode -9985]\r\n\r\nNow, the error occurs with the following line in the python:\r\n\r\n`_lib.Pa_OpenStream(self._ptr, iparameters, oparameters,\r\n                                  samplerate, blocksize, stream_flags,\r\n                                  callback_ptr, userdata),\r\n               'Error opening {0}'.format(self.__class__.__name__)`\r\n\r\nSo we see here, it is the call the OpenStream which does not succeed.\r\n\r\nMy default input device (the one plugged in and I use for general tasks) is:\r\n\r\n> 1 Microphone (Plantronics C320), MME (2 in, 0 out)\r\n\r\nWhereas the only device that will work (say if I unplug the headphone) is\r\n\r\n> 17 Jack Mic (Realtek HD Audio Front Mic input), Windows WDM-KS (2 in, 0 out)\r\n\r\nSo the issue I present is that PortAudio is not recognizing my Plantronics headphone even though Windows 10 knows that it is my default input device and I really would like to use that one for recording.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/172", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/172/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/172/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/172", "id": 414315549, "node_id": "MDU6SXNzdWU0MTQzMTU1NDk=", "number": 172, "title": "OSX Stereo recording is actually duplicate mono streams", "user": {"login": "Jello", "id": 58802, "node_id": "MDQ6VXNlcjU4ODAy", "avatar_url": "https://avatars3.githubusercontent.com/u/58802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jello", "html_url": "https://github.com/Jello", "followers_url": "https://api.github.com/users/Jello/followers", "following_url": "https://api.github.com/users/Jello/following{/other_user}", "gists_url": "https://api.github.com/users/Jello/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jello/subscriptions", "organizations_url": "https://api.github.com/users/Jello/orgs", "repos_url": "https://api.github.com/users/Jello/repos", "events_url": "https://api.github.com/users/Jello/events{/privacy}", "received_events_url": "https://api.github.com/users/Jello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-02-25T21:29:11Z", "updated_at": "2019-03-01T11:35:05Z", "closed_at": "2019-02-27T16:41:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm doing a duplex stream to record and playback audio using SoundDevice. I'm getting a stereo recording, but both streams are identical rather than properly recording in stereo on a Mac. The same code works correctly on Windows and produces non-identical audio streams.\r\n\r\nBelow is essentially what my code is. Works correctly on Windows, and Audacity on the Mac can properly record in stereo. Any ideas?\r\n\r\n````\r\nnumChannels = 2\r\n\r\nsoundfile = sf.SoundFile(WAVE_OUTPUT_FILENAME,mode='x',samplerate=sd.default.samplerate,channels=numChannels,subtype=\"FLOAT\",)\r\n\r\ndef rec_callback(indata, outdata, frames, time, status):\r\n    if len(indata > 0):\r\n        soundfile.write(indata)\r\nwith sd.Stream(channels=numChannels,dtype=dataType,blocksize=sd.default.blocksize,callback=rec_callback):\r\n    listener.join()\r\n````", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/171", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/171/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/171/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/171", "id": 412134651, "node_id": "MDU6SXNzdWU0MTIxMzQ2NTE=", "number": 171, "title": "Mono .wav files are no longer playing", "user": {"login": "bradricketts", "id": 43478571, "node_id": "MDQ6VXNlcjQzNDc4NTcx", "avatar_url": "https://avatars3.githubusercontent.com/u/43478571?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bradricketts", "html_url": "https://github.com/bradricketts", "followers_url": "https://api.github.com/users/bradricketts/followers", "following_url": "https://api.github.com/users/bradricketts/following{/other_user}", "gists_url": "https://api.github.com/users/bradricketts/gists{/gist_id}", "starred_url": "https://api.github.com/users/bradricketts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bradricketts/subscriptions", "organizations_url": "https://api.github.com/users/bradricketts/orgs", "repos_url": "https://api.github.com/users/bradricketts/repos", "events_url": "https://api.github.com/users/bradricketts/events{/privacy}", "received_events_url": "https://api.github.com/users/bradricketts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-19T21:33:25Z", "updated_at": "2019-09-18T13:15:10Z", "closed_at": "2019-09-18T13:15:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI've been having a problem recently with playing mono .wav files over any output channel.  I've used this same content for quite a while with Sounddevice without any issue, but just recently this content will no longer play.  There has been no change in drivers, python libraries, or equipment.  The file will begin playback for an instant, then stop playing.  \r\n\r\nFor more context, I'm using ASIO drivers in Windows 10 with a Lynx Studio Techologies AES16e AES3 PCIe card and a Lynx Studio Technologies Aurora(n).  The .wav files are created using sox, and the only difference between the files is the number of channels.  I've attached the mono and stereo files that I've tried.\r\n\r\nI've tried the same content in Adobe Audition and a free player called Winyl and they both playback using the ASIO driver just fine.  \r\n\r\nGiven that I haven't changed anything in my Python scripts, though I have attempted to reinstall Python and created a new virtualenv with no effect, the only thing that I can think of is that something has been changed by Windows Update, but there's been so many changes/screwups by Microsoft there that I haven't been able to find any needles in the haystack.\r\n\r\nAny ideas?\r\n\r\n[content.zip](https://github.com/spatialaudio/python-sounddevice/files/2882087/content.zip)\r\n\r\nP.S.  Thank you for writing (in my opinion) the best Python audio library out there.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/167", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/167/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/167/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/167", "id": 405380275, "node_id": "MDU6SXNzdWU0MDUzODAyNzU=", "number": 167, "title": "ValueError: Number of samples not divisible by channels", "user": {"login": "bballjbv1", "id": 30965614, "node_id": "MDQ6VXNlcjMwOTY1NjE0", "avatar_url": "https://avatars3.githubusercontent.com/u/30965614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bballjbv1", "html_url": "https://github.com/bballjbv1", "followers_url": "https://api.github.com/users/bballjbv1/followers", "following_url": "https://api.github.com/users/bballjbv1/following{/other_user}", "gists_url": "https://api.github.com/users/bballjbv1/gists{/gist_id}", "starred_url": "https://api.github.com/users/bballjbv1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bballjbv1/subscriptions", "organizations_url": "https://api.github.com/users/bballjbv1/orgs", "repos_url": "https://api.github.com/users/bballjbv1/repos", "events_url": "https://api.github.com/users/bballjbv1/events{/privacy}", "received_events_url": "https://api.github.com/users/bballjbv1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-31T18:31:11Z", "updated_at": "2019-02-02T15:37:50Z", "closed_at": "2019-02-02T15:37:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nwith sd.Stream(samplerate=RATE, blocksize=CHUNK, dtype='int32', latency='low', callback=None) as s:\r\n    wave = signal.square\r\n    t =.002\r\n    sps = 44100\r\n    atten = .015\r\n    while True:\r\n        freq=440\r\n        waveform= wave(2*np.pi*(np.arange(t*sps))*freq/sps)\r\n        waveform_quiet=waveform*atten\r\n        wave_int = waveform_quiet * 2147483647\r\n        s.write(np.ascontiguousarray(wave_int, np.int32))\r\n```\r\n\r\nSo along the way I realized that I wanted to make a single period based sound sample and propagate that within a loop without using the limited play() stream.  I understand that you cannot hear a sound wave the same at (1/440) of a second for a concert A (440hz) note. But if you loop a single period of a sound many times you will still hear the sound because its concatenated. You can also put some of the waveforms parameters within the loop to change the amplitude and frequency almost in real time, that is the main goal im trying to accomplish. Unfortunately, stream write() wont allow me to have a small time period like the sd.play() can. Is there anyway to alleviate this problem, or is it just a problem with sounddevices limitations?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/166", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/166/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/166/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/166", "id": 404822148, "node_id": "MDU6SXNzdWU0MDQ4MjIxNDg=", "number": 166, "title": "sounddevice silently redirects stderr to /dev/null", "user": {"login": "pytaunay", "id": 5438710, "node_id": "MDQ6VXNlcjU0Mzg3MTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5438710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pytaunay", "html_url": "https://github.com/pytaunay", "followers_url": "https://api.github.com/users/pytaunay/followers", "following_url": "https://api.github.com/users/pytaunay/following{/other_user}", "gists_url": "https://api.github.com/users/pytaunay/gists{/gist_id}", "starred_url": "https://api.github.com/users/pytaunay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pytaunay/subscriptions", "organizations_url": "https://api.github.com/users/pytaunay/orgs", "repos_url": "https://api.github.com/users/pytaunay/repos", "events_url": "https://api.github.com/users/pytaunay/events{/privacy}", "received_events_url": "https://api.github.com/users/pytaunay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-01-30T15:23:14Z", "updated_at": "2019-09-25T10:15:07Z", "closed_at": "2019-09-25T10:15:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is originally in reference to an issue in the psychopy Sound backend which uses sounddevice (see https://github.com/psychopy/psychopy/issues/2230)\r\n\r\n`sounddevice` has a few lines of code that were added to remove the standard error output for convenience (pull request #12 in response to issues #11 and #10):\r\n```\r\n2670 def _ignore_stderr():\r\n2671     \"\"\"Try to forward PortAudio messages from stderr to /dev/null.\"\"\"\r\n2672     try:\r\n2673         stdio = _ffi.dlopen(None)\r\n2674         devnull = stdio.fopen(_os.devnull.encode(), b'w')\r\n2675     except (OSError, AttributeError):\r\n2676         return\r\n2677     try:\r\n2678         stdio.stderr = devnull\r\n2679     except _ffi.error:\r\n2680         try:\r\n2681             stdio.__stderrp = devnull\r\n2682         except _ffi.error:\r\n2683             stdio.fclose(devnull)\r\n2684 \r\n2685 \r\n2686 _ignore_stderr()\r\n```\r\nThis redirects all of the standard error output to /dev/null and subsequently breaks built-in functions that use stderr display (e.g. \"input\"). This occurs in non-interactive sessions only (probably because of the way the CPython backend handles display with a prompt in interactive sessions).\r\n\r\nmwe.py:\r\n```\r\n#!/usr/bin/python3\r\n\r\n# This will display \"Enter data\" on the terminal\r\nt = input(\"Enter data\\n\")\r\n\r\nimport sounddevice\r\n\r\n# This does not \r\nt = input(\"Enter data\\n\")\r\n```\r\n`python3 mwe.py` will display \"Enter data\" the first time, but not the second time after sounddevice is imported. Commenting line 2686 in sounddevice.py gets rid of the issue.\r\n\r\nstderr should **not** be redefined as /dev/null internally. I would suggest removing the `_ignore_stderr` function. For those who do not like stderr output, just use piping externally to redirect stderr to /dev/null or a log file.\r\nPiping example:\r\n```\r\n#!/usr/bin/python3\r\n\r\n# This will display \"Enter data\" on the terminal\r\nt = input(\"Enter data\\n\")\r\n\r\nprint(\"Test\")\r\n```\r\n`python3 pipe.py 2> /dev/null` will display only \"Test\". \"Enter data\" gets redirected to /dev/null. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/165", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/165/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/165/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/165/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/165", "id": 402006416, "node_id": "MDU6SXNzdWU0MDIwMDY0MTY=", "number": 165, "title": "Cannot import on Anaconda/macOS", "user": {"login": "sammosummo", "id": 9464950, "node_id": "MDQ6VXNlcjk0NjQ5NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/9464950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sammosummo", "html_url": "https://github.com/sammosummo", "followers_url": "https://api.github.com/users/sammosummo/followers", "following_url": "https://api.github.com/users/sammosummo/following{/other_user}", "gists_url": "https://api.github.com/users/sammosummo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sammosummo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sammosummo/subscriptions", "organizations_url": "https://api.github.com/users/sammosummo/orgs", "repos_url": "https://api.github.com/users/sammosummo/repos", "events_url": "https://api.github.com/users/sammosummo/events{/privacy}", "received_events_url": "https://api.github.com/users/sammosummo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-22T23:49:48Z", "updated_at": "2019-01-24T15:22:37Z", "closed_at": "2019-01-24T15:02:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the latest Miniconda on macOS, everything up-to-date. Tried to install via `pip install sounddevice`. Installed successfully, but `import sounddevice as sd` yields\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/sam/PycharmProjects/Charlie3/charlie3/sound/synthesis.py\", line 581, in <module>\r\n    test()\r\n  File \"/Users/sam/PycharmProjects/Charlie3/charlie3/sound/synthesis.py\", line 449, in test\r\n    sound.play(False)\r\n  File \"/Users/sam/PycharmProjects/Charlie3/charlie3/sound/synthesis.py\", line 434, in play\r\n    self._backend_module.play_wait(self._obj)\r\n  File \"/Users/sam/PycharmProjects/Charlie3/charlie3/sound/synthesis.py\", line 404, in _backend_module\r\n    return import_module(f\"charlie3.sound._{self.backend}\")\r\n  File \"/Users/sam/miniconda3/envs/loocius/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/Users/sam/PycharmProjects/Charlie3/charlie3/sound/_sounddevice.py\", line 8, in <module>\r\n    import sounddevice as sd\r\n  File \"/Users/sam/miniconda3/envs/loocius/lib/python3.7/site-packages/sounddevice.py\", line 58, in <module>\r\n    from _sounddevice import ffi as _ffi\r\nImportError: cannot import name 'ffi' from '_sounddevice' (/Users/sam/PycharmProjects/Charlie3/charlie3/sound/_sounddevice.py)\r\n```\r\n\r\nI get the same error when I try to reinstall using the `conda-forge` method.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/164", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/164/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/164/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/164", "id": 399940583, "node_id": "MDU6SXNzdWUzOTk5NDA1ODM=", "number": 164, "title": "Debugging in audio callback function", "user": {"login": "jay-pee", "id": 9380980, "node_id": "MDQ6VXNlcjkzODA5ODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9380980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jay-pee", "html_url": "https://github.com/jay-pee", "followers_url": "https://api.github.com/users/jay-pee/followers", "following_url": "https://api.github.com/users/jay-pee/following{/other_user}", "gists_url": "https://api.github.com/users/jay-pee/gists{/gist_id}", "starred_url": "https://api.github.com/users/jay-pee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jay-pee/subscriptions", "organizations_url": "https://api.github.com/users/jay-pee/orgs", "repos_url": "https://api.github.com/users/jay-pee/repos", "events_url": "https://api.github.com/users/jay-pee/events{/privacy}", "received_events_url": "https://api.github.com/users/jay-pee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-16T18:33:10Z", "updated_at": "2019-01-17T09:44:55Z", "closed_at": "2019-01-17T09:44:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI played around with the [example](https://github.com/spatialaudio/python-sounddevice/blob/master/examples/plot_input.py) to process real time audio.\r\n\r\nInstead of plotting the time series I want to plot a spectrogram. Therefor I want to edit the \r\nthe `audio_callback()` function. In this function an error happens and I tried to debug it by setting a break point. Unfortunately this break point is skipped by my editor (vscode). I looked around and found this [stack overflow entry](https://stackoverflow.com/questions/29635802/multithreaded-python-application-not-hitting-breakpoints-in-visual-studio). This tells me that sounddevice doesn't use the standard threading module to read the audio data, and that it is not possible to debug inside this callback function. Is that right? \r\n\r\nThe error has something to do with the wrong format of `indata` of the `audio_callback()` function. Can I set a break point somewhere else to see the `indata` value?\r\n\r\nThank you very much for your help.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/162", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/162/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/162/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/162", "id": 395572275, "node_id": "MDU6SXNzdWUzOTU1NzIyNzU=", "number": 162, "title": "Thoughts on an asyncio interface to sounddevice", "user": {"login": "TMiguelT", "id": 5019367, "node_id": "MDQ6VXNlcjUwMTkzNjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5019367?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TMiguelT", "html_url": "https://github.com/TMiguelT", "followers_url": "https://api.github.com/users/TMiguelT/followers", "following_url": "https://api.github.com/users/TMiguelT/following{/other_user}", "gists_url": "https://api.github.com/users/TMiguelT/gists{/gist_id}", "starred_url": "https://api.github.com/users/TMiguelT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TMiguelT/subscriptions", "organizations_url": "https://api.github.com/users/TMiguelT/orgs", "repos_url": "https://api.github.com/users/TMiguelT/repos", "events_url": "https://api.github.com/users/TMiguelT/events{/privacy}", "received_events_url": "https://api.github.com/users/TMiguelT/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2019-01-03T13:26:46Z", "updated_at": "2019-09-30T16:36:48Z", "closed_at": "2019-09-25T10:36:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "`python-sounddevice` already has a nice callback interface. Do you think it would be possible to add a module within sounddevice that exposes an asyncio interface for it? This would let you do things like:\r\n\r\n```python\r\nimport sounddevice._async as sd\r\n\r\nasync def some_coroutine():\r\n    async for chunk in sd.Stream(channels=2):\r\n        # Process chunk, but let Python do things while waiting for the next chunk\r\n```\r\n\r\nI'd be happy to implement this if there's any interest. If not I'll write a separate async wrapper module that imports `python-sounddevice`. Let me know!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/161", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/161/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/161/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/161", "id": 393202159, "node_id": "MDU6SXNzdWUzOTMyMDIxNTk=", "number": 161, "title": "Unable to access microphone", "user": {"login": "Sagov9", "id": 46033911, "node_id": "MDQ6VXNlcjQ2MDMzOTEx", "avatar_url": "https://avatars0.githubusercontent.com/u/46033911?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sagov9", "html_url": "https://github.com/Sagov9", "followers_url": "https://api.github.com/users/Sagov9/followers", "following_url": "https://api.github.com/users/Sagov9/following{/other_user}", "gists_url": "https://api.github.com/users/Sagov9/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sagov9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sagov9/subscriptions", "organizations_url": "https://api.github.com/users/Sagov9/orgs", "repos_url": "https://api.github.com/users/Sagov9/repos", "events_url": "https://api.github.com/users/Sagov9/events{/privacy}", "received_events_url": "https://api.github.com/users/Sagov9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-12-20T20:35:05Z", "updated_at": "2019-04-02T18:23:22Z", "closed_at": "2019-04-02T18:23:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Occurs when running python script from console, but not when calling python function from command promt, but again when executing the same command line from batch file. 'Run as administrator' does not help, microphone privacy settings are set to allow. Please help! The error message:\r\n\r\n```\r\n  File \"C:\\python27\\WMF_FT_Audio.py\", line 231, in buzzer_test\r\n    recording = sd.rec(frames = int(fs*duration), samplerate = fs, blocking=True, channels = 2)\r\n  File \"C:\\python27\\lib\\site-packages\\sounddevice.py\", line 224, in rec\r\n    ctx.input_dtype, callback, blocking, **kwargs)\r\n  File \"C:\\python27\\lib\\site-packages\\sounddevice.py\", line 2417, in start_stream\r\n    **kwargs)\r\n  File \"C:\\python27\\lib\\site-packages\\sounddevice.py\", line 1301, in __init__\r\n    **_remove_self(locals()))\r\n  File \"C:\\python27\\lib\\site-packages\\sounddevice.py\", line 780, in __init__\r\n    'Error opening {0}'.format(self.__class__.__name__))\r\n  File \"C:\\python27\\lib\\site-packages\\sounddevice.py\", line 2570, in _check\r\n    raise PortAudioError(errormsg, err, hosterror_info)\r\nsounddevice.PortAudioError: Error opening InputStream: Unanticipated host error [PaErrorCode -9999]: 'An invalid parameter was passed to a system function.' [MME error 11]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/160", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/160/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/160/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/160", "id": 384761690, "node_id": "MDU6SXNzdWUzODQ3NjE2OTA=", "number": 160, "title": "How to generate 'ctrl+c' event or is there any internal function to stop the recording at any time?", "user": {"login": "dhineshdee", "id": 22371156, "node_id": "MDQ6VXNlcjIyMzcxMTU2", "avatar_url": "https://avatars1.githubusercontent.com/u/22371156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhineshdee", "html_url": "https://github.com/dhineshdee", "followers_url": "https://api.github.com/users/dhineshdee/followers", "following_url": "https://api.github.com/users/dhineshdee/following{/other_user}", "gists_url": "https://api.github.com/users/dhineshdee/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhineshdee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhineshdee/subscriptions", "organizations_url": "https://api.github.com/users/dhineshdee/orgs", "repos_url": "https://api.github.com/users/dhineshdee/repos", "events_url": "https://api.github.com/users/dhineshdee/events{/privacy}", "received_events_url": "https://api.github.com/users/dhineshdee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226879031, "node_id": "MDU6TGFiZWwyMjY4NzkwMzE=", "url": "https://api.github.com/repos/spatialaudio/python-sounddevice/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-11-27T11:59:26Z", "updated_at": "2020-03-18T10:09:53Z", "closed_at": "2020-03-18T10:09:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am developing a GUI which can record audio for an arbitrary duration using sounddevice and soundfile libraries. The recording process is stopped by pressing 'ctrl+c' button combination. I am trying to implement a GUI with a 'start' and 'end' button. The 'start' button should invoke the record function and the 'end' button should simulate 'ctrl+c' event. I don't know how this event can be implemented as a function in python. Or is there any other inbuilt function to stop the recording?\r\nHere is the code. I want to implement the end_button_func() to stop the recording.\r\n\r\n    import time\r\n    import queue\r\n    from PyQt5 import QtCore, QtGui, QtWidgets\r\n    import soundfile as sf\r\n    import sounddevice as sd\r\n    import keyboard\r\n\r\n\r\n    class Ui_MainWindow(object):\r\n        def setupUi(self, MainWindow):\r\n            MainWindow.setObjectName(\"MainWindow\")\r\n            MainWindow.resize(640, 480)\r\n            self.centralwidget = QtWidgets.QWidget(MainWindow)\r\n            self.centralwidget.setObjectName(\"centralwidget\")\r\n            self.pushButton = QtWidgets.QPushButton(self.centralwidget)\r\n            self.pushButton.setGeometry(QtCore.QRect(280, 190, 75, 23))\r\n            self.pushButton.setObjectName(\"pushButton\")\r\n            self.pushButton.clicked.connect(self.record)\r\n\r\n            self.pushButton_1 = QtWidgets.QPushButton(self.centralwidget)\r\n            self.pushButton_1.setGeometry(QtCore.QRect(380, 190, 75, 23))\r\n            self.pushButton_1.setObjectName(\"pushButton\")\r\n            self.pushButton_1.clciked.connect(self.end_button_func)\r\n\r\n            MainWindow.setCentralWidget(self.centralwidget)\r\n            self.menubar = QtWidgets.QMenuBar(MainWindow)\r\n            self.menubar.setGeometry(QtCore.QRect(0, 0, 640, 21))\r\n            self.menubar.setObjectName(\"menubar\")\r\n            MainWindow.setMenuBar(self.menubar)\r\n            self.statusbar = QtWidgets.QStatusBar(MainWindow)\r\n            self.statusbar.setObjectName(\"statusbar\")\r\n            MainWindow.setStatusBar(self.statusbar)\r\n\r\n            self.retranslateUi(MainWindow)\r\n            QtCore.QMetaObject.connectSlotsByName(MainWindow)\r\n\r\n        def retranslateUi(self, MainWindow):\r\n            _translate = QtCore.QCoreApplication.translate\r\n            MainWindow.setWindowTitle(_translate(\"MainWindow\", \"MainWindow\"))\r\n            self.pushButton.setText(_translate(\"MainWindow\", \"Start\"))\r\n            self.pushButton_1.setText(_translate(\"MainWindow\", \"End\"))\r\n\r\n        def record(self):\r\n            self.q = queue.Queue()\r\n            try:\r\n                # Make sure the file is open before recording begins\r\n                with sf.SoundFile('check.wav', mode='x', samplerate=48000, channels=2, subtype=\"PCM_16\") as file:\r\n                    with sd.InputStream(samplerate=48000, channels=2, callback=self.callback):\r\n                        # 1 second silence before the recording begins\r\n                        time.sleep(1)\r\n                        print('START')\r\n                        print('#' * 80)\r\n                        print('press Ctrl+C to stop the recording')\r\n                        while True:\r\n                            file.write(self.q.get())\r\n\r\n            except OSError:\r\n                print('The file to be recorded already exists.')\r\n                sys.exit(1)\r\n            except KeyboardInterrupt:\r\n                print('The utterance is recorded.')\r\n\r\n        def callback(self, indata, frames, time, status):\r\n            # TODO: Check for the existence of frames and time arguments\r\n            \"\"\"\r\n            This function is called for each audio block from the record function.\r\n            \"\"\"\r\n\r\n            if status:\r\n                print(status, file=sys.stderr)\r\n            self.q.put(indata.copy())\r\n\r\n        def end_button_func(self):\r\n            pass\r\n\r\n\r\n    if __name__ == \"__main__\":\r\n        import sys\r\n        app = QtWidgets.QApplication(sys.argv)\r\n        MainWindow = QtWidgets.QMainWindow()\r\n        ui = Ui_MainWindow()\r\n        ui.setupUi(MainWindow)\r\n        MainWindow.show()\r\n        sys.exit(app.exec_())\r\n\r\nThanks a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/159", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/159/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/159/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/159", "id": 384242861, "node_id": "MDU6SXNzdWUzODQyNDI4NjE=", "number": 159, "title": "Volume control?", "user": {"login": "segalion", "id": 26971667, "node_id": "MDQ6VXNlcjI2OTcxNjY3", "avatar_url": "https://avatars2.githubusercontent.com/u/26971667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segalion", "html_url": "https://github.com/segalion", "followers_url": "https://api.github.com/users/segalion/followers", "following_url": "https://api.github.com/users/segalion/following{/other_user}", "gists_url": "https://api.github.com/users/segalion/gists{/gist_id}", "starred_url": "https://api.github.com/users/segalion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segalion/subscriptions", "organizations_url": "https://api.github.com/users/segalion/orgs", "repos_url": "https://api.github.com/users/segalion/repos", "events_url": "https://api.github.com/users/segalion/events{/privacy}", "received_events_url": "https://api.github.com/users/segalion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-26T09:32:30Z", "updated_at": "2019-04-02T16:44:56Z", "closed_at": "2019-04-02T16:44:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "\"python sound control\" is very very fragmented over lots of pieces OS-dependant packages.\r\nAt my eyes, this package seems one of the most promissing because of portaudio related, but lacks one very important thing (that is missed in portaudio too): \"the volume control\".\r\n\r\nplay a wav file from python (that can run on all platforms) is a good thing, but maybe it doesnt sound because of volume is muted or something similar...\r\n\r\nAre you planning to include (and try to \"de-facto\" standarize) a volume control functionality inside this library? \r\n\r\nCould be great to support get/set/mute/unmute all volume control (input and output) around in windows, linux (alsa/pulseaudio), and OSX, (even per-process when possible) all with the same api...\r\n\r\nAt this, a first aprox could be intregrate pycaw in windows, and a wrapper with amixer/aplay command-line, and something similar in OSX.\r\n\r\nIf in a future portaudio supports all this stuff, we could change the base libs and mantain the api so all programs work the same.\r\n\r\nObvously this is only a proposal of feature request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/158", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/158/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/158/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/158", "id": 381690620, "node_id": "MDU6SXNzdWUzODE2OTA2MjA=", "number": 158, "title": "Sounddevice doesn't release memory", "user": {"login": "AutomCoding", "id": 40275136, "node_id": "MDQ6VXNlcjQwMjc1MTM2", "avatar_url": "https://avatars1.githubusercontent.com/u/40275136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AutomCoding", "html_url": "https://github.com/AutomCoding", "followers_url": "https://api.github.com/users/AutomCoding/followers", "following_url": "https://api.github.com/users/AutomCoding/following{/other_user}", "gists_url": "https://api.github.com/users/AutomCoding/gists{/gist_id}", "starred_url": "https://api.github.com/users/AutomCoding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AutomCoding/subscriptions", "organizations_url": "https://api.github.com/users/AutomCoding/orgs", "repos_url": "https://api.github.com/users/AutomCoding/repos", "events_url": "https://api.github.com/users/AutomCoding/events{/privacy}", "received_events_url": "https://api.github.com/users/AutomCoding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-11-16T17:22:05Z", "updated_at": "2020-06-22T09:15:48Z", "closed_at": "2020-06-22T09:15:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "After stopping an audio playback, sounddevice doesn't release the used data from memory. If the audio file is a few minutes long, more than a gigabyte of RAM has been devoured after four or five play/stop cycles.\r\n\r\n```py\r\nimport sounddevice\r\nimport numpy\r\nfrom scipy.io.wavfile import read\r\nimport time\r\n\r\n\r\na = read(\"audiofile.wav\")\r\n\r\n# Repeat the following lines a few times\r\nsounddevice.play(numpy.array(a[1], dtype=float), a[0])\r\ntime.sleep(5)\r\nsounddevice.stop()\r\ntime.sleep(2)\r\n```\r\n\r\nI'm using Python 3.7 on Windows 7 (64 bit) and all libraries are up to date.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/157", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/157/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/157/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/157", "id": 381654591, "node_id": "MDU6SXNzdWUzODE2NTQ1OTE=", "number": 157, "title": "Detect silence during a stream recording", "user": {"login": "LoicSikidi", "id": 11026721, "node_id": "MDQ6VXNlcjExMDI2NzIx", "avatar_url": "https://avatars3.githubusercontent.com/u/11026721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LoicSikidi", "html_url": "https://github.com/LoicSikidi", "followers_url": "https://api.github.com/users/LoicSikidi/followers", "following_url": "https://api.github.com/users/LoicSikidi/following{/other_user}", "gists_url": "https://api.github.com/users/LoicSikidi/gists{/gist_id}", "starred_url": "https://api.github.com/users/LoicSikidi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LoicSikidi/subscriptions", "organizations_url": "https://api.github.com/users/LoicSikidi/orgs", "repos_url": "https://api.github.com/users/LoicSikidi/repos", "events_url": "https://api.github.com/users/LoicSikidi/events{/privacy}", "received_events_url": "https://api.github.com/users/LoicSikidi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-16T15:49:21Z", "updated_at": "2019-09-05T13:08:26Z", "closed_at": "2019-09-05T13:08:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello guys, i'm not familiar with your library yet and I would like to launch an action when the microphone catch a sound and do nothing when there is a silence.\r\n\r\nFor the moment, I did some tests based on this code example: spectrogram.py. In the callback function, what in the argument indata (object numpy) could inform me that there is noise caught or not.\r\n\r\n```python\r\n    def callback(indata, frames, time, status):\r\n        if status:\r\n            text = ' ' + str(status) + ' '\r\n            print('\\x1b[34;40m', text.center(args.columns, '#'),\r\n                  '\\x1b[0m', sep='')\r\n        if any(indata):\r\n          # HERE\r\n        else:\r\n            print('no input')\r\n```\r\nIn my test, I never pass through the **else** condition.\r\n\r\nCould you share with me a workaround?\r\n\r\nThank you in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/156", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/156/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/156/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/156", "id": 381450258, "node_id": "MDU6SXNzdWUzODE0NTAyNTg=", "number": 156, "title": "Analyzing the input frequency", "user": {"login": "charlsagente", "id": 948024, "node_id": "MDQ6VXNlcjk0ODAyNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/948024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charlsagente", "html_url": "https://github.com/charlsagente", "followers_url": "https://api.github.com/users/charlsagente/followers", "following_url": "https://api.github.com/users/charlsagente/following{/other_user}", "gists_url": "https://api.github.com/users/charlsagente/gists{/gist_id}", "starred_url": "https://api.github.com/users/charlsagente/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charlsagente/subscriptions", "organizations_url": "https://api.github.com/users/charlsagente/orgs", "repos_url": "https://api.github.com/users/charlsagente/repos", "events_url": "https://api.github.com/users/charlsagente/events{/privacy}", "received_events_url": "https://api.github.com/users/charlsagente/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-16T05:17:44Z", "updated_at": "2018-11-17T06:18:57Z", "closed_at": "2018-11-17T06:18:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello guys, I am using an audio interface where I plug my guitar and I was able to run your `Plot Microphone Signal(s) in Real-Time` example successfully where I can see the audio signal. \r\n\r\nI would like to analyze the frequency of the signal, in this case I would like to know which notes I am playing. I don't have experience with Numpy but I think I have to analyze the array data in the callback functions. \r\n\r\nCan you share with me how can I get that information?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/155", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/155/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/155/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/155", "id": 380319084, "node_id": "MDU6SXNzdWUzODAzMTkwODQ=", "number": 155, "title": "Explanation of Over/Underflow errors in Read_the_Docs", "user": {"login": "Colin1964", "id": 18268343, "node_id": "MDQ6VXNlcjE4MjY4MzQz", "avatar_url": "https://avatars3.githubusercontent.com/u/18268343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Colin1964", "html_url": "https://github.com/Colin1964", "followers_url": "https://api.github.com/users/Colin1964/followers", "following_url": "https://api.github.com/users/Colin1964/following{/other_user}", "gists_url": "https://api.github.com/users/Colin1964/gists{/gist_id}", "starred_url": "https://api.github.com/users/Colin1964/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Colin1964/subscriptions", "organizations_url": "https://api.github.com/users/Colin1964/orgs", "repos_url": "https://api.github.com/users/Colin1964/repos", "events_url": "https://api.github.com/users/Colin1964/events{/privacy}", "received_events_url": "https://api.github.com/users/Colin1964/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-13T16:42:59Z", "updated_at": "2020-07-18T13:44:50Z", "closed_at": "2020-07-18T13:44:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Extract from API section of  [Python--SoundDevice Read_the_Docs](https://python-sounddevice.readthedocs.io/en/latest/api.html#sounddevice.Stream)\r\n\r\n> Input overflow.\r\n> \r\n> In a stream opened with blocksize=0, indicates that data prior to the first sample of the input buffer was discarded due to an overflow, possibly because the stream callback is using too much CPU time. Otherwise indicates that data prior to one or more samples in the input buffer was discarded.\r\n> \r\n> This can happen in full-duplex and input-only streams (including playrec() and rec()).\r\n> \r\n> Output underflow.\r\n> \r\n> Indicates that output data (or a gap) was inserted, possibly because the stream callback is using too much CPU time.\r\n> \r\n> This can happen in full-duplex and output-only streams (including playrec() and play()).\r\n\r\nI am receiving Underflow errors as described in the threads [here](https://github.com/googlesamples/assistant-sdk-python/issues/303) and [here](https://stackoverflow.com/questions/53224787/python-sounddevicestream-write-read-underflow-overflow-errors)\r\n\r\nThe error descriptions do not (for me as a Python novice) provide enough detail to allow me to investigate and correct the cause of the error. To be specific:\r\n\r\n\"Input Overflow. Otherwise indicates that data prior to one or more samples in the input buffer was discarded. \"\r\nWhy was the data prior to the samples in the input buffer discarded? What test/ condition / flag indicated that the input buffer was full? How do you ensure that the input buffer is matched to the size of the data to prevent this? \r\n\r\n\"Output underflow.\r\n\r\nIndicates that output data (or a gap) was inserted, possibly because the stream callback is using too much CPU time.\"\r\nWhat is meant by \"Output data\"? inserted into what (output buffer)? What is a \"gap\" defined as? How do you identify which \"stream callback\" this refers to? How does the user ensure that stream callback does not use too much CPU time.\r\n\r\nIn both cases, an example of how and why an Underflow and overflow condition has been triggered along with an explanation of how a user might modify parameters to correct the errors, would be very useful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/154", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/154/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/154/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/154", "id": 370697372, "node_id": "MDU6SXNzdWUzNzA2OTczNzI=", "number": 154, "title": "Capturing several devices simultaneously", "user": {"login": "gustavovelascoh", "id": 2431850, "node_id": "MDQ6VXNlcjI0MzE4NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2431850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gustavovelascoh", "html_url": "https://github.com/gustavovelascoh", "followers_url": "https://api.github.com/users/gustavovelascoh/followers", "following_url": "https://api.github.com/users/gustavovelascoh/following{/other_user}", "gists_url": "https://api.github.com/users/gustavovelascoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/gustavovelascoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gustavovelascoh/subscriptions", "organizations_url": "https://api.github.com/users/gustavovelascoh/orgs", "repos_url": "https://api.github.com/users/gustavovelascoh/repos", "events_url": "https://api.github.com/users/gustavovelascoh/events{/privacy}", "received_events_url": "https://api.github.com/users/gustavovelascoh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-16T16:32:43Z", "updated_at": "2019-09-30T16:54:10Z", "closed_at": "2019-09-30T16:54:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to record from several devices simultaneously?\r\n\r\nI have 4 devices and I want to capture simultaneaously from them. I have tried 3 approaches in this order:\r\n\r\n**1. Consecutive calls to `sd.rec()`:**\r\n\r\nTried something like:\r\n``` python\r\n    sd.rec( ..., device=1)\r\n    sd.rec( ..., device=2)\r\n    sd.rec( ..., device=3)\r\n    sd.rec( ..., device=4)\r\n    sd.wait()\r\n```\r\n\r\nBut plotting the data (4 outputs concatenated) I got this. Just device 4 is fully recorded:\r\n\r\n![wrong](https://user-images.githubusercontent.com/2431850/47031541-f65e1e00-d167-11e8-989d-0f6cd71cdc68.png)\r\n\r\n**2. Multiprocess:**\r\n\r\nI wrapped sd.rec() function in a new one, and tried to use it via multiprocess, but got the \"freeze_support\" error:\r\n```\r\nRuntimeError:\r\n        An attempt has been made to start a new process before the\r\n        current process has finished its bootstrapping phase.\r\n\r\n        This probably means that you are not using fork to start your\r\n        child processes and you have forgotten to use the proper idiom\r\n        in the main module:\r\n\r\n            if __name__ == '__main__':\r\n                freeze_support()\r\n                ...\r\n\r\n        The \"freeze_support()\" line can be omitted if the program\r\n        is not going to be frozen to produce an executable.\r\n```\r\n\r\n[error.txt](https://github.com/spatialaudio/python-sounddevice/files/2484007/error.txt)\r\n\r\n**3. subprocess (isolated recording script)**\r\n\r\nFinally I opt to create a python script for recording having as input the device number, and use a \"master\" script to call it with the required devices, and it works. Something like:\r\n\r\n```\r\nfor i in [1,2,3,4]:\r\n    p = Popen(\"python record_script.py \" + str(i))\r\n```\r\n\r\nThe only caveat here is that I *can't* stop or handle the recording once it has started because, obviously, this is a new process in the OS.\r\n\r\n\r\nIs there any approach more related to my attempts 1 and 2 for recording multiple devices?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/152", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/152/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/152/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/152", "id": 367739832, "node_id": "MDU6SXNzdWUzNjc3Mzk4MzI=", "number": 152, "title": "Multichannels streaming", "user": {"login": "Chap5", "id": 43955982, "node_id": "MDQ6VXNlcjQzOTU1OTgy", "avatar_url": "https://avatars1.githubusercontent.com/u/43955982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Chap5", "html_url": "https://github.com/Chap5", "followers_url": "https://api.github.com/users/Chap5/followers", "following_url": "https://api.github.com/users/Chap5/following{/other_user}", "gists_url": "https://api.github.com/users/Chap5/gists{/gist_id}", "starred_url": "https://api.github.com/users/Chap5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Chap5/subscriptions", "organizations_url": "https://api.github.com/users/Chap5/orgs", "repos_url": "https://api.github.com/users/Chap5/repos", "events_url": "https://api.github.com/users/Chap5/events{/privacy}", "received_events_url": "https://api.github.com/users/Chap5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-08T11:07:23Z", "updated_at": "2019-09-25T10:45:44Z", "closed_at": "2019-09-25T10:45:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have Behringer X18 \r\nAnd I got device lists from sd.query_devices()\r\n\r\nI want to stream all channels(18 inputs) to my phone by wifi. (each channels)\r\nhow can i get the channels each and streaming??\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/151", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/151/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/151/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/151", "id": 365255967, "node_id": "MDU6SXNzdWUzNjUyNTU5Njc=", "number": 151, "title": "Channel mapping with callback", "user": {"login": "johnroper100", "id": 9782943, "node_id": "MDQ6VXNlcjk3ODI5NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/9782943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnroper100", "html_url": "https://github.com/johnroper100", "followers_url": "https://api.github.com/users/johnroper100/followers", "following_url": "https://api.github.com/users/johnroper100/following{/other_user}", "gists_url": "https://api.github.com/users/johnroper100/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnroper100/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnroper100/subscriptions", "organizations_url": "https://api.github.com/users/johnroper100/orgs", "repos_url": "https://api.github.com/users/johnroper100/repos", "events_url": "https://api.github.com/users/johnroper100/events{/privacy}", "received_events_url": "https://api.github.com/users/johnroper100/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226879031, "node_id": "MDU6TGFiZWwyMjY4NzkwMzE=", "url": "https://api.github.com/repos/spatialaudio/python-sounddevice/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-09-30T19:59:11Z", "updated_at": "2019-09-25T10:47:23Z", "closed_at": "2019-09-25T10:47:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to do channel mapping while using an audio callback instead of a blocking stream?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/142", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/142/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/142/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/142", "id": 328750528, "node_id": "MDU6SXNzdWUzMjg3NTA1Mjg=", "number": 142, "title": "Segmentation fault on installation", "user": {"login": "kbrock84", "id": 31415142, "node_id": "MDQ6VXNlcjMxNDE1MTQy", "avatar_url": "https://avatars3.githubusercontent.com/u/31415142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbrock84", "html_url": "https://github.com/kbrock84", "followers_url": "https://api.github.com/users/kbrock84/followers", "following_url": "https://api.github.com/users/kbrock84/following{/other_user}", "gists_url": "https://api.github.com/users/kbrock84/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbrock84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbrock84/subscriptions", "organizations_url": "https://api.github.com/users/kbrock84/orgs", "repos_url": "https://api.github.com/users/kbrock84/repos", "events_url": "https://api.github.com/users/kbrock84/events{/privacy}", "received_events_url": "https://api.github.com/users/kbrock84/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-02T14:55:40Z", "updated_at": "2018-06-02T15:40:01Z", "closed_at": "2018-06-02T15:40:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nGetting error during install following the docs at:\r\nhttp://python-sounddevice.readthedocs.io/en/0.3.11/\r\n\r\nwhen running <code>python3 -m pip install sounddevice</code>\r\n\r\nOutput:\r\n```\r\nSuccessfully installed CFFI-1.11.5 pycparser-2.18 sounddevice-0.3.11\r\nSegmentation fault\r\n```\r\n\r\nIt looks everything was installed, but the last line <code>Segmentation fault</code>.\r\n\r\nWhen I try to import the module it is not found. I am not getting  Segmentation fault errors on any other installs or commands, which leads me to believe it has something to do with the installation process.\r\n\r\nEDIT:\r\nI am using Raspbian GNU/Linux 9 (stretch)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/141", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/141/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/141/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/141", "id": 327361642, "node_id": "MDU6SXNzdWUzMjczNjE2NDI=", "number": 141, "title": "Different input/output amplitudes in playrec loopback test", "user": {"login": "spidru", "id": 11740200, "node_id": "MDQ6VXNlcjExNzQwMjAw", "avatar_url": "https://avatars3.githubusercontent.com/u/11740200?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spidru", "html_url": "https://github.com/spidru", "followers_url": "https://api.github.com/users/spidru/followers", "following_url": "https://api.github.com/users/spidru/following{/other_user}", "gists_url": "https://api.github.com/users/spidru/gists{/gist_id}", "starred_url": "https://api.github.com/users/spidru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spidru/subscriptions", "organizations_url": "https://api.github.com/users/spidru/orgs", "repos_url": "https://api.github.com/users/spidru/repos", "events_url": "https://api.github.com/users/spidru/events{/privacy}", "received_events_url": "https://api.github.com/users/spidru/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-29T15:02:47Z", "updated_at": "2018-05-30T06:26:23Z", "closed_at": "2018-05-30T06:26:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the ```playrec``` function to record an audio sample being played back on an ASIO audio interface configured in loopback mode. However, when comparing the input and output audio data, the output appears to be attenuated for some reason:\r\n\r\n![capture](https://user-images.githubusercontent.com/11740200/40666959-3d41f802-6361-11e8-8472-fd11f63d8970.png)\r\n\r\nI am calling ```playrec``` as follows (code snippet):\r\n\r\n```python\r\nimport sounddevice as sdev\r\ndataIn, fs = sfile.read(test_filename, dtype='float32')\r\ndataIn = dataIn[:,0]    # strip off second channel\r\n...\r\ndataOut = sdev.playrec(dataIn, device=devId, samplerate=fs, blocking=True,\r\n                channels=1, input_mapping=[1], output_mapping=[1])\r\n```\r\n\r\nAny ideas why this is happening?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/139", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/139/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/139/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/139", "id": 323934977, "node_id": "MDU6SXNzdWUzMjM5MzQ5Nzc=", "number": 139, "title": "Possible underrun buffers when using sd.play() with many output channels", "user": {"login": "fhchl", "id": 6132231, "node_id": "MDQ6VXNlcjYxMzIyMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6132231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhchl", "html_url": "https://github.com/fhchl", "followers_url": "https://api.github.com/users/fhchl/followers", "following_url": "https://api.github.com/users/fhchl/following{/other_user}", "gists_url": "https://api.github.com/users/fhchl/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhchl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhchl/subscriptions", "organizations_url": "https://api.github.com/users/fhchl/orgs", "repos_url": "https://api.github.com/users/fhchl/repos", "events_url": "https://api.github.com/users/fhchl/events{/privacy}", "received_events_url": "https://api.github.com/users/fhchl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-05-17T09:09:14Z", "updated_at": "2019-09-25T21:24:00Z", "closed_at": "2019-09-25T21:24:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the `sounddevice.play()` function to play back audio over 18-30 separate audio channels over a Dante network on a Windows machine. The audio is also 18-30 channel, sampled at 48k and around 2 minutes long.\r\nNow sometimes, though not always, some major artifacts are noticeable. Like very quick stoppings or clicking. In the Dante Virtual Soundcard I set the buffersize (2048 samples) and asio latency (20ms) to maximum and `sounddevice.default.latency = ('hight', 'high')`. Still these artifacts continue to appear.\r\nIs there any way to check for under run buffers from within sounddevice?\r\nWould it make sense to use OutputStreams instead of `play()` as in the [examples](https://python-sounddevice.readthedocs.io/en/0.3.11/examples.html) ? Any other suggestions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/138", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/138/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/138/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/138", "id": 321682664, "node_id": "MDU6SXNzdWUzMjE2ODI2NjQ=", "number": 138, "title": "playrec()", "user": {"login": "sprocket1", "id": 27439570, "node_id": "MDQ6VXNlcjI3NDM5NTcw", "avatar_url": "https://avatars3.githubusercontent.com/u/27439570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprocket1", "html_url": "https://github.com/sprocket1", "followers_url": "https://api.github.com/users/sprocket1/followers", "following_url": "https://api.github.com/users/sprocket1/following{/other_user}", "gists_url": "https://api.github.com/users/sprocket1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprocket1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprocket1/subscriptions", "organizations_url": "https://api.github.com/users/sprocket1/orgs", "repos_url": "https://api.github.com/users/sprocket1/repos", "events_url": "https://api.github.com/users/sprocket1/events{/privacy}", "received_events_url": "https://api.github.com/users/sprocket1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-09T18:44:49Z", "updated_at": "2018-05-29T15:46:26Z", "closed_at": "2018-05-29T15:46:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can the function playrec() take two distinct keyword args for device=n for playback and device=m for record? In other words how do I explicitly set the record and playback devices independently?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/137", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/137/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/137/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/137", "id": 320000632, "node_id": "MDU6SXNzdWUzMjAwMDA2MzI=", "number": 137, "title": "ModuleNotFoundError: No module named '_sounddevice_data'", "user": {"login": "sprocket1", "id": 27439570, "node_id": "MDQ6VXNlcjI3NDM5NTcw", "avatar_url": "https://avatars3.githubusercontent.com/u/27439570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprocket1", "html_url": "https://github.com/sprocket1", "followers_url": "https://api.github.com/users/sprocket1/followers", "following_url": "https://api.github.com/users/sprocket1/following{/other_user}", "gists_url": "https://api.github.com/users/sprocket1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprocket1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprocket1/subscriptions", "organizations_url": "https://api.github.com/users/sprocket1/orgs", "repos_url": "https://api.github.com/users/sprocket1/repos", "events_url": "https://api.github.com/users/sprocket1/events{/privacy}", "received_events_url": "https://api.github.com/users/sprocket1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 23, "created_at": "2018-05-03T16:53:25Z", "updated_at": "2018-07-28T18:27:00Z", "closed_at": "2018-07-28T18:26:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm very new to Python and Spyder. \r\nI'm getting this on the Spyder console, seems related to #110 but I'm not sure what to make of it.\r\n\r\nimport sounddevice as sd\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-1-1b8d9fe8fdfa>\", line 1, in <module>\r\n    import sounddevice as sd\r\n\r\n  File \"C:\\Users\\James\\Anaconda3\\lib\\site-packages\\sounddevice.py\", line 73, in <module>\r\n    import _sounddevice_data\r\n\r\nModuleNotFoundError: No module named '_sounddevice_data'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/135", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/135/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/135/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/135", "id": 319640743, "node_id": "MDU6SXNzdWUzMTk2NDA3NDM=", "number": 135, "title": "playrec changes input_mapping if it is a numpy array", "user": {"login": "fhchl", "id": 6132231, "node_id": "MDQ6VXNlcjYxMzIyMzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6132231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhchl", "html_url": "https://github.com/fhchl", "followers_url": "https://api.github.com/users/fhchl/followers", "following_url": "https://api.github.com/users/fhchl/following{/other_user}", "gists_url": "https://api.github.com/users/fhchl/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhchl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhchl/subscriptions", "organizations_url": "https://api.github.com/users/fhchl/orgs", "repos_url": "https://api.github.com/users/fhchl/repos", "events_url": "https://api.github.com/users/fhchl/events{/privacy}", "received_events_url": "https://api.github.com/users/fhchl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226879026, "node_id": "MDU6TGFiZWwyMjY4NzkwMjY=", "url": "https://api.github.com/repos/spatialaudio/python-sounddevice/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-02T17:19:11Z", "updated_at": "2018-05-04T07:38:14Z", "closed_at": "2018-05-04T07:37:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is some strange behavior when using `sd.playrec` with the input_mapping as a ndarray.\r\n\r\n```python\r\nimport sounddevice as sd\r\nimport numpy as np\r\n\r\ninput_mapping = np.array([1, 2])\r\nsd.playrec([1.0], input_mapping=input_mapping, output_mapping=1, blocking=True)\r\nprint(input_mapping)\r\n\r\ninput_mapping = [1, 2]\r\nsd.playrec([1.0], input_mapping=input_mapping, output_mapping=1, blocking=True)\r\nprint(input_mapping)\r\n```\r\ngives\r\n```\r\n[0 1]\r\n[1, 2]\r\n```\r\n\r\nThe `input_mapping` array is changed by `playrec` --- very confusing, if input_mapping is used several times.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/134", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/134/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/134/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/134", "id": 319579740, "node_id": "MDU6SXNzdWUzMTk1Nzk3NDA=", "number": 134, "title": "sounddevice play resets ASIO buffer size to what it was when sound device was initialized", "user": {"login": "joedeller", "id": 4172306, "node_id": "MDQ6VXNlcjQxNzIzMDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4172306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joedeller", "html_url": "https://github.com/joedeller", "followers_url": "https://api.github.com/users/joedeller/followers", "following_url": "https://api.github.com/users/joedeller/following{/other_user}", "gists_url": "https://api.github.com/users/joedeller/gists{/gist_id}", "starred_url": "https://api.github.com/users/joedeller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joedeller/subscriptions", "organizations_url": "https://api.github.com/users/joedeller/orgs", "repos_url": "https://api.github.com/users/joedeller/repos", "events_url": "https://api.github.com/users/joedeller/events{/privacy}", "received_events_url": "https://api.github.com/users/joedeller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-02T14:37:18Z", "updated_at": "2018-05-03T15:20:41Z", "closed_at": "2018-05-03T15:20:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "This could well be a portaudio issue.\r\n\r\nUsing 32bit python 3.6 on windows 10 x64, sounddevice 0.3.9,\r\nwhen I play a sound, the ASIO buffer size gets reset to whatever\r\nthe buffer size was when the script initialized the sound device.\r\nIt doesn't matter if I set `sd.default.blocksize = <current buffer size>`\r\nnor setting blocksize in the play method\r\n\r\n```python\r\nimport sounddevice as sd\r\nimport numpy as np\r\n\r\n# code doing stuff for a while, another app changes ASIO buffer size during this time...\r\n# Lets play a 2 channel wave, actually a sine generated in numpy\r\nchannels = 2\r\nout_channels = np.linspace(1, channels, channels, dtype=int)\r\n # ASIO buffer size is what ever other app has set it to \r\nsd.play(my_wav, mapping =out_channels)\r\n# ASIO buffer size has been changed back to what it was when the import sounddevice as sd \r\n# was executed\r\n```\r\n\r\nif I explicitly do:\r\n\r\n```python\r\nsd._terminate()\r\ntime.sleep(1)\r\nsd._initialize()\r\nsd.default.latency = 'low'\r\n```\r\n\r\njust before the sd.play,  this works around the problem, but itsn't ideal   \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/133", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/133/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/133/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/133", "id": 316804703, "node_id": "MDU6SXNzdWUzMTY4MDQ3MDM=", "number": 133, "title": "RaspberryPi 3 Issue: ValueError: Not an input device: 'bcm2835 ALSA: - (hw:0,0)'", "user": {"login": "lgertel", "id": 634985, "node_id": "MDQ6VXNlcjYzNDk4NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/634985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgertel", "html_url": "https://github.com/lgertel", "followers_url": "https://api.github.com/users/lgertel/followers", "following_url": "https://api.github.com/users/lgertel/following{/other_user}", "gists_url": "https://api.github.com/users/lgertel/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgertel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgertel/subscriptions", "organizations_url": "https://api.github.com/users/lgertel/orgs", "repos_url": "https://api.github.com/users/lgertel/repos", "events_url": "https://api.github.com/users/lgertel/events{/privacy}", "received_events_url": "https://api.github.com/users/lgertel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-23T13:08:06Z", "updated_at": "2018-04-24T14:50:37Z", "closed_at": "2018-04-24T14:50:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello everyone!\r\nI'm with a error when trying to run on RaspberryPi3. The message is:\r\n\r\n```\r\n File \"remote.py\", line 168, in start_recording\r\n    device_info = sd.query_devices(device, 'input')\r\n  File \"/home/pi/berryconda3/lib/python3.6/site-packages/sounddevice.py\", line 510, in query_devices\r\n    'Not an {0} device: {1!r}'.format(kind, device_dict['name']))\r\nValueError: Not an input device: 'bcm2835 ALSA: - (hw:0,0)'\r\n```\r\n\r\nPortAudio is compiled and running, also the audio output is configured:\r\n\r\n```\r\n**** List of CAPTURE Hardware Devices ****\r\ncard 1: Device [USB PnP Sound Device], device 0: USB Audio [USB Audio]\r\nSubdevices: 1/1\r\nSubdevice #0: subdevice #0\r\n```\r\n\r\nAnyone knows how to deal with this?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/132", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/132/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/132/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/132", "id": 313866202, "node_id": "MDU6SXNzdWUzMTM4NjYyMDI=", "number": 132, "title": "rec_unlimited.py : How to implement without KeyboardInterrupt ", "user": {"login": "lgertel", "id": 634985, "node_id": "MDQ6VXNlcjYzNDk4NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/634985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgertel", "html_url": "https://github.com/lgertel", "followers_url": "https://api.github.com/users/lgertel/followers", "following_url": "https://api.github.com/users/lgertel/following{/other_user}", "gists_url": "https://api.github.com/users/lgertel/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgertel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgertel/subscriptions", "organizations_url": "https://api.github.com/users/lgertel/orgs", "repos_url": "https://api.github.com/users/lgertel/repos", "events_url": "https://api.github.com/users/lgertel/events{/privacy}", "received_events_url": "https://api.github.com/users/lgertel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226879031, "node_id": "MDU6TGFiZWwyMjY4NzkwMzE=", "url": "https://api.github.com/repos/spatialaudio/python-sounddevice/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-12T19:56:52Z", "updated_at": "2018-04-23T13:09:39Z", "closed_at": "2018-04-23T13:09:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to know how to wait for the thread to finish to finish my program. The way that i implemented closes before it finishes, then the audio file is cropped.\r\n\r\n\r\n    q = queue.Queue()\r\n\r\n    def callback(indata, frames, time, status):\r\n        if status:\r\n            print(status, file=sys.stderr)\r\n        q.put(indata.copy())\r\n\r\n    # Make sure the file is opened before recording anything:\r\n    with sf.SoundFile('audio.flac', mode='w', samplerate=samplerate,\r\n                      channels=channels, subtype=None) as file:\r\n        with sd.InputStream(samplerate=samplerate, device=device,\r\n                            channels=channels, callback=callback):\r\n            while True:\r\n                file.write(q.get())\r\n                if not button.is_pressed:\r\n                    break;\r\n\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/129", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/129/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/129/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/129/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/129", "id": 310312319, "node_id": "MDU6SXNzdWUzMTAzMTIzMTk=", "number": 129, "title": "Recording speaker output", "user": {"login": "GelaniNijraj", "id": 8388740, "node_id": "MDQ6VXNlcjgzODg3NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8388740?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GelaniNijraj", "html_url": "https://github.com/GelaniNijraj", "followers_url": "https://api.github.com/users/GelaniNijraj/followers", "following_url": "https://api.github.com/users/GelaniNijraj/following{/other_user}", "gists_url": "https://api.github.com/users/GelaniNijraj/gists{/gist_id}", "starred_url": "https://api.github.com/users/GelaniNijraj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GelaniNijraj/subscriptions", "organizations_url": "https://api.github.com/users/GelaniNijraj/orgs", "repos_url": "https://api.github.com/users/GelaniNijraj/repos", "events_url": "https://api.github.com/users/GelaniNijraj/events{/privacy}", "received_events_url": "https://api.github.com/users/GelaniNijraj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-01T09:58:50Z", "updated_at": "2018-06-03T07:45:28Z", "closed_at": "2018-06-03T07:45:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to record the audio currently playing out of the speaker? If so, which device should I select?\r\n\r\nHere's the list of available devices : \r\n```\r\n>>> sd.query_devices()\r\n  0 HDA Intel PCH: ALC3234 Analog (hw:0,0), ALSA (2 in, 0 out)\r\n  1 HDA Intel HDMI: 0 (hw:1,3), ALSA (0 in, 8 out)\r\n  2 HDA Intel HDMI: 1 (hw:1,7), ALSA (0 in, 8 out)\r\n  3 HDA Intel HDMI: 2 (hw:1,8), ALSA (0 in, 8 out)\r\n  4 HDA Intel HDMI: 3 (hw:1,9), ALSA (0 in, 8 out)\r\n  5 HDA Intel HDMI: 4 (hw:1,10), ALSA (0 in, 8 out)\r\n  6 sysdefault, ALSA (128 in, 0 out)\r\n  7 pulse, ALSA (32 in, 32 out)\r\n* 8 default, ALSA (32 in, 32 out)\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/128", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/128/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/128/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/128", "id": 309586136, "node_id": "MDU6SXNzdWUzMDk1ODYxMzY=", "number": 128, "title": "Error Getting Mac OS X Sound Output", "user": {"login": "UsersDoProgram", "id": 31712697, "node_id": "MDQ6VXNlcjMxNzEyNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/31712697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/UsersDoProgram", "html_url": "https://github.com/UsersDoProgram", "followers_url": "https://api.github.com/users/UsersDoProgram/followers", "following_url": "https://api.github.com/users/UsersDoProgram/following{/other_user}", "gists_url": "https://api.github.com/users/UsersDoProgram/gists{/gist_id}", "starred_url": "https://api.github.com/users/UsersDoProgram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/UsersDoProgram/subscriptions", "organizations_url": "https://api.github.com/users/UsersDoProgram/orgs", "repos_url": "https://api.github.com/users/UsersDoProgram/repos", "events_url": "https://api.github.com/users/UsersDoProgram/events{/privacy}", "received_events_url": "https://api.github.com/users/UsersDoProgram/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-03-29T01:19:40Z", "updated_at": "2020-05-04T15:05:12Z", "closed_at": "2019-09-25T10:59:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I made the following program in an attempt to try and retrieve all the audio that is being played on my Mac and replay it but everytime I run the code in [main.txt](https://github.com/spatialaudio/python-sounddevice/files/1858300/main.txt), I run across the following output,\r\n\r\nDefault Devices:\r\n```\r\n> 0 Built-in Microphone, Core Audio (2 in, 0 out)\r\n< 1 Built-in Output, Core Audio (0 in, 2 out)\r\n```\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"main.py\", line 15, in <module>\r\n    with sd.Stream(channels=2,dtype=\"float32\",callback=callback):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/sounddevice.py\", line 1654, in __init__\r\n    **_remove_self(locals()))\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/sounddevice.py\", line 772, in __init__\r\n    'Error opening {0}'.format(self.__class__.__name__))\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/sounddevice.py\", line 2563, in _check\r\n    raise PortAudioError(errormsg, err)\r\nsounddevice.PortAudioError: Error opening Stream: Invalid number of channels [PaErrorCode -9998]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/126", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/126/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/126/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/126", "id": 305376981, "node_id": "MDU6SXNzdWUzMDUzNzY5ODE=", "number": 126, "title": "PortAudio in Ubuntu 17", "user": {"login": "azi92rach", "id": 11569373, "node_id": "MDQ6VXNlcjExNTY5Mzcz", "avatar_url": "https://avatars3.githubusercontent.com/u/11569373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azi92rach", "html_url": "https://github.com/azi92rach", "followers_url": "https://api.github.com/users/azi92rach/followers", "following_url": "https://api.github.com/users/azi92rach/following{/other_user}", "gists_url": "https://api.github.com/users/azi92rach/gists{/gist_id}", "starred_url": "https://api.github.com/users/azi92rach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azi92rach/subscriptions", "organizations_url": "https://api.github.com/users/azi92rach/orgs", "repos_url": "https://api.github.com/users/azi92rach/repos", "events_url": "https://api.github.com/users/azi92rach/events{/privacy}", "received_events_url": "https://api.github.com/users/azi92rach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-15T00:41:23Z", "updated_at": "2018-03-15T11:26:25Z", "closed_at": "2018-03-15T11:26:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI have an issue to run sounddevice into Ubuntu 17. \r\n\r\nI installed Ubuntu in a new PC. Then I installed miniconda and I installed sounddevice. \r\nYou can see that PortAudio is not found. Do you know why? Does it related to the Ubuntu 17?  \r\n\r\n`$ python -m sounddevice \r\n\r\nTraceback (most recent call last):\r\n  File \"/home/parallels17/miniconda3/envs/pybpod-environment/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"/home/parallels17/miniconda3/envs/pybpod-environment/lib/python3.6/runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"/home/parallels17/miniconda3/envs/pybpod-environment/lib/python3.6/site-packages/sounddevice.py\", line 64, in <module>\r\n    raise OSError('PortAudio library not found')\r\nOSError: PortAudio library not found\r\n`\r\n\r\nThanks in advance. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/124", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/124/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/124/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/124", "id": 303434798, "node_id": "MDU6SXNzdWUzMDM0MzQ3OTg=", "number": 124, "title": "Sudden \"Invalid sample rate\"", "user": {"login": "tadly", "id": 503647, "node_id": "MDQ6VXNlcjUwMzY0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/503647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tadly", "html_url": "https://github.com/tadly", "followers_url": "https://api.github.com/users/tadly/followers", "following_url": "https://api.github.com/users/tadly/following{/other_user}", "gists_url": "https://api.github.com/users/tadly/gists{/gist_id}", "starred_url": "https://api.github.com/users/tadly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tadly/subscriptions", "organizations_url": "https://api.github.com/users/tadly/orgs", "repos_url": "https://api.github.com/users/tadly/repos", "events_url": "https://api.github.com/users/tadly/events{/privacy}", "received_events_url": "https://api.github.com/users/tadly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-08T10:44:05Z", "updated_at": "2018-03-10T09:53:12Z", "closed_at": "2018-03-08T10:48:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Erm...\r\nI know this isn't an issue of this library but I honestly don't know where else to start so I'm kinda asking for guidance here.\r\n\r\nThis f.e now produces a `Invalid sample rate [PaErrorCode -9997]` exception:\r\n```python\r\nimport sounddevice\r\nsounddevice.RawInputStream(16000, 1024, channels=1, dtype='int16')\r\n```\r\nHere's the full stack:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/tadly/Development/workspaces/python/jenny/.venv/lib/python3.6/site-packages/sounddevice.py\", line 1064, in __init__\r\n    **_remove_self(locals()))\r\n  File \"/home/tadly/Development/workspaces/python/jenny/.venv/lib/python3.6/site-packages/sounddevice.py\", line 772, in __init__\r\n    'Error opening {0}'.format(self.__class__.__name__))\r\n  File \"/home/tadly/Development/workspaces/python/jenny/.venv/lib/python3.6/site-packages/sounddevice.py\", line 2563, in _check\r\n    raise PortAudioError(errormsg, err)\r\nsounddevice.PortAudioError: Error opening RawInputStream: Invalid sample rate [PaErrorCode -9997]\r\n```\r\n\r\nIt was working just fine a few days ago.\r\n\r\nI'm running archlinux with pulseaudio.\r\nNone of the alsa, pulseaudio or portaudio packages have been updated lately and now I'm not sure what to check next.\r\nAre there any other packages I could/should check?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/123", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/123/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/123/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/123", "id": 303116497, "node_id": "MDU6SXNzdWUzMDMxMTY0OTc=", "number": 123, "title": "Displayed name in pulseaudio", "user": {"login": "tadly", "id": 503647, "node_id": "MDQ6VXNlcjUwMzY0Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/503647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tadly", "html_url": "https://github.com/tadly", "followers_url": "https://api.github.com/users/tadly/followers", "following_url": "https://api.github.com/users/tadly/following{/other_user}", "gists_url": "https://api.github.com/users/tadly/gists{/gist_id}", "starred_url": "https://api.github.com/users/tadly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tadly/subscriptions", "organizations_url": "https://api.github.com/users/tadly/orgs", "repos_url": "https://api.github.com/users/tadly/repos", "events_url": "https://api.github.com/users/tadly/events{/privacy}", "received_events_url": "https://api.github.com/users/tadly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-07T14:20:38Z", "updated_at": "2018-03-08T08:22:37Z", "closed_at": "2018-03-08T08:22:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I couldn't find anything regarding this so I'll just ask :)\r\n\r\nI'm only using the `RawInputStream` for now but I assume this applies to everything be it input or output.\r\n\r\nWhen active, pulsaudio shows the application as:\r\n`ALSA plug-in [python]: ALSA Capture from           [available devices dropdown]`\r\n\r\nIs there any way to change the name of it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/121", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/121/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/121/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/121", "id": 299958155, "node_id": "MDU6SXNzdWUyOTk5NTgxNTU=", "number": 121, "title": "AttributeError: module 'sounddevice' has no attribute 'rec'", "user": {"login": "devxpy", "id": 19492893, "node_id": "MDQ6VXNlcjE5NDkyODkz", "avatar_url": "https://avatars1.githubusercontent.com/u/19492893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devxpy", "html_url": "https://github.com/devxpy", "followers_url": "https://api.github.com/users/devxpy/followers", "following_url": "https://api.github.com/users/devxpy/following{/other_user}", "gists_url": "https://api.github.com/users/devxpy/gists{/gist_id}", "starred_url": "https://api.github.com/users/devxpy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devxpy/subscriptions", "organizations_url": "https://api.github.com/users/devxpy/orgs", "repos_url": "https://api.github.com/users/devxpy/repos", "events_url": "https://api.github.com/users/devxpy/events{/privacy}", "received_events_url": "https://api.github.com/users/devxpy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-02-24T17:40:58Z", "updated_at": "2018-02-24T21:46:06Z", "closed_at": "2018-02-24T19:47:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nPython 3.6.4 (default, Feb 19 2018, 19:54:22) \r\n[GCC 7.2.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import sounddevice\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/mnt/Stuff/Projekt/iwatkie/sounddevice.py\", line 5, in <module>\r\n    myrecording = sd.rec(int(5 * fs), channels=2)\r\nAttributeError: module 'sounddevice' has no attribute 'rec'\r\n```\r\n```\r\n$ pip freeze\r\ncffi==1.11.4\r\nnumpy==1.14.1\r\npycparser==2.18\r\nsounddevice==0.3.10\r\n```\r\ni am using pyenv", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/119", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/119/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/119/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/119", "id": 294235269, "node_id": "MDU6SXNzdWUyOTQyMzUyNjk=", "number": 119, "title": "Build should depend on PortAudio", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-04T22:02:58Z", "updated_at": "2018-02-05T18:08:41Z", "closed_at": "2018-02-05T18:08:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, during build, it uses the hardcoded PortAudio interface in ```sounddevice_build.py```.\r\n\r\nIt shouldn't use hardcoding. It should read the interface from the actual PortAudio library.\r\n\r\n(What if PortAudio changes?)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/117", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/117/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/117/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/117", "id": 289711946, "node_id": "MDU6SXNzdWUyODk3MTE5NDY=", "number": 117, "title": "Is there a way to call a function on individual samples / blocks when recording?", "user": {"login": "anath2", "id": 6244541, "node_id": "MDQ6VXNlcjYyNDQ1NDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6244541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anath2", "html_url": "https://github.com/anath2", "followers_url": "https://api.github.com/users/anath2/followers", "following_url": "https://api.github.com/users/anath2/following{/other_user}", "gists_url": "https://api.github.com/users/anath2/gists{/gist_id}", "starred_url": "https://api.github.com/users/anath2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anath2/subscriptions", "organizations_url": "https://api.github.com/users/anath2/orgs", "repos_url": "https://api.github.com/users/anath2/repos", "events_url": "https://api.github.com/users/anath2/events{/privacy}", "received_events_url": "https://api.github.com/users/anath2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-18T17:26:10Z", "updated_at": "2018-02-21T03:02:35Z", "closed_at": "2018-01-20T15:56:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a UI that responds to audio being recorded. Also, I want to calculate fast Fourier transform on each block for my pitch detection algorithm. Would that be possible?\r\nThanks a lot ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/115", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/115/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/115/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/115", "id": 283378283, "node_id": "MDU6SXNzdWUyODMzNzgyODM=", "number": 115, "title": "Unable to import", "user": {"login": "bitworm", "id": 7471955, "node_id": "MDQ6VXNlcjc0NzE5NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/7471955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitworm", "html_url": "https://github.com/bitworm", "followers_url": "https://api.github.com/users/bitworm/followers", "following_url": "https://api.github.com/users/bitworm/following{/other_user}", "gists_url": "https://api.github.com/users/bitworm/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitworm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitworm/subscriptions", "organizations_url": "https://api.github.com/users/bitworm/orgs", "repos_url": "https://api.github.com/users/bitworm/repos", "events_url": "https://api.github.com/users/bitworm/events{/privacy}", "received_events_url": "https://api.github.com/users/bitworm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-19T21:41:11Z", "updated_at": "2019-09-25T10:59:44Z", "closed_at": "2019-09-25T10:59:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to install this per instructions on the webpage and get this error:\r\n ```\r\n 2632     \"\"\"Initialize PortAudio.\"\"\"\r\n   2633     global _initialized\r\n-> 2634     _check(_lib.Pa_Initialize(), 'Error initializing PortAudio')\r\n   2635     _initialized += 1\r\n   2636\r\n\r\nerror: symbol 'Pa_Initialize' not found in library '<None>': dlsym(RTLD_DEFAULT, Pa_Initialize): symbol not found\r\n```\r\nAll dependencies were satisfied (according to webpage instructions).  Any thoughts?\r\n\r\nOther info: macos, python 3.5.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/114", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/114/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/114/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/114", "id": 279215939, "node_id": "MDU6SXNzdWUyNzkyMTU5Mzk=", "number": 114, "title": "Playback on CHIP SoC drops the first .5-1s of sound", "user": {"login": "stealthdave", "id": 27826, "node_id": "MDQ6VXNlcjI3ODI2", "avatar_url": "https://avatars1.githubusercontent.com/u/27826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stealthdave", "html_url": "https://github.com/stealthdave", "followers_url": "https://api.github.com/users/stealthdave/followers", "following_url": "https://api.github.com/users/stealthdave/following{/other_user}", "gists_url": "https://api.github.com/users/stealthdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/stealthdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stealthdave/subscriptions", "organizations_url": "https://api.github.com/users/stealthdave/orgs", "repos_url": "https://api.github.com/users/stealthdave/repos", "events_url": "https://api.github.com/users/stealthdave/events{/privacy}", "received_events_url": "https://api.github.com/users/stealthdave/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-12-05T01:46:02Z", "updated_at": "2017-12-07T08:00:46Z", "closed_at": "2017-12-06T20:11:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using `sounddevice` on a CHIP SoC computer (Raspberry Pi competitor) causes the sound to start playing before the device completes initialization, causing the first .5s-1s of sound to be dropped.  I discovered this while working with the Google Assistant SDK, which uses the `sounddevice` library for playback.  Playing sound using `pyaudio`, while choppy, did not drop any part of the sound.\r\n\r\nTo recreate, I used `sounddevice` 0.3.9 with `python` 3.4 on the CHIP Linux 4.4 headless OS.  Following the example `play_file.py` from http://python-sounddevice.readthedocs.io/en/0.3.9/examples.html:\r\n\r\n> import sounddevice as sd\r\n> import soundfile as sf\r\n> data, fs = sf.read(args.filename, dtype='float32')\r\n> sd.play(data, fs, device=args.device)\r\n\r\nPlaying file once results in missing audio.  Playing the file a second time in the same Python session (without closing the device) plays all audio with no drops.\r\n\r\nThis example of `pyaudio` played all sound, but was choppy.\r\nhttps://stackoverflow.com/questions/17657103/how-to-play-wav-file-in-python\r\n\r\n[Chip forum thread for reference](https://bbs.nextthing.co/t/strange-audio-output-behavior-missing-first-few-words/5495/16)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/110", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/110/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/110/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/110", "id": 273168768, "node_id": "MDU6SXNzdWUyNzMxNjg3Njg=", "number": 110, "title": "Did moving sounddevice.py break _sounddevice_data installation?", "user": {"login": "tgarc", "id": 431388, "node_id": "MDQ6VXNlcjQzMTM4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/431388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgarc", "html_url": "https://github.com/tgarc", "followers_url": "https://api.github.com/users/tgarc/followers", "following_url": "https://api.github.com/users/tgarc/following{/other_user}", "gists_url": "https://api.github.com/users/tgarc/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgarc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgarc/subscriptions", "organizations_url": "https://api.github.com/users/tgarc/orgs", "repos_url": "https://api.github.com/users/tgarc/repos", "events_url": "https://api.github.com/users/tgarc/events{/privacy}", "received_events_url": "https://api.github.com/users/tgarc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-11-11T19:14:10Z", "updated_at": "2018-05-03T16:51:13Z", "closed_at": "2017-12-06T09:45:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "So in commit 6e1d71547 you moved sounddevice.py under src and I'm just wondering if this doesn't break the libportaudio load that is attempted at the top of sounddevice.py. If sounddevice.py still gets installed directly to the site-packages directory (i.e. not in a subdirectory) than it shouldn't be an issue but I can't tell if this is the behavior on all platforms. Can't test this on windows/macos at the moment hence why I'm asking.\r\n\r\nBTW this came up because I had sounddevice installed in editable mode (pip install -e <local-sounddevice-directory>) and with this setup _sounddevice_data is actually up a directory from sounddevice.py; so in that case the libportaudio load is does not work properly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/109", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/109/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/109/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/109", "id": 272540895, "node_id": "MDU6SXNzdWUyNzI1NDA4OTU=", "number": 109, "title": "Examples don't work ", "user": {"login": "alkopop79", "id": 7830857, "node_id": "MDQ6VXNlcjc4MzA4NTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/7830857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alkopop79", "html_url": "https://github.com/alkopop79", "followers_url": "https://api.github.com/users/alkopop79/followers", "following_url": "https://api.github.com/users/alkopop79/following{/other_user}", "gists_url": "https://api.github.com/users/alkopop79/gists{/gist_id}", "starred_url": "https://api.github.com/users/alkopop79/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alkopop79/subscriptions", "organizations_url": "https://api.github.com/users/alkopop79/orgs", "repos_url": "https://api.github.com/users/alkopop79/repos", "events_url": "https://api.github.com/users/alkopop79/events{/privacy}", "received_events_url": "https://api.github.com/users/alkopop79/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-09T12:06:35Z", "updated_at": "2017-11-30T09:56:32Z", "closed_at": "2017-11-30T09:56:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried to run the spectrogram and the plot input examples (Ubuntu) and they yielded similar errors: \r\n\r\n```\r\n  File \"plot_input.py\", line 48\r\n    print(status, flush=True)\r\n                       ^\r\nSyntaxError: invalid syntax\r\n\r\n\r\n------------------\r\n(program exited with code: 1)\r\nPress return to continue\r\n```\r\nand \r\n```\r\n  File \"spectrogram.py\", line 70\r\n    print(*line, sep='', end='\\x1b[0m\\n', flush=True)\r\n          ^\r\nSyntaxError: invalid syntax\r\n\r\n\r\n------------------\r\n(program exited with code: 1)\r\nPress return to continue\r\n\r\n```\r\n\r\n\r\nWhat am I missing here? What'#s the deal with 'Flush'?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/108", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/108/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/108/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/108", "id": 271313276, "node_id": "MDU6SXNzdWUyNzEzMTMyNzY=", "number": 108, "title": "Simultaneous Playback and Recording? is this expected to work?", "user": {"login": "chendy", "id": 601798, "node_id": "MDQ6VXNlcjYwMTc5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/601798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chendy", "html_url": "https://github.com/chendy", "followers_url": "https://api.github.com/users/chendy/followers", "following_url": "https://api.github.com/users/chendy/following{/other_user}", "gists_url": "https://api.github.com/users/chendy/gists{/gist_id}", "starred_url": "https://api.github.com/users/chendy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chendy/subscriptions", "organizations_url": "https://api.github.com/users/chendy/orgs", "repos_url": "https://api.github.com/users/chendy/repos", "events_url": "https://api.github.com/users/chendy/events{/privacy}", "received_events_url": "https://api.github.com/users/chendy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-05T20:54:57Z", "updated_at": "2017-11-05T21:41:55Z", "closed_at": "2017-11-05T21:40:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm doing a basic loop back test, to check whether it would be possible to record, process then output some audio real time. I tried the code below. It works, but there are audio glitches every time the code loops. Should this work, or is this sort of thing possible with sounddevice? \r\n\r\n```\r\nmyrecording = \\\r\n    sd.rec(fs * duration, samplerate=fs, channels=1, dtype='float32')\r\nsd.wait()\r\n\r\nwhile 1:\r\n    new_recording = sd.playrec(myrecording, fs, channels=1)\r\n    sd.wait()\r\n    myrecording = new_recording\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/107", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/107/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/107/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/107", "id": 270383501, "node_id": "MDU6SXNzdWUyNzAzODM1MDE=", "number": 107, "title": "Trouble installing CFFI module", "user": {"login": "DevoDon", "id": 33291810, "node_id": "MDQ6VXNlcjMzMjkxODEw", "avatar_url": "https://avatars3.githubusercontent.com/u/33291810?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevoDon", "html_url": "https://github.com/DevoDon", "followers_url": "https://api.github.com/users/DevoDon/followers", "following_url": "https://api.github.com/users/DevoDon/following{/other_user}", "gists_url": "https://api.github.com/users/DevoDon/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevoDon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevoDon/subscriptions", "organizations_url": "https://api.github.com/users/DevoDon/orgs", "repos_url": "https://api.github.com/users/DevoDon/repos", "events_url": "https://api.github.com/users/DevoDon/events{/privacy}", "received_events_url": "https://api.github.com/users/DevoDon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-01T17:19:23Z", "updated_at": "2019-09-25T11:00:05Z", "closed_at": "2019-09-25T11:00:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n```\r\nC:\\WINDOWS\\system32>py -m pip install cffi --user\r\nCollecting cffi\r\n  Using cached cffi-1.11.2.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"C:\\Users\\Dale\\AppData\\Local\\Temp\\pip-build-z8xjfkhv\\cffi\\setup.py\", line 116, in <module>\r\n        if sys.platform == 'win32' and uses_msvc():\r\n      File \"C:\\Users\\Dale\\AppData\\Local\\Temp\\pip-build-z8xjfkhv\\cffi\\setup.py\", line 94, in uses_msvc\r\n        return config.try_compile('#ifndef _MSC_VER\\n#error \"not MSVC\"\\n#endif')\r\n      File \"C:\\Program Files\\Python37\\lib\\distutils\\command\\config.py\", line 227, in try_compile\r\n        self._compile(body, headers, include_dirs, lang)\r\n      File \"C:\\Program Files\\Python37\\lib\\distutils\\command\\config.py\", line 133, in _compile\r\n        self.compiler.compile([src], include_dirs=include_dirs)\r\n      File \"C:\\Program Files\\Python37\\lib\\distutils\\_msvccompiler.py\", line 345, in compile\r\n        self.initialize()\r\n      File \"C:\\Program Files\\Python37\\lib\\distutils\\_msvccompiler.py\", line 238, in initialize\r\n        vc_env = _get_vc_env(plat_spec)\r\n      File \"C:\\Program Files\\Python37\\lib\\site-packages\\setuptools\\msvc.py\", line 185, in msvc14_get_vc_env\r\n        return EnvironmentInfo(plat_spec, vc_min_ver=14.0).return_env()\r\n      File \"C:\\Program Files\\Python37\\lib\\site-packages\\setuptools\\msvc.py\", line 1228, in return_env\r\n        [self.VCIncludes,\r\n      File \"C:\\Program Files\\Python37\\lib\\site-packages\\setuptools\\msvc.py\", line 877, in VCIncludes\r\n        return [os.path.join(self.si.VCInstallDir, 'Include'),\r\n      File \"C:\\Program Files\\Python37\\lib\\site-packages\\setuptools\\msvc.py\", line 556, in VCInstallDir\r\n        raise distutils.errors.DistutilsPlatformError(msg)\r\n    distutils.errors.DistutilsPlatformError: Microsoft Visual C++ 14.0 is required. Get it with \"Microsoft Visual C++ Build Tools\": http://landinghub.visualstudio.com/visual-cpp-build-tools\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in C:\\Users\\Dale\\AppData\\Local\\Temp\\pip-build-z8xjfkhv\\cffi\\\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/101", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/101/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/101/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/101", "id": 259229725, "node_id": "MDU6SXNzdWUyNTkyMjk3MjU=", "number": 101, "title": "Slow import times with cffi", "user": {"login": "tgarc", "id": 431388, "node_id": "MDQ6VXNlcjQzMTM4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/431388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgarc", "html_url": "https://github.com/tgarc", "followers_url": "https://api.github.com/users/tgarc/followers", "following_url": "https://api.github.com/users/tgarc/following{/other_user}", "gists_url": "https://api.github.com/users/tgarc/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgarc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgarc/subscriptions", "organizations_url": "https://api.github.com/users/tgarc/orgs", "repos_url": "https://api.github.com/users/tgarc/repos", "events_url": "https://api.github.com/users/tgarc/events{/privacy}", "received_events_url": "https://api.github.com/users/tgarc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-20T16:43:18Z", "updated_at": "2017-10-21T08:05:45Z", "closed_at": "2017-10-21T08:05:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "What would you think about implementing the out-of-line ABI mode to improve import times? That mode is mentioned here in the docs:\r\n\r\nhttp://cffi.readthedocs.io/en/latest/overview.html#out-of-line-abi-level\r\n\r\nIt still wouldn't require compiling the module, it just requires adding an extra file to the repository. I haven't given it a full look through, but was wondering if you would be open to the change. My issue is that the _FFI() and dlopen add hundreds of milliseconds of delay, even on my desktop ! You can imagine that on raspberry pi the delay would be even worse. I'm trying to use sounddevice to create a command line tool that should have a snappy start up time so that's personally why I'm interested but I think this change could improve overall usability.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/100", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/100/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/100/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/100", "id": 251895442, "node_id": "MDU6SXNzdWUyNTE4OTU0NDI=", "number": 100, "title": "Audio glitches in callback stream", "user": {"login": "alfredwidell", "id": 30498981, "node_id": "MDQ6VXNlcjMwNDk4OTgx", "avatar_url": "https://avatars2.githubusercontent.com/u/30498981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredwidell", "html_url": "https://github.com/alfredwidell", "followers_url": "https://api.github.com/users/alfredwidell/followers", "following_url": "https://api.github.com/users/alfredwidell/following{/other_user}", "gists_url": "https://api.github.com/users/alfredwidell/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredwidell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredwidell/subscriptions", "organizations_url": "https://api.github.com/users/alfredwidell/orgs", "repos_url": "https://api.github.com/users/alfredwidell/repos", "events_url": "https://api.github.com/users/alfredwidell/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredwidell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-08-22T09:33:58Z", "updated_at": "2017-10-21T08:57:29Z", "closed_at": "2017-10-21T08:57:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have an issue with audio glitches in my callback stream. I get audio out with short blocks of silence in between. I'm filtering 2 channels incoming data in frequency domain for 6 output channels. If I just copy the incoming data to the 6 outputs everything works fine `y_out[:, i] = x[:, i%2]`, no audio glitches. But as soon as I add some number crunching with the fft/ifft I start getting the audio glitches. I have checked that the problem does not lay in the filter process itself because when I send the indata directly to the output `y_out[:, i] = x[:, i%2]`, but keep the fft/ifft calculations in the loop I also get the glitches. I have also checked the load on the CPU and it is only working 4-5% of its maximum so I do not think that is the bottle neck. Is there something in the configuration/buffering that gives me this problem you think?\r\n\r\nSee code:\r\n```\r\n# Filter process\r\ndef filter_process(x, y_out, nr_samp, time, status):\r\n    for i in range(NrOutChan):\r\n        # y_out[:, i] = x[:, i%2]\r\n        X = pyfftw.interfaces.numpy_fft.rfft(np.concatenate([x[:, i%2], x_zeros[i]]))\r\n        y = pyfftw.interfaces.numpy_fft.irfft(X * H[i])\r\n        y_out[:, i] = np.concatenate([overlap_save[i] + y[0:non_val[i]], y[non_val[i]:non_val[i] + val[i]]])\r\n        overlap_save[i] = y[non_val[i] + val[i]:y_len[i] + 1]\r\n\r\n\r\ndef start(dev_index_in, dev_index_out, dev_chan_in, dev_chan_out, blocksize, dtype, fs):\r\n    # Set PortAudio Stream configuration parameters\r\n    if sounddevice.query_devices(dev_index_in)['hostapi'] != 2 or \\\r\n                    sounddevice.query_devices(dev_index_out)['hostapi'] != 2:  # If not an ASIO device\r\n        extra_settings = None\r\n        channels = None\r\n    else:\r\n        extra_settings = [sounddevice.AsioSettings(channel_selectors=dev_chan_in),\r\n                          sounddevice.AsioSettings(channel_selectors=dev_chan_out)]\r\n        channels = [len(dev_chan_in), len(dev_chan_out)]\r\n\r\n    # Initialize PortAudio Stream\r\n    st = sounddevice.Stream(samplerate=fs,\r\n                            blocksize=block_size,\r\n                            device=[dev_index_in, dev_index_out],\r\n                            channels=channels,\r\n                            dtype=dtype,\r\n                            latency='high',\r\n                            extra_settings=extra_settings,\r\n                            callback=filter_process,\r\n                            finished_callback=None,\r\n                            clip_off=False,\r\n                            dither_off=False,\r\n                            never_drop_input=False,\r\n                            prime_output_buffers_using_stream_callback=False)\r\n\r\n    # Start stream\r\n    st.start()\r\n\r\n    # Return Stream object\r\n    return st\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/98", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/98/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/98/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/98", "id": 250989974, "node_id": "MDU6SXNzdWUyNTA5ODk5NzQ=", "number": 98, "title": "Latency ", "user": {"login": "azi92rach", "id": 11569373, "node_id": "MDQ6VXNlcjExNTY5Mzcz", "avatar_url": "https://avatars3.githubusercontent.com/u/11569373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azi92rach", "html_url": "https://github.com/azi92rach", "followers_url": "https://api.github.com/users/azi92rach/followers", "following_url": "https://api.github.com/users/azi92rach/following{/other_user}", "gists_url": "https://api.github.com/users/azi92rach/gists{/gist_id}", "starred_url": "https://api.github.com/users/azi92rach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azi92rach/subscriptions", "organizations_url": "https://api.github.com/users/azi92rach/orgs", "repos_url": "https://api.github.com/users/azi92rach/repos", "events_url": "https://api.github.com/users/azi92rach/events{/privacy}", "received_events_url": "https://api.github.com/users/azi92rach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-17T15:50:40Z", "updated_at": "2017-09-05T13:39:30Z", "closed_at": "2017-09-05T13:38:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI am using sounddevice to trig a sound when an event occurs. \r\n\r\nNow I am testing the latency that the sound have, I mean I want to know how many time there is between the event and the sound triggered. \r\n\r\nI am using Ubuntu and I installed the lowlatency kernel. I have 3 sound card Asusu DX installed as you can see here: \r\n\r\n```\r\n   0 Xonar DX: Multichannel (hw:0,0), ALSA (2 in, 8 out)\r\n   1 Xonar DX: Digital (hw:0,1), ALSA (2 in, 2 out)\r\n   2 HDA Intel PCH: ALC887-VD Analog (hw:1,0), ALSA (2 in, 2 out)\r\n   3 HDA Intel PCH: ALC887-VD Digital (hw:1,1), ALSA (0 in, 2 out)\r\n   4 HDA Intel PCH: ALC887-VD Alt Analog (hw:1,2), ALSA (2 in, 0 out)\r\n   5 HDA Intel PCH: HDMI 0 (hw:1,3), ALSA (0 in, 8 out)\r\n   6 Xonar DX: Multichannel (hw:2,0), ALSA (2 in, 8 out)\r\n   7 Xonar DX: Digital (hw:2,1), ALSA (2 in, 2 out)\r\n   8 Xonar DX: Multichannel (hw:3,0), ALSA (2 in, 8 out)\r\n   9 Xonar DX: Digital (hw:3,1), ALSA (2 in, 2 out)\r\n  10 sysdefault, ALSA (128 in, 128 out)\r\n  11 front, ALSA (0 in, 8 out)\r\n  12 surround40, ALSA (0 in, 4 out)\r\n  13 surround41, ALSA (0 in, 6 out)\r\n  14 surround50, ALSA (0 in, 6 out)\r\n  15 surround51, ALSA (0 in, 6 out)\r\n  16 surround71, ALSA (0 in, 8 out)\r\n  17 iec958, ALSA (0 in, 2 out)\r\n  18 spdif, ALSA (2 in, 2 out)\r\n  19 pulse, ALSA (32 in, 32 out)\r\n  20 dmix, ALSA (0 in, 2 out)\r\n* 21 default, ALSA (32 in, 32 out)\r\n```\r\n\r\n\r\nI note that when I use the following command the latency is about 45ms: \r\n`sd.play(sound, blocking=False, device = 0)` \r\n\r\nAnd if I remove the device info as the following the latency was about 10ms\r\n`sd.play(sound, blocking=False)` \r\n\r\nCould you help me? I need less latency possible, and I need to play different sounds using different cards. So I can't use the default output to play the sound, I need to specify which card. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/96", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/96/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/96/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/96", "id": 246034575, "node_id": "MDU6SXNzdWUyNDYwMzQ1NzU=", "number": 96, "title": "Query soundcard for supported sample rates", "user": {"login": "alfredwidell", "id": 30498981, "node_id": "MDQ6VXNlcjMwNDk4OTgx", "avatar_url": "https://avatars2.githubusercontent.com/u/30498981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alfredwidell", "html_url": "https://github.com/alfredwidell", "followers_url": "https://api.github.com/users/alfredwidell/followers", "following_url": "https://api.github.com/users/alfredwidell/following{/other_user}", "gists_url": "https://api.github.com/users/alfredwidell/gists{/gist_id}", "starred_url": "https://api.github.com/users/alfredwidell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alfredwidell/subscriptions", "organizations_url": "https://api.github.com/users/alfredwidell/orgs", "repos_url": "https://api.github.com/users/alfredwidell/repos", "events_url": "https://api.github.com/users/alfredwidell/events{/privacy}", "received_events_url": "https://api.github.com/users/alfredwidell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-07-27T13:11:32Z", "updated_at": "2018-03-30T12:44:42Z", "closed_at": "2017-10-23T12:07:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI'm missing a function that seem to be available in PortAudio and that is the option to query the soundcard for supported sample rates. The function \"Pa_IsFormatSupported\" is available in the C implementation but I cannot find it in sounddevice. I think it would be a good feature to implement.\r\nSee: http://portaudio.com/docs/v19-doxydocs/querying_devices.html\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/95", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/95/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/95/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/95", "id": 243597128, "node_id": "MDU6SXNzdWUyNDM1OTcxMjg=", "number": 95, "title": "Question: possible to record only select channels with RawInputStream?", "user": {"login": "drammock", "id": 1810515, "node_id": "MDQ6VXNlcjE4MTA1MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1810515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drammock", "html_url": "https://github.com/drammock", "followers_url": "https://api.github.com/users/drammock/followers", "following_url": "https://api.github.com/users/drammock/following{/other_user}", "gists_url": "https://api.github.com/users/drammock/gists{/gist_id}", "starred_url": "https://api.github.com/users/drammock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drammock/subscriptions", "organizations_url": "https://api.github.com/users/drammock/orgs", "repos_url": "https://api.github.com/users/drammock/repos", "events_url": "https://api.github.com/users/drammock/events{/privacy}", "received_events_url": "https://api.github.com/users/drammock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-18T04:32:53Z", "updated_at": "2017-07-19T23:17:33Z", "closed_at": "2017-07-19T23:17:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am dealing with the following situation: a MacOS computer with an external A-to-D box (M-Audio FastTrack Ultra 8R) that talks to the computer via USB.  The FastTrack *only* exports 24-bit audio, so I must use `RawInputStream`.  Moreover, I need to support variable-duration recordings.  I've got it working (based on [this example](https://python-sounddevice.readthedocs.io/en/0.3.8/examples.html#recording-with-arbitrary-duration)). However, the audio I need to record happens to be on channel 5 of the external box, and I've been asked not to switch around which mics go into which channels, so to get everything to work I've had to read in 5 channels (currently the script also writes out 5 channels, but I'd prefer to read/write only 1 channel).  Is there a way to do a `RawInputStream` that only listens to specific channels?  Here's the relevant bit of my code (the [callback function](https://github.com/drammock/gend-intel/blob/master/run-experiment.py#L191-L204)).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/94", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/94/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/94/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/94", "id": 243593129, "node_id": "MDU6SXNzdWUyNDM1OTMxMjk=", "number": 94, "title": "playrec() recording is sped up", "user": {"login": "jeffdbeats", "id": 13652893, "node_id": "MDQ6VXNlcjEzNjUyODkz", "avatar_url": "https://avatars0.githubusercontent.com/u/13652893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffdbeats", "html_url": "https://github.com/jeffdbeats", "followers_url": "https://api.github.com/users/jeffdbeats/followers", "following_url": "https://api.github.com/users/jeffdbeats/following{/other_user}", "gists_url": "https://api.github.com/users/jeffdbeats/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffdbeats/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffdbeats/subscriptions", "organizations_url": "https://api.github.com/users/jeffdbeats/orgs", "repos_url": "https://api.github.com/users/jeffdbeats/repos", "events_url": "https://api.github.com/users/jeffdbeats/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffdbeats/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-18T03:58:19Z", "updated_at": "2017-07-18T04:37:50Z", "closed_at": "2017-07-18T04:30:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have got the `playrec()` feature to almost work, for some reason the recording is slightly sped up. I can not think of why the after.wav file would be playing slightly faster. Here is what I have so far:\r\n\r\n            \r\n            filetoplay = \"before.wav\"\r\n            filetorecord = \"after.wav\"\r\n            data, fs = sf.read(filetoplay, dtype='float32')\r\n            myrecording = sd.playrec(data, fs, 2)\r\n            sd.wait()\r\n            sf.write(filetorecord, myrecording, 48000)\r\n\r\nThanks!\r\nJeff", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/93", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/93/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/93/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/93", "id": 243322448, "node_id": "MDU6SXNzdWUyNDMzMjI0NDg=", "number": 93, "title": "Converting a .wav into numpy array", "user": {"login": "jeffdbeats", "id": 13652893, "node_id": "MDQ6VXNlcjEzNjUyODkz", "avatar_url": "https://avatars0.githubusercontent.com/u/13652893?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeffdbeats", "html_url": "https://github.com/jeffdbeats", "followers_url": "https://api.github.com/users/jeffdbeats/followers", "following_url": "https://api.github.com/users/jeffdbeats/following{/other_user}", "gists_url": "https://api.github.com/users/jeffdbeats/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeffdbeats/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeffdbeats/subscriptions", "organizations_url": "https://api.github.com/users/jeffdbeats/orgs", "repos_url": "https://api.github.com/users/jeffdbeats/repos", "events_url": "https://api.github.com/users/jeffdbeats/events{/privacy}", "received_events_url": "https://api.github.com/users/jeffdbeats/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-17T08:13:08Z", "updated_at": "2017-07-18T02:14:44Z", "closed_at": "2017-07-18T02:14:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "How would one simply convert a .wav into a NumPy Array? I have been searching all over and it seems like you need SciPy? I can not find a really good simple example.\r\n\r\nInstead of doing sd.play(numpyarray) I wonder if it would be possible to just simply implement a way to do sd.play(\"file.wav\")?\r\n\r\nUltimately my goal is to use sounddevice for its sd.playrec feature, that is exactly what I need.\r\n\r\nThanks!\r\nJeff", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/92", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/92/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/92/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/92", "id": 242712513, "node_id": "MDU6SXNzdWUyNDI3MTI1MTM=", "number": 92, "title": "Conversion digital-analog", "user": {"login": "azi92rach", "id": 11569373, "node_id": "MDQ6VXNlcjExNTY5Mzcz", "avatar_url": "https://avatars3.githubusercontent.com/u/11569373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azi92rach", "html_url": "https://github.com/azi92rach", "followers_url": "https://api.github.com/users/azi92rach/followers", "following_url": "https://api.github.com/users/azi92rach/following{/other_user}", "gists_url": "https://api.github.com/users/azi92rach/gists{/gist_id}", "starred_url": "https://api.github.com/users/azi92rach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azi92rach/subscriptions", "organizations_url": "https://api.github.com/users/azi92rach/orgs", "repos_url": "https://api.github.com/users/azi92rach/repos", "events_url": "https://api.github.com/users/azi92rach/events{/privacy}", "received_events_url": "https://api.github.com/users/azi92rach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-07-13T14:04:53Z", "updated_at": "2017-07-31T13:27:28Z", "closed_at": "2017-07-26T09:09:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, could you tell me how the output is implemented? \r\nI mean, how the the voltage(volts) of the sound card output is controlled? Does exist any min-max of these values?  \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/87", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/87/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/87/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/87", "id": 238791158, "node_id": "MDU6SXNzdWUyMzg3OTExNTg=", "number": 87, "title": "the stop() function freezes the execution and the sound is disturbed", "user": {"login": "azi92rach", "id": 11569373, "node_id": "MDQ6VXNlcjExNTY5Mzcz", "avatar_url": "https://avatars3.githubusercontent.com/u/11569373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azi92rach", "html_url": "https://github.com/azi92rach", "followers_url": "https://api.github.com/users/azi92rach/followers", "following_url": "https://api.github.com/users/azi92rach/following{/other_user}", "gists_url": "https://api.github.com/users/azi92rach/gists{/gist_id}", "starred_url": "https://api.github.com/users/azi92rach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azi92rach/subscriptions", "organizations_url": "https://api.github.com/users/azi92rach/orgs", "repos_url": "https://api.github.com/users/azi92rach/repos", "events_url": "https://api.github.com/users/azi92rach/events{/privacy}", "received_events_url": "https://api.github.com/users/azi92rach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2017-06-27T09:33:56Z", "updated_at": "2017-07-25T15:45:07Z", "closed_at": "2017-07-25T15:45:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! I started to use the sounddevice for an implementation of a system that trig the sound when an event occurs and stops when for an other event.\r\nI noted that the stop() function freezes the execution. This happen only on Ubuntu while on Macbook works fine. I didn't understand why. \r\nMoreover,  on Ubuntu when the sounddevice is running in an implementation the sound played is disturbed, i.e. not continuously.  If I use the wait() function works but I can't use it since I need to stop the sound by an event. \r\nOn Mackbook everything works with the same code, so I think that the problem is related with Ubuntu. \r\nCan you help me? \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/86", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/86/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/86/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/86", "id": 230151254, "node_id": "MDU6SXNzdWUyMzAxNTEyNTQ=", "number": 86, "title": "Question: How to Implement a \"PTT\" based on events", "user": {"login": "x11tete11x", "id": 2127236, "node_id": "MDQ6VXNlcjIxMjcyMzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2127236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/x11tete11x", "html_url": "https://github.com/x11tete11x", "followers_url": "https://api.github.com/users/x11tete11x/followers", "following_url": "https://api.github.com/users/x11tete11x/following{/other_user}", "gists_url": "https://api.github.com/users/x11tete11x/gists{/gist_id}", "starred_url": "https://api.github.com/users/x11tete11x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/x11tete11x/subscriptions", "organizations_url": "https://api.github.com/users/x11tete11x/orgs", "repos_url": "https://api.github.com/users/x11tete11x/repos", "events_url": "https://api.github.com/users/x11tete11x/events{/privacy}", "received_events_url": "https://api.github.com/users/x11tete11x/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-20T12:38:45Z", "updated_at": "2017-06-03T04:40:48Z", "closed_at": "2017-06-03T04:40:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!, first, thx for your work!, i have some code that works with pyaudio that i wanna port to sound device works in this way:\r\nPTT= Push to Talk\r\n\r\ni have an Input Stream that:\r\n1_ User press button \"record\" from a QT GUI, that trigger \"streamInput.start_stream()\"\r\n2_ The stream Input start to record to an a var that then i send over a udp socket\r\n3_ User release the button \"record\" from GUI, that trigger \"streamInput.stop_stream()\" that finish that record\r\n\r\nit's possible to do something similar in sounddevice? (i dont find any way to start and \"pause\" a stream) BTW, for now i do this:\r\n\r\ndef start_record():\r\n    global myrecording\r\n    myrecording = sd.rec(60 * fs, samplerate=fs, channels=2, dtype='float64')\r\n\r\ndef stop_record():\r\n    sd.stop()\r\n\r\nworks in a pretty same way (except for that limit to record, that shouldn't be much problematic, it's a PTT, it's made for make short comunications between interlocutors)\r\n\r\nThx!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/81", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/81/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/81/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/81", "id": 218717529, "node_id": "MDU6SXNzdWUyMTg3MTc1Mjk=", "number": 81, "title": "Sounddevice doesn't play if a program that uses sound is opened.", "user": {"login": "OmarEmaraDev", "id": 25300994, "node_id": "MDQ6VXNlcjI1MzAwOTk0", "avatar_url": "https://avatars1.githubusercontent.com/u/25300994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OmarEmaraDev", "html_url": "https://github.com/OmarEmaraDev", "followers_url": "https://api.github.com/users/OmarEmaraDev/followers", "following_url": "https://api.github.com/users/OmarEmaraDev/following{/other_user}", "gists_url": "https://api.github.com/users/OmarEmaraDev/gists{/gist_id}", "starred_url": "https://api.github.com/users/OmarEmaraDev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OmarEmaraDev/subscriptions", "organizations_url": "https://api.github.com/users/OmarEmaraDev/orgs", "repos_url": "https://api.github.com/users/OmarEmaraDev/repos", "events_url": "https://api.github.com/users/OmarEmaraDev/events{/privacy}", "received_events_url": "https://api.github.com/users/OmarEmaraDev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-04-01T19:28:38Z", "updated_at": "2017-11-01T15:44:44Z", "closed_at": "2017-10-23T07:05:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nI am on Arch Linux and I started using SD today. My initial tests worked just fine. But when I opened another application like Spotify that play music (It is just opened but it doesn't play anything) and then tried to play a sound, it doesn't work anymore. Even if I closed Spotify it won't work till I restart my PC.\r\n\r\nDevices are listed normally and it doesn't return any errors. Is this a normal behaviour or is it a bug?\r\n\r\nAnd just a small question, Can I play during the playing of another sound? For instance, if a sound's duration is 1s, can I play the sound then after 0.5s play it again without the second sound killing the first sound (I want them to play at the same time).\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/80", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/80/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/80/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/80", "id": 217685866, "node_id": "MDU6SXNzdWUyMTc2ODU4NjY=", "number": 80, "title": "cffi.api.CDefError: only supports the syntax \"#define paUseHostApiSpecificDeviceSpecification ...\" (literally)", "user": {"login": "josephernest", "id": 6168083, "node_id": "MDQ6VXNlcjYxNjgwODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/6168083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josephernest", "html_url": "https://github.com/josephernest", "followers_url": "https://api.github.com/users/josephernest/followers", "following_url": "https://api.github.com/users/josephernest/following{/other_user}", "gists_url": "https://api.github.com/users/josephernest/gists{/gist_id}", "starred_url": "https://api.github.com/users/josephernest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josephernest/subscriptions", "organizations_url": "https://api.github.com/users/josephernest/orgs", "repos_url": "https://api.github.com/users/josephernest/repos", "events_url": "https://api.github.com/users/josephernest/events{/privacy}", "received_events_url": "https://api.github.com/users/josephernest/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226879027, "node_id": "MDU6TGFiZWwyMjY4NzkwMjc=", "url": "https://api.github.com/repos/spatialaudio/python-sounddevice/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-28T20:40:39Z", "updated_at": "2017-10-21T08:13:00Z", "closed_at": "2017-10-21T08:13:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "`sounddevice` works for me on desktop computer, on RaspberryPi. But here is what happens what I try to use it on a C.H.I.P 9$ computer:\r\n\r\n```\r\nchip@chip:~$ python\r\nPython 2.7.9 (default, Aug 13 2016, 17:56:53)\r\n[GCC 4.9.2] on linux2\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import cffi\r\n>>> import sounddevice\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/dist-packages/sounddevice.py\", line 313, in <module>\r\n    \"\"\")\r\n  File \"/usr/lib/python2.7/dist-packages/cffi/api.py\", line 103, in cdef\r\n    self._parser.parse(csource, override=override, packed=packed)\r\n  File \"/usr/lib/python2.7/dist-packages/cffi/cparser.py\", line 166, in parse\r\n    self._internal_parse(csource)\r\n  File \"/usr/lib/python2.7/dist-packages/cffi/cparser.py\", line 174, in _internal_parse\r\n    self._process_macros(macros)\r\n  File \"/usr/lib/python2.7/dist-packages/cffi/cparser.py\", line 236, in _process_macros\r\n    '%s 0x1FF\" for now' % (key, key))\r\ncffi.api.CDefError: only supports the syntax \"#define paUseHostApiSpecificDeviceSpecification ...\" (literally) or \"#define paUseHostApiSpecificDeviceSpecification 0x1FF\" for now\r\n```\r\n\r\nAny idea? Thanks in advance @spatialaudio !\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/79", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/79/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/79/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/79", "id": 217354607, "node_id": "MDU6SXNzdWUyMTczNTQ2MDc=", "number": 79, "title": "Proposal: Have sounddevice.play/stop/playrec reuse open streams when possible", "user": {"login": "tgarc", "id": 431388, "node_id": "MDQ6VXNlcjQzMTM4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/431388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgarc", "html_url": "https://github.com/tgarc", "followers_url": "https://api.github.com/users/tgarc/followers", "following_url": "https://api.github.com/users/tgarc/following{/other_user}", "gists_url": "https://api.github.com/users/tgarc/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgarc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgarc/subscriptions", "organizations_url": "https://api.github.com/users/tgarc/orgs", "repos_url": "https://api.github.com/users/tgarc/repos", "events_url": "https://api.github.com/users/tgarc/events{/privacy}", "received_events_url": "https://api.github.com/users/tgarc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-27T19:47:01Z", "updated_at": "2017-04-03T15:01:08Z", "closed_at": "2017-04-03T15:01:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I had a question related to #75 ...You had said:\r\n\r\n| After stop(), there is now way (and IMHO shouldn't be) to \"open\" the stream again.\r\n\r\nSo you wouldn't be interested in modifying the behavior so that `sounddevice.stop()` actually calls `PaStopStream` and `sounddevice.start()` only opens a new stream if needed? I was thinking about implementing this behavior to avoid unnecessary loading and unloading of the device driver. I think it makes sense to re-use the open stream unless the user is asking for a stream with some new/different parameters.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/78", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/78/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/78/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/78", "id": 217011853, "node_id": "MDU6SXNzdWUyMTcwMTE4NTM=", "number": 78, "title": "Stream.close() function seems to hang when called from finished_callback", "user": {"login": "AodhAnd", "id": 5507583, "node_id": "MDQ6VXNlcjU1MDc1ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/5507583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AodhAnd", "html_url": "https://github.com/AodhAnd", "followers_url": "https://api.github.com/users/AodhAnd/followers", "following_url": "https://api.github.com/users/AodhAnd/following{/other_user}", "gists_url": "https://api.github.com/users/AodhAnd/gists{/gist_id}", "starred_url": "https://api.github.com/users/AodhAnd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AodhAnd/subscriptions", "organizations_url": "https://api.github.com/users/AodhAnd/orgs", "repos_url": "https://api.github.com/users/AodhAnd/repos", "events_url": "https://api.github.com/users/AodhAnd/events{/privacy}", "received_events_url": "https://api.github.com/users/AodhAnd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-03-25T23:02:29Z", "updated_at": "2017-12-06T09:51:52Z", "closed_at": "2017-12-06T09:51:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nFYI, I'm using sounddevice in its last version (v0.3.7), with PortAudio relying on ALSA (Fedora 25).\r\n\r\nI'm building the basis of a sound player/recorder/analyzer for an experimental setup (something related to bubbles, but that's completely out of subject here... ^^).\r\n\r\nSo, I have some calls to the `stop()` method of a RawOutputStream object in my code and I'm using the `finished_callback` to make some proper clean up (closing the file, resetting everything sound-related) when I actually want the stream to be stopped (i.e. not paused). I have no trouble whatsoever, as long as I only ask for pause, but when my `stream_cleanup()` functions actually gets called, I can detect (with some trivial `print()` tests) that the `close()` function has a hanging behavior. \r\nHowever, I'm still able to resume the stream where it stopped after calling this cleanup function (which is clearly *not* the intended behavior !).\r\n\r\nHere are two parts of my code that I think should clarify what I just wrote above:\r\n```python\r\n# How the finished_callback is defined\r\ndef finished_callback():\r\n    if not self._pause_flag.is_set():\r\n        # If the stream is not stopped for a simple pause, clean up\r\n        self.stream_cleanup()\r\n# [...]\r\n# How my cleanup function is defined\r\ndef stream_cleanup(self):\r\n    try:\r\n        # Resources have to be cleaned properly\r\n        print(\"Before\")\r\n        self._stream.close()\r\n        print(\"After\")\r\n        self._sndfile.close()\r\n        # For security reasons\r\n        self._stream = None\r\n        self._sndfile = None\r\n        # Everything went fine\r\n        print(\"Stopped audio stream\")\r\n    except (AttributeError, OSError):\r\n        print(\"Can't stop unexisting audio stream!\")\r\n```\r\n-> \"Before\" gets printed correctly, \"After\" never does, unless `self._stream.close()` is commented out, but that doesn't sound very clean.\r\n\r\nI've seen your recent pull request #75 in which you discussed something similar, but you were pointing that hanging problem only when the `stop()` method hadn't been called before. Which is definitely not the case here, since the `finished_callback` is actually called when I ask the stream to stop, with the `stop()` function...\r\n\r\nDo you have any idea how this could be solved in a cleaner way ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/77", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/77/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/77/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/77", "id": 215786734, "node_id": "MDU6SXNzdWUyMTU3ODY3MzQ=", "number": 77, "title": "Looping playback stops during call to PIL.Image.putdata()", "user": {"login": "GregoryTravis", "id": 24406074, "node_id": "MDQ6VXNlcjI0NDA2MDc0", "avatar_url": "https://avatars0.githubusercontent.com/u/24406074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GregoryTravis", "html_url": "https://github.com/GregoryTravis", "followers_url": "https://api.github.com/users/GregoryTravis/followers", "following_url": "https://api.github.com/users/GregoryTravis/following{/other_user}", "gists_url": "https://api.github.com/users/GregoryTravis/gists{/gist_id}", "starred_url": "https://api.github.com/users/GregoryTravis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GregoryTravis/subscriptions", "organizations_url": "https://api.github.com/users/GregoryTravis/orgs", "repos_url": "https://api.github.com/users/GregoryTravis/repos", "events_url": "https://api.github.com/users/GregoryTravis/events{/privacy}", "received_events_url": "https://api.github.com/users/GregoryTravis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-03-21T15:49:52Z", "updated_at": "2017-03-24T14:11:43Z", "closed_at": "2017-03-24T14:11:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am initiating a looping playback, and then generating an Image using PIL.  The sound loop stops when I call putdata().  The sound continues to not play after the call to putdata() returns -- during calls to resampy.resample().  Both of these, I believe, use native code.  Is there locking in the code that might cause this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/76", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/76/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/76/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/76", "id": 213075021, "node_id": "MDU6SXNzdWUyMTMwNzUwMjE=", "number": 76, "title": "Concurrent recording and playback", "user": {"login": "arekbulski", "id": 5385838, "node_id": "MDQ6VXNlcjUzODU4Mzg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5385838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arekbulski", "html_url": "https://github.com/arekbulski", "followers_url": "https://api.github.com/users/arekbulski/followers", "following_url": "https://api.github.com/users/arekbulski/following{/other_user}", "gists_url": "https://api.github.com/users/arekbulski/gists{/gist_id}", "starred_url": "https://api.github.com/users/arekbulski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arekbulski/subscriptions", "organizations_url": "https://api.github.com/users/arekbulski/orgs", "repos_url": "https://api.github.com/users/arekbulski/repos", "events_url": "https://api.github.com/users/arekbulski/events{/privacy}", "received_events_url": "https://api.github.com/users/arekbulski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-09T15:39:44Z", "updated_at": "2017-10-09T14:58:26Z", "closed_at": "2017-10-09T14:58:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I continously keep recording and playing same samples? I have no problem running just a recording loop and stuffing samples in a list, or just playing a list of samples in a sequence. The problem is I need to keep recording and playing them concurrently. Essentially a loopback. Nothing I tried works, here is one code:\r\n```py3\r\nimport sounddevice, timeit, time, threading, queue\r\naudioqueue = queue.Queue()\r\n\r\ndef callback2():\r\n    while 1:\r\n        sample = sounddevice.rec(44100*2, samplerate=44100, channels=1, dtype='int16', blocking=1)\r\n        audioqueue.put(sample.copy())\r\n        print('added')\r\n\r\ndef callback3():\r\n    while 1:\r\n        sample = audioqueue.get()\r\n        print('removed')\r\n        sounddevice.play(sample, samplerate=44100, blocking=1)\r\n        \r\nthread2 = threading.Thread(target=callback2)\r\nthread2.start()\r\nthread3 = threading.Thread(target=callback3)\r\nthread3.start()\r\nwhile 1: pass\r\n```\r\nPlease help, I am seriously stuck on this framework.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/72", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/72/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/72/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/72", "id": 204469829, "node_id": "MDU6SXNzdWUyMDQ0Njk4Mjk=", "number": 72, "title": "query_devices() name decoding problem (MME, DirectSound)", "user": {"login": "Takashi-T", "id": 25470235, "node_id": "MDQ6VXNlcjI1NDcwMjM1", "avatar_url": "https://avatars1.githubusercontent.com/u/25470235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Takashi-T", "html_url": "https://github.com/Takashi-T", "followers_url": "https://api.github.com/users/Takashi-T/followers", "following_url": "https://api.github.com/users/Takashi-T/following{/other_user}", "gists_url": "https://api.github.com/users/Takashi-T/gists{/gist_id}", "starred_url": "https://api.github.com/users/Takashi-T/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Takashi-T/subscriptions", "organizations_url": "https://api.github.com/users/Takashi-T/orgs", "repos_url": "https://api.github.com/users/Takashi-T/repos", "events_url": "https://api.github.com/users/Takashi-T/events{/privacy}", "received_events_url": "https://api.github.com/users/Takashi-T/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2017-02-01T01:00:58Z", "updated_at": "2017-02-14T14:52:44Z", "closed_at": "2017-02-12T11:13:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "query_devices() crashes:\r\n\r\n```\r\n    File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\sounddevice.py\", line 712, in query_devices\r\n    _lib.Pa_HostApiTypeIdToHostApiIndex(_lib.paMME)) else 'utf-8'),\r\n   UnicodeDecodeError: 'mbcs' codec can't decode bytes in position 0--1: No mapping for the Unicode   character exists in the target code page.\r\n```\r\n\r\nChanging the `\"mbcs\"` at line 710 to `\"utf-8\"` fixed the problem in my environment.\r\n\r\nOS: Windows 7 SP1 and Windows 10 (Japanese)\r\nPython 3.5\r\n`sounddevice` ver 0.3.6 (wheel from http://www.lfd.uci.edu/~gohlke/pythonlibs/)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/71", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/71/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/71/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/71", "id": 204383697, "node_id": "MDU6SXNzdWUyMDQzODM2OTc=", "number": 71, "title": "sd.query_devices not seeing all devices?", "user": {"login": "MarkAPitt", "id": 7736211, "node_id": "MDQ6VXNlcjc3MzYyMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/7736211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkAPitt", "html_url": "https://github.com/MarkAPitt", "followers_url": "https://api.github.com/users/MarkAPitt/followers", "following_url": "https://api.github.com/users/MarkAPitt/following{/other_user}", "gists_url": "https://api.github.com/users/MarkAPitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkAPitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkAPitt/subscriptions", "organizations_url": "https://api.github.com/users/MarkAPitt/orgs", "repos_url": "https://api.github.com/users/MarkAPitt/repos", "events_url": "https://api.github.com/users/MarkAPitt/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkAPitt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-01-31T18:32:14Z", "updated_at": "2017-02-06T21:46:37Z", "closed_at": "2017-02-06T21:46:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nCould you possibly provide insight into the following problem.\r\n\r\n`sd.query_devices()` generates the output below. There is an ASIO driver available which is not being picked up. The second set of listings is generated by the pyo package, which sees and uses the ASIO driver; this is how I know it is available and working fine. The sound card is an SB Audigy 5/Rx with the latest driver. We are running Python 2.7.11 on Windows 7 (32-bit). The sounddevice module works fine in all other respects!\r\n\r\n```\r\n   0 Microsoft Sound Mapper - Input, MME (2 in, 0 out)\r\n>  1 Microphone (Sound Blaster Audig, MME (2 in, 0 out)\r\n   2 Stereo Mix (Realtek High Defini, MME (2 in, 0 out)\r\n   3 \"What U Hear\" (Sound Blaster Au, MME (2 in, 0 out)\r\n   4 Line-In (Sound Blaster Audigy 5, MME (2 in, 0 out)\r\n   5 Microsoft Sound Mapper - Output, MME (0 in, 2 out)\r\n<  6 Speakers (Sound Blaster Audigy , MME (0 in, 8 out)\r\n   7 SPDIF Out (Sound Blaster Audigy, MME (0 in, 2 out)\r\n   8 Speakers / Headphones (Realtek , MME (0 in, 2 out)\r\n   9 SPDIF Out (Sound Blaster Audigy 5/Rx), Windows WASAPI (0 in, 2 out)\r\n  10 Speakers (Sound Blaster Audigy 5/Rx), Windows WASAPI (0 in, 2 out)\r\n  11 Speakers / Headphones (Realtek High Definition Audio), Windows WASAPI (0 in, 2 out)\r\n  12 Stereo Mix (Realtek High Definition Audio), Windows WASAPI (2 in, 0 out)\r\n  13 \"What U Hear\" (Sound Blaster Audigy 5/Rx), Windows WASAPI (2 in, 0 out)\r\n  14 Microphone (Sound Blaster Audigy 5/Rx), Windows WASAPI (2 in, 0 out)\r\n  15 Line-In (Sound Blaster Audigy 5/Rx), Windows WASAPI (2 in, 0 out)\r\n  16 S, Windows WDM-KS (0 in, 2 out)\r\n  17 S, Windows WDM-KS (2 in, 8 out\r\n```\r\n\r\nPyo AUDIO devices:\r\n\r\n```\r\n0: IN, name: Microsoft Sound Mapper - Input, host api index: 0, default sr: 44100 Hz, latency: 0.090000 s\r\n1: IN, name: Microphone (Sound Blaster Audig, host api index: 0, default sr: 44100 Hz, latency: 0.090000 s\r\n2: IN, name: Stereo Mix (Realtek High Defini, host api index: 0, default sr: 44100 Hz, latency: 0.090000 s\r\n3: IN, name: \"What U Hear\" (Sound Blaster Au, host api index: 0, default sr: 44100 Hz, latency: 0.090000 s\r\n4: IN, name: Line-In (Sound Blaster Audigy 5, host api index: 0, default sr: 44100 Hz, latency: 0.090000 s\r\n5: OUT, name: Microsoft Sound Mapper - Output, host api index: 0, default sr: 44100 Hz, latency: 0.090000 s\r\n6: OUT, name: Speakers (Sound Blaster Audigy , host api index: 0, default sr: 44100 Hz, latency: 0.090000 s\r\n7: OUT, name: SPDIF Out (Sound Blaster Audigy, host api index: 0, default sr: 44100 Hz, latency: 0.090000 s\r\n8: OUT, name: Speakers / Headphones (Realtek , host api index: 0, default sr: 44100 Hz, latency: 0.090000 s\r\n9: IN, name: Primary Sound Capture Driver, host api index: 1, default sr: 44100 Hz, latency: 0.120000 s\r\n10: IN, name: Microphone (Sound Blaster Audigy 5/Rx), host api index: 1, default sr: 44100 Hz, latency: 0.120000 s\r\n11: IN, name: Stereo Mix (Realtek High Definition Audio), host api index: 1, default sr: 44100 Hz, latency: 0.120000 s\r\n12: IN, name: \"What U Hear\" (Sound Blaster Audigy 5/Rx), host api index: 1, default sr: 44100 Hz, latency: 0.120000 s\r\n13: IN, name: Line-In (Sound Blaster Audigy 5/Rx), host api index: 1, default sr: 44100 Hz, latency: 0.120000 s\r\n14: OUT, name: Primary Sound Driver, host api index: 1, default sr: 44100 Hz, latency: 0.120000 s\r\n15: OUT, name: Speakers (Sound Blaster Audigy 5/Rx), host api index: 1, default sr: 44100 Hz, latency: 0.120000 s\r\n16: OUT, name: SPDIF Out (Sound Blaster Audigy 5/Rx), host api index: 1, default sr: 44100 Hz, latency: 0.120000 s\r\n17: OUT, name: Speakers / Headphones (Realtek High Definition Audio), host api index: 1, default sr: 44100 Hz, latency: 0.120000 s\r\n18: IN, name: Creative ASIO, host api index: 2, default sr: 48000 Hz, latency: 0.050000 s\r\n18: OUT, name: Creative ASIO, host api index: 2, default sr: 48000 Hz, latency: 0.050000 s\r\n19: IN, name: Realtek ASIO, host api index: 2, default sr: 44100 Hz, latency: 0.008707 s\r\n19: OUT, name: Realtek ASIO, host api index: 2, default sr: 44100 Hz, latency: 0.008707 s\r\n20: IN, name: SBAudigy5/Rx ASIO 24/96[D000], host api index: 2, default sr: 96000 Hz, latency: 0.050000 s\r\n20: OUT, name: SBAudigy5/Rx ASIO 24/96[D000], host api index: 2, default sr: 96000 Hz, latency: 0.050000 s\r\n21: IN, name: SBAudigy5/Rx ASIO[D000], host api index: 2, default sr: 48000 Hz, latency: 0.050000 s\r\n21: OUT, name: SBAudigy5/Rx ASIO[D000], host api index: 2, default sr: 48000 Hz, latency: 0.050000 s\r\n22: OUT, name: SPDIF Out (Sound Blaster Audigy 5/Rx), host api index: 3, default sr: 44100 Hz, latency: 0.003000 s\r\n23: OUT, name: Speakers (Sound Blaster Audigy 5/Rx), host api index: 3, default sr: 44100 Hz, latency: 0.003000 s\r\n24: OUT, name: Speakers / Headphones (Realtek High Definition Audio), host api index: 3, default sr: 48000 Hz, latency: 0.003000 s\r\n25: IN, name: Stereo Mix (Realtek High Definition Audio), host api index: 3, default sr: 48000 Hz, latency: 0.003000 s\r\n26: IN, name: \"What U Hear\" (Sound Blaster Audigy 5/Rx), host api index: 3, default sr: 44100 Hz, latency: 0.003000 s\r\n27: IN, name: Microphone (Sound Blaster Audigy 5/Rx), host api index: 3, default sr: 44100 Hz, latency: 0.003000 s\r\n28: IN, name: Line-In (Sound Blaster Audigy 5/Rx), host api index: 3, default sr: 44100 Hz, latency: 0.003000 s\r\n29: OUT, name: Speakers (Realtek HD Audio output), host api index: 4, default sr: 44100 Hz, latency: 0.010000 s\r\n30: IN, name: Jack Mic (Realtek HD Audio Front Mic input), host api index: 4, default sr: 44100 Hz, latency: 0.010000 s\r\n31: IN, name: Stereo Mix (Realtek HD Audio Stereo input), host api index: 4, default sr: 48000 Hz, latency: 0.010000 s\r\n32: OUT, name: SPDIF Out (SB Audigy 5/Rx SpdifOut [D000]), host api index: 4, default sr: 44100 Hz, latency: 0.010000 s\r\n33: IN, name: Wave (SB Audigy 5/Rx [D000]), host api index: 4, default sr: 44100 Hz, latency: 0.010000 s\r\n34: IN, name: Microphone (SB Audigy 5/Rx [D000]), host api index: 4, default sr: 44100 Hz, latency: 0.010000 s\r\n35: IN, name: Line-In (SB Audigy 5/Rx [D000]), host api index: 4, default sr: 44100 Hz, latency: 0.010000 s\r\n36: OUT, name: Speakers (SB Audigy 5/Rx [D000]), host api index: 4, default sr: 44100 Hz, latency: 0.010000 s\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/69", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/69/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/69/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/69", "id": 202259065, "node_id": "MDU6SXNzdWUyMDIyNTkwNjU=", "number": 69, "title": "\"Unknown Error\" When Stopping a Blocking Play (Mac OS X)", "user": {"login": "riggsd", "id": 647785, "node_id": "MDQ6VXNlcjY0Nzc4NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/647785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/riggsd", "html_url": "https://github.com/riggsd", "followers_url": "https://api.github.com/users/riggsd/followers", "following_url": "https://api.github.com/users/riggsd/following{/other_user}", "gists_url": "https://api.github.com/users/riggsd/gists{/gist_id}", "starred_url": "https://api.github.com/users/riggsd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/riggsd/subscriptions", "organizations_url": "https://api.github.com/users/riggsd/orgs", "repos_url": "https://api.github.com/users/riggsd/repos", "events_url": "https://api.github.com/users/riggsd/events{/privacy}", "received_events_url": "https://api.github.com/users/riggsd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2017-01-20T22:31:22Z", "updated_at": "2017-02-07T01:36:47Z", "closed_at": "2017-02-07T01:36:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm using sounddevice 0.3.6 (which magically pulled in PortAudio V19.6.0-devel) on Mac OS X 10.9.5 with python.org Python 2.7.12.\r\n\r\nWhen I `stop()` a blocking `play()` from another thread, I see the following message on stderr:\r\n\r\n    ||PaMacCore (AUHAL)|| Error on line 2754: err='-50', msg=Unknown Error\r\n\r\nThe following example code triggers this error:\r\n\r\n```python\r\nimport time\r\nfrom threading import Thread\r\nfrom scipy.io import wavfile\r\nimport sounddevice\r\n\r\n\r\nclass AudioThread(Thread):\r\n    def __init__(self, fname):\r\n        Thread.__init__(self)\r\n        self.fname = fname\r\n\r\n    def run(self):\r\n        samplerate, signal = wavfile.read(self.fname)\r\n        sounddevice.play(signal, samplerate, blocking=True)\r\n\r\n    def stop(self):\r\n        sounddevice.stop()\r\n\r\n\r\nthread = AudioThread('test.wav')\r\nthread.start()\r\ntime.sleep(1)\r\nthread.stop()\r\n```\r\n\r\nCalling `stop()` on a *non-blocking* `play()` from the *same* thread does not produce an error.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/64", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/64/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/64/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/64", "id": 198528548, "node_id": "MDU6SXNzdWUxOTg1Mjg1NDg=", "number": 64, "title": "Issues with CallbackFlags not being set?", "user": {"login": "tgarc", "id": 431388, "node_id": "MDQ6VXNlcjQzMTM4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/431388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgarc", "html_url": "https://github.com/tgarc", "followers_url": "https://api.github.com/users/tgarc/followers", "following_url": "https://api.github.com/users/tgarc/following{/other_user}", "gists_url": "https://api.github.com/users/tgarc/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgarc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgarc/subscriptions", "organizations_url": "https://api.github.com/users/tgarc/orgs", "repos_url": "https://api.github.com/users/tgarc/repos", "events_url": "https://api.github.com/users/tgarc/events{/privacy}", "received_events_url": "https://api.github.com/users/tgarc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-01-03T17:44:14Z", "updated_at": "2017-02-12T10:56:03Z", "closed_at": "2017-01-11T21:13:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is actually two issues that I have when doing full-duplex streaming using my own callback function:\r\n\r\n1. I wanted to make sure that the over/underflow flags were indeed set when my callback function was too slow but it doesn't seem to be working. To simulate this, I just put a ``time.sleep(1)`` inside the callback, but no error was raised and none of the callback flags are set on the next callback.  Do you have any code that tests this functionality indeed works as intended? \r\n\r\n2. I tried setting the prime_output_buffers_using_callback parameter, but my callback function never gets a call where ``status.priming_output`` is true. I'm using full duplex streaming, is there any other reason why this option might be ignored? Have you tested this option?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/63", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/63/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/63/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/63", "id": 198296508, "node_id": "MDU6SXNzdWUxOTgyOTY1MDg=", "number": 63, "title": "Cracling noises with Asus Xonar U7 USB audio card", "user": {"login": "Plecto123", "id": 24659483, "node_id": "MDQ6VXNlcjI0NjU5NDgz", "avatar_url": "https://avatars0.githubusercontent.com/u/24659483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Plecto123", "html_url": "https://github.com/Plecto123", "followers_url": "https://api.github.com/users/Plecto123/followers", "following_url": "https://api.github.com/users/Plecto123/following{/other_user}", "gists_url": "https://api.github.com/users/Plecto123/gists{/gist_id}", "starred_url": "https://api.github.com/users/Plecto123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Plecto123/subscriptions", "organizations_url": "https://api.github.com/users/Plecto123/orgs", "repos_url": "https://api.github.com/users/Plecto123/repos", "events_url": "https://api.github.com/users/Plecto123/events{/privacy}", "received_events_url": "https://api.github.com/users/Plecto123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-01-02T05:11:13Z", "updated_at": "2017-10-21T08:21:47Z", "closed_at": "2017-10-21T08:21:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nt=10\r\nFs=48000.0\r\n\r\nx=np.linspace(0.0, t, Fs*t)\r\ny=np.sin(1000*2.0*np.pi*x)\r\nmyrecording = sd.playrec(y, Fs, channels=2, blocking=True)\r\n```\r\n\r\n`sd.playrec()` worked fine with my previous USB sound card, but it makes crackling noises with my new Asus Xonar U7 card. I thought it might be an issue with the sound card and RPI and not specifically the `sounddevice` package, but playing wav files with `aplay` is without crackling so I don't know. Is there any way to fix this?\r\n\r\n![http://i68.tinypic.com/14bizrk.jpg](http://i68.tinypic.com/14bizrk.jpg)\r\nhttp://i68.tinypic.com/14bizrk.jpg\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/62", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/62/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/62/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/62", "id": 198290434, "node_id": "MDU6SXNzdWUxOTgyOTA0MzQ=", "number": 62, "title": "Encoding Problem", "user": {"login": "AdamDulak", "id": 24655682, "node_id": "MDQ6VXNlcjI0NjU1Njgy", "avatar_url": "https://avatars2.githubusercontent.com/u/24655682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdamDulak", "html_url": "https://github.com/AdamDulak", "followers_url": "https://api.github.com/users/AdamDulak/followers", "following_url": "https://api.github.com/users/AdamDulak/following{/other_user}", "gists_url": "https://api.github.com/users/AdamDulak/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdamDulak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdamDulak/subscriptions", "organizations_url": "https://api.github.com/users/AdamDulak/orgs", "repos_url": "https://api.github.com/users/AdamDulak/repos", "events_url": "https://api.github.com/users/AdamDulak/events{/privacy}", "received_events_url": "https://api.github.com/users/AdamDulak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226879026, "node_id": "MDU6TGFiZWwyMjY4NzkwMjY=", "url": "https://api.github.com/repos/spatialaudio/python-sounddevice/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-02T01:56:01Z", "updated_at": "2017-01-26T21:39:43Z", "closed_at": "2017-01-26T19:54:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, on windows when I have devices that have polish characters in the module's name, it crashes:\r\n\r\n```\r\n>>> import sounddevice as sd\r\n>>> sd.query_devices()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\admin_000\\AppData\\Roaming\\Python\\Python27\\site-packages\\sounddevice.py\", line 1887, in __repr__\r\n    return text.encode(_sys.stdout.encoding or 'utf-8')\r\n  File \"C:\\Python27\\lib\\encodings\\cp852.py\", line 12, in encode\r\n    return codecs.charmap_encode(input,errors,encoding_map)\r\nUnicodeEncodeError: 'charmap' codec can't encode character u'\\u2014' in position 77: character maps to <undefined>\r\n>>> sd.query_devices()\r\nException KeyboardInterrupt in <module 'threading' from 'C:\\Python27\\lib\\threading.pyc'> ignored\r\n```\r\n\r\nTo fix this, I had to change in `sounddevice.py` line:\r\n\r\n`return text.encode(_sys.stdout.encoding or 'utf-8')`\r\nto:\r\n`return text.encode('utf-8')`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/61", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/61/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/61/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/61", "id": 198033076, "node_id": "MDU6SXNzdWUxOTgwMzMwNzY=", "number": 61, "title": "sounddevice blocks input()", "user": {"login": "sararob", "id": 3814898, "node_id": "MDQ6VXNlcjM4MTQ4OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3814898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sararob", "html_url": "https://github.com/sararob", "followers_url": "https://api.github.com/users/sararob/followers", "following_url": "https://api.github.com/users/sararob/following{/other_user}", "gists_url": "https://api.github.com/users/sararob/gists{/gist_id}", "starred_url": "https://api.github.com/users/sararob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sararob/subscriptions", "organizations_url": "https://api.github.com/users/sararob/orgs", "repos_url": "https://api.github.com/users/sararob/repos", "events_url": "https://api.github.com/users/sararob/events{/privacy}", "received_events_url": "https://api.github.com/users/sararob/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226879026, "node_id": "MDU6TGFiZWwyMjY4NzkwMjY=", "url": "https://api.github.com/repos/spatialaudio/python-sounddevice/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-12-29T16:30:07Z", "updated_at": "2019-09-25T11:03:13Z", "closed_at": "2019-09-25T11:03:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "sounddevice seems to block `input()` from printing text. Here's a simple repro:\r\n\r\n```\r\nimport sounddevice as sd\r\nname = input(\"Enter your name: \")\r\nprint (\"your name is \" + name)\r\n```\r\n\r\nWhen I comment out the first line it works as expected, but with the `sounddevice` import it doesn't print anything to the console. I've tried this:\r\n\r\n```\r\nimport sys\r\nsys.stdout.flush()\r\n```\r\n\r\nbut that doesn't fix the issue. Anyone else having this problem or know how to fix it? I'm using Python 3.6.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/59", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/59/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/59/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/59", "id": 196807231, "node_id": "MDU6SXNzdWUxOTY4MDcyMzE=", "number": 59, "title": "no support for arbitrary length recordings?", "user": {"login": "tgarc", "id": 431388, "node_id": "MDQ6VXNlcjQzMTM4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/431388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgarc", "html_url": "https://github.com/tgarc", "followers_url": "https://api.github.com/users/tgarc/followers", "following_url": "https://api.github.com/users/tgarc/following{/other_user}", "gists_url": "https://api.github.com/users/tgarc/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgarc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgarc/subscriptions", "organizations_url": "https://api.github.com/users/tgarc/orgs", "repos_url": "https://api.github.com/users/tgarc/repos", "events_url": "https://api.github.com/users/tgarc/events{/privacy}", "received_events_url": "https://api.github.com/users/tgarc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226879031, "node_id": "MDU6TGFiZWwyMjY4NzkwMzE=", "url": "https://api.github.com/repos/spatialaudio/python-sounddevice/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-20T23:24:41Z", "updated_at": "2016-12-21T17:29:09Z", "closed_at": "2016-12-21T17:29:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "First off, thanks for developing this! PyAudio is kind of incomplete and seems to be pretty inactive so I'm really glad to see this project getting off the ground.\r\n\r\nAnyway, I'm pretty new to this library so forgive me if I missed something but I can't seem to find any support for making arbitrary length recordings. So, did I miss something? And if not, do you have any plans to add this functionality in the near future?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/58", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/58/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/58/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/58", "id": 196511482, "node_id": "MDU6SXNzdWUxOTY1MTE0ODI=", "number": 58, "title": "Sounddevice eats up all my memory", "user": {"login": "Plecto123", "id": 24659483, "node_id": "MDQ6VXNlcjI0NjU5NDgz", "avatar_url": "https://avatars0.githubusercontent.com/u/24659483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Plecto123", "html_url": "https://github.com/Plecto123", "followers_url": "https://api.github.com/users/Plecto123/followers", "following_url": "https://api.github.com/users/Plecto123/following{/other_user}", "gists_url": "https://api.github.com/users/Plecto123/gists{/gist_id}", "starred_url": "https://api.github.com/users/Plecto123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Plecto123/subscriptions", "organizations_url": "https://api.github.com/users/Plecto123/orgs", "repos_url": "https://api.github.com/users/Plecto123/repos", "events_url": "https://api.github.com/users/Plecto123/events{/privacy}", "received_events_url": "https://api.github.com/users/Plecto123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-12-19T20:22:38Z", "updated_at": "2020-06-22T09:15:48Z", "closed_at": "2020-06-22T09:15:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Examplecode:\r\n\r\n```python\r\nimport numpy as np\r\nimport time\r\nimport sounddevice as sd\r\n \r\n \r\ndef FindFreq_Resp(f_num, Amp):\r\n    print \"Calculating frequency response...\"\r\n    Freq=np.logspace(1.3, 4.3, num=f_num)\r\n    for f in Freq:\r\n            xx=np.linspace(0.0, 1, 48000)\r\n            y=Amp*np.sin(f*2.0*np.pi*xx)\r\n            myrecording = sd.playrec(y, 48000, channels=1, blocking=True)        \r\n \r\nFs=48000\r\nFindFreq_Resp(100,0.1)\r\nprint \"Some memory has been eaten\"\r\nFindFreq_Resp(100,0.1)\r\nprint \"Even more memory has been eaten\"\r\nFindFreq_Resp(100,0.1)\r\nprint \"Not much memory left :(\"\r\n```\r\n\r\nIf I run the function FindFreq_Resp enough time, the program will run out of swap memory and freeze indefinitely. Why does this happen?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/57", "repository_url": "https://api.github.com/repos/spatialaudio/python-sounddevice", "labels_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/57/comments", "events_url": "https://api.github.com/repos/spatialaudio/python-sounddevice/issues/57/events", "html_url": "https://github.com/spatialaudio/python-sounddevice/issues/57", "id": 195223741, "node_id": "MDU6SXNzdWUxOTUyMjM3NDE=", "number": 57, "title": "Question: Sending InputStream over a WebSocket", "user": {"login": "jamesstidard", "id": 1797906, "node_id": "MDQ6VXNlcjE3OTc5MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1797906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesstidard", "html_url": "https://github.com/jamesstidard", "followers_url": "https://api.github.com/users/jamesstidard/followers", "following_url": "https://api.github.com/users/jamesstidard/following{/other_user}", "gists_url": "https://api.github.com/users/jamesstidard/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesstidard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesstidard/subscriptions", "organizations_url": "https://api.github.com/users/jamesstidard/orgs", "repos_url": "https://api.github.com/users/jamesstidard/repos", "events_url": "https://api.github.com/users/jamesstidard/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesstidard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 226879031, "node_id": "MDU6TGFiZWwyMjY4NzkwMzE=", "url": "https://api.github.com/repos/spatialaudio/python-sounddevice/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-13T11:06:48Z", "updated_at": "2017-10-21T08:26:38Z", "closed_at": "2017-10-21T08:26:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm trying to write an application where I can stream the input of one device over a websocket for all the connected clients.\r\n\r\nCurrently I have everything set up so I can broadcast out the base64 encoded bytes returned by either `sounddevice.InputStream` or `sounddevice.RawInputStream` as they are returned by their callback. Currently this looks like:\r\n```python\r\n@classmethod\r\ndef handle_input_buffer(cls, data, frames, time, status):\r\n    message = b64encode(data.copy().tostring())\r\n    cls.broadcast(message)\r\n```\r\n\r\nObviously broadcasting a stringified version of a numpy array doesn't make sense if the clients aren't Python clients. Would anyone be able to suggest what kind of format I should best send this out in - so it can be serialized by clients?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}]}