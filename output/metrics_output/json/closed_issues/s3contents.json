{"total_count": 37, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/danielfrg/s3contents/issues/93", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/93/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/93/events", "html_url": "https://github.com/danielfrg/s3contents/issues/93", "id": 620004033, "node_id": "MDU6SXNzdWU2MjAwMDQwMzM=", "number": 93, "title": "Downloading a pickle file fails with invalid start byte", "user": {"login": "AbdealiJK", "id": 2200743, "node_id": "MDQ6VXNlcjIyMDA3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2200743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AbdealiJK", "html_url": "https://github.com/AbdealiJK", "followers_url": "https://api.github.com/users/AbdealiJK/followers", "following_url": "https://api.github.com/users/AbdealiJK/following{/other_user}", "gists_url": "https://api.github.com/users/AbdealiJK/gists{/gist_id}", "starred_url": "https://api.github.com/users/AbdealiJK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AbdealiJK/subscriptions", "organizations_url": "https://api.github.com/users/AbdealiJK/orgs", "repos_url": "https://api.github.com/users/AbdealiJK/repos", "events_url": "https://api.github.com/users/AbdealiJK/events{/privacy}", "received_events_url": "https://api.github.com/users/AbdealiJK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T08:17:35Z", "updated_at": "2020-05-18T08:32:23Z", "closed_at": "2020-05-18T08:32:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to downlaod a pickle file with s3contents, I get: `500 : invalid start byte`\r\n\r\n**Steps to reproduce**:\r\n - Setup jupyter with s3contents\r\n - Try to download a pickle file which is stored in S3\r\n\r\n**Expected Result**:\r\n - Should be able to download a file normally\r\n\r\n**Actual Result**:\r\n - Shows an error `500 : invalid start byte`\r\nIt looks like s3contents assumes all data from s3 is utf-8 encoded causing this error ?\r\n\r\n**The logs from the server**:\r\n```\r\n[I 2020-05-18 08:11:53.216 UserRunnerApp log:174] 200 GET /jupyter/user/admin/api/contents/abdealijk?type=directory&_=1589789425142 (admin@49.206.127.153) 634.75ms\r\n[E 2020-05-18 08:11:53.907 UserRunnerApp web:1792] Uncaught exception GET /jupyter/user/admin/files/abdealijk/HighFicoLRM.pkl?download=1 (49.206.127.153)\r\n    HTTPServerRequest(protocol='http', host='<SERVER-URL>:5000', method='GET', uri='/jupyter/user/admin/files/abdealijk/HighFicoLRM.pkl?download=1', version='HTTP/1.1', remote_ip='<IP-ADDRESS>')\r\n    Traceback (most recent call last):\r\n      File \"/opt/jupyter/lib/python3.6/site-packages/tornado/web.py\", line 1701, in _execute\r\n        result = method(*self.path_args, **self.path_kwargs)\r\n      File \"/opt/jupyter/lib/python3.6/site-packages/tornado/web.py\", line 3178, in wrapper\r\n        return method(self, *args, **kwargs)\r\n      File \"/opt/jupyter/lib/python3.6/site-packages/notebook/files/handlers.py\", line 57, in get\r\n        model = cm.get(path, type='file', content=include_body)\r\n      File \"/opt/jupyter/lib/python3.6/site-packages/s3contents/genericmanager.py\", line 86, in get\r\n        return func(path=path, content=content, format=format)\r\n      File \"/opt/jupyter/lib/python3.6/site-packages/s3contents/genericmanager.py\", line 98, in _get_file\r\n        return self._file_model_from_path(path, content=content, format=format)\r\n      File \"/opt/jupyter/lib/python3.6/site-packages/s3contents/genericmanager.py\", line 144, in _file_model_from_path\r\n        content = self.fs.read(path)\r\n      File \"/opt/jupyter/lib/python3.6/site-packages/s3contents/s3_fs.py\", line 186, in read\r\n        content = f.read().decode(\"utf-8\")\r\n    UnicodeDecodeError: 'utf-8' codec can't decode byte 0x80 in position 0: invalid start byte\r\n\r\n[E 2020-05-18 08:11:53.909 UserRunnerApp log:166] {\r\n      \"X-Forwarded-Host\": \"<SERVER-URL>:5000\",\r\n      \"X-Forwarded-Proto\": \"http\",\r\n      \"X-Forwarded-Port\": \"5000\",\r\n      \"X-Forwarded-For\": \"49.206.127.153\",\r\n      \"Cookie\": \"jupyterhub-user-admin=[secret]; jupyterhub-session-id=[secret]; _xsrf=[secret]\",\r\n      \"Accept-Language\": \"en-US,en;q=0.9\",\r\n      \"Accept-Encoding\": \"gzip, deflate\",\r\n      \"Referer\": \"http://<SERVER-URL>:5000/jupyter/user/admin/tree/abdealijk\",\r\n      \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\r\n      \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36\",\r\n      \"Dnt\": \"1\",\r\n      \"Upgrade-Insecure-Requests\": \"1\",\r\n      \"Connection\": \"close\",\r\n      \"Host\": \"<SERVER-URL>:5000\"\r\n    }\r\n[E 2020-05-18 08:11:53.909 UserRunnerApp log:174] 500 GET /jupyter/user/admin/files/abdealijk/HighFicoLRM.pkl?download=1 (admin@49.206.127.153) 93.69ms\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/82", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/82/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/82/events", "html_url": "https://github.com/danielfrg/s3contents/issues/82", "id": 520467146, "node_id": "MDU6SXNzdWU1MjA0NjcxNDY=", "number": 82, "title": "New version in pypi - commit 550403f7de5a329d235fc2c81a2255e3407556ea", "user": {"login": "peter-friedland-bose", "id": 46685812, "node_id": "MDQ6VXNlcjQ2Njg1ODEy", "avatar_url": "https://avatars1.githubusercontent.com/u/46685812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-friedland-bose", "html_url": "https://github.com/peter-friedland-bose", "followers_url": "https://api.github.com/users/peter-friedland-bose/followers", "following_url": "https://api.github.com/users/peter-friedland-bose/following{/other_user}", "gists_url": "https://api.github.com/users/peter-friedland-bose/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-friedland-bose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-friedland-bose/subscriptions", "organizations_url": "https://api.github.com/users/peter-friedland-bose/orgs", "repos_url": "https://api.github.com/users/peter-friedland-bose/repos", "events_url": "https://api.github.com/users/peter-friedland-bose/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-friedland-bose/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-09T16:08:11Z", "updated_at": "2019-11-11T22:10:29Z", "closed_at": "2019-11-11T22:10:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi - I might be mistaken but I don't think the latest and greatest (commit 550403f7de5a329d235fc2c81a2255e3407556ea Adding a way do a custom boto3 instantiation to s3contents) has been uploaded to pypi.org. These are the from the pull request initiated by @milutz.  \r\nI managed to install the latest from GitHub anyway and it all seems to work well.  \r\nThanks !!\r\nPeter Friedland", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/79", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/79/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/79/events", "html_url": "https://github.com/danielfrg/s3contents/issues/79", "id": 505925946, "node_id": "MDU6SXNzdWU1MDU5MjU5NDY=", "number": 79, "title": "Approach for refreshing s3contents/s3fs (AWS) keys?", "user": {"login": "milutz", "id": 3475505, "node_id": "MDQ6VXNlcjM0NzU1MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3475505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milutz", "html_url": "https://github.com/milutz", "followers_url": "https://api.github.com/users/milutz/followers", "following_url": "https://api.github.com/users/milutz/following{/other_user}", "gists_url": "https://api.github.com/users/milutz/gists{/gist_id}", "starred_url": "https://api.github.com/users/milutz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milutz/subscriptions", "organizations_url": "https://api.github.com/users/milutz/orgs", "repos_url": "https://api.github.com/users/milutz/repos", "events_url": "https://api.github.com/users/milutz/events{/privacy}", "received_events_url": "https://api.github.com/users/milutz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 33, "created_at": "2019-10-11T15:42:39Z", "updated_at": "2019-11-11T22:13:56Z", "closed_at": "2019-11-11T22:13:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using new features in Jupyter 1.0.0 I've been able to build a JupyterHub config that will automatically update the keys in AWS credentials file for each user (so I can switch to safer expiring temporary keys, instead of scary permanent keys).\r\n\r\nIt appears, unfortunately, that s3contents (likely because of unhelpful behaviors of s3fs/boto) doesn't ever reread the auth info for a give Jupyter instance.\r\n\r\n@danielfrg  If I wanted to make s3contents reload the keys (which guessing may require instantiating a new s3fs object) either based off a timeout or based off of getting an access error would you have a recommendation on how I would approach that?\r\n\r\nIt looks like https://github.com/danielfrg/s3contents/blob/master/s3contents/s3_fs.py is where the s3fs library is consumed, maybe adding a method that repeats the `__init__` `self.fs = s3fs.S3FileSys...` call ... then ... hmm..\r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/78", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/78/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/78/events", "html_url": "https://github.com/danielfrg/s3contents/issues/78", "id": 495471076, "node_id": "MDU6SXNzdWU0OTU0NzEwNzY=", "number": 78, "title": "Why are s3fs and gcsfs pinned to old versions in the requirements?", "user": {"login": "milutz", "id": 3475505, "node_id": "MDQ6VXNlcjM0NzU1MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3475505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milutz", "html_url": "https://github.com/milutz", "followers_url": "https://api.github.com/users/milutz/followers", "following_url": "https://api.github.com/users/milutz/following{/other_user}", "gists_url": "https://api.github.com/users/milutz/gists{/gist_id}", "starred_url": "https://api.github.com/users/milutz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milutz/subscriptions", "organizations_url": "https://api.github.com/users/milutz/orgs", "repos_url": "https://api.github.com/users/milutz/repos", "events_url": "https://api.github.com/users/milutz/events{/privacy}", "received_events_url": "https://api.github.com/users/milutz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-09-18T21:47:14Z", "updated_at": "2020-05-08T21:53:52Z", "closed_at": "2020-05-08T21:53:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Both s3fs and gcsfs are pinned in the requirements to versions more then a year old.   Any particular reason why?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/75", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/75/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/75/events", "html_url": "https://github.com/danielfrg/s3contents/issues/75", "id": 489917049, "node_id": "MDU6SXNzdWU0ODk5MTcwNDk=", "number": 75, "title": "S3ContentsManager dask error on config initialization", "user": {"login": "jpugliesi", "id": 2141170, "node_id": "MDQ6VXNlcjIxNDExNzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2141170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpugliesi", "html_url": "https://github.com/jpugliesi", "followers_url": "https://api.github.com/users/jpugliesi/followers", "following_url": "https://api.github.com/users/jpugliesi/following{/other_user}", "gists_url": "https://api.github.com/users/jpugliesi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpugliesi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpugliesi/subscriptions", "organizations_url": "https://api.github.com/users/jpugliesi/orgs", "repos_url": "https://api.github.com/users/jpugliesi/repos", "events_url": "https://api.github.com/users/jpugliesi/events{/privacy}", "received_events_url": "https://api.github.com/users/jpugliesi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-05T18:03:15Z", "updated_at": "2019-10-02T18:04:26Z", "closed_at": "2019-10-02T18:04:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've created configuration to use the `S3ContentsManager`, but am receiving an error that seems to be related to an incompatibility between `dask` and an old `gcsfs` version.\r\n\r\nHere's the `s3contents` configuration:\r\n```\r\njovyan@jupyter-jovyan:~$ cat /etc/jupyter/jupyter_notebook_config.py\r\nimport os\r\nfrom s3contents import S3ContentsManager\r\n\r\nuser = os.getenv('JUPYTERHUB_USER', 'jovyan')\r\naws_access_key_id = os.environ['AWS_ACCESS_KEY_ID']\r\naws_secret_access_key = os.environ['AWS_SECRET_ACCESS_KEY']\r\naws_default_region = os.environ['AWS_DEFAULT_REGION']\r\n\r\n# Tell Jupyter to use S3ContentsManager for all storage.\r\nc.NotebookApp.contents_manager_class = S3ContentsManager\r\nc.S3ContentsManager.bucket = \"my-bucket\"\r\nc.S3ContentsManager.prefix = os.path.join(\"jupyterhub\", user)\r\nc.S3ContentsManager.access_key_id = aws_access_key_id\r\nc.S3ContentsManager.secret_access_key = aws_secret_access_key\r\nc.S3ContentsManager.endpoint_url = \"https://s3.us-west-2.amazonaws.com\"\r\n```\r\n\r\nAnd here's the error upon running `jupyter notebook`:\r\n```\r\n[E 17:52:29.615 NotebookApp] Exception while loading config file /etc/jupyter/jupyter_notebook_config.py\r\n    Traceback (most recent call last):\r\n      File \"/opt/conda/lib/python3.7/site-packages/traitlets/config/application.py\", line 562, in _load_config_files\r\n        config = loader.load_config()\r\n      File \"/opt/conda/lib/python3.7/site-packages/traitlets/config/loader.py\", line 457, in load_config\r\n        self._read_file_as_dict()\r\n      File \"/opt/conda/lib/python3.7/site-packages/traitlets/config/loader.py\", line 489, in _read_file_as_dict\r\n        py3compat.execfile(conf_filename, namespace)\r\n      File \"/opt/conda/lib/python3.7/site-packages/ipython_genutils/py3compat.py\", line 198, in execfile\r\n        exec(compiler(f.read(), fname, 'exec'), glob, loc)\r\n      File \"/etc/jupyter/jupyter_notebook_config.py\", line 2, in <module>\r\n        from s3contents import S3ContentsManager\r\n      File \"/opt/conda/lib/python3.7/site-packages/s3contents/__init__.py\", line 15, in <module>\r\n        from .gcsmanager import GCSContentsManager\r\n      File \"/opt/conda/lib/python3.7/site-packages/s3contents/gcsmanager.py\", line 8, in <module>\r\n        from s3contents.gcs_fs import GCSFS\r\n      File \"/opt/conda/lib/python3.7/site-packages/s3contents/gcs_fs.py\", line 3, in <module>\r\n        import gcsfs\r\n      File \"/opt/conda/lib/python3.7/site-packages/gcsfs/__init__.py\", line 4, in <module>\r\n        from .dask_link import register as register_dask\r\n      File \"/opt/conda/lib/python3.7/site-packages/gcsfs/dask_link.py\", line 56, in <module>\r\n        register()\r\n      File \"/opt/conda/lib/python3.7/site-packages/gcsfs/dask_link.py\", line 51, in register\r\n        dask.bytes.core._filesystems['gcs'] = DaskGCSFileSystem\r\n    AttributeError: module 'dask.bytes.core' has no attribute '_filesystems'\r\n```\r\n\r\nI found a similar issue here: https://github.com/nteract/papermill/issues/342 - which was resolved by pinning the `gcsfs` module to `gcsfs>=0.2.1`.\r\n\r\nNote that `s3contents` is pinned to `gcsfs==1.2.0`:\r\nhttps://github.com/danielfrg/s3contents/blob/master/requirements.txt#L6\r\n\r\nI can confirm that the configuration successfully loads once I pinned to a more recent gcsfs version:\r\n```\r\njovyan@jupyter-jovyan:~$ pip install 'gcsfs>=0.2.1'\r\njovyan@jupyter-jovyan:~$ jupyter notebook\r\n... (Successfully starts notebook server)\r\n```\r\n\r\nThoughts on pinning `gcsfs>=0.2.1` version for `s3contents`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/72", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/72/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/72/events", "html_url": "https://github.com/danielfrg/s3contents/issues/72", "id": 479101499, "node_id": "MDU6SXNzdWU0NzkxMDE0OTk=", "number": 72, "title": "Support for jupyter notebook version 6", "user": {"login": "Lucaszw", "id": 2607311, "node_id": "MDQ6VXNlcjI2MDczMTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/2607311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucaszw", "html_url": "https://github.com/Lucaszw", "followers_url": "https://api.github.com/users/Lucaszw/followers", "following_url": "https://api.github.com/users/Lucaszw/following{/other_user}", "gists_url": "https://api.github.com/users/Lucaszw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucaszw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucaszw/subscriptions", "organizations_url": "https://api.github.com/users/Lucaszw/orgs", "repos_url": "https://api.github.com/users/Lucaszw/repos", "events_url": "https://api.github.com/users/Lucaszw/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucaszw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-09T17:55:53Z", "updated_at": "2019-09-03T16:50:03Z", "closed_at": "2019-09-03T16:43:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "This package seems to break for jupyter notebook versions >= 6\r\n\r\ndue to the following line in ipycompact.py\r\n```python\r\nif notebook.version_info[0] >= 6:  # noqa\r\n    raise ImportError(\"Jupyter Notebook versions 6 and up are not supported.\")\r\n```\r\n\r\nWhat is the reason for this?\r\n\r\nThanks!\r\nLucas", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/69", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/69/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/69/events", "html_url": "https://github.com/danielfrg/s3contents/issues/69", "id": 457090850, "node_id": "MDU6SXNzdWU0NTcwOTA4NTA=", "number": 69, "title": "User Folder in S3 Directory", "user": {"login": "morganhferry", "id": 17768319, "node_id": "MDQ6VXNlcjE3NzY4MzE5", "avatar_url": "https://avatars3.githubusercontent.com/u/17768319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morganhferry", "html_url": "https://github.com/morganhferry", "followers_url": "https://api.github.com/users/morganhferry/followers", "following_url": "https://api.github.com/users/morganhferry/following{/other_user}", "gists_url": "https://api.github.com/users/morganhferry/gists{/gist_id}", "starred_url": "https://api.github.com/users/morganhferry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morganhferry/subscriptions", "organizations_url": "https://api.github.com/users/morganhferry/orgs", "repos_url": "https://api.github.com/users/morganhferry/repos", "events_url": "https://api.github.com/users/morganhferry/events{/privacy}", "received_events_url": "https://api.github.com/users/morganhferry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-06-17T18:39:55Z", "updated_at": "2019-06-17T19:35:32Z", "closed_at": "2019-06-17T19:35:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are using S3Contents in conjunction with JupyterHub. We would like to be able to indicate in the prefix a username. Some sort of flag that picks up the user and creates their directory in S3 within their folder name. Is this already possible? IE in the /etc/jupyter/jupyter_notebook_config.py file:\r\n\r\nc.S3ContentsManager.prefix = \"$USER/jupyter_notebooks\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/68", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/68/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/68/events", "html_url": "https://github.com/danielfrg/s3contents/issues/68", "id": 447178003, "node_id": "MDU6SXNzdWU0NDcxNzgwMDM=", "number": 68, "title": "Unable to view image files", "user": {"login": "nikitadm", "id": 28409930, "node_id": "MDQ6VXNlcjI4NDA5OTMw", "avatar_url": "https://avatars2.githubusercontent.com/u/28409930?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikitadm", "html_url": "https://github.com/nikitadm", "followers_url": "https://api.github.com/users/nikitadm/followers", "following_url": "https://api.github.com/users/nikitadm/following{/other_user}", "gists_url": "https://api.github.com/users/nikitadm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikitadm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikitadm/subscriptions", "organizations_url": "https://api.github.com/users/nikitadm/orgs", "repos_url": "https://api.github.com/users/nikitadm/repos", "events_url": "https://api.github.com/users/nikitadm/events{/privacy}", "received_events_url": "https://api.github.com/users/nikitadm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-22T14:41:46Z", "updated_at": "2019-12-27T06:23:40Z", "closed_at": "2019-12-27T06:23:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting **500 : invalid start byte** error when trying to open image files", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/66", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/66/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/66/events", "html_url": "https://github.com/danielfrg/s3contents/issues/66", "id": 440663145, "node_id": "MDU6SXNzdWU0NDA2NjMxNDU=", "number": 66, "title": "Allowing ipykernel 5.x", "user": {"login": "AbdealiJK", "id": 2200743, "node_id": "MDQ6VXNlcjIyMDA3NDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2200743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AbdealiJK", "html_url": "https://github.com/AbdealiJK", "followers_url": "https://api.github.com/users/AbdealiJK/followers", "following_url": "https://api.github.com/users/AbdealiJK/following{/other_user}", "gists_url": "https://api.github.com/users/AbdealiJK/gists{/gist_id}", "starred_url": "https://api.github.com/users/AbdealiJK/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AbdealiJK/subscriptions", "organizations_url": "https://api.github.com/users/AbdealiJK/orgs", "repos_url": "https://api.github.com/users/AbdealiJK/repos", "events_url": "https://api.github.com/users/AbdealiJK/events{/privacy}", "received_events_url": "https://api.github.com/users/AbdealiJK/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-06T11:55:43Z", "updated_at": "2019-05-06T13:56:48Z", "closed_at": "2019-05-06T13:56:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I notice that the requirements say ipykernel<5\r\nhttps://github.com/danielfrg/s3contents/blob/9f9e702b37a7e3395e48af435078ace8d246f7bf/requirements.txt#L2\r\n\r\nAny reason for limiting the ipykernel version. From history, I see\r\nhttps://github.com/danielfrg/s3contents/pull/48 saying it was needed as the `jupyter` > `jupyter-console` is a dependency\r\nhttps://github.com/danielfrg/s3contents/pull/49 removing `jupyter` dependency and using the `notebook` as dependency - hence removing the need for `jupyter-console` for ipykernel\r\n\r\nSo, can this be removed now ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/64", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/64/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/64/events", "html_url": "https://github.com/danielfrg/s3contents/issues/64", "id": 433971488, "node_id": "MDU6SXNzdWU0MzM5NzE0ODg=", "number": 64, "title": "Read/write access to specific user folder", "user": {"login": "vishaldesai", "id": 9009125, "node_id": "MDQ6VXNlcjkwMDkxMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/9009125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vishaldesai", "html_url": "https://github.com/vishaldesai", "followers_url": "https://api.github.com/users/vishaldesai/followers", "following_url": "https://api.github.com/users/vishaldesai/following{/other_user}", "gists_url": "https://api.github.com/users/vishaldesai/gists{/gist_id}", "starred_url": "https://api.github.com/users/vishaldesai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vishaldesai/subscriptions", "organizations_url": "https://api.github.com/users/vishaldesai/orgs", "repos_url": "https://api.github.com/users/vishaldesai/repos", "events_url": "https://api.github.com/users/vishaldesai/events{/privacy}", "received_events_url": "https://api.github.com/users/vishaldesai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-16T20:31:31Z", "updated_at": "2019-04-22T15:42:29Z", "closed_at": "2019-04-19T07:55:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to configure subfolder level read/write access? So lets say there are two users, user1 and user2. When user1 logs in, user1 can see all notebooks in bucket/user1 and bucket/user2 but have write access only to bucket/user1. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/61", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/61/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/61/events", "html_url": "https://github.com/danielfrg/s3contents/issues/61", "id": 407328041, "node_id": "MDU6SXNzdWU0MDczMjgwNDE=", "number": 61, "title": "ssm = \"aws:kms\" - is there a way to specify SSEKMSKeyId for s3fs?", "user": {"login": "nemcidan", "id": 32512574, "node_id": "MDQ6VXNlcjMyNTEyNTc0", "avatar_url": "https://avatars0.githubusercontent.com/u/32512574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nemcidan", "html_url": "https://github.com/nemcidan", "followers_url": "https://api.github.com/users/nemcidan/followers", "following_url": "https://api.github.com/users/nemcidan/following{/other_user}", "gists_url": "https://api.github.com/users/nemcidan/gists{/gist_id}", "starred_url": "https://api.github.com/users/nemcidan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nemcidan/subscriptions", "organizations_url": "https://api.github.com/users/nemcidan/orgs", "repos_url": "https://api.github.com/users/nemcidan/repos", "events_url": "https://api.github.com/users/nemcidan/events{/privacy}", "received_events_url": "https://api.github.com/users/nemcidan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-06T16:46:18Z", "updated_at": "2019-10-29T01:34:44Z", "closed_at": "2019-10-29T01:34:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was not able to find whether s3contents supports \"aws:kms\" sse type. I was unable to find a way to specify the key ID for KMS.\r\n\r\nin the jupyter configuration, i can specify sse type to be used:\r\n\r\n```\r\nfrom s3contents import S3ContentsManager\r\n\r\nconfig = get_config()\r\n...\r\nconfig.S3ContentsManager.sse = \"aws:kms\"\r\n```\r\nwhich works, but files and folders are not readable. I suppose it is because KMS key ID is not specified.\r\n\r\n\r\nAfter some digging in the source code, I found that [this line](https://github.com/danielfrg/s3contents/blob/d7e398c7da8836ac7579fa475bded06838e053ea/s3contents/s3_fs.py#L78) configures the SSE. is there a possibility to add the funcionality for SSEKMSKeyId to be specified all the way from the jupyter config, something like this?\r\n\r\n```\r\ns3_additional_kwargs[\"SSEKMSKeyId\"] = self.sse_kms_key_id\r\n```\r\nexample config:\r\n\r\n```\r\n...\r\nconfig.S3ContentsManager.sse = \"aws:kms\"\r\nconfig.S3ContentsManager.sse_kms_key_id = \"id\"\r\n...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/59", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/59/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/59/events", "html_url": "https://github.com/danielfrg/s3contents/issues/59", "id": 404574160, "node_id": "MDU6SXNzdWU0MDQ1NzQxNjA=", "number": 59, "title": "If S3 root doesn't allow writing s3contents(and jupyter) will die with untrapped exception", "user": {"login": "milutz", "id": 3475505, "node_id": "MDQ6VXNlcjM0NzU1MDU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3475505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/milutz", "html_url": "https://github.com/milutz", "followers_url": "https://api.github.com/users/milutz/followers", "following_url": "https://api.github.com/users/milutz/following{/other_user}", "gists_url": "https://api.github.com/users/milutz/gists{/gist_id}", "starred_url": "https://api.github.com/users/milutz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/milutz/subscriptions", "organizations_url": "https://api.github.com/users/milutz/orgs", "repos_url": "https://api.github.com/users/milutz/repos", "events_url": "https://api.github.com/users/milutz/events{/privacy}", "received_events_url": "https://api.github.com/users/milutz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-30T02:30:53Z", "updated_at": "2019-07-03T23:11:59Z", "closed_at": "2019-02-03T03:27:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When s3contents is starts, specifically in the s3_fs.py code https://github.com/danielfrg/s3contents/blob/master/s3contents/s3_fs.py#L71-L74 it calls of series of functions that I believe are intended to verify the filesystem.\r\n\r\nThe first is a `self.mkdir(\"\")` which seems to translate into trying to run a mkdir on the root directory itself (which, because S3 isn't a normal unix filesystem, really creates a file under root, specifically the path `[bucketname]/.s3keep`)\r\n\r\nThe problem comes in if you don't have policy enabling you to write `[bucketname]/.s3keep`, you end up with a dead Jupyter because of the untrapped exception `botocore.exceptions.ClientError: An error occurred (AccessDenied) when calling the PutObject operation: Access Denied`\r\n\r\nI'm not completely sure what would be the most sane solve for this, but wrapping the calls https://github.com/danielfrg/s3contents/blob/master/s3contents/s3_fs.py#L72-L74 with exception handling, at least for `botocore` `AccessDenied` seems like it might be a good start.\r\n\r\nI'm currently working around the problem by making a one-off policy for `/.s3keep`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/58", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/58/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/58/events", "html_url": "https://github.com/danielfrg/s3contents/issues/58", "id": 401825393, "node_id": "MDU6SXNzdWU0MDE4MjUzOTM=", "number": 58, "title": "Provide ServerSideEncryption while setting up s3contents", "user": {"login": "pankajtaneja", "id": 8849982, "node_id": "MDQ6VXNlcjg4NDk5ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8849982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pankajtaneja", "html_url": "https://github.com/pankajtaneja", "followers_url": "https://api.github.com/users/pankajtaneja/followers", "following_url": "https://api.github.com/users/pankajtaneja/following{/other_user}", "gists_url": "https://api.github.com/users/pankajtaneja/gists{/gist_id}", "starred_url": "https://api.github.com/users/pankajtaneja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pankajtaneja/subscriptions", "organizations_url": "https://api.github.com/users/pankajtaneja/orgs", "repos_url": "https://api.github.com/users/pankajtaneja/repos", "events_url": "https://api.github.com/users/pankajtaneja/events{/privacy}", "received_events_url": "https://api.github.com/users/pankajtaneja/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-22T15:42:52Z", "updated_at": "2019-02-03T03:14:11Z", "closed_at": "2019-02-03T03:14:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to setup ServerSideEncryption while using s3contents for jupyter notebooks. The idea is to provide additional arguments like extra_args={'ServerSideEncryption': \"AES256\"}\r\n\r\nimport boto3\r\nclient = boto3.client('s3')\r\ntransfer = boto3.s3.transfer.S3Transfer(client=client)\r\ntransfer.upload_file('testfile', bucket, prefix+'testfile', extra_args={'ServerSideEncryption': \"AES256\"})\r\n\r\nIs there a variable in S3ContentsManager that can be used ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/54", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/54/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/54/events", "html_url": "https://github.com/danielfrg/s3contents/issues/54", "id": 386125641, "node_id": "MDU6SXNzdWUzODYxMjU2NDE=", "number": 54, "title": "Missing release tag, and no changelog", "user": {"login": "adamchainz", "id": 857609, "node_id": "MDQ6VXNlcjg1NzYwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/857609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamchainz", "html_url": "https://github.com/adamchainz", "followers_url": "https://api.github.com/users/adamchainz/followers", "following_url": "https://api.github.com/users/adamchainz/following{/other_user}", "gists_url": "https://api.github.com/users/adamchainz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamchainz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamchainz/subscriptions", "organizations_url": "https://api.github.com/users/adamchainz/orgs", "repos_url": "https://api.github.com/users/adamchainz/repos", "events_url": "https://api.github.com/users/adamchainz/events{/privacy}", "received_events_url": "https://api.github.com/users/adamchainz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-30T10:23:46Z", "updated_at": "2019-02-03T03:10:04Z", "closed_at": "2019-02-03T03:10:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I see there's a version 0.1.12 on PyPI, but it seems the release tag wasn't pushed to GitHub, as the release process in `RELEASE.md` would imply. Was it just missed?\r\n\r\nAlso ideally there would be a changelog describing the changes in simple user-facing language. Reading git logs isn't always easy, especially when upgrading tens of packages at once :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/51", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/51/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/51/events", "html_url": "https://github.com/danielfrg/s3contents/issues/51", "id": 369556623, "node_id": "MDU6SXNzdWUzNjk1NTY2MjM=", "number": 51, "title": "MalformedACLError Error + No module named 'dask' when starting up notebook with S3ContentsManager", "user": {"login": "jiyer2016", "id": 27082939, "node_id": "MDQ6VXNlcjI3MDgyOTM5", "avatar_url": "https://avatars1.githubusercontent.com/u/27082939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiyer2016", "html_url": "https://github.com/jiyer2016", "followers_url": "https://api.github.com/users/jiyer2016/followers", "following_url": "https://api.github.com/users/jiyer2016/following{/other_user}", "gists_url": "https://api.github.com/users/jiyer2016/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiyer2016/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiyer2016/subscriptions", "organizations_url": "https://api.github.com/users/jiyer2016/orgs", "repos_url": "https://api.github.com/users/jiyer2016/repos", "events_url": "https://api.github.com/users/jiyer2016/events{/privacy}", "received_events_url": "https://api.github.com/users/jiyer2016/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-10-12T13:40:49Z", "updated_at": "2018-10-19T03:35:45Z", "closed_at": "2018-10-19T03:35:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Get the following error when starting up jupyter notebook:\r\n\r\n```\r\n$ jupyter notebook\r\nTraceback (most recent call last):\r\n  File \"c:\\program files\\python36\\lib\\runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"c:\\program files\\python36\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Program Files\\Python36\\Scripts\\jupyter-notebook.EXE\\__main__.py\", line 9, in <module>\r\n  File \"c:\\program files\\python36\\lib\\site-packages\\jupyter_core\\application.py\", line 266, in launch_instance\r\n    return super(JupyterApp, cls).launch_instance(argv=argv, **kwargs)\r\n  File \"c:\\program files\\python36\\lib\\site-packages\\traitlets\\config\\application.py\", line 657, in launch_instance\r\n    app.initialize(argv)\r\n  File \"<decorator-gen-7>\", line 2, in initialize\r\n  File \"c:\\program files\\python36\\lib\\site-packages\\traitlets\\config\\application.py\", line 87, in catch_config_error\r\n    return method(app, *args, **kwargs)\r\n  File \"c:\\program files\\python36\\lib\\site-packages\\notebook\\notebookapp.py\", line 1627, in initialize\r\n    self.init_configurables()\r\n  File \"c:\\program files\\python36\\lib\\site-packages\\notebook\\notebookapp.py\", line 1322, in init_configurables\r\n    log=self.log,\r\n  File \"c:\\program files\\python36\\lib\\site-packages\\s3contents\\s3manager.py\", line 45, in __init__\r\n    sse=self.sse)\r\n  File \"c:\\program files\\python36\\lib\\site-packages\\s3contents\\s3_fs.py\", line 62, in __init__\r\n    self.init()\r\n  File \"c:\\program files\\python36\\lib\\site-packages\\s3contents\\s3_fs.py\", line 65, in init\r\n    self.mkdir(\"\")\r\n  File \"c:\\program files\\python36\\lib\\site-packages\\s3contents\\s3_fs.py\", line 145, in mkdir\r\n    self.fs.touch(path_)\r\n  File \"c:\\program files\\python36\\lib\\site-packages\\s3fs\\core.py\", line 949, in touch\r\n    Bucket=bucket, Key=key, ACL=acl)\r\n  File \"c:\\program files\\python36\\lib\\site-packages\\s3fs\\core.py\", line 172, in _call_s3\r\n    return method(**additional_kwargs)\r\n  File \"c:\\program files\\python36\\lib\\site-packages\\botocore\\client.py\", line 317, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"c:\\program files\\python36\\lib\\site-packages\\botocore\\client.py\", line 615, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (MalformedACLError) when calling the PutObject operation: The XML you provided was not well-formed or did not validate against our published schema.\r\nNo module named 'dask'\r\n```\r\n\r\nHere is how my configuration looks:\r\n\r\n```\r\nfrom s3contents import S3ContentsManager\r\nc = get_config()\r\n# Tell Jupyter to use S3ContentsManager for all storage.\r\nc.NotebookApp.contents_manager_class = S3ContentsManager\r\nc.S3ContentsManager.access_key_id = \"***\"\r\nc.S3ContentsManager.secret_access_key = \"***\"\r\nc.S3ContentsManager.endpoint_url = \"***\"\r\nc.S3ContentsManager.bucket = \"***\"\r\nc.S3ContentsManager.prefix = \"notebooks/test\"\r\n```\r\n\r\nWhy would this happen ? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/46", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/46/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/46/events", "html_url": "https://github.com/danielfrg/s3contents/issues/46", "id": 356582408, "node_id": "MDU6SXNzdWUzNTY1ODI0MDg=", "number": 46, "title": "How to use saved files from the notebook?", "user": {"login": "gcavalcante8808", "id": 640897, "node_id": "MDQ6VXNlcjY0MDg5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/640897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcavalcante8808", "html_url": "https://github.com/gcavalcante8808", "followers_url": "https://api.github.com/users/gcavalcante8808/followers", "following_url": "https://api.github.com/users/gcavalcante8808/following{/other_user}", "gists_url": "https://api.github.com/users/gcavalcante8808/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcavalcante8808/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcavalcante8808/subscriptions", "organizations_url": "https://api.github.com/users/gcavalcante8808/orgs", "repos_url": "https://api.github.com/users/gcavalcante8808/repos", "events_url": "https://api.github.com/users/gcavalcante8808/events{/privacy}", "received_events_url": "https://api.github.com/users/gcavalcante8808/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-03T18:55:31Z", "updated_at": "2018-09-03T19:02:30Z", "closed_at": "2018-09-03T19:02:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Folks,\r\n\r\nI have a notebook that reads a file from current dir and the jupyter is already configured to use s3contents. In my case, I can create and save file, but when I try to open the file, the python interpreter returns FileNotFound ...\r\n\r\nExample (clusterSpec.json\r\n```\r\nwith open('clusterSpec.json','r') as specfile:\r\n    json.loads(specfile)\r\n```\r\nSo ... I wonder ... How to read a file saved in the s3? Im using minio btw.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/45", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/45/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/45/events", "html_url": "https://github.com/danielfrg/s3contents/issues/45", "id": 356288788, "node_id": "MDU6SXNzdWUzNTYyODg3ODg=", "number": 45, "title": "JupyterHub + s3contents: Define `prefix` based on the authenticated username.", "user": {"login": "martinzugnoni", "id": 1155573, "node_id": "MDQ6VXNlcjExNTU1NzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1155573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martinzugnoni", "html_url": "https://github.com/martinzugnoni", "followers_url": "https://api.github.com/users/martinzugnoni/followers", "following_url": "https://api.github.com/users/martinzugnoni/following{/other_user}", "gists_url": "https://api.github.com/users/martinzugnoni/gists{/gist_id}", "starred_url": "https://api.github.com/users/martinzugnoni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martinzugnoni/subscriptions", "organizations_url": "https://api.github.com/users/martinzugnoni/orgs", "repos_url": "https://api.github.com/users/martinzugnoni/repos", "events_url": "https://api.github.com/users/martinzugnoni/events{/privacy}", "received_events_url": "https://api.github.com/users/martinzugnoni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-02T14:56:22Z", "updated_at": "2019-10-01T07:10:23Z", "closed_at": "2018-09-02T15:17:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using JupyterHub with the [DockerSpawner](https://github.com/jupyterhub/dockerspawner) and Github OAuth configuration. When a user authenticates using Github, a new container is created using the `jupyterhub/singleuser` image. Despite having a separated container per authenticated user, everything inside each container runs under the same `jovyan` username.\r\n\r\nI tried to keep users' files and folders in S3 separated by user namespaces, using this configuration:\r\n```\r\nimport getpass\r\nusername = getpass.getuser()\r\nc.S3ContentsManager.prefix = '{username}'.format(username=username)\r\n```\r\n\r\nBut, of course, all prefixes get the `jovyan` username.\r\n\r\nIs there any way of defining a prefix inside each container based on the real authenticated user instead of the user running the container?\r\n\r\nMy final goal is to have files/folders in S3 separated in users namespaces, so each of them can have their own files and there are no conflicts.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/39", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/39/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/39/events", "html_url": "https://github.com/danielfrg/s3contents/issues/39", "id": 330714294, "node_id": "MDU6SXNzdWUzMzA3MTQyOTQ=", "number": 39, "title": "Version 0.1.7 no longer pip installs dependencies", "user": {"login": "kelaban", "id": 1447443, "node_id": "MDQ6VXNlcjE0NDc0NDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1447443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kelaban", "html_url": "https://github.com/kelaban", "followers_url": "https://api.github.com/users/kelaban/followers", "following_url": "https://api.github.com/users/kelaban/following{/other_user}", "gists_url": "https://api.github.com/users/kelaban/gists{/gist_id}", "starred_url": "https://api.github.com/users/kelaban/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kelaban/subscriptions", "organizations_url": "https://api.github.com/users/kelaban/orgs", "repos_url": "https://api.github.com/users/kelaban/repos", "events_url": "https://api.github.com/users/kelaban/events{/privacy}", "received_events_url": "https://api.github.com/users/kelaban/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-06-08T15:57:14Z", "updated_at": "2018-06-08T22:20:16Z", "closed_at": "2018-06-08T22:20:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When pip installing `s3contents==0.1.7` dependencies are not installed causing import errors. However 0.1.5 works", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/37", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/37/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/37/events", "html_url": "https://github.com/danielfrg/s3contents/issues/37", "id": 329230510, "node_id": "MDU6SXNzdWUzMjkyMzA1MTA=", "number": 37, "title": "Release 0.1.5", "user": {"login": "mariusvniekerk", "id": 73973, "node_id": "MDQ6VXNlcjczOTcz", "avatar_url": "https://avatars3.githubusercontent.com/u/73973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mariusvniekerk", "html_url": "https://github.com/mariusvniekerk", "followers_url": "https://api.github.com/users/mariusvniekerk/followers", "following_url": "https://api.github.com/users/mariusvniekerk/following{/other_user}", "gists_url": "https://api.github.com/users/mariusvniekerk/gists{/gist_id}", "starred_url": "https://api.github.com/users/mariusvniekerk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mariusvniekerk/subscriptions", "organizations_url": "https://api.github.com/users/mariusvniekerk/orgs", "repos_url": "https://api.github.com/users/mariusvniekerk/repos", "events_url": "https://api.github.com/users/mariusvniekerk/events{/privacy}", "received_events_url": "https://api.github.com/users/mariusvniekerk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-04T21:53:11Z", "updated_at": "2018-06-05T19:21:40Z", "closed_at": "2018-06-05T19:21:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Its been a bit of time since the last tagged release was made.\r\n\r\nQuite a few useful features have landed since 0.1.4.  Is it a good time to consider cutting a 0.1.5?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/35", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/35/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/35/events", "html_url": "https://github.com/danielfrg/s3contents/issues/35", "id": 310498998, "node_id": "MDU6SXNzdWUzMTA0OTg5OTg=", "number": 35, "title": "Unable to access the local files", "user": {"login": "amalgjose", "id": 3983597, "node_id": "MDQ6VXNlcjM5ODM1OTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3983597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amalgjose", "html_url": "https://github.com/amalgjose", "followers_url": "https://api.github.com/users/amalgjose/followers", "following_url": "https://api.github.com/users/amalgjose/following{/other_user}", "gists_url": "https://api.github.com/users/amalgjose/gists{/gist_id}", "starred_url": "https://api.github.com/users/amalgjose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amalgjose/subscriptions", "organizations_url": "https://api.github.com/users/amalgjose/orgs", "repos_url": "https://api.github.com/users/amalgjose/repos", "events_url": "https://api.github.com/users/amalgjose/events{/privacy}", "received_events_url": "https://api.github.com/users/amalgjose/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-02T14:25:45Z", "updated_at": "2018-10-04T22:40:44Z", "closed_at": "2018-10-04T22:40:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am facing an issue while trying to access the files present locally. I am able to access the files present in s3. But not able to refer any files present in the jupyter server.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/34", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/34/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/34/events", "html_url": "https://github.com/danielfrg/s3contents/issues/34", "id": 307610412, "node_id": "MDU6SXNzdWUzMDc2MTA0MTI=", "number": 34, "title": "Bad config encountered during initialization:", "user": {"login": "anasos", "id": 11537637, "node_id": "MDQ6VXNlcjExNTM3NjM3", "avatar_url": "https://avatars3.githubusercontent.com/u/11537637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anasos", "html_url": "https://github.com/anasos", "followers_url": "https://api.github.com/users/anasos/followers", "following_url": "https://api.github.com/users/anasos/following{/other_user}", "gists_url": "https://api.github.com/users/anasos/gists{/gist_id}", "starred_url": "https://api.github.com/users/anasos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anasos/subscriptions", "organizations_url": "https://api.github.com/users/anasos/orgs", "repos_url": "https://api.github.com/users/anasos/repos", "events_url": "https://api.github.com/users/anasos/events{/privacy}", "received_events_url": "https://api.github.com/users/anasos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-03-22T11:48:21Z", "updated_at": "2019-07-12T14:30:41Z", "closed_at": "2018-03-22T16:19:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nI'm using jupyterhub i try to redirect my directory to S3 bucket.\r\nI get this error when run jupyterhub : \r\n \r\n```\r\n[C 2018-03-22 11:17:15.116 SingleUserNotebookApp application:90] Bad config encountered during initialization:\r\n[C 2018-03-22 11:17:15.116 SingleUserNotebookApp application:91] The 'contents_manager_class' trait of <jupyterhub.singleuser.SingleUserNotebookApp object at 0x7f1240666198> instance must be a type, but 'S3ContentsManager' could not be imported\r\n```\r\nmy jupyter_notebook_config.py content : \r\n\r\n```\r\nimport os\r\nfrom jupyterhub.spawner import LocalProcessSpawner\r\nfrom s3contents import S3ContentsManager\r\n\r\nc = get_config()\r\n\r\nc.NotebookApp.contents_manager_class = 'S3ContentsManager'\r\nc.S3ContentsManager.access_key_id = \"A**********************************\"\r\nc.S3ContentsManager.secret_access_key = \"e*******************************************\"\r\nc.S3ContentsManager.bucket_name = 'bucket-name'\r\nc.S3ContentsManager.prefix = 'notebooks'\r\n\r\n\r\n```\r\nThanks for the help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/33", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/33/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/33/events", "html_url": "https://github.com/danielfrg/s3contents/issues/33", "id": 305351483, "node_id": "MDU6SXNzdWUzMDUzNTE0ODM=", "number": 33, "title": "Renaming Folders raises FileNotFoundError when deleting old directory", "user": {"login": "pm8k", "id": 9729055, "node_id": "MDQ6VXNlcjk3MjkwNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9729055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pm8k", "html_url": "https://github.com/pm8k", "followers_url": "https://api.github.com/users/pm8k/followers", "following_url": "https://api.github.com/users/pm8k/following{/other_user}", "gists_url": "https://api.github.com/users/pm8k/gists{/gist_id}", "starred_url": "https://api.github.com/users/pm8k/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pm8k/subscriptions", "organizations_url": "https://api.github.com/users/pm8k/orgs", "repos_url": "https://api.github.com/users/pm8k/repos", "events_url": "https://api.github.com/users/pm8k/events{/privacy}", "received_events_url": "https://api.github.com/users/pm8k/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-14T22:27:40Z", "updated_at": "2018-12-18T21:17:35Z", "closed_at": "2018-12-18T21:17:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to rename folders in my S3 bucket through the Jupyter interface, but I constantly get this error (sorry for the formatting, the stack trace didn't print pretty in jupyter):\r\n\r\n```\r\nTraceback (most recent call last): \r\nFile \"/opt/conda/lib/python3.6/site-packages/s3fs/core.py\", line 396, in info kwargs, Bucket=bucket, Key=key, **self.req_kw) \r\nFile \"/opt/conda/lib/python3.6/site-packages/s3fs/core.py\", line 170, in _call_s3 return method(**additional_kwargs)\r\nFile \"/opt/conda/lib/python3.6/site-packages/botocore/client.py\", line 310, in _api_call return self._make_api_call(operation_name, kwargs)\r\nFile \"/opt/conda/lib/python3.6/site-packages/botocore/client.py\", line 599, in _make_api_call raise error_class(parsed_response, operation_name) botocore.exceptions.ClientError: An error occurred (404) when calling the HeadObject operation: Not Found During handling of the above exception, another exception occurred: \r\n\r\nTraceback (most recent call last): \r\nFile \"/opt/conda/lib/python3.6/site-packages/tornado/web.py\", line 1415, in _execute result = yield result File \"/opt/conda/lib/python3.6/site-packages/tornado/gen.py\", line 870, in run value = future.result()\r\nFile \"/opt/conda/lib/python3.6/site-packages/tornado/concurrent.py\", line 215, in result raise_exc_info(self._exc_info)\r\nFile \"<string>\", line 3, in raise_exc_info\r\nFile \"/opt/conda/lib/python3.6/site-packages/tornado/gen.py\", line 230, in wrapper yielded = next(result) File \"/opt/conda/lib/python3.6/site-packages/notebook/services/contents/handlers.py\", line 125, in patch model = yield gen.maybe_future(cm.update(model, path))\r\nFile \"/opt/conda/lib/python3.6/site-packages/notebook/services/contents/manager.py\", line 295, in update self.rename(path, new_path)\r\nFile \"/opt/conda/lib/python3.6/site-packages/notebook/services/contents/manager.py\", line 283, in rename self.rename_file(old_path, new_path)\r\nFile \"/opt/conda/lib/python3.6/site-packages/s3contents/genericmanager.py\", line 234, in rename_file self.fs.mv(old_path, new_path)\r\nFile \"/opt/conda/lib/python3.6/site-packages/s3contents/s3_fs.py\", line 108, in mv self.rm(old_path)\r\nFile \"/opt/conda/lib/python3.6/site-packages/s3contents/s3_fs.py\", line 131, in rm self.fs.rmdir(path_ + self.delimiter, recursive=True)\r\nFile \"/opt/conda/lib/python3.6/site-packages/s3fs/core.py\", line 641, in rmdir if (key and self.info(path)['Size'] == 0) or not key:\r\nFile \"/opt/conda/lib/python3.6/site-packages/s3fs/core.py\", line 402, in info raise FileNotFoundError(path) FileNotFoundError: mybucket/Untitled Folder/\r\n```\r\nI first thought it might have been the space in 'Untitled Folder' but it errors out even without the space. I'm trying to find out now what is causing it exactly but i'm not familiar with the s3fs package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/30", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/30/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/30/events", "html_url": "https://github.com/danielfrg/s3contents/issues/30", "id": 293939794, "node_id": "MDU6SXNzdWUyOTM5Mzk3OTQ=", "number": 30, "title": "KeyError using s3content 0.2.1 with s3fs 0.1.3", "user": {"login": "kwunlyou", "id": 1352316, "node_id": "MDQ6VXNlcjEzNTIzMTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1352316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kwunlyou", "html_url": "https://github.com/kwunlyou", "followers_url": "https://api.github.com/users/kwunlyou/followers", "following_url": "https://api.github.com/users/kwunlyou/following{/other_user}", "gists_url": "https://api.github.com/users/kwunlyou/gists{/gist_id}", "starred_url": "https://api.github.com/users/kwunlyou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kwunlyou/subscriptions", "organizations_url": "https://api.github.com/users/kwunlyou/orgs", "repos_url": "https://api.github.com/users/kwunlyou/repos", "events_url": "https://api.github.com/users/kwunlyou/events{/privacy}", "received_events_url": "https://api.github.com/users/kwunlyou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-02T16:10:47Z", "updated_at": "2018-02-06T06:14:11Z", "closed_at": "2018-02-06T06:11:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "It will have following error. Had a look at the code. It is probably due to the new implementation of [S3FileSystem.info](https://github.com/dask/s3fs/commit/cb4c681b42c7c5eff8e3f56cd11b138a76779c3f#diff-1997c4b809971172b55a040ccbb82ea0). s3fs 0.1.2 works well.\r\n\r\n```\r\n    Traceback (most recent call last):\r\n      File \"/usr/local/lib/python2.7/site-packages/tornado/web.py\", line 1512, in _execute\r\n        result = yield result\r\n      File \"/usr/local/lib/python2.7/site-packages/tornado/gen.py\", line 1055, in run\r\n        value = future.result()\r\n      File \"/usr/local/lib/python2.7/site-packages/tornado/concurrent.py\", line 238, in result\r\n        raise_exc_info(self._exc_info)\r\n      File \"/usr/local/lib/python2.7/site-packages/tornado/gen.py\", line 307, in wrapper\r\n        yielded = next(result)\r\n      File \"/usr/local/lib/python2.7/site-packages/notebook/services/contents/handlers.py\", line 112, in get\r\n        path=path, type=type, format=format, content=content,\r\n      File \"/usr/local/lib/python2.7/site-packages/s3contents/genericmanager.py\", line 86, in get\r\n        return func(path=path, content=content, format=format)\r\n      File \"/usr/local/lib/python2.7/site-packages/s3contents/genericmanager.py\", line 90, in _get_directory\r\n        return self._directory_model_from_path(path, content=content)\r\n      File \"/usr/local/lib/python2.7/site-packages/s3contents/genericmanager.py\", line 108, in _directory_model_from_path\r\n        model[\"content\"] = self._convert_file_records(dir_content)\r\n      File \"/usr/local/lib/python2.7/site-packages/s3contents/genericmanager.py\", line 172, in _convert_file_records\r\n        ret.append(self._file_model_from_path(path, False, None))\r\n      File \"/usr/local/lib/python2.7/site-packages/s3contents/genericmanager.py\", line 139, in _file_model_from_path\r\n        model[\"last_modified\"] = model[\"created\"] = self.fs.lstat(path)[\"ST_MTIME\"]\r\n      File \"/usr/local/lib/python2.7/site-packages/s3contents/s3_fs.py\", line 151, in lstat\r\n        ret[\"ST_MTIME\"] = info[\"LastModified\"]\r\n    KeyError: 'LastModified'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/26", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/26/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/26/events", "html_url": "https://github.com/danielfrg/s3contents/issues/26", "id": 279051703, "node_id": "MDU6SXNzdWUyNzkwNTE3MDM=", "number": 26, "title": "Exception after upgrading from 0.1.4 to 0.2.0", "user": {"login": "nsalmon", "id": 3949469, "node_id": "MDQ6VXNlcjM5NDk0Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3949469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsalmon", "html_url": "https://github.com/nsalmon", "followers_url": "https://api.github.com/users/nsalmon/followers", "following_url": "https://api.github.com/users/nsalmon/following{/other_user}", "gists_url": "https://api.github.com/users/nsalmon/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsalmon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsalmon/subscriptions", "organizations_url": "https://api.github.com/users/nsalmon/orgs", "repos_url": "https://api.github.com/users/nsalmon/repos", "events_url": "https://api.github.com/users/nsalmon/events{/privacy}", "received_events_url": "https://api.github.com/users/nsalmon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-04T16:09:28Z", "updated_at": "2020-05-19T16:24:47Z", "closed_at": "2017-12-09T20:55:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "After upgrading s3contents from 0.1.4 to 0.2.0, I am getting Exception below, on Jupyter startup.\r\nI have tired installing nose package, but getting a different Exception then.\r\n\r\n**Content of my jupyter_notebook_config.py**\r\n\r\n\r\n ```import\r\n\r\n os\r\nfrom s3contents import S3ContentsManager\r\n\r\nc = get_config()\r\n\r\n# Tell Jupyter to use S3ContentsManager for all storage.\r\nc.NotebookApp.contents_manager_class = S3ContentsManager\r\nc.S3ContentsManager.bucket_name = os.environ['AWS_BUCKET_NAME']`\r\n```\r\n\r\n**Exception thrown on startup** \r\n```jupyter-notebook_1  | [E 15:58:24.728 NotebookApp] Exception while loading config file /home/jovyan/.jupyter/jupyter_notebook_config.py\r\njupyter-notebook_1  |     Traceback (most recent call last):\r\njupyter-notebook_1  |       File \"/opt/conda/lib/python3.6/site-packages/traitlets/config/application.py\", line 562, in _load_config_files\r\njupyter-notebook_1  |         config = loader.load_config()\r\njupyter-notebook_1  |       File \"/opt/conda/lib/python3.6/site-packages/traitlets/config/loader.py\", line 457, in load_config\r\njupyter-notebook_1  |         self._read_file_as_dict()\r\njupyter-notebook_1  |       File \"/opt/conda/lib/python3.6/site-packages/traitlets/config/loader.py\", line 489, in _read_file_as_dict\r\njupyter-notebook_1  |         py3compat.execfile(conf_filename, namespace)\r\njupyter-notebook_1  |       File \"/opt/conda/lib/python3.6/site-packages/ipython_genutils/py3compat.py\", line 198, in execfile\r\njupyter-notebook_1  |         exec(compiler(f.read(), fname, 'exec'), glob, loc)\r\njupyter-notebook_1  |       File \"/home/jovyan/.jupyter/jupyter_notebook_config.py\", line 2, in <module>\r\njupyter-notebook_1  |         from s3contents import S3ContentsManager\r\njupyter-notebook_1  |       File \"/opt/conda/lib/python3.6/site-packages/s3contents/__init__.py\", line 14, in <module>\r\njupyter-notebook_1  |         from .s3manager import S3ContentsManager\r\njupyter-notebook_1  |       File \"/opt/conda/lib/python3.6/site-packages/s3contents/s3manager.py\", line 1, in <module>\r\njupyter-notebook_1  |         from s3contents.ipycompat import Unicode\r\njupyter-notebook_1  |       File \"/opt/conda/lib/python3.6/site-packages/s3contents/ipycompat.py\", line 49, in <module>\r\njupyter-notebook_1  |         from notebook.services.contents.tests.test_manager import (TestContentsManager)\r\njupyter-notebook_1  |       File \"/opt/conda/lib/python3.6/site-packages/notebook/services/contents/tests/test_manager.py\", line 11, in <module>\r\njupyter-notebook_1  |         from nose import SkipTest\r\njupyter-notebook_1  |     ModuleNotFoundError: No module named 'nose'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/23", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/23/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/23/events", "html_url": "https://github.com/danielfrg/s3contents/issues/23", "id": 277956271, "node_id": "MDU6SXNzdWUyNzc5NTYyNzE=", "number": 23, "title": "Consider using the s3fs package", "user": {"login": "mrocklin", "id": 306380, "node_id": "MDQ6VXNlcjMwNjM4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrocklin", "html_url": "https://github.com/mrocklin", "followers_url": "https://api.github.com/users/mrocklin/followers", "following_url": "https://api.github.com/users/mrocklin/following{/other_user}", "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions", "organizations_url": "https://api.github.com/users/mrocklin/orgs", "repos_url": "https://api.github.com/users/mrocklin/repos", "events_url": "https://api.github.com/users/mrocklin/events{/privacy}", "received_events_url": "https://api.github.com/users/mrocklin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-30T00:24:38Z", "updated_at": "2017-12-02T00:19:21Z", "closed_at": "2017-12-01T23:48:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "This might be able to remove some code in this repository.  If it doesn't do something that it should I'd love to hear about it.  http://s3fs.readthedocs.io/en/latest/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/22", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/22/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/22/events", "html_url": "https://github.com/danielfrg/s3contents/issues/22", "id": 277829016, "node_id": "MDU6SXNzdWUyNzc4MjkwMTY=", "number": 22, "title": "Uploaded files end up being base64-encoded  ", "user": {"login": "Cornelius-Riemenschneider", "id": 70492, "node_id": "MDQ6VXNlcjcwNDky", "avatar_url": "https://avatars0.githubusercontent.com/u/70492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cornelius-Riemenschneider", "html_url": "https://github.com/Cornelius-Riemenschneider", "followers_url": "https://api.github.com/users/Cornelius-Riemenschneider/followers", "following_url": "https://api.github.com/users/Cornelius-Riemenschneider/following{/other_user}", "gists_url": "https://api.github.com/users/Cornelius-Riemenschneider/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cornelius-Riemenschneider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cornelius-Riemenschneider/subscriptions", "organizations_url": "https://api.github.com/users/Cornelius-Riemenschneider/orgs", "repos_url": "https://api.github.com/users/Cornelius-Riemenschneider/repos", "events_url": "https://api.github.com/users/Cornelius-Riemenschneider/events{/privacy}", "received_events_url": "https://api.github.com/users/Cornelius-Riemenschneider/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-29T16:53:36Z", "updated_at": "2018-06-05T19:16:44Z", "closed_at": "2018-06-05T19:16:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nany files I upload besides jupyter notebooks end up being base64-encoded in the web viewer when I open them. I expect to be able to upload  a txt or ini file and then open it without it being base64-encoded.\r\n\r\nThis happens with s3contents 0.1.4 on\r\njupyter==1.0.0\r\njupyter-client==5.0.0\r\njupyter-console==5.1.0\r\njupyter-core==4.3.0\r\nipykernel==4.5.2\r\nipython==5.3.0\r\nipython-genutils==0.2.0\r\nipywidgets==6.0.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/21", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/21/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/21/events", "html_url": "https://github.com/danielfrg/s3contents/issues/21", "id": 263321604, "node_id": "MDU6SXNzdWUyNjMzMjE2MDQ=", "number": 21, "title": "Trouble Saving Notebooks To S3", "user": {"login": "jamesmcclain", "id": 11281373, "node_id": "MDQ6VXNlcjExMjgxMzcz", "avatar_url": "https://avatars1.githubusercontent.com/u/11281373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesmcclain", "html_url": "https://github.com/jamesmcclain", "followers_url": "https://api.github.com/users/jamesmcclain/followers", "following_url": "https://api.github.com/users/jamesmcclain/following{/other_user}", "gists_url": "https://api.github.com/users/jamesmcclain/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesmcclain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesmcclain/subscriptions", "organizations_url": "https://api.github.com/users/jamesmcclain/orgs", "repos_url": "https://api.github.com/users/jamesmcclain/repos", "events_url": "https://api.github.com/users/jamesmcclain/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesmcclain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-06T02:44:16Z", "updated_at": "2017-11-10T19:05:01Z", "closed_at": "2017-10-17T23:07:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, thank you for your project.\r\n\r\nI am attempting to install and use your project within [this docker container](https://github.com/geodocker/geodocker-jupyter-geopyspark).  I am able to login with the code apparently active, but I am unable to see, upload, or download any data.  The steps that I am following are the following:\r\n\r\n- I type `docker run -it --rm -p 8000:8000 --name geopyspark quay.io/geodocker/jupyter-geopyspark:6e5bbcc bash` to start the container\r\n- Inside the container, I type `pip3 install --user s3contents` (or `pip3 install --user 'https://github.com/danielfrg/s3contents/archive/master.zip'`) to install the extension\r\n- I create a file called `~/.jupyter/jupyter_notebook_config.py` with contents identical to the first example in the README, except with the access key, secret key, bucket name, and prefix appropriately set.\r\n- I then run jupyterhub by typing `jupyterhub --no-ssl --Spawner.notebook_dir=/ -f ~/.jupyter/jupyter_notebook_config.py` or some variation thereof (chaning the spawner notebook, &c).\r\n- I then proceed to `http://localhost:8000` and login with the username and password `hadoop` and `hadoop` as is normal for this container. \r\n\r\nThe behavior that I am observing is:\r\n- No files are listed after I login (that is, the directory within the bucket is not listed)\r\n- Attempting to upload a notebook hangs and no notebook appears in my s3 bucket\r\n- There is a constant network usage of between 500 kB/s and 1 mB/s going both up and down (even when pointing to an empty directory in the bucket).\r\n- The network traffic seems to be coming from the following process `/usr/bin/python3.4 /usr/bin/jupyterhub-singleuser --user=\"hadoop\" --cookie-name=\"jupyter-hub-token-hadoop\" --base-url=\"/user/hadoop\" --hub-host=\"\" --hub-prefix=\"/hub/\" --hub-` (sorry, that seems to be cut-off but it is all that I could get due to an apparent problem with the way docker interacts with my terminal)\r\n\r\nThank you.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/15", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/15/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/15/events", "html_url": "https://github.com/danielfrg/s3contents/issues/15", "id": 240202823, "node_id": "MDU6SXNzdWUyNDAyMDI4MjM=", "number": 15, "title": "Create a travis cron trigger for the builds", "user": {"login": "Cornelius-Riemenschneider", "id": 70492, "node_id": "MDQ6VXNlcjcwNDky", "avatar_url": "https://avatars0.githubusercontent.com/u/70492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cornelius-Riemenschneider", "html_url": "https://github.com/Cornelius-Riemenschneider", "followers_url": "https://api.github.com/users/Cornelius-Riemenschneider/followers", "following_url": "https://api.github.com/users/Cornelius-Riemenschneider/following{/other_user}", "gists_url": "https://api.github.com/users/Cornelius-Riemenschneider/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cornelius-Riemenschneider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cornelius-Riemenschneider/subscriptions", "organizations_url": "https://api.github.com/users/Cornelius-Riemenschneider/orgs", "repos_url": "https://api.github.com/users/Cornelius-Riemenschneider/repos", "events_url": "https://api.github.com/users/Cornelius-Riemenschneider/events{/privacy}", "received_events_url": "https://api.github.com/users/Cornelius-Riemenschneider/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-03T15:18:22Z", "updated_at": "2017-07-03T17:56:05Z", "closed_at": "2017-07-03T17:56:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nto ensure that the tests stay green, it would be great if you could create a travis cron trigger to run the tests on master i.e. weekly.\r\nSee https://docs.travis-ci.com/user/cron-jobs/ for documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/14", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/14/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/14/events", "html_url": "https://github.com/danielfrg/s3contents/issues/14", "id": 234156420, "node_id": "MDU6SXNzdWUyMzQxNTY0MjA=", "number": 14, "title": "Support running against IPython version 6", "user": {"login": "Analect", "id": 4063815, "node_id": "MDQ6VXNlcjQwNjM4MTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4063815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Analect", "html_url": "https://github.com/Analect", "followers_url": "https://api.github.com/users/Analect/followers", "following_url": "https://api.github.com/users/Analect/following{/other_user}", "gists_url": "https://api.github.com/users/Analect/gists{/gist_id}", "starred_url": "https://api.github.com/users/Analect/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Analect/subscriptions", "organizations_url": "https://api.github.com/users/Analect/orgs", "repos_url": "https://api.github.com/users/Analect/repos", "events_url": "https://api.github.com/users/Analect/events{/privacy}", "received_events_url": "https://api.github.com/users/Analect/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-07T10:00:22Z", "updated_at": "2017-06-07T10:16:21Z", "closed_at": "2017-06-07T10:16:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for your tool. Was playing around, but hitting some obstacles:\r\n\r\nI'm trying to get this working against an install of ipython 6.1.0.  It seems this may not be compatible yet.  Is there much work involved in getting that to work?\r\n\r\n```\r\n/opt/conda/lib/python3.6/site-packages/s3contents/ipycompat.py in <module>()\r\n      9 IPY_MAJOR = IPython.version_info[0]\r\n     10 if IPY_MAJOR not in SUPPORTED_VERSIONS:\r\n---> 11     raise ImportError(\"IPython version %d is not supported.\" % IPY_MAJOR)\r\n     12 \r\n     13 IPY3 = (IPY_MAJOR == 3)\r\n\r\nImportError: IPython version 6 is not supported.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/13", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/13/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/13/events", "html_url": "https://github.com/danielfrg/s3contents/issues/13", "id": 230159277, "node_id": "MDU6SXNzdWUyMzAxNTkyNzc=", "number": 13, "title": "Last Modified Date", "user": {"login": "tomz", "id": 32094, "node_id": "MDQ6VXNlcjMyMDk0", "avatar_url": "https://avatars2.githubusercontent.com/u/32094?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomz", "html_url": "https://github.com/tomz", "followers_url": "https://api.github.com/users/tomz/followers", "following_url": "https://api.github.com/users/tomz/following{/other_user}", "gists_url": "https://api.github.com/users/tomz/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomz/subscriptions", "organizations_url": "https://api.github.com/users/tomz/orgs", "repos_url": "https://api.github.com/users/tomz/repos", "events_url": "https://api.github.com/users/tomz/events{/privacy}", "received_events_url": "https://api.github.com/users/tomz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-20T15:09:39Z", "updated_at": "2019-02-23T08:25:35Z", "closed_at": "2017-07-28T16:29:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nAny reason that DUMMY_CREATED_DATE = datetime.fromtimestamp(0) is used in Last Modified? As the result Last Modified were shown as \"49 Years ago\"\r\n\r\nThanks,\r\nTom", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/12", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/12/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/12/events", "html_url": "https://github.com/danielfrg/s3contents/issues/12", "id": 223906669, "node_id": "MDU6SXNzdWUyMjM5MDY2Njk=", "number": 12, "title": "\"Invalid endpoint: s3.amazonaws.com\"", "user": {"login": "gnestor", "id": 512354, "node_id": "MDQ6VXNlcjUxMjM1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/512354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnestor", "html_url": "https://github.com/gnestor", "followers_url": "https://api.github.com/users/gnestor/followers", "following_url": "https://api.github.com/users/gnestor/following{/other_user}", "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions", "organizations_url": "https://api.github.com/users/gnestor/orgs", "repos_url": "https://api.github.com/users/gnestor/repos", "events_url": "https://api.github.com/users/gnestor/events{/privacy}", "received_events_url": "https://api.github.com/users/gnestor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-24T18:11:53Z", "updated_at": "2017-04-24T19:37:26Z", "closed_at": "2017-04-24T19:11:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running into the following error when trying to use s3contents inside of the [tensorflow-notebook](https://github.com/jupyter/docker-stacks/tree/master/tensorflow-notebook) Docker image. My config matches the example:\r\n\r\n```py\r\nfrom s3contents import S3ContentsManager\r\n\r\nc = get_config()\r\n\r\n# Tell Jupyter to use S3ContentsManager for all storage.\r\nc.NotebookApp.contents_manager_class = S3ContentsManager\r\nc.S3ContentsManager.access_key_id = <AWS Access Key ID / IAM Access Key ID>\r\nc.S3ContentsManager.secret_access_key = <AWS Secret Access Key / IAM Secret Access Key>\r\nc.S3ContentsManager.bucket_name = \"<>\"\r\n```\r\n\r\nThe stack trace:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/opt/conda/bin/jupyter-notebook\", line 6, in <module>\r\n    sys.exit(notebook.notebookapp.main())\r\n  File \"/opt/conda/lib/python3.5/site-packages/jupyter_core/application.py\", line 267, in launch_instance\r\n    return super(JupyterApp, cls).launch_instance(argv=argv, **kwargs)\r\n  File \"/opt/conda/lib/python3.5/site-packages/traitlets/config/application.py\", line 657, in launch_instance\r\n    app.initialize(argv)\r\n  File \"<decorator-gen-7>\", line 2, in initialize\r\n  File \"/opt/conda/lib/python3.5/site-packages/traitlets/config/application.py\", line 87, in catch_config_error\r\n    return method(app, *args, **kwargs)\r\n  File \"/opt/conda/lib/python3.5/site-packages/notebook/notebookapp.py\", line 1294, in initialize\r\n    self.init_configurables()\r\n  File \"/opt/conda/lib/python3.5/site-packages/notebook/notebookapp.py\", line 1038, in init_configurables\r\n    log=self.log,\r\n  File \"/opt/conda/lib/python3.5/site-packages/s3contents/s3manager.py\", line 44, in __init__\r\n    delimiter=self.delimiter\r\n  File \"/opt/conda/lib/python3.5/site-packages/s3contents/s3fs.py\", line 40, in __init__\r\n    config=config\r\n  File \"/opt/conda/lib/python3.5/site-packages/boto3/__init__.py\", line 83, in client\r\n    return _get_default_session().client(*args, **kwargs)\r\n  File \"/opt/conda/lib/python3.5/site-packages/boto3/session.py\", line 263, in client\r\n    aws_session_token=aws_session_token, config=config)\r\n  File \"/opt/conda/lib/python3.5/site-packages/botocore/session.py\", line 836, in create_client\r\n    client_config=config, api_version=api_version)\r\n  File \"/opt/conda/lib/python3.5/site-packages/botocore/client.py\", line 70, in create_client\r\n    verify, credentials, scoped_config, client_config, endpoint_bridge)\r\n  File \"/opt/conda/lib/python3.5/site-packages/botocore/client.py\", line 224, in _get_client_args\r\n    verify, credentials, scoped_config, client_config, endpoint_bridge)\r\n  File \"/opt/conda/lib/python3.5/site-packages/botocore/args.py\", line 71, in get_client_args\r\n    timeout=(new_config.connect_timeout, new_config.read_timeout))\r\n  File \"/opt/conda/lib/python3.5/site-packages/botocore/endpoint.py\", line 272, in create_endpoint\r\n    raise ValueError(\"Invalid endpoint: %s\" % endpoint_url)\r\nValueError: Invalid endpoint: s3.amazonaws.com\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/9", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/9/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/9/events", "html_url": "https://github.com/danielfrg/s3contents/issues/9", "id": 221276865, "node_id": "MDU6SXNzdWUyMjEyNzY4NjU=", "number": 9, "title": "Dependency on mock module in python2", "user": {"login": "Cornelius-Riemenschneider", "id": 70492, "node_id": "MDQ6VXNlcjcwNDky", "avatar_url": "https://avatars0.githubusercontent.com/u/70492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cornelius-Riemenschneider", "html_url": "https://github.com/Cornelius-Riemenschneider", "followers_url": "https://api.github.com/users/Cornelius-Riemenschneider/followers", "following_url": "https://api.github.com/users/Cornelius-Riemenschneider/following{/other_user}", "gists_url": "https://api.github.com/users/Cornelius-Riemenschneider/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cornelius-Riemenschneider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cornelius-Riemenschneider/subscriptions", "organizations_url": "https://api.github.com/users/Cornelius-Riemenschneider/orgs", "repos_url": "https://api.github.com/users/Cornelius-Riemenschneider/repos", "events_url": "https://api.github.com/users/Cornelius-Riemenschneider/events{/privacy}", "received_events_url": "https://api.github.com/users/Cornelius-Riemenschneider/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-12T14:14:43Z", "updated_at": "2017-04-12T20:01:32Z", "closed_at": "2017-04-12T20:01:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\nwhen using s3contents on python 2, it requires the mock module, even when no tests are run.\r\nThe following error is thrown on startup of jupyter:\r\n```(venv-jupyter)mac-0096:s3contents-github criemenschneider$ jupyter notebook --config=jupyter_config.py --no-browser\r\n[E 16:10:56.517 NotebookApp] Exception while loading config file /Users/criemenschneider/PycharmProjects/s3contents-github/jupyter_config.py\r\n    Traceback (most recent call last):\r\n      File \"/Users/criemenschneider/venv-jupyter/lib/python2.7/site-packages/traitlets/config/application.py\", line 562, in _load_config_files\r\n        config = loader.load_config()\r\n      File \"/Users/criemenschneider/venv-jupyter/lib/python2.7/site-packages/traitlets/config/loader.py\", line 457, in load_config\r\n        self._read_file_as_dict()\r\n      File \"/Users/criemenschneider/venv-jupyter/lib/python2.7/site-packages/traitlets/config/loader.py\", line 489, in _read_file_as_dict\r\n        py3compat.execfile(conf_filename, namespace)\r\n      File \"/Users/criemenschneider/venv-jupyter/lib/python2.7/site-packages/ipython_genutils/py3compat.py\", line 290, in execfile\r\n        builtin_mod.execfile(filename, *where)\r\n      File \"/Users/criemenschneider/PycharmProjects/s3contents-github/jupyter_config.py\", line 1, in <module>\r\n        from s3contents import S3ContentsManager\r\n      File \"/Users/criemenschneider/PycharmProjects/s3contents-github/s3contents/__init__.py\", line 5, in <module>\r\n        from .s3manager import S3ContentsManager\r\n      File \"/Users/criemenschneider/PycharmProjects/s3contents-github/s3contents/s3manager.py\", line 8, in <module>\r\n        from s3contents.s3fs import S3FS, S3FSError, NoSuchFile\r\n      File \"/Users/criemenschneider/PycharmProjects/s3contents-github/s3contents/s3fs.py\", line 9, in <module>\r\n        from s3contents.ipycompat import HasTraits, Unicode\r\n      File \"/Users/criemenschneider/PycharmProjects/s3contents-github/s3contents/ipycompat.py\", line 64, in <module>\r\n        from notebook.services.contents.tests.test_contents_api import (\r\n      File \"/Users/criemenschneider/venv-jupyter/lib/python2.7/site-packages/notebook/services/contents/tests/test_contents_api.py\", line 20, in <module>\r\n        from notebook.tests.launchnotebook import NotebookTestBase, assert_http_error\r\n      File \"/Users/criemenschneider/venv-jupyter/lib/python2.7/site-packages/notebook/tests/launchnotebook.py\", line 18, in <module>\r\n        from mock import patch #py2\r\n    ImportError: No module named mock\r\n[E 16:10:56.655 NotebookApp] Exception while loading config file /Users/criemenschneider/PycharmProjects/s3contents-github/jupyter_config.py\r\n    Traceback (most recent call last):\r\n      File \"/Users/criemenschneider/venv-jupyter/lib/python2.7/site-packages/traitlets/config/application.py\", line 562, in _load_config_files\r\n        config = loader.load_config()\r\n      File \"/Users/criemenschneider/venv-jupyter/lib/python2.7/site-packages/traitlets/config/loader.py\", line 457, in load_config\r\n        self._read_file_as_dict()\r\n      File \"/Users/criemenschneider/venv-jupyter/lib/python2.7/site-packages/traitlets/config/loader.py\", line 489, in _read_file_as_dict\r\n        py3compat.execfile(conf_filename, namespace)\r\n      File \"/Users/criemenschneider/venv-jupyter/lib/python2.7/site-packages/ipython_genutils/py3compat.py\", line 290, in execfile\r\n        builtin_mod.execfile(filename, *where)\r\n      File \"/Users/criemenschneider/PycharmProjects/s3contents-github/jupyter_config.py\", line 1, in <module>\r\n        from s3contents import S3ContentsManager\r\n      File \"/Users/criemenschneider/PycharmProjects/s3contents-github/s3contents/__init__.py\", line 5, in <module>\r\n        from .s3manager import S3ContentsManager\r\n      File \"/Users/criemenschneider/PycharmProjects/s3contents-github/s3contents/s3manager.py\", line 8, in <module>\r\n        from s3contents.s3fs import S3FS, S3FSError, NoSuchFile\r\n      File \"/Users/criemenschneider/PycharmProjects/s3contents-github/s3contents/s3fs.py\", line 9, in <module>\r\n        from s3contents.ipycompat import HasTraits, Unicode\r\n      File \"/Users/criemenschneider/PycharmProjects/s3contents-github/s3contents/ipycompat.py\", line 64, in <module>\r\n        from notebook.services.contents.tests.test_contents_api import (\r\n      File \"/Users/criemenschneider/venv-jupyter/lib/python2.7/site-packages/notebook/services/contents/tests/test_contents_api.py\", line 20, in <module>\r\n        from notebook.tests.launchnotebook import NotebookTestBase, assert_http_error\r\n      File \"/Users/criemenschneider/venv-jupyter/lib/python2.7/site-packages/notebook/tests/launchnotebook.py\", line 18, in <module>\r\n        from mock import patch #py2\r\n    ImportError: No module named mock\r\n[I 16:10:56.773 NotebookApp] Serving notebooks from local directory: /Users/criemenschneider/PycharmProjects/s3contents-github\r\n[I 16:10:56.773 NotebookApp] 0 active kernels\r\n[I 16:10:56.773 NotebookApp] The Jupyter Notebook is running at: http://localhost:8888/?token=969bca5897dac46cd0d50ffa04c07da163b730db8259bf1d\r\n[I 16:10:56.773 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).\r\n\r\n```\r\n\r\nI couldn't figure out why pgcontents, where ipycompat.py is borrowed from works, but s3contents does not.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/8", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/8/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/8/events", "html_url": "https://github.com/danielfrg/s3contents/issues/8", "id": 219206827, "node_id": "MDU6SXNzdWUyMTkyMDY4Mjc=", "number": 8, "title": "Support for other backends than S3", "user": {"login": "Cornelius-Riemenschneider", "id": 70492, "node_id": "MDQ6VXNlcjcwNDky", "avatar_url": "https://avatars0.githubusercontent.com/u/70492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cornelius-Riemenschneider", "html_url": "https://github.com/Cornelius-Riemenschneider", "followers_url": "https://api.github.com/users/Cornelius-Riemenschneider/followers", "following_url": "https://api.github.com/users/Cornelius-Riemenschneider/following{/other_user}", "gists_url": "https://api.github.com/users/Cornelius-Riemenschneider/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cornelius-Riemenschneider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cornelius-Riemenschneider/subscriptions", "organizations_url": "https://api.github.com/users/Cornelius-Riemenschneider/orgs", "repos_url": "https://api.github.com/users/Cornelius-Riemenschneider/repos", "events_url": "https://api.github.com/users/Cornelius-Riemenschneider/events{/privacy}", "received_events_url": "https://api.github.com/users/Cornelius-Riemenschneider/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-04-04T10:32:16Z", "updated_at": "2019-09-25T00:31:28Z", "closed_at": "2017-12-03T01:01:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nmy company is going to open-source a python library which thinly abstracts from different storage backends.\r\nAt our company it is mainly used for accessing S3 and Azure Blob Storage.\r\nWould you be potentially willing to accept a patch to either replace S3FS with a backend based on our library, or add an additional FS-backend to s3contents, which is able to connect to several different storage types?\r\nAs s3contents implements a lot of generic \"emulate FS stuff for blob stores\" which is not tied to S3 at all we really would like to reuse all this code.\r\nWe would love to hear from you and work on this!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/4", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/4/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/4/events", "html_url": "https://github.com/danielfrg/s3contents/issues/4", "id": 210145983, "node_id": "MDU6SXNzdWUyMTAxNDU5ODM=", "number": 4, "title": "Support IAM role-based access (no access_key_id or secret_access_key)", "user": {"login": "kpfleming", "id": 305938, "node_id": "MDQ6VXNlcjMwNTkzOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/305938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kpfleming", "html_url": "https://github.com/kpfleming", "followers_url": "https://api.github.com/users/kpfleming/followers", "following_url": "https://api.github.com/users/kpfleming/following{/other_user}", "gists_url": "https://api.github.com/users/kpfleming/gists{/gist_id}", "starred_url": "https://api.github.com/users/kpfleming/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kpfleming/subscriptions", "organizations_url": "https://api.github.com/users/kpfleming/orgs", "repos_url": "https://api.github.com/users/kpfleming/repos", "events_url": "https://api.github.com/users/kpfleming/events{/privacy}", "received_events_url": "https://api.github.com/users/kpfleming/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-24T20:09:12Z", "updated_at": "2017-03-03T03:51:38Z", "closed_at": "2017-03-03T03:51:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running on an EC2 instance, it's possible to use IAM roles to grant the instance itself access to an S3 bucket, so that no access keys are required (and thus they can't be accidentally compromised). In order for this to work, when requests are made via boto, the caller must not specify the access_key_id or secret_access_key parameters at all (they are left out of the argument list).\r\n\r\nI hacked the copy of s3contents on my system to remove these arguments in s3manager.py and s3fs.py to see if I could make it work, and it does work, but I'm not sure how this sort of thing should be exposed to the actual configuration of s3contents. If you're interested in addressing this, I'm happy to help come up with a suitable solution!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/3", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/3/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/3/events", "html_url": "https://github.com/danielfrg/s3contents/issues/3", "id": 202387751, "node_id": "MDU6SXNzdWUyMDIzODc3NTE=", "number": 3, "title": "[Feature Request] Add support to provide prefix name with jupyter bucket", "user": {"login": "sharmalalit", "id": 3047880, "node_id": "MDQ6VXNlcjMwNDc4ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3047880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharmalalit", "html_url": "https://github.com/sharmalalit", "followers_url": "https://api.github.com/users/sharmalalit/followers", "following_url": "https://api.github.com/users/sharmalalit/following{/other_user}", "gists_url": "https://api.github.com/users/sharmalalit/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharmalalit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharmalalit/subscriptions", "organizations_url": "https://api.github.com/users/sharmalalit/orgs", "repos_url": "https://api.github.com/users/sharmalalit/repos", "events_url": "https://api.github.com/users/sharmalalit/events{/privacy}", "received_events_url": "https://api.github.com/users/sharmalalit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-22T14:56:30Z", "updated_at": "2017-03-22T03:48:29Z", "closed_at": "2017-03-22T03:47:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given a S3 bucket , I have a custom business logic to keep data separate for each prefix or folder.\r\nIn s3nb there is option to provide S3 url as s3://bucket/imsOrg.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/2", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/2/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/2/events", "html_url": "https://github.com/danielfrg/s3contents/issues/2", "id": 202374582, "node_id": "MDU6SXNzdWUyMDIzNzQ1ODI=", "number": 2, "title": "Getting 'S3ContentsManager' is not defined ", "user": {"login": "sharmalalit", "id": 3047880, "node_id": "MDQ6VXNlcjMwNDc4ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3047880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharmalalit", "html_url": "https://github.com/sharmalalit", "followers_url": "https://api.github.com/users/sharmalalit/followers", "following_url": "https://api.github.com/users/sharmalalit/following{/other_user}", "gists_url": "https://api.github.com/users/sharmalalit/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharmalalit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharmalalit/subscriptions", "organizations_url": "https://api.github.com/users/sharmalalit/orgs", "repos_url": "https://api.github.com/users/sharmalalit/repos", "events_url": "https://api.github.com/users/sharmalalit/events{/privacy}", "received_events_url": "https://api.github.com/users/sharmalalit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-01-22T10:27:06Z", "updated_at": "2017-02-24T20:46:51Z", "closed_at": "2017-02-24T20:46:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have installed the package using:\r\n```\r\npip install s3contents\r\n\r\nWhen running the notebook getting following error : \r\n[E 06:24:06.221 NotebookApp] Exception while loading config file /home/jovyan/.jupyter/jupyter_notebook_config.py\r\n    Traceback (most recent call last):\r\n      File \"/opt/conda/lib/python3.5/site-packages/traitlets/config/application.py\", line 557, in _load_config_files\r\n        config = loader.load_config()\r\n      File \"/opt/conda/lib/python3.5/site-packages/traitlets/config/loader.py\", line 457, in load_config\r\n        self._read_file_as_dict()\r\n      File \"/opt/conda/lib/python3.5/site-packages/traitlets/config/loader.py\", line 489, in _read_file_as_dict\r\n        py3compat.execfile(conf_filename, namespace)\r\n      File \"/opt/conda/lib/python3.5/site-packages/ipython_genutils/py3compat.py\", line 185, in execfile\r\n        exec(compiler(f.read(), fname, 'exec'), glob, loc)\r\n      File \"/home/jovyan/.jupyter/jupyter_notebook_config.py\", line 43, in <module>\r\n        c.NotebookApp.contents_manager_class = S3ContentsManager\r\n    NameError: name 'S3ContentsManager' is not defined\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/danielfrg/s3contents/issues/1", "repository_url": "https://api.github.com/repos/danielfrg/s3contents", "labels_url": "https://api.github.com/repos/danielfrg/s3contents/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/danielfrg/s3contents/issues/1/comments", "events_url": "https://api.github.com/repos/danielfrg/s3contents/issues/1/events", "html_url": "https://github.com/danielfrg/s3contents/issues/1", "id": 184646808, "node_id": "MDU6SXNzdWUxODQ2NDY4MDg=", "number": 1, "title": "Rename directory", "user": {"login": "danielfrg", "id": 1580714, "node_id": "MDQ6VXNlcjE1ODA3MTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1580714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielfrg", "html_url": "https://github.com/danielfrg", "followers_url": "https://api.github.com/users/danielfrg/followers", "following_url": "https://api.github.com/users/danielfrg/following{/other_user}", "gists_url": "https://api.github.com/users/danielfrg/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielfrg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielfrg/subscriptions", "organizations_url": "https://api.github.com/users/danielfrg/orgs", "repos_url": "https://api.github.com/users/danielfrg/repos", "events_url": "https://api.github.com/users/danielfrg/events{/privacy}", "received_events_url": "https://api.github.com/users/danielfrg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-22T18:41:42Z", "updated_at": "2017-03-22T18:03:08Z", "closed_at": "2017-03-22T18:03:08Z", "author_association": "OWNER", "active_lock_reason": null, "body": "At the moment we just raise an error saying its not possible. Need to iterate all the keys and rename all of them.\n", "performed_via_github_app": null, "score": 1.0}]}