{"total_count": 21, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/mitya57/secretstorage/issues/23", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/23/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/23/events", "html_url": "https://github.com/mitya57/secretstorage/issues/23", "id": 589914269, "node_id": "MDU6SXNzdWU1ODk5MTQyNjk=", "number": 23, "title": "How to use this to read/write passwords?", "user": {"login": "rayluo", "id": 821550, "node_id": "MDQ6VXNlcjgyMTU1MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/821550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rayluo", "html_url": "https://github.com/rayluo", "followers_url": "https://api.github.com/users/rayluo/followers", "following_url": "https://api.github.com/users/rayluo/following{/other_user}", "gists_url": "https://api.github.com/users/rayluo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rayluo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rayluo/subscriptions", "organizations_url": "https://api.github.com/users/rayluo/orgs", "repos_url": "https://api.github.com/users/rayluo/repos", "events_url": "https://api.github.com/users/rayluo/events{/privacy}", "received_events_url": "https://api.github.com/users/rayluo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-29T23:51:20Z", "updated_at": "2020-04-09T12:24:05Z", "closed_at": "2020-04-09T12:24:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a high level question and hope to hear wisdom from Dmitry or community.\r\n\r\nBackground: My use case is to read/write password on Linux. And I have been able to successfully read/write password, using libsecret, with the help of PyGObject, following [this set of examples there](https://developer.gnome.org/libsecret/unstable/py-examples.html). It works but the [installation of PyGObject has dependency on graphic library pycairo](https://pygobject.readthedocs.io/en/latest/getting_started.html#ubuntu-logo-ubuntu-debian-logo-debian) which [I would like to avoid, if at all possible](https://gitlab.gnome.org/GNOME/pygobject/-/issues/395).\r\n\r\n[SecretStorage has cleaner dependency](https://github.com/mitya57/secretstorage/blob/3.1.2/setup.cfg#L28), however my first attempt failed because DBUS_SESSION_BUS_ADDRESS was not defined. After my tentatively defining it to match a dbus socket in my Debian desktop, `DBUS_SESSION_BUS_ADDRESS=unix:abstract=/var/run/dbus/system_bus_socket` (but I omit the guid suffix because I don't know where to find it), it raises another exception:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/demo/Live-usb-storage/env37/lib/python3.7/site-packages/secretstorage/__init__.py\", line 69, in dbus_init\r\n    connection = connect_and_authenticate()\r\n  File \"/home/demo/Live-usb-storage/env37/lib/python3.7/site-packages/jeepney/integrate/blocking.py\", line 115, in connect_and_authenticate\r\n    sock.connect(bus_addr)\r\nConnectionRefusedError: [Errno 111] Connection refused\r\n```\r\n\r\nBefore I dig deeper, I would appreciate some high level guidance here.\r\n\r\n* Is SecureStorage the right choice for my background/goal described above? I'm attempting to use SecureStorage as an alternative to my already-successful PyGObject-based experiment, but then I happen to also notice [this old issue saying SecureStorage could still depend on PyGObject](https://github.com/mitya57/secretstorage/issues/8)?\r\n\r\n* In general, what is the recommended approach with minimal dependency, for a Python script running on Linux to read/write password (stored in/via libsecret?)? In [a conversation here, @mitya57  hinted another Keyring project could be an *alternative*](https://github.com/mitya57/secretstorage/issues/8#issuecomment-255191963) \"If you need some simple API to store passwords in a command-line application, I think you should use something like python-keyring instead\", but that [keyring project seems actually uses SecureStorage as (one of) its own dependency](https://github.com/jaraco/keyring#using-keyring-on-ubuntu-1604).\r\n\r\nIn other words, what solution would give a reasonably-well password encryption on Linux, and with minimal dependency?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/22", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/22/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/22/events", "html_url": "https://github.com/mitya57/secretstorage/issues/22", "id": 574318415, "node_id": "MDU6SXNzdWU1NzQzMTg0MTU=", "number": 22, "title": "dbus_init() hangs when called in a script that calls another instance via sudo --preserve-env", "user": {"login": "mwhahaha", "id": 1191245, "node_id": "MDQ6VXNlcjExOTEyNDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1191245?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mwhahaha", "html_url": "https://github.com/mwhahaha", "followers_url": "https://api.github.com/users/mwhahaha/followers", "following_url": "https://api.github.com/users/mwhahaha/following{/other_user}", "gists_url": "https://api.github.com/users/mwhahaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/mwhahaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mwhahaha/subscriptions", "organizations_url": "https://api.github.com/users/mwhahaha/orgs", "repos_url": "https://api.github.com/users/mwhahaha/repos", "events_url": "https://api.github.com/users/mwhahaha/events{/privacy}", "received_events_url": "https://api.github.com/users/mwhahaha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-02T23:37:49Z", "updated_at": "2020-03-04T15:30:24Z", "closed_at": "2020-03-04T15:30:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not certain if this is a jeepney or secretstorage issue, but I'm opening it here.  The bug context is that if you have a script (a.py) which performs a secretstorage.dbus_init() and the script uses subprocess to execute another script (b.py) using sudo --preserve-env, the second secretstorage.dbus_init() hangs.\r\n\r\na.py:\r\n```\r\n#!/usr/bin/env python3\r\nimport os\r\nimport secretstorage\r\nimport secretstorage.exceptions as exceptions\r\nimport subprocess\r\n\r\n\r\ndef launch():\r\n    print('a launch()')\r\n    try:\r\n        print('a dbus_init()')\r\n        bus = secretstorage.dbus_init()\r\n    except exceptions.SecretStorageException as e:\r\n        raise RuntimeError(\"Unable to initialize SecretService: %s\" % e)\r\n    p = os.getcwd()\r\n    cmd = ['sudo', '--preserve-env', 'python3', '{}/b.py'.format(p)]\r\n    #cmd = ['python3', '{}/b.py'.format(p)]\r\n    try:\r\n        print('a subprocess')\r\n        subprocess.check_call(cmd)\r\n    except Exception as e:\r\n        print('a exception')\r\n        raise\r\n    print(\"a done\")\r\n\r\nif __name__ == '__main__':\r\n    print('a main()')\r\n    launch()\r\n```\r\n\r\nb.py\r\n```\r\n#!/usr/bin/env python3\r\nimport secretstorage\r\nimport secretstorage.exceptions as exceptions\r\n\r\ndef launch():\r\n    print(\"b launch()\")\r\n    try:\r\n        print('b dbus_init()')\r\n        bus = secretstorage.dbus_init()\r\n    except exceptions.SecretStorageException as e:\r\n        raise RuntimeError(\"Unable to initialize SecretService: %s\" % e)\r\n    print(\"b done\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    print('b main()')\r\n    launch()\r\n```\r\n\r\nResulting output\r\n```\r\n[centos@undercloud test]$ ./a.py \r\na main()\r\na launch()\r\na dbus_init()\r\na subprocess\r\nb main()\r\nb launch()\r\nb dbus_init()\r\n```\r\nIt will hang on the second dbus_init. A ctrl+c results in this traceback:\r\n```\r\n^CTraceback (most recent call last):\r\n  File \"/home/centos/test/b.py\", line 17, in <module>\r\n    launch()\r\n  File \"/home/centos/test/b.py\", line 9, in launch\r\n    bus = secretstorage.dbus_init()\r\n  File \"/usr/lib/python3.6/site-packages/secretstorage/__init__.py\", line 37, in dbus_init\r\n    connection = connect_and_authenticate()\r\n  File \"/usr/lib/python3.6/site-packages/jeepney/integrate/blocking.py\", line 102, in connect_and_authenticate\r\n    conn = DBusConnection(sock)\r\n  File \"/usr/lib/python3.6/site-packages/jeepney/integrate/blocking.py\", line 40, in __init__\r\n    hello_reply = self.bus_proxy.Hello()\r\n  File \"/usr/lib/python3.6/site-packages/jeepney/integrate/blocking.py\", line 84, in inner\r\n    return self._connection.send_and_get_reply(msg)\r\n  File \"/usr/lib/python3.6/site-packages/jeepney/integrate/blocking.py\", line 67, in send_and_get_reply\r\n    self.recv_messages()\r\n  File \"/usr/lib/python3.6/site-packages/jeepney/integrate/blocking.py\", line 55, in recv_messages\r\n    b = self.sock.recv(4096)\r\nKeyboardInterrupt\r\na exception\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.6/subprocess.py\", line 289, in call\r\n    return p.wait(timeout=timeout)\r\n  File \"/usr/lib64/python3.6/subprocess.py\", line 1477, in wait\r\n    (pid, sts) = self._try_wait(0)\r\n  File \"/usr/lib64/python3.6/subprocess.py\", line 1424, in _try_wait\r\n    (pid, sts) = os.waitpid(self.pid, wait_flags)\r\nKeyboardInterrupt\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"./a.py\", line 28, in <module>\r\n    launch()\r\n  File \"./a.py\", line 20, in launch\r\n    subprocess.check_call(cmd)\r\n  File \"/usr/lib64/python3.6/subprocess.py\", line 306, in check_call\r\n    retcode = call(*popenargs, **kwargs)\r\n  File \"/usr/lib64/python3.6/subprocess.py\", line 291, in call\r\n    p.kill()\r\n  File \"/usr/lib64/python3.6/subprocess.py\", line 1610, in kill\r\n    self.send_signal(signal.SIGKILL)\r\n  File \"/usr/lib64/python3.6/subprocess.py\", line 1600, in send_signal\r\n    os.kill(self.pid, sig)\r\nPermissionError: [Errno 1] Operation not permitted\r\n```\r\nThis is on CentOS8.\r\n\r\nPip freeze\r\n```\r\nalembic==1.3.1\r\namqp==2.5.2\r\nansible==2.8.8\r\nansible-config-template==1.0.1\r\nansible-pacemaker==1.0.4\r\nansible-role-atos-hsm==0.1.1\r\nansible-role-chrony==1.0.2\r\nansible-role-container-registry==1.1.1\r\nansible-role-openstack-operations==0.0.1\r\nansible-role-thales-hsm==0.2.1\r\nansible-role-tripleo-modify-image==1.1.1\r\nansible-runner==1.4.4\r\nanyjson==0.3.3\r\naodhclient==1.5.0\r\nappdirs==1.4.3\r\nasn1crypto==0.24.0\r\nattrs==17.4.0\r\nBabel==2.5.1\r\nbcrypt==3.1.7\r\nbeautifulsoup4==4.8.2\r\nboto==2.49.0\r\nBottleneck==1.2.1\r\ncachetools==4.0.0\r\ncffi==1.13.2\r\nchardet==3.0.4\r\ncliff==2.18.0\r\ncmd2==0.9.16\r\ncolorama==0.4.1\r\nconfigobj==5.0.6\r\ncontextlib2==0.5.5\r\ncroniter==0.3.27\r\ncryptography==2.8\r\ncssselect==0.9.2\r\ncycler==0.10.0\r\ndbus-python==1.2.4\r\ndebtcollector==1.22.0\r\ndecorator==4.4.0\r\ndib-utils==0.0.11\r\ndiskimage-builder==2.33.1.dev18\r\ndnspython==1.15.0\r\ndocutils==0.14\r\ndogpile.cache==0.9.0\r\nentrypoints==0.3\r\neventlet==0.25.1\r\nfasteners==0.14.1\r\nflake8==3.7.7\r\nfluidity-sm==0.2.0\r\nfuncsigs==1.0.2\r\nfuturist==1.10.0\r\ngevent==1.2.2\r\ngitdb2==2.0.3\r\nGitPython==3.0.2\r\ngpg==1.10.0\r\ngreenlet==0.4.13\r\nheat-cfntools==1.4.2\r\nhtml5lib==0.999999999\r\nidna==2.5\r\nimportlib-metadata==0.23\r\ninvoke==1.4.0\r\nironic-python-agent-builder==1.1.1.dev44\r\niso8601==0.1.11\r\njeepney==0.4.1\r\nJinja2==2.10.1\r\njmespath==0.9.0\r\njsonpatch==1.21\r\njsonpointer==1.10\r\njsonschema==2.6.0\r\nkeyring==21.0.0\r\nkeystoneauth1==3.18.0\r\nkeystonemiddleware==8.0.0\r\nkiwisolver==1.1.0\r\nkombu==4.6.6\r\nlexicon==1.0.0\r\nlockfile==0.11.0\r\nlogutils==0.3.5\r\nlxml==4.2.3\r\nMako==1.0.6.dev0\r\nMarkupSafe==0.23\r\nmatplotlib==3.1.1\r\nmccabe==0.6.1\r\nmetalsmith==0.16.0\r\nmistral-lib==1.4.0\r\nmock==3.0.5\r\nmonotonic==1.5\r\nmsgpack==0.6.2\r\nmunch==2.3.2\r\nnetaddr==0.7.19\r\nnetifaces==0.10.6\r\nnetworkx==2.3\r\nneutron-lib==1.31.0\r\nnumexpr==2.7.1\r\nnumpy==1.14.3\r\nopenstack-heat==13.1.0.dev143\r\nopenstacksdk==0.40.0\r\nos-apply-config==11.0.1.dev1\r\nos-client-config==1.34.0.dev6\r\nos-collect-config==11.0.0\r\nos-ken==0.4.1\r\nos-net-config==12.1.1.dev1\r\nos-refresh-config==10.4.1.dev1\r\nos-service-types==1.7.0\r\nos-traits==2.2.0\r\nosc-lib==2.0.0\r\noslo.cache==1.38.1\r\noslo.concurrency==3.31.0\r\noslo.config==6.12.0\r\noslo.context==2.23.0\r\noslo.db==6.0.0\r\noslo.i18n==3.25.1\r\noslo.log==3.45.2\r\noslo.messaging==10.5.0\r\noslo.middleware==3.38.1\r\noslo.policy==2.4.1\r\noslo.reports==1.31.1\r\noslo.rootwrap==5.17.1\r\noslo.serialization==2.29.2\r\noslo.service==1.41.1\r\noslo.upgradecheck==0.3.2\r\noslo.utils==3.42.1\r\noslo.versionedobjects==1.37.0\r\nosprofiler==2.9.0\r\novs==2.12.0\r\npandas==0.25.3\r\nparamiko==2.7.1\r\npasslib==1.7.1\r\nPaste==3.2.4\r\nPasteDeploy==2.0.1\r\npaunch==6.0.2.dev2\r\npbr==5.4.3\r\npciutils==2.3.6\r\npecan==1.3.2\r\nperf==0.1\r\npexpect==4.7.0\r\nPillow==5.1.1\r\nply==3.9\r\nprettytable==0.7.2\r\npsutil==5.6.3\r\nptyprocess==0.5.2\r\npyasn1==0.4.6\r\npycadf==2.10.0\r\npycairo==1.16.3\r\npycodestyle==2.5.0\r\npycparser==2.14\r\npydot==1.4.1\r\npyflakes==2.1.1\r\npygobject==3.28.3\r\npygraphviz==1.5\r\npyinotify==0.9.6\r\nPyMySQL==0.8.0\r\nPyNaCl==1.3.0\r\npyngus==2.3.0\r\npyOpenSSL==18.0.0\r\npyparsing==2.4.6\r\npyperclip==1.6.4\r\nPySocks==1.6.8\r\npystache==0.5.4\r\npython-barbicanclient==4.9.0\r\npython-cinderclient==5.0.0\r\npython-daemon==2.2.3\r\npython-dateutil==2.6.1\r\npython-designateclient==3.0.0\r\npython-dmidecode==3.12.2\r\npython-editor==1.0.4\r\npython-glanceclient==2.17.0\r\npython-heatclient==1.18.0\r\npython-ironic-inspector-client==3.7.0\r\npython-ironicclient==3.1.1\r\npython-keystoneclient==3.22.0\r\npython-linux-procfs==0.6\r\npython-magnumclient==2.16.0\r\npython-manilaclient==1.29.0\r\npython-memcached==1.58\r\npython-mistralclient==3.10.0\r\npython-monascaclient==1.16.0\r\npython-neutronclient==6.14.0\r\npython-novaclient==16.0.0\r\npython-octaviaclient==2.0.0\r\npython-openstackclient==4.0.0\r\npython-qpid-proton==0.30.0\r\npython-saharaclient==2.3.0\r\npython-swiftclient==3.8.1\r\npython-tripleoclient==13.1.1.dev59\r\npython-troveclient==3.2.0\r\npython-zaqarclient==1.12.0\r\npytz==2017.2\r\npyudev==0.21.0\r\nPyYAML==5.3\r\npyzmq==18.1.0\r\nrepoze.lru==0.7\r\nrequests==2.22.0\r\nrequestsexceptions==1.4.0\r\nrfc3986==1.2.0\r\nrhnlib==2.8.6\r\nRoutes==2.4.1\r\nrpm==4.14.2\r\nrsa==3.4.2\r\nschedutils==0.6\r\nscipy==1.0.0\r\nSecretStorage==3.1.1\r\nselinux==2.9\r\nsepolicy==1.1\r\nsetools==4.2.2\r\nsetproctitle==1.1.10\r\nshade==1.32.0\r\nsimplegeneric==0.8.1\r\nsimplejson==3.17.0\r\nsingledispatch==3.4.0.3\r\nsix==1.14.0\r\nslip==0.6.4\r\nslip.dbus==0.6.4\r\nsmmap2==2.0.3\r\nsos==3.7\r\nsoupsieve==1.9.2\r\nSQLAlchemy==1.3.2\r\nsqlalchemy-migrate==0.13.0\r\nsqlparse==0.2.4\r\nstatsd==3.2.1\r\nstevedore==1.31.0\r\nsyspurpose==1.25.17\r\ntables==3.5.2\r\nTempita==0.5.1\r\ntenacity==5.1.1\r\ntinyrpc==1.0.3\r\ntripleo-ansible==1.2.1\r\ntripleo-common==12.1.1.dev38\r\ntripleo-heat-templates==12.1.1.dev94\r\ntripleo-image-elements==11.0.2.dev1\r\ntripleo-ipsec==9.2.1\r\ntripleo-puppet-elements==12.1.1.dev1\r\ntripleo-repos==0.0.1.dev96\r\ntripleo-validations==12.1.1.dev4\r\nurllib3==1.25.7\r\nvine==1.3.0\r\nwaitress==1.4.2\r\nwarlock==1.3.3\r\nwcwidth==0.1.7\r\nwebencodings==0.5.1\r\nWebOb==1.8.5\r\nwebsocket-client==0.56.0\r\nWebTest==2.0.33\r\nWerkzeug==0.16.0\r\nwrapt==1.11.2\r\nyappi==1.0\r\nyaql==1.1.3\r\nzipp==0.5.1\r\n```\r\n\r\nThis is the stripped down version of the issue. This also happens if you just `import keyring` which makes it even harder to track down.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/21", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/21/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/21/events", "html_url": "https://github.com/mitya57/secretstorage/issues/21", "id": 544074421, "node_id": "MDU6SXNzdWU1NDQwNzQ0MjE=", "number": 21, "title": "Need API for `unlock(pwd=\"password\")`", "user": {"login": "wooparadog", "id": 1130984, "node_id": "MDQ6VXNlcjExMzA5ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1130984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wooparadog", "html_url": "https://github.com/wooparadog", "followers_url": "https://api.github.com/users/wooparadog/followers", "following_url": "https://api.github.com/users/wooparadog/following{/other_user}", "gists_url": "https://api.github.com/users/wooparadog/gists{/gist_id}", "starred_url": "https://api.github.com/users/wooparadog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wooparadog/subscriptions", "organizations_url": "https://api.github.com/users/wooparadog/orgs", "repos_url": "https://api.github.com/users/wooparadog/repos", "events_url": "https://api.github.com/users/wooparadog/events{/privacy}", "received_events_url": "https://api.github.com/users/wooparadog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-31T03:12:42Z", "updated_at": "2019-12-31T09:12:15Z", "closed_at": "2019-12-31T03:55:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I've been using `gnomekeyring`, but it has since been deprecated. So I'm looking for an alternative, and this project seems most promising.\r\n\r\nScript Using `gnomekeyring`:\r\n\r\n```python\r\nimport gnomekeyring\r\nimport getpass\r\ngnomekeyring.unlock_sync(None, getpass.getpass('Password: '))\r\n```\r\n\r\nThe current api provided(`unlock()`) will not work if X is not running at all. So, an `unlock(password=\"\")` would be appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/20", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/20/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/20/events", "html_url": "https://github.com/mitya57/secretstorage/issues/20", "id": 540247686, "node_id": "MDU6SXNzdWU1NDAyNDc2ODY=", "number": 20, "title": "AttributeError for encoding secrets of type None", "user": {"login": "LeaRain", "id": 49998509, "node_id": "MDQ6VXNlcjQ5OTk4NTA5", "avatar_url": "https://avatars0.githubusercontent.com/u/49998509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeaRain", "html_url": "https://github.com/LeaRain", "followers_url": "https://api.github.com/users/LeaRain/followers", "following_url": "https://api.github.com/users/LeaRain/following{/other_user}", "gists_url": "https://api.github.com/users/LeaRain/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeaRain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeaRain/subscriptions", "organizations_url": "https://api.github.com/users/LeaRain/orgs", "repos_url": "https://api.github.com/users/LeaRain/repos", "events_url": "https://api.github.com/users/LeaRain/events{/privacy}", "received_events_url": "https://api.github.com/users/LeaRain/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-19T11:14:18Z", "updated_at": "2020-01-04T13:26:14Z", "closed_at": "2020-01-04T13:26:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI use secretstorage with the module keyring and I had myself faced with a AttributeError for a password with type None:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/qt_prototypes/examples/connectiondialog2.py\", line 350, in change_connection_information\r\n    keyring.set_password(service_name, current_connection_username, current_connection_password)\r\n  File \"/qt_prototypes/venv/lib/python3.7/site-packages/keyring/core.py\", line 61, in set_password\r\n    _keyring_backend.set_password(service_name, username, password)\r\n  File \"/qt_prototypes/venv/lib/python3.7/site-packages/keyring/backends/SecretService.py\", line 90, in set_password\r\n    collection.create_item(label, attributes, password, replace=True)\r\n  File \"/qt_prototypes/venv/lib/python3.7/site-packages/secretstorage/collection.py\", line 118, in create_item\r\n    _secret = format_secret(self.session, secret, content_type)\r\n  File \"/qt_prototypes/venv/lib/python3.7/site-packages/secretstorage/util.py\", line 101, in format_secret\r\n    secret = secret.encode('utf-8')\r\nAttributeError: 'NoneType' object has no attribute 'encode'\r\n```\r\n\r\nIt'd be awesome if there were some kind of preventing this Error, maybe with a TypeCheck and an exception or so.\r\n\r\nThank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/19", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/19/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/19/events", "html_url": "https://github.com/mitya57/secretstorage/issues/19", "id": 492260862, "node_id": "MDU6SXNzdWU0OTIyNjA4NjI=", "number": 19, "title": "after update no longer works with threads ", "user": {"login": "mhlavink", "id": 12829958, "node_id": "MDQ6VXNlcjEyODI5OTU4", "avatar_url": "https://avatars2.githubusercontent.com/u/12829958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhlavink", "html_url": "https://github.com/mhlavink", "followers_url": "https://api.github.com/users/mhlavink/followers", "following_url": "https://api.github.com/users/mhlavink/following{/other_user}", "gists_url": "https://api.github.com/users/mhlavink/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhlavink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhlavink/subscriptions", "organizations_url": "https://api.github.com/users/mhlavink/orgs", "repos_url": "https://api.github.com/users/mhlavink/repos", "events_url": "https://api.github.com/users/mhlavink/events{/privacy}", "received_events_url": "https://api.github.com/users/mhlavink/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-11T14:06:10Z", "updated_at": "2019-10-23T11:21:14Z", "closed_at": "2019-10-23T11:21:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nafter secretstorage was updated in fedora it breaks software that uses threads. We have a tool that has backend part that stores some passwords in gnome keyring. It communicates with webui frontend through web rest api. That is handled by python http simple server that creates threads for incoming requests. If required, some request may need to query gnome keyring and this is where it breaks because updated secretstorage no longer works when used in a thread.\r\n\r\nused version secretstorage-3.1.1\r\n\r\nActual results:\r\n```\r\n  File \"/usr/lib/python3.7/site-packages/keyring/backends/SecretService.py\", line 79, in set_password\r\n    collection = self.get_preferred_collection()\r\n  File \"/usr/lib/python3.7/site-packages/keyring/backends/SecretService.py\", line 50, in get_preferred_collection\r\n    bus = secretstorage.dbus_init()\r\n  File \"/usr/lib/python3.7/site-packages/secretstorage/__init__.py\", line 37, in dbus_init\r\n    connection = connect_and_authenticate()\r\n  File \"/usr/lib/python3.7/site-packages/jeepney/integrate/blocking.py\", line 82, in connect_and_authenticate\r\n    conn = DBusConnection(sock)\r\n  File \"/usr/lib/python3.7/site-packages/jeepney/integrate/blocking.py\", line 20, in __init__\r\n    hello_reply = self.bus_proxy.Hello()\r\n  File \"/usr/lib/python3.7/site-packages/jeepney/integrate/blocking.py\", line 64, in inner\r\n    return self._connection.send_and_get_reply(msg)\r\n  File \"/usr/lib/python3.7/site-packages/jeepney/integrate/blocking.py\", line 45, in send_and_get_reply\r\n    future = self.send_message(message)\r\n  File \"/usr/lib/python3.7/site-packages/jeepney/integrate/blocking.py\", line 24, in send_message\r\n    future = self.router.outgoing(message)\r\n  File \"/usr/lib/python3.7/site-packages/jeepney/routing.py\", line 26, in outgoing\r\n    self.awaiting_reply[msg.header.serial] = handle = self.handle_factory()\r\n  File \"/usr/lib64/python3.7/asyncio/events.py\", line 644, in get_event_loop\r\n    % threading.current_thread().name)\r\nRuntimeError: There is no current event loop in thread 'Thread-1'.\r\n```\r\n\r\nif you run reproducer directly, without thread it will work. Same if you downgrade to \r\nsecretstorage-2.3.1\r\n\r\nreproducer:\r\ndrop .txt suffix\r\nrun attached threadwrap.py\r\n\r\n\r\n[threadwrap.py.txt](https://github.com/mitya57/secretstorage/files/3601185/threadwrap.py.txt)\r\n[gnomekeyringtest.py.txt](https://github.com/mitya57/secretstorage/files/3601186/gnomekeyringtest.py.txt)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/18", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/18/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/18/events", "html_url": "https://github.com/mitya57/secretstorage/issues/18", "id": 424591142, "node_id": "MDU6SXNzdWU0MjQ1OTExNDI=", "number": 18, "title": "Raise SecretServiceNotAvailableException if Gnome-keyring isn't installed", "user": {"login": "m3nu", "id": 3916435, "node_id": "MDQ6VXNlcjM5MTY0MzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/3916435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m3nu", "html_url": "https://github.com/m3nu", "followers_url": "https://api.github.com/users/m3nu/followers", "following_url": "https://api.github.com/users/m3nu/following{/other_user}", "gists_url": "https://api.github.com/users/m3nu/gists{/gist_id}", "starred_url": "https://api.github.com/users/m3nu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m3nu/subscriptions", "organizations_url": "https://api.github.com/users/m3nu/orgs", "repos_url": "https://api.github.com/users/m3nu/repos", "events_url": "https://api.github.com/users/m3nu/events{/privacy}", "received_events_url": "https://api.github.com/users/m3nu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-24T09:10:01Z", "updated_at": "2019-03-24T09:32:46Z", "closed_at": "2019-03-24T09:32:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I believe this error should be caught in the `secretstorage` package.\r\n\r\nhttps://github.com/borgbase/vorta/issues/235", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/16", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/16/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/16/events", "html_url": "https://github.com/mitya57/secretstorage/issues/16", "id": 401988955, "node_id": "MDU6SXNzdWU0MDE5ODg5NTU=", "number": 16, "title": "tests/test_item.py fails with TypeError: a bytes-like object is required, not 'list'", "user": {"login": "zrhoffman", "id": 11163823, "node_id": "MDQ6VXNlcjExMTYzODIz", "avatar_url": "https://avatars0.githubusercontent.com/u/11163823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zrhoffman", "html_url": "https://github.com/zrhoffman", "followers_url": "https://api.github.com/users/zrhoffman/followers", "following_url": "https://api.github.com/users/zrhoffman/following{/other_user}", "gists_url": "https://api.github.com/users/zrhoffman/gists{/gist_id}", "starred_url": "https://api.github.com/users/zrhoffman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zrhoffman/subscriptions", "organizations_url": "https://api.github.com/users/zrhoffman/orgs", "repos_url": "https://api.github.com/users/zrhoffman/repos", "events_url": "https://api.github.com/users/zrhoffman/events{/privacy}", "received_events_url": "https://api.github.com/users/zrhoffman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-22T22:48:23Z", "updated_at": "2019-01-24T10:57:10Z", "closed_at": "2019-01-23T20:18:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Using `cryptography` version 2.5. Stack trace:\r\n\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"/home/zrhoffman/github.com/python/mitya57/secretstorage/tests/test_item.py\", line 59, in test_secret\r\n    self.assertEqual(self.item.get_secret(), b'pa$$word')\r\n  File \"/home/zrhoffman/github.com/python/mitya57/secretstorage/secretstorage/item.py\", line 106, in get_secret\r\n    padded_secret = decryptor.update(encrypted_secret) + decryptor.finalize()\r\n  File \"/usr/lib/python3.7/site-packages/cryptography/hazmat/primitives/ciphers/base.py\", line 149, in update\r\n    return self._ctx.update(data)\r\n  File \"/usr/lib/python3.7/site-packages/cryptography/hazmat/backends/openssl/ciphers.py\", line 124, in update\r\n    n = self.update_into(data, buf)\r\n  File \"/usr/lib/python3.7/site-packages/cryptography/hazmat/backends/openssl/ciphers.py\", line 140, in update_into\r\n    self._backend._ffi.from_buffer(data), len(data)\r\nTypeError: a bytes-like object is required, not 'list'\r\n```\r\n\r\nThis broke from [3c68250ad9 in pyca/cryptography](https://github.com/pyca/cryptography/commit/3c68250ad9#diff-7f9182acb7dedf7b702ac6c6b98fd678R138) because [`ffi.from_buffer()` needs an object which supports the buffer interface](https://cffi.readthedocs.io/en/release-1.11/ref.html#ffi-buffer-ffi-from-buffer), which lists do not. This change is reflected in `cryptography` version 2.5 but not version 2.4.2.\r\n\r\n<details><summary>Full log (click to expand)</summary>\r\n\r\n```shell\r\n[zrhoffman@computer secretstorage]$ python3 -m unittest discover -s tests\r\n../usr/lib/python3.7/importlib/_bootstrap_external.py:525: ResourceWarning: unclosed <socket.socket fd=3, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0, raddr=/run/user/1000/bus>\r\n  code = marshal.loads(data)\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\n/usr/lib/python3.7/importlib/_bootstrap_external.py:525: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0, raddr=/run/user/1000/bus>\r\n  code = marshal.loads(data)\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\n..sssss.........../usr/lib/python3.7/tokenize.py:376: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0, raddr=/run/user/1000/bus>\r\n  return readline()\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\n/usr/lib/python3.7/tokenize.py:376: ResourceWarning: unclosed <socket.socket fd=10, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0, raddr=/run/user/1000/bus>\r\n  return readline()\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\n/usr/lib/python3.7/tokenize.py:376: ResourceWarning: unclosed <socket.socket fd=12, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0, raddr=/run/user/1000/bus>\r\n  return readline()\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\n/usr/lib/python3.7/tokenize.py:376: ResourceWarning: unclosed <socket.socket fd=13, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0, raddr=/run/user/1000/bus>\r\n  return readline()\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\n/usr/lib/python3.7/tokenize.py:376: ResourceWarning: unclosed <socket.socket fd=14, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0, raddr=/run/user/1000/bus>\r\n  return readline()\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\n/usr/lib/python3.7/tokenize.py:376: ResourceWarning: unclosed <socket.socket fd=15, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0, raddr=/run/user/1000/bus>\r\n  return readline()\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\n/usr/lib/python3.7/tokenize.py:376: ResourceWarning: unclosed <socket.socket fd=16, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0, raddr=/run/user/1000/bus>\r\n  return readline()\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\n/usr/lib/python3.7/tokenize.py:376: ResourceWarning: unclosed <socket.socket fd=17, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0, raddr=/run/user/1000/bus>\r\n  return readline()\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\n/usr/lib/python3.7/tokenize.py:376: ResourceWarning: unclosed <socket.socket fd=18, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0, raddr=/run/user/1000/bus>\r\n  return readline()\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\nE..s\r\n======================================================================\r\nERROR: test_secret (test_item.ItemTest)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/home/zrhoffman/github.com/python/mitya57/secretstorage/tests/test_item.py\", line 59, in test_secret\r\n    self.assertEqual(self.item.get_secret(), b'pa$$word')\r\n  File \"/home/zrhoffman/github.com/python/mitya57/secretstorage/secretstorage/item.py\", line 106, in get_secret\r\n    padded_secret = decryptor.update(encrypted_secret) + decryptor.finalize()\r\n  File \"/usr/lib/python3.7/site-packages/cryptography/hazmat/primitives/ciphers/base.py\", line 149, in update\r\n    return self._ctx.update(data)\r\n  File \"/usr/lib/python3.7/site-packages/cryptography/hazmat/backends/openssl/ciphers.py\", line 124, in update\r\n    n = self.update_into(data, buf)\r\n  File \"/usr/lib/python3.7/site-packages/cryptography/hazmat/backends/openssl/ciphers.py\", line 140, in update_into\r\n    self._backend._ffi.from_buffer(data), len(data)\r\nTypeError: a bytes-like object is required, not 'list'\r\n\r\n----------------------------------------------------------------------\r\nRan 24 tests in 0.634s\r\n\r\nFAILED (errors=1, skipped=6)\r\n[zrhoffman@computer secretstorage]$ exit\r\n```\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/15", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/15/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/15/events", "html_url": "https://github.com/mitya57/secretstorage/issues/15", "id": 398539828, "node_id": "MDU6SXNzdWUzOTg1Mzk4Mjg=", "number": 15, "title": "content_type is always text/plain no matter what type is specified", "user": {"login": "grahampc", "id": 446194, "node_id": "MDQ6VXNlcjQ0NjE5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/446194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grahampc", "html_url": "https://github.com/grahampc", "followers_url": "https://api.github.com/users/grahampc/followers", "following_url": "https://api.github.com/users/grahampc/following{/other_user}", "gists_url": "https://api.github.com/users/grahampc/gists{/gist_id}", "starred_url": "https://api.github.com/users/grahampc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grahampc/subscriptions", "organizations_url": "https://api.github.com/users/grahampc/orgs", "repos_url": "https://api.github.com/users/grahampc/repos", "events_url": "https://api.github.com/users/grahampc/events{/privacy}", "received_events_url": "https://api.github.com/users/grahampc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-12T09:54:36Z", "updated_at": "2019-01-12T10:47:39Z", "closed_at": "2019-01-12T10:47:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following code:\r\n\r\n`connection = secretstorage.dbus_init()`\r\n`collection = secretstorage.collection.get_default_collection(connection)`\r\n`attributes = {'key': 'test'}`\r\n`item = collection.create_item('test', attributes, b'\\xff\\xfe\\xfd\\xfc', replace=True, content_type='octet-stream')`\r\n`print('content_type =', item.get_secret_content_type())`\r\n\r\nprints\r\ncontent_type = text/plain\r\n\r\nIt does not matter what value is passed as the 'content_type' argument, the content type of the stored item is always 'text/plain'. Is this a restriction of the keyring daemon as there is nothing in the code which explains this behaviour ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/14", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/14/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/14/events", "html_url": "https://github.com/mitya57/secretstorage/issues/14", "id": 350053601, "node_id": "MDU6SXNzdWUzNTAwNTM2MDE=", "number": 14, "title": "Python3 - object has no attribute 'send_and_get_reply' ", "user": {"login": "AlessandroZ", "id": 10668373, "node_id": "MDQ6VXNlcjEwNjY4Mzcz", "avatar_url": "https://avatars2.githubusercontent.com/u/10668373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlessandroZ", "html_url": "https://github.com/AlessandroZ", "followers_url": "https://api.github.com/users/AlessandroZ/followers", "following_url": "https://api.github.com/users/AlessandroZ/following{/other_user}", "gists_url": "https://api.github.com/users/AlessandroZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlessandroZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlessandroZ/subscriptions", "organizations_url": "https://api.github.com/users/AlessandroZ/orgs", "repos_url": "https://api.github.com/users/AlessandroZ/repos", "events_url": "https://api.github.com/users/AlessandroZ/events{/privacy}", "received_events_url": "https://api.github.com/users/AlessandroZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-08-13T14:27:43Z", "updated_at": "2018-09-24T10:34:29Z", "closed_at": "2018-08-27T12:15:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI use your lib in my tool and during some tests, I had an error depending on which version of python I used. \r\nEverything works fine with: \r\n- Python 2.7.12\r\n- SecretStorage: 2.3.1\r\n\r\nHowever, it fails with python3: \r\n- Python 3.5.2\r\n- SecretStorage: 3.0.1\r\n\r\nHere is my traceback: \r\n```\r\n[-] Traceback (most recent call last):\r\n  File \"/home/test/Linux/lazagne/softwares/wallet/libsecret.py\", line 30, in run\r\n    collections = list(secretstorage.collection.get_all_collections(bus))\r\n  File \"/home/test/.local/lib/python3.5/site-packages/secretstorage/collection.py\", line 138, in get_all_collections\r\n    for collection_path in service.get_property('Collections'):\r\n  File \"/home/test/.local/lib/python3.5/site-packages/secretstorage/util.py\", line 59, in get_property\r\n    (signature, value), = self.send_and_get_reply(msg)\r\n  File \"/home/test/.local/lib/python3.5/site-packages/secretstorage/util.py\", line 41, in send_and_get_reply\r\n    return self._connection.send_and_get_reply(msg)\r\nAttributeError: 'BusConnection' object has no attribute 'send_and_get_reply'\r\n```\r\n\r\nThanks a lot for your work. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/13", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/13/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/13/events", "html_url": "https://github.com/mitya57/secretstorage/issues/13", "id": 348798461, "node_id": "MDU6SXNzdWUzNDg3OTg0NjE=", "number": 13, "title": "DBus authentication failure in jeepney doesn't get wrapped in SecretServiceNotAvailableException", "user": {"login": "Xiretza", "id": 3107142, "node_id": "MDQ6VXNlcjMxMDcxNDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3107142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xiretza", "html_url": "https://github.com/Xiretza", "followers_url": "https://api.github.com/users/Xiretza/followers", "following_url": "https://api.github.com/users/Xiretza/following{/other_user}", "gists_url": "https://api.github.com/users/Xiretza/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xiretza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xiretza/subscriptions", "organizations_url": "https://api.github.com/users/Xiretza/orgs", "repos_url": "https://api.github.com/users/Xiretza/repos", "events_url": "https://api.github.com/users/Xiretza/events{/privacy}", "received_events_url": "https://api.github.com/users/Xiretza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-08T16:22:33Z", "updated_at": "2018-09-02T19:52:06Z", "closed_at": "2018-08-14T11:22:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "This epic was started by https://github.com/JonnyJD/musicbrainz-isrcsubmit/issues/119.\r\n\r\nWhen jeepney (and in turn secretstorage) is used in a fakeroot environment, DBus authentication fails.\r\n- This causes DBus to return \"REJECTED EXTERNAL\", triggering a `raise Exception()` [here](https://gitlab.com/takluyver/jeepney/blob/master/jeepney/integrate/blocking.py#L78). Or at least it would, if not for [this coding error](https://gitlab.com/takluyver/jeepney/merge_requests/4). Right now it raises the `ValueError` seen in the isrcsubmit issue above.\r\n- [`dbus_init()`](https://github.com/mitya57/secretstorage/blob/master/secretstorage/__init__.py#L23) only checks for `KeyError` and `ConnectionError`, thus allowing the `Exception`/`ValueError` through.\r\n\r\n`dbus_init` should probably check for this failure mode of jeepney too. Right now, that's a little difficult, with it either raising a generic `Exception` or `ValueError` - both of which are pretty much catch-alls. If you're fine with that, [\\_\\_init\\_\\_.py:44](https://github.com/mitya57/secretstorage/blob/master/secretstorage/__init__.py#L44) could be modified to just catch any `BaseException` and wrap that, which in my opinion is a valid use of a catch-all - it's just being wrapped in another exception, after all.\r\n\r\nAlternatively, we could wait for [this other jeepney MR](https://gitlab.com/takluyver/jeepney/merge_requests/5) to go through, which raises a special exception in the case of an authentication failure. That could take quite a while though, I don't think that maintainer is particularly active and propagation might also take some time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/12", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/12/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/12/events", "html_url": "https://github.com/mitya57/secretstorage/issues/12", "id": 317191215, "node_id": "MDU6SXNzdWUzMTcxOTEyMTU=", "number": 12, "title": "3.* wheel is  built for Python 2 too", "user": {"login": "bityob", "id": 20026896, "node_id": "MDQ6VXNlcjIwMDI2ODk2", "avatar_url": "https://avatars1.githubusercontent.com/u/20026896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bityob", "html_url": "https://github.com/bityob", "followers_url": "https://api.github.com/users/bityob/followers", "following_url": "https://api.github.com/users/bityob/following{/other_user}", "gists_url": "https://api.github.com/users/bityob/gists{/gist_id}", "starred_url": "https://api.github.com/users/bityob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bityob/subscriptions", "organizations_url": "https://api.github.com/users/bityob/orgs", "repos_url": "https://api.github.com/users/bityob/repos", "events_url": "https://api.github.com/users/bityob/events{/privacy}", "received_events_url": "https://api.github.com/users/bityob/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-04-24T11:52:43Z", "updated_at": "2018-04-24T12:58:17Z", "closed_at": "2018-04-24T12:03:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/20026896/39184813-904097c0-47cd-11e8-82b7-cdb2d8a4e9ef.png)\r\n\r\nTherefor, I think, when installing the package with pip, \r\n\r\nit tries to downloaded the 3.* version instead of lower one- \r\n\r\n```bash\r\nuser@ubuntu:~$ pip2 install SecretStorage\r\nCollecting SecretStorage\r\n  Using cached https://files.pythonhosted.org/packages/02/de/e4590cf025c714635637d4b2d19acfb1015f2d0c6cfe843b2b8f776ec819/SecretStorage-3.0.0-py2.py3-none-any.whl\r\nSecretStorage requires Python '>=3.5' but the running Python is 2.7.14\r\n```\r\n\r\nTested with pip version 9.0.3 and 10.0.1\r\n\r\nI think building the wheel only for Python 3 will prevent pip to try installing the 3.* version.\r\n\r\nSee [here](https://packaging.python.org/tutorials/distributing-packages/#id75)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/11", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/11/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/11/events", "html_url": "https://github.com/mitya57/secretstorage/issues/11", "id": 317046657, "node_id": "MDU6SXNzdWUzMTcwNDY2NTc=", "number": 11, "title": "re-release on pypi while building using fresh setuptools", "user": {"login": "yarikoptic", "id": 39889, "node_id": "MDQ6VXNlcjM5ODg5", "avatar_url": "https://avatars3.githubusercontent.com/u/39889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yarikoptic", "html_url": "https://github.com/yarikoptic", "followers_url": "https://api.github.com/users/yarikoptic/followers", "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}", "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}", "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions", "organizations_url": "https://api.github.com/users/yarikoptic/orgs", "repos_url": "https://api.github.com/users/yarikoptic/repos", "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}", "received_events_url": "https://api.github.com/users/yarikoptic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-04-24T02:19:10Z", "updated_at": "2018-04-24T14:09:47Z", "closed_at": "2018-04-24T12:04:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "apparently (according to experts, see below) having `python_requires='>=3.5',` was not sufficient \"by itself\" to produce a pypi release so that previous versions would be automagically installed when using python2.  Without it having current release python 3 only breaks any other module which might depend on  secretstorage somewhere down the chain\r\n\r\nhere is a cut/paste from the #pypa IRC\r\n```\r\n21:22   yoh: Question about pip:  Shouldn't presence of python_requires='>=3.5',\r\n21:22   yoh: force installation of previous version (which still supports python 2) if pip is ran within \r\n             python2 virtualenv?\r\n21:23  <-- Sasazuka [~Sasazuka@unaffiliated/sasazuka] has quit (Quit: My MacBook has gone to sleep. ZZZzzz\u2026)\r\n21:24   yoh: secretstorage module seems has done everything \"by the book\" (has aforementioned python_requires, \r\n             also python 3 only classifiers...  but  pip install -r requirements.txt started to fail for us on \r\n             travis while building using python2\r\n21:37   toad_polo: yoh: I suspect they built their release with an old version of setuptools\r\n21:37   toad_polo: See this: https://pypi.org/project/python-dateutil/\r\n21:38   toad_polo: There's a \"requires\" line under the \"maintainer\" line.\r\n21:38   toad_polo: No such line here: https://pypi.org/project/SecretStorage/\r\n----------------------------------------------------------------------------------------------------------------\r\n21:56   njs: yoh: make sure you're using a recent version of pip\r\n21:58   njs: also\r\n22:14  * yoh asks for a pardon for staying silent -- bus went into the woods\r\n22:14   yoh: njs: our pip is the most recent ;) \r\n22:16   yoh: so, if I got it right, the verdict is that I should ask secretstorage folks to release a new minor \r\n             version which would just be a rebuild using some recent setuptools\r\n22:16   yoh: toad_polo: ^, thanks ;)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/10", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/10/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/10/events", "html_url": "https://github.com/mitya57/secretstorage/issues/10", "id": 250156211, "node_id": "MDU6SXNzdWUyNTAxNTYyMTE=", "number": 10, "title": "Support alternative bindings for Dbus", "user": {"login": "robbat2", "id": 373898, "node_id": "MDQ6VXNlcjM3Mzg5OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/373898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robbat2", "html_url": "https://github.com/robbat2", "followers_url": "https://api.github.com/users/robbat2/followers", "following_url": "https://api.github.com/users/robbat2/following{/other_user}", "gists_url": "https://api.github.com/users/robbat2/gists{/gist_id}", "starred_url": "https://api.github.com/users/robbat2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robbat2/subscriptions", "organizations_url": "https://api.github.com/users/robbat2/orgs", "repos_url": "https://api.github.com/users/robbat2/repos", "events_url": "https://api.github.com/users/robbat2/events{/privacy}", "received_events_url": "https://api.github.com/users/robbat2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-08-14T21:14:34Z", "updated_at": "2018-02-02T21:34:11Z", "closed_at": "2018-02-02T21:34:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Presently, the code uses [dbus-python](https://dbus.freedesktop.org/doc/dbus-python/) for DBus support.\r\n\r\nHowever, that binding cannot be used with [pypy](https://pypy.org/), because it has a C binding, and pypy tries to avoid that as much as possible.\r\n\r\nPlease support using another DBus binding instead. Of the [official list of DBus bindings](https://www.freedesktop.org/wiki/Software/DBusBindings/), the only usable option is [txdbus](https://github.com/cocagne/txdbus), because the others also require compiling a C extension.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/9", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/9/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/9/events", "html_url": "https://github.com/mitya57/secretstorage/issues/9", "id": 221081552, "node_id": "MDU6SXNzdWUyMjEwODE1NTI=", "number": 9, "title": "Wheel support", "user": {"login": "kevin-brown", "id": 1991850, "node_id": "MDQ6VXNlcjE5OTE4NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/1991850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevin-brown", "html_url": "https://github.com/kevin-brown", "followers_url": "https://api.github.com/users/kevin-brown/followers", "following_url": "https://api.github.com/users/kevin-brown/following{/other_user}", "gists_url": "https://api.github.com/users/kevin-brown/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevin-brown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevin-brown/subscriptions", "organizations_url": "https://api.github.com/users/kevin-brown/orgs", "repos_url": "https://api.github.com/users/kevin-brown/repos", "events_url": "https://api.github.com/users/kevin-brown/events{/privacy}", "received_events_url": "https://api.github.com/users/kevin-brown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-11T21:10:18Z", "updated_at": "2018-04-23T20:56:35Z", "closed_at": "2018-04-23T20:56:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "http://pythonwheels.com/\r\n\r\nRight now, only the `tar.gz` file is being distributed on PyPI for [secretstorage](https://pypi.python.org/pypi/secretstorage), which isn't _that much_ of an issue, but it does add some time to installing the package.\r\n\r\nThis package should be compatible with the Wheel format, considering it doesn't appear to have any C dependencies and it is compatible with both Python 2 and 3. As a result, you should only need to generate a universal wheel and then everyone (on all systems) will get the ability to install secretstorage with just the wheel, without having to do any extra work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/8", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/8/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/8/events", "html_url": "https://github.com/mitya57/secretstorage/issues/8", "id": 184117868, "node_id": "MDU6SXNzdWUxODQxMTc4Njg=", "number": 8, "title": "ImportError: No module named gi.repository", "user": {"login": "janssen", "id": 512087, "node_id": "MDQ6VXNlcjUxMjA4Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/512087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janssen", "html_url": "https://github.com/janssen", "followers_url": "https://api.github.com/users/janssen/followers", "following_url": "https://api.github.com/users/janssen/following{/other_user}", "gists_url": "https://api.github.com/users/janssen/gists{/gist_id}", "starred_url": "https://api.github.com/users/janssen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janssen/subscriptions", "organizations_url": "https://api.github.com/users/janssen/orgs", "repos_url": "https://api.github.com/users/janssen/repos", "events_url": "https://api.github.com/users/janssen/events{/privacy}", "received_events_url": "https://api.github.com/users/janssen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-10-20T02:05:23Z", "updated_at": "2016-10-20T19:21:36Z", "closed_at": "2016-10-20T09:15:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm seeing this failure:\n\n```\n  File \"build/bdist.linux-x86_64/egg/secretstorage/collection.py\", line 158, in get_default_collection\n  File \"build/bdist.linux-x86_64/egg/secretstorage/collection.py\", line 137, in create_collection\n  File \"build/bdist.linux-x86_64/egg/secretstorage/util.py\", line 127, in exec_prompt_glib\nImportError: No module named gi.repository\n```\n\nApparently there is also a dependency on some module 'gi'?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/6", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/6/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/6/events", "html_url": "https://github.com/mitya57/secretstorage/issues/6", "id": 163049420, "node_id": "MDU6SXNzdWUxNjMwNDk0MjA=", "number": 6, "title": "Migrate to supported alternative to pycrypto?", "user": {"login": "clarkbreyman-yammer", "id": 482971, "node_id": "MDQ6VXNlcjQ4Mjk3MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/482971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarkbreyman-yammer", "html_url": "https://github.com/clarkbreyman-yammer", "followers_url": "https://api.github.com/users/clarkbreyman-yammer/followers", "following_url": "https://api.github.com/users/clarkbreyman-yammer/following{/other_user}", "gists_url": "https://api.github.com/users/clarkbreyman-yammer/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarkbreyman-yammer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarkbreyman-yammer/subscriptions", "organizations_url": "https://api.github.com/users/clarkbreyman-yammer/orgs", "repos_url": "https://api.github.com/users/clarkbreyman-yammer/repos", "events_url": "https://api.github.com/users/clarkbreyman-yammer/events{/privacy}", "received_events_url": "https://api.github.com/users/clarkbreyman-yammer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-06-29T23:22:22Z", "updated_at": "2016-08-17T22:32:23Z", "closed_at": "2016-07-04T16:38:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Pycrypto has not been updated in 2 years with a fairly long list of open pull requests. There are alternatives: \n-- using pycryptodome (less desirable due to conflict with pycrypto install) \n-- using pycryptodomex and modifying the imports from Crypto to Cryptodomex\n-- using cryptography and modifying more code\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/5", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/5/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/5/events", "html_url": "https://github.com/mitya57/secretstorage/issues/5", "id": 162483462, "node_id": "MDU6SXNzdWUxNjI0ODM0NjI=", "number": 5, "title": "Secretstorage fails to install on Ubuntu 16.04", "user": {"login": "BenjamenMeyer", "id": 1074110, "node_id": "MDQ6VXNlcjEwNzQxMTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1074110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BenjamenMeyer", "html_url": "https://github.com/BenjamenMeyer", "followers_url": "https://api.github.com/users/BenjamenMeyer/followers", "following_url": "https://api.github.com/users/BenjamenMeyer/following{/other_user}", "gists_url": "https://api.github.com/users/BenjamenMeyer/gists{/gist_id}", "starred_url": "https://api.github.com/users/BenjamenMeyer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BenjamenMeyer/subscriptions", "organizations_url": "https://api.github.com/users/BenjamenMeyer/orgs", "repos_url": "https://api.github.com/users/BenjamenMeyer/repos", "events_url": "https://api.github.com/users/BenjamenMeyer/events{/privacy}", "received_events_url": "https://api.github.com/users/BenjamenMeyer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-27T15:42:22Z", "updated_at": "2016-06-29T05:12:40Z", "closed_at": "2016-06-27T19:23:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Secretstorage as of version 2.2.0 is trying to install python-dbus; however, this causes an installation failure on Ubuntu 16.04 as the dbus-1 package is no more, it's just dbus, and at least intermediate dependencies have not been updated to reflect this change.\n\nFYI - python-dbus is not pip installable, and seems to be a system-level package. Do you really need dbus access? I suspect many user may not - in my case, I'm working on a RESTful API and secretstorage got pulled in by a dependency we won't have dbus running on our servers; might be good to make this optional for 2.2.1 or 2.3.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/4", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/4/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/4/events", "html_url": "https://github.com/mitya57/secretstorage/issues/4", "id": 161717225, "node_id": "MDU6SXNzdWUxNjE3MTcyMjU=", "number": 4, "title": "Remove dependency on dbus-python", "user": {"login": "snordhausen", "id": 1327310, "node_id": "MDQ6VXNlcjEzMjczMTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1327310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/snordhausen", "html_url": "https://github.com/snordhausen", "followers_url": "https://api.github.com/users/snordhausen/followers", "following_url": "https://api.github.com/users/snordhausen/following{/other_user}", "gists_url": "https://api.github.com/users/snordhausen/gists{/gist_id}", "starred_url": "https://api.github.com/users/snordhausen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/snordhausen/subscriptions", "organizations_url": "https://api.github.com/users/snordhausen/orgs", "repos_url": "https://api.github.com/users/snordhausen/repos", "events_url": "https://api.github.com/users/snordhausen/events{/privacy}", "received_events_url": "https://api.github.com/users/snordhausen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-06-22T15:43:02Z", "updated_at": "2016-06-27T19:38:54Z", "closed_at": "2016-06-23T17:25:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\n\nWe are using the secretstorage module in [one of our tools](https://github.com/ImmobilienScout24/afp-cli). Unfortunately, after the release of version 2.2.0, users of both MacOSX and Ubuntu Linux could not install it via `pip` any more. On both systems, this was caused by the newly introduced dependency on dbus-python, which failed to compile.\n\nFrom your Travis tests I saw that I need to install `libdbus-glib-1-dev`, and this fixed the problem. I think, however, that the situation before the dependency was added was better:\n\nBefore dependency was added:\n- works out of the box on Ubuntu & MacOSX\n- in case it does not work, install the 'dbus-python' package (Ubuntu has it packaged, no need to use pip)\n\nAfter the dependency was added:\n- does not work out of the box on Ubuntu & MacOSX\n- to install on Ubuntu, you need\n  - a C-compiler with additional tools (which I happened to have)\n  - the package libdbus-glib-1-dev (which might be called differently on other Linux distributions)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/3", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/3/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/3/events", "html_url": "https://github.com/mitya57/secretstorage/issues/3", "id": 67288656, "node_id": "MDU6SXNzdWU2NzI4ODY1Ng==", "number": 3, "title": "Expose whether individual items are locked or unlocked", "user": {"login": "mathstuf", "id": 97253, "node_id": "MDQ6VXNlcjk3MjUz", "avatar_url": "https://avatars2.githubusercontent.com/u/97253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathstuf", "html_url": "https://github.com/mathstuf", "followers_url": "https://api.github.com/users/mathstuf/followers", "following_url": "https://api.github.com/users/mathstuf/following{/other_user}", "gists_url": "https://api.github.com/users/mathstuf/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathstuf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathstuf/subscriptions", "organizations_url": "https://api.github.com/users/mathstuf/orgs", "repos_url": "https://api.github.com/users/mathstuf/repos", "events_url": "https://api.github.com/users/mathstuf/events{/privacy}", "received_events_url": "https://api.github.com/users/mathstuf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-09T06:08:48Z", "updated_at": "2015-04-20T06:27:54Z", "closed_at": "2015-04-09T10:21:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [spec](http://standards.freedesktop.org/secret-service/ch03.html) states that items may be locked individually, separately from the collection. It does not appear that an API is exposed to unlock individual items. In fact, when returning items, it puts the locked and unlocked items [in the same result](https://github.com/mitya57/secretstorage/blob/master/secretstorage/collection.py#L212-215) without any differentiation between them.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/2", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/2/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/2/events", "html_url": "https://github.com/mitya57/secretstorage/issues/2", "id": 67019262, "node_id": "MDU6SXNzdWU2NzAxOTI2Mg==", "number": 2, "title": "Add a link to secretstorage-setup", "user": {"login": "rsyring", "id": 109467, "node_id": "MDQ6VXNlcjEwOTQ2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/109467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsyring", "html_url": "https://github.com/rsyring", "followers_url": "https://api.github.com/users/rsyring/followers", "following_url": "https://api.github.com/users/rsyring/following{/other_user}", "gists_url": "https://api.github.com/users/rsyring/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsyring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsyring/subscriptions", "organizations_url": "https://api.github.com/users/rsyring/orgs", "repos_url": "https://api.github.com/users/rsyring/repos", "events_url": "https://api.github.com/users/rsyring/events{/privacy}", "received_events_url": "https://api.github.com/users/rsyring/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-04-08T00:22:31Z", "updated_at": "2015-10-08T12:56:19Z", "closed_at": "2015-10-08T12:56:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Notify keyring and SecretStorage projects to see if they are interested in linking to us.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mitya57/secretstorage/issues/1", "repository_url": "https://api.github.com/repos/mitya57/secretstorage", "labels_url": "https://api.github.com/repos/mitya57/secretstorage/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/mitya57/secretstorage/issues/1/comments", "events_url": "https://api.github.com/repos/mitya57/secretstorage/issues/1/events", "html_url": "https://github.com/mitya57/secretstorage/issues/1", "id": 33952256, "node_id": "MDU6SXNzdWUzMzk1MjI1Ng==", "number": 1, "title": "cannot pass bytearray to pycrypto's bytes_to_long() in python2", "user": {"login": "ifundef", "id": 5309287, "node_id": "MDQ6VXNlcjUzMDkyODc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5309287?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ifundef", "html_url": "https://github.com/ifundef", "followers_url": "https://api.github.com/users/ifundef/followers", "following_url": "https://api.github.com/users/ifundef/following{/other_user}", "gists_url": "https://api.github.com/users/ifundef/gists{/gist_id}", "starred_url": "https://api.github.com/users/ifundef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ifundef/subscriptions", "organizations_url": "https://api.github.com/users/ifundef/orgs", "repos_url": "https://api.github.com/users/ifundef/repos", "events_url": "https://api.github.com/users/ifundef/events{/privacy}", "received_events_url": "https://api.github.com/users/ifundef/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-05-21T05:27:30Z", "updated_at": "2014-05-26T06:40:49Z", "closed_at": "2014-05-26T06:06:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "introduced with commit 70a041a1\n\npycrypto uses struct.unpack() in bytes_to_long() which cannot accept a bytearray (as passed in by dhcrypto.py).\n\n``` Python\n$ PYTHONPATH=. python2 -c 'import secretstorage'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"secretstorage/__init__.py\", line 14, in <module>\n    from secretstorage.collection import Collection, create_collection, \\\n  File \"secretstorage/collection.py\", line 21, in <module>\n    from secretstorage.item import Item\n  File \"secretstorage/item.py\", line 15, in <module>\n    from secretstorage.util import InterfaceWrapper, bus_get_object, \\\n  File \"secretstorage/util.py\", line 13, in <module>\n    from secretstorage.dhcrypto import Session\n  File \"secretstorage/dhcrypto.py\", line 42, in <module>\n    DH_PRIME_1024 = bytes_to_long(DH_PRIME_1024_BYTES)\n  File \"secretstorage/dhcrypto.py\", line 33, in <lambda>\n    bytes_to_long = lambda b: _to_long(bytearray(b))\n  File \"/usr/lib/python2.7/dist-packages/Crypto/Util/number.py\", line 431, in bytes_to_long\n    acc = (acc << 32) + unpack('>I', s[i:i+4])[0]\nstruct.error: unpack requires a string argument of length 4\n```\n\nthe change even fails the dhcrypto tests (ie tests/test_dhcrypto.py).\n\ntest results and experimentation in [this gist](https://gist.github.com/ifundef/d3af7593f7d6db5e82b4).\n\nfor now i've modified secretstorage from \"bytearray(b)\" to \"str(bytearray(b))\", which is not a solution for python3, but i'm only using secretstorage with python2.\n", "performed_via_github_app": null, "score": 1.0}]}