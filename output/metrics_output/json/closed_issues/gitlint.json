{"total_count": 47, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/132", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/132/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/132/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/132", "id": 622113472, "node_id": "MDU6SXNzdWU2MjIxMTM0NzI=", "number": 132, "title": "Merge commit not ignored", "user": {"login": "claha", "id": 9336788, "node_id": "MDQ6VXNlcjkzMzY3ODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9336788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claha", "html_url": "https://github.com/claha", "followers_url": "https://api.github.com/users/claha/followers", "following_url": "https://api.github.com/users/claha/following{/other_user}", "gists_url": "https://api.github.com/users/claha/gists{/gist_id}", "starred_url": "https://api.github.com/users/claha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claha/subscriptions", "organizations_url": "https://api.github.com/users/claha/orgs", "repos_url": "https://api.github.com/users/claha/repos", "events_url": "https://api.github.com/users/claha/events{/privacy}", "received_events_url": "https://api.github.com/users/claha/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724561, "node_id": "MDU6TGFiZWwyNTU3MjQ1NjE=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-20T22:05:42Z", "updated_at": "2020-05-26T21:17:30Z", "closed_at": "2020-05-26T21:17:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--- THIS IS A COMMENT BLOCK, REMOVE IT BEFORE SUBMITTING YOUR ISSUE\r\n\r\nThank you for your interest in gitlint and taking the time to open a bug report!\r\n\r\nA few quick notes:\r\n\r\n- If you can, please include the output of `gitlint --debug` as this includes useful debugging info.\r\n- It's really just me (https://github.com/jorisroovers) maintaining gitlint, and I do so in a hobby capacity. More recently it has become harder for me to find time to maintain gitlint on a regular basis, which in practice means that it might take me a while (sometimes months) to get back to you. Rest assured though, I absolutely read all bug reports as soon as they come in - I just tend to only \"work\" on gitlint a few times a year.\r\n- If you're looking to contribute code to gitlint, please start here: http://jorisroovers.github.io/gitlint/contributing/\r\n\r\n-->\r\n\r\nTrying to integrate this into github actions to run this on pull requests but it fails to recognize the merge commit for some reason.  is-merge-commit is false even though the commit message looks like a merge commit, I've tried to reproduce this locally but there it seems to work fine.\r\n\r\n```\r\nDEBUG: gitlint.cli To report issues, please visit https://github.com/jorisroovers/gitlint/issues\r\nDEBUG: gitlint.cli Platform: Linux-5.3.0-1020-azure-x86_64-with-glibc2.2.5\r\nDEBUG: gitlint.cli Python version: 3.8.3 (default, May 14 2020, 09:47:01) \r\n[GCC 7.5.0]\r\nDEBUG: gitlint.cli Git version: git version 2.26.2\r\nDEBUG: gitlint.cli Gitlint version: 0.13.1\r\nDEBUG: gitlint.cli GITLINT_USE_SH_LIB: [NOT SET]\r\nDEBUG: gitlint.cli Configuration\r\nconfig-path: /home/runner/work/pyavanza/pyavanza/.gitlint\r\n[GENERAL]\r\nextra-path: None\r\ncontrib: []\r\nignore: body-is-missing\r\nignore-merge-commits: True\r\nignore-fixup-commits: True\r\nignore-squash-commits: True\r\nignore-revert-commits: True\r\nignore-stdin: False\r\nstaged: False\r\nverbosity: 3\r\ndebug: True\r\ntarget: /home/runner/work/pyavanza/pyavanza\r\n[RULES]\r\n  I1: ignore-by-title\r\n     ignore=all\r\n     regex=None\r\n  I2: ignore-by-body\r\n     ignore=all\r\n     regex=None\r\n  T1: title-max-length\r\n     line-length=72\r\n  T2: title-trailing-whitespace\r\n  T6: title-leading-whitespace\r\n  T3: title-trailing-punctuation\r\n  T4: title-hard-tab\r\n  T5: title-must-not-contain-word\r\n     words=WIP\r\n  T7: title-match-regex\r\n     regex=.*\r\n  B1: body-max-line-length\r\n     line-length=80\r\n  B5: body-min-length\r\n     min-length=20\r\n  B6: body-is-missing\r\n     ignore-merge-commits=True\r\n  B2: body-trailing-whitespace\r\n  B3: body-hard-tab\r\n  B4: body-first-line-empty\r\n  B7: body-changed-file-mention\r\n     files=\r\n  M1: author-valid-email\r\n     regex=[^@ ]+@[^@ ]+\\.[^@ ]+\r\n\r\nDEBUG: gitlint.cli No --msg-filename flag, no or empty data passed to stdin. Using the local repo.\r\nDEBUG: gitlint.cli Linting 1 commit(s)\r\nDEBUG: gitlint.lint Linting commit abbedb4a8419a093b4891abf3a44d035d59bcf41\r\nDEBUG: gitlint.lint Commit Object\r\n--- Commit Message ----\r\nMerge 779ea24323a9bc150d4590d22b2593ce0c79cd00 into 72d49cd4ec6171670b305b27c765ea532961a8d2\r\n\r\n--- Meta info ---------\r\nAuthor: Claes Hallstr\u00c3\u00b6m <hallstrom.claes@gmail.com>\r\nDate:   2020-05-20 21:56:24 +0000\r\nis-merge-commit:  False\r\nis-fixup-commit:  False\r\nis-squash-commit: False\r\nis-revert-commit: False\r\nBranches: ['(HEAD detached at pull/18/merge)']\r\nChanged Files: ['.coveragerc', '.flake8', '.github/workflows/build.yaml', '.github/workflows/lint.yaml', '.github/workflows/tag.yaml', '.github/workflows/test.yaml', '.gitignore', '.gitlint', '.isort.cfg', 'LICENSE', 'README.md', 'mypy.ini', 'pyavanza/__init__.py', 'pyavanza/py.typed', 'setup.py', 'tests/__init__.py', 'tests/test_async_stock.py', 'tests/test_stock.py']\r\n-----------------------\r\n1: T1 Title exceeds max length (92>72): \"Merge 779ea24323a9bc150d4590d22b2593ce0c79cd00 into 72d49cd4ec6171670b305b27c765ea532961a8d2\"\r\nDEBUG: gitlint.cli Exit Code = 1\r\n##[error]Process completed with exit code 1.\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/128", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/128/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/128/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/128", "id": 589899846, "node_id": "MDU6SXNzdWU1ODk4OTk4NDY=", "number": 128, "title": "Error installing on MacOS 10.15.3 with brew", "user": {"login": "billgeo", "id": 8991188, "node_id": "MDQ6VXNlcjg5OTExODg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8991188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/billgeo", "html_url": "https://github.com/billgeo", "followers_url": "https://api.github.com/users/billgeo/followers", "following_url": "https://api.github.com/users/billgeo/following{/other_user}", "gists_url": "https://api.github.com/users/billgeo/gists{/gist_id}", "starred_url": "https://api.github.com/users/billgeo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/billgeo/subscriptions", "organizations_url": "https://api.github.com/users/billgeo/orgs", "repos_url": "https://api.github.com/users/billgeo/repos", "events_url": "https://api.github.com/users/billgeo/events{/privacy}", "received_events_url": "https://api.github.com/users/billgeo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-29T22:24:00Z", "updated_at": "2020-03-29T22:57:22Z", "closed_at": "2020-03-29T22:57:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, looking forward to using gitlint, but I got an error installing on MacOS 10.15.3\r\n\r\n```\r\nbmnelson@Bills-MacBook-Pro ~ % brew tap rockyluke/devops\r\nbmnelson@Bills-MacBook-Pro ~ % brew install gitlint \r\nUpdating Homebrew...\r\n==> Installing pip-gitlint from rockyluke/devops\r\n==> Downloading https://pypi.python.org/packages/5b/5a/21a35893dc478dbadf89b2b03261ee5585494ba6e801a8f94c9664f78490/gitlint-0.8.2.ta\r\nAlready downloaded: /Users/bmnelson/Library/Caches/Homebrew/downloads/e352722434328cad274ea8f617cb0d03ed393fc34bc886d4686bb9ee85f417ec--gitlint-0.8.2.tar.gz\r\nError: An exception occurred within a child process:\r\n  NoMethodError: undefined method `delete' for nil:NilClass\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/127", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/127/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/127/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/127", "id": 576919284, "node_id": "MDU6SXNzdWU1NzY5MTkyODQ=", "number": 127, "title": "commit-msg hook broken on Ubuntu due to python/python3", "user": {"login": "nickbroon", "id": 1462531, "node_id": "MDQ6VXNlcjE0NjI1MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1462531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickbroon", "html_url": "https://github.com/nickbroon", "followers_url": "https://api.github.com/users/nickbroon/followers", "following_url": "https://api.github.com/users/nickbroon/following{/other_user}", "gists_url": "https://api.github.com/users/nickbroon/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickbroon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickbroon/subscriptions", "organizations_url": "https://api.github.com/users/nickbroon/orgs", "repos_url": "https://api.github.com/users/nickbroon/repos", "events_url": "https://api.github.com/users/nickbroon/events{/privacy}", "received_events_url": "https://api.github.com/users/nickbroon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724556, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTY=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-06T13:05:59Z", "updated_at": "2020-08-21T13:27:50Z", "closed_at": "2020-08-21T13:27:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Ubuntu, using The hook installed with `gitlint install-hook` fails completely when called through a commit:\r\n\r\n```\r\ngitlint: checking commit message...\r\n/usr/bin/python: No module named gitlint\r\n-----------------------------------------------\r\ngitlint: Your commit message contains the above violations.\r\nContinue with commit anyways (this keeps the current commit message)? [y(es)/n(no)/e(dit)] e\r\n```\r\n\r\nThis is because gitlint is installed in Python3, not \"Python\" (which is Python2). Changing the binary to `python3` works around this issue,\r\n\r\n```\r\n$ apt-cache policy gitlint\r\ngitlint:\r\n  Installed: (none)\r\n  Candidate: 0.12.0-0.1\r\n  Version table:\r\n     0.12.0-0.1 500\r\n        500 http://gb.archive.ubuntu.com/ubuntu eoan/universe amd64 Packages\r\n        500 http://gb.archive.ubuntu.com/ubuntu eoan/universe i386 Packages\r\n```\r\nSee also: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=891538\r\n\r\n```\r\n$ gitlint --debug\r\nDEBUG: gitlint.cli To report issues, please visit https://github.com/jorisroovers/gitlint/issues\r\nDEBUG: gitlint.cli Platform: Linux-5.3.0-40-generic-x86_64-with-Ubuntu-19.10-eoan\r\nDEBUG: gitlint.cli Python version: 3.7.5 (default, Nov 20 2019, 09:21:52) \r\n[GCC 9.2.1 20191008]\r\nDEBUG: gitlint.cli Git version: git version 2.20.1\r\nDEBUG: gitlint.cli Gitlint version: 0.12.0\r\nDEBUG: gitlint.cli GITLINT_USE_SH_LIB: [NOT SET]\r\nDEBUG: gitlint.cli Configuration\r\nconfig-path: None\r\n[GENERAL]\r\nextra-path: None\r\ncontrib: []\r\nignore: \r\nignore-merge-commits: True\r\nignore-fixup-commits: True\r\nignore-squash-commits: True\r\nignore-stdin: False\r\nverbosity: 3\r\ndebug: True\r\ntarget: /home/user/code/project1\r\n[RULES]\r\n  I1: ignore-by-title\r\n     ignore=all\r\n     regex=None\r\n  I2: ignore-by-body\r\n     ignore=all\r\n     regex=None\r\n  T1: title-max-length\r\n     line-length=72\r\n  T2: title-trailing-whitespace\r\n  T6: title-leading-whitespace\r\n  T3: title-trailing-punctuation\r\n  T4: title-hard-tab\r\n  T5: title-must-not-contain-word\r\n     words=WIP\r\n  T7: title-match-regex\r\n     regex=.*\r\n  B1: body-max-line-length\r\n     line-length=80\r\n  B5: body-min-length\r\n     min-length=20\r\n  B6: body-is-missing\r\n     ignore-merge-commits=True\r\n  B2: body-trailing-whitespace\r\n  B3: body-hard-tab\r\n  B4: body-first-line-empty\r\n  B7: body-changed-file-mention\r\n     files=\r\n  M1: author-valid-email\r\n     regex=[^@ ]+@[^@ ]+\\.[^@ ]+\r\n\r\nDEBUG: gitlint.cli No --msg-filename flag, no or empty data passed to stdin. Attempting to read from the local repo.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/109", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/109/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/109/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/109", "id": 519308752, "node_id": "MDU6SXNzdWU1MTkzMDg3NTI=", "number": 109, "title": "pre-commit hook fails when adding args", "user": {"login": "sanzoghenzo", "id": 977953, "node_id": "MDQ6VXNlcjk3Nzk1Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/977953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanzoghenzo", "html_url": "https://github.com/sanzoghenzo", "followers_url": "https://api.github.com/users/sanzoghenzo/followers", "following_url": "https://api.github.com/users/sanzoghenzo/following{/other_user}", "gists_url": "https://api.github.com/users/sanzoghenzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanzoghenzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanzoghenzo/subscriptions", "organizations_url": "https://api.github.com/users/sanzoghenzo/orgs", "repos_url": "https://api.github.com/users/sanzoghenzo/repos", "events_url": "https://api.github.com/users/sanzoghenzo/events{/privacy}", "received_events_url": "https://api.github.com/users/sanzoghenzo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1437642432, "node_id": "MDU6TGFiZWwxNDM3NjQyNDMy", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/docs", "name": "docs", "color": "1be88f", "default": false, "description": ""}, {"id": 255724561, "node_id": "MDU6TGFiZWwyNTU3MjQ1NjE=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-07T14:42:22Z", "updated_at": "2020-02-26T09:02:56Z", "closed_at": "2020-02-26T09:02:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI just found this great project and I would like to use it with pre-commit to enforce conventional commit style messages.\r\n\r\nI've set up my `.pre-commit-config.yml` like this:\r\n\r\n```yml\r\ndefault_stages: [commit, push]\r\nrepos:\r\n  # many other commit hooks here...\r\n  - repo: https://github.com/jorisroovers/gitlint\r\n    rev: v0.12.0\r\n    hooks:\r\n    -   id: gitlint\r\n        stages: [commit-msg]\r\n        args: [--contrib=CT1]\r\n```\r\n\r\nand correctly installed the hooks.\r\n\r\nWhen I try to commit something, I get\r\n\r\n```\r\ngitlint..................................................................Failed\r\nhookid: gitlint\r\n\r\nUsage: gitlint [OPTIONS] COMMAND [ARGS]...\r\nTry \"gitlint --help\" for help.\r\n\r\nError: Invalid value for \"--msg-filename\": Could not open file: --contrib=CT1: No such file or directory\r\n```\r\n\r\nThis is because of how [arguments are passed by pre-commit](https://pre-commit.com/#arguments-pattern-in-hooks).\r\n\r\nThe workaround is overriding the hook entry and putting --msg-filename at the end of the args:\r\n\r\n```yml\r\n  - repo: https://github.com/jorisroovers/gitlint\r\n    rev: v0.12.0\r\n    hooks:\r\n    -   id: gitlint\r\n        stages: [commit-msg]\r\n        entry: gitlint\r\n        args: [--contrib=CT1, --msg-filename]\r\n```\r\n\r\nNot sure how it can be solved without major changes involving passing the commit file as positional argument.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/108", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/108/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/108/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/108", "id": 518619586, "node_id": "MDU6SXNzdWU1MTg2MTk1ODY=", "number": 108, "title": "Is there a way to get branch name in a user-defined rule?", "user": {"login": "and-semakin", "id": 9129071, "node_id": "MDQ6VXNlcjkxMjkwNzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/9129071?v=4", "gravatar_id": "", "url": "https://api.github.com/users/and-semakin", "html_url": "https://github.com/and-semakin", "followers_url": "https://api.github.com/users/and-semakin/followers", "following_url": "https://api.github.com/users/and-semakin/following{/other_user}", "gists_url": "https://api.github.com/users/and-semakin/gists{/gist_id}", "starred_url": "https://api.github.com/users/and-semakin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/and-semakin/subscriptions", "organizations_url": "https://api.github.com/users/and-semakin/orgs", "repos_url": "https://api.github.com/users/and-semakin/repos", "events_url": "https://api.github.com/users/and-semakin/events{/privacy}", "received_events_url": "https://api.github.com/users/and-semakin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724558, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTg=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 255724561, "node_id": "MDU6TGFiZWwyNTU3MjQ1NjE=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-06T17:26:56Z", "updated_at": "2020-02-26T09:03:48Z", "closed_at": "2020-02-26T09:03:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "<!--- THIS IS A COMMENT BLOCK, REMOVE IT BEFORE SUBMITTING YOUR ISSUE\r\n\r\nThank you for your interest in gitlint and taking the time to open a bug report!\r\n\r\nA few quick notes:\r\n\r\n- If you can, please include the output of `gitlint --debug` as this includes useful debugging info.\r\n- It's really just me (https://github.com/jorisroovers) maintaining gitlint, and I do so in a hobby capacity. More recently it has become harder for me to find time to maintain gitlint on a regular basis, which in practice means that it might take me a while (sometimes months) to get back to you. Rest assured though, I absolutely read all bug reports as soon as they come in - I just tend to only \"work\" on gitlint a few times a year.\r\n- If you're looking to contribute code to gitlint, please start here: http://jorisroovers.github.io/gitlint/contributing/\r\n\r\n-->\r\n\r\nBy convention in our company we should put Jira ticket ID in the beginning of branch name (for example `JIRA-123_do_something_great`) and also we should put ticket id in commit message. I would like to check if they are the same. For this I need to get branch name inside of `validate` method of the rule. But I don't see that there is some property in `commit` or `context` objects that would help me. Do I miss something or gitlint is not able to help me in this case?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/105", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/105/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/105/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/105", "id": 500103679, "node_id": "MDU6SXNzdWU1MDAxMDM2Nzk=", "number": 105, "title": "[body-changed-file-mention] not working when run as pre-commit hook", "user": {"login": "MaZZly", "id": 1368281, "node_id": "MDQ6VXNlcjEzNjgyODE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1368281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaZZly", "html_url": "https://github.com/MaZZly", "followers_url": "https://api.github.com/users/MaZZly/followers", "following_url": "https://api.github.com/users/MaZZly/following{/other_user}", "gists_url": "https://api.github.com/users/MaZZly/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaZZly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaZZly/subscriptions", "organizations_url": "https://api.github.com/users/MaZZly/orgs", "repos_url": "https://api.github.com/users/MaZZly/repos", "events_url": "https://api.github.com/users/MaZZly/events{/privacy}", "received_events_url": "https://api.github.com/users/MaZZly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724556, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTY=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-30T07:33:22Z", "updated_at": "2020-02-26T13:01:32Z", "closed_at": "2020-02-26T13:01:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that `commit.changed_files` is empty list when running gitlint as a [pre-commit](https://pre-commit.com/)-hook\r\n\r\n### Setup\r\npre-commit is in use and hook installed with `pre-commit install --hook-type commit-msg`\r\n\r\n`.gitlint`:\r\n```\r\n[body-changed-file-mention]\r\nfiles=.gitlint\r\n```\r\n\r\n`.pre-commint-config.yaml`:\r\n```\r\n-   repo: https://github.com/jorisroovers/gitlint\r\n    rev:  v0.12.0\r\n    hooks:\r\n    -   id: gitlint\r\n```\r\n\r\n### Reproduce:\r\n1. Change `.gitlint` and commit, without mentioning .gitlint in body.\r\n2. Run gitlint afterwards, it complains about modified file \r\n```\r\n2: B7 Body does not mention changed file '.gitlint'\r\n```\r\n---\r\n\r\nDebugging this, I created my own rule that will always reject, with list of modified files.\r\nDoing commit with pre-commit:\r\n```\r\ngitlint..................................................................Failed\r\nhookid: gitlint\r\n\r\n2: UC1 Changed files: []\r\n```\r\n\r\nIf I commit with `--no-verify` and then run `gitlint` It gives:\r\n```\r\n2: B7 Body does not mention changed file '.gitlint'\r\n2: UC1 Changed files: [u'.gitlint']\r\n```\r\n\r\nConclusion is that modified files list is empty when gitlint is run as a hook in pre-commit\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/103", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/103/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/103/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/103", "id": 490776057, "node_id": "MDU6SXNzdWU0OTA3NzYwNTc=", "number": 103, "title": "Config Error: No such rule 'contrib-title-conventional-commits'", "user": {"login": "CMiksche", "id": 9869391, "node_id": "MDQ6VXNlcjk4NjkzOTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/9869391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CMiksche", "html_url": "https://github.com/CMiksche", "followers_url": "https://api.github.com/users/CMiksche/followers", "following_url": "https://api.github.com/users/CMiksche/following{/other_user}", "gists_url": "https://api.github.com/users/CMiksche/gists{/gist_id}", "starred_url": "https://api.github.com/users/CMiksche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CMiksche/subscriptions", "organizations_url": "https://api.github.com/users/CMiksche/orgs", "repos_url": "https://api.github.com/users/CMiksche/repos", "events_url": "https://api.github.com/users/CMiksche/events{/privacy}", "received_events_url": "https://api.github.com/users/CMiksche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-08T16:47:34Z", "updated_at": "2019-09-11T11:42:21Z", "closed_at": "2019-09-11T11:42:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I really want to use the new `contrib-title-conventional-commits` rule to enforce Angular style commit messages. \r\nHowever, if i add the rule to my .gitlint file, gitlint shows me the error `Config Error: No such rule 'contrib-title-conventional-commits'`.\r\nI am using gitlint 0.12.0, here is my .gitlint:\r\n\r\n```\r\n[contrib-title-conventional-commits]\r\ntypes = build,ci,docs,feat,fix,perf,refactor,style,test\r\n```\r\n\r\nOutput of `gitlint --debug`:\r\n\r\n```\r\nDEBUG: gitlint.cli Platform: Windows-10-10.0.18362-SP0\r\nDEBUG: gitlint.cli Python version: 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:59:51) [MSC v.1914 64 bit (AMD64)]\r\nDEBUG: gitlint.cli Git version: git version 2.17.1.windows.2\r\nDEBUG: gitlint.cli Gitlint version: 0.12.0\r\nDEBUG: gitlint.cli GITLINT_USE_SH_LIB: [NOT SET]\r\nConfig Error: No such rule 'contrib-title-conventional-commits'\r\n```\r\n\r\nAfter reading #84 - i had assumed, that the new rule should work?!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/99", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/99/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/99/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/99", "id": 480265967, "node_id": "MDU6SXNzdWU0ODAyNjU5Njc=", "number": 99, "title": "Ignore revert commits", "user": {"login": "retr0h", "id": 9895, "node_id": "MDQ6VXNlcjk4OTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9895?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retr0h", "html_url": "https://github.com/retr0h", "followers_url": "https://api.github.com/users/retr0h/followers", "following_url": "https://api.github.com/users/retr0h/following{/other_user}", "gists_url": "https://api.github.com/users/retr0h/gists{/gist_id}", "starred_url": "https://api.github.com/users/retr0h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retr0h/subscriptions", "organizations_url": "https://api.github.com/users/retr0h/orgs", "repos_url": "https://api.github.com/users/retr0h/repos", "events_url": "https://api.github.com/users/retr0h/events{/privacy}", "received_events_url": "https://api.github.com/users/retr0h/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724558, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTg=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-13T17:04:23Z", "updated_at": "2020-02-26T09:08:29Z", "closed_at": "2020-02-26T09:08:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would love the ability to ignore revert commits.  This would be quite useful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/98", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/98/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/98/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/98", "id": 474046643, "node_id": "MDU6SXNzdWU0NzQwNDY2NDM=", "number": 98, "title": "Unable to allow empty body", "user": {"login": "paranoidi", "id": 504877, "node_id": "MDQ6VXNlcjUwNDg3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/504877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paranoidi", "html_url": "https://github.com/paranoidi", "followers_url": "https://api.github.com/users/paranoidi/followers", "following_url": "https://api.github.com/users/paranoidi/following{/other_user}", "gists_url": "https://api.github.com/users/paranoidi/gists{/gist_id}", "starred_url": "https://api.github.com/users/paranoidi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paranoidi/subscriptions", "organizations_url": "https://api.github.com/users/paranoidi/orgs", "repos_url": "https://api.github.com/users/paranoidi/repos", "events_url": "https://api.github.com/users/paranoidi/events{/privacy}", "received_events_url": "https://api.github.com/users/paranoidi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1437642432, "node_id": "MDU6TGFiZWwxNDM3NjQyNDMy", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/docs", "name": "docs", "color": "1be88f", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-07-29T13:18:12Z", "updated_at": "2019-08-16T08:56:58Z", "closed_at": "2019-08-01T12:45:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I was not able to figure out in an hour how to allow empty body in commit messages. VERY frustrating. Please improve documentation and/or provide instructions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/90", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/90/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/90/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/90", "id": 463238825, "node_id": "MDU6SXNzdWU0NjMyMzg4MjU=", "number": 90, "title": "Display the failed message", "user": {"login": "zaufi", "id": 548715, "node_id": "MDQ6VXNlcjU0ODcxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/548715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zaufi", "html_url": "https://github.com/zaufi", "followers_url": "https://api.github.com/users/zaufi/followers", "following_url": "https://api.github.com/users/zaufi/following{/other_user}", "gists_url": "https://api.github.com/users/zaufi/gists{/gist_id}", "starred_url": "https://api.github.com/users/zaufi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zaufi/subscriptions", "organizations_url": "https://api.github.com/users/zaufi/orgs", "repos_url": "https://api.github.com/users/zaufi/repos", "events_url": "https://api.github.com/users/zaufi/events{/privacy}", "received_events_url": "https://api.github.com/users/zaufi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724561, "node_id": "MDU6TGFiZWwyNTU3MjQ1NjE=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-02T13:44:46Z", "updated_at": "2019-11-13T15:40:48Z", "closed_at": "2019-11-13T15:40:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "In case of failure **please display the whole message**, so I can copy-n-paste it next time (and not to start typing over and over again)...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/86", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/86/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/86/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/86", "id": 448709925, "node_id": "MDU6SXNzdWU0NDg3MDk5MjU=", "number": 86, "title": "Pre-commit: No hook with id `gitlint`", "user": {"login": "akakoori", "id": 15867066, "node_id": "MDQ6VXNlcjE1ODY3MDY2", "avatar_url": "https://avatars3.githubusercontent.com/u/15867066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akakoori", "html_url": "https://github.com/akakoori", "followers_url": "https://api.github.com/users/akakoori/followers", "following_url": "https://api.github.com/users/akakoori/following{/other_user}", "gists_url": "https://api.github.com/users/akakoori/gists{/gist_id}", "starred_url": "https://api.github.com/users/akakoori/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akakoori/subscriptions", "organizations_url": "https://api.github.com/users/akakoori/orgs", "repos_url": "https://api.github.com/users/akakoori/repos", "events_url": "https://api.github.com/users/akakoori/events{/privacy}", "received_events_url": "https://api.github.com/users/akakoori/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1437642432, "node_id": "MDU6TGFiZWwxNDM3NjQyNDMy", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/docs", "name": "docs", "color": "1be88f", "default": false, "description": ""}, {"id": 255724561, "node_id": "MDU6TGFiZWwyNTU3MjQ1NjE=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 20, "created_at": "2019-05-27T07:37:26Z", "updated_at": "2019-07-05T12:34:49Z", "closed_at": "2019-07-02T16:07:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Installed gitlint with pre-commit following the doc, and it doesn't work.\r\n```bash\r\n(py37) \u279c  workspace git:(develop) \u2717 git commit -m 'testlkasdklnalgklkwamglamweoingienibgblalsjkdlgjldjlgasdgfasdfasdfasdgwebbffsdfsdnsdfsgwrqwrqwr'\r\nautopep8.................................................................Passed\r\nCheck for added large files..............................................Passed\r\nCheck JSON...............................................................Passed\r\nCheck for merge conflicts................................................Passed\r\nCheck Yaml...............................................................Passed\r\nFix End of Files.........................................................Passed\r\nFlake8...................................................................Passed\r\nFix requirements.txt.....................................................Passed\r\nDon't commit to branch...................................................Passed\r\nTrim Trailing Whitespace.................................................Passed\r\n[develop (root-commit) 8ae7eec] testlkasdklnalgklkwamglamweoingienibgblalsjkdlgjldjlgasdgfasdfasdfasdgwebbffsdfsdnsdfsgwrqwrqwr\r\n 17 files changed, 825 insertions(+)\r\n```\r\n\r\n\r\nWhen run `pre-commit run gitlint`, I got:\r\n```bash\r\nNo hook with id `gitlint`\r\n```\r\nHere is my `.pre-commit-config.yaml`:\r\n```yaml\r\nrepos:\r\n\r\n-   repo: https://github.com/pre-commit/mirrors-autopep8\r\n    rev: v1.4.4\r\n    hooks:\r\n    -   id: autopep8\r\n        args:\r\n        - --in-place\r\n        - --ignore=E501\r\n\r\n-   repo: https://github.com/pre-commit/pre-commit-hooks\r\n    rev: v2.2.3\r\n    hooks:\r\n    -   id: check-added-large-files\r\n    -   id: check-json\r\n    -   id: check-merge-conflict\r\n    -   id: check-yaml\r\n    -   id: end-of-file-fixer\r\n    -   id: flake8\r\n        args:\r\n        - --extend-ignore=E501\r\n    -   id: requirements-txt-fixer\r\n        files: requirements*\r\n    -   id: no-commit-to-branch\r\n    -   id: trailing-whitespace\r\n        args:\r\n        - --markdown-linebreak-ext=md\r\n\r\n-   repo: https://github.com/jorisroovers/gitlint\r\n    rev:  master\r\n    hooks:\r\n    -   id: gitlint\r\n \r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/85", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/85/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/85/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/85", "id": 417471300, "node_id": "MDU6SXNzdWU0MTc0NzEzMDA=", "number": 85, "title": "v0.11.0 release?", "user": {"login": "nickbroon", "id": 1462531, "node_id": "MDQ6VXNlcjE0NjI1MzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1462531?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickbroon", "html_url": "https://github.com/nickbroon", "followers_url": "https://api.github.com/users/nickbroon/followers", "following_url": "https://api.github.com/users/nickbroon/following{/other_user}", "gists_url": "https://api.github.com/users/nickbroon/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickbroon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickbroon/subscriptions", "organizations_url": "https://api.github.com/users/nickbroon/orgs", "repos_url": "https://api.github.com/users/nickbroon/repos", "events_url": "https://api.github.com/users/nickbroon/events{/privacy}", "received_events_url": "https://api.github.com/users/nickbroon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-05T19:45:35Z", "updated_at": "2019-04-03T13:25:46Z", "closed_at": "2019-04-03T13:25:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some good bug fixes since the last release. Would be great to see a v0.11.0 release that could be packaged.\r\nhttps://github.com/jorisroovers/gitlint/compare/v0.10.0...master", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/84", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/84/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/84/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/84", "id": 413823942, "node_id": "MDU6SXNzdWU0MTM4MjM5NDI=", "number": 84, "title": "Is there a configuration template for validating against the conventionalcommits.org spec?", "user": {"login": "petemounce", "id": 69720, "node_id": "MDQ6VXNlcjY5NzIw", "avatar_url": "https://avatars2.githubusercontent.com/u/69720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petemounce", "html_url": "https://github.com/petemounce", "followers_url": "https://api.github.com/users/petemounce/followers", "following_url": "https://api.github.com/users/petemounce/following{/other_user}", "gists_url": "https://api.github.com/users/petemounce/gists{/gist_id}", "starred_url": "https://api.github.com/users/petemounce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petemounce/subscriptions", "organizations_url": "https://api.github.com/users/petemounce/orgs", "repos_url": "https://api.github.com/users/petemounce/repos", "events_url": "https://api.github.com/users/petemounce/events{/privacy}", "received_events_url": "https://api.github.com/users/petemounce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 810139459, "node_id": "MDU6TGFiZWw4MTAxMzk0NTk=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/suggestion", "name": "suggestion", "color": "cc99e8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-02-24T13:48:22Z", "updated_at": "2019-07-08T14:50:24Z", "closed_at": "2019-07-08T14:50:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just came across gitlint via searching for a golang implementation of https://conventional-changelog.github.io/commitlint/#/, which validates against the https://www.conventionalcommits.org/en/v1.0.0-beta.3/ spec.\r\n\r\nIt looks like gitlint is pretty configurable; I was wondering whether anyone had created a `.gitlint` config that made it validate against the CC spec? If not - would one be welcome?\r\n\r\n(I'd prefer to use a golang based tool, personally, since the environment is simpler to deploy and maintain for engineers - copy a binary, run it, vs maintain a node and npm setup.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/83", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/83/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/83/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/83", "id": 413584081, "node_id": "MDU6SXNzdWU0MTM1ODQwODE=", "number": 83, "title": "Fail on the presence of fixups", "user": {"login": "dmtucker", "id": 1817814, "node_id": "MDQ6VXNlcjE4MTc4MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1817814?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmtucker", "html_url": "https://github.com/dmtucker", "followers_url": "https://api.github.com/users/dmtucker/followers", "following_url": "https://api.github.com/users/dmtucker/following{/other_user}", "gists_url": "https://api.github.com/users/dmtucker/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmtucker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmtucker/subscriptions", "organizations_url": "https://api.github.com/users/dmtucker/orgs", "repos_url": "https://api.github.com/users/dmtucker/repos", "events_url": "https://api.github.com/users/dmtucker/events{/privacy}", "received_events_url": "https://api.github.com/users/dmtucker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-22T21:21:57Z", "updated_at": "2019-02-22T21:36:22Z", "closed_at": "2019-02-22T21:36:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use fixup/squash commits during PRs, and they should always be squashed before merging. It's not uncommon to forget to do that and end up with fixups in the permanent history, though. Setting `general.ignore-fixup-commits=false` is not adequate for preventing the _presence_ of fixups before merge because `gitlint` will still pass if they meet all commit criteria. I would like to request a way to have `gitlint` fail if even well-formed fixup/squash/other WIP/TODO commits are detected (if there isn't already a way to do that).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/78", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/78/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/78/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/78", "id": 367468381, "node_id": "MDU6SXNzdWUzNjc0NjgzODE=", "number": 78, "title": "test_target fails", "user": {"login": "rico-chet", "id": 6575551, "node_id": "MDQ6VXNlcjY1NzU1NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6575551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rico-chet", "html_url": "https://github.com/rico-chet", "followers_url": "https://api.github.com/users/rico-chet/followers", "following_url": "https://api.github.com/users/rico-chet/following{/other_user}", "gists_url": "https://api.github.com/users/rico-chet/gists{/gist_id}", "starred_url": "https://api.github.com/users/rico-chet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rico-chet/subscriptions", "organizations_url": "https://api.github.com/users/rico-chet/orgs", "repos_url": "https://api.github.com/users/rico-chet/repos", "events_url": "https://api.github.com/users/rico-chet/events{/privacy}", "received_events_url": "https://api.github.com/users/rico-chet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-10-06T15:39:23Z", "updated_at": "2019-03-13T12:13:08Z", "closed_at": "2019-03-13T12:13:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a current `git` version, the `test_target` fails. Obviously, its check for specific `git` error string is too strict.\r\n```\r\nuser@debian-sid:~$ git --version\r\ngit version 2.19.0\r\nuser@debian-sid:~$ cd gitlint\r\nuser@debian-sid:~/gitlint$ git describe --tags\r\nv0.10.0-3-gc9db6a0\r\nuser@debian-sid:~/gitlint$ git status --ignored\r\nOn branch master\r\nYour branch is up to date with 'origin/master'.\r\n\r\nnothing to commit, working tree clean\r\nuser@debian-sid:~/gitlint$ virtualenv --quiet .venv\r\nuser@debian-sid:~/gitlint$ source .venv/bin/activate\r\n(.venv) user@debian-sid:~/gitlint$ pip install --quiet -r requirements.txt -r test-requirements.txt -r doc-requirements.txt\r\npython-coveralls 2.9.0 has requirement coverage==4.0.3, but you'll have coverage 3.7.1 which is incompatible.\r\n(.venv) user@debian-sid:~/gitlint$ python setup.py develop &>/dev/null && echo ok\r\nok\r\n(.venv) user@debian-sid:~/gitlint$ ./run_tests.sh\r\n### PYTHON (Python 3.6.7rc1, /home/user/gitlint/.venv/bin/python) ###\r\nCleaning the site, build, dist and all __pycache__directories...DONE\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.6.7rc1, pytest-3.0.4, py-1.6.0, pluggy-0.4.0\r\nrootdir: /home/user/gitlint, inifile: \r\ncollected 115 items \r\n\r\ngitlint/tests/test_cli.py ..................F.....\r\ngitlint/tests/test_display.py ..\r\ngitlint/tests/test_git.py ...............\r\ngitlint/tests/test_hooks.py .....\r\ngitlint/tests/test_lint.py ..........\r\ngitlint/tests/test_options.py ......\r\ngitlint/tests/config/test_config.py .........\r\ngitlint/tests/config/test_config_builder.py .........\r\ngitlint/tests/config/test_config_precedence.py ...\r\ngitlint/tests/rules/test_body_rules.py ........\r\ngitlint/tests/rules/test_configuration_rules.py ..\r\ngitlint/tests/rules/test_meta_rules.py ..\r\ngitlint/tests/rules/test_title_rules.py .......\r\ngitlint/tests/rules/test_user_rules.py .............\r\n\r\n==================================================================================================== FAILURES =====================================================================================================\r\n______________________________________________________________________________________________ CLITests.test_target _______________________________________________________________________________________________\r\n\r\nself = <gitlint.tests.test_cli.CLITests testMethod=test_target>, _ = <MagicMock name='get_stdin_data' id='140452389588216'>\r\n\r\n    @patch('gitlint.cli.get_stdin_data', return_value=False)\r\n    def test_target(self, _):\r\n        \"\"\" Test for the --target option \"\"\"\r\n        os.environ[\"LANGUAGE\"] = \"C\"\r\n        result = self.cli.invoke(cli.cli, [\"--target\", \"/tmp\"])\r\n        # We expect gitlint to tell us that /tmp is not a git repo (this proves that it takes the target parameter\r\n        # into account).\r\n        self.assertEqual(result.exit_code, self.GIT_CONTEXT_ERROR_CODE)\r\n        expected_path = os.path.realpath(\"/tmp\")\r\n>       self.assertEqual(result.output, \"%s is not a git repository.\\n\" % expected_path)\r\nE       AssertionError: \"An error occurred while executing '/usr/[98 chars]t'\\n\" != '/tmp is not a git repository.\\n'\r\nE       - An error occurred while executing '/usr/bin/git log -1 --pretty=%H': b'fatal: not a git repository (or any of the parent directories)\t: .git'\r\nE       + /tmp is not a git repository.\r\n\r\ngitlint/tests/test_cli.py:359: AssertionError\r\n====================================================================================== 1 failed, 114 passed in 1.14 seconds =======================================================================================\r\nName                 Stmts   Miss  Cover   Missing\r\n--------------------------------------------------\r\ngitlint/__init__         1      0   100%   \r\ngitlint/cli            168     10    94%   20-22, 66, 117-125\r\ngitlint/config         203      0   100%   \r\ngitlint/display         27      2    93%   10-11\r\ngitlint/git            103      0   100%   \r\ngitlint/hooks           35      0   100%   \r\ngitlint/lint            62      0   100%   \r\ngitlint/options         68      0   100%   \r\ngitlint/rules          228      0   100%   \r\ngitlint/user_rules      60      0   100%   \r\ngitlint/utils           11      1    91%   21\r\n--------------------------------------------------\r\nTOTAL                  966     13    99%   \r\n\r\n### OVERALL STATUS: FAILURE ###\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/77", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/77/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/77/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/77", "id": 365456978, "node_id": "MDU6SXNzdWUzNjU0NTY5Nzg=", "number": 77, "title": "Intermittent test failures make development difficult", "user": {"login": "pbregener", "id": 6407709, "node_id": "MDQ6VXNlcjY0MDc3MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6407709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbregener", "html_url": "https://github.com/pbregener", "followers_url": "https://api.github.com/users/pbregener/followers", "following_url": "https://api.github.com/users/pbregener/following{/other_user}", "gists_url": "https://api.github.com/users/pbregener/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbregener/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbregener/subscriptions", "organizations_url": "https://api.github.com/users/pbregener/orgs", "repos_url": "https://api.github.com/users/pbregener/repos", "events_url": "https://api.github.com/users/pbregener/events{/privacy}", "received_events_url": "https://api.github.com/users/pbregener/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724556, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTY=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-01T13:17:43Z", "updated_at": "2018-11-07T10:46:43Z", "closed_at": "2018-11-07T10:46:43Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Adding features to `gitlint` (or improving existing ones) is unfortunately pretty difficult due to intermittently failing integration tests. This can also be seen in simple pull requests such as #73.\r\n\r\nI tried a few things in #76, but haven't been able to fix it so far.\r\n\r\nMy feeling is that it is related to unicode string handling, possibly also in connection with an outdated version of `sh` that returns the strings that are compared to the reference result. The [sh changelog](https://github.com/amoffat/sh/blob/master/CHANGELOG.md) shows quite a few unicode-related bugs being fixed in versions newer than the one currently used by `gitlint`. Those newer versions appear to be incompatible with `gitlint` today, so simply updating the dependency is not enough.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/75", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/75/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/75/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/75", "id": 361799608, "node_id": "MDU6SXNzdWUzNjE3OTk2MDg=", "number": 75, "title": "Gitlint looks at changed files when installed through pre-commit", "user": {"login": "pzelnip", "id": 414933, "node_id": "MDQ6VXNlcjQxNDkzMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/414933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pzelnip", "html_url": "https://github.com/pzelnip", "followers_url": "https://api.github.com/users/pzelnip/followers", "following_url": "https://api.github.com/users/pzelnip/following{/other_user}", "gists_url": "https://api.github.com/users/pzelnip/gists{/gist_id}", "starred_url": "https://api.github.com/users/pzelnip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pzelnip/subscriptions", "organizations_url": "https://api.github.com/users/pzelnip/orgs", "repos_url": "https://api.github.com/users/pzelnip/repos", "events_url": "https://api.github.com/users/pzelnip/events{/privacy}", "received_events_url": "https://api.github.com/users/pzelnip/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-19T15:18:58Z", "updated_at": "2018-09-28T16:59:18Z", "closed_at": "2018-09-25T13:56:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Following the [docs](https://jorisroovers.github.io/gitlint/#using-gitlint-through-pre-commit), in my .pre-commit-config.yaml I have:\r\n\r\n```\r\n-   repo: https://github.com/jorisroovers/gitlint\r\n    rev:  master\r\n    hooks:\r\n    -   id: gitlint\r\n```\r\nUpon doing a ```git commit -a``` I get: \r\n\r\n```\r\n \u03bb git commit -a\r\n[INFO] Initializing environment for https://github.com/jorisroovers/gitlint.\r\n[INFO] Installing environment for https://github.com/jorisroovers/gitlint.\r\n[INFO] Once installed this environment will be reused.\r\n[INFO] This may take a few minutes...\r\nblack....................................................................Passed\r\ngitlint..................................................................Failed\r\nhookid: gitlint\r\n\r\n2: B4 Second line is not empty: \"from unittest.mock import patch\"\r\n... many more lines ...\r\n```\r\nThat line is from the source file I changed as part of the commit, rather than the commit message (in fact I'm never dropped into an editor to create a commit message).\r\n\r\nWhat am I missing in the config?  I don't want gitlint to run over the code that's changed in the commit, but rather my commit message.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/70", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/70/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/70/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/70", "id": 340278805, "node_id": "MDU6SXNzdWUzNDAyNzg4MDU=", "number": 70, "title": "Pre-commit hook does not work when using git templates", "user": {"login": "cthogg", "id": 19980269, "node_id": "MDQ6VXNlcjE5OTgwMjY5", "avatar_url": "https://avatars1.githubusercontent.com/u/19980269?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cthogg", "html_url": "https://github.com/cthogg", "followers_url": "https://api.github.com/users/cthogg/followers", "following_url": "https://api.github.com/users/cthogg/following{/other_user}", "gists_url": "https://api.github.com/users/cthogg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cthogg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cthogg/subscriptions", "organizations_url": "https://api.github.com/users/cthogg/orgs", "repos_url": "https://api.github.com/users/cthogg/repos", "events_url": "https://api.github.com/users/cthogg/events{/privacy}", "received_events_url": "https://api.github.com/users/cthogg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-07-11T14:53:33Z", "updated_at": "2019-06-19T13:52:14Z", "closed_at": "2019-06-19T10:14:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a template, gitlint lints over the whole template and not only the commit message.\r\n\r\n**Proposed fix**: Filter out all lines in the template by ignoring all lines beginning with # and coming after ---- >8 ---- \r\n\r\nin: `gitlint/files/commit-msg`\r\n\r\nreplacing:\r\n\r\n```\r\nrun_gitlint(){\r\n   echo \"gitlint: checking commit message...\"\r\n   python -m gitlint.cli --msg-filename \"$1\"\r\n   gitlint_exit_code=$?\r\n}\r\n\r\n```\r\nwith:\r\n```\r\nrun_gitlint(){\r\n   echo \"gitlint: checking commit message...\"\r\n   sed -n '/---- >8 ----/q;p' .git/COMMIT_EDITMSG | egrep -v '(^#)' | gitlint\r\n   gitlint_exit_code=$?\r\n}\r\n```\r\n\r\nseems to work with the following `.gitlint` file:\r\n\r\n\r\n```\r\n# All these sections are optional, edit this file as you like.\r\n[general]\r\nignore=title-trailing-punctuation, T3, title-max-length, T1, body-hard-tab, B3, B1\r\n# verbosity should be a value between 1 and 3, the commandline -v flags take precedence over this\r\nverbosity = 3\r\n# By default gitlint will ignore merge commits. Set to 'false' to disable.\r\nignore-merge-commits=true\r\n# Enable debug mode (prints more output). Disabled by default\r\ndebug = false\r\n\r\n# Set the extra-path where gitlint will search for user defined rules\r\n# See http://jorisroovers.github.io/gitlint/user_defined_rules for details\r\n\r\n[title-max-length]\r\nline-length=50\r\n\r\n[title-must-not-contain-word]\r\n# Comma-separated list of words that should not occur in the title. Matching is case\r\n# insensitive. It's fine if the keyword occurs as part of a larger word (so \"WIPING\"\r\n# will not cause a violation, but \"WIP: my title\" will.\r\nwords=wip\r\n\r\n[title-match-regex]\r\n# python like regex (https://docs.python.org/2/library/re.html) that the\r\n# commit-msg title must be matched to.\r\n# Note that the regex can contradict with other rules if not used correctly\r\n# (e.g. title-must-not-contain-word).\r\n# Implement title matching according to document \"Commit Message Format\" in\r\n# Google Drive\r\nregex=^((feat|fix|refactor|chore|docs|style|test):)(\\s([^:]+):)?(\\s+)(.+)$\r\n\r\n[body-max-line-length]\r\n# B1 = body-max-line-length\r\nline-length=72\r\n\r\n[body-min-length]\r\nmin-length=20\r\n\r\n[body-is-missing]\r\n# Whether to ignore this rule on merge commits (which typically only have a title)\r\n# default = True\r\nignore-merge-commits=false\r\n\r\n[body-changed-file-mention]\r\n# List of files that need to be explicitly mentioned in the body when they are changed\r\n# This is useful for when developers often erroneously edit certain files or git submodules.\r\n# By specifying this rule, developers can only change the file when they explicitly reference\r\n# it in the commit message.\r\n#files=gitlint/rules.py,README.md\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/68", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/68/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/68/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/68", "id": 334315066, "node_id": "MDU6SXNzdWUzMzQzMTUwNjY=", "number": 68, "title": "Can't use install-hooks in with git worktree", "user": {"login": "jpulec", "id": 407780, "node_id": "MDQ6VXNlcjQwNzc4MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/407780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpulec", "html_url": "https://github.com/jpulec", "followers_url": "https://api.github.com/users/jpulec/followers", "following_url": "https://api.github.com/users/jpulec/following{/other_user}", "gists_url": "https://api.github.com/users/jpulec/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpulec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpulec/subscriptions", "organizations_url": "https://api.github.com/users/jpulec/orgs", "repos_url": "https://api.github.com/users/jpulec/repos", "events_url": "https://api.github.com/users/jpulec/events{/privacy}", "received_events_url": "https://api.github.com/users/jpulec/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724558, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTg=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-21T02:30:01Z", "updated_at": "2019-06-19T16:38:37Z", "closed_at": "2019-06-19T16:38:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Because of https://github.com/jorisroovers/gitlint/blob/master/gitlint/hooks.py#L7 being hard-coded as `.git/hooks`, the `install-hooks` command doesn't seem to work when using git worktrees. Worktrees keep all of their hooks in the main repository folder.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/67", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/67/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/67/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/67", "id": 330613048, "node_id": "MDU6SXNzdWUzMzA2MTMwNDg=", "number": 67, "title": "work with pre-commit", "user": {"login": "xsteadfastx", "id": 168397, "node_id": "MDQ6VXNlcjE2ODM5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/168397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xsteadfastx", "html_url": "https://github.com/xsteadfastx", "followers_url": "https://api.github.com/users/xsteadfastx/followers", "following_url": "https://api.github.com/users/xsteadfastx/following{/other_user}", "gists_url": "https://api.github.com/users/xsteadfastx/gists{/gist_id}", "starred_url": "https://api.github.com/users/xsteadfastx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xsteadfastx/subscriptions", "organizations_url": "https://api.github.com/users/xsteadfastx/orgs", "repos_url": "https://api.github.com/users/xsteadfastx/repos", "events_url": "https://api.github.com/users/xsteadfastx/events{/privacy}", "received_events_url": "https://api.github.com/users/xsteadfastx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-08T10:55:59Z", "updated_at": "2018-08-21T18:22:33Z", "closed_at": "2018-08-21T18:22:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "i really like the gitlint program and i would love to use it in my pre-commit chain. i configured it like in the docs. i just dont get it how it works. how can it check the commit message if its tested pre-commit? do i need to add the commit message to a txt file? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/60", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/60/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/60/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/60", "id": 309598286, "node_id": "MDU6SXNzdWUzMDk1OTgyODY=", "number": 60, "title": "./run_tests.sh --git fails", "user": {"login": "gaul", "id": 848247, "node_id": "MDQ6VXNlcjg0ODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/848247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaul", "html_url": "https://github.com/gaul", "followers_url": "https://api.github.com/users/gaul/followers", "following_url": "https://api.github.com/users/gaul/following{/other_user}", "gists_url": "https://api.github.com/users/gaul/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaul/subscriptions", "organizations_url": "https://api.github.com/users/gaul/orgs", "repos_url": "https://api.github.com/users/gaul/repos", "events_url": "https://api.github.com/users/gaul/events{/privacy}", "received_events_url": "https://api.github.com/users/gaul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-29T02:39:40Z", "updated_at": "2018-03-29T02:42:23Z", "closed_at": "2018-03-29T02:42:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "```ShellSession\r\n$ ./run_tests.sh --git\r\n### PYTHON (Python 2.7.12, /usr/bin/python) ###\r\nRunning gitlint...FAIL\r\n3: B1 Line exceeds max length (102>80): \"As soon as _git function returns string if it was executed (not sh.RunningCommand) **get_commentchar**\"\r\n\r\n### OVERALL STATUS: FAILURE ###\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/59", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/59/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/59/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/59", "id": 303068257, "node_id": "MDU6SXNzdWUzMDMwNjgyNTc=", "number": 59, "title": "gitlint failed with configured commentchar", "user": {"login": "DronMDF", "id": 2982959, "node_id": "MDQ6VXNlcjI5ODI5NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/2982959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DronMDF", "html_url": "https://github.com/DronMDF", "followers_url": "https://api.github.com/users/DronMDF/followers", "following_url": "https://api.github.com/users/DronMDF/following{/other_user}", "gists_url": "https://api.github.com/users/DronMDF/gists{/gist_id}", "starred_url": "https://api.github.com/users/DronMDF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DronMDF/subscriptions", "organizations_url": "https://api.github.com/users/DronMDF/orgs", "repos_url": "https://api.github.com/users/DronMDF/repos", "events_url": "https://api.github.com/users/DronMDF/events{/privacy}", "received_events_url": "https://api.github.com/users/DronMDF/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724557, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTc=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-07T11:50:01Z", "updated_at": "2018-03-30T11:19:48Z", "closed_at": "2018-03-30T11:19:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ gitlint\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/gitlint\", line 7, in <module>\r\n    from gitlint.cli import cli\r\n  File \"/usr/local/lib/python3.6/dist-packages/gitlint/cli.py\", line 27, in <module>\r\n    from gitlint.git import GitContext, GitContextError, git_version\r\n  File \"/usr/local/lib/python3.6/dist-packages/gitlint/git.py\", line 59, in <module>\r\n    class GitCommitMessage(object):\r\n  File \"/usr/local/lib/python3.6/dist-packages/gitlint/git.py\", line 66, in GitCommitMessage\r\n    COMMENT_CHAR = git_commentchar()\r\n  File \"/usr/local/lib/python3.6/dist-packages/gitlint/git.py\", line 54, in git_commentchar\r\n    if commentchar.exit_code == 1:  # pylint: disable=no-member\r\nAttributeError: 'str' object has no attribute 'exit_code'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/56", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/56/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/56/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/56", "id": 298896814, "node_id": "MDU6SXNzdWUyOTg4OTY4MTQ=", "number": 56, "title": "Force using repo via command line option", "user": {"login": "pbregener", "id": 6407709, "node_id": "MDQ6VXNlcjY0MDc3MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6407709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pbregener", "html_url": "https://github.com/pbregener", "followers_url": "https://api.github.com/users/pbregener/followers", "following_url": "https://api.github.com/users/pbregener/following{/other_user}", "gists_url": "https://api.github.com/users/pbregener/gists{/gist_id}", "starred_url": "https://api.github.com/users/pbregener/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pbregener/subscriptions", "organizations_url": "https://api.github.com/users/pbregener/orgs", "repos_url": "https://api.github.com/users/pbregener/repos", "events_url": "https://api.github.com/users/pbregener/events{/privacy}", "received_events_url": "https://api.github.com/users/pbregener/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724558, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTg=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-02-21T09:30:52Z", "updated_at": "2019-07-08T10:17:31Z", "closed_at": "2019-07-08T10:17:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As discussed in #42 and #52, there seem to be problems with the automatic check for data passed in via STDIN and the fallback to using the local repo. As it appears hard to fix, and some of the proposed (and implemented) fixes only fix the problem for certain CI configurations, I would suggest to add a command line option `--use-repo` (and/or a config file flag) that forces the use of the local repo and ignores any data from STDIN. This would  make use in any CI environment and configuration (however proven or obscure that particular one might be) much easier and fool-proof.\r\n\r\nThis seems like a boring and simple solution to an apparent otherwise difficult-to-solve problem (see above linked issue).\r\n\r\nWhat do you think @jorisroovers?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/54", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/54/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/54/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/54", "id": 289989075, "node_id": "MDU6SXNzdWUyODk5ODkwNzU=", "number": 54, "title": "Ignoring commits based on rules", "user": {"login": "kiov", "id": 967660, "node_id": "MDQ6VXNlcjk2NzY2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/967660?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiov", "html_url": "https://github.com/kiov", "followers_url": "https://api.github.com/users/kiov/followers", "following_url": "https://api.github.com/users/kiov/following{/other_user}", "gists_url": "https://api.github.com/users/kiov/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiov/subscriptions", "organizations_url": "https://api.github.com/users/kiov/orgs", "repos_url": "https://api.github.com/users/kiov/repos", "events_url": "https://api.github.com/users/kiov/events{/privacy}", "received_events_url": "https://api.github.com/users/kiov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724558, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTg=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-19T14:15:35Z", "updated_at": "2018-04-02T08:48:54Z", "closed_at": "2018-04-02T08:48:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are plans to add some sort of rule based commit ignoring?\r\n\r\nWe are using [maven](https://maven.apache.org/) and the release precess add commits with messages like:\r\n\r\n    [maven-release-plugin] prepare for next development iteration\r\n\r\nOr\r\n\r\n    [maven-release-plugin] prepare release <tag>\r\n\r\nI can modify maven configuration to include a `gitlint-ignore: all` but thats really not the best solution IMO.\r\n\r\nThe idea was something in the line of author, title or body ignore rule, if the commit match that rule then is not processed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/51", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/51/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/51/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/51", "id": 289190477, "node_id": "MDU6SXNzdWUyODkxOTA0Nzc=", "number": 51, "title": "Debian packaging", "user": {"login": "RykHawthorn", "id": 2209986, "node_id": "MDQ6VXNlcjIyMDk5ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2209986?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RykHawthorn", "html_url": "https://github.com/RykHawthorn", "followers_url": "https://api.github.com/users/RykHawthorn/followers", "following_url": "https://api.github.com/users/RykHawthorn/following{/other_user}", "gists_url": "https://api.github.com/users/RykHawthorn/gists{/gist_id}", "starred_url": "https://api.github.com/users/RykHawthorn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RykHawthorn/subscriptions", "organizations_url": "https://api.github.com/users/RykHawthorn/orgs", "repos_url": "https://api.github.com/users/RykHawthorn/repos", "events_url": "https://api.github.com/users/RykHawthorn/events{/privacy}", "received_events_url": "https://api.github.com/users/RykHawthorn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-01-17T09:10:26Z", "updated_at": "2020-03-06T14:52:46Z", "closed_at": "2020-03-06T14:52:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nas explained in the pull request #49 we would like to package gitlint for Debian.\r\n\r\nHere is the related \"intend to package\" (ITP) bug: https://bugs.debian.org/886864\r\n\r\nThe package was uploaded by @bdrung to the Debian NEW queue:\r\nhttps://ftp-master.debian.org/new.html (search for gitlint)\r\nOr use: https://ftp-master.debian.org/new/gitlint_0.9.0-1.html\r\n\r\n@jorisroovers I would like to use this ticket for a conversation regarding the Debian packaging.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/42", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/42/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/42/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/42", "id": 278083583, "node_id": "MDU6SXNzdWUyNzgwODM1ODM=", "number": 42, "title": "Problem with Jenkins CI due to \"sys.stdin.isatty\" check", "user": {"login": "omarkohl", "id": 1420656, "node_id": "MDQ6VXNlcjE0MjA2NTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1420656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omarkohl", "html_url": "https://github.com/omarkohl", "followers_url": "https://api.github.com/users/omarkohl/followers", "following_url": "https://api.github.com/users/omarkohl/following{/other_user}", "gists_url": "https://api.github.com/users/omarkohl/gists{/gist_id}", "starred_url": "https://api.github.com/users/omarkohl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omarkohl/subscriptions", "organizations_url": "https://api.github.com/users/omarkohl/orgs", "repos_url": "https://api.github.com/users/omarkohl/repos", "events_url": "https://api.github.com/users/omarkohl/events{/privacy}", "received_events_url": "https://api.github.com/users/omarkohl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724556, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTY=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-11-30T11:15:22Z", "updated_at": "2018-04-06T20:11:15Z", "closed_at": "2018-04-06T20:11:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using gitlint on Jenkins it doesn't work as it does locally simply by executing \"gitlint\" to check the latest commit.\r\n\r\n```\r\ngitlint\r\n```\r\n\r\nSince on Jenkins there is not tty present the command simply fails with several cryptical warnings (probably because stdin is empty). When using the `-d` option it tells me `DEBUG: gitlint.lint Linting commit [SHA UNKNOWN]` which was even more confusing.\r\n\r\nAfter reading the code and re-reading the documentation I ended up sucessfully using this:\r\n\r\n```\r\ngit log -1 --pretty=%B | gitlint\r\n```\r\n\r\nThis is a little cumbersome and it seems unecessary to base the decision whether to perform `GitContext.from_local_repository` depending on if there is a TTY present or not.\r\n\r\nSuggestions:\r\n\r\n* Always use `from_local_repository` if there is a local repository AND (stdin is empty OR not tty). Use stdin in other cases.\r\n* Alternatively or additionally document this more clearly. Maybe a doc section on how to use gitlint with CI tools.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/41", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/41/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/41/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/41", "id": 277112593, "node_id": "MDU6SXNzdWUyNzcxMTI1OTM=", "number": 41, "title": "Release new version to PyPI", "user": {"login": "srstevenson", "id": 5845679, "node_id": "MDQ6VXNlcjU4NDU2Nzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5845679?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srstevenson", "html_url": "https://github.com/srstevenson", "followers_url": "https://api.github.com/users/srstevenson/followers", "following_url": "https://api.github.com/users/srstevenson/following{/other_user}", "gists_url": "https://api.github.com/users/srstevenson/gists{/gist_id}", "starred_url": "https://api.github.com/users/srstevenson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srstevenson/subscriptions", "organizations_url": "https://api.github.com/users/srstevenson/orgs", "repos_url": "https://api.github.com/users/srstevenson/repos", "events_url": "https://api.github.com/users/srstevenson/events{/privacy}", "received_events_url": "https://api.github.com/users/srstevenson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724561, "node_id": "MDU6TGFiZWwyNTU3MjQ1NjE=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-27T17:59:45Z", "updated_at": "2017-12-03T20:49:06Z", "closed_at": "2017-12-03T18:19:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for writing gitlint @jorisroovers, it's really helpful! Are there any blockers to releasing 0.9.0 to PyPI? I have `commit.verbose = true` set in my global Git configuration, so it would be great to have a new release that includes the changes merged in #34.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/40", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/40/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/40/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/40", "id": 274504391, "node_id": "MDU6SXNzdWUyNzQ1MDQzOTE=", "number": 40, "title": "gitlint </dev/null \"fails\" (as not sys.stdin.isatty())", "user": {"login": "domo141", "id": 2246574, "node_id": "MDQ6VXNlcjIyNDY1NzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2246574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domo141", "html_url": "https://github.com/domo141", "followers_url": "https://api.github.com/users/domo141/followers", "following_url": "https://api.github.com/users/domo141/following{/other_user}", "gists_url": "https://api.github.com/users/domo141/gists{/gist_id}", "starred_url": "https://api.github.com/users/domo141/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domo141/subscriptions", "organizations_url": "https://api.github.com/users/domo141/orgs", "repos_url": "https://api.github.com/users/domo141/repos", "events_url": "https://api.github.com/users/domo141/events{/privacy}", "received_events_url": "https://api.github.com/users/domo141/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724558, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTg=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-16T12:49:14Z", "updated_at": "2017-12-03T13:05:43Z", "closed_at": "2017-12-03T13:05:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ gitlint\r\n\r\n$ gitlint </dev/null\r\n1: UC2 Body does not contain a 'Signed-Off-By' line\r\n1: UC3 Title does not follow <subsystem>: <subject>\r\n3: B6 Body message is missing\r\n```\r\n\r\nThere are many cases (e.g. automated checks) where stdio is not attached to tty (and e.g. --commits is to be used), where it would be nice that this worked; current workaround is `script -ec 'gitlint'` (works when linux script(1) is new enough to know -e option).\r\n\r\nLooks like current HEAD (b054219ef6) has some changes which shows where this problem occurs, it looks these changes do not fix this issue.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/38", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/38/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/38/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/38", "id": 257669212, "node_id": "MDU6SXNzdWUyNTc2NjkyMTI=", "number": 38, "title": "Usage with `pre-commit`", "user": {"login": "sobolevn", "id": 4660275, "node_id": "MDQ6VXNlcjQ2NjAyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4660275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sobolevn", "html_url": "https://github.com/sobolevn", "followers_url": "https://api.github.com/users/sobolevn/followers", "following_url": "https://api.github.com/users/sobolevn/following{/other_user}", "gists_url": "https://api.github.com/users/sobolevn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sobolevn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sobolevn/subscriptions", "organizations_url": "https://api.github.com/users/sobolevn/orgs", "repos_url": "https://api.github.com/users/sobolevn/repos", "events_url": "https://api.github.com/users/sobolevn/events{/privacy}", "received_events_url": "https://api.github.com/users/sobolevn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724561, "node_id": "MDU6TGFiZWwyNTU3MjQ1NjE=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-09-14T10:24:37Z", "updated_at": "2018-03-29T17:10:25Z", "closed_at": "2018-03-29T17:10:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, thanks for this package!\r\n\r\nI have a question: what is the best way to integrate this library with http://pre-commit.com/ ?\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/36", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/36/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/36/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/36", "id": 253620685, "node_id": "MDU6SXNzdWUyNTM2MjA2ODU=", "number": 36, "title": "Cannot install gitlint vai pip", "user": {"login": "sakonachhoeurng", "id": 12217854, "node_id": "MDQ6VXNlcjEyMjE3ODU0", "avatar_url": "https://avatars1.githubusercontent.com/u/12217854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sakonachhoeurng", "html_url": "https://github.com/sakonachhoeurng", "followers_url": "https://api.github.com/users/sakonachhoeurng/followers", "following_url": "https://api.github.com/users/sakonachhoeurng/following{/other_user}", "gists_url": "https://api.github.com/users/sakonachhoeurng/gists{/gist_id}", "starred_url": "https://api.github.com/users/sakonachhoeurng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sakonachhoeurng/subscriptions", "organizations_url": "https://api.github.com/users/sakonachhoeurng/orgs", "repos_url": "https://api.github.com/users/sakonachhoeurng/repos", "events_url": "https://api.github.com/users/sakonachhoeurng/events{/privacy}", "received_events_url": "https://api.github.com/users/sakonachhoeurng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724561, "node_id": "MDU6TGFiZWwyNTU3MjQ1NjE=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-29T11:23:39Z", "updated_at": "2017-12-01T10:45:15Z", "closed_at": "2017-12-01T10:45:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am looking for your supporting.\r\nI have following error below:\r\nOS: Ubuntu 16.04\r\nPython version: 2.7.12\r\npip version: 9.0.1\r\n\r\nAfter I run `pip install gitlint` there are following error below relate to permission.\r\n\r\n```\r\nException:\r\nTraceback (most recent call last):\r\n  File \"/home/sakona/.local/lib/python2.7/site-packages/pip/basecommand.py\", line 215, in main\r\n    status = self.run(options, args)\r\n  File \"/home/sakona/.local/lib/python2.7/site-packages/pip/commands/install.py\", line 342, in run\r\n    prefix=options.prefix_path,\r\n  File \"/home/sakona/.local/lib/python2.7/site-packages/pip/req/req_set.py\", line 784, in install\r\n    **kwargs\r\n  File \"/home/sakona/.local/lib/python2.7/site-packages/pip/req/req_install.py\", line 851, in install\r\n    self.move_wheel_files(self.source_dir, root=root, prefix=prefix)\r\n  File \"/home/sakona/.local/lib/python2.7/site-packages/pip/req/req_install.py\", line 1064, in move_wheel_files\r\n    isolated=self.isolated,\r\n  File \"/home/sakona/.local/lib/python2.7/site-packages/pip/wheel.py\", line 345, in move_wheel_files\r\n    clobber(source, lib_dir, True)\r\n  File \"/home/sakona/.local/lib/python2.7/site-packages/pip/wheel.py\", line 323, in clobber\r\n    shutil.copyfile(srcfile, destfile)\r\n  File \"/usr/lib/python2.7/shutil.py\", line 83, in copyfile\r\n    with open(dst, 'wb') as fdst:\r\nIOError: [Errno 13] Permission denied: '/usr/local/lib/python2.7/dist-packages/sh.py'\r\n```\r\nThanks for your support and give suggestion.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/33", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/33/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/33/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/33", "id": 234123855, "node_id": "MDU6SXNzdWUyMzQxMjM4NTU=", "number": 33, "title": "fixup messages should not trigger a gitlint violation", "user": {"login": "nud", "id": 10519, "node_id": "MDQ6VXNlcjEwNTE5", "avatar_url": "https://avatars2.githubusercontent.com/u/10519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nud", "html_url": "https://github.com/nud", "followers_url": "https://api.github.com/users/nud/followers", "following_url": "https://api.github.com/users/nud/following{/other_user}", "gists_url": "https://api.github.com/users/nud/gists{/gist_id}", "starred_url": "https://api.github.com/users/nud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nud/subscriptions", "organizations_url": "https://api.github.com/users/nud/orgs", "repos_url": "https://api.github.com/users/nud/repos", "events_url": "https://api.github.com/users/nud/events{/privacy}", "received_events_url": "https://api.github.com/users/nud/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724556, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTY=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-07T07:59:37Z", "updated_at": "2017-12-15T10:20:11Z", "closed_at": "2017-12-03T13:45:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using `git commit --fixup=<commitid>`, some gitlint violations are triggered:\r\n\r\n```\r\n$ git commit -a --fixup=HEAD\r\ngitlint: checking commit message...\r\n3: B6 Body message is missing\r\n-----------------------------------------------\r\ngitlint: Your commit message contains the above violations.\r\nContinue with commit anyways (this keeps the current commit message)? [y(es)/n(no)/e(dit)] \r\n```\r\n\r\nProbably the B6 check should ignore commits whose title starts with `fixup!` ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/30", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/30/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/30/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/30", "id": 223991073, "node_id": "MDU6SXNzdWUyMjM5OTEwNzM=", "number": 30, "title": "`--commits` doesn't aggregate the return code", "user": {"login": "AlexMooney", "id": 8269566, "node_id": "MDQ6VXNlcjgyNjk1NjY=", "avatar_url": "https://avatars0.githubusercontent.com/u/8269566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexMooney", "html_url": "https://github.com/AlexMooney", "followers_url": "https://api.github.com/users/AlexMooney/followers", "following_url": "https://api.github.com/users/AlexMooney/following{/other_user}", "gists_url": "https://api.github.com/users/AlexMooney/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexMooney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexMooney/subscriptions", "organizations_url": "https://api.github.com/users/AlexMooney/orgs", "repos_url": "https://api.github.com/users/AlexMooney/repos", "events_url": "https://api.github.com/users/AlexMooney/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexMooney/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724557, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTc=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-25T01:02:11Z", "updated_at": "2017-04-25T08:18:01Z", "closed_at": "2017-04-25T08:18:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running `gitlint --commits $REFS` where `$REFS` is a range of hashes, the program returns an exit status corresponding to the final commit in the range and ignores any earlier errors encountered.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/27", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/27/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/27/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/27", "id": 219549957, "node_id": "MDU6SXNzdWUyMTk1NDk5NTc=", "number": 27, "title": "--commits doesn't return the correct exit code", "user": {"login": "jorisroovers", "id": 575086, "node_id": "MDQ6VXNlcjU3NTA4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/575086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorisroovers", "html_url": "https://github.com/jorisroovers", "followers_url": "https://api.github.com/users/jorisroovers/followers", "following_url": "https://api.github.com/users/jorisroovers/following{/other_user}", "gists_url": "https://api.github.com/users/jorisroovers/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorisroovers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorisroovers/subscriptions", "organizations_url": "https://api.github.com/users/jorisroovers/orgs", "repos_url": "https://api.github.com/users/jorisroovers/repos", "events_url": "https://api.github.com/users/jorisroovers/events{/privacy}", "received_events_url": "https://api.github.com/users/jorisroovers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724556, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTY=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-05T11:20:00Z", "updated_at": "2017-04-05T13:04:07Z", "closed_at": "2017-04-05T13:04:07Z", "author_association": "OWNER", "active_lock_reason": null, "body": "The exit code of gitlint represents the number of found violations (up to 252) as documented here :  http://jorisroovers.github.io/gitlint/#exit-codes\r\n\r\nWhen linting multiple ```--commits```, gitlint returns the number of violations found in the last commit message, not e.g. the total count of violations in all linted messages. This is especially problematic in case there are no violations in the last linted commit message as gitlint will exit with an exit code of 0, even though violations might have been found in other commits. This breaks CI scripts depending on the exit code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/26", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/26/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/26/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/26", "id": 219320285, "node_id": "MDU6SXNzdWUyMTkzMjAyODU=", "number": 26, "title": "Ability to specify user rules as a file instead of directory", "user": {"login": "tommyip", "id": 18504232, "node_id": "MDQ6VXNlcjE4NTA0MjMy", "avatar_url": "https://avatars3.githubusercontent.com/u/18504232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommyip", "html_url": "https://github.com/tommyip", "followers_url": "https://api.github.com/users/tommyip/followers", "following_url": "https://api.github.com/users/tommyip/following{/other_user}", "gists_url": "https://api.github.com/users/tommyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommyip/subscriptions", "organizations_url": "https://api.github.com/users/tommyip/orgs", "repos_url": "https://api.github.com/users/tommyip/repos", "events_url": "https://api.github.com/users/tommyip/events{/privacy}", "received_events_url": "https://api.github.com/users/tommyip/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724558, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTg=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-04-04T17:10:34Z", "updated_at": "2017-04-25T08:47:18Z", "closed_at": "2017-04-25T08:44:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently gitlint can only take a directory as argument for extra rules `gitlint --extra-path=<path>`, would it make sense to also support only filenames?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/24", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/24/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/24/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/24", "id": 214031077, "node_id": "MDU6SXNzdWUyMTQwMzEwNzc=", "number": 24, "title": "--commits doesn't take commit specific config into account", "user": {"login": "jorisroovers", "id": 575086, "node_id": "MDQ6VXNlcjU3NTA4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/575086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorisroovers", "html_url": "https://github.com/jorisroovers", "followers_url": "https://api.github.com/users/jorisroovers/followers", "following_url": "https://api.github.com/users/jorisroovers/following{/other_user}", "gists_url": "https://api.github.com/users/jorisroovers/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorisroovers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorisroovers/subscriptions", "organizations_url": "https://api.github.com/users/jorisroovers/orgs", "repos_url": "https://api.github.com/users/jorisroovers/repos", "events_url": "https://api.github.com/users/jorisroovers/events{/privacy}", "received_events_url": "https://api.github.com/users/jorisroovers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724556, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTY=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-14T10:41:01Z", "updated_at": "2017-04-06T11:01:33Z", "closed_at": "2017-04-06T11:01:33Z", "author_association": "OWNER", "active_lock_reason": null, "body": "We currently only apply the commit-specific config of the last commit, not of every commit in the specified range. The following code block needs to be moved to the for-loop below it:\r\nhttps://github.com/jorisroovers/gitlint/blob/master/gitlint/cli.py#L127-L131\r\n\r\nCC: @tommyip ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/23", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/23/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/23/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/23", "id": 214014088, "node_id": "MDU6SXNzdWUyMTQwMTQwODg=", "number": 23, "title": "--commits doesn't correctly handle refspec", "user": {"login": "jorisroovers", "id": 575086, "node_id": "MDQ6VXNlcjU3NTA4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/575086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorisroovers", "html_url": "https://github.com/jorisroovers", "followers_url": "https://api.github.com/users/jorisroovers/followers", "following_url": "https://api.github.com/users/jorisroovers/following{/other_user}", "gists_url": "https://api.github.com/users/jorisroovers/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorisroovers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorisroovers/subscriptions", "organizations_url": "https://api.github.com/users/jorisroovers/orgs", "repos_url": "https://api.github.com/users/jorisroovers/repos", "events_url": "https://api.github.com/users/jorisroovers/events{/privacy}", "received_events_url": "https://api.github.com/users/jorisroovers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724556, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTY=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-14T09:35:45Z", "updated_at": "2017-07-14T22:07:28Z", "closed_at": "2017-07-14T22:07:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "For example, ```gitlint --commits HEAD~2``` isn't correctly handled: it only lints the first commit in that range instead of all. This is because we are checking for the presence of dots in the refspec and if not present, add an additional```--max-count``` argument when invoking git, see here: https://github.com/jorisroovers/gitlint/blob/master/gitlint/git.py#L127-L131\r\n\r\nI think instead we will most likely have to add an additional check for the number of commits in the repository to correctly handle the refspec format.\r\n\r\nCC: @tommyip ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/22", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/22/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/22/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/22", "id": 213838664, "node_id": "MDU6SXNzdWUyMTM4Mzg2NjQ=", "number": 22, "title": "--commits option does not handle 0 commits case.", "user": {"login": "tommyip", "id": 18504232, "node_id": "MDQ6VXNlcjE4NTA0MjMy", "avatar_url": "https://avatars3.githubusercontent.com/u/18504232?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tommyip", "html_url": "https://github.com/tommyip", "followers_url": "https://api.github.com/users/tommyip/followers", "following_url": "https://api.github.com/users/tommyip/following{/other_user}", "gists_url": "https://api.github.com/users/tommyip/gists{/gist_id}", "starred_url": "https://api.github.com/users/tommyip/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tommyip/subscriptions", "organizations_url": "https://api.github.com/users/tommyip/orgs", "repos_url": "https://api.github.com/users/tommyip/repos", "events_url": "https://api.github.com/users/tommyip/events{/privacy}", "received_events_url": "https://api.github.com/users/tommyip/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724556, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTY=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-13T17:22:37Z", "updated_at": "2017-03-16T07:19:14Z", "closed_at": "2017-03-16T07:19:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "### Command\r\n```\r\n$ gitlint --commits upstream/master...HEAD\r\n```\r\nwhere `upstream/master` and `HEAD` is the same commit.\r\n\r\n### Error\r\n```\r\n...\r\n...\r\nFile \"/home/tommy/Documents/gitlint/gitlint/cli.py\", line 114, in lint\r\n    last_commit = gitcontext.commits[-1]\r\nIndexError: list index out of range\r\n```\r\n\r\n### Solution\r\nEither just tell the user there is no commit in the range or lint the HEAD commit. I prefer the second option but some user might find that inconsistent with how Git's range work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/19", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/19/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/19/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/19", "id": 194873057, "node_id": "MDU6SXNzdWUxOTQ4NzMwNTc=", "number": 19, "title": "server-side support?", "user": {"login": "aspiers", "id": 100738, "node_id": "MDQ6VXNlcjEwMDczOA==", "avatar_url": "https://avatars0.githubusercontent.com/u/100738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aspiers", "html_url": "https://github.com/aspiers", "followers_url": "https://api.github.com/users/aspiers/followers", "following_url": "https://api.github.com/users/aspiers/following{/other_user}", "gists_url": "https://api.github.com/users/aspiers/gists{/gist_id}", "starred_url": "https://api.github.com/users/aspiers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aspiers/subscriptions", "organizations_url": "https://api.github.com/users/aspiers/orgs", "repos_url": "https://api.github.com/users/aspiers/repos", "events_url": "https://api.github.com/users/aspiers/events{/privacy}", "received_events_url": "https://api.github.com/users/aspiers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-12T01:28:07Z", "updated_at": "2016-12-13T00:57:39Z", "closed_at": "2016-12-13T00:53:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's great having client-side validation, but let's face it some developers will simply forget or be too lazy to set it up, and then they'll submit bad commits for review regardless.  So ideally there should be a way to enforce validation server-side.  Of course the implementation depends on the server in question, but GitHub might be a good place to start.  For example might it be possible to create a GitHub third-party service which runs gitlint server-side whenever a PR is submitted / updated, and then updates a status check on the PR accordingly?\r\n\r\nSee also [codeclimate/spec#45 (allow analysis of commit messages)](https://github.com/codeclimate/spec/issues/45)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/17", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/17/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/17/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/17", "id": 179179558, "node_id": "MDU6SXNzdWUxNzkxNzk1NTg=", "number": 17, "title": "Body MinLength is not working properly", "user": {"login": "gernd", "id": 1497059, "node_id": "MDQ6VXNlcjE0OTcwNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1497059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gernd", "html_url": "https://github.com/gernd", "followers_url": "https://api.github.com/users/gernd/followers", "following_url": "https://api.github.com/users/gernd/following{/other_user}", "gists_url": "https://api.github.com/users/gernd/gists{/gist_id}", "starred_url": "https://api.github.com/users/gernd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gernd/subscriptions", "organizations_url": "https://api.github.com/users/gernd/orgs", "repos_url": "https://api.github.com/users/gernd/repos", "events_url": "https://api.github.com/users/gernd/events{/privacy}", "received_events_url": "https://api.github.com/users/gernd/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724556, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTY=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-26T09:28:27Z", "updated_at": "2016-12-24T10:25:20Z", "closed_at": "2016-12-21T09:58:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have configured body length in the following way:\n\n[body-min-length]  \nmin-length=5            \n\nWhen I test gitlint with a commit message that is exactly 5 characters, I get the following validation error:\n\n3: B5 Body message is too short (5<5)\n\nShouldn't the commit be valid, if the body consists of exactly 5 characters?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/16", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/16/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/16/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/16", "id": 178454121, "node_id": "MDU6SXNzdWUxNzg0NTQxMjE=", "number": 16, "title": "MaxLineLength should count characters instead of bytes", "user": {"login": "Claymore", "id": 61114, "node_id": "MDQ6VXNlcjYxMTE0", "avatar_url": "https://avatars3.githubusercontent.com/u/61114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Claymore", "html_url": "https://github.com/Claymore", "followers_url": "https://api.github.com/users/Claymore/followers", "following_url": "https://api.github.com/users/Claymore/following{/other_user}", "gists_url": "https://api.github.com/users/Claymore/gists{/gist_id}", "starred_url": "https://api.github.com/users/Claymore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Claymore/subscriptions", "organizations_url": "https://api.github.com/users/Claymore/orgs", "repos_url": "https://api.github.com/users/Claymore/repos", "events_url": "https://api.github.com/users/Claymore/events{/privacy}", "received_events_url": "https://api.github.com/users/Claymore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724556, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTY=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-09-21T20:28:21Z", "updated_at": "2016-12-30T18:02:52Z", "closed_at": "2016-12-30T18:02:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would love to use gitlint with commits in Russian but it counts line sizes in bytes instead of characters. Other programs count characters (vim-git and Gitlab, to name a few).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/15", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/15/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/15/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/15", "id": 169368203, "node_id": "MDU6SXNzdWUxNjkzNjgyMDM=", "number": 15, "title": "Integration tests not working on the correct python virtualenv in vagrant", "user": {"login": "jorisroovers", "id": 575086, "node_id": "MDQ6VXNlcjU3NTA4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/575086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorisroovers", "html_url": "https://github.com/jorisroovers", "followers_url": "https://api.github.com/users/jorisroovers/followers", "following_url": "https://api.github.com/users/jorisroovers/following{/other_user}", "gists_url": "https://api.github.com/users/jorisroovers/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorisroovers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorisroovers/subscriptions", "organizations_url": "https://api.github.com/users/jorisroovers/orgs", "repos_url": "https://api.github.com/users/jorisroovers/repos", "events_url": "https://api.github.com/users/jorisroovers/events{/privacy}", "received_events_url": "https://api.github.com/users/jorisroovers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724556, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTY=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-04T12:59:37Z", "updated_at": "2016-12-01T20:50:38Z", "closed_at": "2016-12-01T20:50:38Z", "author_association": "OWNER", "active_lock_reason": null, "body": "When running the integration tests in the vagrant box (`./run_tests_.sh -i`) from a virtualenv (e.g. `.venv27` on the vagrant box), the `qa/test_hooks.py` file will actually use the system-wide python installation. This is because the `commit-msg` hook shell script contains `python -m gitlint.cli` which won't use the currently active virtualenv.\n\nSee https://github.com/jorisroovers/gitlint/blob/ea698dd50fa74641bfeab7fcf4caad2c1df4416d/gitlint/files/commit-msg#L29\n\nThis should be fixed because now developers have the impression that the integration tests for the gitlint hooks are ran against all the python virtualenvs, while in reality they're only ran against the systemwide python installation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/14", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/14/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/14/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/14", "id": 162354541, "node_id": "MDU6SXNzdWUxNjIzNTQ1NDE=", "number": 14, "title": "Feature suggestion: Add support for running on all commits in a branch", "user": {"login": "timabbott", "id": 2746074, "node_id": "MDQ6VXNlcjI3NDYwNzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/2746074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timabbott", "html_url": "https://github.com/timabbott", "followers_url": "https://api.github.com/users/timabbott/followers", "following_url": "https://api.github.com/users/timabbott/following{/other_user}", "gists_url": "https://api.github.com/users/timabbott/gists{/gist_id}", "starred_url": "https://api.github.com/users/timabbott/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timabbott/subscriptions", "organizations_url": "https://api.github.com/users/timabbott/orgs", "repos_url": "https://api.github.com/users/timabbott/repos", "events_url": "https://api.github.com/users/timabbott/events{/privacy}", "received_events_url": "https://api.github.com/users/timabbott/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724558, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTg=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-06-26T23:51:36Z", "updated_at": "2017-03-12T08:49:06Z", "closed_at": "2017-03-12T08:49:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "One can in theory just pass each commit into gitlint in a shell loop or something, but since Python initialization is somewhat slow, it'd be significantly faster and cleaner if one could do e.g. `gitlint origin/master..HEAD` and have it lint all the commits in that series.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/11", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/11/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/11/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/11", "id": 148385460, "node_id": "MDU6SXNzdWUxNDgzODU0NjA=", "number": 11, "title": "Gitlint complains on merge commit titles exceeding the max title length by default", "user": {"login": "jorisroovers", "id": 575086, "node_id": "MDQ6VXNlcjU3NTA4Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/575086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorisroovers", "html_url": "https://github.com/jorisroovers", "followers_url": "https://api.github.com/users/jorisroovers/followers", "following_url": "https://api.github.com/users/jorisroovers/following{/other_user}", "gists_url": "https://api.github.com/users/jorisroovers/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorisroovers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorisroovers/subscriptions", "organizations_url": "https://api.github.com/users/jorisroovers/orgs", "repos_url": "https://api.github.com/users/jorisroovers/repos", "events_url": "https://api.github.com/users/jorisroovers/events{/privacy}", "received_events_url": "https://api.github.com/users/jorisroovers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-14T14:47:42Z", "updated_at": "2016-04-16T00:44:01Z", "closed_at": "2016-04-16T00:44:01Z", "author_association": "OWNER", "active_lock_reason": null, "body": "This occurred recently during a PR:\nhttps://github.com/jorisroovers/gitlint/pull/10\n\nTravis CI failure:\nhttps://travis-ci.org/jorisroovers/gitlint/jobs/123068718\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/9", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/9/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/9/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/9", "id": 127911117, "node_id": "MDU6SXNzdWUxMjc5MTExMTc=", "number": 9, "title": "Feature suggestion: print full commit msg to stdout if aborted", "user": {"login": "wturrell", "id": 848021, "node_id": "MDQ6VXNlcjg0ODAyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/848021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wturrell", "html_url": "https://github.com/wturrell", "followers_url": "https://api.github.com/users/wturrell/followers", "following_url": "https://api.github.com/users/wturrell/following{/other_user}", "gists_url": "https://api.github.com/users/wturrell/gists{/gist_id}", "starred_url": "https://api.github.com/users/wturrell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wturrell/subscriptions", "organizations_url": "https://api.github.com/users/wturrell/orgs", "repos_url": "https://api.github.com/users/wturrell/repos", "events_url": "https://api.github.com/users/wturrell/events{/privacy}", "received_events_url": "https://api.github.com/users/wturrell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724558, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTg=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-21T12:10:59Z", "updated_at": "2016-04-19T11:47:30Z", "closed_at": "2016-04-19T11:47:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Supposing I run `git commit` and write a longish message (e.g. a couple of paragraphs in the body) using my editor of choice. There's an error though, I've left a trailing period in the first line.\n\n`Continue with commit anyways (this keeps the current commit message)? [y/n]`\n\nIf I answer 'n' to that, next time I commit I've lost all my original text.  If someone chooses `n`, could you print the full message they entered underneath so they can copy and paste it back into the editor?\n\n(Unless you think the correct action is to commit anyway and then amend it.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/8", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/8/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/8/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/8", "id": 127910474, "node_id": "MDU6SXNzdWUxMjc5MTA0NzQ=", "number": 8, "title": ".git/hooks/commit-msg: 24: read: Illegal option -e", "user": {"login": "wturrell", "id": 848021, "node_id": "MDQ6VXNlcjg0ODAyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/848021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wturrell", "html_url": "https://github.com/wturrell", "followers_url": "https://api.github.com/users/wturrell/followers", "following_url": "https://api.github.com/users/wturrell/following{/other_user}", "gists_url": "https://api.github.com/users/wturrell/gists{/gist_id}", "starred_url": "https://api.github.com/users/wturrell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wturrell/subscriptions", "organizations_url": "https://api.github.com/users/wturrell/orgs", "repos_url": "https://api.github.com/users/wturrell/repos", "events_url": "https://api.github.com/users/wturrell/events{/privacy}", "received_events_url": "https://api.github.com/users/wturrell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724556, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTY=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-21T12:06:38Z", "updated_at": "2016-03-01T09:25:01Z", "closed_at": "2016-02-29T21:10:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get this error on a Vagrant box using Ubuntu 14.04.3 LTS (and because it's in a while loop it was printed over and over again.)\n\nI removed the `-e` switch from line 24 and gitlint seemed to work correctly but I haven't been able to find anything which specifies what `-e` is supposed to do?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/7", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/7/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/7/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/7", "id": 127909923, "node_id": "MDU6SXNzdWUxMjc5MDk5MjM=", "number": 7, "title": "Hook compatibility with SourceTree", "user": {"login": "wturrell", "id": 848021, "node_id": "MDQ6VXNlcjg0ODAyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/848021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wturrell", "html_url": "https://github.com/wturrell", "followers_url": "https://api.github.com/users/wturrell/followers", "following_url": "https://api.github.com/users/wturrell/following{/other_user}", "gists_url": "https://api.github.com/users/wturrell/gists{/gist_id}", "starred_url": "https://api.github.com/users/wturrell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wturrell/subscriptions", "organizations_url": "https://api.github.com/users/wturrell/orgs", "repos_url": "https://api.github.com/users/wturrell/repos", "events_url": "https://api.github.com/users/wturrell/events{/privacy}", "received_events_url": "https://api.github.com/users/wturrell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 255724558, "node_id": "MDU6TGFiZWwyNTU3MjQ1NTg=", "url": "https://api.github.com/repos/jorisroovers/gitlint/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-21T12:04:01Z", "updated_at": "2016-04-14T21:49:49Z", "closed_at": "2016-04-14T21:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I attempt to commit via SourceTree rather than the CLI, I get:\n\n```\ngit -c diff.mnemonicprefix=false -c core.quotepath=false -c credential.helper=sourcetree commit -q -F /var/folders/0m/_txwwtzj7sz411brd78rlbv80000gp/T/SourceTreeTemp.uRlEZw \n.git/hooks/commit-msg: line 11: /dev/tty: Device not configured\nCompleted with errors, see above\n```\n\nAny way to fix (or just suppress/ignore) that?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jorisroovers/gitlint/issues/1", "repository_url": "https://api.github.com/repos/jorisroovers/gitlint", "labels_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/1/comments", "events_url": "https://api.github.com/repos/jorisroovers/gitlint/issues/1/events", "html_url": "https://github.com/jorisroovers/gitlint/issues/1", "id": 105930205, "node_id": "MDU6SXNzdWUxMDU5MzAyMDU=", "number": 1, "title": "Wrap lines at 72 chars", "user": {"login": "m1foley", "id": 199775, "node_id": "MDQ6VXNlcjE5OTc3NQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/199775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m1foley", "html_url": "https://github.com/m1foley", "followers_url": "https://api.github.com/users/m1foley/followers", "following_url": "https://api.github.com/users/m1foley/following{/other_user}", "gists_url": "https://api.github.com/users/m1foley/gists{/gist_id}", "starred_url": "https://api.github.com/users/m1foley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m1foley/subscriptions", "organizations_url": "https://api.github.com/users/m1foley/orgs", "repos_url": "https://api.github.com/users/m1foley/repos", "events_url": "https://api.github.com/users/m1foley/events{/privacy}", "received_events_url": "https://api.github.com/users/m1foley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-11T01:49:20Z", "updated_at": "2015-09-11T08:34:32Z", "closed_at": "2015-09-11T08:34:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "80 chars is the standard for writing code, but Tim Pope's [authoritative guide](http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html) recommends wrapping Git commits at 72. The community has largely agreed on this standard; the [Pro Git](https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project) book mentions it too.\n", "performed_via_github_app": null, "score": 1.0}]}