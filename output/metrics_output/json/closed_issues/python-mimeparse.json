{"total_count": 7, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/25", "repository_url": "https://api.github.com/repos/dbtsai/python-mimeparse", "labels_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/25/comments", "events_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/25/events", "html_url": "https://github.com/dbtsai/python-mimeparse/issues/25", "id": 179740236, "node_id": "MDU6SXNzdWUxNzk3NDAyMzY=", "number": 25, "title": "Incorrect order of best matching types?", "user": {"login": "marcinn", "id": 139032, "node_id": "MDQ6VXNlcjEzOTAzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/139032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcinn", "html_url": "https://github.com/marcinn", "followers_url": "https://api.github.com/users/marcinn/followers", "following_url": "https://api.github.com/users/marcinn/following{/other_user}", "gists_url": "https://api.github.com/users/marcinn/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcinn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcinn/subscriptions", "organizations_url": "https://api.github.com/users/marcinn/orgs", "repos_url": "https://api.github.com/users/marcinn/repos", "events_url": "https://api.github.com/users/marcinn/events{/privacy}", "received_events_url": "https://api.github.com/users/marcinn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-09-28T10:51:15Z", "updated_at": "2020-07-14T11:58:15Z", "closed_at": "2016-10-16T23:00:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\n\nI've tried to do `best_match()` on acceptable types defined as `['application/json;q=1.0', 'text/html;q=0.9', 'text/plain;q=0.1']`. `Accept` header was set to `*/*`. I'm expecting that `mimeparse.best_match()` will return `application/json` as a best matching type (due to the highest qvalue), but function returns `text/plain` instead. \n\nThe problem lies inside `best_match()` function, where every acceptable media type is checked separately, and every type is scored `(0, 1.0)`. As a result a `[((0, 1.0), 'application/json;q=1.0'), ((0, 1.0), 'text/html;q=0.9'), ((0, 1.0), 'text/plain;q=0.1')]` list is sorted, then the last element is returned. \n\nI would ask - am I wrong expecting `application/json` as a result in that case, or is there a bug?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/21", "repository_url": "https://api.github.com/repos/dbtsai/python-mimeparse", "labels_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/21/comments", "events_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/21/events", "html_url": "https://github.com/dbtsai/python-mimeparse/issues/21", "id": 157788090, "node_id": "MDU6SXNzdWUxNTc3ODgwOTA=", "number": 21, "title": "Handle */* as one of many parts gracefully", "user": {"login": "wojcikstefan", "id": 1718372, "node_id": "MDQ6VXNlcjE3MTgzNzI=", "avatar_url": "https://avatars1.githubusercontent.com/u/1718372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wojcikstefan", "html_url": "https://github.com/wojcikstefan", "followers_url": "https://api.github.com/users/wojcikstefan/followers", "following_url": "https://api.github.com/users/wojcikstefan/following{/other_user}", "gists_url": "https://api.github.com/users/wojcikstefan/gists{/gist_id}", "starred_url": "https://api.github.com/users/wojcikstefan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wojcikstefan/subscriptions", "organizations_url": "https://api.github.com/users/wojcikstefan/orgs", "repos_url": "https://api.github.com/users/wojcikstefan/repos", "events_url": "https://api.github.com/users/wojcikstefan/events{/privacy}", "received_events_url": "https://api.github.com/users/wojcikstefan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-31T22:50:41Z", "updated_at": "2016-09-28T22:28:10Z", "closed_at": "2016-09-28T22:28:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Test with `Accept: application/json, text/javascript, */*;`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/18", "repository_url": "https://api.github.com/repos/dbtsai/python-mimeparse", "labels_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/18/comments", "events_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/18/events", "html_url": "https://github.com/dbtsai/python-mimeparse/issues/18", "id": 151574759, "node_id": "MDU6SXNzdWUxNTE1NzQ3NTk=", "number": 18, "title": "Broken download_url link in setup.py", "user": {"login": "scop", "id": 109152, "node_id": "MDQ6VXNlcjEwOTE1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/109152?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scop", "html_url": "https://github.com/scop", "followers_url": "https://api.github.com/users/scop/followers", "following_url": "https://api.github.com/users/scop/following{/other_user}", "gists_url": "https://api.github.com/users/scop/gists{/gist_id}", "starred_url": "https://api.github.com/users/scop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scop/subscriptions", "organizations_url": "https://api.github.com/users/scop/orgs", "repos_url": "https://api.github.com/users/scop/repos", "events_url": "https://api.github.com/users/scop/events{/privacy}", "received_events_url": "https://api.github.com/users/scop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-04-28T08:10:23Z", "updated_at": "2016-05-23T00:01:07Z", "closed_at": "2016-05-23T00:00:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "PyPI has changed the formatting of the tarball download links, and the one in setup.py is now broken:\nhttps://bitbucket.org/pypa/pypi/issues/438/backwards-compatible-un-hashed-package\n\nI would have suggested to use github tag URL there instead and submitted a PR, but unfortunately it looks like the python-mimeparse releases are not being tagged in the repository...\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/4", "repository_url": "https://api.github.com/repos/dbtsai/python-mimeparse", "labels_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/4/comments", "events_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/4/events", "html_url": "https://github.com/dbtsai/python-mimeparse/issues/4", "id": 24657946, "node_id": "MDU6SXNzdWUyNDY1Nzk0Ng==", "number": 4, "title": "No python installation found in registry error on install", "user": {"login": "cooplarsh", "id": 2893432, "node_id": "MDQ6VXNlcjI4OTM0MzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/2893432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooplarsh", "html_url": "https://github.com/cooplarsh", "followers_url": "https://api.github.com/users/cooplarsh/followers", "following_url": "https://api.github.com/users/cooplarsh/following{/other_user}", "gists_url": "https://api.github.com/users/cooplarsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooplarsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooplarsh/subscriptions", "organizations_url": "https://api.github.com/users/cooplarsh/orgs", "repos_url": "https://api.github.com/users/cooplarsh/repos", "events_url": "https://api.github.com/users/cooplarsh/events{/privacy}", "received_events_url": "https://api.github.com/users/cooplarsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-12-21T01:49:17Z", "updated_at": "2016-02-01T02:07:01Z", "closed_at": "2016-02-01T02:07:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have setup a new Python environment with version 3.3, and I didn't go with the default installation folder (preferring to install applications into the \"C:\\Program Files\" folder).\n\nWhen I run python-mimeparse-0.1.4.linux-x86_64.exe I get an error indicating \"No python installation found in registry\", and cannot manually enter the actual value.  I googled python registry entries for what key it would be looking for and found it under the local machine, and added it to the current_user (since the article I found mentioned it would be under both) but to no avail.\n\nCould you be so kind as to share what registry key your installation program is looking for so I can manually add it and see if I can successfully run the installer?\n\nAnd thanks so much for creating python-mimeparse and for your help on this question.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/3", "repository_url": "https://api.github.com/repos/dbtsai/python-mimeparse", "labels_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/3/comments", "events_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/3/events", "html_url": "https://github.com/dbtsai/python-mimeparse/issues/3", "id": 6445090, "node_id": "MDU6SXNzdWU2NDQ1MDkw", "number": 3, "title": "Wrong ordering of candidates", "user": {"login": "dbtsai", "id": 1134574, "node_id": "MDQ6VXNlcjExMzQ1NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1134574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbtsai", "html_url": "https://github.com/dbtsai", "followers_url": "https://api.github.com/users/dbtsai/followers", "following_url": "https://api.github.com/users/dbtsai/following{/other_user}", "gists_url": "https://api.github.com/users/dbtsai/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbtsai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbtsai/subscriptions", "organizations_url": "https://api.github.com/users/dbtsai/orgs", "repos_url": "https://api.github.com/users/dbtsai/repos", "events_url": "https://api.github.com/users/dbtsai/events{/privacy}", "received_events_url": "https://api.github.com/users/dbtsai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-08-24T21:47:12Z", "updated_at": "2012-08-27T00:16:52Z", "closed_at": "2012-08-27T00:16:52Z", "author_association": "OWNER", "active_lock_reason": null, "body": "What steps will reproduce the problem?\n\n```\nmimeparse.best_match([\"image/jpeg\", \"text/plain\"], \"text/*;q=0.3, text/html;q=0.7, text/html;level=1, text/html;level=2;q=0.4, */*;q=0.5\")\n```\n\nWhat is the expected output? What do you see instead?\n\nExpected: 'image/jpeg'\nInstead: 'text/plain'\n\nWhat version of the product are you using? On what operating system?\n\nVersion: 0.1.3\nOS: Mac OS X 10.6.4, Python 2.6.1\n(Using Python version of mimeparse library)\n\nPlease provide any additional information below.\n\nThe best_match function is using fitness_and_quality_parsed() to order the candidate media ranges, but the first value from that is the fitness, which corresponds to what rfc2616 calls the \"precedence\", or the specificity of the range to the particular candidate type. The specificity matters, but the major ordering factor should be the quality (the client's measure of which media ranges are most preferred).\n\nIn the example above, image/jpeg should have a quality of 0.5 (from the _/_) and text/plain should have a quality of 0.3 (from the text/*). The type with the higher quality factor is image/jpeg, and it should win.\n\nI'm attaching a patch that fixes this by swapping the elements returned by fitness_and_quality_parsed(), along with an extra test for your suite. Hope this helps.\n\nSee: \n\nhttp://code.google.com/p/mimeparse/issues/attachmentText?id=10&aid=-7973144274275406361&name=mimeparse.patch&token=bNOf7hGoiXyduKWLI0WY4Q4q4e8%3A1345844559552\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/2", "repository_url": "https://api.github.com/repos/dbtsai/python-mimeparse", "labels_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/2/comments", "events_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/2/events", "html_url": "https://github.com/dbtsai/python-mimeparse/issues/2", "id": 6445055, "node_id": "MDU6SXNzdWU2NDQ1MDU1", "number": 2, "title": "ValueError in 1.3 python version", "user": {"login": "dbtsai", "id": 1134574, "node_id": "MDQ6VXNlcjExMzQ1NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1134574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbtsai", "html_url": "https://github.com/dbtsai", "followers_url": "https://api.github.com/users/dbtsai/followers", "following_url": "https://api.github.com/users/dbtsai/following{/other_user}", "gists_url": "https://api.github.com/users/dbtsai/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbtsai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbtsai/subscriptions", "organizations_url": "https://api.github.com/users/dbtsai/orgs", "repos_url": "https://api.github.com/users/dbtsai/repos", "events_url": "https://api.github.com/users/dbtsai/events{/privacy}", "received_events_url": "https://api.github.com/users/dbtsai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2012-08-24T21:45:30Z", "updated_at": "2016-02-01T02:07:28Z", "closed_at": "2016-02-01T02:07:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "What steps will reproduce the problem?\nIn [3]: mimeparse.parse_mime_type(\"text/html, image/gif, image/jpeg, _; q=.2, */_; q=.2\")\n\nWhat is the expected output? What do you see instead?\n## In [3]: mimeparse.parse_mime_type(\"text/html, image/gif, image/jpeg, _; q=.2, */_; q=.2\")\n\nValueError                                Traceback (most recent call last)\n/tmp/<ipython console> in <module>()\n/tmp/mimeparse.py in parse_mime_type(mime_type)\n     36     # Turn it into a legal wildcard.\n     37     if full_type == '_': full_type = '_/*'\n---> 38     (type, subtype) = full_type.split(\"/\")\n     39     return (type.strip(), subtype.strip(), params)\n     40 \nValueError: too many values to unpack\n\nWhat version of the product are you using? On what operating system?\n1.3\n\nPlease provide any additional information below.\nhttps://bitbucket.org/benoitc/django-authopenid/issue/54/type-subtype-parts-0-split-valueerror-too#comment-483268\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/1", "repository_url": "https://api.github.com/repos/dbtsai/python-mimeparse", "labels_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/1/comments", "events_url": "https://api.github.com/repos/dbtsai/python-mimeparse/issues/1/events", "html_url": "https://github.com/dbtsai/python-mimeparse/issues/1", "id": 6444988, "node_id": "MDU6SXNzdWU2NDQ0OTg4", "number": 1, "title": "parse_media_range overrides quality values of 0", "user": {"login": "dbtsai", "id": 1134574, "node_id": "MDQ6VXNlcjExMzQ1NzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1134574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbtsai", "html_url": "https://github.com/dbtsai", "followers_url": "https://api.github.com/users/dbtsai/followers", "following_url": "https://api.github.com/users/dbtsai/following{/other_user}", "gists_url": "https://api.github.com/users/dbtsai/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbtsai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbtsai/subscriptions", "organizations_url": "https://api.github.com/users/dbtsai/orgs", "repos_url": "https://api.github.com/users/dbtsai/repos", "events_url": "https://api.github.com/users/dbtsai/events{/privacy}", "received_events_url": "https://api.github.com/users/dbtsai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-08-24T21:43:23Z", "updated_at": "2012-08-26T23:30:55Z", "closed_at": "2012-08-26T23:30:55Z", "author_association": "OWNER", "active_lock_reason": null, "body": "What steps will reproduce the problem?\n\nmimeparse.parse_media_range('_/_;q=0')\n\nExpected Output: ('_', '_', {'q': '0'})\nActual Output: ('_', '_', {'q': '1'})\n\nI encountered this while parsing an request Accept header with\n'application/xml,_/_;q=0' and the only acceptable type on the\nserver is application/json. It freely let the server return a\nJSON representation, but should have failed since the user agent\nexplicitly defined a quality of 0 for all other mimetypes. The\nvalue of 0 for _/_ was being overwritten with 1.\n\n56c56,57\n## <             float(params['q']) > 1 or float(params['q']) < 0:\n\n> ```\n>         not float(params['q']) or float(params['q']) > 1\\\n>         or float(params['q']) < 0:\n> ```\n\nWhat version of the product are you using? On what operating system?\n\nPython version of mimeparse 0.1.3\nUsing Python 2.7.1\n", "performed_via_github_app": null, "score": 1.0}]}