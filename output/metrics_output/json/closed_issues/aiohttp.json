{"total_count": 1860, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4880", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4880/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4880/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4880/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4880", "id": 666386462, "node_id": "MDU6SXNzdWU2NjYzODY0NjI=", "number": 4880, "title": "Yarl >= 1.5.0 breaks aiohttp", "user": {"login": "kirknorthrop", "id": 1581341, "node_id": "MDQ6VXNlcjE1ODEzNDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1581341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirknorthrop", "html_url": "https://github.com/kirknorthrop", "followers_url": "https://api.github.com/users/kirknorthrop/followers", "following_url": "https://api.github.com/users/kirknorthrop/following{/other_user}", "gists_url": "https://api.github.com/users/kirknorthrop/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirknorthrop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirknorthrop/subscriptions", "organizations_url": "https://api.github.com/users/kirknorthrop/orgs", "repos_url": "https://api.github.com/users/kirknorthrop/repos", "events_url": "https://api.github.com/users/kirknorthrop/events{/privacy}", "received_events_url": "https://api.github.com/users/kirknorthrop/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1831255463, "node_id": "MDU6TGFiZWwxODMxMjU1NDYz", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/reproducer:%20missing", "name": "reproducer: missing", "color": "e23c36", "default": false, "description": "This PR or issue lacks code, which reproduce the problem described or clearly understandable STR"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-27T15:32:17Z", "updated_at": "2020-08-04T20:37:08Z", "closed_at": "2020-08-01T07:22:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\nBreaking change in yarl 1.5.0 breaks aiohttp.\r\n\r\n\r\n\ud83d\udca1 **To Reproduce**\r\nInstall aiohttp via pip, then `from aiohttp import web`\r\n\r\n\ud83d\udca1 **Expected behavior**\r\nIt should import `web`\r\n\r\n\r\n\ud83d\udccb **Logs/tracebacks**\r\n<!-- If applicable, add logs/tracebacks to help explain your problem. -->\r\n```python-traceback (paste your traceback in the next line)\r\n File \"/usr/local/lib/python3.7/site-packages/myprojectnamehere/services/application/product_service.py\", line 3, in <module>\r\n    from aiohttp import web\r\n  File \"/usr/local/lib/python3.7/site-packages/aiohttp/__init__.py\", line 6, in <module>\r\n    from .client import BaseConnector as BaseConnector\r\n  File \"/usr/local/lib/python3.7/site-packages/aiohttp/client.py\", line 30, in <module>\r\n    from yarl import URL\r\n  File \"/usr/local/lib/python3.7/site-packages/yarl/__init__.py\", line 1, in <module>\r\n    from ._url import URL, cache_clear, cache_configure, cache_info\r\n  File \"/usr/local/lib/python3.7/site-packages/yarl/_url.py\", line 56, in <module>\r\n    @rewrite_module\r\n  File \"/usr/local/lib/python3.7/site-packages/yarl/_url.py\", line 132, in URL\r\n    _QUERY_PART_QUOTER = _Quoter(safe=\"?/:@\", qs=True, requote=False)\r\n  File \"yarl/_quoting.pyx\", line 192, in yarl._quoting._Quoter.__init__\r\nTypeError: __init__() got an unexpected keyword argument 'requote'\r\n```\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n<!-- Attach your version of the Python. -->\r\n```console\r\npython 3.7.4\r\n```\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n<!-- Attach your version of the distributions in the code blocks below. -->\r\n```console\r\n$ python -m pip show aiohttp\r\naiohttp==3.6.2\r\n```\r\n```console\r\n$ python -m pip show multidict\r\nmultidict==4.5.2\r\n```\r\n```console\r\n$ python -m pip show yarl\r\nyarl==1.5.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4874", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4874/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4874/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4874/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4874", "id": 664666948, "node_id": "MDU6SXNzdWU2NjQ2NjY5NDg=", "number": 4874, "title": "Boolean Type error in GET request params", "user": {"login": "ajyadav013", "id": 13145546, "node_id": "MDQ6VXNlcjEzMTQ1NTQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/13145546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajyadav013", "html_url": "https://github.com/ajyadav013", "followers_url": "https://api.github.com/users/ajyadav013/followers", "following_url": "https://api.github.com/users/ajyadav013/following{/other_user}", "gists_url": "https://api.github.com/users/ajyadav013/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajyadav013/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajyadav013/subscriptions", "organizations_url": "https://api.github.com/users/ajyadav013/orgs", "repos_url": "https://api.github.com/users/ajyadav013/repos", "events_url": "https://api.github.com/users/ajyadav013/events{/privacy}", "received_events_url": "https://api.github.com/users/ajyadav013/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986078, "node_id": "MDU6TGFiZWw1ODk4NjA3OA==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-23T18:02:53Z", "updated_at": "2020-07-23T22:52:50Z", "closed_at": "2020-07-23T22:52:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a boolean value is passed in a dictionary as params to the GET request, it gives an error - TypeError: Invalid variable type: value should be str or int, got True of type <class 'bool'>\r\n\r\n```python\r\nparams = {\"enabled\": True}\r\nimport aiohttp \r\nasync with aiohttp.ClientSession(auth=None) as session: \r\n    async with session.get(url, params=params)  as resp: \r\n        await resp.content.read() \r\n```\r\n\r\nEnv:\r\nPython - 3.8\r\naiohttp - 3.6.2\r\n\r\n\r\nThis works if I use the params this way - {\"enabled\": \"true\"}\r\nIf the params are being accepted as a dictionary, then it should accept a boolean as a value type too.\r\nDo correct me if I am wrong or if there's another way to fetch the results.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4856", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4856/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4856/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4856/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4856", "id": 657603309, "node_id": "MDU6SXNzdWU2NTc2MDMzMDk=", "number": 4856, "title": "Server with default SSL context aborts all connections", "user": {"login": "gdmoore", "id": 586753, "node_id": "MDQ6VXNlcjU4Njc1Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/586753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gdmoore", "html_url": "https://github.com/gdmoore", "followers_url": "https://api.github.com/users/gdmoore/followers", "following_url": "https://api.github.com/users/gdmoore/following{/other_user}", "gists_url": "https://api.github.com/users/gdmoore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gdmoore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gdmoore/subscriptions", "organizations_url": "https://api.github.com/users/gdmoore/orgs", "repos_url": "https://api.github.com/users/gdmoore/repos", "events_url": "https://api.github.com/users/gdmoore/events{/privacy}", "received_events_url": "https://api.github.com/users/gdmoore/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-15T19:39:32Z", "updated_at": "2020-07-15T19:45:01Z", "closed_at": "2020-07-15T19:45:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "withdrawn", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4847", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4847/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4847/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4847/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4847", "id": 650584929, "node_id": "MDU6SXNzdWU2NTA1ODQ5Mjk=", "number": 4847, "title": "ModuleNotFoundError: No module named 'aiohttp.server'", "user": {"login": "sskaditya", "id": 52873426, "node_id": "MDQ6VXNlcjUyODczNDI2", "avatar_url": "https://avatars3.githubusercontent.com/u/52873426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sskaditya", "html_url": "https://github.com/sskaditya", "followers_url": "https://api.github.com/users/sskaditya/followers", "following_url": "https://api.github.com/users/sskaditya/following{/other_user}", "gists_url": "https://api.github.com/users/sskaditya/gists{/gist_id}", "starred_url": "https://api.github.com/users/sskaditya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sskaditya/subscriptions", "organizations_url": "https://api.github.com/users/sskaditya/orgs", "repos_url": "https://api.github.com/users/sskaditya/repos", "events_url": "https://api.github.com/users/sskaditya/events{/privacy}", "received_events_url": "https://api.github.com/users/sskaditya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986078, "node_id": "MDU6TGFiZWw1ODk4NjA3OA==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-03T13:04:55Z", "updated_at": "2020-07-03T15:04:24Z", "closed_at": "2020-07-03T15:02:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\n<!-- A clear and concise description of what the bug is, on the next line. -->\r\n\r\nI have just installed SSE \r\n\r\nThe module is not found\r\n\r\n`ModuleNotFoundError: No module named 'aiohttp.server'`\r\n\r\n```python-traceback\r\n  File \"demo.py\", line 2, in <module>\r\n    import sse\r\n  File \"/home/pi/Documents/RFID_Production/src/lib/python3.7/site-packages/sse/__init__.py\", line 2, in <module>\r\n    from .handler import *  # noqa\r\n  File \"/home/pi/Documents/RFID_Production/src/lib/python3.7/site-packages/sse/handler.py\", line 4, in <module>\r\n    from .protocol import Response\r\n  File \"/home/pi/Documents/RFID_Production/src/lib/python3.7/site-packages/sse/protocol.py\", line 1, in <module>\r\n    import aiohttp.server\r\nModuleNotFoundError: No module named 'aiohttp.server'\r\n```\r\n\r\n\ud83d\udca1 **To Reproduce**\r\n<!-- How to reproduce the behavior?\r\n\r\nFor example:\r\n1. Have certain environment\r\n2. Run given code snippet in a certain way\r\n3. See some behavior described\r\n\r\nAdd these steps below this comment: -->\r\n\r\n\r\n\ud83d\udca1 **Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n\r\n\ud83d\udccb **Logs/tracebacks**\r\n<!-- If applicable, add logs/tracebacks to help explain your problem. -->\r\n```python-traceback (paste your traceback in the next line)\r\n\r\n```\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n<!-- Attach your version of the Python. -->\r\n```console\r\n$ python --version\r\n...\r\n```\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n<!-- Attach your version of the distributions in the code blocks below. -->\r\n```console\r\n$ python -m pip show aiohttp\r\n...\r\n```\r\n```console\r\n$ python -m pip show multidict\r\n...\r\n```\r\n```console\r\n$ python -m pip show yarl\r\n...\r\n```\r\n\r\n\ud83d\udccb **Additional context**\r\n<!-- Add any other context about the problem here, in the next line. -->\r\n\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case.\r\n\r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4843", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4843/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4843/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4843/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4843", "id": 645445401, "node_id": "MDU6SXNzdWU2NDU0NDU0MDE=", "number": 4843, "title": "aiohttp.client_exceptions.ClientPayloadError: Response payload is not completed", "user": {"login": "kholmatov", "id": 7079631, "node_id": "MDQ6VXNlcjcwNzk2MzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/7079631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kholmatov", "html_url": "https://github.com/kholmatov", "followers_url": "https://api.github.com/users/kholmatov/followers", "following_url": "https://api.github.com/users/kholmatov/following{/other_user}", "gists_url": "https://api.github.com/users/kholmatov/gists{/gist_id}", "starred_url": "https://api.github.com/users/kholmatov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kholmatov/subscriptions", "organizations_url": "https://api.github.com/users/kholmatov/orgs", "repos_url": "https://api.github.com/users/kholmatov/repos", "events_url": "https://api.github.com/users/kholmatov/events{/privacy}", "received_events_url": "https://api.github.com/users/kholmatov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-25T10:21:11Z", "updated_at": "2020-07-09T09:39:43Z", "closed_at": "2020-07-09T09:39:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some problem wit ClientSession get\r\n\r\n```\r\n        async with ClientSession() as session:\r\n            async with session.get(\"https://www.deluxemusic.tv/wp-admin/admin-ajax.php?action=get_programs\",\r\n                                   headers=self.headers) as resp:\r\n                if resp.status == HTTPStatus.OK:\r\n                    json_data = await resp.json()\r\n```\r\n        \r\n\r\n```\r\napp_1       | File \"/usr/share/python3/app/lib/python3.8/site-packages/aiohttp/client_reqrep.py\", line 973, in read\r\napp_1       |     self._body = await self.content.read()\r\napp_1       |   File \"/usr/share/python3/app/lib/python3.8/site-packages/aiohttp/streams.py\", line 358, in read\r\napp_1       |     block = await self.readany()\r\napp_1       |   File \"/usr/share/python3/app/lib/python3.8/site-packages/aiohttp/streams.py\", line 380, in readany\r\napp_1       |     await self._wait('readany')\r\napp_1       |   File \"/usr/share/python3/app/lib/python3.8/site-packages/aiohttp/streams.py\", line 296, in _wait\r\napp_1       |     await waiter\r\napp_1       | aiohttp.client_exceptions.ClientPayloadError: Response payload is not completed\r\n```\r\n\r\n```\r\ncurl -I https://www.deluxemusic.tv/wp-admin/admin-ajax.php?action=get_programs\r\nHTTP/2 200 \r\ndate: Thu, 25 Jun 2020 10:23:25 GMT\r\nserver: Apache\r\npragma: no-cache\r\nx-robots-tag: noindex\r\nx-content-type-options: nosniff\r\nx-frame-options: SAMEORIGIN\r\nreferrer-policy: strict-origin-when-cross-origin\r\nexpires: Wed, 11 Jan 1984 05:00:00 GMT\r\ncache-control: no-cache, must-revalidate, max-age=0\r\nset-cookie: PHPSESSID=11042fa2b3071b5dd04c4ca705bd4b99; path=/\r\nreferrer-policy: no-referrer-when-downgrade\r\ncontent-type: application/json\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4808", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4808/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4808/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4808/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4808", "id": 635782921, "node_id": "MDU6SXNzdWU2MzU3ODI5MjE=", "number": 4808, "title": "Expose _run_app so app can be used as an ordinary task in an existing event loop.", "user": {"login": "stuaxo", "id": 179677, "node_id": "MDQ6VXNlcjE3OTY3Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/179677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stuaxo", "html_url": "https://github.com/stuaxo", "followers_url": "https://api.github.com/users/stuaxo/followers", "following_url": "https://api.github.com/users/stuaxo/following{/other_user}", "gists_url": "https://api.github.com/users/stuaxo/gists{/gist_id}", "starred_url": "https://api.github.com/users/stuaxo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stuaxo/subscriptions", "organizations_url": "https://api.github.com/users/stuaxo/orgs", "repos_url": "https://api.github.com/users/stuaxo/repos", "events_url": "https://api.github.com/users/stuaxo/events{/privacy}", "received_events_url": "https://api.github.com/users/stuaxo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986077, "node_id": "MDU6TGFiZWw1ODk4NjA3Nw==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-09T21:53:17Z", "updated_at": "2020-06-10T10:17:18Z", "closed_at": "2020-06-10T10:17:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using aiohttp in an existing event loop is a useful use-case\r\nhttps://stackoverflow.com/questions/53465862/python-aiohttp-into-existing-event-loop\r\n\r\nThis could be achieved by making _run_app, public, it could be renamed to something like app_task.\r\n\r\nIn this way the app could be used like this:\r\n\r\n```\r\n# example adapted from https://stackoverflow.com/a/57532581/62709\r\nasync def main():\r\n    await aio.gather(\r\n        web.app_task(app, port=args.port),\r\n        SomeotherTask(),\r\n        AndAnotherTask()\r\n    )\r\n\r\naio.run(main())\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4805", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4805/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4805/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4805/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4805", "id": 634809020, "node_id": "MDU6SXNzdWU2MzQ4MDkwMjA=", "number": 4805, "title": "CLOSE_WAIT socket status after calling ws.close()", "user": {"login": "TheSlackOne", "id": 13991630, "node_id": "MDQ6VXNlcjEzOTkxNjMw", "avatar_url": "https://avatars1.githubusercontent.com/u/13991630?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheSlackOne", "html_url": "https://github.com/TheSlackOne", "followers_url": "https://api.github.com/users/TheSlackOne/followers", "following_url": "https://api.github.com/users/TheSlackOne/following{/other_user}", "gists_url": "https://api.github.com/users/TheSlackOne/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheSlackOne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheSlackOne/subscriptions", "organizations_url": "https://api.github.com/users/TheSlackOne/orgs", "repos_url": "https://api.github.com/users/TheSlackOne/repos", "events_url": "https://api.github.com/users/TheSlackOne/events{/privacy}", "received_events_url": "https://api.github.com/users/TheSlackOne/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-08T17:39:57Z", "updated_at": "2020-06-10T21:58:34Z", "closed_at": "2020-06-10T21:58:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\n<!-- A clear and concise description of what the bug is, on the next line. -->\r\nAfter calling `ws.close()`, the server side keeps the socket in CLOSE_WAIT status for same seconds.\r\n\r\n```\r\nasync with ClientSession(connector=TCPConnector(limit=0)) as session:\r\n    try:\r\n        async with session.ws_connect(streamer_host,\r\n                                      protocols=(streamer_protocol,), ssl=True) as ws:\r\n            try:\r\n                  await ws.send_json(init_metadata)\r\n                  await ws.send_json(codec_change)\r\n                  while not ws.closed:\r\n                        buf = load_buffer()\r\n                        await ws.send_bytes(buf)\r\n                  await ws.close()\r\n```\r\nAfter calling `ws.close()`, the websocket is effectively closed (`ws.closed` is `True`), but the server accuses CLOSE_WAIT status for about 10 secs. This is a problem because the sockets in this state make the server keep the FD open demanding more resources until they get closed.\r\nSo where I should have `x` simultaneous connection, I get `2x`, because I launch new connections when they are done (after `ws.close()`). So my server needs twice RAM when clients use `aiohttp`.\r\n\r\nThis is reproducible in MacOS 10 and modern Linux, at least.\r\n\r\nThis does not happens with other websocket implementations, like the C++ libwebsocket.\r\n\r\nMy expectations is the get the sockets closed immediately after calling `ws.close()`.\r\n\r\n\r\nEnvironment\r\n\r\n```console\r\n$ python --version\r\nPython 3.6.8\r\n```\r\n\r\n$ python -m pip show aiohttp\r\nName: aiohttp\r\nVersion: 3.6.2\r\nSummary: Async http client/server framework (asyncio)\r\nHome-page: https://github.com/aio-libs/aiohttp\r\nAuthor: Nikolay Kim\r\nAuthor-email: fafhrd91@gmail.com\r\nLicense: Apache 2\r\nLocation: /Users/emessina/.pyenv/versions/3.6.8/lib/python3.6/site-packages\r\nRequires: typing-extensions, chardet, idna-ssl, async-timeout, multidict, yarl, attrs\r\nRequired-by: asapp-serverbase, asapp-pyproto\r\n```\r\n```console\r\n$ python -m pip show multidict\r\nName: multidict\r\nVersion: 4.7.4\r\nSummary: multidict implementation\r\nHome-page: https://github.com/aio-libs/multidict\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /Users/emessina/.pyenv/versions/3.6.8/lib/python3.6/site-packages\r\nRequires: \r\nRequired-by: yarl, aiohttp\r\n```\r\n```console\r\n$ python -m pip show yarl\r\nName: yarl\r\nVersion: 1.4.2\r\nSummary: Yet another URL library\r\nHome-page: https://github.com/aio-libs/yarl/\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /Users/emessina/.pyenv/versions/3.6.8/lib/python3.6/site-packages\r\nRequires: multidict, idna\r\nRequired-by: aiohttp\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4792", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4792/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4792/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4792/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4792", "id": 630865933, "node_id": "MDU6SXNzdWU2MzA4NjU5MzM=", "number": 4792, "title": "aiohttp messing up with given URL", "user": {"login": "thekillgfx", "id": 39156526, "node_id": "MDQ6VXNlcjM5MTU2NTI2", "avatar_url": "https://avatars3.githubusercontent.com/u/39156526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thekillgfx", "html_url": "https://github.com/thekillgfx", "followers_url": "https://api.github.com/users/thekillgfx/followers", "following_url": "https://api.github.com/users/thekillgfx/following{/other_user}", "gists_url": "https://api.github.com/users/thekillgfx/gists{/gist_id}", "starred_url": "https://api.github.com/users/thekillgfx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thekillgfx/subscriptions", "organizations_url": "https://api.github.com/users/thekillgfx/orgs", "repos_url": "https://api.github.com/users/thekillgfx/repos", "events_url": "https://api.github.com/users/thekillgfx/events{/privacy}", "received_events_url": "https://api.github.com/users/thekillgfx/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-04T14:17:29Z", "updated_at": "2020-06-04T18:11:10Z", "closed_at": "2020-06-04T18:11:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\nI'm passing a certain url to `aiohttp get` function but somehow it change the link itself\r\n\r\n\r\n\ud83d\udca1 **To Reproduce**\r\n<!-- How to reproduce the behavior?\r\n\r\nFor example:\r\n1. Have certain environment\r\n2. Run given code snippet in a certain way\r\n3. See some behavior described\r\n\r\nAdd these steps below this comment: -->\r\n```\r\nlink = 'https://www.instagram.com/p/BwS9uRnAodb/'\r\nurl = link + '?__a=1'\r\nprint(url)\r\n>>> https://www.instagram.com/p/BwS9uRnAodb?__a=1\r\nasync with aiohttp.ClientSession() as session:\r\n    async with session.get(url) as resp:\r\n        if resp and resp.status == 200:\r\n            print(resp.url)\r\n            >>> https://www.instagram.com/accounts/login/?next=/p/BwS9uRnAodb/?__a%3D1  \r\n            data = await resp.json()\r\n```\r\n\r\n\ud83d\udca1 **Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nSince a few days this is not working anymore: I was used to pass a `link` to the function and it was returning me the content of the given page in JSON format so I can extrapolate images link, nicknames or other things. From the given url (https://www.instagram.com/p/BwS9uRnAodb?__a=1) aiohttps was reaching the given page but in JSON format but from the one that it's creating(https://www.instagram.com/accounts/login/?next=/p/BwS9uRnAodb/?__a%3D1) using Chrome I reach the same page but seems not working anymore on aiohttp.\r\n\r\n\ud83d\udccb **Logs/tracebacks**\r\n<!-- If applicable, add logs/tracebacks to help explain your problem. -->\r\n```python-traceback (paste your traceback in the next line)\r\nFile \"main.py\", line 86, in instagramPost\r\n    data = await resp.json()\r\nFile \"/opt/virtualenvs/python3/lib/python3.8/site-packages/aiohttp/client_reqrep.py\", line \r\n1026, in json\r\n    raise ContentTypeError(\r\naiohttp.client_exceptions.ContentTypeError: 0, message='Attempt to decode JSON with unexpecte\r\nd mimetype: text/html; charset=utf-8', url=URL('https://www.instagram.com/accounts/login/?nex\r\nt=/p/BwS9uRnAodb/?__a%3D1')\r\n```\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n<!-- Attach your version of the Python. -->\r\n```console\r\n$ python --version\r\npython = \"^3.7\"\r\n```\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n<!-- Attach your version of the distributions in the code blocks below. -->\r\n```console\r\n$ python -m pip show aiohttp\r\naiohttp = \"^3.6\"\r\n```\r\n```console\r\n$ python -m pip show multidict\r\nmultidict = \"4.7.5\"\r\n```\r\n```console\r\n$ python -m pip show yarl\r\nyarl= \"1.4.2\"\r\n```\r\n\r\n\ud83d\udccb **Additional context**\r\n<!-- Add any other context about the problem here, in the next line. -->\r\n\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case.\r\n\r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->client\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4791", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4791/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4791/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4791/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4791", "id": 630724652, "node_id": "MDU6SXNzdWU2MzA3MjQ2NTI=", "number": 4791, "title": "Why reuqests succeed, but aiohttp fails\uff1f", "user": {"login": "importTthis", "id": 55172427, "node_id": "MDQ6VXNlcjU1MTcyNDI3", "avatar_url": "https://avatars0.githubusercontent.com/u/55172427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/importTthis", "html_url": "https://github.com/importTthis", "followers_url": "https://api.github.com/users/importTthis/followers", "following_url": "https://api.github.com/users/importTthis/following{/other_user}", "gists_url": "https://api.github.com/users/importTthis/gists{/gist_id}", "starred_url": "https://api.github.com/users/importTthis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/importTthis/subscriptions", "organizations_url": "https://api.github.com/users/importTthis/orgs", "repos_url": "https://api.github.com/users/importTthis/repos", "events_url": "https://api.github.com/users/importTthis/events{/privacy}", "received_events_url": "https://api.github.com/users/importTthis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-04T11:01:42Z", "updated_at": "2020-06-04T11:24:46Z", "closed_at": "2020-06-04T11:24:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "# requests code\r\nfrom requests import Session\r\n\r\nsession = Session()\r\n\r\n\r\nheaders = {\r\n    \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\",\r\n    \"Accept-Encoding\": \"gzip, deflate, br\",\r\n    \"Accept-Language\": \"zh-CN,zh;q=0.9\",\r\n    \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\r\n}\r\n\r\nr = session.get('https://www.amazon.com/', headers=headers)\r\nprint(r.text)\r\n\r\n# aiohttp code\r\nimport aiohttp\r\nimport asyncio\r\n\r\n\r\nasync def async_test():\r\n    headers = {\r\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\",\r\n        \"Accept-Encoding\": \"gzip, deflate, br\",\r\n        \"Accept-Language\": \"zh-CN,zh;q=0.9\",\r\n        \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\",\r\n    }\r\n    async with aiohttp.ClientSession(headers=headers) as session:\r\n        async  with session.get(\"https://www.amazon.com/\", headers=headers) as resp:\r\n            tet = await resp.text()\r\n            print(tet)\r\n\r\nasyncio.run(async_test())\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4773", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4773/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4773/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4773/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4773", "id": 623999636, "node_id": "MDU6SXNzdWU2MjM5OTk2MzY=", "number": 4773, "title": "request.write_eof() blocks subsequent async processing, when requesting from CUI HTTP client", "user": {"login": "hoto17296", "id": 1976227, "node_id": "MDQ6VXNlcjE5NzYyMjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1976227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hoto17296", "html_url": "https://github.com/hoto17296", "followers_url": "https://api.github.com/users/hoto17296/followers", "following_url": "https://api.github.com/users/hoto17296/following{/other_user}", "gists_url": "https://api.github.com/users/hoto17296/gists{/gist_id}", "starred_url": "https://api.github.com/users/hoto17296/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hoto17296/subscriptions", "organizations_url": "https://api.github.com/users/hoto17296/orgs", "repos_url": "https://api.github.com/users/hoto17296/repos", "events_url": "https://api.github.com/users/hoto17296/events{/privacy}", "received_events_url": "https://api.github.com/users/hoto17296/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-25T02:03:34Z", "updated_at": "2020-06-02T01:07:17Z", "closed_at": "2020-06-02T01:07:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\n- I am implementing a web application with aiohttp server.\r\n- When requesting from client, the server responds with \"200 ok\" immediately and runs a slow async job after the http connection has closed.\r\n- When requesting from Google Chrome, the server works expectly.\r\n- However, when requesting from CUI client (wget or curl), the server stops at the first `await ...` line after the `await request.write_eof()`, and displays no error message.\r\n\r\n\ud83d\udca1 **To Reproduce**\r\n``` python\r\n\"\"\"app.py\"\"\"\r\n\r\nfrom asyncio import sleep\r\nfrom aiohttp import web\r\n\r\n\r\nasync def handler(request):\r\n    print(f'\\n# Request from {request.headers[\"User-Agent\"]}')\r\n\r\n    # Response '200 OK' immediately\r\n    response = web.Response(text='ok')\r\n    await response.prepare(request)\r\n    await response.write_eof()\r\n    print('Response has returned')\r\n\r\n    # Execute slow job\r\n    await sleep(1)  # some async job\r\n    print('Job has completed')\r\n\r\n\r\napp = web.Application()\r\n\r\napp.add_routes([web.get('/', handler)])\r\n\r\nif __name__ == '__main__':\r\n    web.run_app(app)\r\n```\r\n\r\n``` console\r\n$ python app.py\r\n```\r\n\r\nThen, access to http://localhost:8080/ from both **Google Chrome** and **cURL**.\r\n\r\n\ud83d\udca1 **Expected behavior**\r\nA \"Job completed\" message is displayed for requests from any HTTP client.\r\n\r\n\ud83d\udccb **Logs/tracebacks**\r\n```\r\n======== Running on http://0.0.0.0:8080 ========\r\n(Press CTRL+C to quit)\r\n\r\n# Request from Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36\r\nResponse has returned\r\nJob has completed\r\n\r\n# Request from curl/7.64.1\r\nResponse has returned\r\n```\r\n\r\n``` console\r\n$ curl -v http://localhost:8080/\r\n*   Trying ::1...\r\n* TCP_NODELAY set\r\n* Connection failed\r\n* connect to ::1 port 8080 failed: Connection refused\r\n*   Trying 127.0.0.1...\r\n* TCP_NODELAY set\r\n* Connected to localhost (127.0.0.1) port 8080 (#0)\r\n> GET / HTTP/1.1\r\n> Host: localhost:8080\r\n> User-Agent: curl/7.64.1\r\n> Accept: */*\r\n> \r\n< HTTP/1.1 200 OK\r\n< Content-Type: text/plain; charset=utf-8\r\n< Content-Length: 2\r\n< Date: Mon, 25 May 2020 01:22:30 GMT\r\n< Server: Python/3.7 aiohttp/3.6.2\r\n< \r\n* Connection #0 to host localhost left intact\r\nok* Closing connection 0\r\n```\r\n\r\nWhen requesting from Google Chrome, the server runs the job (`await sleep(1)`) completely and displays \"Job has completed\" message.\r\n\r\nHowever, when requesting from cURL, the server doesn't display \"Job has completed\" message and no error message.\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n<!-- Attach your version of the Python. -->\r\n```console\r\n$ python --version\r\nPython 3.7.7\r\n```\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n<!-- Attach your version of the distributions in the code blocks below. -->\r\n```console\r\n$ python -m pip show aiohttp\r\nName: aiohttp\r\nVersion: 3.6.2\r\nSummary: Async http client/server framework (asyncio)\r\nHome-page: https://github.com/aio-libs/aiohttp\r\nAuthor: Nikolay Kim\r\nAuthor-email: fafhrd91@gmail.com\r\nLicense: Apache 2\r\nLocation: /usr/local/lib/python3.7/site-packages\r\nRequires: multidict, chardet, async-timeout, yarl, attrs\r\nRequired-by:\r\n```\r\n```console\r\n$ python -m pip show multidict\r\nName: multidict\r\nVersion: 4.7.6\r\nSummary: multidict implementation\r\nHome-page: https://github.com/aio-libs/multidict\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /usr/local/lib/python3.7/site-packages\r\nRequires: \r\nRequired-by: yarl, aiohttp\r\n```\r\n```console\r\n$ python -m pip show yarl\r\nName: yarl\r\nVersion: 1.4.2\r\nSummary: Yet another URL library\r\nHome-page: https://github.com/aio-libs/yarl/\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /usr/local/lib/python3.7/site-packages\r\nRequires: multidict, idna\r\nRequired-by: aiohttp\r\n```\r\n\r\n\ud83d\udccb **Additional context**\r\n- This issue is reproduced on macOS and Linux (Ubuntu).\r\n- This issue is reproduced both in Python's default event loop and uvloop.\r\n- I tried request from cURL with the same request header as Google Chrome, and the issue was reproduced.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4747", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4747/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4747/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4747/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4747", "id": 619464994, "node_id": "MDU6SXNzdWU2MTk0NjQ5OTQ=", "number": 4747, "title": "read_chunk wait forever when client aborts file uploading", "user": {"login": "yanxurui", "id": 12461110, "node_id": "MDQ6VXNlcjEyNDYxMTEw", "avatar_url": "https://avatars1.githubusercontent.com/u/12461110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yanxurui", "html_url": "https://github.com/yanxurui", "followers_url": "https://api.github.com/users/yanxurui/followers", "following_url": "https://api.github.com/users/yanxurui/following{/other_user}", "gists_url": "https://api.github.com/users/yanxurui/gists{/gist_id}", "starred_url": "https://api.github.com/users/yanxurui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yanxurui/subscriptions", "organizations_url": "https://api.github.com/users/yanxurui/orgs", "repos_url": "https://api.github.com/users/yanxurui/repos", "events_url": "https://api.github.com/users/yanxurui/events{/privacy}", "received_events_url": "https://api.github.com/users/yanxurui/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-16T12:40:56Z", "updated_at": "2020-05-23T12:23:29Z", "closed_at": "2020-05-23T12:23:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\n<!-- A clear and concise description of what the bug is, on the next line. -->\r\nWhen I am uploading files to the server using ajax,the server's `read_chunk` does not raise any exception when client ajax aborts. That is, the server's handler will wait foreever.\r\n\r\n\ud83d\udca1 **To Reproduce**\r\n<!-- How to reproduce the behavior?\r\nFor example:\r\n1. Have certain environment\r\n2. Run given code snippet in a certain way\r\n3. See some behavior described\r\n\r\nAdd these steps below this comment: -->\r\n\r\nQuickstart -> File Uploads\r\nhttps://docs.aiohttp.org/en/stable/web_quickstart.html#file-uploads\r\n\r\n\r\n\ud83d\udca1 **Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nAn exception should be raised\r\n\r\n\ud83d\udccb **Logs/tracebacks**\r\n<!-- If applicable, add logs/tracebacks to help explain your problem. -->\r\n```python-traceback (paste your traceback in the next line)\r\n\r\n```\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n<!-- Attach your version of the Python. -->\r\n```console\r\n$ python --version\r\nPython 3.8.1\r\n```\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n<!-- Attach your version of the distributions in the code blocks below. -->\r\n```console\r\n$ python -m pip show aiohttp\r\nName: aiohttp\r\nVersion: 3.6.2\r\nSummary: Async http client/server framework (asyncio)\r\nHome-page: https://github.com/aio-libs/aiohttp\r\nAuthor: Nikolay Kim\r\nAuthor-email: fafhrd91@gmail.com\r\nLicense: Apache 2\r\nLocation: /home/yxr/.pyenv/versions/3.8.1/lib/python3.8/site-packages\r\nRequires: attrs, chardet, async-timeout, yarl, multidict\r\nRequired-by: aiohttp-session, aiohttp-security, aiohttp-jinja2, aiohttpdemo-chat, snapfile\r\n```\r\n```console\r\n$ python -m pip show multidict\r\nName: multidict\r\nVersion: 4.7.5\r\nSummary: multidict implementation\r\nHome-page: https://github.com/aio-libs/multidict\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /home/yxr/.pyenv/versions/3.8.1/lib/python3.8/site-packages\r\nRequires: \r\nRequired-by: yarl, aiohttp\r\n```\r\n```console\r\n$ python -m pip show yarl\r\nName: yarl\r\nVersion: 1.4.2\r\nSummary: Yet another URL library\r\nHome-page: https://github.com/aio-libs/yarl/\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /home/yxr/.pyenv/versions/3.8.1/lib/python3.8/site-packages\r\nRequires: idna, multidict\r\nRequired-by: aiohttp\r\n```\r\n\r\n\ud83d\udccb **Additional context**\r\n<!-- Add any other context about the problem here, in the next line. -->\r\n\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case.\r\n\r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\nserver", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4745", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4745/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4745/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4745/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4745", "id": 618655580, "node_id": "MDU6SXNzdWU2MTg2NTU1ODA=", "number": 4745, "title": "Unclosed client session warning", "user": {"login": "hsshin9212", "id": 48025074, "node_id": "MDQ6VXNlcjQ4MDI1MDc0", "avatar_url": "https://avatars0.githubusercontent.com/u/48025074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsshin9212", "html_url": "https://github.com/hsshin9212", "followers_url": "https://api.github.com/users/hsshin9212/followers", "following_url": "https://api.github.com/users/hsshin9212/following{/other_user}", "gists_url": "https://api.github.com/users/hsshin9212/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsshin9212/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsshin9212/subscriptions", "organizations_url": "https://api.github.com/users/hsshin9212/orgs", "repos_url": "https://api.github.com/users/hsshin9212/repos", "events_url": "https://api.github.com/users/hsshin9212/events{/privacy}", "received_events_url": "https://api.github.com/users/hsshin9212/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-15T02:38:14Z", "updated_at": "2020-05-15T03:38:33Z", "closed_at": "2020-05-15T03:37:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\nWe see rare logs with error level ERROR saying Unclosed client session which is very hard to reproduce, during normal operation.\r\n\r\n\r\n\ud83d\udca1 **To Reproduce**\r\nRun below codes for a long time, at least few hours. The code is from my production application after removing all irrelevant codes.\r\n```\r\nimport aiohttp\r\nimport asyncio\r\n\r\nURL = \"Some URL\"\r\n\r\n\r\nclass Client:\r\n    def __init__(self):\r\n        self._session = aiohttp.ClientSession()\r\n\r\n    async def get(self, url: str):\r\n        async with self._session.get(url) as response:\r\n            assert response.status == 200\r\n            return await response.text()\r\n\r\n    async def close(self):\r\n        await self._session.close()\r\n\r\n\r\nasync def main():\r\n    client = Client()\r\n\r\n    try:\r\n        while True:\r\n            data = await client.get(URL)\r\n            await asyncio.sleep(10)\r\n\r\n    finally:\r\n        await client.close()\r\n\r\n\r\nif __name__ == '__main__':\r\n    asyncio.run(main())\r\n```\r\n\r\n\r\n\ud83d\udca1 **Expected behavior**\r\nNo log\r\n\r\n\r\n\ud83d\udccb **Logs/tracebacks**\r\nUnclosed client session\r\nclient_session: <aiohttp.client.ClientSession object at 0x7ffb55b20d90>\"\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n<!-- Attach your version of the Python. -->\r\n```console\r\n$ python --version\r\nPython 3.8.2\r\n...\r\n```\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n<!-- Attach your version of the distributions in the code blocks below. -->\r\n```console\r\n$ python -m pip show aiohttp\r\nName: aiohttp\r\nVersion: 3.6.2\r\nSummary: Async http client/server framework (asyncio)\r\nHome-page: https://github.com/aio-libs/aiohttp\r\nAuthor: Nikolay Kim\r\nAuthor-email: fafhrd91@gmail.com\r\nLicense: Apache 2\r\nLocation: /home/ec2-user/anaconda3/envs/py38/lib/python3.8/site-packages\r\nRequires: yarl, multidict, async-timeout, attrs, chardet\r\nRequired-by: slackclient\r\n```\r\n```console\r\n$ python -m pip show multidict\r\nName: multidict\r\nVersion: 4.7.5\r\nSummary: multidict implementation\r\nHome-page: https://github.com/aio-libs/multidict\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /home/ec2-user/anaconda3/envs/py38/lib/python3.8/site-packages\r\nRequires:\r\nRequired-by: yarl, aiohttp\r\n```\r\n```console\r\n$ python -m pip show yarl\r\nName: yarl\r\nVersion: 1.4.2\r\nSummary: Yet another URL library\r\nHome-page: https://github.com/aio-libs/yarl/\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /home/ec2-user/anaconda3/envs/py38/lib/python3.8/site-packages\r\nRequires: multidict, idna\r\nRequired-by: aiohttp\r\n```\r\n\r\n\ud83d\udccb **OS**\r\nNAME=\"Amazon Linux\"\r\nVERSION=\"2\"\r\nID=\"amzn\"\r\nID_LIKE=\"centos rhel fedora\"\r\nVERSION_ID=\"2\"\r\nPRETTY_NAME=\"Amazon Linux 2\"\r\nANSI_COLOR=\"0;33\"\r\nCPE_NAME=\"cpe:2.3:o:amazon:amazon_linux:2\"\r\nHOME_URL=\"https://amazonlinux.com/\"\r\nAmazon Linux release 2 (Karoo)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4727", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4727/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4727/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4727/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4727", "id": 614201749, "node_id": "MDU6SXNzdWU2MTQyMDE3NDk=", "number": 4727, "title": "TooManyRedirects Exception from aiohttp through Proxy but works in cURL", "user": {"login": "bokklu", "id": 26428189, "node_id": "MDQ6VXNlcjI2NDI4MTg5", "avatar_url": "https://avatars1.githubusercontent.com/u/26428189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bokklu", "html_url": "https://github.com/bokklu", "followers_url": "https://api.github.com/users/bokklu/followers", "following_url": "https://api.github.com/users/bokklu/following{/other_user}", "gists_url": "https://api.github.com/users/bokklu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bokklu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bokklu/subscriptions", "organizations_url": "https://api.github.com/users/bokklu/orgs", "repos_url": "https://api.github.com/users/bokklu/repos", "events_url": "https://api.github.com/users/bokklu/events{/privacy}", "received_events_url": "https://api.github.com/users/bokklu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-07T16:50:41Z", "updated_at": "2020-05-07T19:34:37Z", "closed_at": "2020-05-07T19:34:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\nExplanation should be straight forward. All I am trying to do is to website in my case http://example.com via an HTTP proxy via the aiohttp package. Through this package it doesn't seem to work and I am getting TooManyRedirects exception. Strangely enough, I tried the same connect in cURL cmd on windows, and it works every time.\r\n\r\nThis behaviour only happens on some proxies, but I find it strange that these set of proxies work manually from curl but not from aiohttp. Am I maybe missing something?\r\n\r\nPython Exception Example:\r\n![image](https://user-images.githubusercontent.com/26428189/81320937-38c0b600-9092-11ea-80cb-f5b1bd3660e8.png)\r\n\r\ncURL cmd Example:\r\n![image](https://user-images.githubusercontent.com/26428189/81320961-41b18780-9092-11ea-8288-6928e08cbfe8.png)\r\n\r\n\r\nTried on both Python 3.8.2 and Python 3.7.x and it resulted in the same exception.\r\naiohttp version: 3.6.2\r\nasyncio version: 3.4.3\r\nPlatform: Windows 10\r\n\r\nSimilar proxies which have the same behaviour where they work on cURL but fail in aiohttp:\r\n188.226.141.211:3128\r\n5.252.161.48:8080\r\n188.166.83.17:8080\r\n154.16.202.22:8080\r\n188.226.141.211:3128\r\n188.226.141.211:8080\r\n5.252.161.48:3128\r\n\r\n(I can provide more if needed)\r\n\r\n\ud83d\udca1 **To Reproduce**\r\nRun the given script:\r\n\r\n\r\n```\r\nimport asyncio\r\nimport aiohttp\r\nimport async_timeout\r\n\r\n\r\nasync def check_http():\r\n    async with aiohttp.ClientSession() as session:\r\n        try:\r\n            async with async_timeout.timeout(8):\r\n                async with session.get('http://example.com', proxy=f'http://207.154.231.213:8080') as response:\r\n                    await response\r\n        except Exception as ex:\r\n            print(ex)\r\n\r\n\r\nasync def fetch():\r\n    tasks = []\r\n    for i in range(100):\r\n        tasks.append(asyncio.create_task(check_http()))\r\n\r\n    await asyncio.gather(*tasks)\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(fetch())\r\n```\r\n\r\n\r\n\ud83d\udca1 **Expected behavior**\r\nI expected that the connection in aiohttp would return a status 200 OK .\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n\r\n`Python 3.8.2`\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n...\r\nName: aiohttp\r\nVersion: 3.6.2\r\nSummary: Async http client/server framework (asyncio)\r\nHome-page: https://github.com/aio-libs/aiohttp\r\nAuthor: Nikolay Kim\r\nAuthor-email: fafhrd91@gmail.com\r\nLicense: Apache 2\r\nLocation: e:\\applications\\python 3.8\\lib\\site-packages\r\nRequires: async-timeout, attrs, yarl, multidict, chardet\r\nRequired-by: aiosocks\r\n\r\nName: multidict\r\nVersion: 4.7.5\r\nSummary: multidict implementation\r\nHome-page: https://github.com/aio-libs/multidict\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: e:\\applications\\python 3.8\\lib\\site-packages\r\nRequires:\r\nRequired-by: yarl, aiohttp\r\n\r\nName: yarl\r\nVersion: 1.4.2\r\nSummary: Yet another URL library\r\nHome-page: https://github.com/aio-libs/yarl/\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: e:\\applications\\python 3.8\\lib\\site-packages\r\nRequires: idna, multidict\r\nRequired-by: aiohttp\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4695", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4695/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4695/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4695/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4695", "id": 601808827, "node_id": "MDU6SXNzdWU2MDE4MDg4Mjc=", "number": 4695, "title": "Unable to patch with decorator using unittest_run_loop", "user": {"login": "WisdomPill", "id": 5825811, "node_id": "MDQ6VXNlcjU4MjU4MTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/5825811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WisdomPill", "html_url": "https://github.com/WisdomPill", "followers_url": "https://api.github.com/users/WisdomPill/followers", "following_url": "https://api.github.com/users/WisdomPill/following{/other_user}", "gists_url": "https://api.github.com/users/WisdomPill/gists{/gist_id}", "starred_url": "https://api.github.com/users/WisdomPill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WisdomPill/subscriptions", "organizations_url": "https://api.github.com/users/WisdomPill/orgs", "repos_url": "https://api.github.com/users/WisdomPill/repos", "events_url": "https://api.github.com/users/WisdomPill/events{/privacy}", "received_events_url": "https://api.github.com/users/WisdomPill/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-17T08:48:03Z", "updated_at": "2020-04-20T19:46:29Z", "closed_at": "2020-04-20T19:46:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\n\r\npatch using decorators is not possible while using unittest_run_loop, \r\nto overcome this issue patching with context manager is needed, it can be a real pain to do it multiple times in the same test case. The arguments are not passed to the unittest test case method.\r\n\r\n\r\n\ud83d\udca1 **To Reproduce**\r\n\r\n```python\r\nfrom unittest.mock import patch\r\n\r\nfrom aiohttp.test_utils import AioHTTPTestCase, make_mocked_coro, unittest_run_loop\r\nfrom aiohttp.web_app import Application\r\nfrom aiohttp.web_request import Request\r\nfrom aiohttp.web_response import Response\r\nfrom aiohttp.web_routedef import get\r\n\r\n\r\nasync def do_something():\r\n    print('something')\r\n\r\n\r\nasync def ping(request: Request) -> Response:\r\n    await do_something()\r\n    return Response(text='pong')\r\n\r\n\r\nclass TestApplication(AioHTTPTestCase):\r\n    def get_app(self) -> Application:\r\n        app = Application()\r\n        app.router.add_routes([\r\n            get('/ping/', ping)\r\n        ])\r\n\r\n        return app\r\n\r\n    @unittest_run_loop\r\n    async def test_ping(self):\r\n        resp = await self.client.get('/ping/')\r\n\r\n        self.assertEqual(resp.status, 200)\r\n        self.assertEqual(await resp.text(), 'pong')\r\n\r\n    @unittest_run_loop\r\n    async def test_ping_mocked_do_something(self):\r\n        with patch('test_bug.do_something', make_mocked_coro()) as do_something_patch:\r\n            resp = await self.client.get('/ping/')\r\n\r\n            self.assertEqual(resp.status, 200)\r\n            self.assertEqual(await resp.text(), 'pong')\r\n\r\n            self.assertTrue(do_something_patch.called)\r\n\r\n    @unittest_run_loop\r\n    @patch('test_bug.do_something', make_mocked_coro())\r\n    async def test_ping_mocked_do_something_decorated(self, do_something_patch):\r\n        resp = await self.client.get('/ping/')\r\n\r\n        self.assertEqual(resp.status, 200)\r\n        self.assertEqual(await resp.text(), 'pong')\r\n\r\n        self.assertTrue(do_something_patch.called)\r\n\r\n```\r\n\r\n\ud83d\udca1 **Expected behavior**\r\n\r\nI expect to be able to use decorators to patch or mock a module/function\r\n\r\n\ud83d\udccb **Logs/tracebacks**\r\n<!-- If applicable, add logs/tracebacks to help explain your problem. -->\r\n```python-traceback (paste your traceback in the next line)\r\nsomething\r\n\r\n\r\nRan 3 tests in 0.080s\r\n\r\nFAILED (errors=1)\r\n\r\nError\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py\", line 59, in testPartExecutor\r\n    yield\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/case.py\", line 628, in run\r\n    testMethod()\r\n  File \"/Users/anas/.envs/timing_router/lib/python3.7/site-packages/aiohttp/test_utils.py\", line 488, in new_func\r\n    func(self, *inner_args, **inner_kwargs))\r\n  File \"/usr/local/Cellar/python/3.7.6_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/unittest/mock.py\", line 1255, in patched\r\n    return func(*args, **keywargs)\r\nTypeError: test_ping_mocked_do_something_decorated() missing 1 required positional argument: 'do_something_patch'\r\n\r\n```\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n\r\n```console\r\n$ python --version\r\nPython 3.7.6\r\n```\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n\r\n```console\r\n$ python -m pip show aiohttp\r\nName: aiohttp\r\nVersion: 3.6.2\r\nSummary: Async http client/server framework (asyncio)\r\nHome-page: https://github.com/aio-libs/aiohttp\r\nAuthor: Nikolay Kim\r\nAuthor-email: fafhrd91@gmail.com\r\nLicense: Apache 2\r\nLocation: /Users/anas/.envs/timing_router/lib/python3.7/site-packages\r\nRequires: chardet, yarl, attrs, multidict, async-timeout\r\nRequired-by: \r\n```\r\n```console\r\n$ python -m pip show multidict\r\nName: multidict\r\nVersion: 4.7.5\r\nSummary: multidict implementation\r\nHome-page: https://github.com/aio-libs/multidict\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /Users/anas/.envs/timing_router/lib/python3.7/site-packages\r\nRequires: \r\nRequired-by: yarl, aiohttp\r\n```\r\n```console\r\n$ python -m pip show yarl\r\nName: yarl\r\nVersion: 1.4.2\r\nSummary: Yet another URL library\r\nHome-page: https://github.com/aio-libs/yarl/\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /Users/anas/.envs/timing_router/lib/python3.7/site-packages\r\nRequires: idna, multidict\r\nRequired-by: aiohttp\r\n```\r\n\r\n\ud83d\udccb **Additional context**\r\n<!-- Add any other context about the problem here, in the next line. -->\r\n\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case.\r\n\r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\nmacOS catalina\r\naiohttp - server", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4694", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4694/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4694/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4694/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4694", "id": 600782137, "node_id": "MDU6SXNzdWU2MDA3ODIxMzc=", "number": 4694, "title": "Event loop closed error comes when trying to get multiple requests", "user": {"login": "HarsheetKakar", "id": 42893005, "node_id": "MDQ6VXNlcjQyODkzMDA1", "avatar_url": "https://avatars2.githubusercontent.com/u/42893005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HarsheetKakar", "html_url": "https://github.com/HarsheetKakar", "followers_url": "https://api.github.com/users/HarsheetKakar/followers", "following_url": "https://api.github.com/users/HarsheetKakar/following{/other_user}", "gists_url": "https://api.github.com/users/HarsheetKakar/gists{/gist_id}", "starred_url": "https://api.github.com/users/HarsheetKakar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HarsheetKakar/subscriptions", "organizations_url": "https://api.github.com/users/HarsheetKakar/orgs", "repos_url": "https://api.github.com/users/HarsheetKakar/repos", "events_url": "https://api.github.com/users/HarsheetKakar/events{/privacy}", "received_events_url": "https://api.github.com/users/HarsheetKakar/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 344995986, "node_id": "MDU6TGFiZWwzNDQ5OTU5ODY=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/client", "name": "client", "color": "bfd4f2", "default": false, "description": null}, {"id": 1831255463, "node_id": "MDU6TGFiZWwxODMxMjU1NDYz", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/reproducer:%20missing", "name": "reproducer: missing", "color": "e23c36", "default": false, "description": "This PR or issue lacks code, which reproduce the problem described or clearly understandable STR"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-04-16T06:30:40Z", "updated_at": "2020-04-28T11:31:21Z", "closed_at": "2020-04-28T11:31:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\n<!-- A clear and concise description of what the bug is, on the next line. -->\r\nI tried using `gather` instead of `wait` the result was same\r\n\ud83d\udca1 **To Reproduce**\r\n```python\r\nimport asyncio\r\nimport aiohttp\r\n\r\nasync def fetch(session, url):\r\n    async with session.get(\r\n            url) as resp:\r\n        print(resp.status)\r\n        data = await resp.text()\r\n        return (data)\r\n\r\nasync def go():\r\n    async with aiohttp.ClientSession() as session:\r\n        return await fetch(session, 'https://www.google.com/')\r\n\r\nasync def now():\r\n    async with aiohttp.ClientSession() as session:\r\n        return await fetch(session, 'https://www.google.com/')\r\n\r\n\r\nloop = asyncio.new_event_loop()\r\ncoroutine1 = go()\r\ncoroutine2 = now()\r\ntask1 = loop.create_task(coroutine1)\r\ntask2 = loop.create_task(coroutine2)\r\nloop.run_until_complete(asyncio.wait([task1, task2]))\r\nprint('task1 result:', task1.result())\r\nprint('task2 result:', task2.result())\r\nloop.close()\r\n```\r\n<!-- How to reproduce the behavior?\r\n\r\nFor example:\r\n1. Have certain environment\r\n2. Run given code snippet in a certain way\r\n3. See some behavior described\r\n\r\nAdd these steps below this comment: -->\r\n\r\n\r\n\ud83d\udca1 **Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nNo error\r\n\r\n\ud83d\udccb **Logs/tracebacks**\r\n<!-- If applicable, add logs/tracebacks to help explain your problem. -->\r\n```python-traceback (paste your traceback in the next line)\r\nTraceback (most recent call last):\r\nFile \"C:\\Users\\Hitman\\AppData\\Local\\Programs\\Python\\Python38\\lib\\asyncio\\proactor_events.py\", line 116, in del\r\nself.close()\r\nFile \"C:\\Users\\Hitman\\AppData\\Local\\Programs\\Python\\Python38\\lib\\asyncio\\proactor_events.py\", line 108, in close\r\nself._loop.call_soon(self._call_connection_lost, None)\r\nFile \"C:\\Users\\Hitman\\AppData\\Local\\Programs\\Python\\Python38\\lib\\asyncio\\base_events.py\", line 719, in call_soon\r\nself._check_closed()\r\nFile \"C:\\Users\\Hitman\\AppData\\Local\\Programs\\Python\\Python38\\lib\\asyncio\\base_events.py\", line 508, in _check_closed\r\nraise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\n```\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n<!-- Attach your version of the Python. -->\r\n```console\r\n$ python --version\r\nPython 3.8.2\r\n```\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n<!-- Attach your version of the distributions in the code blocks below. -->\r\n```console\r\n$ python -m pip show aiohttp\r\nName: aiohttp\r\nVersion: 3.6.2\r\nSummary: Async http client/server framework (asyncio)\r\nHome-page: https://github.com/aio-libs/aiohttp\r\nAuthor: Nikolay Kim\r\nAuthor-email: fafhrd91@gmail.com\r\nLicense: Apache 2\r\nLocation: c:\\users\\hitman\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\r\nRequires: yarl, chardet, attrs, async-timeout, multidict\r\nRequired-by:\r\n```\r\n\r\n```console\r\n$ python -m pip show multidict\r\nName: aiohttp\r\nVersion: 3.0.9\r\nSummary: Async http client/server framework (asyncio)\r\nHome-page: https://github.com/aio-libs/aiohttp/\r\nAuthor: Nikolay Kim\r\nAuthor-email: fafhrd91@gmail.com\r\nLicense: Apache 2\r\nLocation: d:\\projects\\asyncio\\venv\\lib\\site-packages\r\nRequires: attrs, chardet, async-timeout, multidict, yarl\r\nRequired-by:\r\n```\r\n```console\r\n$ python -m pip show yarl\r\nName: yarl\r\nVersion: 1.4.2\r\nSummary: Yet another URL library\r\nHome-page: https://github.com/aio-libs/yarl/\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: d:\\projects\\asyncio\\venv\\lib\\site-packages\r\nRequires: idna, multidict\r\nRequired-by: aiohttp\r\n```\r\n\r\n\ud83d\udccb **Additional context**\r\n<!-- Add any other context about the problem here, in the next line. -->\r\n\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case.\r\n\r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4663", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4663/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4663/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4663/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4663", "id": 588194719, "node_id": "MDU6SXNzdWU1ODgxOTQ3MTk=", "number": 4663, "title": "RouteTableDef can't register OPTIONS request handlers", "user": {"login": "meetmangukiya", "id": 7620533, "node_id": "MDQ6VXNlcjc2MjA1MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7620533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meetmangukiya", "html_url": "https://github.com/meetmangukiya", "followers_url": "https://api.github.com/users/meetmangukiya/followers", "following_url": "https://api.github.com/users/meetmangukiya/following{/other_user}", "gists_url": "https://api.github.com/users/meetmangukiya/gists{/gist_id}", "starred_url": "https://api.github.com/users/meetmangukiya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meetmangukiya/subscriptions", "organizations_url": "https://api.github.com/users/meetmangukiya/orgs", "repos_url": "https://api.github.com/users/meetmangukiya/repos", "events_url": "https://api.github.com/users/meetmangukiya/events{/privacy}", "received_events_url": "https://api.github.com/users/meetmangukiya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-26T06:48:08Z", "updated_at": "2020-03-26T12:34:49Z", "closed_at": "2020-03-26T12:34:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\nCurrently it gives an AttributeError: 'RouteTableDef' object has no attribute 'options'\r\n\r\n\ud83d\udca1 **To Reproduce**\r\n\r\n```py\r\n@route.options('/path')\r\ndef opts(request):\r\n   ...\r\n```\r\n\r\n\ud83d\udca1 **Expected behavior**\r\nIt should register decorated function as the OPTIONS request handler for that path", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4657", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4657/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4657/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4657/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4657", "id": 586571409, "node_id": "MDU6SXNzdWU1ODY1NzE0MDk=", "number": 4657, "title": "how to config `max_field_size` on server side", "user": {"login": "bmbouter", "id": 180319, "node_id": "MDQ6VXNlcjE4MDMxOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/180319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bmbouter", "html_url": "https://github.com/bmbouter", "followers_url": "https://api.github.com/users/bmbouter/followers", "following_url": "https://api.github.com/users/bmbouter/following{/other_user}", "gists_url": "https://api.github.com/users/bmbouter/gists{/gist_id}", "starred_url": "https://api.github.com/users/bmbouter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bmbouter/subscriptions", "organizations_url": "https://api.github.com/users/bmbouter/orgs", "repos_url": "https://api.github.com/users/bmbouter/repos", "events_url": "https://api.github.com/users/bmbouter/events{/privacy}", "received_events_url": "https://api.github.com/users/bmbouter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 303800438, "node_id": "MDU6TGFiZWwzMDM4MDA0Mzg=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/need%20pull%20request", "name": "need pull request", "color": "bfdadc", "default": false, "description": null}, {"id": 1831255463, "node_id": "MDU6TGFiZWwxODMxMjU1NDYz", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/reproducer:%20missing", "name": "reproducer: missing", "color": "e23c36", "default": false, "description": "This PR or issue lacks code, which reproduce the problem described or clearly understandable STR"}, {"id": 344996043, "node_id": "MDU6TGFiZWwzNDQ5OTYwNDM=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/server", "name": "server", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-23T22:58:22Z", "updated_at": "2020-03-25T13:42:15Z", "closed_at": "2020-03-25T13:42:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\n<!-- A clear and concise description of what the bug is, on the next line. -->\r\nI tried to configure `max_field_size` using the docs for make_handler. I understand it's deprecated, but I'm not sure what is replacing it.\r\n\r\n\ud83d\udca1 **To Reproduce**\r\n\r\nSay you want to set it to 9000. I've tried two ways:\r\n\r\n1. I tried adding it using the handler_args, and in my testing this still raises the exception when I submit a header larger than 8190 bytes (the default)\r\n\r\n```\r\napp = web.Application(handler_args={'max_line_size': 9000})\r\n```\r\n\r\n2. I also tried calling app.make_handler explicitly which completes but then my app.add_route calls fail complaining of a frozen router\r\n\r\nSpecifically I have: \r\n\r\n```\r\napp = web.Application()\r\napp.make_handler(max_line_size=9000)\r\n```\r\n\r\nWon't start and raises this exception:\r\n\r\n```\r\n[2020-03-23 22:55:06 +0000] [38721] [ERROR] Exception in gunicorn worker\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/pulp/lib64/python3.7/site-packages/aiohttp/worker.py\", line 58, in run\r\n    self.loop.run_until_complete(self._task)\r\n  File \"/usr/lib64/python3.7/asyncio/base_events.py\", line 583, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/local/lib/pulp/lib64/python3.7/site-packages/aiohttp/worker.py\", line 71, in _run\r\n    app = await self.wsgi()\r\n  File \"/home/vagrant/devel/pulpcore/pulpcore/content/__init__.py\", line 52, in server\r\n    app.add_routes([web.get(settings.CONTENT_PATH_PREFIX, Handler().list_distributions)])\r\n  File \"/usr/local/lib/pulp/lib64/python3.7/site-packages/aiohttp/web_app.py\", line 314, in add_routes\r\n    self.router.add_routes(routes)\r\n  File \"/usr/local/lib/pulp/lib64/python3.7/site-packages/aiohttp/web_urldispatcher.py\", line 1135, in add_routes\r\n    route_def.register(self)\r\n  File \"/usr/local/lib/pulp/lib64/python3.7/site-packages/aiohttp/web_routedef.py\", line 65, in register\r\n    reg(self.path, self.handler, **self.kwargs)\r\n  File \"/usr/local/lib/pulp/lib64/python3.7/site-packages/aiohttp/web_urldispatcher.py\", line 1084, in add_get\r\n    resource = self.add_resource(path, name=name)\r\n  File \"/usr/local/lib/pulp/lib64/python3.7/site-packages/aiohttp/web_urldispatcher.py\", line 1023, in add_resource\r\n    self.register_resource(resource)\r\n  File \"/usr/local/lib/pulp/lib64/python3.7/site-packages/aiohttp/web_urldispatcher.py\", line 992, in register_resource\r\n    \"Cannot register a resource into frozen router.\")\r\nRuntimeError: Cannot register a resource into frozen router.\r\n```\r\n\r\n\r\n\ud83d\udca1 **Expected behavior**\r\nI expect some reasonable documented way to configure max_line_size.\r\n\r\nPython 3.7.6 on Fedora 31. I am using aiohttp==3.6.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4656", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4656/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4656/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4656/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4656", "id": 585994688, "node_id": "MDU6SXNzdWU1ODU5OTQ2ODg=", "number": 4656, "title": "aiohttp.pytest_plugin suppresses all the warnings", "user": {"login": "vitek", "id": 489439, "node_id": "MDQ6VXNlcjQ4OTQzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/489439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitek", "html_url": "https://github.com/vitek", "followers_url": "https://api.github.com/users/vitek/followers", "following_url": "https://api.github.com/users/vitek/following{/other_user}", "gists_url": "https://api.github.com/users/vitek/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitek/subscriptions", "organizations_url": "https://api.github.com/users/vitek/orgs", "repos_url": "https://api.github.com/users/vitek/repos", "events_url": "https://api.github.com/users/vitek/events{/privacy}", "received_events_url": "https://api.github.com/users/vitek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 303800438, "node_id": "MDU6TGFiZWwzMDM4MDA0Mzg=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/need%20pull%20request", "name": "need pull request", "color": "bfdadc", "default": false, "description": null}, {"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-23T07:37:27Z", "updated_at": "2020-03-26T21:01:53Z", "closed_at": "2020-03-26T21:01:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\n<!-- A clear and concise description of what the bug is, on the next line. -->\r\n\r\n`aiohttp.pytest_plugin` suppresses warnings issued from test. It looks like _runtime_warning_context() catches all the warnings so no warning reaches pytest.warnings plugin.\r\n\r\n\ud83d\udca1 **To Reproduce**\r\n<!-- How to reproduce the behavior?\r\n\r\nFor example:\r\n1. Have certain environment\r\n2. Run given code snippet in a certain way\r\n3. See some behavior described\r\n\r\nAdd these steps below this comment: -->\r\n\r\nSimple testcase that shows how pytest works with warnings. It would print warning for test_foo only.\r\n\r\n```python\r\nimport warnings\r\n\r\ndef test_foo():\r\n    warnings.warn('sync warning')\r\n\r\n\r\nasync def test_afoo():\r\n    warnings.warn('async warning')\r\n```\r\n\r\n\r\n\ud83d\udca1 **Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\npytest catches warning.\r\n\r\n\ud83d\udccb **Logs/tracebacks**\r\n<!-- If applicable, add logs/tracebacks to help explain your problem. -->\r\n```python-traceback (paste your traceback in the next line)\r\n========================= test session starts ==========================\r\nplatform linux -- Python 3.7.3, pytest-5.3.5, py-1.8.1, pluggy-0.13.1 -- python3.7\r\ncachedir: .pytest_cache\r\nrootdir: ..., inifile: pytest.ini\r\nplugins: aiohttp-0.3.0\r\ncollected 2 items                                                      \r\n\r\ntests/test_foo.py::test_foo PASSED\r\ntests/test_foo.py::test_afoo \r\nPASSED\r\n\r\n=========================== warnings summary ===========================\r\ntests/test_foo.py::test_foo\r\n  test_foo.py:4: UserWarning: sync warning\r\n    warnings.warn('sync warning')\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n===================== 2 passed, 1 warning in 0.02s =====================\r\n\r\n```\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n<!-- Attach your version of the Python. -->\r\n```console\r\n$ python --version\r\nPython 3.7.3\r\n```\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n<!-- Attach your version of the distributions in the code blocks below. -->\r\n```console\r\n$ python -m pip show aiohttp\r\nName: aiohttp\r\nVersion: 3.6.2\r\nSummary: Async http client/server framework (asyncio)\r\nHome-page: https://github.com/aio-libs/aiohttp\r\nAuthor: Nikolay Kim\r\nAuthor-email: fafhrd91@gmail.com\r\nLicense: Apache 2\r\nLocation: /home/vitja/work/testsuite/.venv-docs/lib/python3.7/site-packages\r\nRequires: yarl, multidict, chardet, attrs, async-timeout\r\nRequired-by: testsuite, pytest-aiohttp\r\n```\r\n```console\r\n$ python -m pip show multidict\r\nName: multidict\r\nVersion: 4.7.5\r\nSummary: multidict implementation\r\nHome-page: https://github.com/aio-libs/multidict\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /home/vitja/work/testsuite/.venv-docs/lib/python3.7/site-packages\r\nRequires: \r\nRequired-by: yarl, aiohttp\r\n```\r\n```console\r\n$ python -m pip show yarl\r\nName: yarl\r\nVersion: 1.4.2\r\nSummary: Yet another URL library\r\nHome-page: https://github.com/aio-libs/yarl/\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /home/vitja/work/testsuite/.venv-docs/lib/python3.7/site-packages\r\nRequires: idna, multidict\r\nRequired-by: aiohttp\r\n```\r\n\r\n\ud83d\udccb **Additional context**\r\n<!-- Add any other context about the problem here, in the next line. -->\r\n\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case.\r\n\r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4649", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4649/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4649/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4649/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4649", "id": 584282986, "node_id": "MDU6SXNzdWU1ODQyODI5ODY=", "number": 4649, "title": "TCPSite bind address 0.0.0.0 response 406 error", "user": {"login": "Junior-Lv", "id": 26768946, "node_id": "MDQ6VXNlcjI2NzY4OTQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/26768946?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Junior-Lv", "html_url": "https://github.com/Junior-Lv", "followers_url": "https://api.github.com/users/Junior-Lv/followers", "following_url": "https://api.github.com/users/Junior-Lv/following{/other_user}", "gists_url": "https://api.github.com/users/Junior-Lv/gists{/gist_id}", "starred_url": "https://api.github.com/users/Junior-Lv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Junior-Lv/subscriptions", "organizations_url": "https://api.github.com/users/Junior-Lv/orgs", "repos_url": "https://api.github.com/users/Junior-Lv/repos", "events_url": "https://api.github.com/users/Junior-Lv/events{/privacy}", "received_events_url": "https://api.github.com/users/Junior-Lv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986078, "node_id": "MDU6TGFiZWw1ODk4NjA3OA==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 1831255463, "node_id": "MDU6TGFiZWwxODMxMjU1NDYz", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/reproducer:%20missing", "name": "reproducer: missing", "color": "e23c36", "default": false, "description": "This PR or issue lacks code, which reproduce the problem described or clearly understandable STR"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T09:41:03Z", "updated_at": "2020-03-19T20:32:48Z", "closed_at": "2020-03-19T20:32:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\nTCPSite bind address 0.0.0.0 response 406 error\r\n\r\n\r\n\ud83d\udca1 **To Reproduce**\r\nThis is my demo code\r\n\r\n```python3\r\nclass DemoHandler(web.View):\r\n    async def get(self):\r\n        return Response(text=\"hi\")\r\n\r\n\r\nasync def main():\r\n    app = web.Application()\r\n    app.add_routes([web.view(\"/\", DemoHandler)])\r\n    runner = web.AppRunner(app)\r\n    await runner.setup()\r\n    site = web.TCPSite(runner, \"0.0.0.0\", 8400)\r\n    await site.start()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4648", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4648/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4648/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4648/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4648", "id": 584174984, "node_id": "MDU6SXNzdWU1ODQxNzQ5ODQ=", "number": 4648, "title": "ws_connect doesn't follow proxy from environment", "user": {"login": "lookis", "id": 445022, "node_id": "MDQ6VXNlcjQ0NTAyMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/445022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lookis", "html_url": "https://github.com/lookis", "followers_url": "https://api.github.com/users/lookis/followers", "following_url": "https://api.github.com/users/lookis/following{/other_user}", "gists_url": "https://api.github.com/users/lookis/gists{/gist_id}", "starred_url": "https://api.github.com/users/lookis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lookis/subscriptions", "organizations_url": "https://api.github.com/users/lookis/orgs", "repos_url": "https://api.github.com/users/lookis/repos", "events_url": "https://api.github.com/users/lookis/events{/privacy}", "received_events_url": "https://api.github.com/users/lookis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-19T05:36:56Z", "updated_at": "2020-03-26T09:55:45Z", "closed_at": "2020-03-26T09:55:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\n<!-- A clear and concise description of what the bug is, on the next line. -->\r\nI have set both http_proxy and https_proxy, with trust_env=True when create ClientSession,\r\neverything is ok when get or post with this session, but for the ws_connect, It doesn't run with proxy.\r\n\r\n\ud83d\udca1 **To Reproduce**\r\n<!-- How to reproduce the behavior? \r\nFor example:\r\n1. Have certain environment\r\n2. Run given code snippet in a certain way\r\n3. See some behavior described\r\n\r\nAdd these steps below this comment: -->\r\nbackground: I cann't visit wss://stream.binance.com:9443/ws under my network but it's ok with proxy\r\n1. prepare a proxy at port 1086\r\n1. http_proxy=\"http://127.0.0.1:1086\"\r\n2. https_proxy=\"https://127.0.0.1:1086\"\r\n\r\n``` python\r\nimport asyncio\r\nimport aiohttp\r\nasync def main():\r\n    async with aiohttp.ClientSession(trust_env=True) as client:\r\n        await client.ws_connect('wss://stream.binance.com:9443/ws')\r\n        print('ok')\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(main())\r\n\r\n```\r\nand it block forever (with a tcp handshake timeout exception)\r\n\r\n\r\n\ud83d\udca1 **Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\njust connect with proxy\r\n\r\n\ud83d\udccb **Logs/tracebacks**\r\n<!-- If applicable, add logs/tracebacks to help explain your problem. -->\r\n```python-traceback (paste your traceback in the next line)\r\n\r\n```\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n<!-- Attach your version of the Python. -->\r\n```console\r\n$ python --version\r\nPython 3.7.6\r\n```\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n<!-- Attach your version of the distributions in the code blocks below. -->\r\n```console\r\n$ python -m pip show aiohttp\r\nVersion: 3.6.2\r\n```\r\n```console\r\n$ python -m pip show multidict\r\nVersion: 4.7.5\r\n```\r\n```console\r\n$ python -m pip show yarl\r\nVersion: 1.1.0\r\n```\r\n\r\n\ud83d\udccb **Additional context**\r\n<!-- Add any other context about the problem here, in the next line. -->\r\nhttps://github.com/aio-libs/aiohttp/blob/bb7a4eaf21782612cc4c24fa75b9368ddb204cc7/aiohttp/client.py#L426\r\nscheme of websocket is ws or wss, url.scheme will always be http or https and ignore any other proxy here \r\nhttps://github.com/aio-libs/aiohttp/blob/bb7a4eaf21782612cc4c24fa75b9368ddb204cc7/aiohttp/helpers.py#L232\r\n\r\nbut it's ok for ws/wss to use http proxy\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case.\r\n\r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4627", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4627/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4627/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4627/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4627", "id": 580553057, "node_id": "MDU6SXNzdWU1ODA1NTMwNTc=", "number": 4627, "title": "`aiohttp.ClientSession().get()` takes around 30secs to make a request to `localhost` (unlike `127.0.0.1`)", "user": {"login": "Joacchim", "id": 404509, "node_id": "MDQ6VXNlcjQwNDUwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/404509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Joacchim", "html_url": "https://github.com/Joacchim", "followers_url": "https://api.github.com/users/Joacchim/followers", "following_url": "https://api.github.com/users/Joacchim/following{/other_user}", "gists_url": "https://api.github.com/users/Joacchim/gists{/gist_id}", "starred_url": "https://api.github.com/users/Joacchim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Joacchim/subscriptions", "organizations_url": "https://api.github.com/users/Joacchim/orgs", "repos_url": "https://api.github.com/users/Joacchim/repos", "events_url": "https://api.github.com/users/Joacchim/events{/privacy}", "received_events_url": "https://api.github.com/users/Joacchim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-13T11:53:01Z", "updated_at": "2020-03-13T14:48:07Z", "closed_at": "2020-03-13T14:48:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\n\r\nThis bug was observed on isolated servers we were preparing for soon-to-be production (ie: There's network setup, with isolation etc., but I don't have all the details at hand, though I can ask if it sounds relevant).\r\n\r\nWhen using `localhost` instead of an ip (ie `127.0.0.1`) to make an async request to a \"local\" HTTP server, we're observing very odd behaviors, such as a very long time to connect to the server and run the request.\r\n\r\nIn our situation, we're reaching out to a data-providing server through a HAProxy, but I do not think it is relevant to this issue, as I could reproduce it with a simple `python3 -m http.server` as the local HTTP server.\r\n\r\nSwitching our configurations from `localhost` to `127.0.0.1` solved the issue, and fixed any odd behavior previously observed.\r\n\r\n\ud83d\udca1 **To Reproduce**\r\n\r\nRun a simple http server:\r\n```console\r\n$> python3 -m http.server\r\n```\r\n\r\nThen run the following code against it:\r\n```python3\r\nimport aiohttp\r\nfrom datetime import datetime\r\nimport asyncio\r\nasync def do(host):\r\n    async with aiohttp.ClientSession() as client:\r\n        async with client.get(f'http://{host}/data/91a6570c981c96a35cffc819b203115085e7293c02f3196bd5566bc10b6c1663') as response:\r\n            print(datetime.utcnow())\r\n            print(response)\r\n\r\nloop = asyncio.get_event_loop()\r\nprint(datetime.utcnow()) ; loop.run_until_complete(do('127.0.0.1:22023'))\r\n\r\nprint(datetime.utcnow()) ; loop.run_until_complete(do('0:22023'))\r\nprint(datetime.utcnow()) ; loop.run_until_complete(do('localhost:22023'))\r\n```\r\n\r\nYou should get an output similar to the following :\r\n```console\r\n$> python3 reproductible.py\r\n2020-03-13 11:30:35.297674\r\n2020-03-13 11:30:35.302617\r\n<ClientResponse(http://127.0.0.1:22023/data/91a6570c981c96a35cffc819b203115085e7293c02f3196bd5566bc10b6c1663) [400 Bad Request]>\r\n<CIMultiDictProxy('x-request-id': '0', 'Content-Type': 'text/plain', 'Content-Length': '41')>\r\n\r\n2020-03-13 11:30:35.297674\r\n2020-03-13 11:30:35.302617\r\n<ClientResponse(http://127.0.0.1:22023/data/91a6570c981c96a35cffc819b203115085e7293c02f3196bd5566bc10b6c1663) [400 Bad Request]>\r\n<CIMultiDictProxy('x-request-id': '0', 'Content-Type': 'text/plain', 'Content-Length': '41')>\r\n\r\n2020-03-13 11:32:06.165579\r\n2020-03-13 11:32:37.738726\r\n<ClientResponse(http://localhost:22023/data/91a6570c981c96a35cffc819b203115085e7293c02f3196bd5566bc10b6c1663) [400 Bad Request]>\r\n<CIMultiDictProxy('x-request-id': '0', 'Content-Type': 'text/plain', 'Content-Length': '41')>\r\n\r\n```\r\n\r\nAs you can see, in our server Setup, it took ~30 seconds to handle the request through `localhost`, while it was instanteneous with `127.0.0.1`.\r\n\r\n\ud83d\udca1 **Expected behavior**\r\n\r\nWe expect both `localhost` and `127.0.0.1` to behave the same in terms of connecting to the remote server and running the request.\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n\r\n```console\r\n$ python --version\r\nPython 3.7.3\r\n```\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n\r\n```console\r\n$ python -m pip show aiohttp\r\nName: aiohttp\r\nVersion: 3.6.2\r\nSummary: Async http client/server framework (asyncio)\r\nHome-page: https://github.com/aio-libs/aiohttp\r\nAuthor: Nikolay Kim\r\nAuthor-email: fafhrd91@gmail.com\r\nLicense: Apache 2\r\nLocation: /opt/shadow.services/scripts/data_manager/venv/lib/python3.7/site-packages\r\nRequires: async-timeout, attrs, multidict, yarl, chardet\r\n```\r\n\r\n```console\r\n$ python -m pip show multidict\r\nName: multidict\r\nVersion: 4.7.5\r\nSummary: multidict implementation\r\nHome-page: https://github.com/aio-libs/multidict\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /opt/shadow.services/scripts/data_manager/venv/lib/python3.7/site-packages\r\nRequires: \r\nRequired-by: yarl, aiohttp\r\n```\r\n\r\n```console\r\n$ python -m pip show yarl\r\nName: yarl\r\nVersion: 1.4.2\r\nSummary: Yet another URL library\r\nHome-page: https://github.com/aio-libs/yarl/\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /opt/shadow.services/scripts/data_manager/venv/lib/python3.7/site-packages\r\nRequires: multidict, idna\r\nRequired-by: aiohttp\r\n```\r\n\r\n\ud83d\udccb **Additional context**\r\n\r\nAs stated in the bug description, this bug happens in our production-ready servers, and I cannot reproduce it on my laptop, for instance.\r\n\r\nAs I may not be knowledgeable enough in network, I did not know what could be relevant to this, and chose to turn to the community/developers of aiohttp (you), with which I observed the issue.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4626", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4626/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4626/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4626/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4626", "id": 580263369, "node_id": "MDU6SXNzdWU1ODAyNjMzNjk=", "number": 4626, "title": "Parameter \"loop_factory\" should be declared explicitly via indirect or in function itself", "user": {"login": "dcramer", "id": 23610, "node_id": "MDQ6VXNlcjIzNjEw", "avatar_url": "https://avatars0.githubusercontent.com/u/23610?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcramer", "html_url": "https://github.com/dcramer", "followers_url": "https://api.github.com/users/dcramer/followers", "following_url": "https://api.github.com/users/dcramer/following{/other_user}", "gists_url": "https://api.github.com/users/dcramer/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcramer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcramer/subscriptions", "organizations_url": "https://api.github.com/users/dcramer/orgs", "repos_url": "https://api.github.com/users/dcramer/repos", "events_url": "https://api.github.com/users/dcramer/events{/privacy}", "received_events_url": "https://api.github.com/users/dcramer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-12T22:40:16Z", "updated_at": "2020-03-12T23:12:57Z", "closed_at": "2020-03-12T23:12:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Attempting to upgrade from 3.7.2 to 3.8.1 and I started seeing the following in py.test with test discovery:\r\n\r\nParameter \"loop_factory\" should be declared explicitly via indirect or in function itself\r\n\r\nThe commonality it turns out were async functions, and it appears to be caused somewhere within aiohttp. I'm not that familiar with asyncio or aiohttp, so I'm happy to debug more with guidance, but I'm hoping someone might have more thoughts here.\r\n\r\nRelated packages:\r\n\r\n```\r\naiohttp==3.6.2\r\npytest==5.4.0\r\npytest-aiohttp==0.3.0\r\npytest-cov==2.8.1\r\npytest-forked==1.1.3\r\npytest-mock==2.0.0\r\npytest-responses==0.4.0\r\npytest-xdist==1.31.0\r\n```\r\n\r\nSome detail around the callstack:\r\n\r\n```\r\n\u279c  ~/D/zeus (feat/increase-lru-cache) \u2717 py.test -x --pdb\r\n=========================================================================================== test session starts ============================================================================================\r\nplatform darwin -- Python 3.8.1, pytest-5.4.0, py-1.8.1, pluggy-0.13.1\r\nrootdir: /Users/dcramer/Development/zeus, inifile: setup.cfg\r\nplugins: mock-2.0.0, celery-4.1.1, xdist-1.31.0, aiohttp-0.3.0, forked-1.1.3, responses-0.4.0, cov-2.8.1\r\ncollecting 186 items\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> traceback >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\nIn function \"test_health_check\":\r\nParameter \"loop_factory\" should be declared explicitly via indirect or in function itself\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> entering PDB >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n\r\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> PDB post_mortem (IO-capturing turned off) >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\r\n> /Users/dcramer/Development/zeus/.venv/lib/python3.8/site-packages/_pytest/python.py(1144)_validate_explicit_parameters()\r\n-> fail(msg, pytrace=False)\r\n(Pdb) l\r\n1139 \t                func_name = self.function.__name__\r\n1140 \t                msg = (\r\n1141 \t                    'In function \"{func_name}\":\\n'\r\n1142 \t                    'Parameter \"{arg}\" should be declared explicitly via indirect or in function itself'\r\n1143 \t                ).format(func_name=func_name, arg=arg)\r\n1144 ->\t                fail(msg, pytrace=False)\r\n1145\r\n1146\r\n1147 \tdef _find_parametrized_scope(argnames, arg2fixturedefs, indirect):\r\n1148 \t    \"\"\"Find the most appropriate scope for a parametrized call based on its arguments.\r\n1149\r\n(Pdb) u\r\n> /Users/dcramer/Development/zeus/.venv/lib/python3.8/site-packages/_pytest/python.py(939)parametrize()\r\n-> self._validate_explicit_parameters(argnames, indirect)\r\n(Pdb) l\r\n934\r\n935  \t        self._validate_if_using_arg_names(argnames, indirect)\r\n936\r\n937  \t        arg_values_types = self._resolve_arg_value_types(argnames, indirect)\r\n938\r\n939  ->\t        self._validate_explicit_parameters(argnames, indirect)\r\n940\r\n941  \t        # Use any already (possibly) generated ids with parametrize Marks.\r\n942  \t        if _param_mark and _param_mark._param_ids_from:\r\n943  \t            generated_ids = _param_mark._param_ids_from._param_ids_generated\r\n944  \t            if generated_ids is not None:\r\n(Pdb) u\r\n> /Users/dcramer/Development/zeus/.venv/lib/python3.8/site-packages/aiohttp/pytest_plugin.py(203)pytest_generate_tests()\r\n-> metafunc.parametrize(\"loop_factory\",\r\n(Pdb) l\r\n198  \t                    \"Unknown loop '%s', available loops: %s\" % (\r\n199  \t                        name, list(factories.keys())))\r\n200  \t            else:\r\n201  \t                continue\r\n202  \t        factories[name] = avail_factories[name]\r\n203  ->\t    metafunc.parametrize(\"loop_factory\",\r\n204  \t                         list(factories.values()),\r\n205  \t                         ids=list(factories.keys()))\r\n206\r\n207\r\n208  \t@pytest.fixture\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4623", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4623/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4623/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4623/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4623", "id": 579698552, "node_id": "MDU6SXNzdWU1Nzk2OTg1NTI=", "number": 4623, "title": "worker_exit", "user": {"login": "krishnamaddula", "id": 7423835, "node_id": "MDQ6VXNlcjc0MjM4MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7423835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krishnamaddula", "html_url": "https://github.com/krishnamaddula", "followers_url": "https://api.github.com/users/krishnamaddula/followers", "following_url": "https://api.github.com/users/krishnamaddula/following{/other_user}", "gists_url": "https://api.github.com/users/krishnamaddula/gists{/gist_id}", "starred_url": "https://api.github.com/users/krishnamaddula/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krishnamaddula/subscriptions", "organizations_url": "https://api.github.com/users/krishnamaddula/orgs", "repos_url": "https://api.github.com/users/krishnamaddula/repos", "events_url": "https://api.github.com/users/krishnamaddula/events{/privacy}", "received_events_url": "https://api.github.com/users/krishnamaddula/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-12T05:15:36Z", "updated_at": "2020-03-12T05:16:00Z", "closed_at": "2020-03-12T05:16:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\n<!-- Please describe your problem and why the fix is important. -->\r\n\r\n## Expected behaviour\r\n\r\n<!-- What is the behaviour you expect? -->\r\n\r\n## Actual behaviour\r\n\r\n<!-- What's actually happening? -->\r\n\r\n## Steps to reproduce\r\n\r\n<!-- Please describe steps to reproduce the issue.\r\n     If you have a script that does that please include it here within\r\n     markdown code markup -->\r\n\r\n## Your environment\r\n\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case. \r\n     \r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4622", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4622/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4622/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4622/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4622", "id": 579232316, "node_id": "MDU6SXNzdWU1NzkyMzIzMTY=", "number": 4622, "title": "Charset is not taken from HTTP headers during multipart requests", "user": {"login": "andrew-diamondj", "id": 62059625, "node_id": "MDQ6VXNlcjYyMDU5NjI1", "avatar_url": "https://avatars0.githubusercontent.com/u/62059625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrew-diamondj", "html_url": "https://github.com/andrew-diamondj", "followers_url": "https://api.github.com/users/andrew-diamondj/followers", "following_url": "https://api.github.com/users/andrew-diamondj/following{/other_user}", "gists_url": "https://api.github.com/users/andrew-diamondj/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrew-diamondj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrew-diamondj/subscriptions", "organizations_url": "https://api.github.com/users/andrew-diamondj/orgs", "repos_url": "https://api.github.com/users/andrew-diamondj/repos", "events_url": "https://api.github.com/users/andrew-diamondj/events{/privacy}", "received_events_url": "https://api.github.com/users/andrew-diamondj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1831256427, "node_id": "MDU6TGFiZWwxODMxMjU2NDI3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/reproducer:%20present", "name": "reproducer: present", "color": "c2e0c6", "default": false, "description": "This PR or issue contains code, which reproduce the problem described or clearly understandable STR"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-03-11T12:35:05Z", "updated_at": "2020-03-13T17:11:57Z", "closed_at": "2020-03-13T17:11:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\nIf multipart request is received with some dedicated charset, described in \"Content-Type\" header, and content type header is missing in a boundary field, charset should be taken from request header as a default encoding. But it is ignored, and default UTF-8 charset is used for decoding.\r\nSo if request has for example cyrillic symbols in boundary field and field is encoded to windows-1251, we have aiohttp exception\r\n\r\n\ud83d\udca1 **To Reproduce**\r\n1. Have environment on python 3.7 with `aiohttp==3.6.2`\r\n2. Run script\r\n```python\r\nfrom aiohttp import web\r\n\r\nasync def handle(request):\r\n    _post = await request.post()\r\n    text = \"Responce\"\r\n    return web.Response(text=text)\r\n\r\napp = web.Application()\r\napp.add_routes([web.post('/service_info', handle)])\r\n\r\nif __name__ == '__main__':\r\n    web.run_app(app, port=8081)\r\n```\r\n3. Post request to server:\r\nHeaders:\r\n```python\r\n'Host': 'request.sender.com',\r\n'Content-Length': '448', \r\n'Content-Type': 'multipart/form-data; charset=windows-1251; boundary=BS_20200311145724'\r\n```\r\nBody:\r\n```console\r\n--BS_20200311145724\r\nContent-Disposition: form-data; name=\"XML\"\r\n\r\n<?xml version=\"1.0\" encoding=\"windows-1251\" ?>\r\n..... Some XML with cyrillic chars\r\n\r\n--BS_20200311145724--\r\n```\r\n\r\n4. See exception below.\r\n\r\n\r\n\ud83d\udca1 **Expected behavior**\r\nRequest should be decoded in right way. \r\n\r\n\r\n\ud83d\udccb **Logs/tracebacks**\r\n```python-traceback\r\nTraceback (most recent call last):\r\n  File \"/home/user/PycharmProjects/project/venv/lib/python3.7/site-packages/aiohttp/web_protocol.py\", line 418, in start\r\n    resp = await task\r\n  File \"/home/user/PycharmProjects/project/venv/lib/python3.7/site-packages/aiohttp/web_app.py\", line 458, in _handle\r\n    resp = await handler(request)\r\n  File \"/home/user/PycharmProjects/project/venv/lib/python3.7/site-packages/aiohttp/web_urldispatcher.py\", line 892, in _iter\r\n    resp = await method()\r\n  File \"/home/user/PycharmProjects/project/handlers/views.py\", line 33, in post\r\n    req = await self.request.post()\r\n  File \"/home/user/PycharmProjects/project/venv/lib/python3.7/site-packages/aiohttp/web_request.py\", line 643, in post.\r\n```\r\n\r\n\ud83d\udccb **Additional context**\r\nWhen parsing multipart fields, aiohttp tries to get charset from content-type header of THIS field. And if no charset is found default value \"utf-8\" is taken. So charset in a request header is ignored.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4609", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4609/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4609/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4609/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4609", "id": 575239692, "node_id": "MDU6SXNzdWU1NzUyMzk2OTI=", "number": 4609, "title": "HTTPFound prints to console", "user": {"login": "TensorTom", "id": 14287229, "node_id": "MDQ6VXNlcjE0Mjg3MjI5", "avatar_url": "https://avatars2.githubusercontent.com/u/14287229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TensorTom", "html_url": "https://github.com/TensorTom", "followers_url": "https://api.github.com/users/TensorTom/followers", "following_url": "https://api.github.com/users/TensorTom/following{/other_user}", "gists_url": "https://api.github.com/users/TensorTom/gists{/gist_id}", "starred_url": "https://api.github.com/users/TensorTom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TensorTom/subscriptions", "organizations_url": "https://api.github.com/users/TensorTom/orgs", "repos_url": "https://api.github.com/users/TensorTom/repos", "events_url": "https://api.github.com/users/TensorTom/events{/privacy}", "received_events_url": "https://api.github.com/users/TensorTom/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986078, "node_id": "MDU6TGFiZWw1ODk4NjA3OA==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 1831255463, "node_id": "MDU6TGFiZWwxODMxMjU1NDYz", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/reproducer:%20missing", "name": "reproducer: missing", "color": "e23c36", "default": false, "description": "This PR or issue lacks code, which reproduce the problem described or clearly understandable STR"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-04T09:04:45Z", "updated_at": "2020-03-07T14:48:16Z", "closed_at": "2020-03-07T02:53:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\n<!-- A clear and concise description of what the bug is, on the next line. -->\r\n`raise aiohttp.web.HTTPFound('/redirect')` always prints the line `Found` to console. This is bad for performance if there's no way to suppress it.\r\n\r\n\ud83d\udca1 **To Reproduce**\r\n<!-- How to reproduce the behavior?\r\n\r\nFor example:\r\n1. Have certain environment\r\n2. Run given code snippet in a certain way\r\n3. See some behavior described\r\n\r\nAdd these steps below this comment: -->\r\nRaise an HTTPFound\r\n\r\n\ud83d\udca1 **Expected behavior**\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nI expect no output to stdout or stderr\r\n\r\n\ud83d\udccb **Logs/tracebacks**\r\n<!-- If applicable, add logs/tracebacks to help explain your problem. -->\r\n```python-traceback (paste your traceback in the next line)\r\nNA\r\n```\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n<!-- Attach your version of the Python. -->\r\n```console\r\n$ python --version\r\n...\r\n3.8.1\r\n```\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n<!-- Attach your version of the distributions in the code blocks below. -->\r\n```console\r\n$ python -m pip show aiohttp\r\n...\r\n```\r\n\r\n```\r\nVersion: 3.6.2\r\n$ python -m pip show multidict\r\n...\r\n```\r\n\r\n```\r\nVersion: 4.7.5\r\n$ python -m pip show yarl\r\n...\r\n```\r\nVersion: 1.4.2\r\n\r\n\ud83d\udccb **Additional context**\r\n<!-- Add any other context about the problem here, in the next line. -->\r\n\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case.\r\n\r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\nLinux x64", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4603", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4603/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4603/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4603/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4603", "id": 572948958, "node_id": "MDU6SXNzdWU1NzI5NDg5NTg=", "number": 4603, "title": "Docstring inaccurate; aiohttp.client.request", "user": {"login": "wereii", "id": 8504482, "node_id": "MDQ6VXNlcjg1MDQ0ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/8504482?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wereii", "html_url": "https://github.com/wereii", "followers_url": "https://api.github.com/users/wereii/followers", "following_url": "https://api.github.com/users/wereii/following{/other_user}", "gists_url": "https://api.github.com/users/wereii/gists{/gist_id}", "starred_url": "https://api.github.com/users/wereii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wereii/subscriptions", "organizations_url": "https://api.github.com/users/wereii/orgs", "repos_url": "https://api.github.com/users/wereii/repos", "events_url": "https://api.github.com/users/wereii/events{/privacy}", "received_events_url": "https://api.github.com/users/wereii/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-28T19:10:12Z", "updated_at": "2020-03-19T22:19:05Z", "closed_at": "2020-03-19T22:19:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\nIf you see the \"Usage\" part docstring of [`aiohttp.client.request`(or also `aiohttp.request`)](https://github.com/aio-libs/aiohttp/blob/v4.0.0a1/aiohttp/client.py#L1068) there is\r\n```\r\n...\r\n    Usage::\r\n      >>> import aiohttp\r\n      >>> resp = await aiohttp.request('GET', 'http://python.org/')\r\n      >>> resp\r\n      <ClientResponse(python.org/) [200]>\r\n      >>> data = await resp.read()\r\n    \"\"\"\r\n```\r\nWhich as it seems isn't really reflecting of how this function should be used (ie context manager). Also see comments on issue #4065.\r\n\r\n\ud83d\udca1 **Expected behavior**\r\n\r\nThe \"Usage\" part of the docstring shoud probably look something like this ...\r\n\r\n```\r\n...\r\n    Usage:\r\n      >>> import aiohttp\r\n      >>> async with aiohttp.request('GET', 'http://python.org/') as resp:\r\n      ...     print(resp)\r\n      ...     data = await resp.read()\r\n      <ClientResponse(https://www.python.org/) [200 OK]>\r\n    \"\"\"\r\n```\r\n\r\n\ud83d\udccb **My version of the Python**\r\n\r\n```console\r\n$ python3 --version\r\nPython 3.7.5\r\n```\r\n\r\n\ud83d\udccb **My version of the aiohttp/yarl/multidict distributions**\r\n\r\n```console\r\n$ python -m pip show aiohttp\r\nName: aiohttp\r\nVersion: 3.6.2\r\n...\r\n```\r\n```console\r\n$ python -m pip show multidict\r\nName: multidict\r\nVersion: 4.7.5\r\n...\r\n```\r\n```console\r\n$ python -m pip show yarl\r\nName: yarl\r\nVersion: 1.4.2\r\n...\r\n```\r\n\r\n\ud83d\udccb **Additional context**\r\n- Context: client\r\n- Ubuntu 19.10\r\n- All packages from pip, no version pinning (latest avaliable?), running from virtualenv", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4600", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4600/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4600/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4600/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4600", "id": 572391224, "node_id": "MDU6SXNzdWU1NzIzOTEyMjQ=", "number": 4600, "title": "Cannot access an error message when receive 400", "user": {"login": "yeralin", "id": 8620461, "node_id": "MDQ6VXNlcjg2MjA0NjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/8620461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yeralin", "html_url": "https://github.com/yeralin", "followers_url": "https://api.github.com/users/yeralin/followers", "following_url": "https://api.github.com/users/yeralin/following{/other_user}", "gists_url": "https://api.github.com/users/yeralin/gists{/gist_id}", "starred_url": "https://api.github.com/users/yeralin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yeralin/subscriptions", "organizations_url": "https://api.github.com/users/yeralin/orgs", "repos_url": "https://api.github.com/users/yeralin/repos", "events_url": "https://api.github.com/users/yeralin/events{/privacy}", "received_events_url": "https://api.github.com/users/yeralin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-27T22:08:21Z", "updated_at": "2020-03-03T16:26:44Z", "closed_at": "2020-03-03T16:26:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc1e **Describe the bug**\r\nWhile using `aiohttp.client.ClientSession` to send requests and receive responses, I found out that I cannot access a bad response's error message while catching `ClientResponseError` because `aiohttp` simply does not propagate the response content when raising `ClientResponseError` here: https://github.com/aio-libs/aiohttp/blob/63a0d1040533947ef4973b3baed87e5fb7870e5a/aiohttp/client_reqrep.py#L879-L889\r\nIt only passes `self.status == 400` and `self.reason == \"BAD REQUEST\"`.\r\n\r\n\ud83d\udca1 **To Reproduce**\r\n```\r\nfrom aiohttp import ClientResponseError, ClientSession\r\n\r\nsession = ClientSession(raise_for_status=True)\r\n\r\ntry:\r\n    # assuming that the request will result in 400 BAD REQUEST with a specific error message\r\n    async with session.post(**kwargs) as response: \r\n        # handle response\r\nexcept ClientResponseError as ex:\r\n    print(ex.__dict__) \r\n    \"\"\"\r\n        {'request_info': RequestInfo(...), \r\n        'status': 400, \r\n        'message': 'BAD REQUEST', \r\n        'headers': ..., \r\n        'history': ()}\r\n    \"\"\"\r\n```\r\n\r\n\ud83d\udca1 **Expected behavior**\r\nReceived `ClientResponseError` should contain a response message received along with 400 response.\r\n\r\n\r\n\ud83d\udccb **Logs/tracebacks**\r\n> Not applicable\r\n\r\n\ud83d\udccb **Your version of the Python**\r\n<!-- Attach your version of the Python. -->\r\n```console\r\n$ python --version\r\nPython 3.7.6\r\n```\r\n\r\n\ud83d\udccb **Your version of the aiohttp/yarl/multidict distributions**\r\n<!-- Attach your version of the distributions in the code blocks below. -->\r\n```console\r\n$ python -m pip show aiohttp\r\nName: aiohttp\r\nVersion: 3.5.4\r\nSummary: Async http client/server framework (asyncio)\r\nHome-page: https://github.com/aio-libs/aiohttp\r\nAuthor: Nikolay Kim\r\nAuthor-email: fafhrd91@gmail.com\r\nLicense: Apache 2\r\nLocation: /Applications/miniconda3/envs/sw-asyncher-services/lib/python3.7/site-packages\r\nRequires: yarl, async-timeout, attrs, multidict, chardet\r\nRequired-by: aiojobs, aiohttp-apispec\r\n```\r\n```console\r\n$ python -m pip show multidict\r\nName: multidict\r\nVersion: 4.7.5\r\nSummary: multidict implementation\r\nHome-page: https://github.com/aio-libs/multidict\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /Applications/miniconda3/envs/sw-asyncher-services/lib/python3.7/site-packages\r\nRequires:\r\nRequired-by: yarl, aiohttp\r\n```\r\n```console\r\n$ python -m pip show yarl\r\nName: yarl\r\nVersion: 1.4.2\r\nSummary: Yet another URL library\r\nHome-page: https://github.com/aio-libs/yarl/\r\nAuthor: Andrew Svetlov\r\nAuthor-email: andrew.svetlov@gmail.com\r\nLicense: Apache 2\r\nLocation: /Applications/miniconda3/envs/sw-asyncher-services/lib/python3.7/site-packages\r\nRequires: idna, multidict\r\nRequired-by: aiohttp\r\n```\r\n\r\n\ud83d\udccb **Additional context**\r\nOn the server side, when I change the response from 400 to any non-bad response say 200, I can access passed error message.\r\n\r\nCurrent workaround would be to have `session = ClientSession(raise_for_status=False)`, and handle bad responses manually.\r\n\r\n\ud83d\udd37 **Possible solution**\r\nModify `ClientResponseError` exception to include an error message, convert `raise_for_status` method to be async to be able to read the response message, and raise `ClientResponseError` with the read message.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4597", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4597/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4597/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4597/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4597", "id": 571143464, "node_id": "MDU6SXNzdWU1NzExNDM0NjQ=", "number": 4597, "title": "client : No data can be obtained using aiohttp, the request can be", "user": {"login": "isleifeng", "id": 9168146, "node_id": "MDQ6VXNlcjkxNjgxNDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9168146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isleifeng", "html_url": "https://github.com/isleifeng", "followers_url": "https://api.github.com/users/isleifeng/followers", "following_url": "https://api.github.com/users/isleifeng/following{/other_user}", "gists_url": "https://api.github.com/users/isleifeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/isleifeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isleifeng/subscriptions", "organizations_url": "https://api.github.com/users/isleifeng/orgs", "repos_url": "https://api.github.com/users/isleifeng/repos", "events_url": "https://api.github.com/users/isleifeng/events{/privacy}", "received_events_url": "https://api.github.com/users/isleifeng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 58986078, "node_id": "MDU6TGFiZWw1ODk4NjA3OA==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-26T08:11:55Z", "updated_at": "2020-02-26T13:09:11Z", "closed_at": "2020-02-26T13:09:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Client request URL: http://acs.m.taobao.com/h5/mtop.taobao.detail.getdetail/6.0/?data=%7B%22itemNumId%22%3A%22591096168038%22%7D\r\nReturns resp.status = 204\r\nThe returned content is empty\r\nIf you change to synchronous requests (requests) can return the data normally, I don't know what the problem is.\r\nThank you great gods", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4578", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4578/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4578/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4578/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4578", "id": 565371111, "node_id": "MDU6SXNzdWU1NjUzNzExMTE=", "number": 4578, "title": "Install fail on wheel for yarl", "user": {"login": "dclark3774", "id": 55795713, "node_id": "MDQ6VXNlcjU1Nzk1NzEz", "avatar_url": "https://avatars3.githubusercontent.com/u/55795713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dclark3774", "html_url": "https://github.com/dclark3774", "followers_url": "https://api.github.com/users/dclark3774/followers", "following_url": "https://api.github.com/users/dclark3774/following{/other_user}", "gists_url": "https://api.github.com/users/dclark3774/gists{/gist_id}", "starred_url": "https://api.github.com/users/dclark3774/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dclark3774/subscriptions", "organizations_url": "https://api.github.com/users/dclark3774/orgs", "repos_url": "https://api.github.com/users/dclark3774/repos", "events_url": "https://api.github.com/users/dclark3774/events{/privacy}", "received_events_url": "https://api.github.com/users/dclark3774/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986078, "node_id": "MDU6TGFiZWw1ODk4NjA3OA==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-14T14:46:39Z", "updated_at": "2020-02-14T14:52:01Z", "closed_at": "2020-02-14T14:51:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to install aiohttp on an armv7 and I am getting an error when trying to build the wheel for yarl. Below is the log from the terminal. I am running python 3.7.2 on this device (very similar to a Pi2) \r\n```python-traceback\r\nBuilding wheels for collected packages: yarl, multidict\r\n  Building wheel for yarl (setup.py) ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /usr/bin/python3 -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/var/volatile/tmp/pip-install-kg6r0519/yarl/setup.py'\"'\"'; __file__='\"'\"'/var/volatile/tmp/pip-install-kg6r0519/yarl/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /var/volatile/tmp/pip-wheel-ac1x_5bk\r\n       cwd: /var/volatile/tmp/pip-install-kg6r0519/yarl/\r\n  Complete output (37 lines):\r\n  **********************\r\n  * Accellerated build *\r\n  **********************\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.linux-armv7l-3.7\r\n  creating build/lib.linux-armv7l-3.7/yarl\r\n  copying yarl/quoting.py -> build/lib.linux-armv7l-3.7/yarl\r\n  copying yarl/__init__.py -> build/lib.linux-armv7l-3.7/yarl\r\n  running egg_info\r\n  writing yarl.egg-info/PKG-INFO\r\n  writing dependency_links to yarl.egg-info/dependency_links.txt\r\n  writing requirements to yarl.egg-info/requires.txt\r\n  writing top-level names to yarl.egg-info/top_level.txt\r\n  reading manifest file 'yarl.egg-info/SOURCES.txt'\r\n  reading manifest template 'MANIFEST.in'\r\n  warning: no previously-included files matching '*.pyc' found anywhere in distribution\r\n  warning: no previously-included files matching '*.cache' found anywhere in distribution\r\n  warning: no previously-included files found matching 'yarl/_quoting.html'\r\n  warning: no previously-included files found matching 'yarl/_quoting.*.so'\r\n  warning: no previously-included files found matching 'yarl/_quoting.pyd'\r\n  warning: no previously-included files found matching 'yarl/_quoting.*.pyd'\r\n  no previously-included directories found matching 'docs/_build'\r\n  writing manifest file 'yarl.egg-info/SOURCES.txt'\r\n  copying yarl/__init__.pyi -> build/lib.linux-armv7l-3.7/yarl\r\n  copying yarl/_quoting.c -> build/lib.linux-armv7l-3.7/yarl\r\n  copying yarl/_quoting.pyx -> build/lib.linux-armv7l-3.7/yarl\r\n  copying yarl/py.typed -> build/lib.linux-armv7l-3.7/yarl\r\n  running build_ext\r\n  building 'yarl._quoting' extension\r\n  creating build/temp.linux-armv7l-3.7\r\n  creating build/temp.linux-armv7l-3.7/yarl\r\n  arm-pxc-linux-gnueabi-gcc -mthumb -mfpu=neon -mfloat-abi=hard -mcpu=cortex-a9 -fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security -Wno-unused-result -Wsign-compare -DNDEBUG -g -O3 -Wall -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/python3/3.7.2-r0=/usr/src/debug/python3/3.7.2-r0 -fdebug-prefix-map=/python3/3.7.2-r0=/usr/src/debug/python3/3.7.2-r0 -fdebug-prefix-map== -fdebug-prefix-map== -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/python3/3.7.2-r0=/usr/src/debug/python3/3.7.2-r0 -fdebug-prefix-map=/python3/3.7.2-r0=/usr/src/debug/python3/3.7.2-r0 -fdebug-prefix-map== -fdebug-prefix-map== -fPIC -I/usr/include/python3.7m -c yarl/_quoting.c -o build/temp.linux-armv7l-3.7/yarl/_quoting.o\r\n  unable to execute 'arm-pxc-linux-gnueabi-gcc': No such file or directory\r\n  error: command 'arm-pxc-linux-gnueabi-gcc' failed with exit status 1\r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for yarl\r\n  Running setup.py clean for yarl\r\n  Building wheel for multidict (PEP 517) ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /usr/bin/python3 /usr/lib/python3.7/site-packages/pip/_vendor/pep517/_in_process.py build_wheel /tmp/tmporzs_box\r\n       cwd: /var/volatile/tmp/pip-install-kg6r0519/multidict\r\n  Complete output (43 lines):\r\n  **********************\r\n  * Accellerated build *\r\n  **********************\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.linux-armv7l-3.7\r\n  creating build/lib.linux-armv7l-3.7/multidict\r\n  copying multidict/_multidict_py.py -> build/lib.linux-armv7l-3.7/multidict\r\n  copying multidict/_multidict_base.py -> build/lib.linux-armv7l-3.7/multidict\r\n  copying multidict/_compat.py -> build/lib.linux-armv7l-3.7/multidict\r\n  copying multidict/_abc.py -> build/lib.linux-armv7l-3.7/multidict\r\n  copying multidict/__init__.py -> build/lib.linux-armv7l-3.7/multidict\r\n  running egg_info\r\n  writing multidict.egg-info/PKG-INFO\r\n  writing dependency_links to multidict.egg-info/dependency_links.txt\r\n  writing top-level names to multidict.egg-info/top_level.txt\r\n  reading manifest file 'multidict.egg-info/SOURCES.txt'\r\n  reading manifest template 'MANIFEST.in'\r\n  warning: no previously-included files matching '*.pyc' found anywhere in distribution\r\n  warning: no previously-included files found matching 'multidict/_multidict.html'\r\n  warning: no previously-included files found matching 'multidict/*.so'\r\n  warning: no previously-included files found matching 'multidict/*.pyd'\r\n  warning: no previously-included files found matching 'multidict/*.pyd'\r\n  no previously-included directories found matching 'docs/_build'\r\n  writing manifest file 'multidict.egg-info/SOURCES.txt'\r\n  copying multidict/__init__.pyi -> build/lib.linux-armv7l-3.7/multidict\r\n  copying multidict/_multidict.c -> build/lib.linux-armv7l-3.7/multidict\r\n  copying multidict/py.typed -> build/lib.linux-armv7l-3.7/multidict\r\n  creating build/lib.linux-armv7l-3.7/multidict/_multilib\r\n  copying multidict/_multilib/defs.h -> build/lib.linux-armv7l-3.7/multidict/_multilib\r\n  copying multidict/_multilib/dict.h -> build/lib.linux-armv7l-3.7/multidict/_multilib\r\n  copying multidict/_multilib/istr.h -> build/lib.linux-armv7l-3.7/multidict/_multilib\r\n  copying multidict/_multilib/iter.h -> build/lib.linux-armv7l-3.7/multidict/_multilib\r\n  copying multidict/_multilib/pair_list.h -> build/lib.linux-armv7l-3.7/multidict/_multilib\r\n  copying multidict/_multilib/views.h -> build/lib.linux-armv7l-3.7/multidict/_multilib\r\n  running build_ext\r\n  building 'multidict._multidict' extension\r\n  creating build/temp.linux-armv7l-3.7\r\n  creating build/temp.linux-armv7l-3.7/multidict\r\n  arm-pxc-linux-gnueabi-gcc -mthumb -mfpu=neon -mfloat-abi=hard -mcpu=cortex-a9 -fstack-protector-strong -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security -Wno-unused-result -Wsign-compare -DNDEBUG -g -O3 -Wall -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/python3/3.7.2-r0=/usr/src/debug/python3/3.7.2-r0 -fdebug-prefix-map=/python3/3.7.2-r0=/usr/src/debug/python3/3.7.2-r0 -fdebug-prefix-map== -fdebug-prefix-map== -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/python3/3.7.2-r0=/usr/src/debug/python3/3.7.2-r0 -fdebug-prefix-map=/python3/3.7.2-r0=/usr/src/debug/python3/3.7.2-r0 -fdebug-prefix-map== -fdebug-prefix-map== -fPIC -I/usr/include/python3.7m -c multidict/_multidict.c -o build/temp.linux-armv7l-3.7/multidict/_multidict.o -O2 -std=c99 -Wall -Wsign-compare -Wconversion -fno-strict-aliasing -pedantic\r\n  error: command 'arm-pxc-linux-gnueabi-gcc' failed with exit status 1\r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for multidict\r\nFailed to build yarl multidict\r\nERROR: Could not build wheels for multidict which use PEP 517 and cannot be installed directly\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4575", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4575/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4575/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4575/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4575", "id": 564907223, "node_id": "MDU6SXNzdWU1NjQ5MDcyMjM=", "number": 4575, "title": "Windows Certificate Store for TLS Server", "user": {"login": "bgklein", "id": 18502617, "node_id": "MDQ6VXNlcjE4NTAyNjE3", "avatar_url": "https://avatars0.githubusercontent.com/u/18502617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgklein", "html_url": "https://github.com/bgklein", "followers_url": "https://api.github.com/users/bgklein/followers", "following_url": "https://api.github.com/users/bgklein/following{/other_user}", "gists_url": "https://api.github.com/users/bgklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgklein/subscriptions", "organizations_url": "https://api.github.com/users/bgklein/orgs", "repos_url": "https://api.github.com/users/bgklein/repos", "events_url": "https://api.github.com/users/bgklein/events{/privacy}", "received_events_url": "https://api.github.com/users/bgklein/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-13T19:39:05Z", "updated_at": "2020-03-09T18:06:55Z", "closed_at": "2020-03-09T18:06:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "\ud83d\udc23 **Is your feature request related to a problem? Please describe.**\r\nWe are currently migrating from tornado to aiohttp for our web server code. We have a dependency that we need to read from the Windows Certificate Store to get the certificate to negotiate TLS.\u00a0Due to Python not supporting SChannel(Windows), we have existing code creating a custom socket class which inherits from socket.socket and overrides the core methods with baked in Win32 SSPI calls to read the certificate and \u00a0negotiate TLS. In the migration to aiohttp it seems that the sockets accept/read/send calls are being directed to the\u00a0ProactorEventLoop which then directly calls\u00a0out to the C code on the socket file number rather than the python sockets underlying implementation. \r\n\r\nSince this no longer can call our implementation, is there a supported way to interact with SSPI/SChannel to get the certificate to negotiate TLS with aiohttp?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4555", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4555/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4555/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4555/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4555", "id": 559557994, "node_id": "MDU6SXNzdWU1NTk1NTc5OTQ=", "number": 4555, "title": "Pass arguments to aiohttp class based view", "user": {"login": "NicoAdrian", "id": 38386685, "node_id": "MDQ6VXNlcjM4Mzg2Njg1", "avatar_url": "https://avatars2.githubusercontent.com/u/38386685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NicoAdrian", "html_url": "https://github.com/NicoAdrian", "followers_url": "https://api.github.com/users/NicoAdrian/followers", "following_url": "https://api.github.com/users/NicoAdrian/following{/other_user}", "gists_url": "https://api.github.com/users/NicoAdrian/gists{/gist_id}", "starred_url": "https://api.github.com/users/NicoAdrian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NicoAdrian/subscriptions", "organizations_url": "https://api.github.com/users/NicoAdrian/orgs", "repos_url": "https://api.github.com/users/NicoAdrian/repos", "events_url": "https://api.github.com/users/NicoAdrian/events{/privacy}", "received_events_url": "https://api.github.com/users/NicoAdrian/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986077, "node_id": "MDU6TGFiZWw1ODk4NjA3Nw==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-02-04T08:22:14Z", "updated_at": "2020-02-04T10:13:46Z", "closed_at": "2020-02-04T10:07:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be cool if we could pass arguments to class-based views when instantiated.\r\nIt is possible with Tornado to pass a dict object for each request which is then accessible in the handler.\r\n\r\nThis works, using a partial class and basic inheritance:\r\n\r\n```python\r\nimport aiohttp.web\r\nimport functools\r\n\r\n\r\nclass Parent:\r\n    def __init__(self, val):\r\n        self.var = val\r\n\r\n\r\nclass BaseView(aiohttp.web.View):\r\n    def __init__(self, *args, **kwargs):\r\n        self.parent = kwargs.pop(\"parent\")\r\n        super().__init__(*args, **kwargs)\r\n\r\n\r\nclass Handler(BaseView):\r\n    async def get(self):\r\n        return aiohttp.web.Response(text=self.parent.var)\r\n\r\n\r\ndef partial_class(cls, *args, **kwargs):\r\n    class NewCls(cls):\r\n        __init__ = functools.partialmethod(cls.__init__, *args, **kwargs)\r\n\r\n    return NewCls\r\n\r\n\r\ndef main():\r\n    parent = Parent(\"blablabla\")\r\n    app = aiohttp.web.Application()\r\n    # New method with args\r\n    app.router.add_view_with_args = functools.partial(\r\n        lambda this, path, handler, d: this.add_view(path, partial_class(handler, **d)),\r\n        app.router,\r\n    )\r\n    # Tornado-style\r\n    app.router.add_view_with_args(\"/test\", Handler, {\"parent\": parent})\r\n    aiohttp.web.run_app(app)\r\n\r\n\r\nmain()\r\n```\r\n\r\nBut I feel like this overcomplicated. Maybe there is a simpler way ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4543", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4543/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4543/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4543/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4543", "id": 557086364, "node_id": "MDU6SXNzdWU1NTcwODYzNjQ=", "number": 4543, "title": "client_max_size ", "user": {"login": "cole-dda", "id": 1077830, "node_id": "MDQ6VXNlcjEwNzc4MzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1077830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cole-dda", "html_url": "https://github.com/cole-dda", "followers_url": "https://api.github.com/users/cole-dda/followers", "following_url": "https://api.github.com/users/cole-dda/following{/other_user}", "gists_url": "https://api.github.com/users/cole-dda/gists{/gist_id}", "starred_url": "https://api.github.com/users/cole-dda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cole-dda/subscriptions", "organizations_url": "https://api.github.com/users/cole-dda/orgs", "repos_url": "https://api.github.com/users/cole-dda/repos", "events_url": "https://api.github.com/users/cole-dda/events{/privacy}", "received_events_url": "https://api.github.com/users/cole-dda/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986076, "node_id": "MDU6TGFiZWw1ODk4NjA3Ng==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}, {"id": 58986078, "node_id": "MDU6TGFiZWw1ODk4NjA3OA==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-29T20:05:09Z", "updated_at": "2020-03-16T10:24:40Z", "closed_at": "2020-03-16T10:24:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nweb_request.py\r\n\r\n<img width=\"666\" alt=\"screenshot_3109\" src=\"https://user-images.githubusercontent.com/1077830/73392665-345b6300-4315-11ea-8cfa-7d5097920421.png\">\r\n\r\n<img width=\"666\" alt=\"screenshot_3110\" src=\"https://user-images.githubusercontent.com/1077830/73392792-74bae100-4315-11ea-85a0-1ea57b62a95d.png\">\r\n\r\n\r\n## Expected behaviour\r\n\r\nimage1,line 565 , I think use **\">\"** is better.\r\n\r\nimage2,line 625, is right.\r\n\r\n## Your environment\r\naiohttp 3.6.2\r\npython 3.6.8\r\nmac\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4538", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4538/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4538/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4538/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4538", "id": 556275258, "node_id": "MDU6SXNzdWU1NTYyNzUyNTg=", "number": 4538, "title": "Why is asyncio.TimeoutError sometimes raised as class?", "user": {"login": "Colin-b", "id": 7591933, "node_id": "MDQ6VXNlcjc1OTE5MzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7591933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Colin-b", "html_url": "https://github.com/Colin-b", "followers_url": "https://api.github.com/users/Colin-b/followers", "following_url": "https://api.github.com/users/Colin-b/following{/other_user}", "gists_url": "https://api.github.com/users/Colin-b/gists{/gist_id}", "starred_url": "https://api.github.com/users/Colin-b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Colin-b/subscriptions", "organizations_url": "https://api.github.com/users/Colin-b/orgs", "repos_url": "https://api.github.com/users/Colin-b/repos", "events_url": "https://api.github.com/users/Colin-b/events{/privacy}", "received_events_url": "https://api.github.com/users/Colin-b/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-28T15:13:20Z", "updated_at": "2020-01-28T16:36:11Z", "closed_at": "2020-01-28T16:36:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nI noticed that in some places, TimeoutError is raised as class instead of as an instance.\r\n\r\n## Expected behaviour\r\n\r\nI would expect the same behavior accross the whole library but this is more a question I ask myself, is it by design?\r\n\r\n## Actual behaviour\r\n\r\nhttps://github.com/aio-libs/aiohttp/blob/master/aiohttp/helpers.py#L594\r\n\r\nhttps://github.com/aio-libs/aiohttp/blob/master/aiohttp/helpers.py#L606\r\n\r\n## Steps to reproduce\r\n\r\nawait response.text() after ensuring that you will have a huge body and a small timeout to reproduce this issue.\r\n\r\n## Your environment\r\n\r\nPython 3.8.1\r\nWindows 10 / Windows 7 / Alpine 3.11\r\naiohttp 3.6.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4532", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4532/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4532/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4532/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4532", "id": 555182636, "node_id": "MDU6SXNzdWU1NTUxODI2MzY=", "number": 4532, "title": "Always set 'Content-Type': 'application/octet-stream'?", "user": {"login": "yjqiang", "id": 8900942, "node_id": "MDQ6VXNlcjg5MDA5NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8900942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yjqiang", "html_url": "https://github.com/yjqiang", "followers_url": "https://api.github.com/users/yjqiang/followers", "following_url": "https://api.github.com/users/yjqiang/following{/other_user}", "gists_url": "https://api.github.com/users/yjqiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yjqiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yjqiang/subscriptions", "organizations_url": "https://api.github.com/users/yjqiang/orgs", "repos_url": "https://api.github.com/users/yjqiang/repos", "events_url": "https://api.github.com/users/yjqiang/events{/privacy}", "received_events_url": "https://api.github.com/users/yjqiang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-01-26T06:01:04Z", "updated_at": "2020-01-29T16:10:45Z", "closed_at": "2020-01-29T16:10:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure about this but I think aiohttp should set `Content-Type` with`application/x-www-form-urlencoded`?\r\n```py\r\nimport asyncio\r\n\r\nimport aiohttp\r\n\r\n\r\nasync def main():\r\n    async with aiohttp.ClientSession() as ss:\r\n        async with ss.request('POST', 'https://www.bilibili.com', params=\"abc=322\") as rsp:\r\n            print(rsp.request_info)\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(main())\r\n\r\n# RequestInfo(url=URL('https://www.bilibili.com/?abc=322'), method='POST', headers=<CIMultiDictProxy('Host': 'www.bilibili.com', 'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'User-Agent': 'Python/3.8 aiohttp/3.6.2', 'Content-Length': '0', 'Content-Type': 'application/octet-stream')>, real_url=URL('https://www.bilibili.com/?abc=322'))\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4531", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4531/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4531/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4531/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4531", "id": 555181624, "node_id": "MDU6SXNzdWU1NTUxODE2MjQ=", "number": 4531, "title": "Auto set Content-Type for user?", "user": {"login": "yjqiang", "id": 8900942, "node_id": "MDQ6VXNlcjg5MDA5NDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/8900942?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yjqiang", "html_url": "https://github.com/yjqiang", "followers_url": "https://api.github.com/users/yjqiang/followers", "following_url": "https://api.github.com/users/yjqiang/following{/other_user}", "gists_url": "https://api.github.com/users/yjqiang/gists{/gist_id}", "starred_url": "https://api.github.com/users/yjqiang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yjqiang/subscriptions", "organizations_url": "https://api.github.com/users/yjqiang/orgs", "repos_url": "https://api.github.com/users/yjqiang/repos", "events_url": "https://api.github.com/users/yjqiang/events{/privacy}", "received_events_url": "https://api.github.com/users/yjqiang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-26T05:45:52Z", "updated_at": "2020-01-26T05:47:59Z", "closed_at": "2020-01-26T05:47:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure about this but I think aiohttp doesn't automatically set `Content-Type` for me.\r\n```py\r\nimport asyncio\r\n\r\nimport aiohttp\r\n\r\n\r\nasync def main():\r\n    async with aiohttp.ClientSession() as ss:\r\n        async with ss.request('GET', 'https://www.bilibili.com', params=\"abc=322\") as rsp:\r\n            print(rsp.request_info)\r\n\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(main())\r\n```\r\n\r\n`RequestInfo(url=URL('https://www.bilibili.com/?abc=322&rt=V/ymTlOu4ow/y4xxNWPUZ7NVt1DlNzYVwTU3pl1pOV4%3D'), method='GET', headers=<CIMultiDictProxy('Host': 'www.bilibili.com', 'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'User-Agent': 'Python/3.8 aiohttp/3.6.2', 'Cookie': 'main_confirmation=yJ6C3ipaw569Zyb18tl9OuPx9MCA1RMkDB7dShRBLEk=')>, real_url=URL('https://www.bilibili.com/?abc=322&rt=V/ymTlOu4ow/y4xxNWPUZ7NVt1DlNzYVwTU3pl1pOV4%3D'))`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4527", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4527/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4527/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4527/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4527", "id": 554125060, "node_id": "MDU6SXNzdWU1NTQxMjUwNjA=", "number": 4527, "title": "Custom line delimiter for the the aiohttp.streams.StreamReader.readline async iter", "user": {"login": "koi8-r", "id": 1974178, "node_id": "MDQ6VXNlcjE5NzQxNzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/1974178?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koi8-r", "html_url": "https://github.com/koi8-r", "followers_url": "https://api.github.com/users/koi8-r/followers", "following_url": "https://api.github.com/users/koi8-r/following{/other_user}", "gists_url": "https://api.github.com/users/koi8-r/gists{/gist_id}", "starred_url": "https://api.github.com/users/koi8-r/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koi8-r/subscriptions", "organizations_url": "https://api.github.com/users/koi8-r/orgs", "repos_url": "https://api.github.com/users/koi8-r/repos", "events_url": "https://api.github.com/users/koi8-r/events{/privacy}", "received_events_url": "https://api.github.com/users/koi8-r/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-23T12:23:58Z", "updated_at": "2020-01-24T16:30:24Z", "closed_at": "2020-01-24T16:30:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nPlease allow custom line delimiter in the aiohttp.streams.StreamReader.readline coro.\r\nCurrently the \"\\n\" is hardcoded: `ichar = self._buffer[0].find(b'\\n', offset) + 1`\r\n\r\n## Expected behaviour\r\n\r\nPlease make a class field from delimiter and it is allows for overriding the delimiter in the child class:\r\n\r\n```python\r\nclass StreamReader(AsyncStreamReaderMixin):\r\n    _delimiter: bytes = b\"\\n\"\r\n    async def readline(self) -> bytes:\r\n        ...\r\n        while not_enough:\r\n            while self._buffer and not_enough:\r\n                offset = self._buffer_offset\r\n                ichar = self._buffer[0].find(self._delimiter, offset) + 1\r\n        ...\r\n\r\nclass MySuperStreamReader(AsyncStreamReaderMixin):\r\n    _delimiter: bytes = b\";\"\r\n    ...\r\n```\r\n\r\n## Actual behaviour\r\n\r\nLine delimiter is hardcoded at https://github.com/aio-libs/aiohttp/blob/v3.6.2/aiohttp/streams.py#L313", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4525", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4525/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4525/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4525/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4525", "id": 553885946, "node_id": "MDU6SXNzdWU1NTM4ODU5NDY=", "number": 4525, "title": "Unable to run test suite python3.8", "user": {"login": "jonringer", "id": 7673602, "node_id": "MDQ6VXNlcjc2NzM2MDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/7673602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonringer", "html_url": "https://github.com/jonringer", "followers_url": "https://api.github.com/users/jonringer/followers", "following_url": "https://api.github.com/users/jonringer/following{/other_user}", "gists_url": "https://api.github.com/users/jonringer/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonringer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonringer/subscriptions", "organizations_url": "https://api.github.com/users/jonringer/orgs", "repos_url": "https://api.github.com/users/jonringer/repos", "events_url": "https://api.github.com/users/jonringer/events{/privacy}", "received_events_url": "https://api.github.com/users/jonringer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-23T01:15:53Z", "updated_at": "2020-06-10T18:18:41Z", "closed_at": "2020-01-24T16:08:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nWhen running the test suite under python3.8 I get the following errors:\r\n```\r\nE           AssertionError: expected call not found.\r\nE           Expected: mock(<aiohttp.client.ClientSession object at 0x7ffff2e41a60>, <ANY>, TraceRequestExceptionParams(method='GET', url=URL('http://example.com'), headers=<CIMultiDict()>, exception=Exception()))\r\nE           Actual: mock(<aiohttp.client.ClientSession object at 0x7ffff2e41a60>, namespace(trace_request_ctx=None), TraceRequestExceptionParams(method='GET', url=URL('http://example.com'), headers=<CIMultiDict()>, exception=AttributeError(\"'_asyncio.Future' object has no attribute 'transport'\")))\r\n```\r\nand\r\n```\r\nTypeError: unsupported operand type(s) for +: '_asyncio.Future' and '_asyncio.Future'\r\n```\r\n<details><summary> Full failure log </summary>\r\n\r\n```\r\n____________________ test_request_tracing_exception[pyloop] ____________________\r\n\r\nloop = <_UnixSelectorEventLoop running=False closed=False debug=False>\r\n\r\n    async def test_request_tracing_exception(loop) -> None:\r\n        on_request_end = mock.Mock(side_effect=make_mocked_coro(mock.Mock()))\r\n        on_request_exception = mock.Mock(\r\n            side_effect=make_mocked_coro(mock.Mock())\r\n        )\r\n\r\n        trace_config = aiohttp.TraceConfig()\r\n        trace_config.on_request_end.append(on_request_end)\r\n        trace_config.on_request_exception.append(on_request_exception)\r\n\r\n        with mock.patch(\"aiohttp.client.TCPConnector.connect\") as connect_patched:\r\n            error = Exception()\r\n            f = loop.create_future()\r\n            f.set_exception(error)\r\n            connect_patched.return_value = f\r\n\r\n            session = aiohttp.ClientSession(\r\n                loop=loop,\r\n                trace_configs=[trace_config]\r\n            )\r\n\r\n            try:\r\n                await session.get('http://example.com')\r\n            except Exception:\r\n                pass\r\n\r\n>           on_request_exception.assert_called_once_with(\r\n                session,\r\n                mock.ANY,\r\n                aiohttp.TraceRequestExceptionParams(\r\n                    hdrs.METH_GET,\r\n                    URL(\"http://example.com\"),\r\n                    CIMultiDict(),\r\n                    error\r\n                )\r\n            )\r\nE           AssertionError: expected call not found.\r\nE           Expected: mock(<aiohttp.client.ClientSession object at 0x7ffff2e41a60>, <ANY>, TraceRequestExceptionParams(method='GET', url=URL('http://example.com'), headers=<CIMultiDict()>, exception=Exception()))\r\nE           Actual: mock(<aiohttp.client.ClientSession object at 0x7ffff2e41a60>, namespace(trace_request_ctx=None), TraceRequestExceptionParams(method='GET', url=URL('http://example.com'), headers=<CIMultiDict()>, exception=AttributeError(\"'_asyncio.Future' object has no attribute 'transport'\")))\r\nE\r\nE           pytest introspection follows:\r\nE\r\nE           Args:\r\nE           assert (<aiohttp.cli...transport'\"))) == (<aiohttp.cli...=Exception()))\r\nE             At index 2 diff: TraceRequestExceptionParams(method='GET', url=URL('http://example.com'), headers=<CIMultiDict()>, exception=AttributeError(\"'_asyncio.Future' object has no attribute 'transport'\")) != TraceRequestExceptionParams(method='GET', url=URL('http://example.com'), headers=<CIMultiDict()>, exception=Exception())\r\nE             Use -v to get the full diff\r\n\r\ntest_client_session.py:637: AssertionError\r\n__________________ TestPartReader.test_read_incomplete_chunk ___________________\r\n\r\nself = <test_multipart.TestPartReader object at 0x7ffff3232c70>\r\n\r\n    async def test_read_incomplete_chunk(self) -> None:\r\n        loop = asyncio.get_event_loop()\r\n        stream = Stream(b'')\r\n\r\n        def prepare(data):\r\n            f = loop.create_future()\r\n            f.set_result(data)\r\n            return f\r\n\r\n        with mock.patch.object(stream, 'read', side_effect=[\r\n            prepare(b'Hello, '),\r\n            prepare(b'World'),\r\n            prepare(b'!\\r\\n--:'),\r\n            prepare(b'')\r\n        ]):\r\n            obj = aiohttp.BodyPartReader(\r\n                BOUNDARY, {}, stream)\r\n>           c1 = await obj.read_chunk(8)\r\n\r\ntest_multipart.py:177:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/nix/store/79whj744pzw595azw1zbhf1i7r9di70g-python3.8-aiohttp-3.6.2/lib/python3.8/site-packages/aiohttp/multipart.py:303: in read_chunk\r\n    chunk = await self._read_chunk_from_stream(size)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <aiohttp.multipart.BodyPartReader object at 0x7ffff3191fd0>, size = 8\r\n\r\n    async def _read_chunk_from_stream(self, size: int) -> bytes:\r\n        # Reads content chunk of body part with unknown length.\r\n        # The Content-Length header for body part is not necessary.\r\n        assert size >= len(self._boundary) + 2, \\\r\n            'Chunk size must be greater or equal than boundary length + 2'\r\n        first_chunk = self._prev_chunk is None\r\n        if first_chunk:\r\n            self._prev_chunk = await self._content.read(size)\r\n\r\n        chunk = await self._content.read(size)\r\n        self._content_eof += int(self._content.at_eof())\r\n        assert self._content_eof < 3, \"Reading after EOF\"\r\n        assert self._prev_chunk is not None\r\n>       window = self._prev_chunk + chunk\r\nE       TypeError: unsupported operand type(s) for +: '_asyncio.Future' and '_asyncio.Future'\r\n\r\n/nix/store/79whj744pzw595azw1zbhf1i7r9di70g-python3.8-aiohttp-3.6.2/lib/python3.8/site-packages/aiohttp/multipart.py:336: TypeError\r\n___________ TestPartReader.test_read_boundary_with_incomplete_chunk ____________\r\n\r\nself = <test_multipart.TestPartReader object at 0x7ffff31f9460>\r\n\r\n    async def test_read_boundary_with_incomplete_chunk(self) -> None:\r\n        loop = asyncio.get_event_loop()\r\n        stream = Stream(b'')\r\n\r\n        def prepare(data):\r\n            f = loop.create_future()\r\n            f.set_result(data)\r\n            return f\r\n\r\n        with mock.patch.object(stream, 'read', side_effect=[\r\n            prepare(b'Hello, World'),\r\n            prepare(b'!\\r\\n'),\r\n            prepare(b'--:'),\r\n            prepare(b'')\r\n        ]):\r\n            obj = aiohttp.BodyPartReader(\r\n                BOUNDARY, {}, stream)\r\n>           c1 = await obj.read_chunk(12)\r\n\r\ntest_multipart.py:219:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n/nix/store/79whj744pzw595azw1zbhf1i7r9di70g-python3.8-aiohttp-3.6.2/lib/python3.8/site-packages/aiohttp/multipart.py:303: in read_chunk\r\n    chunk = await self._read_chunk_from_stream(size)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <aiohttp.multipart.BodyPartReader object at 0x7ffff318b700>, size = 12\r\n\r\n    async def _read_chunk_from_stream(self, size: int) -> bytes:\r\n        # Reads content chunk of body part with unknown length.\r\n        # The Content-Length header for body part is not necessary.\r\n        assert size >= len(self._boundary) + 2, \\\r\n            'Chunk size must be greater or equal than boundary length + 2'\r\n        first_chunk = self._prev_chunk is None\r\n        if first_chunk:\r\n            self._prev_chunk = await self._content.read(size)\r\n\r\n        chunk = await self._content.read(size)\r\n        self._content_eof += int(self._content.at_eof())\r\n        assert self._content_eof < 3, \"Reading after EOF\"\r\n        assert self._prev_chunk is not None\r\n>       window = self._prev_chunk + chunk\r\nE       TypeError: unsupported operand type(s) for +: '_asyncio.Future' and '_asyncio.Future'\r\n\r\n/nix/store/79whj744pzw595azw1zbhf1i7r9di70g-python3.8-aiohttp-3.6.2/lib/python3.8/site-packages/aiohttp/multipart.py:336: TypeError\r\n\r\n```\r\n</details>\r\n\r\nThese pass under python3.7\r\n\r\n## Expected behaviour\r\npasses\r\n\r\n## Actual behaviour\r\nfails\r\n\r\n## Steps to reproduce\r\n```\r\n    cd tests\r\n    pytest -k \"not get_valid_log_format_exc \\\r\n               and not test_access_logger_atoms \\\r\n               and not aiohttp_request_coroutine \\\r\n               and not server_close_keepalive_connection \\\r\n               and not connector \\\r\n               and not client_disconnect \\\r\n               and not handle_keepalive_on_closed_connection \\\r\n               and not proxy_https_bad_response \\\r\n               and not partially_applied_handler \\\r\n               and not middleware\" \\\r\n      --ignore=test_connector.py\r\n```\r\n\r\n## Your environment\r\npython3.8.1\r\naiohttp==3.6.2\r\n```\r\n - system: `\"x86_64-linux\"`\r\n - host os: `Linux 5.4.12, NixOS, 20.03pre209478.d5e9b7d5a7c (Markhor)`\r\n - multi-user?: `yes`\r\n - sandbox: `yes`\r\n - version: `nix-env (Nix) 2.3.2`\r\n - channels(root): `\"nixos-20.03pre209574.2628f20267d\"`\r\n - channels(jon): `\"home-manager, nixpkgs-20.03pre209574.2628f20267d\"`\r\n - nixpkgs: `/home/jon/.nix-defexpr/channels/nixpkgs`\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4519", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4519/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4519/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4519/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4519", "id": 552221003, "node_id": "MDU6SXNzdWU1NTIyMjEwMDM=", "number": 4519, "title": "Registered functors raise a bare func deprecation warning", "user": {"login": "vmarkovtsev", "id": 2793551, "node_id": "MDQ6VXNlcjI3OTM1NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2793551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmarkovtsev", "html_url": "https://github.com/vmarkovtsev", "followers_url": "https://api.github.com/users/vmarkovtsev/followers", "following_url": "https://api.github.com/users/vmarkovtsev/following{/other_user}", "gists_url": "https://api.github.com/users/vmarkovtsev/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmarkovtsev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmarkovtsev/subscriptions", "organizations_url": "https://api.github.com/users/vmarkovtsev/orgs", "repos_url": "https://api.github.com/users/vmarkovtsev/repos", "events_url": "https://api.github.com/users/vmarkovtsev/events{/privacy}", "received_events_url": "https://api.github.com/users/vmarkovtsev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-20T10:49:22Z", "updated_at": "2020-01-27T08:08:41Z", "closed_at": "2020-01-24T16:16:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nClass instance with `async def __call__` triggers DeprecationWarning: Bare functions are deprecated. This is different from #3252 where `functools.partial` generates a sync `def __call__`. \r\n\r\n## Steps to reproduce\r\n\r\n```python\r\nclass AsyncPartial:\r\n    def __init__(self, arg):\r\n        self.arg = arg\r\n\r\n    async def __call__(self, request):\r\n        return do_smth_with(request, self.arg)\r\n\r\napp.router.add_get(\"/xxx\", AsyncPartial(42))  # DeprecationWarning\r\napp.router.add_get(\"/xxx\", AsyncPartial(42).__call__)  # No warning, ugly\r\n```\r\n\r\n## Your environment\r\n\r\nPython 3.7.5\r\naiohttp 3.6.2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4506", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4506/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4506/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4506/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4506", "id": 551029913, "node_id": "MDU6SXNzdWU1NTEwMjk5MTM=", "number": 4506, "title": "When compressing responses with deflate encoding, output doesn't include Zlib headers.", "user": {"login": "PaulJuliusMartinez", "id": 3301004, "node_id": "MDQ6VXNlcjMzMDEwMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/3301004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PaulJuliusMartinez", "html_url": "https://github.com/PaulJuliusMartinez", "followers_url": "https://api.github.com/users/PaulJuliusMartinez/followers", "following_url": "https://api.github.com/users/PaulJuliusMartinez/following{/other_user}", "gists_url": "https://api.github.com/users/PaulJuliusMartinez/gists{/gist_id}", "starred_url": "https://api.github.com/users/PaulJuliusMartinez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PaulJuliusMartinez/subscriptions", "organizations_url": "https://api.github.com/users/PaulJuliusMartinez/orgs", "repos_url": "https://api.github.com/users/PaulJuliusMartinez/repos", "events_url": "https://api.github.com/users/PaulJuliusMartinez/events{/privacy}", "received_events_url": "https://api.github.com/users/PaulJuliusMartinez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-16T20:13:59Z", "updated_at": "2020-02-09T21:46:25Z", "closed_at": "2020-02-09T21:46:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nThe `wbits` argument to `zlib.compressobj` in [this method](https://github.com/aio-libs/aiohttp/blob/7a324fd46ff7dc9bb0bb1bc5afb326e04cf7cef0/aiohttp/http_writer.py#L56-L59) should be `zlib.MAX_WBITS` when using the `deflate` encoding, rather than `-zlib.MAX_WBITS`.\r\n\r\n## Expected behaviour\r\n\r\nThe `deflate` encoding as specified in [RFC2616](https://tools.ietf.org/html/rfc2616#section-3.5) states the following:\r\n\r\n```\r\n   deflate\r\n        The \"zlib\" format defined in RFC 1950 [31] in combination with\r\n        the \"deflate\" compression mechanism described in RFC 1951 [29].\r\n```\r\n\r\nThe [zlib website](https://zlib.net/zlib_faq.html#faq39) attempts to clear up the confusion:\r\n\r\n> _What's the difference between the \"gzip\" and \"deflate\" HTTP 1.1 encodings?_\r\n> \"gzip\" is the gzip format, and \"deflate\" is the zlib format. They should probably have called the second one \"zlib\" instead to avoid confusion with the raw deflate compressed data format. While the HTTP 1.1 RFC 2616 correctly points to the zlib specification in RFC 1950 for the \"deflate\" transfer encoding, there have been reports of servers and browsers that incorrectly produce or expect raw deflate data per the deflate specification in RFC 1951, most notably Microsoft. So even though the \"deflate\" transfer encoding using the zlib format would be the more efficient approach (and in fact exactly what the zlib format was designed for), using the \"gzip\" transfer encoding is probably more reliable due to an unfortunate choice of name on the part of the HTTP 1.1 authors.\r\n\r\n[RFC7230](https://httpwg.org/specs/rfc7230.html#deflate.coding) additionally notes:\r\n\r\n> *Note:* Some non-conformant implementations send the \"deflate\" compressed data without the zlib wrapper.\r\n\r\nThe [documentation](https://docs.python.org/3/library/zlib.html#zlib.compressobj) for Python zlib library explains how to produce different outputs:\r\n\r\n> `zlib.compressobj(level=-1, method=DEFLATED, wbits=MAX_WBITS, memLevel=DEF_MEM_LEVEL, strategy=Z_DEFAULT_STRATEGY[, zdict])`\r\n>\r\n> ...\r\n> \r\n> The wbits argument controls the size of the history buffer (or the \u201cwindow size\u201d) used when compressing data, and whether a header and trailer is included in the output. It can take several ranges of values, defaulting to 15 (MAX_WBITS):\r\n> \r\n> * +9 to +15: The base-two logarithm of the window size, which therefore ranges between 512 and 32768. Larger values produce better compression at the expense of greater memory usage. *The resulting output will include a zlib-specific header and trailer.*\r\n> \r\n> * \u22129 to \u221215: Uses the absolute value of wbits as the window size logarithm, *while producing a raw output stream with no header or trailing checksum.*\r\n>\r\n> * +25 to +31 = 16 + (9 to 15): Uses the low 4 bits of the value as the window size logarithm, while including a basic gzip header and trailing checksum in the output.\r\n\r\nI've added emphasis to the key points regarding the use of the 9 to 15 range, vs the -9 to -15 range; using a negative value for `wbits` produces output with no headers, while using a positive value will produce the zlib-specific headers, as specified in the actual HTTP spec.\r\n\r\n## Actual behaviour\r\n\r\n`aiohttp` is returning raw `deflate` output, which is unable to be parsed by spec conforming clients. As the updated HTTP RFC and the zlib website comment note, there are a lot of servers that return data in this format, and as such, many clients gracefully handle it anyway, notably, major browsers, `curl` ([workaround](https://github.com/curl/curl/blob/f8be737d8f5276a6ab4c9560d896fb5585d2933e/lib/content_encoding.c#L226-L239)), and Python's `urllib3` [with an explicit try/catch](https://github.com/urllib3/urllib3/blob/9971e27e83a891ba7b832fa9e5d2f04bbcb1e65f/src/urllib3/response.py#L49-L61).\r\n\r\nUnfortunately, many Ruby clients will not be able to process the response because Ruby's built-in HTTP library does not fallback to attempting to interpret the data as a raw deflate encoding. [This issue](https://bugs.ruby-lang.org/issues/11268) has been open for over four years.\r\n\r\n## Steps to reproduce\r\n\r\nThe following script emphasizes the difference between the encodings:\r\n```python\r\nimport zlib\r\n\r\nzlib_compressor = zlib.compressobj(wbits=zlib.MAX_WBITS)\r\nzlib_deflate_output = zlib_compressor.compress(b'hello')\r\nzlib_deflate_output += zlib_compressor.flush()\r\n\r\nzlib.decompress(zlib_deflate_output)\r\n# b'hello'\r\n\r\nraw_compressor = zlib.compressobj(wbits=-zlib.MAX_WBITS)\r\nraw_deflate_output = raw_compressor.compress(b'hello')\r\nraw_deflate_output += raw_compressor.flush()\r\n\r\nzlib.decompress(raw_deflate_output)\r\n# Traceback (most recent call last):\r\n#   File \"<stdin>\", line 1, in <module>\r\n# zlib.error: Error -3 while decompressing data: incorrect header check\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4504", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4504/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4504/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4504/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4504", "id": 549924253, "node_id": "MDU6SXNzdWU1NDk5MjQyNTM=", "number": 4504, "title": "Please disable lockbot comments", "user": {"login": "achimnol", "id": 555156, "node_id": "MDQ6VXNlcjU1NTE1Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/555156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/achimnol", "html_url": "https://github.com/achimnol", "followers_url": "https://api.github.com/users/achimnol/followers", "following_url": "https://api.github.com/users/achimnol/following{/other_user}", "gists_url": "https://api.github.com/users/achimnol/gists{/gist_id}", "starred_url": "https://api.github.com/users/achimnol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/achimnol/subscriptions", "organizations_url": "https://api.github.com/users/achimnol/orgs", "repos_url": "https://api.github.com/users/achimnol/repos", "events_url": "https://api.github.com/users/achimnol/events{/privacy}", "received_events_url": "https://api.github.com/users/achimnol/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 731921232, "node_id": "MDU6TGFiZWw3MzE5MjEyMzI=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/infra", "name": "infra", "color": "e55e5b", "default": false, "description": null}, {"id": 743514498, "node_id": "MDU6TGFiZWw3NDM1MTQ0OTg=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/meta", "name": "meta", "color": "ccf794", "default": false, "description": null}, {"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": {"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-01-15T02:15:06Z", "updated_at": "2020-01-17T13:30:53Z", "closed_at": "2020-01-17T13:30:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm receiving a lot of notifications saying that the lock bot is locking issues/PRs with no activities more than 1 year. It is difficult to distinguish whether an issue/PR is just locked or recently discussed inside the notification UI.\r\nThere have been similar issues in other repositories and some have disabled comment by the lock bot, e.g., https://github.com/prometheus/prometheus/pull/5402\r\n\r\nI'd like to suggest to apply the same here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4500", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4500/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4500/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4500/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4500", "id": 548614846, "node_id": "MDU6SXNzdWU1NDg2MTQ4NDY=", "number": 4500, "title": "MultiProcessing - Application.make_handler(...) is deprecated", "user": {"login": "TensorTom", "id": 14287229, "node_id": "MDQ6VXNlcjE0Mjg3MjI5", "avatar_url": "https://avatars2.githubusercontent.com/u/14287229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TensorTom", "html_url": "https://github.com/TensorTom", "followers_url": "https://api.github.com/users/TensorTom/followers", "following_url": "https://api.github.com/users/TensorTom/following{/other_user}", "gists_url": "https://api.github.com/users/TensorTom/gists{/gist_id}", "starred_url": "https://api.github.com/users/TensorTom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TensorTom/subscriptions", "organizations_url": "https://api.github.com/users/TensorTom/orgs", "repos_url": "https://api.github.com/users/TensorTom/repos", "events_url": "https://api.github.com/users/TensorTom/events{/privacy}", "received_events_url": "https://api.github.com/users/TensorTom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-12T19:24:29Z", "updated_at": "2020-01-24T16:33:15Z", "closed_at": "2020-01-24T16:33:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some code that greatly improves performance of this module by using `ProcessPoolExecutor` and a TCP server back-end that uses a kernel feature to share the same port across multiple processes:\r\n```\r\nimport asyncio\r\nimport os\r\nimport socket\r\nimport time\r\nfrom aiohttp import web\r\nfrom concurrent.futures import ProcessPoolExecutor\r\nfrom multiprocessing import cpu_count\r\n\r\nCPU_COUNT = cpu_count()\r\nprint(\"CPU Count:\", CPU_COUNT)\r\n\r\ndef mk_socket(host=\"127.0.0.1\", port=8000, reuseport=False):\r\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n    if reuseport:\r\n        SO_REUSEPORT = 15\r\n        sock.setsockopt(socket.SOL_SOCKET, SO_REUSEPORT, 1)\r\n    sock.bind((host, port))\r\n    return sock\r\n\r\nasync def handle(request):\r\n    name = request.match_info.get('name', \"Anonymous\")\r\n    pid = os.getpid()\r\n    text = \"{:.2f}: Hello {}! Process {} is treating you\\n\".format(\r\n        time.time(), name, pid)\r\n    #time.sleep(5)  # intentionally blocking sleep to simulate CPU load\r\n    return web.Response(text=text)\r\n\r\n\r\ndef start_server():\r\n    host = \"127.0.0.1\"\r\n    port=8000\r\n    reuseport = True\r\n    app = web.Application()\r\n    sock = mk_socket(host, port, reuseport=reuseport)\r\n    app.add_routes([web.get('/', handle),\r\n                    web.get('/{name}', handle)])\r\n    loop = asyncio.get_event_loop()\r\n    coro = loop.create_server(\r\n            protocol_factory=app.make_handler(),\r\n            sock=sock,\r\n        )\r\n    srv = loop.run_until_complete(coro)\r\n    loop.run_forever()\r\n\r\n\r\nif __name__ == '__main__':\r\n    with ProcessPoolExecutor() as executor:\r\n        for i in range(0, CPU_COUNT):\r\n            executor.submit(start_server)\r\n```\r\n\r\nWhich works great but produces: `DeprecationWarning: Application.make_handler(...) is deprecated, use AppRunner API instead`.\r\n\r\nCan you show me how to make this block work with AppRunner? Also, this code would probably make a great example for this repo's docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4499", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4499/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4499/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4499/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4499", "id": 548604911, "node_id": "MDU6SXNzdWU1NDg2MDQ5MTE=", "number": 4499, "title": "skip_auto_headers= should allow [\"*\"] for all. And update documentation for auto headers.", "user": {"login": "Borkason", "id": 2971735, "node_id": "MDQ6VXNlcjI5NzE3MzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2971735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Borkason", "html_url": "https://github.com/Borkason", "followers_url": "https://api.github.com/users/Borkason/followers", "following_url": "https://api.github.com/users/Borkason/following{/other_user}", "gists_url": "https://api.github.com/users/Borkason/gists{/gist_id}", "starred_url": "https://api.github.com/users/Borkason/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Borkason/subscriptions", "organizations_url": "https://api.github.com/users/Borkason/orgs", "repos_url": "https://api.github.com/users/Borkason/repos", "events_url": "https://api.github.com/users/Borkason/events{/privacy}", "received_events_url": "https://api.github.com/users/Borkason/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-12T18:02:15Z", "updated_at": "2020-01-24T21:00:54Z", "closed_at": "2020-01-24T16:36:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "The current documentation reads as follows:\r\n\r\n```\r\n**skip_auto_headers \u2013**\r\n\r\nset of headers for which autogeneration should be skipped.\r\n\r\naiohttp autogenerates headers like `User-Agent` or `Content-Type` if these headers are not explicitly passed. Using skip_auto_headers parameter allows to skip that generation. Note that Content-Length autogeneration can\u2019t be skipped.\r\n\r\nIterable of str or istr (optional)\r\n```\r\n\r\nPlease either allow [\"*\"] to indicate that no headers should be auto generated.\r\n\r\nAdditionally, please update the documentation to show what headers are currently auto generated. If you need to pass them explicitly, it should be easy to see what one has to pass to completely disable it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4494", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4494/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4494/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4494/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4494", "id": 547060218, "node_id": "MDU6SXNzdWU1NDcwNjAyMTg=", "number": 4494, "title": "Redirects not working in case of domain change", "user": {"login": "sharmapala", "id": 35351109, "node_id": "MDQ6VXNlcjM1MzUxMTA5", "avatar_url": "https://avatars1.githubusercontent.com/u/35351109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sharmapala", "html_url": "https://github.com/sharmapala", "followers_url": "https://api.github.com/users/sharmapala/followers", "following_url": "https://api.github.com/users/sharmapala/following{/other_user}", "gists_url": "https://api.github.com/users/sharmapala/gists{/gist_id}", "starred_url": "https://api.github.com/users/sharmapala/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sharmapala/subscriptions", "organizations_url": "https://api.github.com/users/sharmapala/orgs", "repos_url": "https://api.github.com/users/sharmapala/repos", "events_url": "https://api.github.com/users/sharmapala/events{/privacy}", "received_events_url": "https://api.github.com/users/sharmapala/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-08T19:34:05Z", "updated_at": "2020-01-24T17:00:52Z", "closed_at": "2020-01-24T17:00:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nSo, apparently the redirects of any Url is limited to adding up https from http OR adding www.domain.com \r\n\r\n## Expected behaviour\r\n\r\nFor the below piece of code \r\n\r\nasync def fetch_html(url, session):\r\n    try:\r\n        resp = await session.request(method=\"GET\", url=url, headers=headers, timeout=60, allow_redirects=True)\r\n    except:\r\n        return\r\n    logger.info(\"Got response [%s] for URL: %s\", resp.status, url)\r\n    try:\r\n        return await resp.text('utf-8')\r\n    except:\r\n        return\r\n\r\nfor the url : http://www.1800vending.com \r\nthe expected redirect is : https://www.healthyyouvending.com\r\n\r\n\r\n## Actual behaviour\r\n\r\nfor the url : http://www.1800vending.com \r\nthe actual redirect : http://www.1800vending.com \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4492", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4492/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4492/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4492/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4492", "id": 546522577, "node_id": "MDU6SXNzdWU1NDY1MjI1Nzc=", "number": 4492, "title": "Memory leak", "user": {"login": "sinancetinkaya", "id": 2675655, "node_id": "MDQ6VXNlcjI2NzU2NTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2675655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinancetinkaya", "html_url": "https://github.com/sinancetinkaya", "followers_url": "https://api.github.com/users/sinancetinkaya/followers", "following_url": "https://api.github.com/users/sinancetinkaya/following{/other_user}", "gists_url": "https://api.github.com/users/sinancetinkaya/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinancetinkaya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinancetinkaya/subscriptions", "organizations_url": "https://api.github.com/users/sinancetinkaya/orgs", "repos_url": "https://api.github.com/users/sinancetinkaya/repos", "events_url": "https://api.github.com/users/sinancetinkaya/events{/privacy}", "received_events_url": "https://api.github.com/users/sinancetinkaya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-01-07T21:41:40Z", "updated_at": "2020-02-01T22:02:33Z", "closed_at": "2020-01-24T16:39:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\nI have a memory leak issue that I couldn't overcome. I tried everything and I believe that this is caused by aiohttp requests. I hope that you guys show me what I'm doing wrong.\r\n\r\n## Expected behaviour\r\nMemory used by the script should stay same\r\n## Actual behaviour\r\nRam used by the script get bigger in time\r\n## Steps to reproduce\r\n```python\r\nfrom lxml import html\r\nimport asyncio\r\nimport logging\r\n\r\nlog = logging.getLogger(__name__)\r\n\r\n\r\nclass Freelancer:\r\n    def __init__(self, loop, session):\r\n        self.loop = loop\r\n        self.session = session\r\n        self.headers = {\r\n            'User-Agent': '\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0\"'\r\n        }\r\n        self.domain = \"https://www.freelancer.com\"\r\n        self.url = \"/jobs/1/?w=f\"\r\n        self.interval = 60\r\n        self.processed_urls = []\r\n\r\n    async def fetch(self, url, parser):\r\n        content = None\r\n        async with self.session.get(self.domain + url, headers=self.headers) as response:\r\n            if response.status == 200:\r\n                content = await response.read()\r\n            else:\r\n                log.warning(f\"{self.url} {response.status}\")\r\n\r\n        return parser(content)\r\n\r\n    async def start(self):\r\n        log.debug(f\"Starting Task: Freelancer()\")\r\n\r\n        while True:\r\n            try:\r\n                await self.parse()\r\n            except:\r\n                log.warning(\"\", exc_info=True)\r\n\r\n            await asyncio.sleep(self.interval)\r\n            if self.loop.is_closed():\r\n                break\r\n\r\n    def job_list_parser(self, content) -> list:\r\n        if not content:\r\n            return []\r\n\r\n        page = html.fromstring(content)\r\n        return page.xpath(\"//div[normalize-space(@class)='JobSearchCard-item']\")\r\n\r\n    def job_parser(self, content):\r\n        if not content:\r\n            return None\r\n\r\n        page = html.fromstring(content)\r\n        location = page.xpath('normalize-space(//span[@itemprop=\"addressLocality\"])').lower()\r\n\r\n        description = \"\"\r\n        for p in page.xpath('//div[@class=\"PageProjectViewLogout-detail\"]/p[not(@*)]'):\r\n            description += p.xpath(\"normalize-space(.)\") + '\\n'\r\n\r\n        return {\r\n            \"location\": location,\r\n            \"description\": description\r\n        }\r\n\r\n    async def parse(self):\r\n        # log.debug(\"Fetching jobs...\")\r\n        rows = await self.fetch(self.url, parser=self.job_list_parser)\r\n\r\n        for row in rows:\r\n            url = row.xpath(\".//a[@class='JobSearchCard-primary-heading-link']/@href\")[0]\r\n\r\n            if url in self.processed_urls:\r\n                continue\r\n\r\n            self.processed_urls.append(url)\r\n\r\n            await self.fetch(url, parser=self.job_parser)\r\n\r\n\r\nif __name__ == '__main__':\r\n    import aiohttp\r\n\r\n    loop = asyncio.get_event_loop()\r\n\r\n    session = aiohttp.ClientSession(\r\n        timeout=aiohttp.ClientTimeout(total=20),\r\n        loop=loop\r\n    )\r\n    freelancer = Freelancer(loop=loop, session=session)\r\n    loop.create_task(freelancer.start())\r\n\r\n    loop.run_forever()\r\n    loop.run_until_complete(session.close())\r\n    loop.close()\r\n\r\n```\r\n## Your environment\r\n```console\r\n\r\n\r\nCoreELEC:~ # systemctl status freelancer --no-pager -l\r\n\u25cf freelancer.service - freelancer\r\n   Loaded: loaded (/storage/.config/system.d/freelancer.service; enabled; vendor preset: disabled)\r\n   Active: active (running) since Tue 2020-01-07 22:23:17 +03; 15s ago\r\n Main PID: 28299 (python3)\r\n   Memory: 26.1M\r\n   CGroup: /system.slice/freelancer.service\r\n           \u2514\u250028299 /storage/.opt/bin/python3 /var/media/external/discord/freelancer_rss.py\r\n\r\nJan 07 22:23:17 CoreELEC systemd[1]: Started freelancer.\r\nCoreELEC:~ # systemctl status freelancer --no-pager -l\r\n\u25cf freelancer.service - freelancer\r\n   Loaded: loaded (/storage/.config/system.d/freelancer.service; enabled; vendor preset: disabled)\r\n   Active: active (running) since Tue 2020-01-07 22:23:17 +03; 2h 4min ago\r\n Main PID: 28299 (python3)\r\n   Memory: 183.7M\r\n   CGroup: /system.slice/freelancer.service\r\n           \u2514\u250028299 /storage/.opt/bin/python3 /var/media/external/discord/freelancer_rss.py\r\n\r\nJan 07 22:23:17 CoreELEC systemd[1]: Started freelancer.\r\n\r\nCoreELEC:~ # opkg status python3\r\nPackage: python3\r\nVersion: 3.7.4-2\r\nDepends: libc, libssp, librt, libpthread, python3-light, python3-unittest, python3-ncurses, python3-ctypes, python3-pydoc, python3-decimal, python3-multiprocessing, python3-urllib, python3-gdbm, python3-xml, python3-sqlite3, python3-logging, python3-distutils, python3-codecs, python3-email, python3-openssl, python3-cgi, python3-cgitb, python3-dbm, python3-lzma, python3-asyncio\r\nStatus: install user installed\r\nArchitecture: aarch64-3.10\r\nInstalled-Time: 1577005810\r\n\r\nCoreELEC:~ # pip show aiohttp\r\nName: aiohttp\r\nVersion: 3.6.2\r\nSummary: Async http client/server framework (asyncio)\r\nHome-page: https://github.com/aio-libs/aiohttp\r\nAuthor: Nikolay Kim\r\nAuthor-email: fafhrd91@gmail.com\r\nLicense: Apache 2\r\nLocation: /storage/.opt/lib/python3.7/site-packages\r\nRequires: yarl, chardet, multidict, async-timeout, attrs\r\nRequired-by: discord.py\r\n\r\nCoreELEC:~ # uname -a\r\nLinux CoreELEC 3.14.29 #1 SMP Tue Jul 2 16:43:47 BST 2019 aarch64 GNU/Linux\r\n\r\nCoreELEC:~ #  cat /etc/os-release\r\nNAME=\"CoreELEC\"\r\nVERSION=\"9.0.3\"\r\nID=\"coreelec\"\r\nVERSION_ID=\"9.0\"\r\nPRETTY_NAME=\"CoreELEC (official): 9.0.3\"\r\nHOME_URL=\"https://coreelec.org\"\r\nBUG_REPORT_URL=\"https://github.com/CoreELEC/CoreELEC\"\r\nBUILD_ID=\"56245f6ee6a8c213307c119ea49e3b48a32e9a9f\"\r\nCOREELEC_ARCH=\"Amlogic.arm\"\r\nCOREELEC_BUILD=\"official\"\r\nCOREELEC_PROJECT=\"Amlogic\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4491", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4491/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4491/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4491/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4491", "id": 545845940, "node_id": "MDU6SXNzdWU1NDU4NDU5NDA=", "number": 4491, "title": "{ClientPayloadError}400, message='Can not decode content-encoding: br'", "user": {"login": "shmilylty", "id": 24275308, "node_id": "MDQ6VXNlcjI0Mjc1MzA4", "avatar_url": "https://avatars1.githubusercontent.com/u/24275308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shmilylty", "html_url": "https://github.com/shmilylty", "followers_url": "https://api.github.com/users/shmilylty/followers", "following_url": "https://api.github.com/users/shmilylty/following{/other_user}", "gists_url": "https://api.github.com/users/shmilylty/gists{/gist_id}", "starred_url": "https://api.github.com/users/shmilylty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shmilylty/subscriptions", "organizations_url": "https://api.github.com/users/shmilylty/orgs", "repos_url": "https://api.github.com/users/shmilylty/repos", "events_url": "https://api.github.com/users/shmilylty/events{/privacy}", "received_events_url": "https://api.github.com/users/shmilylty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-06T17:30:36Z", "updated_at": "2020-03-16T23:44:15Z", "closed_at": "2020-01-12T13:38:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nI have installed the brotli library, but I still have a ClientPayloadError problem.\r\n![image](https://user-images.githubusercontent.com/24275308/71834893-43227180-30eb-11ea-82fe-d065aa540a5b.png)\r\n\r\n\r\n## Expected behaviour\r\n\r\nNormal decoding\r\n\r\n## Actual behaviour\r\n\r\n{ClientPayloadError}400, message='Can not decode content-encoding: br'\r\n\r\n## Steps to reproduce\r\ngit clone https://github.com/shmilylty/OneForAll.git\r\ncd OneForAll\r\npip install -r requirements.txt\r\ncd oneforall/\r\npython oneforall.py --target freebuf.com  run\r\n\r\n## Your environment\r\nWindows 10 19.09\r\nPython 3.8.0\r\naiohttp 3.6.2\r\nclient\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4490", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4490/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4490/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4490/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4490", "id": 545843319, "node_id": "MDU6SXNzdWU1NDU4NDMzMTk=", "number": 4490, "title": "Cant create multiple unix domain sockets, as per Supervisord Docs", "user": {"login": "binrebin", "id": 32639422, "node_id": "MDQ6VXNlcjMyNjM5NDIy", "avatar_url": "https://avatars0.githubusercontent.com/u/32639422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/binrebin", "html_url": "https://github.com/binrebin", "followers_url": "https://api.github.com/users/binrebin/followers", "following_url": "https://api.github.com/users/binrebin/following{/other_user}", "gists_url": "https://api.github.com/users/binrebin/gists{/gist_id}", "starred_url": "https://api.github.com/users/binrebin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/binrebin/subscriptions", "organizations_url": "https://api.github.com/users/binrebin/orgs", "repos_url": "https://api.github.com/users/binrebin/repos", "events_url": "https://api.github.com/users/binrebin/events{/privacy}", "received_events_url": "https://api.github.com/users/binrebin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-06T17:24:24Z", "updated_at": "2020-01-09T17:40:15Z", "closed_at": "2020-01-09T10:26:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\nI cant achieve multiple unix domain socket with Supervisord as per Aiohttp deployment documentation. Kindly update or suggest a possible solution..\r\nBelow is the aiohttp deployment doc extract.\r\n\r\nNGINX part\r\n```\r\nhttp {\r\n  upstream aiohttp {\r\n    # Unix domain servers\r\n    server unix:/tmp/example_1.sock fail_timeout=0;\r\n    server unix:/tmp/example_2.sock fail_timeout=0;\r\n    server unix:/tmp/example_3.sock fail_timeout=0;\r\n    server unix:/tmp/example_4.sock fail_timeout=0;\r\n  }\r\nserver {\r\n        listen 80;\r\nlocation / {\r\n      proxy_set_header Host $http_host;\r\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\r\n      proxy_redirect off;\r\n      proxy_buffering off;\r\n      proxy_pass http://aiohttp;\r\n}\r\n}\r\n```\r\nAND Supervisord part\r\n\r\n```\r\n[program:aiohttp]\r\nnumprocs = 4\r\nnumprocs_start = 1\r\nprocess_name = example_%(process_num)s\r\n\r\ncommand=/path/to/aiohttp_example.py --path=/tmp/example_%(process_num)s.sock\r\n\r\nuser=nobody\r\nautostart=true\r\nautorestart=true\r\n```\r\n## Actual behaviour\r\n**BUT Supervisord documentation says only one file path can provide and only one Unix doman socket and inet socket can create and listen**\r\nSee the Supervisord documentation link\r\nhttp://supervisord.org/configuration.html#unix-http-server-section-example\r\nAlso see answer to this issue @ Supervisord github page.\r\nhttps://github.com/Supervisor/supervisor/issues/1314\r\n**THEN How can we achieve what Aiohttp documentation describes**\r\n\r\n## Your environment\r\n_Ubuntu server, Supervisord 4.1.0 (2019-10-19), Nginx-1.17.7-open source. aiohttp==3.6.2_\r\n--\r\n\r\n    **Aiohttp- Server**\r\n     --> \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4487", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4487/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4487/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4487/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4487", "id": 545386376, "node_id": "MDU6SXNzdWU1NDUzODYzNzY=", "number": 4487, "title": " Exception Type: ValueError at /admin/ Exception Value: set_wakeup_fd only works in main thread", "user": {"login": "nima2000ir", "id": 18708176, "node_id": "MDQ6VXNlcjE4NzA4MTc2", "avatar_url": "https://avatars2.githubusercontent.com/u/18708176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nima2000ir", "html_url": "https://github.com/nima2000ir", "followers_url": "https://api.github.com/users/nima2000ir/followers", "following_url": "https://api.github.com/users/nima2000ir/following{/other_user}", "gists_url": "https://api.github.com/users/nima2000ir/gists{/gist_id}", "starred_url": "https://api.github.com/users/nima2000ir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nima2000ir/subscriptions", "organizations_url": "https://api.github.com/users/nima2000ir/orgs", "repos_url": "https://api.github.com/users/nima2000ir/repos", "events_url": "https://api.github.com/users/nima2000ir/events{/privacy}", "received_events_url": "https://api.github.com/users/nima2000ir/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986078, "node_id": "MDU6TGFiZWw1ODk4NjA3OA==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-05T07:54:23Z", "updated_at": "2020-01-05T21:54:10Z", "closed_at": "2020-01-05T21:54:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "pardon my English\r\ni have project that work god in django and mysql server but it dosnt work in apachi server\r\ni think it cant connect to mysql\r\n\r\n\r\nthe error is\r\n\r\nEnvironment:\r\n\r\n\r\nRequest Method: GET\r\nRequest URL: http://localhost/student/\r\n\r\nDjango Version: 3.0.2\r\nPython Version: 3.8.0\r\nInstalled Applications:\r\n['django.contrib.admin',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'student']\r\nInstalled Middleware:\r\n['django.middleware.security.SecurityMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'django.middleware.clickjacking.XFrameOptionsMiddleware']\r\n\r\n\r\nTemplate error:\r\nIn template c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\contrib\\admin\\templates\\student\\student_show.html, error at line 10\r\n   set_wakeup_fd only works in main thread\r\n   1 : <!DOCTYPE html>\r\n   2 : <html>\r\n   3 : <head>\r\n   4 :     <title>Student_Show</title>\r\n   5 : </head>\r\n   6 : <body>\r\n   7 : <h1>The Students Here at Dataflair</h1>\r\n   8 : <div>\r\n   9 :     <ul>\r\n   10 :         {% for stud in student %} \r\n   11 :        <li>\r\n   12 :          <h2>Name {{ stud.name }}</h2>\r\n   13 :          <p> department {{ stud.department}}</p>\r\n   14 :          <p> class {{ stud.stud_class}}</p>\r\n   15 :        </li>\r\n   16 :          {% endfor %}\r\n   17 :     </ul>\r\n   18 : </div>\r\n   19 : </body>\r\n   20 : </html>\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\core\\handlers\\exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"C:/Users/nima/Documents/django/my_application\\student\\views.py\", line 8, in student_show\r\n    return render(request, 'student/student_show.html', {'student': student})\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\shortcuts.py\", line 19, in render\r\n    content = loader.render_to_string(template_name, context, request, using=using)\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\template\\loader.py\", line 62, in render_to_string\r\n    return template.render(context, request)\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\template\\backends\\django.py\", line 61, in render\r\n    return self.template.render(context)\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\template\\base.py\", line 171, in render\r\n    return self._render(context)\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\template\\base.py\", line 163, in _render\r\n    return self.nodelist.render(context)\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\template\\base.py\", line 936, in render\r\n    bit = node.render_annotated(context)\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\template\\base.py\", line 903, in render_annotated\r\n    return self.render(context)\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\template\\defaulttags.py\", line 166, in render\r\n    len_values = len(values)\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\db\\models\\query.py\", line 258, in __len__\r\n    self._fetch_all()\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\db\\models\\query.py\", line 1261, in _fetch_all\r\n    self._result_cache = list(self._iterable_class(self))\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\db\\models\\query.py\", line 57, in __iter__\r\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\db\\models\\sql\\compiler.py\", line 1142, in execute_sql\r\n    cursor = self.connection.cursor()\r\n  File \"c:\\users\\nima\\envs\\my_application\\lib\\site-packages\\django\\utils\\asyncio.py\", line 19, in inner\r\n    event_loop = asyncio.get_event_loop()\r\n  File \"c:\\program files\\python38\\Lib\\asyncio\\events.py\", line 636, in get_event_loop\r\n    self.set_event_loop(self.new_event_loop())\r\n  File \"c:\\program files\\python38\\Lib\\asyncio\\events.py\", line 656, in new_event_loop\r\n    return self._loop_factory()\r\n  File \"c:\\program files\\python38\\Lib\\asyncio\\windows_events.py\", line 310, in __init__\r\n    super().__init__(proactor)\r\n  File \"c:\\program files\\python38\\Lib\\asyncio\\proactor_events.py\", line 633, in __init__\r\n    signal.set_wakeup_fd(self_no)\r\n\r\nException Type: ValueError at /student/\r\nException Value: set_wakeup_fd only works in main thread", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4478", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4478/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4478/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4478/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4478", "id": 544170119, "node_id": "MDU6SXNzdWU1NDQxNzAxMTk=", "number": 4478, "title": "Potential memory leak in aiohttp server", "user": {"login": "mvalkon", "id": 4346211, "node_id": "MDQ6VXNlcjQzNDYyMTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/4346211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mvalkon", "html_url": "https://github.com/mvalkon", "followers_url": "https://api.github.com/users/mvalkon/followers", "following_url": "https://api.github.com/users/mvalkon/following{/other_user}", "gists_url": "https://api.github.com/users/mvalkon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mvalkon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mvalkon/subscriptions", "organizations_url": "https://api.github.com/users/mvalkon/orgs", "repos_url": "https://api.github.com/users/mvalkon/repos", "events_url": "https://api.github.com/users/mvalkon/events{/privacy}", "received_events_url": "https://api.github.com/users/mvalkon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 344996043, "node_id": "MDU6TGFiZWwzNDQ5OTYwNDM=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/server", "name": "server", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, {"login": "gyermolenko", "id": 10965580, "node_id": "MDQ6VXNlcjEwOTY1NTgw", "avatar_url": "https://avatars1.githubusercontent.com/u/10965580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gyermolenko", "html_url": "https://github.com/gyermolenko", "followers_url": "https://api.github.com/users/gyermolenko/followers", "following_url": "https://api.github.com/users/gyermolenko/following{/other_user}", "gists_url": "https://api.github.com/users/gyermolenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/gyermolenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gyermolenko/subscriptions", "organizations_url": "https://api.github.com/users/gyermolenko/orgs", "repos_url": "https://api.github.com/users/gyermolenko/repos", "events_url": "https://api.github.com/users/gyermolenko/events{/privacy}", "received_events_url": "https://api.github.com/users/gyermolenko/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-12-31T11:47:20Z", "updated_at": "2020-01-07T14:27:16Z", "closed_at": "2020-01-07T14:27:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\nI have a small HTTP API written with aiohttp as the backend. I am seeing a constantly growing memory footprint which results in segmentation faults in production. The segfaults seem to occur somewhat randomly. I am not able to get the core dumps at the moment for analysis, so I have resorted to debugging this locally. I do not have conclusive proof, but I am looking for some pointers on where to go from here.\r\n\r\nThe API makes two external calls per request; one to external API using `aiottp.ClientSession` and another to DynamoDB to fetch data. In both cases we maintain a separate session for the lifetime of the application.\r\n\r\n## Expected behaviour\r\nStable memory consumption \r\n\r\n## Actual behaviour\r\nGrowing memory footprint at low rps. The following graph and tracemalloc data is from a short test where the API was run locally and traffic was generated at roughly 45 requests per second.\r\n\r\n![leak](https://user-images.githubusercontent.com/4346211/71620032-36c08500-2bd0-11ea-93c1-16ff8bcf2f5b.png)\r\n\r\nTracemalloc snapshot comparison between test start and finish points to [`RequestHandler.data_received()`](https://github.com/aio-libs/aiohttp/blob/3.6/aiohttp/web_protocol.py#L275)-method and [`TCPConnector._wrap_create_connection()`](https://github.com/aio-libs/aiohttp/blob/3.6/aiohttp/connector.py#L936)-method having the largest increase in memory.\r\n\r\n```\r\naiohttp/web_protocol.py:275: size=86.3 MiB (+81.0 MiB), count=316057 (+295361), average=286 B\r\naiohttp/connector.py:936: size=13.1 MiB (+2577 KiB), count=765 (+109), average=17.6 KiB\r\nbasictracer/text_propagator.py:30: size=2454 KiB (+2306 KiB), count=44869 (+42176), average=56 B\r\ntraceback.py:357: size=797 KiB (+207 KiB), count=9108 (+2303), average=90 B\r\nthrift/transport/THttpClient.py:153: size=0 B (-183 KiB), count=0 (-1)\r\nlightstep/tracer.py:106: size=287 KiB (+143 KiB), count=1296 (+670), average=227 B\r\ntraceback.py:285: size=385 KiB (+141 KiB), count=4552 (+1678), average=87 B\r\nlightstep/thrift_converter.py:61: size=40.8 KiB (-136 KiB), count=713 (-2378), average=59 B\r\nlightstep/util.py:37: size=37.7 KiB (-126 KiB), count=594 (-1984), average=65 B\r\njson/decoder.py:353: size=5208 KiB (+91.4 KiB), count=51545 (+1052), average=103 B\r\n```\r\n\r\nOjbgraph points to a large number of `CIMultiDict`-objects in memory and the following object graph can be generated (not sure how helpful this is)\r\n\r\n![test](https://user-images.githubusercontent.com/4346211/71620186-35438c80-2bd1-11ea-9a42-8856384685ab.png)\r\n\r\nAdditionally I am seeing errors reported in https://github.com/aio-libs/aiohttp/issues/3535 when traffic generation stops. \r\n```\r\n<uvloop.loop.SSLProtocol object at 0x108602bd0>: Fatal error on transport\r\nTraceback (most recent call last):\r\n  File \"uvloop/sslproto.pyx\", line 571, in uvloop.loop.SSLProtocol._do_shutdown\r\n  File \"/usr/local/opt/pyenv/versions/3.7.5/lib/python3.7/ssl.py\", line 778, in unwrap\r\n    return self._sslobj.shutdown()\r\nssl.SSLError: [SSL: KRB5_S_INIT] application data after close notify (_ssl.c:2629)\r\n```\r\nAny pointers on where to go from here for further debugging would be much appreciated.\r\n\r\n## Steps to reproduce\r\n\r\nUnfortunately none at the moment. I will try to isolate a reproduceable snippet.\r\n\r\n## Your environment\r\n\r\nThe memory consumption is increased on both os x (my laptop) and on an ubuntu based docker image running on Kubernetes. \r\n\r\naiohttp version is 3.6.2 with uvloop on python 3.7.5, server and client.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4477", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4477/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4477/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4477/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4477", "id": 544070593, "node_id": "MDU6SXNzdWU1NDQwNzA1OTM=", "number": 4477, "title": "Deprection Warnings python3.8 event loop", "user": {"login": "L1ghtn1ng", "id": 3628354, "node_id": "MDQ6VXNlcjM2MjgzNTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3628354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/L1ghtn1ng", "html_url": "https://github.com/L1ghtn1ng", "followers_url": "https://api.github.com/users/L1ghtn1ng/followers", "following_url": "https://api.github.com/users/L1ghtn1ng/following{/other_user}", "gists_url": "https://api.github.com/users/L1ghtn1ng/gists{/gist_id}", "starred_url": "https://api.github.com/users/L1ghtn1ng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/L1ghtn1ng/subscriptions", "organizations_url": "https://api.github.com/users/L1ghtn1ng/orgs", "repos_url": "https://api.github.com/users/L1ghtn1ng/repos", "events_url": "https://api.github.com/users/L1ghtn1ng/events{/privacy}", "received_events_url": "https://api.github.com/users/L1ghtn1ng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986078, "node_id": "MDU6TGFiZWw1ODk4NjA3OA==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "TBBle", "id": 138397, "node_id": "MDQ6VXNlcjEzODM5Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/138397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TBBle", "html_url": "https://github.com/TBBle", "followers_url": "https://api.github.com/users/TBBle/followers", "following_url": "https://api.github.com/users/TBBle/following{/other_user}", "gists_url": "https://api.github.com/users/TBBle/gists{/gist_id}", "starred_url": "https://api.github.com/users/TBBle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TBBle/subscriptions", "organizations_url": "https://api.github.com/users/TBBle/orgs", "repos_url": "https://api.github.com/users/TBBle/repos", "events_url": "https://api.github.com/users/TBBle/events{/privacy}", "received_events_url": "https://api.github.com/users/TBBle/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "TBBle", "id": 138397, "node_id": "MDQ6VXNlcjEzODM5Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/138397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TBBle", "html_url": "https://github.com/TBBle", "followers_url": "https://api.github.com/users/TBBle/followers", "following_url": "https://api.github.com/users/TBBle/following{/other_user}", "gists_url": "https://api.github.com/users/TBBle/gists{/gist_id}", "starred_url": "https://api.github.com/users/TBBle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TBBle/subscriptions", "organizations_url": "https://api.github.com/users/TBBle/orgs", "repos_url": "https://api.github.com/users/TBBle/repos", "events_url": "https://api.github.com/users/TBBle/events{/privacy}", "received_events_url": "https://api.github.com/users/TBBle/received_events", "type": "User", "site_admin": false}, {"login": "L1ghtn1ng", "id": 3628354, "node_id": "MDQ6VXNlcjM2MjgzNTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3628354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/L1ghtn1ng", "html_url": "https://github.com/L1ghtn1ng", "followers_url": "https://api.github.com/users/L1ghtn1ng/followers", "following_url": "https://api.github.com/users/L1ghtn1ng/following{/other_user}", "gists_url": "https://api.github.com/users/L1ghtn1ng/gists{/gist_id}", "starred_url": "https://api.github.com/users/L1ghtn1ng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/L1ghtn1ng/subscriptions", "organizations_url": "https://api.github.com/users/L1ghtn1ng/orgs", "repos_url": "https://api.github.com/users/L1ghtn1ng/repos", "events_url": "https://api.github.com/users/L1ghtn1ng/events{/privacy}", "received_events_url": "https://api.github.com/users/L1ghtn1ng/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 16, "created_at": "2019-12-31T02:44:03Z", "updated_at": "2020-08-01T10:50:47Z", "closed_at": "2019-12-31T22:39:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi in python3.8 these are the following warning that are generated when  creating unit tests in pytest-asyncio\r\n\r\n```/root/.local/share/virtualenvs/theHarvester-WYlMBOYj/lib/python3.8/site-packages/aiohttp/helpers.py:107\r\n  /root/.local/share/virtualenvs/theHarvester-WYlMBOYj/lib/python3.8/site-packages/aiohttp/helpers.py:107: DeprecationWarning: \"@coroutine\" decorator is deprecated since Python 3.8, use \"async def\" instead\r\n    def noop(*args, **kwargs):  # type: ignore\r\n\r\n\r\n  /root/.local/share/virtualenvs/theHarvester-WYlMBOYj/lib/python3.8/site-packages/aiohttp/connector.py:964: DeprecationWarning: The loop argument is deprecated since Python 3.8, and scheduled for removal in Python 3.10.\r\n    hosts = await asyncio.shield(self._resolve_host(\r\n\r\n  /root/.local/share/virtualenvs/theHarvester-WYlMBOYj/lib/python3.8/site-packages/aiohttp/locks.py:21: DeprecationWarning: The loop argument is deprecated since Python 3.8, and scheduled for removal in Python 3.10.\r\n    self._event = asyncio.Event(loop=loop)\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4474", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4474/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4474/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4474/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4474", "id": 543843360, "node_id": "MDU6SXNzdWU1NDM4NDMzNjA=", "number": 4474, "title": "Maximum request body size 1048576 exceeded, actual body size 1049648", "user": {"login": "Th0rgal", "id": 41830259, "node_id": "MDQ6VXNlcjQxODMwMjU5", "avatar_url": "https://avatars1.githubusercontent.com/u/41830259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Th0rgal", "html_url": "https://github.com/Th0rgal", "followers_url": "https://api.github.com/users/Th0rgal/followers", "following_url": "https://api.github.com/users/Th0rgal/following{/other_user}", "gists_url": "https://api.github.com/users/Th0rgal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Th0rgal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Th0rgal/subscriptions", "organizations_url": "https://api.github.com/users/Th0rgal/orgs", "repos_url": "https://api.github.com/users/Th0rgal/repos", "events_url": "https://api.github.com/users/Th0rgal/events{/privacy}", "received_events_url": "https://api.github.com/users/Th0rgal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-30T11:15:26Z", "updated_at": "2020-01-02T10:43:41Z", "closed_at": "2020-01-02T07:56:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\nI'm trying to uploads small files (less than 120MiB) to my server written with aiohttp but when they are a little too bigs it doesn't work.\r\n\r\n## Expected behaviour\r\nThe request should be handled.\r\n\r\n## Actual behaviour\r\nThe server returns:\r\nMaximum request body size 1048576 exceeded, actual body size 1049648\r\n\r\n## Steps to reproduce\r\nClone my small server polymath: https://github.com/Th0rgal/Polymath/blob/master/server.py\r\nPerform: \r\ncurl -F \"pack=@./file.zip\" -F \"id=666599\" -X POST http://localhost:8080/upload                    \r\n\r\n## Your environment\r\nMy server runs under nixos 19.09 (linux 5.4.6) and I get this error with any clients (windows, ubuntu, nixos, etc).\r\n\r\nIs there a way to change this limit server-sidely?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4473", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4473/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4473/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4473/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4473", "id": 543225035, "node_id": "MDU6SXNzdWU1NDMyMjUwMzU=", "number": 4473, "title": "Can't process form fields + multipart file uploads: Could not find starting boundary", "user": {"login": "TensorTom", "id": 14287229, "node_id": "MDQ6VXNlcjE0Mjg3MjI5", "avatar_url": "https://avatars2.githubusercontent.com/u/14287229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TensorTom", "html_url": "https://github.com/TensorTom", "followers_url": "https://api.github.com/users/TensorTom/followers", "following_url": "https://api.github.com/users/TensorTom/following{/other_user}", "gists_url": "https://api.github.com/users/TensorTom/gists{/gist_id}", "starred_url": "https://api.github.com/users/TensorTom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TensorTom/subscriptions", "organizations_url": "https://api.github.com/users/TensorTom/orgs", "repos_url": "https://api.github.com/users/TensorTom/repos", "events_url": "https://api.github.com/users/TensorTom/events{/privacy}", "received_events_url": "https://api.github.com/users/TensorTom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-12-28T16:09:51Z", "updated_at": "2020-03-10T06:34:56Z", "closed_at": "2020-01-24T16:53:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to process a form that has several fields and multiple file upload fields. I'm re-using the code I already have for uploading a single image and nothing else. I'm trying to adapt it to handle multiple files along with other form fields (Hence the while loop). Function:\r\n\r\n```\r\n    async def store_images(self, request, item, image_num):\r\n        reader = await request.multipart()\r\n        pprint(reader)\r\n        while True:\r\n            field = await reader.next()\r\n            \r\n            if field is None or field.filename is None:\r\n                continue\r\n            original_filename = field.filename\r\n            print(\"filename orig:\", original_filename)\r\n            file_extension = str(Path(field.filename).suffix).lower()\r\n            filename = f\"{item}_{image_num}{file_extension}\"\r\n            if not original_filename:\r\n                return False, \"No file chosen\", \"Try again\"\r\n            if file_extension != \".png\" and file_extension != '.jpg' and file_extension != '.jpeg':\r\n                return False, \"Bad file format\", \"Only png and jpg images allowed.\"\r\n\r\n            new_path = os.path.join('/images/', filename)\r\n            # You cannot rely on Content-Length if transfer is chunked.\r\n            size = 0\r\n            with open(new_path, 'wb') as f:\r\n                while True:\r\n                    chunk = await field.read_chunk()  # 8192 bytes by default.\r\n                    if not chunk:\r\n                        break\r\n                    #pprint(chunk)\r\n                    if 'acTL' in str(chunk):\r\n                        return False, \"Sorry,\", \"Only static images allowed.\"\r\n                    size += len(chunk)\r\n                    if size > 1000000:\r\n                        os.remove(new_path)\r\n                        return False, \"Too big,\", \"1MB max.\"\r\n                    f.write(chunk)\r\n            if file_extension == '.jpg' or file_extension == '.jpeg':\r\n                im = Image.open(new_path)\r\n                im.save(os.path.join('/images/', f\"{item}_{image_num}.png\"))\r\n            return True, \"Image uploaded!\", \"redirecting\"\r\n```\r\n\r\nThe form tag:\r\n```\r\n<form action=\"/submit_form\" method=\"POST\" accept-charset=\"utf-8\" enctype=\"multipart/form-data\">\r\n```\r\n\r\naiohttp web running on Linux x86_64 Python3\r\n\r\nI am getting all the POST data from my fields by the usual request.post() but my file upload function throws:\r\n\r\n`Could not find starting boundary b'-----------------------------782338621183287065832555821'`\r\n\r\nafter passing it the `request` object.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4470", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4470/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4470/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4470/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4470", "id": 541931504, "node_id": "MDU6SXNzdWU1NDE5MzE1MDQ=", "number": 4470, "title": "AioHTTP not working with external address (only working in localhost)", "user": {"login": "Th0rgal", "id": 41830259, "node_id": "MDQ6VXNlcjQxODMwMjU5", "avatar_url": "https://avatars1.githubusercontent.com/u/41830259?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Th0rgal", "html_url": "https://github.com/Th0rgal", "followers_url": "https://api.github.com/users/Th0rgal/followers", "following_url": "https://api.github.com/users/Th0rgal/following{/other_user}", "gists_url": "https://api.github.com/users/Th0rgal/gists{/gist_id}", "starred_url": "https://api.github.com/users/Th0rgal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Th0rgal/subscriptions", "organizations_url": "https://api.github.com/users/Th0rgal/orgs", "repos_url": "https://api.github.com/users/Th0rgal/repos", "events_url": "https://api.github.com/users/Th0rgal/events{/privacy}", "received_events_url": "https://api.github.com/users/Th0rgal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-23T23:15:11Z", "updated_at": "2019-12-24T14:07:27Z", "closed_at": "2019-12-24T10:37:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nI was working on my really simple project polymath using https://github.com/Th0rgal/Polymath, everything worked fine in local. I can for example do:\r\ncurl \"localhost:8080/debug\"\r\nand I get:\r\n\"It seems to be working...\"\r\n\r\nSo I deployed it to my vps ...but ``curl \"hestia.oraxen.com:8080/debug\"`` where hestia.oraxen.com is the url of my vps isn't working. It is working with ``curl \"localhost:8080/debug\"`` from ssh though.\r\n\r\n## Expected behaviour\r\nI should get this message even if using the domain name: \"It seems to be working...\"\r\n\r\n## Actual behaviour\r\n``curl: (7) Failed to connect to hestia.oraxen.com port 8080: Connection timed out``\r\n\r\n## Steps to reproduce\r\n\r\nDeploy https://github.com/Th0rgal/Polymath\r\nTry ``curl \"your_adress:8080/debug\"``\r\n\r\n## Your environment\r\n\r\nI'm using a VPS from oracle cloud with nixos installed. Here is my configuration: https://github.com/Th0rgal/vps-hestia-nixos\r\n\r\nAs you can see I allowed the port 8080 in my firewall (I also tried to disable it completely and I got the same result).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4461", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4461/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4461/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4461/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4461", "id": 540758045, "node_id": "MDU6SXNzdWU1NDA3NTgwNDU=", "number": 4461, "title": "Using routing decorators with instance methods", "user": {"login": "AustEcon", "id": 8123976, "node_id": "MDQ6VXNlcjgxMjM5NzY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8123976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AustEcon", "html_url": "https://github.com/AustEcon", "followers_url": "https://api.github.com/users/AustEcon/followers", "following_url": "https://api.github.com/users/AustEcon/following{/other_user}", "gists_url": "https://api.github.com/users/AustEcon/gists{/gist_id}", "starred_url": "https://api.github.com/users/AustEcon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AustEcon/subscriptions", "organizations_url": "https://api.github.com/users/AustEcon/orgs", "repos_url": "https://api.github.com/users/AustEcon/repos", "events_url": "https://api.github.com/users/AustEcon/events{/privacy}", "received_events_url": "https://api.github.com/users/AustEcon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-20T04:52:45Z", "updated_at": "2019-12-23T02:47:27Z", "closed_at": "2019-12-23T02:47:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nI am trying to extend my restapi with new endpoints but in order to write more complex handlers, it is beneficial to make use of instance methods. However, I still want to be able to use the decorator syntax for routes like `@routes.get()` because I like how it keeps contextually relevant information in one place (**http method, path and handler**) rather than scrolling up and down through many handlers and adding a new route:\r\n\r\n```\r\n# extension_endpoints.py\r\nroutes = web.RouteTableDef()\r\n\r\n\r\nclass DefaultEndpoints:\r\n\r\n    def __init__(self):\r\n        pass\r\n\r\n    @routes.get(\"/\")\r\n    async def status(self, request):\r\n        return web.json_response({\r\n            \"status\": \"success\",\r\n        })\r\n```\r\nThe issue with this is when I add the routes as-is like:\r\n\r\n```\r\n# main.py\r\nfrom .extension_endpoints import routes as default_routes\r\n<insert logic for adding routes to app>...\r\n```\r\n\r\nthey have been registered as **classmethods** and so **at runtime** there will be a 500 error with complaints in console output about the extra \"self\" parameter...\r\n\r\n## Expected behaviour\r\n\r\nIs there some recommended or easy way to use decorator syntax with instance methods??\r\nCurrently I am constructing my own custom UrlDispatcher by instatiating DefaultEndpoints() and iterating over the original routing table but modify the handlers to instance methods then finally add my transformed UrlDispatcher to app like:\r\n\r\n`app.router = my_custom_urldispatcher_instance`\r\n\r\nIt seems like there should be an easier way to implement this. Thanks for any insights you can provide \ud83d\ude09 \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4450", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4450/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4450/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4450/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4450", "id": 539652701, "node_id": "MDU6SXNzdWU1Mzk2NTI3MDE=", "number": 4450, "title": "Python executable crashing when aiohttp installed", "user": {"login": "w1-naserieh", "id": 47349696, "node_id": "MDQ6VXNlcjQ3MzQ5Njk2", "avatar_url": "https://avatars2.githubusercontent.com/u/47349696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/w1-naserieh", "html_url": "https://github.com/w1-naserieh", "followers_url": "https://api.github.com/users/w1-naserieh/followers", "following_url": "https://api.github.com/users/w1-naserieh/following{/other_user}", "gists_url": "https://api.github.com/users/w1-naserieh/gists{/gist_id}", "starred_url": "https://api.github.com/users/w1-naserieh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/w1-naserieh/subscriptions", "organizations_url": "https://api.github.com/users/w1-naserieh/orgs", "repos_url": "https://api.github.com/users/w1-naserieh/repos", "events_url": "https://api.github.com/users/w1-naserieh/events{/privacy}", "received_events_url": "https://api.github.com/users/w1-naserieh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-18T12:31:23Z", "updated_at": "2019-12-18T14:56:47Z", "closed_at": "2019-12-18T14:56:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nHi, I'm working on a project where I use (among other things) aiohttp.\r\nWhen I run the .py file everything works fine but whenever I compile it to exe using pyinstaller it crashes 'Python.exe stopped working'.\r\n\r\n## Expected behaviour\r\nI'm expecting that it should connect and work (the exe) just like the .py file.\r\n\r\n## Actual behaviour\r\nWhat is happening? the exe crashes instantly while the .py file works fine.\r\n\r\n## Your environment\r\nPython 3.6.0\r\naiohttp 3.6.2\r\nsocketio 0.2.1\r\nasyncio 3.4.3\r\nWindows 10\r\naiohttp(client)\r\n\r\n## Other\r\n#276 has the same issue but his fix doesn't fix mine.\r\nYes I did include aiohttp in hiddenimports.\r\nInstalled packages:\r\n```\r\naiodns==2.0.0\r\naiohttp==3.6.2\r\naltgraph==0.16.1\r\nasn1crypto==0.24.0\r\nasync-timeout==3.0.1\r\nasyncio==3.4.3\r\nattrs==19.3.0\r\nbeautifulsoup4==4.8.1\r\nbrotlipy==0.7.0\r\nbs4==0.0.1\r\ncchardet==2.1.5\r\ncertifi==2019.11.28\r\ncffi==1.13.2\r\nchardet==3.0.4\r\nClick==7.0\r\ncolorama==0.4.3\r\ncryptography==2.6.1\r\ndnspython==1.16.0\r\ndocopt==0.6.2\r\nFlask==1.1.1\r\nFlask-SocketIO==4.2.1\r\nfuture==0.18.2\r\nidna==2.8\r\nidna-ssl==1.1.0\r\nitsdangerous==1.1.0\r\nJinja2==2.10.3\r\nJs2Py==0.66\r\njwcrypto==0.6.0\r\njwt==0.6.1\r\nlxml==4.4.2\r\nMarkupSafe==1.1.1\r\nmultidict==4.7.1\r\nnames==0.3.0\r\nnetifaces==0.10.6\r\nnumpy==1.17.4\r\npefile==2019.4.18\r\nprotobuf==3.8.0rc1\r\nproxy-manager==0.0.6\r\npsutil==5.6.7\r\npyarmor==5.5.0\r\npycares==3.1.0\r\npycparser==2.19\r\npyi==0.1.0\r\nPyInstaller==3.5\r\npyjsparser==2.7.1\r\nPyJWT==1.7.1\r\npymongo==3.10.0\r\npython-axolotl==0.2.2\r\npython-axolotl-curve25519==0.4.1.post2\r\npython-dateutil==2.8.0\r\npython-engineio==3.11.1\r\npython-jwt==3.2.5\r\npython-magic-bin==0.4.14\r\npython-socketio==4.4.0\r\npytz==2019.3\r\npywin32==227\r\npywin32-ctypes==0.2.0\r\nrequests==2.22.0\r\nselenium==3.141.0\r\nsix==1.12.0\r\nsocketio==0.2.1\r\nsoupsieve==1.9.5\r\ntermcolor==1.1.0\r\ntyping==3.7.4.1\r\ntyping-extensions==3.7.4.1\r\ntzlocal==2.0.0\r\nujson==1.35\r\nurllib3==1.25.7\r\nwebwhatsapi==2.0.5\r\nWerkzeug==0.16.0\r\nxlrd==1.2.0\r\nyarl==1.4.2```\r\n \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4449", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4449/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4449/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4449/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4449", "id": 539588094, "node_id": "MDU6SXNzdWU1Mzk1ODgwOTQ=", "number": 4449, "title": "websocket miss messages after add other coroutines into the event loop", "user": {"login": "yushizhao", "id": 23001757, "node_id": "MDQ6VXNlcjIzMDAxNzU3", "avatar_url": "https://avatars1.githubusercontent.com/u/23001757?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yushizhao", "html_url": "https://github.com/yushizhao", "followers_url": "https://api.github.com/users/yushizhao/followers", "following_url": "https://api.github.com/users/yushizhao/following{/other_user}", "gists_url": "https://api.github.com/users/yushizhao/gists{/gist_id}", "starred_url": "https://api.github.com/users/yushizhao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yushizhao/subscriptions", "organizations_url": "https://api.github.com/users/yushizhao/orgs", "repos_url": "https://api.github.com/users/yushizhao/repos", "events_url": "https://api.github.com/users/yushizhao/events{/privacy}", "received_events_url": "https://api.github.com/users/yushizhao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-18T10:21:45Z", "updated_at": "2019-12-20T03:00:42Z", "closed_at": "2019-12-20T03:00:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I have one thread with one websocket client, everything is fine.\r\nWhen I add other coroutines into the event loop where the websocket client is, it start to miss messages.\r\nI create a new thread and move those new coroutines into that thread in a new the event loop, still,\r\nthe websocket client miss messages.\r\n\r\nAm I use the websocket client in a wrong way, can they share the event loop with others?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4446", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4446/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4446/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4446/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4446", "id": 538597552, "node_id": "MDU6SXNzdWU1Mzg1OTc1NTI=", "number": 4446, "title": "Why isn't aiodns used?", "user": {"login": "vangheem", "id": 524413, "node_id": "MDQ6VXNlcjUyNDQxMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/524413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vangheem", "html_url": "https://github.com/vangheem", "followers_url": "https://api.github.com/users/vangheem/followers", "following_url": "https://api.github.com/users/vangheem/following{/other_user}", "gists_url": "https://api.github.com/users/vangheem/gists{/gist_id}", "starred_url": "https://api.github.com/users/vangheem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vangheem/subscriptions", "organizations_url": "https://api.github.com/users/vangheem/orgs", "repos_url": "https://api.github.com/users/vangheem/repos", "events_url": "https://api.github.com/users/vangheem/events{/privacy}", "received_events_url": "https://api.github.com/users/vangheem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-16T19:09:28Z", "updated_at": "2019-12-18T15:07:51Z", "closed_at": "2019-12-18T15:07:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nThe documentation recommends to install aiodns. Reality is that even though aiodns might be installed, it's forced to not be used: https://github.com/aio-libs/aiohttp/blob/master/aiohttp/resolver.py#L11\r\n\r\n## Expected behaviour\r\n\r\naiodns to be used\r\n\r\n## Actual behaviour\r\n\r\naiodns is not used\r\n\r\n\r\n## workaround\r\n\r\nEvery time you create a `ClientSession`...\r\n\r\n```python\r\nfrom aiohttp.resolver import AsyncResolver\r\n\r\nasync with aiohttp.ClientSession(\r\n        connector=aiohttp.TCPConnector(resolver=AsyncResolver())) as session:\r\n    pass\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4426", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4426/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4426/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4426/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4426", "id": 534475780, "node_id": "MDU6SXNzdWU1MzQ0NzU3ODA=", "number": 4426, "title": "Aiohttp stream 1 was not closed cleanly when serving static files", "user": {"login": "enugentdt", "id": 29146987, "node_id": "MDQ6VXNlcjI5MTQ2OTg3", "avatar_url": "https://avatars1.githubusercontent.com/u/29146987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/enugentdt", "html_url": "https://github.com/enugentdt", "followers_url": "https://api.github.com/users/enugentdt/followers", "following_url": "https://api.github.com/users/enugentdt/following{/other_user}", "gists_url": "https://api.github.com/users/enugentdt/gists{/gist_id}", "starred_url": "https://api.github.com/users/enugentdt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/enugentdt/subscriptions", "organizations_url": "https://api.github.com/users/enugentdt/orgs", "repos_url": "https://api.github.com/users/enugentdt/repos", "events_url": "https://api.github.com/users/enugentdt/events{/privacy}", "received_events_url": "https://api.github.com/users/enugentdt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-08T01:13:27Z", "updated_at": "2019-12-10T20:58:13Z", "closed_at": "2019-12-10T20:35:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nEssentially, when I have static content served through aiohttp using the following code:\r\n\r\n```python\r\napp.add_routes([web.static('/static', 'static')])\r\n```\r\n\r\nthe server throws an HTTP2 error when querying the files:\r\n\r\n```\r\ncurl: (92) HTTP/2 stream 1 was not closed cleanly: INTERNAL_ERROR (err 2)\r\n```\r\n\r\n<!-- Please describe your problem and why the fix is important. -->\r\n\r\n## Expected behaviour\r\n\r\nThis should serve content as expected over HTTP2, or downgrade to HTTP1 if it cannot handle it.\r\n\r\n<!-- What is the behaviour you expect? -->\r\n\r\n## Actual behaviour\r\n\r\nIt closes the connection early, resulting in the content not being delivered properly to the client.\r\n\r\n<!-- What's actually happening? -->\r\n\r\n## Steps to reproduce\r\n\r\nCreate a basic server, and use the above mentioned line of code to serve a static file. If the client requests over HTTP2, it will fail.\r\n\r\n<!-- Please describe steps to reproduce the issue.\r\n     If you have a script that does that please include it here within\r\n     markdown code markup -->\r\n\r\n## Your environment\r\n\r\nSeems to be pretty agnostic, but mainly happens on Python 3.7 on Linux (CentOS, but also in Alpine Docker images). Latest version of aiohttp server.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4419", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4419/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4419/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4419/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4419", "id": 532692765, "node_id": "MDU6SXNzdWU1MzI2OTI3NjU=", "number": 4419, "title": "aiohttp server: run_app coroutine?", "user": {"login": "JulienPalard", "id": 239510, "node_id": "MDQ6VXNlcjIzOTUxMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/239510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulienPalard", "html_url": "https://github.com/JulienPalard", "followers_url": "https://api.github.com/users/JulienPalard/followers", "following_url": "https://api.github.com/users/JulienPalard/following{/other_user}", "gists_url": "https://api.github.com/users/JulienPalard/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulienPalard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulienPalard/subscriptions", "organizations_url": "https://api.github.com/users/JulienPalard/orgs", "repos_url": "https://api.github.com/users/JulienPalard/repos", "events_url": "https://api.github.com/users/JulienPalard/events{/privacy}", "received_events_url": "https://api.github.com/users/JulienPalard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}, {"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-04T13:42:04Z", "updated_at": "2019-12-22T16:45:43Z", "closed_at": "2019-12-22T16:45:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Long story short\r\n\r\nI think I'd like to do:\r\n```python\r\nasync with ClientSession() as session:\r\n    await web.run_app(app)\r\n```\r\n\r\nto reuse an aiohttp client session during the whole life of a server.  Or any other asyncornous context manager like a connection to a database and so on.\r\n\r\n## Expected behaviour\r\n\r\nTo easily run an aiohttp server inside an asyncronous context manager.\r\n\r\n## Actual behaviour\r\n\r\nI'm actually doing:\r\n```python\r\n    async def on_startup_wrapper(app):\r\n        app[\"aiohttp_client_session\"] = await ClientSession().__aenter__()\r\n\r\n    async def on_cleanup_wrapper(app):\r\n        await app[\"aiohttp_client_session\"].__aexit__(None, None, None)\r\n\r\n    app.on_startup.append(on_startup_wrapper)\r\n    app.on_cleanup.append(on_cleanup_wrapper)\r\n```\r\n\r\nbut I'm not proud of it.\r\n\r\nObviously it can't be done with the actual `run_app`, and probably easily done with the `_run_app`, but, `_`.\r\n\r\nMaybe the `AppRunner` could eat some code from `_run_app` allowing one to completly bypass `_run_app` with something like:\r\n\r\n```python\r\nrunner = AppRunner(app, ...)\r\nawait runner.setup(host, path, sock, port)  # Doing most of _run_app current code here\r\nasync with Something() as something:\r\n    app[\"something\"] = something\r\n    await runner.run_forever()  # The while True of the current _run_app\r\n```\r\n\r\nDoes it looks like a good idea? Should I try a PR? Or am I getting something wrong?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4418", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4418/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4418/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4418/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4418", "id": 531386478, "node_id": "MDU6SXNzdWU1MzEzODY0Nzg=", "number": 4418, "title": "can not find a way to creat a cookie", "user": {"login": "viponedream", "id": 16624529, "node_id": "MDQ6VXNlcjE2NjI0NTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/16624529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viponedream", "html_url": "https://github.com/viponedream", "followers_url": "https://api.github.com/users/viponedream/followers", "following_url": "https://api.github.com/users/viponedream/following{/other_user}", "gists_url": "https://api.github.com/users/viponedream/gists{/gist_id}", "starred_url": "https://api.github.com/users/viponedream/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viponedream/subscriptions", "organizations_url": "https://api.github.com/users/viponedream/orgs", "repos_url": "https://api.github.com/users/viponedream/repos", "events_url": "https://api.github.com/users/viponedream/events{/privacy}", "received_events_url": "https://api.github.com/users/viponedream/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-02T18:13:29Z", "updated_at": "2019-12-02T22:56:16Z", "closed_at": "2019-12-02T22:54:29Z", "author_association": "NONE", "active_lock_reason": "off-topic", "body": "`requests` can easy to make a cookie like this:( with `domain` and `name`, `value`, `path`)\r\n\r\n```python\r\nc = requests.cookies.create_cookie(name, value, domain=domain, path=path)\r\nrequests_session.cookies.set_cookie(c)\r\n```\r\n\r\n===========\r\nin aiohttp, how to set the cookie?\r\n```python\r\n    cookie_jar = aiohttp.CookieJar(unsafe=True)\r\n    session = aiohttp.ClientSession(cookie_jar=cookie_jar)\r\n```\r\nthe `CookieJar` only has a `update_cookies` method\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4403", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4403/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4403/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4403/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4403", "id": 530295585, "node_id": "MDU6SXNzdWU1MzAyOTU1ODU=", "number": 4403, "title": "Http exception with list on body", "user": {"login": "rafa-acioly", "id": 11068059, "node_id": "MDQ6VXNlcjExMDY4MDU5", "avatar_url": "https://avatars2.githubusercontent.com/u/11068059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafa-acioly", "html_url": "https://github.com/rafa-acioly", "followers_url": "https://api.github.com/users/rafa-acioly/followers", "following_url": "https://api.github.com/users/rafa-acioly/following{/other_user}", "gists_url": "https://api.github.com/users/rafa-acioly/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafa-acioly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafa-acioly/subscriptions", "organizations_url": "https://api.github.com/users/rafa-acioly/orgs", "repos_url": "https://api.github.com/users/rafa-acioly/repos", "events_url": "https://api.github.com/users/rafa-acioly/events{/privacy}", "received_events_url": "https://api.github.com/users/rafa-acioly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-29T11:23:21Z", "updated_at": "2019-11-30T09:51:39Z", "closed_at": "2019-11-29T14:10:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\nI've created the middleware to handle errors and i'm \"catching\" every instance of `web.HTTPException` so i can format the response payload.\r\nIn a point of my code i raise an `HTTPBadRequest` and i want to pass a list to it but it doesn't work.\r\n\r\n>ValueError: Unsupported body type <class 'list'>\r\n\r\n<!-- Please describe your problem and why the fix is important. -->\r\n\r\n## Expected behaviour\r\n\r\nCan i get the errors list and retrieve it on my json response?\r\n\r\n## Actual behaviour\r\n\r\n>ValueError: Unsupported body type <class 'list'>\r\n\r\n## Steps to reproduce\r\n\r\n```py\r\n@middleware\r\nasync def error_middleware(request, handler):\r\n    try:\r\n        return await handler(request)\r\n    except web.HTTPException as error:\r\n        error_response = {\r\n            'error_message': error.text,\r\n            'error_reason': error.reason,\r\n            'error_detail': error.body\r\n        }\r\n\r\n        return json_response(\r\n            data=error_response,\r\n            status=_error.value,\r\n            reason=_error.description\r\n        )\r\n    except Exception as generic_error:\r\n        logger.exception(f'Generic erro:{generic_error}')\r\n        raise\r\n```\r\n\r\n```py\r\nraise HTTPBadRequest(body=[\"key x needs to be greater than 0\", \"key y Invalid datetime format\"])\r\n```\r\n\r\n## Your environment\r\n\r\naiohttp==3.5.4\r\npython==3.7\r\n\r\nIMPORTANT: server\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4390", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4390/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4390/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4390/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4390", "id": 529015609, "node_id": "MDU6SXNzdWU1MjkwMTU2MDk=", "number": 4390, "title": "Aiohttp.web unsupported for 3.8", "user": {"login": "XuaTheGrate", "id": 17090652, "node_id": "MDQ6VXNlcjE3MDkwNjUy", "avatar_url": "https://avatars2.githubusercontent.com/u/17090652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XuaTheGrate", "html_url": "https://github.com/XuaTheGrate", "followers_url": "https://api.github.com/users/XuaTheGrate/followers", "following_url": "https://api.github.com/users/XuaTheGrate/following{/other_user}", "gists_url": "https://api.github.com/users/XuaTheGrate/gists{/gist_id}", "starred_url": "https://api.github.com/users/XuaTheGrate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XuaTheGrate/subscriptions", "organizations_url": "https://api.github.com/users/XuaTheGrate/orgs", "repos_url": "https://api.github.com/users/XuaTheGrate/repos", "events_url": "https://api.github.com/users/XuaTheGrate/events{/privacy}", "received_events_url": "https://api.github.com/users/XuaTheGrate/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": {"login": "XuaTheGrate", "id": 17090652, "node_id": "MDQ6VXNlcjE3MDkwNjUy", "avatar_url": "https://avatars2.githubusercontent.com/u/17090652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XuaTheGrate", "html_url": "https://github.com/XuaTheGrate", "followers_url": "https://api.github.com/users/XuaTheGrate/followers", "following_url": "https://api.github.com/users/XuaTheGrate/following{/other_user}", "gists_url": "https://api.github.com/users/XuaTheGrate/gists{/gist_id}", "starred_url": "https://api.github.com/users/XuaTheGrate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XuaTheGrate/subscriptions", "organizations_url": "https://api.github.com/users/XuaTheGrate/orgs", "repos_url": "https://api.github.com/users/XuaTheGrate/repos", "events_url": "https://api.github.com/users/XuaTheGrate/events{/privacy}", "received_events_url": "https://api.github.com/users/XuaTheGrate/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "XuaTheGrate", "id": 17090652, "node_id": "MDQ6VXNlcjE3MDkwNjUy", "avatar_url": "https://avatars2.githubusercontent.com/u/17090652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XuaTheGrate", "html_url": "https://github.com/XuaTheGrate", "followers_url": "https://api.github.com/users/XuaTheGrate/followers", "following_url": "https://api.github.com/users/XuaTheGrate/following{/other_user}", "gists_url": "https://api.github.com/users/XuaTheGrate/gists{/gist_id}", "starred_url": "https://api.github.com/users/XuaTheGrate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XuaTheGrate/subscriptions", "organizations_url": "https://api.github.com/users/XuaTheGrate/orgs", "repos_url": "https://api.github.com/users/XuaTheGrate/repos", "events_url": "https://api.github.com/users/XuaTheGrate/events{/privacy}", "received_events_url": "https://api.github.com/users/XuaTheGrate/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 11, "created_at": "2019-11-26T22:53:18Z", "updated_at": "2019-12-09T08:25:55Z", "closed_at": "2019-12-09T08:25:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\n<!-- Please describe your problem and why the fix is important. -->\r\nAiohttp.web servers on 3.8 appear to refuse all requests. Tested with 3.7 and it works fine.\r\n\r\n## Expected behaviour\r\n\r\n<!-- What is the behaviour you expect? -->\r\nFor it to handle requests normally.\r\n\r\n## Actual behaviour\r\n\r\n<!-- What's actually happening? -->\r\nThe server doesn't even receive the request, and the client returns with a ServerDisconnectedError\r\n\r\n## Steps to reproduce\r\n\r\n<!-- Please describe steps to reproduce the issue.\r\n     If you have a script that does that please include it here within\r\n     markdown code markup -->\r\n```python\r\nfrom aiohttp import web\r\n\r\n\r\nroutes = web.RouteTableDef()\r\n\r\n\r\n@routes.get(\"/\")\r\nasync def hello(request):\r\n    return web.Response(text=\"Hi!\")\r\n\r\n\r\napp = web.Application()\r\napp.add_routes(routes)\r\nweb.run_app(app)\r\n```\r\n## Your environment\r\n\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case. \r\n     \r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\n- Aiohttp 3.6.2 on both ends\r\n- Python 3.8.0\r\n- Debian 9.11", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4387", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4387/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4387/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4387/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4387", "id": 528858393, "node_id": "MDU6SXNzdWU1Mjg4NTgzOTM=", "number": 4387, "title": "Using fixtures reusing aiohttp_client does not seem to work", "user": {"login": "Manfred1ni", "id": 8929356, "node_id": "MDQ6VXNlcjg5MjkzNTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/8929356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manfred1ni", "html_url": "https://github.com/Manfred1ni", "followers_url": "https://api.github.com/users/Manfred1ni/followers", "following_url": "https://api.github.com/users/Manfred1ni/following{/other_user}", "gists_url": "https://api.github.com/users/Manfred1ni/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manfred1ni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manfred1ni/subscriptions", "organizations_url": "https://api.github.com/users/Manfred1ni/orgs", "repos_url": "https://api.github.com/users/Manfred1ni/repos", "events_url": "https://api.github.com/users/Manfred1ni/events{/privacy}", "received_events_url": "https://api.github.com/users/Manfred1ni/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-26T17:05:21Z", "updated_at": "2019-12-12T16:36:19Z", "closed_at": "2019-11-26T21:11:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n<!-- Please describe your problem and why the fix is important. -->\r\nHi everyone,\r\n\r\nI'm trying to test my app with aiohttp, using the aiohttp_client. I managed to make it work for simple cases, but I run into an unexpected behaviour when using fixtures.\r\n1. I have a the following fixture:\r\n\r\n```\r\n@pytest.fixture\r\ndef http_client(loop, app, aiohttp_client):\r\n    return loop.run_until_complete(aiohttp_client(app))\r\n```\r\n\r\n2. When I use it in another fixture, I get the following error: `RuntimeError: Timeout context manager should be used inside a task`\r\n\r\nIt seems like the fixture is created outside a Task. But I don't understand why. The full trace is [here](https://gist.github.com/Manfred1ni/da15e2c1e9f7f307c09a47e1ad95c9e0).\r\n\r\nHowever, it works when I __don't__ use a fixture event when I call `http_client` during the test.\r\n## Expected behaviour\r\n<!-- What is the behaviour you expect? -->\r\nThe fixture is created.\r\n\r\n## Actual behaviour\r\n<!-- What's actually happening? -->\r\nThe test setup fails.\r\n\r\n## Steps to reproduce\r\n<!-- Please describe steps to reproduce the issue.\r\n     If you have a script that does that please include it here within\r\n     markdown code markup -->\r\nUse the following gist: https://gist.github.com/Manfred1ni/da15e2c1e9f7f307c09a47e1ad95c9e0\r\n\r\n## Your environment\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case. \r\n     \r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\n- Python 3.6, on ubuntu 18.04\r\n- the [gist](https://gist.github.com/Manfred1ni/da15e2c1e9f7f307c09a47e1ad95c9e0) also contains my `pip list`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4382", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4382/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4382/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4382/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4382", "id": 528758225, "node_id": "MDU6SXNzdWU1Mjg3NTgyMjU=", "number": 4382, "title": "is there a way to read proxy-headers after a request?", "user": {"login": "carogno", "id": 58222211, "node_id": "MDQ6VXNlcjU4MjIyMjEx", "avatar_url": "https://avatars3.githubusercontent.com/u/58222211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carogno", "html_url": "https://github.com/carogno", "followers_url": "https://api.github.com/users/carogno/followers", "following_url": "https://api.github.com/users/carogno/following{/other_user}", "gists_url": "https://api.github.com/users/carogno/gists{/gist_id}", "starred_url": "https://api.github.com/users/carogno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carogno/subscriptions", "organizations_url": "https://api.github.com/users/carogno/orgs", "repos_url": "https://api.github.com/users/carogno/repos", "events_url": "https://api.github.com/users/carogno/events{/privacy}", "received_events_url": "https://api.github.com/users/carogno/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-11-26T14:22:45Z", "updated_at": "2019-12-04T15:29:26Z", "closed_at": "2019-11-27T13:11:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i've been looking thru the code and haven't found anything about it. the proxy I'm using has some headers after any request that I should be able to read. i only saw headers() and raw_headers() \r\n\r\nthanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4381", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4381/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4381/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4381/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4381", "id": 528563083, "node_id": "MDU6SXNzdWU1Mjg1NjMwODM=", "number": 4381, "title": "Deflate compatibility issue with websocket-sharp", "user": {"login": "CaledoniaProject", "id": 1357701, "node_id": "MDQ6VXNlcjEzNTc3MDE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1357701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CaledoniaProject", "html_url": "https://github.com/CaledoniaProject", "followers_url": "https://api.github.com/users/CaledoniaProject/followers", "following_url": "https://api.github.com/users/CaledoniaProject/following{/other_user}", "gists_url": "https://api.github.com/users/CaledoniaProject/gists{/gist_id}", "starred_url": "https://api.github.com/users/CaledoniaProject/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CaledoniaProject/subscriptions", "organizations_url": "https://api.github.com/users/CaledoniaProject/orgs", "repos_url": "https://api.github.com/users/CaledoniaProject/repos", "events_url": "https://api.github.com/users/CaledoniaProject/events{/privacy}", "received_events_url": "https://api.github.com/users/CaledoniaProject/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-26T08:24:18Z", "updated_at": "2019-12-10T20:23:32Z", "closed_at": "2019-12-10T20:23:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nI just moved from [https://websockets.readthedocs.io/en/stable/intro.html](websockets) to aiohttp, then I found aiohttp is not fully compatible with [websocket-sharp](https://github.com/sta/websocket-sharp)\r\n\r\nI'm using the [websocket handler example here](https://docs.aiohttp.org/en/stable/web_quickstart.html#websockets), it prints every message received:\r\n\r\n```\r\nasync for msg in ws:\r\n            if msg.type == aiohttp.WSMsgType.TEXT:\r\n                print(msg.data)\r\n```\r\n\r\nWhen I enable deflate Compression in websocket-sharp, all message received is EMPTY, the msg.data length is zero:\r\n\r\n```\r\nWebSocket tmp   = new WebSocket(url);\r\ntmp.Compression = CompressionMethod.Deflate;\r\n```\r\n\r\nThe websockets library has totally no issue with it. \r\n\r\nIf I don't enable Deflate, both websockets and aiohttp library works fine.\r\n\r\n## Questions\r\n\r\n1. Is compression enabled by default in aiohttp? There's no document about it\r\n2. Was it a bug?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4376", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4376/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4376/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4376/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4376", "id": 527646683, "node_id": "MDU6SXNzdWU1Mjc2NDY2ODM=", "number": 4376, "title": "Host header should have port 443", "user": {"login": "ionling", "id": 20399569, "node_id": "MDQ6VXNlcjIwMzk5NTY5", "avatar_url": "https://avatars3.githubusercontent.com/u/20399569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ionling", "html_url": "https://github.com/ionling", "followers_url": "https://api.github.com/users/ionling/followers", "following_url": "https://api.github.com/users/ionling/following{/other_user}", "gists_url": "https://api.github.com/users/ionling/gists{/gist_id}", "starred_url": "https://api.github.com/users/ionling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ionling/subscriptions", "organizations_url": "https://api.github.com/users/ionling/orgs", "repos_url": "https://api.github.com/users/ionling/repos", "events_url": "https://api.github.com/users/ionling/events{/privacy}", "received_events_url": "https://api.github.com/users/ionling/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 344995986, "node_id": "MDU6TGFiZWwzNDQ5OTU5ODY=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/client", "name": "client", "color": "bfd4f2", "default": false, "description": null}, {"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-24T04:10:33Z", "updated_at": "2020-01-26T11:00:55Z", "closed_at": "2020-01-26T11:00:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nIf I access a https website via http tunnel (connect method, `CONNECT www.bilibili.com:443 HTTP/1.1\\r\\n\\r\\n`), the request's `Host` header should be `www.bilibili.com:443` not `www.bilibili.com` which `aiohttp` actually does.\r\n\r\nFor more info,  just see  RFC https://tools.ietf.org/html/rfc7230#section-5.4.\r\n\r\n## Expected behaviour\r\n\r\nThe request's `Host` header should be `www.bilibili.com:443`.\r\n\r\n## Actual behaviour\r\n\r\nThe request's `Host` is `www.bilibili.com`.\r\n\r\n## Steps to reproduce\r\n\r\n```\r\nsession.get('https://www.bilibili.com', proxy='http://localhost:8889')\r\n```\r\n\r\n## Your environment\r\n\r\n- Manjaro 18.1.13\r\n- Python 3.7.4\r\n- aiohttp client 3.6.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4370", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4370/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4370/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4370/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4370", "id": 526768972, "node_id": "MDU6SXNzdWU1MjY3Njg5NzI=", "number": 4370, "title": "web.Request and web.Response are no longer weak referenceable", "user": {"login": "Fogapod", "id": 22667809, "node_id": "MDQ6VXNlcjIyNjY3ODA5", "avatar_url": "https://avatars0.githubusercontent.com/u/22667809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fogapod", "html_url": "https://github.com/Fogapod", "followers_url": "https://api.github.com/users/Fogapod/followers", "following_url": "https://api.github.com/users/Fogapod/following{/other_user}", "gists_url": "https://api.github.com/users/Fogapod/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fogapod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fogapod/subscriptions", "organizations_url": "https://api.github.com/users/Fogapod/orgs", "repos_url": "https://api.github.com/users/Fogapod/repos", "events_url": "https://api.github.com/users/Fogapod/events{/privacy}", "received_events_url": "https://api.github.com/users/Fogapod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}, {"id": 1577406386, "node_id": "MDU6TGFiZWwxNTc3NDA2Mzg2", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/regression", "name": "regression", "color": "c62b3b", "default": false, "description": "Something that used to work stopped working \"as before\" after upgrade"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-21T18:32:06Z", "updated_at": "2019-11-25T17:06:41Z", "closed_at": "2019-11-25T17:06:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Long story short\r\n\r\nhttps://github.com/aio-libs/aiohttp/pull/3942 added `__slots__` to request and response classes. This made it impossible to create weak references to them.\r\nIn some cases this might be useful. Example: https://github.com/getsentry/sentry-python/issues/560\r\n\r\nPossible solution is adding `__weakref__` to `__slots__` in `web.BaseRequest` and `web.StreamResponse`.\r\n\r\n## Expected behaviour\r\n\r\nweb.Request and web.Response to be valid targets for weak references.\r\n\r\n## Actual behaviour\r\n\r\nweb.Request and web.Response are no longer valid targets for weak references.\r\n\r\n## Steps to reproduce\r\n\r\n```python\r\nimport weakref\r\n\r\nwekref.ref(request)\r\n# TypeError: cannot create weak reference to 'Request' object\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4368", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4368/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4368/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4368/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4368", "id": 526637122, "node_id": "MDU6SXNzdWU1MjY2MzcxMjI=", "number": 4368, "title": "WebSocketResponse TypeError: Cannot be put into a weakref.WeakSet", "user": {"login": "frederikaalund", "id": 545423, "node_id": "MDQ6VXNlcjU0NTQyMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/545423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frederikaalund", "html_url": "https://github.com/frederikaalund", "followers_url": "https://api.github.com/users/frederikaalund/followers", "following_url": "https://api.github.com/users/frederikaalund/following{/other_user}", "gists_url": "https://api.github.com/users/frederikaalund/gists{/gist_id}", "starred_url": "https://api.github.com/users/frederikaalund/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frederikaalund/subscriptions", "organizations_url": "https://api.github.com/users/frederikaalund/orgs", "repos_url": "https://api.github.com/users/frederikaalund/repos", "events_url": "https://api.github.com/users/frederikaalund/events{/privacy}", "received_events_url": "https://api.github.com/users/frederikaalund/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-21T14:41:08Z", "updated_at": "2019-11-25T17:06:40Z", "closed_at": "2019-11-25T17:06:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Long story short\r\n\r\n`WebSocketResponse` raises `TypeError` when I attempt to put it into a `weakref.WeakSet`.\r\n\r\n## Expected behaviour\r\n\r\nI expect to be able to do the above. This is also the [recommended graceful shutdown approach](https://github.com/aio-libs/aiohttp/blob/master/docs/web_advanced.rst#graceful-shutdown).\r\n\r\n## Actual behaviour\r\n\r\nI get a `TypeError`. It worked previously. It was broken by commit c6e40e78ae8de51c02b5a17b8e5e882c910d3770.\r\n\r\n## Steps to reproduce\r\n\r\nJust try to create a `weakref.WeakSet` and put an instance of `WebSocketResponse` in it.\r\n\r\n## Fix\r\n\r\n```\r\naiohttp/web_ws.py: Add __weakref__ to WebSocketResponse.__slots__\r\n\r\nWebSocketResponse can now be put into a WeakSet container again.\r\nThis feature was broken by commit c6e40e78ae8de51c02b5a17b8e5e882c910d3770.\r\n\r\nSigned-off-by: Frederik Aalund <fpa@sbtinstruments.com>\r\n\r\n--- a/aiohttp/web_ws.py\t2019-11-21 15:22:37.253377093 +0100\r\n+++ b/aiohttp/web_ws.py\t2019-11-21 15:22:40.129377093 +0100\r\n@@ -49,7 +49,7 @@ class WebSocketResponse(StreamResponse):\r\n                  '_closing', '_conn_lost', '_close_code', '_loop', '_waiting',\r\n                  '_exception', '_timeout', '_receive_timeout', '_autoclose',\r\n                  '_autoping', '_heartbeat', '_heartbeat_cb', '_pong_heartbeat',\r\n-                 '_pong_response_cb', '_compress', '_max_msg_size')\r\n+                 '_pong_response_cb', '_compress', '_max_msg_size', '__weakref__')\r\n\r\n     def __init__(self, *,\r\n                  timeout: float=10.0, receive_timeout: Optional[float]=None,\r\n```\r\n\r\nSome reference: https://stackoverflow.com/a/19526505/554283\r\n\r\n## Miscellaneous\r\n\r\nThis also applies to all other classes that uses `__slots__`. I can't find a any reference to \"`__weakref__`\" when I search through aiohttps codebase.\r\n\r\n## Your environment\r\n\r\naiohttp v4.0.0a1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4367", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4367/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4367/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4367/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4367", "id": 526577998, "node_id": "MDU6SXNzdWU1MjY1Nzc5OTg=", "number": 4367, "title": "Make `async def web._run_app` public.", "user": {"login": "jonathanslenders", "id": 216638, "node_id": "MDQ6VXNlcjIxNjYzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/216638?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathanslenders", "html_url": "https://github.com/jonathanslenders", "followers_url": "https://api.github.com/users/jonathanslenders/followers", "following_url": "https://api.github.com/users/jonathanslenders/following{/other_user}", "gists_url": "https://api.github.com/users/jonathanslenders/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathanslenders/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathanslenders/subscriptions", "organizations_url": "https://api.github.com/users/jonathanslenders/orgs", "repos_url": "https://api.github.com/users/jonathanslenders/repos", "events_url": "https://api.github.com/users/jonathanslenders/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathanslenders/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-21T12:56:43Z", "updated_at": "2019-11-21T18:46:53Z", "closed_at": "2019-11-21T18:46:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wonder whether it would make sense to make the `web._run_app` function public. (This would require renaming.)\r\n\r\nIn my situation, I'm unable to call `run_app` (without underscore), because running the server requires a database, which is an async context manager. Something like this:\r\n\r\n```python\r\nasync with database() as db:\r\n    server = MyServer(db)\r\n    await server.serve()  # This calls `_run_app`\r\n```\r\n\r\nThat works well, but it doesn't sound right having to call an internal API for this.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4345", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4345/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4345/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4345/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4345", "id": 523117128, "node_id": "MDU6SXNzdWU1MjMxMTcxMjg=", "number": 4345, "title": "Repeated client request with multipart FormData results in field duplication", "user": {"login": "ulrikjohansson", "id": 387677, "node_id": "MDQ6VXNlcjM4NzY3Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/387677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulrikjohansson", "html_url": "https://github.com/ulrikjohansson", "followers_url": "https://api.github.com/users/ulrikjohansson/followers", "following_url": "https://api.github.com/users/ulrikjohansson/following{/other_user}", "gists_url": "https://api.github.com/users/ulrikjohansson/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulrikjohansson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulrikjohansson/subscriptions", "organizations_url": "https://api.github.com/users/ulrikjohansson/orgs", "repos_url": "https://api.github.com/users/ulrikjohansson/repos", "events_url": "https://api.github.com/users/ulrikjohansson/events{/privacy}", "received_events_url": "https://api.github.com/users/ulrikjohansson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-14T21:34:09Z", "updated_at": "2019-11-19T12:07:36Z", "closed_at": "2019-11-19T12:07:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\nWe've run into a problem where a repeated client session request with the same arguments end up not sending the same request data, but duplicted fields.\r\nReproducible request are important to us because we're using a circuit breaker library with our client requests that do retries on certain errors (like ServerDisconnectedError and TimeoutError)\r\n\r\n## Expected behaviour\r\nWhen I repeat a call to `ClientSession.request` with the exact same arguments I expect to send a copy of the first request\r\n\r\n## Actual behaviour\r\n\r\nWhen using a FormData object with a field that gets the `_is_multipart` property set to True, the form fields are duplicated. The machinery inside `FormData._gen_form_data` just appends the form fields again on each request using it.\r\n`\r\n## Steps to reproduce\r\n\r\n```\r\nimport asyncio\r\nfrom aiohttp import ClientSession, FormData\r\nfrom copy import deepcopy\r\n\r\nfrom aiohttp import __version__ as version\r\nprint(f\"aiohttp version: {version}\")\r\n\r\nasync def run():\r\n    async with ClientSession() as session:\r\n        url = \"http://httpbin.org/anything\"\r\n        data = FormData()\r\n        data.add_field(\"test\", \"test_value\", content_type=\"application/json\")\r\n\r\n        for n in range(2):\r\n            await session.post(url, data=data)\r\n            print(f\"writer part count: {len(data._writer._parts)} <-- this should stay at 1\")\r\n\r\nloop = asyncio.get_event_loop()\r\nloop.run_until_complete(run())\r\n```\r\n## Workaround\r\nA workaround for this issue is passing a deepcopy of the `FormData` object to `ClientSession.request`\r\n\r\n## Your environment\r\naiohttp version: tested with 3.5.4 & 3.6.2\r\naiohttp component: client\r\nos: linux (ubuntu 19.10)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4342", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4342/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4342/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4342/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4342", "id": 522767427, "node_id": "MDU6SXNzdWU1MjI3Njc0Mjc=", "number": 4342, "title": "Unclosed client session", "user": {"login": "viponedream", "id": 16624529, "node_id": "MDQ6VXNlcjE2NjI0NTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/16624529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/viponedream", "html_url": "https://github.com/viponedream", "followers_url": "https://api.github.com/users/viponedream/followers", "following_url": "https://api.github.com/users/viponedream/following{/other_user}", "gists_url": "https://api.github.com/users/viponedream/gists{/gist_id}", "starred_url": "https://api.github.com/users/viponedream/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/viponedream/subscriptions", "organizations_url": "https://api.github.com/users/viponedream/orgs", "repos_url": "https://api.github.com/users/viponedream/repos", "events_url": "https://api.github.com/users/viponedream/events{/privacy}", "received_events_url": "https://api.github.com/users/viponedream/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-14T10:30:39Z", "updated_at": "2019-11-14T10:42:30Z", "closed_at": "2019-11-14T10:42:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unclosed client session\r\nclient_session: <aiohttp.client.ClientSession object at 0x00000153A95E9E10>\r\n\r\nit shows the error above.\r\n\r\n================================\r\nhere is my code:\r\n\r\n#\r\n\r\nclass Test:\r\n \r\n    # use aiohttp\r\n    async def aio_get(self, session=None, url='', params={}, headers={}, proxy='',  timeout=10, verify_ssl=False):\r\n        try:\r\n            async with session.get(url=url, params=params, headers=headers, proxy=proxy, verify_ssl=verify_ssl) as resp:\r\n                r = await resp.read()\r\n                return r\r\n        except:\r\n            return None\r\n    # main \r\n    async def async_verify(self, work_id:int=1,  work_count:int=100000):\r\n         for x in range(work_count):\r\n             session = aiohttp.ClientSession()\r\n             content = await self.aio_get(session=session, url=home_url, params={}, headers=headers, proxy=proxies, verify_ssl=False)\r\n            if content is None:   \r\n                 continue\r\n           # do something\r\n           content = await self.aio_get(session=session, url=home_url, params={}, headers=headers, proxy=proxies, verify_ssl=False)\r\n          if content is None:   \r\n               continue\r\n          # do something\r\n          # do something\r\n          # do something\r\n           session.close()\r\n\r\n    # run loop \r\n    def start(self):\r\n        loop = asyncio.get_event_loop()\r\n        tasks = []\r\n        for i in range(10):\r\n            task = asyncio.ensure_future(self.async_verify(work_id=i, work_count=work_count))\r\n            tasks.append(task)\r\n\r\n        loop.run_until_complete(asyncio.wait(tasks))          ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4326", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4326/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4326/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4326/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4326", "id": 518406220, "node_id": "MDU6SXNzdWU1MTg0MDYyMjA=", "number": 4326, "title": "DeprecationWarning: Changing state of started or joined application is deprecated", "user": {"login": "albertodonato", "id": 3472143, "node_id": "MDQ6VXNlcjM0NzIxNDM=", "avatar_url": "https://avatars2.githubusercontent.com/u/3472143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/albertodonato", "html_url": "https://github.com/albertodonato", "followers_url": "https://api.github.com/users/albertodonato/followers", "following_url": "https://api.github.com/users/albertodonato/following{/other_user}", "gists_url": "https://api.github.com/users/albertodonato/gists{/gist_id}", "starred_url": "https://api.github.com/users/albertodonato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/albertodonato/subscriptions", "organizations_url": "https://api.github.com/users/albertodonato/orgs", "repos_url": "https://api.github.com/users/albertodonato/repos", "events_url": "https://api.github.com/users/albertodonato/events{/privacy}", "received_events_url": "https://api.github.com/users/albertodonato/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 445958404, "node_id": "MDU6TGFiZWw0NDU5NTg0MDQ=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/docs%20/%20examples", "name": "docs / examples", "color": "d4c5f9", "default": false, "description": null}, {"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}, {"id": 344996043, "node_id": "MDU6TGFiZWwzNDQ5OTYwNDM=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/server", "name": "server", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2019-11-06T11:16:41Z", "updated_at": "2019-11-08T08:35:50Z", "closed_at": "2019-11-08T08:35:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Long story short\r\n\r\nI'm seeing something very similar as #1947.\r\n\r\nIn my app setup I connect to the database in an `on_startup` signal (which is what https://docs.aiohttp.org/en/stable/web_advanced.html#background-tasks suggests).\r\n\r\nIs this no longer the right way to perform tasks at application startup?\r\n\r\n## Expected behaviour\r\n\r\nNo warning should be raised.\r\n\r\n## Actual behaviour\r\n<!-- What's actually happening? -->\r\nWhen running tests I get a warning like:\r\n\r\n```python-traceback\r\nDeprecationWarning: Changing state of started or joined application is deprecated\r\n    app[\"db\"] = engine\r\n```\r\n\r\n## Steps to reproduce\r\n\r\n<!-- Please describe steps to reproduce the issue.\r\n     If you have a script that does that please include it here within\r\n     markdown code markup -->\r\n\r\n```python\r\ndef create_app():\r\n    app = web.Application()\r\n    app.on_startup.append(_create_db)\r\n    app.on_cleanup.append(_close_db)\r\n    return app\r\n\r\nasync def _create_db(app: Application):\r\n    app[\"db\"] = await create_engine(DSN)\r\n```\r\n\r\n## Your environment\r\n\r\n- Ubuntu 18.04\r\n- Python 3.6.8\r\n- aiohttp 3.6.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4324", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4324/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4324/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4324/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4324", "id": 517715519, "node_id": "MDU6SXNzdWU1MTc3MTU1MTk=", "number": 4324, "title": "\"RuntimeError: Event loop is closed\" when ProactorEventLoop is used", "user": {"login": "AndreyMZ", "id": 9609370, "node_id": "MDQ6VXNlcjk2MDkzNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/9609370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreyMZ", "html_url": "https://github.com/AndreyMZ", "followers_url": "https://api.github.com/users/AndreyMZ/followers", "following_url": "https://api.github.com/users/AndreyMZ/following{/other_user}", "gists_url": "https://api.github.com/users/AndreyMZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreyMZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreyMZ/subscriptions", "organizations_url": "https://api.github.com/users/AndreyMZ/orgs", "repos_url": "https://api.github.com/users/AndreyMZ/repos", "events_url": "https://api.github.com/users/AndreyMZ/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreyMZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-05T11:27:42Z", "updated_at": "2020-08-19T20:37:56Z", "closed_at": "2019-11-12T11:16:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\n<!-- Please describe your problem and why the fix is important. -->\r\n\r\nWhen [`ProactorEventLoop`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.ProactorEventLoop) is used, the lack of graceful shutdown in aiohttp results in `RuntimeError`. (For comparison, when [`SelectorEventLoop`](https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.SelectorEventLoop) is used, it results in `ResourceWarning`.) Note that `ProactorEventLoop` is the default event loop on Windows in Python starting from 3.8.\r\n\r\nMaybe the root cause of this issue is the same as of #1925. But the impact is higher (`RuntimeError` instead of `ResourceWarning`).\r\n\r\n## Steps to reproduce\r\n\r\n<!-- Please describe steps to reproduce the issue.\r\n     If you have a script that does that please include it here within\r\n     markdown code markup -->\r\n\r\n~~~py\r\nimport asyncio\r\nimport sys\r\n\r\nimport aiohttp\r\n\r\nasync def main():\r\n\tasync with aiohttp.ClientSession() as session:\r\n\t\tasync with session.get('https://example.com/'):\r\n\t\t\tpass\r\n\r\nif __name__ == '__main__':\r\n\tif sys.version_info[:2] == (3, 7):\r\n\t\tasyncio.set_event_loop_policy(asyncio.WindowsProactorEventLoopPolicy())\r\n\tasyncio.run(main())\r\n~~~\r\n\r\n## Actual behaviour\r\n\r\n<!-- What's actually happening? -->\r\n\r\n~~~\r\nsys:1: ResourceWarning: unclosed <socket.socket fd=724, family=AddressFamily.AF_INET6, type=SocketKind.SOCK_STREAM, proto=6, laddr=('2001:0db8:85a3:0000:0000:8a2e:0370:7334', 19283, 0, 0), raddr=('2606:2800:220:1:248:1893:25c8:1946', 443, 0, 0)>\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\nC:\\Programs\\Python37\\lib\\asyncio\\proactor_events.py:94: ResourceWarning: unclosed transport <_ProactorSocketTransport fd=-1 read=<_OverlappedFuture cancelled>>\r\n  source=self)\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\nException ignored in: <function _ProactorBasePipeTransport.__del__ at 0x0000017FAC405048>\r\nTraceback (most recent call last):\r\n  File \"C:\\Programs\\Python37\\lib\\asyncio\\proactor_events.py\", line 95, in __del__\r\n    self.close()\r\n  File \"C:\\Programs\\Python37\\lib\\asyncio\\proactor_events.py\", line 86, in close\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"C:\\Programs\\Python37\\lib\\asyncio\\base_events.py\", line 683, in call_soon\r\n    self._check_closed()\r\n  File \"C:\\Programs\\Python37\\lib\\asyncio\\base_events.py\", line 475, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\n~~~\r\n\r\n## Expected behaviour\r\n\r\nNo exceptions. Maybe warnings, but no exceptions.\r\n\r\n## Your environment\r\n\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case. \r\n     \r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\n\t \r\naiohttp (client) version: 3.6.2\r\nPython version: 3.7, 3.8\r\nOS: Windows 10\r\n\r\n## Additional information\r\n\r\nI do not know any workaround.\r\n\r\nA delay before closing the event loop suggested in [the documentation](https://aiohttp.readthedocs.io/en/stable/client_advanced.html#graceful-shutdown) does not help in a bit more complicated example (try to run it several times or add more URLs to the list):\r\n\r\n~~~py\r\nimport asyncio\r\nimport sys\r\n\r\nimport aiohttp\r\n\r\nURLS = [\r\n\t# Insert several URLs here, e.g.:\r\n\t\"https://www.python.org/ftp/python/\",\r\n\t\"https://github.com/python/\",\r\n\t\"https://www.cpan.org/src/5.0/\",\r\n\t\"https://aiohttp.readthedocs.io/\",\r\n\t\"https://example.com/\",\r\n]\r\n\r\nasync def main():\r\n\tasync with aiohttp.ClientSession() as session:\r\n\t\tawait asyncio.wait([fetch(session, url) for url in URLS])\r\n\tprint(\"Done.\")\r\n\r\nasync def fetch(session: aiohttp.ClientSession, url: str):\r\n\tasync with session.get(url):\r\n\t\tprint(f\"Requested: {url}\")\r\n\r\nif __name__ == '__main__':\r\n\tif sys.version_info[:2] == (3, 7):\r\n\t\tasyncio.set_event_loop_policy(asyncio.WindowsProactorEventLoopPolicy())\r\n\tloop = asyncio.get_event_loop()\r\n\ttry:\r\n\t\tloop.run_until_complete(main())\r\n\t\tloop.run_until_complete(asyncio.sleep(2.0))\r\n\tfinally:\r\n\t\tloop.close()\r\n~~~\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4321", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4321/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4321/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4321/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4321", "id": 517356366, "node_id": "MDU6SXNzdWU1MTczNTYzNjY=", "number": 4321, "title": "Unable to catch exception. socket.gaierror Name or service not known", "user": {"login": "jwest75674", "id": 38332718, "node_id": "MDQ6VXNlcjM4MzMyNzE4", "avatar_url": "https://avatars0.githubusercontent.com/u/38332718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwest75674", "html_url": "https://github.com/jwest75674", "followers_url": "https://api.github.com/users/jwest75674/followers", "following_url": "https://api.github.com/users/jwest75674/following{/other_user}", "gists_url": "https://api.github.com/users/jwest75674/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwest75674/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwest75674/subscriptions", "organizations_url": "https://api.github.com/users/jwest75674/orgs", "repos_url": "https://api.github.com/users/jwest75674/repos", "events_url": "https://api.github.com/users/jwest75674/events{/privacy}", "received_events_url": "https://api.github.com/users/jwest75674/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986078, "node_id": "MDU6TGFiZWw1ODk4NjA3OA==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-04T19:34:30Z", "updated_at": "2019-11-05T15:30:22Z", "closed_at": "2019-11-05T14:52:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nHello,\r\n\r\nI am trying to make many http requests for a research project I am working on, where in I am working against a large historical list of domain names. Part of this information gathering stage has to do with determining what percentage of these old websites are simply no longer alive.\r\naiohttp appears to (correctly) throw an exception when requested to GET from a domain that no longer resolves, however, it appears that there isn't a way to catch the exception. (My apologies if I am simply too novice to have spotted a workaround)\r\n\r\nCleaned up pseudo code:\r\n```python\r\nfrom aiomultiprocess import Pool\r\nimport aiohttp\r\nimport asyncio\r\n(etc...)\r\n\r\nasync def async_request(domain_url_list):\r\n    async with Pool(settings.concurrent_processes) as pool:\r\n        request_timer = await pool.map(get, domain_url_list)\r\n    return request_timer\r\n\r\nasync def get(domain_url):\r\n    try:\r\n        async with aiohttp.request(\"GET\", url, headers=headers) as response:\r\n            ##Process Request\r\n    except Exception as err:\r\n        logging.error('EXCEPTION DETECTED: {} '.format(err)\r\n        handle_exception(err)\r\n        \r\nasync def main():\r\n    filepath = '/path/to/file/filename.csv'\r\n    domain_url_list = []\r\n    with open(filepath) as file:\r\n        for line in file:\r\n            domain_url_list.append(line.stip())\r\n    get_timers = await async_request(allurls)\r\n    print('Single Get Average Runtime: {}'.format(sum(working_time)/len(get_timers)))\r\n\r\n\r\nif __name__ == '__main__':\r\n    asyncio.run(main())\r\n\r\n```\r\n## Expected behaviour\r\n\r\nI would hope to be able to catch any aiohttp request exceptions either with a setting to ignore them, or a normal try catch loop as I had used initially, however the exception appears to bypass them?\r\n\r\n## Actual behaviour\r\n```python-traceback\r\nTraceback (most recent call last):\r\n  File \"getgrequestsdellaio.py\", line 350, in <module>\r\n    asyncio.run(main())\r\n  File \"/usr/local/lib/python3.7/asyncio/runners.py\", line 43, in run\r\n    return loop.run_until_complete(main)\r\n  File \"uvloop/loop.pyx\", line 1417, in uvloop.loop.Loop.run_until_complete\r\n  File \"getgrequestsdellaio.py\", line 326, in main\r\n    get_timers = await async_request(allurls)\r\n  File \"getgrequestsdellaio.py\", line 165, in async_request\r\n    request_timer = await pool.map(get, domain_url_list)\r\n  File \"/home/josh/.local/lib/python3.7/site-packages/aiomultiprocess/core.py\", line 434, in map\r\n    return await self.results(tids)\r\n  File \"/home/josh/.local/lib/python3.7/site-packages/aiomultiprocess/core.py\", line 398, in results\r\n    raise ProxyException(tb)\r\naiomultiprocess.core.ProxyException: Traceback (most recent call last):\r\n  File \"/home/josh/.local/lib/python3.7/site-packages/aiohttp/connector.py\", line 967, in _create_direct_connection\r\n    traces=traces), loop=self._loop)\r\n  File \"/home/josh/.local/lib/python3.7/site-packages/aiohttp/connector.py\", line 830, in _resolve_host\r\n    self._resolver.resolve(host, port, family=self._family)\r\n  File \"/home/josh/.local/lib/python3.7/site-packages/aiohttp/resolver.py\", line 30, in resolve\r\n    host, port, type=socket.SOCK_STREAM, family=family)\r\n  File \"uvloop/loop.pyx\", line 1430, in getaddrinfo\r\nsocket.gaierror: [Errno -2] Name or service not known\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"getgrequestsdellaio.py\", line 92, in get\r\n    async with aiohttp.request(\"GET\", url, headers=headers) as response:\r\n  File \"/home/josh/.local/lib/python3.7/site-packages/aiohttp/client.py\", line 1051, in __aenter__\r\n    self._resp = await self._coro\r\n  File \"/home/josh/.local/lib/python3.7/site-packages/aiohttp/client.py\", line 483, in _request\r\n    timeout=real_timeout\r\n  File \"/home/josh/.local/lib/python3.7/site-packages/aiohttp/connector.py\", line 523, in connect\r\n    proto = await self._create_connection(req, traces, timeout)\r\n  File \"/home/josh/.local/lib/python3.7/site-packages/aiohttp/connector.py\", line 859, in _create_connection\r\n    req, traces, timeout)\r\n  File \"/home/josh/.local/lib/python3.7/site-packages/aiohttp/connector.py\", line 971, in _create_direct_connection\r\n    raise ClientConnectorError(req.connection_key, exc) from exc\r\naiohttp.client_exceptions.ClientConnectorError: Cannot connect to host deaddomain.net:80 ssl:default [Name or service not known]\r\n```\r\n## Steps to reproduce\r\n\r\nUse normally, but GET a dead domain. No bypass.\r\n\r\n## Your environment\r\n\r\npython 3.7, fresh (pip) install of all libraries and modules in the last week or so.\r\nDebian 10\r\n\r\n\r\n## Other notes\r\nI tried using aiohttp sessions, but could not manage to get it working with the map() based multiprocessing solution. The aiomultiprocessing library recommends the aiohttp.request(\"GET\"... Setup, which is why it is used.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4320", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4320/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4320/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4320/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4320", "id": 516712918, "node_id": "MDU6SXNzdWU1MTY3MTI5MTg=", "number": 4320, "title": "It is possible to add to BaseRequest.multipart and it's read methods __next__ functions?", "user": {"login": "XCanG", "id": 4011523, "node_id": "MDQ6VXNlcjQwMTE1MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4011523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XCanG", "html_url": "https://github.com/XCanG", "followers_url": "https://api.github.com/users/XCanG/followers", "following_url": "https://api.github.com/users/XCanG/following{/other_user}", "gists_url": "https://api.github.com/users/XCanG/gists{/gist_id}", "starred_url": "https://api.github.com/users/XCanG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XCanG/subscriptions", "organizations_url": "https://api.github.com/users/XCanG/orgs", "repos_url": "https://api.github.com/users/XCanG/repos", "events_url": "https://api.github.com/users/XCanG/events{/privacy}", "received_events_url": "https://api.github.com/users/XCanG/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986078, "node_id": "MDU6TGFiZWw1ODk4NjA3OA==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-02T20:33:29Z", "updated_at": "2019-11-03T11:52:37Z", "closed_at": "2019-11-03T11:52:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "With more latest version of python, where is supported `async for x in y` it would be nice to use that on [BaseRequest.multipart](https://aiohttp.readthedocs.io/en/stable/web_reference.html#aiohttp.web.BaseRequest.multipart) and it's chunk reading method.\r\n\r\nSo, some code from examples (with a little edit):\r\n```python\r\nasync def upload(request):\r\n    reader = await request.multipart()\r\n\r\n    # reader.next() will `yield` the fields of your form\r\n    while True:\r\n        field = await reader.next()\r\n        if not field:\r\n            break\r\n        if field.name != \"files\":\r\n            raise web.HTTPBadRequest()\r\n        filename = field.filename\r\n        size = 0\r\n        with open(os.path.join(\"files\", filename), \"wb\") as f:\r\n            while True:\r\n                chunk = await field.read_chunk() # 8192 bytes by default.\r\n                if not chunk:\r\n                    break\r\n                size += len(chunk)\r\n                f.write(chunk)\r\n```\r\nMay convert into something like that:\r\n```python\r\nasync def upload(request):\r\n    reader = await request.multipart()\r\n\r\n    async for field in reader:\r\n        if field.name != \"files\":\r\n            raise web.HTTPBadRequest()\r\n        filename = field.filename\r\n        size = 0\r\n        with open(os.path.join(\"files\", filename), \"wb\") as f:\r\n            async for chunk in field:\r\n                size += len(chunk)\r\n                f.write(chunk)\r\n```\r\nAt this moment it possible only with a \"hack\":\r\n```python\r\nif not hasattr(reader, \"__next__\"):\r\n    reader.__next__ = reader.next\r\n```\r\n```python\r\nif not hasattr(field, \"__next__\"):\r\n    field.__next__ = field.read_chunk\r\n```\r\nThis will make code more clean.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4319", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4319/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4319/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4319/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4319", "id": 516709327, "node_id": "MDU6SXNzdWU1MTY3MDkzMjc=", "number": 4319, "title": "Does web.FileResponse prevent sending some Content-Type's?", "user": {"login": "XCanG", "id": 4011523, "node_id": "MDQ6VXNlcjQwMTE1MjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4011523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XCanG", "html_url": "https://github.com/XCanG", "followers_url": "https://api.github.com/users/XCanG/followers", "following_url": "https://api.github.com/users/XCanG/following{/other_user}", "gists_url": "https://api.github.com/users/XCanG/gists{/gist_id}", "starred_url": "https://api.github.com/users/XCanG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XCanG/subscriptions", "organizations_url": "https://api.github.com/users/XCanG/orgs", "repos_url": "https://api.github.com/users/XCanG/repos", "events_url": "https://api.github.com/users/XCanG/events{/privacy}", "received_events_url": "https://api.github.com/users/XCanG/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-02T20:20:42Z", "updated_at": "2019-11-05T21:04:56Z", "closed_at": "2019-11-05T14:58:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a function, what return several file types, however if file is javascript, ~~FileReader~~ FileResponse send header mime type as `plain/text` and that script won't load in browser (error in console about mime type). Other files such as images, css return with proper mime type (or I don't find any in particular with this issue).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4316", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4316/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4316/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4316/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4316", "id": 516137790, "node_id": "MDU6SXNzdWU1MTYxMzc3OTA=", "number": 4316, "title": "Not able to post files and data at the same time and 'FormData' object is not subscriptable", "user": {"login": "sathio", "id": 1990816, "node_id": "MDQ6VXNlcjE5OTA4MTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1990816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sathio", "html_url": "https://github.com/sathio", "followers_url": "https://api.github.com/users/sathio/followers", "following_url": "https://api.github.com/users/sathio/following{/other_user}", "gists_url": "https://api.github.com/users/sathio/gists{/gist_id}", "starred_url": "https://api.github.com/users/sathio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sathio/subscriptions", "organizations_url": "https://api.github.com/users/sathio/orgs", "repos_url": "https://api.github.com/users/sathio/repos", "events_url": "https://api.github.com/users/sathio/events{/privacy}", "received_events_url": "https://api.github.com/users/sathio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-01T14:13:24Z", "updated_at": "2019-11-18T11:20:37Z", "closed_at": "2019-11-18T11:20:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nI need to post files along with data\r\n\r\n## Actual behaviour\r\n\r\nI can't get to post anything because i get \"FormData' object is not subscriptable\"\r\nalso, I'm not sure if that's the correct way to send data along with files. \r\nany help appreciated \r\n\r\n## Steps to reproduce\r\n\r\n        from aiohttp import FormData\r\n\r\n        try:\r\n\r\n            if files:\r\n                d = FormData()\r\n                for i in files:\r\n                    d.add_field(i, files[i], content_transfer_encoding='base64')\r\n\r\n                for i in data:\r\n                    d.add_field(i, data[i])\r\n                    data = d\r\n\r\n            async with aiohttp.ClientSession() as session:\r\n                async with session.post(url,\r\n                                        data=data,\r\n                                        headers=headers,\r\n                                        proxy=self.proxy_url,\r\n                                        proxy_headers=self.lpm_proxy) as res:\r\n\r\n\r\n`\r\n\r\n## Your environment\r\n\r\naiohttp: 3.6.2 python  3.7.4, osx catalina ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4314", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4314/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4314/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4314/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4314", "id": 515870133, "node_id": "MDU6SXNzdWU1MTU4NzAxMzM=", "number": 4314, "title": "Error in documentation example", "user": {"login": "vickz84259", "id": 10741084, "node_id": "MDQ6VXNlcjEwNzQxMDg0", "avatar_url": "https://avatars1.githubusercontent.com/u/10741084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vickz84259", "html_url": "https://github.com/vickz84259", "followers_url": "https://api.github.com/users/vickz84259/followers", "following_url": "https://api.github.com/users/vickz84259/following{/other_user}", "gists_url": "https://api.github.com/users/vickz84259/gists{/gist_id}", "starred_url": "https://api.github.com/users/vickz84259/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vickz84259/subscriptions", "organizations_url": "https://api.github.com/users/vickz84259/orgs", "repos_url": "https://api.github.com/users/vickz84259/repos", "events_url": "https://api.github.com/users/vickz84259/events{/privacy}", "received_events_url": "https://api.github.com/users/vickz84259/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-01T02:18:13Z", "updated_at": "2019-11-01T08:00:51Z", "closed_at": "2019-11-01T08:00:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Long story short\r\n\r\nThe **Hacking Multipart** section on the [Working with Multipart](https://aiohttp.readthedocs.io/en/stable/multipart.html) page has an example that isn't working as intended.\r\n\r\n## Expected behaviour\r\n\r\nThe code given should cater for the scenario where a server may require the _Content-Length_ for the whole multipart request to be specified. \r\n\r\n## Actual behaviour\r\n\r\nThe warning: `RuntimeWarning: coroutine 'MultipartWriter.write' was never awaited mpwriter.write(writer)` is issued and the _Content-Length_ header is set to 0. \r\n\r\n## Steps to reproduce\r\n\r\nExecute the code shown in the **Hacking Multipart** section after fixing the typo specified in #4312 as shown below:\r\n```python\r\nclass Writer:\r\n    def __init__(self):\r\n        self.buffer = bytearray()\r\n\r\n    async def write(self, data):\r\n        self.buffer.extend(data)\r\n\r\nwriter = Writer()\r\nmpwriter.write(writer)\r\nawait aiohttp.post('http://example.com',\r\n                   data=writer.buffer, headers=mpwriter.headers)\r\n```\r\n\r\n## Your environment\r\n\r\n`aiohttp == 3.6.2` client\r\n\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case. \r\n     \r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4312", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4312/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4312/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4312/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4312", "id": 515815670, "node_id": "MDU6SXNzdWU1MTU4MTU2NzA=", "number": 4312, "title": "Documentation typo", "user": {"login": "vickz84259", "id": 10741084, "node_id": "MDQ6VXNlcjEwNzQxMDg0", "avatar_url": "https://avatars1.githubusercontent.com/u/10741084?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vickz84259", "html_url": "https://github.com/vickz84259", "followers_url": "https://api.github.com/users/vickz84259/followers", "following_url": "https://api.github.com/users/vickz84259/following{/other_user}", "gists_url": "https://api.github.com/users/vickz84259/gists{/gist_id}", "starred_url": "https://api.github.com/users/vickz84259/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vickz84259/subscriptions", "organizations_url": "https://api.github.com/users/vickz84259/orgs", "repos_url": "https://api.github.com/users/vickz84259/repos", "events_url": "https://api.github.com/users/vickz84259/events{/privacy}", "received_events_url": "https://api.github.com/users/vickz84259/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-31T23:34:21Z", "updated_at": "2019-11-01T08:01:06Z", "closed_at": "2019-11-01T08:01:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Long story short\r\n\r\nThe **Hacking Multipart** section on the [Working with Multipart](https://aiohttp.readthedocs.io/en/stable/multipart.html) page, has an example that references a `MultipartWriter.writer()` method.\r\n\r\n## Expected behaviour\r\n\r\nMethods referenced in documentation should exist. In this case it should be the `MultipartWriter.write()` method.\r\n\r\n## Actual behaviour\r\n\r\n`MultipartWriter.writer()` method is referenced in documentation but does not exist\r\n\r\n## Steps to reproduce\r\n\r\n1. Open [Working with Multipart](https://aiohttp.readthedocs.io/en/stable/multipart.html), CTRL+F for `mpwriter.writer`. __mpwriter__ is a `MultipartWriter` object based on the example.\r\n2. Open [Multipart Reference](https://aiohttp.readthedocs.io/en/stable/multipart_reference.html). No references to the method.\r\n3. Open [multipart.py](https://github.com/aio-libs/aiohttp/blob/master/aiohttp/multipart.py). No references to the method.\r\n\r\n## Your environment\r\n\r\naiohttp == 3.6.2\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4309", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4309/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4309/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4309/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4309", "id": 515354202, "node_id": "MDU6SXNzdWU1MTUzNTQyMDI=", "number": 4309, "title": "FileResponse failed to prepare proper headers for Range requests with IDM", "user": {"login": "aminhyper", "id": 32235932, "node_id": "MDQ6VXNlcjMyMjM1OTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/32235932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aminhyper", "html_url": "https://github.com/aminhyper", "followers_url": "https://api.github.com/users/aminhyper/followers", "following_url": "https://api.github.com/users/aminhyper/following{/other_user}", "gists_url": "https://api.github.com/users/aminhyper/gists{/gist_id}", "starred_url": "https://api.github.com/users/aminhyper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aminhyper/subscriptions", "organizations_url": "https://api.github.com/users/aminhyper/orgs", "repos_url": "https://api.github.com/users/aminhyper/repos", "events_url": "https://api.github.com/users/aminhyper/events{/privacy}", "received_events_url": "https://api.github.com/users/aminhyper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986078, "node_id": "MDU6TGFiZWw1ODk4NjA3OA==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-31T11:24:24Z", "updated_at": "2019-10-31T20:03:42Z", "closed_at": "2019-10-31T16:36:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to stream and download some file with aiohttp web server.\r\nI used accept-range and content-range params to activate resume capabitlity in IDM.\r\nWhen pause download with download manager and start download again, it start download from 0%.\r\nWhen the file size is too large and we want to use the resume capability of IDM, the download fails and all downloads we have done before are lost and we have to download again from scratch.\r\n\r\nLarge files need to use the resume capability.\r\nThat is, when the pause button is pressed, the download should not start from zero but continue with the download\r\n\r\nThe downloads just failed immediately after clicking resume button.\r\nThe downloader in Chrome correctly resume but in IDM it resume from 0%.\r\n```\r\n@routes.get('/')\r\nasync def handle(request):\r\n    hh = dict(request.headers)\r\n    offset = 0\r\n    if 'Range' in hh:\r\n        offset =int(hh['Range'][6:].split('-')[0])\r\n    with open(filepath, 'rb') as f:\r\n        resp = Response(status=206 if offset else 200,\r\n                              headers={'Content-Type': mimetypes.guess_type(filename)[0],\r\n                                       'CONTENT-LENGTH': str(file_size),\r\n                                       'Accept-Ranges': 'bytes',\r\n                                       'CONNECTION': 'keep-alive',\r\n                                       'Content-Range': 'bytes %d - %d/%d' % (offset, file_size, file_size)\r\n                                       },\r\n                              )\r\n\r\n        data = f.read()\r\n        await resp.prepare(request)\r\n        await resp.write(data)\r\n        return resp\r\n\r\napp = web.Application()\r\napp.add_routes(routes)\r\nweb.run_app(app,host='0.0.0.0')\r\n```\r\n\r\n\r\nwhile downloading i get this param as follows:\r\nbytes=443200-8593167\r\nWhen i hit pause button in IDM, the range param in request headers sent as follows:\r\nbytes=1066176-\r\nthen by hitting start(resume) it download from 0%\r\n\r\nOS: Ubuntu 18.04\r\naiohttp Server 3.5.4\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4305", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4305/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4305/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4305/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4305", "id": 514150424, "node_id": "MDU6SXNzdWU1MTQxNTA0MjQ=", "number": 4305, "title": "GunicornWebWorker resetting all connections in python 3.8", "user": {"login": "iomintz", "id": 538336, "node_id": "MDQ6VXNlcjUzODMzNg==", "avatar_url": "https://avatars0.githubusercontent.com/u/538336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iomintz", "html_url": "https://github.com/iomintz", "followers_url": "https://api.github.com/users/iomintz/followers", "following_url": "https://api.github.com/users/iomintz/following{/other_user}", "gists_url": "https://api.github.com/users/iomintz/gists{/gist_id}", "starred_url": "https://api.github.com/users/iomintz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iomintz/subscriptions", "organizations_url": "https://api.github.com/users/iomintz/orgs", "repos_url": "https://api.github.com/users/iomintz/repos", "events_url": "https://api.github.com/users/iomintz/events{/privacy}", "received_events_url": "https://api.github.com/users/iomintz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-10-29T18:59:19Z", "updated_at": "2019-10-29T23:35:55Z", "closed_at": "2019-10-29T19:30:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nWhen running aiohttp.web with gunicorn in python 3.8, every request results in a reset connection.\r\nThis behavior does not occur using Flask, therefore I believe it is aiohttp's fault, not gunicorn's.\r\n\r\n## Steps to reproduce\r\n\r\n```py\r\nfrom aiohttp import web\r\n\r\napp = web.Application()\r\nroutes = web.RouteTableDef()\r\n\r\n@routes.get('/')\r\nasync def index(request):\r\n    return 'Hello, world!'\r\n\r\napp.add_routes(routes)\r\n```\r\n\r\n```\r\ngunicorn --worker-class aiohttp.GunicornWebWorker app:app &\r\ncurl http://localhost:8000/\r\n```\r\n\r\n## Expected behaviour\r\n\r\n```\r\nHello, world!\r\n```\r\n\r\n## Actual behaviour\r\n\r\n```\r\ncurl: (52) Empty reply from server\r\n```\r\n\r\nIn a browser, I get \"the connection was reset\".\r\n\r\n## Your environment\r\n\r\naiohttp v3.6.2\r\ngunicorn v19.9.0\r\nCPython v3.8.0\r\nArch Linux, kernel version 5.3.7-arch1-2-ARCH\r\n\r\naiohttp.web", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4304", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4304/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4304/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4304/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4304", "id": 513924057, "node_id": "MDU6SXNzdWU1MTM5MjQwNTc=", "number": 4304, "title": "How to detach/(re)attach AppRunner to a Site ?", "user": {"login": "rmedaer", "id": 2905530, "node_id": "MDQ6VXNlcjI5MDU1MzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/2905530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmedaer", "html_url": "https://github.com/rmedaer", "followers_url": "https://api.github.com/users/rmedaer/followers", "following_url": "https://api.github.com/users/rmedaer/following{/other_user}", "gists_url": "https://api.github.com/users/rmedaer/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmedaer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmedaer/subscriptions", "organizations_url": "https://api.github.com/users/rmedaer/orgs", "repos_url": "https://api.github.com/users/rmedaer/repos", "events_url": "https://api.github.com/users/rmedaer/events{/privacy}", "received_events_url": "https://api.github.com/users/rmedaer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-29T13:39:17Z", "updated_at": "2020-03-23T11:52:10Z", "closed_at": "2020-03-23T11:52:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to detach an application (actually its runner) from a given site. Then attach a new Application to the same site **without closing it**.\r\n\r\nThe purpose is to implement a kind of \"reload\" of my daemon by killing the current Application and create a new one that I can attach to my server.\r\n\r\nCurrently I was using `make_handler` API to create an handler that I can connect to my server. However `make_handler` has been removed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4283", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4283/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4283/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4283/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4283", "id": 513203129, "node_id": "MDU6SXNzdWU1MTMyMDMxMjk=", "number": 4283, "title": "Error in example (examples/fake_server.py)", "user": {"login": "prostomarkeloff", "id": 28061158, "node_id": "MDQ6VXNlcjI4MDYxMTU4", "avatar_url": "https://avatars0.githubusercontent.com/u/28061158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prostomarkeloff", "html_url": "https://github.com/prostomarkeloff", "followers_url": "https://api.github.com/users/prostomarkeloff/followers", "following_url": "https://api.github.com/users/prostomarkeloff/following{/other_user}", "gists_url": "https://api.github.com/users/prostomarkeloff/gists{/gist_id}", "starred_url": "https://api.github.com/users/prostomarkeloff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prostomarkeloff/subscriptions", "organizations_url": "https://api.github.com/users/prostomarkeloff/orgs", "repos_url": "https://api.github.com/users/prostomarkeloff/repos", "events_url": "https://api.github.com/users/prostomarkeloff/events{/privacy}", "received_events_url": "https://api.github.com/users/prostomarkeloff/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-28T09:57:14Z", "updated_at": "2019-10-28T14:31:41Z", "closed_at": "2019-10-28T14:31:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "## Long story short\r\n\r\nI tried test a example in examples folder, and ... got error :(\r\n\r\n<!-- Please describe your problem and why the fix is important. -->\r\n\r\n## Expected behaviour\r\n\r\nServer should work normally.\r\n\r\n<!-- What is the behaviour you expect? -->\r\n\r\n## Actual behaviour\r\n```\r\nTraceback (most recent call last):\r\n  File \"examples/fake_server.py\", line 116, in <module>\r\n    loop.run_until_complete(main(loop))\r\n  File \"/usr/lib/python3.7/asyncio/base_events.py\", line 584, in run_until_complete\r\n    return future.result()\r\n  File \"examples/fake_server.py\", line 98, in main\r\n    fake_facebook = FakeFacebook()\r\nTypeError: __init__() missing 1 required keyword-only argument: 'loop'\r\n```\r\n\r\nAfter add loop argument, i got this warning:\r\n\r\n```\r\n{'name': 'John Doe', 'id': '12345678901234567'}\r\n/home/markeloffdev/projects/python/aiohttp/aiohttp/client.py:1037: RuntimeWarning: coroutine 'noop' was never awaited\r\n  self._resp.release()\r\nRuntimeWarning: Enable tracemalloc to get the object allocation traceback\r\n{'data': [{'name': 'Bill Doe', 'id': '233242342342'}, {'name': 'Mary Doe', 'id': '2342342343222'}, {'name': 'Alex Smith', 'id': '234234234344'}], 'paging': {'cursors': {'before': 'QVFIUjRtc2c5NEl0ajN', 'after': 'QVFIUlpFQWM0TmVuaDRad0dt'}, 'next': 'https://graph.facebook.com/v2.7/12345678901234567/friends?access_token=EAACEdEose0cB'}, 'summary': {'total_count': 3}}\r\nTask was destroyed but it is pending!\r\ntask: <Task pending coro=<RequestHandler.start() running at /home/markeloffdev/projects/python/aiohttp/aiohttp/web_protocol.py:461> wait_for=<Future pending cb=[<TaskWakeupMethWrapper object at 0x7fd830c3a5b8>()]>>\r\n```\r\n\r\n<!-- What's actually happening? -->\r\n\r\n## Steps to reproduce\r\n\r\n<!-- Please describe steps to reproduce the issue.\r\n     If you have a script that does that please include it here within\r\n     markdown code markup -->\r\n\r\nTry run `examples/fake_server.py`.\r\n\r\n## Your environment\r\n\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case. \r\n     \r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\n\r\naiohttp: 4.0.0a1\r\nOS: Ubuntu 18.04\r\nPython: 3.7.3\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4282", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4282/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4282/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4282/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4282", "id": 513021876, "node_id": "MDU6SXNzdWU1MTMwMjE4NzY=", "number": 4282, "title": "RuntimeWarning: coroutine 'noop' was never awaited", "user": {"login": "AtomsForPeace", "id": 1306402, "node_id": "MDQ6VXNlcjEzMDY0MDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1306402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AtomsForPeace", "html_url": "https://github.com/AtomsForPeace", "followers_url": "https://api.github.com/users/AtomsForPeace/followers", "following_url": "https://api.github.com/users/AtomsForPeace/following{/other_user}", "gists_url": "https://api.github.com/users/AtomsForPeace/gists{/gist_id}", "starred_url": "https://api.github.com/users/AtomsForPeace/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AtomsForPeace/subscriptions", "organizations_url": "https://api.github.com/users/AtomsForPeace/orgs", "repos_url": "https://api.github.com/users/AtomsForPeace/repos", "events_url": "https://api.github.com/users/AtomsForPeace/events{/privacy}", "received_events_url": "https://api.github.com/users/AtomsForPeace/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-27T21:05:14Z", "updated_at": "2019-11-09T13:20:48Z", "closed_at": "2019-11-09T13:20:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Long story short\r\n\r\nI get this when I run pytest with -s.\r\n\r\nApparently it was already noticed and dealt with here:\r\nhttps://github.com/aio-libs/aiohttp/blob/f30a2043bb7e45d3ac775612c20c6e453f7c60f6/aiohttp/helpers.py#L103-L104\r\n\r\n## Expected behaviour\r\n\r\nNo warnings\r\n\r\n## Actual behaviour\r\n\r\nWarnings\r\n\r\n## Steps to reproduce\r\n\r\nThe following test:\r\npython -m pytest tests/test_web_functional.py::test_subapp_reverse_static_url[pyloop] -x -s \r\n\r\n## Your environment\r\n\r\nI get it in python3.7 and python3.8.\r\nLinux Mint 18.3\r\nOn aiohttp master\r\n\r\nAny suggestions on how do fix it?\r\nMaybe a sync and async version of noop?\r\nI can make a pull request.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4278", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4278/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4278/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4278/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4278", "id": 512841405, "node_id": "MDU6SXNzdWU1MTI4NDE0MDU=", "number": 4278, "title": "Aiohttp: ModuleNotFoundError: No module named 'http.server'; 'http' is not a package", "user": {"login": "CodeM01", "id": 47262039, "node_id": "MDQ6VXNlcjQ3MjYyMDM5", "avatar_url": "https://avatars1.githubusercontent.com/u/47262039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CodeM01", "html_url": "https://github.com/CodeM01", "followers_url": "https://api.github.com/users/CodeM01/followers", "following_url": "https://api.github.com/users/CodeM01/following{/other_user}", "gists_url": "https://api.github.com/users/CodeM01/gists{/gist_id}", "starred_url": "https://api.github.com/users/CodeM01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CodeM01/subscriptions", "organizations_url": "https://api.github.com/users/CodeM01/orgs", "repos_url": "https://api.github.com/users/CodeM01/repos", "events_url": "https://api.github.com/users/CodeM01/events{/privacy}", "received_events_url": "https://api.github.com/users/CodeM01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986078, "node_id": "MDU6TGFiZWw1ODk4NjA3OA==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-26T14:22:01Z", "updated_at": "2019-10-26T19:26:38Z", "closed_at": "2019-10-26T18:24:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nI have pip installed aiohttp but I cannot get it working\r\n\r\n## Expected behaviour\r\n\r\nNot throw an error when I import it\r\n\r\n## Actual behaviour\r\n\r\nIts's throwing this error:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\\\PycharmProjects\\Project\\http.py\", line 1, in <module>\r\n    import aiohttp\r\n  File \"C:\\Users\\\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\aiohttp\\__init__.py\", line 6, in <module>\r\n    from .client import BaseConnector as BaseConnector\r\n  File \"C:\\Users\\\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\aiohttp\\client.py\", line 32, in <module>\r\n    from . import hdrs, http, payload\r\n  File \"C:\\Users\\\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\aiohttp\\http.py\", line 1, in <module>\r\n    import http.server\r\nModuleNotFoundError: No module named 'http.server'; 'http' is not a package\r\n[Finished in 1.431s]\r\n\r\n## Steps to reproduce\r\n\r\n## Your environment\r\n\r\nI am using the latest version of aiohttp and im on a windows operating system. I am using aiohttp for communicating with Discords server; a client\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4272", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4272/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4272/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4272/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4272", "id": 512811303, "node_id": "MDU6SXNzdWU1MTI4MTEzMDM=", "number": 4272, "title": "Improve client \"hello world\" in README", "user": {"login": "ksamuel", "id": 221886, "node_id": "MDQ6VXNlcjIyMTg4Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/221886?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ksamuel", "html_url": "https://github.com/ksamuel", "followers_url": "https://api.github.com/users/ksamuel/followers", "following_url": "https://api.github.com/users/ksamuel/following{/other_user}", "gists_url": "https://api.github.com/users/ksamuel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ksamuel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ksamuel/subscriptions", "organizations_url": "https://api.github.com/users/ksamuel/orgs", "repos_url": "https://api.github.com/users/ksamuel/repos", "events_url": "https://api.github.com/users/ksamuel/events{/privacy}", "received_events_url": "https://api.github.com/users/ksamuel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-10-26T09:00:53Z", "updated_at": "2019-11-12T10:43:32Z", "closed_at": "2019-11-12T10:43:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When looking at aiohttp README, the hello word looks like that:\r\n\r\n```python\r\nimport aiohttp\r\nimport asyncio\r\n\r\nasync def fetch(session, url):\r\n    async with session.get(url) as response:\r\n        return await response.text()\r\n\r\nasync def main():\r\n    async with aiohttp.ClientSession() as session:\r\n        html = await fetch(session, 'http://python.org')\r\n        print(html)\r\n\r\nif __name__ == '__main__':\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(main())\r\n```\r\n\r\nFor requests, it looks like this:\r\n\r\n```python\r\n>>> r = requests.get('https://api.github.com/user', auth=('user', 'pass'))\r\n>>> r.status_code\r\n200\r\n>>> r.headers['content-type']\r\n'application/json; charset=utf8'\r\n>>> r.encoding\r\n'utf-8'\r\n>>> r.text\r\nu'{\"type\":\"User\"...'\r\n>>> r.json\r\n{u'private_gists': 419, u'total_private_repos': 77, ...}\r\n```\r\n\r\nI can see three issues with the way aiohttp present itself:\r\n\r\n- The snippet seems to have unnecessary complexity\r\n- The snippet doesn't feature any quick scripting setup\r\n- There is no explanation for the *necessary* complexity\r\n\r\n## Expected behaviour\r\n\r\nFirst, extra complexity should be removed. I understand the benefit of `if __name__ == \"__main__\"`, but in a hello word type of code, it's noise that makes the code seems bigger than necessary. If you have the skill to learn async, you know when to add it later.\r\n\r\nAlso, can the code go from:\r\n\r\n```python\r\nasync def fetch(session, url):\r\n    async with session.get(url) as response:\r\n        return await response.text()\r\n\r\nasync def main():\r\n    async with aiohttp.ClientSession() as session:\r\n        html = await fetch(session, 'http://python.org')\r\n        print(html)\r\n```\r\nTo:\r\n\r\n```python\r\nasync def main():\r\n    async with aiohttp.ClientSession() as session:\r\n        async with session.get('http://python.org') as response:\r\n            return await response.text()\r\n```\r\n\r\n?\r\n\r\nI'm guessing the first form exhibit some kind of best practice I'm missing but:\r\n\r\n- since I'm missing it, I have no way to understand why it's best, and won't use it in the future\r\n- it makes the code feels heavy, and hide the expressiveness of aiohttop behind the verbosity of the coroutine system\r\n- the first time you grab for aiohttp, you probably just want to make a quick script out of it, not build a system with best practices\r\n\r\nAnd lastly, even this is weird:\r\n\r\n```python\r\nasync def main():\r\n    async with aiohttp.ClientSession() as session: # why session ?\r\n        async with session.get('http://python.org') as response: # why can't I do that in one line ?\r\n            return await response.text()\r\n```\r\n\r\nThis is necessary complexity. It's done for a reason, but coming from requests, it's strange and seems uncalled for. The README should acknowledge that, then offer a link leading to and explanation of why this is necessary for an async lib, and the consequences of it. It there are shortcuts to that syntax for quick scripts with less performance/best practice needs, the README should mention THAT first, give a quick warning, then follow with the best practice.\r\n\r\naiohttp is the `requests` of async as for now. It's the first face a newcommer see when discovering the async world nowaday (well, after playing with asyncio.sleep in tutorials).\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4270", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4270/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4270/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4270/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4270", "id": 512657803, "node_id": "MDU6SXNzdWU1MTI2NTc4MDM=", "number": 4270, "title": "TCPConnector ttl_dns_cache type hint", "user": {"login": "humkanet", "id": 35621227, "node_id": "MDQ6VXNlcjM1NjIxMjI3", "avatar_url": "https://avatars3.githubusercontent.com/u/35621227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/humkanet", "html_url": "https://github.com/humkanet", "followers_url": "https://api.github.com/users/humkanet/followers", "following_url": "https://api.github.com/users/humkanet/following{/other_user}", "gists_url": "https://api.github.com/users/humkanet/gists{/gist_id}", "starred_url": "https://api.github.com/users/humkanet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/humkanet/subscriptions", "organizations_url": "https://api.github.com/users/humkanet/orgs", "repos_url": "https://api.github.com/users/humkanet/repos", "events_url": "https://api.github.com/users/humkanet/events{/privacy}", "received_events_url": "https://api.github.com/users/humkanet/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1077350962, "node_id": "MDU6TGFiZWwxMDc3MzUwOTYy", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/Hacktoberfest", "name": "Hacktoberfest", "color": "d93f0b", "default": false, "description": "We think it's good for https://hacktoberfest.digitalocean.com/"}, {"id": 344995986, "node_id": "MDU6TGFiZWwzNDQ5OTU5ODY=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/client", "name": "client", "color": "bfd4f2", "default": false, "description": null}, {"id": 277836062, "node_id": "MDU6TGFiZWwyNzc4MzYwNjI=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/easy", "name": "easy", "color": "fbca04", "default": false, "description": null}, {"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-25T18:32:37Z", "updated_at": "2019-10-26T22:49:32Z", "closed_at": "2019-10-26T22:49:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\n```\r\nclass TCPConnector\r\ndef __init__(\r\n....\r\nttl_dns_cache: int=10\r\n...)\r\n```\r\n\r\nbut documentation (and code so):\r\n\r\n> ttl_dns_cache (int) \u2013\r\n> \r\n> expire after some seconds the DNS entries, None means cached forever. By default 10 seconds.\r\n\r\nCan you annotate as Optional[int], please?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4269", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4269/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4269/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4269/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4269", "id": 512593802, "node_id": "MDU6SXNzdWU1MTI1OTM4MDI=", "number": 4269, "title": "Use loop.sendfile() for file sending on Python 3.7+", "user": {"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}, {"id": 344996043, "node_id": "MDU6TGFiZWwzNDQ5OTYwNDM=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/server", "name": "server", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-25T15:56:30Z", "updated_at": "2020-01-19T12:37:37Z", "closed_at": "2020-01-19T12:37:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, the server code has a custom function that should be replaced with the standard `loop.sendfile()` if available.\r\n\r\n_Originally posted by @asvetlov in https://github.com/aio-libs/aiohttp/issues/2245#issuecomment-546409157_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4249", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4249/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4249/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4249/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4249", "id": 510114901, "node_id": "MDU6SXNzdWU1MTAxMTQ5MDE=", "number": 4249, "title": "How to get server ip in aiohttp", "user": {"login": "shmilylty", "id": 24275308, "node_id": "MDQ6VXNlcjI0Mjc1MzA4", "avatar_url": "https://avatars1.githubusercontent.com/u/24275308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shmilylty", "html_url": "https://github.com/shmilylty", "followers_url": "https://api.github.com/users/shmilylty/followers", "following_url": "https://api.github.com/users/shmilylty/following{/other_user}", "gists_url": "https://api.github.com/users/shmilylty/gists{/gist_id}", "starred_url": "https://api.github.com/users/shmilylty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shmilylty/subscriptions", "organizations_url": "https://api.github.com/users/shmilylty/orgs", "repos_url": "https://api.github.com/users/shmilylty/repos", "events_url": "https://api.github.com/users/shmilylty/events{/privacy}", "received_events_url": "https://api.github.com/users/shmilylty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-10-21T16:51:21Z", "updated_at": "2019-10-22T14:32:11Z", "closed_at": "2019-10-22T14:01:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nI want to get resolve ip from server \r\n\r\n## Detail\r\n\r\nCode demo:\r\n```py\r\nimport aiohttp\r\nimport asyncio\r\n\r\nasync def fetch(session, url):\r\n    async with session.get(url) as response:\r\n        return await response.text()\r\n\r\nasync def main():\r\n    async with aiohttp.ClientSession() as session:\r\n        html = await fetch(session, 'http://python.org')\r\n        print(html)\r\n\r\nif __name__ == '__main__':\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(main())\r\n```\r\nHow I can get resolve ip of  python.org in aiohttp?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4248", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4248/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4248/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4248/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4248", "id": 509950922, "node_id": "MDU6SXNzdWU1MDk5NTA5MjI=", "number": 4248, "title": "Getting 404s on sub app routes", "user": {"login": "thebpmgroup", "id": 52509561, "node_id": "MDQ6VXNlcjUyNTA5NTYx", "avatar_url": "https://avatars0.githubusercontent.com/u/52509561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thebpmgroup", "html_url": "https://github.com/thebpmgroup", "followers_url": "https://api.github.com/users/thebpmgroup/followers", "following_url": "https://api.github.com/users/thebpmgroup/following{/other_user}", "gists_url": "https://api.github.com/users/thebpmgroup/gists{/gist_id}", "starred_url": "https://api.github.com/users/thebpmgroup/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thebpmgroup/subscriptions", "organizations_url": "https://api.github.com/users/thebpmgroup/orgs", "repos_url": "https://api.github.com/users/thebpmgroup/repos", "events_url": "https://api.github.com/users/thebpmgroup/events{/privacy}", "received_events_url": "https://api.github.com/users/thebpmgroup/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-21T13:08:13Z", "updated_at": "2019-10-22T09:34:25Z", "closed_at": "2019-10-22T09:34:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\nI have created an app (which works) and a sub app which doesn't work. It launches and I can see the routes of the sub app when I iterate through the routes of the main app using print, but all attempts to call a url of the sub app give a 404\r\n\r\n## Expected behaviour\r\n\r\nSub app works as per the example\r\n\r\n## Actual behaviour\r\n\r\nSub app loads and routes load into routing table but all attempts to load the routes in a browser result in a 404\r\n\r\n## Steps to reproduce\r\n\r\n**server.py**\r\n```\r\nimport aiohttp_jinja2\r\nimport jinja2\r\nimport asyncio\r\nfrom aiohttp import web\r\nimport subapp #This is the source file containing the sub app\r\n\r\n@aiohttp_jinja2.template('helloworld.jinja2')\r\nasync def helloworld(request):\r\n    return {'hw': 'Hello World'}\r\n\r\napp = web.Application()\r\n    aiohttp_jinja2.setup(app,\r\n    loader=jinja2.FileSystemLoader('templates'))\r\n\r\n app.add_subapp('/admin',subapp.admin_app)\r\n app['admin'] = subapp.admin_app #Tried with and without this line as I have seen examples both with and without\r\n\r\nfor r in app.router.routes():\r\n        print(r.resource.get_info()) #This successfully lists my routes including sub app routes\r\n\r\nweb.run_app(app, port=8000)\r\n```\r\n**subapp.py**\r\n```\r\nimport aiohttp_jinja2\r\nimport jinja2\r\nimport asyncio\r\nfrom aiohttp import web\r\n\r\n@aiohttp_jinja2.template('subapproute1.jinja2')\r\nasync def subapproute1(request):\r\n    return {'hw': 'Hello World'}\r\n\r\nadmin_app = web.Application()\r\nadmin_app.add_routes([web.get('/subapproute1, subapproute1, name='subapproute1')])\r\n```\r\n## Your environment\r\n\r\nPython 3.7\r\nUbuntu 18.04 LTS\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4243", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4243/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4243/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4243/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4243", "id": 509649383, "node_id": "MDU6SXNzdWU1MDk2NDkzODM=", "number": 4243, "title": "Dependabot couldn't find the branch 3.7", "user": {"login": "dependabot-preview[bot]", "id": 27856297, "node_id": "MDM6Qm90Mjc4NTYyOTc=", "avatar_url": "https://avatars3.githubusercontent.com/in/2141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dependabot-preview%5Bbot%5D", "html_url": "https://github.com/apps/dependabot-preview", "followers_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/followers", "following_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/repos", "events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/dependabot-preview%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-20T20:38:58Z", "updated_at": "2019-10-21T06:58:48Z", "closed_at": "2019-10-21T06:58:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Dependabot was set up to create pull requests against the branch `3.7`, but couldn't find it.\n\nIf the branch has been permanently deleted you can update Dependabot's target branch in the `.dependabot/config.yml` file in this repo.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4215", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4215/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4215/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4215/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4215", "id": 508576494, "node_id": "MDU6SXNzdWU1MDg1NzY0OTQ=", "number": 4215, "title": "download header", "user": {"login": "aminhyper", "id": 32235932, "node_id": "MDQ6VXNlcjMyMjM1OTMy", "avatar_url": "https://avatars0.githubusercontent.com/u/32235932?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aminhyper", "html_url": "https://github.com/aminhyper", "followers_url": "https://api.github.com/users/aminhyper/followers", "following_url": "https://api.github.com/users/aminhyper/following{/other_user}", "gists_url": "https://api.github.com/users/aminhyper/gists{/gist_id}", "starred_url": "https://api.github.com/users/aminhyper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aminhyper/subscriptions", "organizations_url": "https://api.github.com/users/aminhyper/orgs", "repos_url": "https://api.github.com/users/aminhyper/repos", "events_url": "https://api.github.com/users/aminhyper/events{/privacy}", "received_events_url": "https://api.github.com/users/aminhyper/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-17T16:04:27Z", "updated_at": "2019-10-17T16:05:01Z", "closed_at": "2019-10-17T16:04:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\n\r\n<!-- Please describe your problem and why the fix is important. -->\r\n\r\n## Expected behaviour\r\n\r\n<!-- What is the behaviour you expect? -->\r\n\r\n## Actual behaviour\r\n\r\n<!-- What's actually happening? -->\r\n\r\n## Steps to reproduce\r\n\r\n<!-- Please describe steps to reproduce the issue.\r\n     If you have a script that does that please include it here within\r\n     markdown code markup -->\r\n\r\n## Your environment\r\n\r\n<!-- Describe the environment you have that lead to your issue.\r\n     This includes aiohttp version, OS, proxy server and other bits that\r\n     are related to your case. \r\n     \r\n     IMPORTANT: aiohttp is both server framework and client library.\r\n     For getting rid of confusing please put 'server', 'client' or 'both'\r\n     word here.\r\n     -->\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4214", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4214/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4214/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4214/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4214", "id": 508557894, "node_id": "MDU6SXNzdWU1MDg1NTc4OTQ=", "number": 4214, "title": "ClientResponse.get_encoding() throws TypeError if it hasn't been read ", "user": {"login": "Transfusion", "id": 3119646, "node_id": "MDQ6VXNlcjMxMTk2NDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3119646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Transfusion", "html_url": "https://github.com/Transfusion", "followers_url": "https://api.github.com/users/Transfusion/followers", "following_url": "https://api.github.com/users/Transfusion/following{/other_user}", "gists_url": "https://api.github.com/users/Transfusion/gists{/gist_id}", "starred_url": "https://api.github.com/users/Transfusion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Transfusion/subscriptions", "organizations_url": "https://api.github.com/users/Transfusion/orgs", "repos_url": "https://api.github.com/users/Transfusion/repos", "events_url": "https://api.github.com/users/Transfusion/events{/privacy}", "received_events_url": "https://api.github.com/users/Transfusion/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-17T15:31:52Z", "updated_at": "2020-01-18T16:29:28Z", "closed_at": "2020-01-18T16:29:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Long story short\r\n`ClientResponse.get_encoding()` throws `TypeError: object of type 'NoneType' has no len()` if we don't first call `text()` or `json()` to read from it, i.e. `_body is None`\r\n\r\nRelated: #4112 \r\n\r\n<!-- Please describe your problem and why the fix is important. -->\r\n\r\n## Expected behaviour\r\nDoes not throw an error, returns some default value\r\n<!-- What is the behaviour you expect? -->\r\n\r\n## Actual behaviour\r\n```python-traceback\r\nTraceback (most recent call last):\r\n  File \"/home/transfusion/aiohttp/aiohttp_issue_4112.py\", line 14, in <module>\r\n    loop.run_until_complete(test())\r\n  File \"/usr/lib/python3.7/asyncio/base_events.py\", line 579, in run_until_complete\r\n    return future.result()\r\n  File \"/home/transfusion/aiohttp/aiohttp_issue_4112.py\", line 10, in test\r\n    print(r.get_encoding())\r\n  File \"/home/transfusion/aiohttp/aiohttp/client_reqrep.py\", line 942, in get_encoding\r\n    encoding = chardet.detect(self._body)['encoding']\r\n  File \"/home/transfusion/python37/lib/python3.7/site-packages/cchardet/__init__.py\", line 15, in detect\r\n    encoding, confidence = _cchardet.detect_with_confidence(msg)\r\n  File \"src/cchardet/_cchardet.pyx\", line 15, in cchardet._cchardet.detect_with_confidence\r\nTypeError: object of type 'NoneType' has no len()\r\n```\r\n## Steps to reproduce\r\n\r\nFind any webpage that doesn't include a `charset` parameter in its `Content-Type` response header; you may check headers only with `curl -v -s http://example.com 1> /dev/null`\r\n\r\n```py\r\nimport aiohttp\r\nimport asyncio\r\n\r\n\r\nasync def test():\r\n\r\n    async with aiohttp.ClientSession() as session:\r\n        r = await session.get('http://www.africau.edu', ssl=None)\r\n        # print(await r.text())\r\n        print(r.get_encoding())\r\n\r\nif __name__ == \"__main__\":\r\n    loop = asyncio.get_event_loop()\r\n    loop.run_until_complete(test())\r\n```\r\n\r\n## Your environment\r\n\r\n4.0.0a1, Commit f356eeb8ccefd1e176536d396d026a23da1f1695\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4204", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4204/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4204/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4204/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4204", "id": 508286555, "node_id": "MDU6SXNzdWU1MDgyODY1NTU=", "number": 4204, "title": "Contradiction between documentation and annotation of the secure parameter of set_cookie()", "user": {"login": "serhiy-storchaka", "id": 3659035, "node_id": "MDQ6VXNlcjM2NTkwMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3659035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serhiy-storchaka", "html_url": "https://github.com/serhiy-storchaka", "followers_url": "https://api.github.com/users/serhiy-storchaka/followers", "following_url": "https://api.github.com/users/serhiy-storchaka/following{/other_user}", "gists_url": "https://api.github.com/users/serhiy-storchaka/gists{/gist_id}", "starred_url": "https://api.github.com/users/serhiy-storchaka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serhiy-storchaka/subscriptions", "organizations_url": "https://api.github.com/users/serhiy-storchaka/orgs", "repos_url": "https://api.github.com/users/serhiy-storchaka/repos", "events_url": "https://api.github.com/users/serhiy-storchaka/events{/privacy}", "received_events_url": "https://api.github.com/users/serhiy-storchaka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1077350962, "node_id": "MDU6TGFiZWwxMDc3MzUwOTYy", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/Hacktoberfest", "name": "Hacktoberfest", "color": "d93f0b", "default": false, "description": "We think it's good for https://hacktoberfest.digitalocean.com/"}, {"id": 277836062, "node_id": "MDU6TGFiZWwyNzc4MzYwNjI=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/easy", "name": "easy", "color": "fbca04", "default": false, "description": null}, {"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-17T07:23:46Z", "updated_at": "2019-10-26T09:07:14Z", "closed_at": "2019-10-26T09:07:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `secure` parameter of `StreamResponse.set_cookie()` is [documented](https://docs.aiohttp.org/en/stable/web_reference.html#aiohttp.web.StreamResponse.set_cookie) as `bool`, but is [annotated](https://github.com/aio-libs/aiohttp/blob/62365364889981a2e5d3cd36a25240c9c38693fe/aiohttp/web_response.py#L172) as `Optional[str]`.\r\n\r\nWhat is right?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4198", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4198/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4198/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4198/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4198", "id": 507886647, "node_id": "MDU6SXNzdWU1MDc4ODY2NDc=", "number": 4198, "title": "Where did the 4.0.0a0 package go?", "user": {"login": "StingyJack", "id": 15381181, "node_id": "MDQ6VXNlcjE1MzgxMTgx", "avatar_url": "https://avatars1.githubusercontent.com/u/15381181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StingyJack", "html_url": "https://github.com/StingyJack", "followers_url": "https://api.github.com/users/StingyJack/followers", "following_url": "https://api.github.com/users/StingyJack/following{/other_user}", "gists_url": "https://api.github.com/users/StingyJack/gists{/gist_id}", "starred_url": "https://api.github.com/users/StingyJack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StingyJack/subscriptions", "organizations_url": "https://api.github.com/users/StingyJack/orgs", "repos_url": "https://api.github.com/users/StingyJack/repos", "events_url": "https://api.github.com/users/StingyJack/events{/privacy}", "received_events_url": "https://api.github.com/users/StingyJack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986079, "node_id": "MDU6TGFiZWw1ODk4NjA3OQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/question", "name": "question", "color": "cc317c", "default": true, "description": "StackOverflow"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-10-16T14:23:59Z", "updated_at": "2019-10-28T20:42:49Z", "closed_at": "2019-10-17T11:51:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "4.0.0a1 broke code that was working with 4.0.0a0.  Where can I get the 4.0.0a0 package from if I cant figure out a workaround for the code?\r\n\r\nSpecifically the broken part is that the `verify_ssl` parameter is no longer available.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4191", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4191/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4191/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4191/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4191", "id": 507717876, "node_id": "MDU6SXNzdWU1MDc3MTc4NzY=", "number": 4191, "title": "Implement ClientSession.timeout property", "user": {"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1077350962, "node_id": "MDU6TGFiZWwxMDc3MzUwOTYy", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/Hacktoberfest", "name": "Hacktoberfest", "color": "d93f0b", "default": false, "description": "We think it's good for https://hacktoberfest.digitalocean.com/"}, {"id": 344995986, "node_id": "MDU6TGFiZWwzNDQ5OTU5ODY=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/client", "name": "client", "color": "bfd4f2", "default": false, "description": null}, {"id": 277836062, "node_id": "MDU6TGFiZWwyNzc4MzYwNjI=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/easy", "name": "easy", "color": "fbca04", "default": false, "description": null}, {"id": 1363888987, "node_id": "MDU6TGFiZWwxMzYzODg4OTg3", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-16T09:08:11Z", "updated_at": "2019-10-18T13:34:56Z", "closed_at": "2019-10-18T13:34:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It is a bare method that returns `self._timeout`.\r\n\r\nDocumentation and a simple test are required", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4190", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4190/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4190/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4190/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4190", "id": 507709426, "node_id": "MDU6SXNzdWU1MDc3MDk0MjY=", "number": 4190, "title": "Docs: Mention that timeouts are in seconds", "user": {"login": "polcak", "id": 1948434, "node_id": "MDQ6VXNlcjE5NDg0MzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1948434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/polcak", "html_url": "https://github.com/polcak", "followers_url": "https://api.github.com/users/polcak/followers", "following_url": "https://api.github.com/users/polcak/following{/other_user}", "gists_url": "https://api.github.com/users/polcak/gists{/gist_id}", "starred_url": "https://api.github.com/users/polcak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/polcak/subscriptions", "organizations_url": "https://api.github.com/users/polcak/orgs", "repos_url": "https://api.github.com/users/polcak/repos", "events_url": "https://api.github.com/users/polcak/events{/privacy}", "received_events_url": "https://api.github.com/users/polcak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1077350962, "node_id": "MDU6TGFiZWwxMDc3MzUwOTYy", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/Hacktoberfest", "name": "Hacktoberfest", "color": "d93f0b", "default": false, "description": "We think it's good for https://hacktoberfest.digitalocean.com/"}, {"id": 445958404, "node_id": "MDU6TGFiZWw0NDU5NTg0MDQ=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/docs%20/%20examples", "name": "docs / examples", "color": "d4c5f9", "default": false, "description": null}, {"id": 277836062, "node_id": "MDU6TGFiZWwyNzc4MzYwNjI=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/easy", "name": "easy", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-16T08:53:04Z", "updated_at": "2019-10-19T10:31:45Z", "closed_at": "2019-10-19T10:31:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The docs such as https://docs.aiohttp.org/en/stable/client_reference.html#aiohttp.ClientTimeout does not mention what are the units for the timeout, are these second, miliseconds, minutes?\r\n\r\nLooking at https://docs.aiohttp.org/en/stable/client_quickstart.html#aiohttp-client-timeouts I figured out that timeouts are specified as seconds but only after reading to the very botom. Even there the units are not mentioned but rather the docs mention \"By default aiohttp uses a total 5min timeout\" and \"Thus the default timeout is: aiohttp.ClientTimeout(total=5*60, connect=None,\r\n                      sock_connect=None, sock_read=None)\"\r\n\r\n## Expected behaviour\r\n\r\nPlease specify the units explicitely, e.g.: \"Total number of seconds for the whole request.\" rather than \"Total timeout for the whole request.\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4189", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4189/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4189/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4189/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4189", "id": 507698596, "node_id": "MDU6SXNzdWU1MDc2OTg1OTY=", "number": 4189, "title": "Implement BaseRequest.get_extra_info()", "user": {"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1077350962, "node_id": "MDU6TGFiZWwxMDc3MzUwOTYy", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/Hacktoberfest", "name": "Hacktoberfest", "color": "d93f0b", "default": false, "description": "We think it's good for https://hacktoberfest.digitalocean.com/"}, {"id": 277836062, "node_id": "MDU6TGFiZWwyNzc4MzYwNjI=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/easy", "name": "easy", "color": "fbca04", "default": false, "description": null}, {"id": 344996043, "node_id": "MDU6TGFiZWwzNDQ5OTYwNDM=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/server", "name": "server", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-16T08:33:24Z", "updated_at": "2019-10-18T19:32:25Z", "closed_at": "2019-10-18T19:32:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It is a simple shortcut for `request.transport.get_extra_info()`.\r\n\r\n`request.transport` will go eventually.\r\n\r\nDocumentation update and a simple test are required.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4181", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4181/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4181/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4181/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4181", "id": 506440662, "node_id": "MDU6SXNzdWU1MDY0NDA2NjI=", "number": 4181, "title": "StreamResponse.write typing issue", "user": {"login": "willmcgugan", "id": 554369, "node_id": "MDQ6VXNlcjU1NDM2OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/554369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willmcgugan", "html_url": "https://github.com/willmcgugan", "followers_url": "https://api.github.com/users/willmcgugan/followers", "following_url": "https://api.github.com/users/willmcgugan/following{/other_user}", "gists_url": "https://api.github.com/users/willmcgugan/gists{/gist_id}", "starred_url": "https://api.github.com/users/willmcgugan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willmcgugan/subscriptions", "organizations_url": "https://api.github.com/users/willmcgugan/orgs", "repos_url": "https://api.github.com/users/willmcgugan/repos", "events_url": "https://api.github.com/users/willmcgugan/events{/privacy}", "received_events_url": "https://api.github.com/users/willmcgugan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-14T04:23:35Z", "updated_at": "2019-10-15T14:50:29Z", "closed_at": "2019-10-15T14:50:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Long story short\r\n\r\nThe docs for [StreamResponse.write](https://docs.aiohttp.org/en/stable/web_reference.html#aiohttp.web.StreamResponse.write) claim the method can accept bytes, bytearray, or memoryview, but the [signature](https://github.com/aio-libs/aiohttp/blob/master/aiohttp/web_response.py#L402) is typed as accepting `bytes` only. Similar issue with write_eof.\r\n\r\nNaturally mypy complains if you give it anything other than bytes.\r\n\r\nI'm assuming this is an oversight and all that needs to be changed is the signature. Happy to submit a PR for that and any other instances I find.\r\n\r\n## Your environment\r\n\r\nPresent in master branch.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4179", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4179/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4179/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4179/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4179", "id": 506171152, "node_id": "MDU6SXNzdWU1MDYxNzExNTI=", "number": 4179, "title": "Can't install dependencies from master after cloning", "user": {"login": "paulefoe", "id": 25705931, "node_id": "MDQ6VXNlcjI1NzA1OTMx", "avatar_url": "https://avatars1.githubusercontent.com/u/25705931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulefoe", "html_url": "https://github.com/paulefoe", "followers_url": "https://api.github.com/users/paulefoe/followers", "following_url": "https://api.github.com/users/paulefoe/following{/other_user}", "gists_url": "https://api.github.com/users/paulefoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulefoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulefoe/subscriptions", "organizations_url": "https://api.github.com/users/paulefoe/orgs", "repos_url": "https://api.github.com/users/paulefoe/repos", "events_url": "https://api.github.com/users/paulefoe/events{/privacy}", "received_events_url": "https://api.github.com/users/paulefoe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 445958404, "node_id": "MDU6TGFiZWw0NDU5NTg0MDQ=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/docs%20/%20examples", "name": "docs / examples", "color": "d4c5f9", "default": false, "description": null}, {"id": 58986077, "node_id": "MDU6TGFiZWw1ODk4NjA3Nw==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-12T10:54:06Z", "updated_at": "2019-10-12T13:05:03Z", "closed_at": "2019-10-12T13:05:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Long story short\r\n\r\nIn a commit `ab0e956b2952462a4ca132c5ee13284719bffe7e` the cythonize function was removed from `setup.py` and now I can't install dependencies unless I do `make cythonize` before installing which is not documented anywhere as far as I can see.\r\n\r\n## Expected behaviour\r\n\r\n`pip install -r requirements/dev.txt` installs the dependencies or documentation includes `make cythonize` part\r\n\r\n## Actual behaviour\r\n\r\nAn exception that there is no file aiohttp/_websocket.c\r\n\r\n## Steps to reproduce\r\n\r\n1. `git clone git@github.com:aio-libs/aiohttp.git --recurse-submodules`\r\n2. create venv\r\n3. `pip install -r requirements/dev.txt`\r\n\r\n## Your environment\r\n\r\nKernel: x86_64 Linux 5.3.5-arch1-1-ARCH\r\npython: 3.7,  3.6\r\naiohttp version: master\r\n\r\nWould be glad to provide a pr.\r\n\r\nShould we just add make command to the docs in contributing?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4178", "repository_url": "https://api.github.com/repos/aio-libs/aiohttp", "labels_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4178/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4178/comments", "events_url": "https://api.github.com/repos/aio-libs/aiohttp/issues/4178/events", "html_url": "https://github.com/aio-libs/aiohttp/issues/4178", "id": 506010140, "node_id": "MDU6SXNzdWU1MDYwMTAxNDA=", "number": 4178, "title": "Sending text file hangs on Windows", "user": {"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 58986075, "node_id": "MDU6TGFiZWw1ODk4NjA3NQ==", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 344995986, "node_id": "MDU6TGFiZWwzNDQ5OTU5ODY=", "url": "https://api.github.com/repos/aio-libs/aiohttp/labels/client", "name": "client", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-11T19:02:25Z", "updated_at": "2019-11-21T12:22:34Z", "closed_at": "2019-11-21T12:22:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n    with fname.open('r') as f:\r\n        resp = await client.post('/', data=f)\r\n```\r\n\r\nA file opened in binary mode (`fname.open('r')`) works well.", "performed_via_github_app": null, "score": 1.0}]}