{"total_count": 176, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/aio-libs/aioredis/issues/779", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/779/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/779/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/779/events", "html_url": "https://github.com/aio-libs/aioredis/issues/779", "id": 662292118, "node_id": "MDU6SXNzdWU2NjIyOTIxMTg=", "number": 779, "title": "Delete me", "user": {"login": "bitqistchris", "id": 33156439, "node_id": "MDQ6VXNlcjMzMTU2NDM5", "avatar_url": "https://avatars3.githubusercontent.com/u/33156439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitqistchris", "html_url": "https://github.com/bitqistchris", "followers_url": "https://api.github.com/users/bitqistchris/followers", "following_url": "https://api.github.com/users/bitqistchris/following{/other_user}", "gists_url": "https://api.github.com/users/bitqistchris/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitqistchris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitqistchris/subscriptions", "organizations_url": "https://api.github.com/users/bitqistchris/orgs", "repos_url": "https://api.github.com/users/bitqistchris/repos", "events_url": "https://api.github.com/users/bitqistchris/events{/privacy}", "received_events_url": "https://api.github.com/users/bitqistchris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-20T21:40:09Z", "updated_at": "2020-07-21T15:36:21Z", "closed_at": "2020-07-21T15:35:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "-", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/769", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/769/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/769/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/769/events", "html_url": "https://github.com/aio-libs/aioredis/issues/769", "id": 642958625, "node_id": "MDU6SXNzdWU2NDI5NTg2MjU=", "number": 769, "title": "watch command can't take effect in multi_exec transactions", "user": {"login": "kevinkelin", "id": 2595465, "node_id": "MDQ6VXNlcjI1OTU0NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/2595465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevinkelin", "html_url": "https://github.com/kevinkelin", "followers_url": "https://api.github.com/users/kevinkelin/followers", "following_url": "https://api.github.com/users/kevinkelin/following{/other_user}", "gists_url": "https://api.github.com/users/kevinkelin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevinkelin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevinkelin/subscriptions", "organizations_url": "https://api.github.com/users/kevinkelin/orgs", "repos_url": "https://api.github.com/users/kevinkelin/repos", "events_url": "https://api.github.com/users/kevinkelin/events{/privacy}", "received_events_url": "https://api.github.com/users/kevinkelin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-22T10:40:08Z", "updated_at": "2020-07-14T06:08:43Z", "closed_at": "2020-07-14T06:08:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I use `aioredis.create_redis_pool`  to create a redis pool instance, the `watch` command can't take effect \r\nhere is the example code\r\n```python\r\n    redis = await aioredis.create_redis_pool(\"redisUri\")\r\n    print(await redis.get(\"testyyx\"))\r\n    print(await redis.watch('testyyx'))\r\n    print(await redis.set('testyyx', 111))\r\n    print(await redis.get('testyyx'))\r\n    tr = redis.multi_exec()\r\n    tr.incr('testyyx')\r\n    tr.incr('testyyx')\r\n    try:\r\n        print(await tr.execute())\r\n    except Exception as e:\r\n        print(e, 33333)\r\n```\r\nthis code can't Trigger WatchVariableError exception, and the value will be set to 113, this is not my expec\r\n\r\nbut when edit the redis initialization code to \r\n```python\r\nredis = await aioredis.create_redis(\"redisUri\")\r\n```\r\n\r\nthe code will Trigger WatchVariableError exception\r\n\r\n\r\nI don't know is this a bug or the features of redis? \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/750", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/750/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/750/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/750/events", "html_url": "https://github.com/aio-libs/aioredis/issues/750", "id": 622302778, "node_id": "MDU6SXNzdWU2MjIzMDI3Nzg=", "number": 750, "title": "xread returns nothing", "user": {"login": "TensorTom", "id": 14287229, "node_id": "MDQ6VXNlcjE0Mjg3MjI5", "avatar_url": "https://avatars2.githubusercontent.com/u/14287229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TensorTom", "html_url": "https://github.com/TensorTom", "followers_url": "https://api.github.com/users/TensorTom/followers", "following_url": "https://api.github.com/users/TensorTom/following{/other_user}", "gists_url": "https://api.github.com/users/TensorTom/gists{/gist_id}", "starred_url": "https://api.github.com/users/TensorTom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TensorTom/subscriptions", "organizations_url": "https://api.github.com/users/TensorTom/orgs", "repos_url": "https://api.github.com/users/TensorTom/repos", "events_url": "https://api.github.com/users/TensorTom/events{/privacy}", "received_events_url": "https://api.github.com/users/TensorTom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-21T07:18:10Z", "updated_at": "2020-05-22T00:07:51Z", "closed_at": "2020-05-22T00:07:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Redis 6.0.3\r\nPython: 3.8.2\r\naioredis: 1.3.1\r\n\r\nNothing is returned by xread in aioredis. redis-cli returns the stream properly.\r\n\r\n```\r\nimport asyncio\r\nimport aioredis\r\n\r\nloop = asyncio.get_event_loop()\r\n\r\n\r\nasync def main():\r\n    stream = 'chennai'\r\n    fields = {\r\n        'foo': 'bar'\r\n    }\r\n\r\n\r\n    redis = await aioredis.create_redis('redis://localhost', loop=loop)\r\n    await redis.xadd(stream, fields)\r\n    result = await redis.xread([stream])\r\n    print(result)\r\n    redis.close()\r\n    await redis.wait_closed()\r\n\r\nloop.create_task(main())\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/738", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/738/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/738/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/738/events", "html_url": "https://github.com/aio-libs/aioredis/issues/738", "id": 603202879, "node_id": "MDU6SXNzdWU2MDMyMDI4Nzk=", "number": 738, "title": "[0.15.22] asyncpg error: Column \"X\" must appear in group by clause or be used in an aggregate function", "user": {"login": "bbedward", "id": 550752, "node_id": "MDQ6VXNlcjU1MDc1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/550752?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbedward", "html_url": "https://github.com/bbedward", "followers_url": "https://api.github.com/users/bbedward/followers", "following_url": "https://api.github.com/users/bbedward/following{/other_user}", "gists_url": "https://api.github.com/users/bbedward/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbedward/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbedward/subscriptions", "organizations_url": "https://api.github.com/users/bbedward/orgs", "repos_url": "https://api.github.com/users/bbedward/repos", "events_url": "https://api.github.com/users/bbedward/events{/privacy}", "received_events_url": "https://api.github.com/users/bbedward/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-20T12:32:49Z", "updated_at": "2020-04-20T16:01:39Z", "closed_at": "2020-04-20T16:01:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nRecently encountered an issue with newer versions of tortoise-orm with the following query:\r\n\r\n```py\r\nAccount.filter(wallet=wallet).annotate(max_index=Max(\"account_index\")).order_by('-account_index').first()\r\n```\r\n\r\nThe schema is as follows:\r\n\r\nAccount.py\r\n\r\n```py\r\nclass Account(Model):\r\n    wallet  = fields.ForeignKeyField('db.Wallet', on_delete=fields.CASCADE, related_name='accounts', index=True)\r\n    address = fields.CharField(max_length=65)\r\n    account_index = fields.IntField()\r\n    work = fields.BooleanField(default=True)\r\n    created_at = fields.DatetimeField(auto_now_add=True)\r\n\r\n    class Meta:\r\n        table = 'accounts'\r\n        unique_together = ('address', 'account_index')\r\n```\r\n\r\nWallet.py\r\n\r\n```py\r\nclass Wallet(Model):\r\n    id = fields.UUIDField(pk=True)\r\n    seed = fields.CharField(max_length=128, unique=True)\r\n    representative = fields.CharField(max_length=65, null=True)\r\n    encrypted = fields.BooleanField(default=False)\r\n    work = fields.BooleanField(default=True)\r\n    created_at = fields.DatetimeField(auto_now_add=True)\r\n\r\n    class Meta:\r\n        table = 'wallets'\r\n```\r\n\r\nThe exception is as follows:\r\n\r\n```\r\nERROR:aiohttp.server:Error handling request\r\nTraceback (most recent call last):\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/tortoise/backends/asyncpg/client.py\", line 36, in translate_exceptions_\r\n    return await func(self, *args)\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/tortoise/backends/asyncpg/client.py\", line 172, in execute_query\r\n    rows = await connection.fetch(*params)\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/asyncpg/connection.py\", line 420, in fetch\r\n    return await self._execute(query, args, 0, timeout)\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/asyncpg/connection.py\", line 1403, in _execute\r\n    query, args, limit, timeout, return_status=return_status)\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/asyncpg/connection.py\", line 1411, in __execute\r\n    return await self._do_execute(query, executor, timeout)\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/asyncpg/connection.py\", line 1423, in _do_execute\r\n    stmt = await self._get_statement(query, None)\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/asyncpg/connection.py\", line 328, in _get_statement\r\n    statement = await self._protocol.prepare(stmt_name, query, timeout)\r\n  File \"asyncpg/protocol/protocol.pyx\", line 163, in prepare\r\nasyncpg.exceptions.GroupingError: column \"accounts.wallet_id\" must appear in the GROUP BY clause or be used in an aggregate function\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/aiohttp/web_protocol.py\", line 418, in start\r\n    resp = await task\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/aiohttp/web_app.py\", line 458, in _handle\r\n    resp = await handler(request)\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/aiohttp/web_middlewares.py\", line 119, in impl\r\n    return await handler(request)\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/aiohttp/web_middlewares.py\", line 109, in impl\r\n    return await handler(request)\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/pippin/server/pippin_server.py\", line 69, in gateway\r\n    return await self.wallet_create(request, request_json)\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/pippin/server/pippin_server.py\", line 145, in wallet_create\r\n    await wallet.account_create(using_db=conn)\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/pippin/db/models/wallet.py\", line 144, in account_create\r\n    account = await self.get_newest_account()\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/pippin/db/models/wallet.py\", line 139, in get_newest_account\r\n    return await acct.Account.filter(wallet=self).annotate(max_index=Max(\"account_index\")).order_by('-account_index').first()\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/tortoise/queryset.py\", line 613, in _execute\r\n    ).execute_select(self.query, custom_fields=list(self._annotations.keys()))\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/tortoise/backends/base/executor.py\", line 105, in execute_select\r\n    _, raw_results = await self.db.execute_query(query.get_sql())\r\n  File \"/home/pippin/.local/lib/python3.6/site-packages/tortoise/backends/asyncpg/client.py\", line 38, in translate_exceptions_\r\n    raise OperationalError(exc)\r\ntortoise.exceptions.OperationalError: column \"accounts.wallet_id\" must appear in the GROUP BY clause or be used in an aggregate function\r\n```\r\n\r\nAppears like some error generating the SQL with postgres (the same query works fine on SQLite).\r\n\r\nWorth noting, that the same query works fine on older tortoise-versions (0.15.5 was the previous version used)\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/722", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/722/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/722/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/722/events", "html_url": "https://github.com/aio-libs/aioredis/issues/722", "id": 585554907, "node_id": "MDU6SXNzdWU1ODU1NTQ5MDc=", "number": 722, "title": "CancelledError for delete command", "user": {"login": "arun11299", "id": 214426, "node_id": "MDQ6VXNlcjIxNDQyNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/214426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arun11299", "html_url": "https://github.com/arun11299", "followers_url": "https://api.github.com/users/arun11299/followers", "following_url": "https://api.github.com/users/arun11299/following{/other_user}", "gists_url": "https://api.github.com/users/arun11299/gists{/gist_id}", "starred_url": "https://api.github.com/users/arun11299/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arun11299/subscriptions", "organizations_url": "https://api.github.com/users/arun11299/orgs", "repos_url": "https://api.github.com/users/arun11299/repos", "events_url": "https://api.github.com/users/arun11299/events{/privacy}", "received_events_url": "https://api.github.com/users/arun11299/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-21T18:37:31Z", "updated_at": "2020-03-22T10:17:44Z", "closed_at": "2020-03-22T10:17:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello Folks,\r\nUsing version 1.0.0. But also seen with latest version\r\nPython version: 3.6.\r\nOS: Linux, Ubuntu 18\r\n\r\nSo I have been chasing this issue where a specific delete command on a key throws \"CancelledError\" exception. Though, the delete has actually happened on the redis.\r\nUnfortunately I could not reproduce this with a small example, but always happen when I run my application.\r\n\r\nAs part of debugging, I replaced the C future with the asyncio.Future python based implementation.\r\n\r\nThis is some trace I have taken while debugging:\r\n\r\n```\r\nARN: acquiring conn: 0x7f12c07326a0\r\n\r\nARN: execute command: 0x7f12c07326a0 <FutureXXX pending cb=[RedisConnection.execute.<locals>.wow() at /usr/lib/python3/dist-packages/aioredis/connection.py:326]>(0x7f12bd4be898) b'DEL'(\"D_OWN,D,/rw-project:project[rw-project:name='default']/nsr:ns-instance-opdata/nsr:nsr[nsr:ns-instance-config-ref='85773995-7dad-4407-8b9b-14dc980a7cc0']/nsr:config-agent-job\",)\r\n\r\nARN: delete fut D_OWN,D,/rw-project:project[rw-project:name='default']/nsr:ns-instance-opdata/nsr:nsr[nsr:ns-instance-config-ref='85773995-7dad-4407-8b9b-14dc980a7cc0']/nsr:config-agent-job : <FutureXXX pending cb=[RedisConnection.execute.<locals>.wow() at /usr/lib/python3/dist-packages/aioredis/connection.py:326]>\r\n\r\nARN: wait_convert: <FutureXXX pending cb=[RedisConnection.execute.<locals>.wow() at /usr/lib/python3/dist-packages/aioredis/connection.py:326]>\r\n\r\nARN: future cancelled(20667): 0x7f12bd4be898\r\n  File \"./usr/bin/lcm_config_worker.py\", line 278, in <module>\r\n    loop.run_forever()\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 438, in run_forever\r\n    self._run_once()\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 1451, in _run_once\r\n    handle._run()\r\n  File \"/usr/lib/python3.6/asyncio/events.py\", line 155, in _run\r\n    self._callback(*self._args)\r\n  File \"/usr/lib/python3.6/asyncio/futures.py\", line 198, in cancel\r\n    traceback.print_stack()\r\n\r\n```\r\n\r\nSince the future is cancelled before connection is released back to the pool, in the context exit, it will close the connection.\r\nTo debug this, I had put some print statements in events.py:155, but that does not get called for this particular cancel callback!!\r\n\r\n```\r\nARN: releasing conn: 0x7f12c07326a0\r\nARN: waiter pending: 0x7f12c07326a0 deque([(<FutureXXX cancelled>, None, None)])\r\n  File \"./usr/bin/lcm_config_worker.py\", line 278, in <module>\r\n    loop.run_forever()\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 438, in run_forever\r\n    self._run_once()\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 1451, in _run_once\r\n    handle._run()\r\n  File \"/usr/lib/python3.6/asyncio/events.py\", line 155, in _run\r\n    self._callback(*self._args)\r\n  File \"/localdisk/amuralid/container/ub/master/rift2/.build/ub18_debug/install/usr/rift/usr/lib64/python3.6/site-packages/rift/tasklets/rwdatastore/rwredis.py\", line 348, in del_data\r\n    await redis.delete(key)\r\n  File \"/usr/lib/python3/dist-packages/aioredis/commands/__init__.py\", line 152, in __exit__\r\n    self._release_callback(conn)\r\n  File \"/usr/lib/python3/dist-packages/aioredis/pool.py\", line 363, in release\r\n    traceback.print_stack()\r\n```\r\n\r\nI have yet not been able to find the source of the initial future cancellation. Any help regarding the cause of the issue or debugging further would be really helpful.\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/719", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/719/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/719/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/719/events", "html_url": "https://github.com/aio-libs/aioredis/issues/719", "id": 581772789, "node_id": "MDU6SXNzdWU1ODE3NzI3ODk=", "number": 719, "title": "Overload CPU 100%", "user": {"login": "ozzyst", "id": 31165552, "node_id": "MDQ6VXNlcjMxMTY1NTUy", "avatar_url": "https://avatars0.githubusercontent.com/u/31165552?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozzyst", "html_url": "https://github.com/ozzyst", "followers_url": "https://api.github.com/users/ozzyst/followers", "following_url": "https://api.github.com/users/ozzyst/following{/other_user}", "gists_url": "https://api.github.com/users/ozzyst/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozzyst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozzyst/subscriptions", "organizations_url": "https://api.github.com/users/ozzyst/orgs", "repos_url": "https://api.github.com/users/ozzyst/repos", "events_url": "https://api.github.com/users/ozzyst/events{/privacy}", "received_events_url": "https://api.github.com/users/ozzyst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-15T18:22:19Z", "updated_at": "2020-03-21T13:15:43Z", "closed_at": "2020-03-21T13:15:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\nI use telegram bot via aiogram and use all stack in this project based on async python.\r\nI have a problem with aioredis. If I run 10-15 query to redis per 10 sec I have overload CPU.\r\n\r\nMy code:\r\n```\r\nclass Redis:\r\n    pool = None\r\n\r\n    @classmethod\r\n    async def init_pool(cls, db: int = 1):\r\n        cls.pool = await aioredis.create_redis_pool('redis://localhost', db=db)\r\n\r\n    @classmethod\r\n    async def save_data(cls, key: Union[str, int], data: Any, expire_time: int = 86400):\r\n        if not data:\r\n            return\r\n        await cls.pool.set(key, data, expire=expire_time)\r\n\r\n    @classmethod\r\n    async def get_data(cls, key: str):\r\n        return await cls.pool.get(key)\r\n\r\n    @classmethod\r\n    async def close_pool(cls):\r\n        if cls.pool:\r\n            await cls.pool.close()\r\n```\r\nFor get or set data I use Redis.seve_data or Redis.get_data. Init this class execute at start program. \r\n\r\n\r\nAm I using your library incorrectly? This is bag? Can you help me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/717", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/717/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/717/events", "html_url": "https://github.com/aio-libs/aioredis/issues/717", "id": 580271369, "node_id": "MDU6SXNzdWU1ODAyNzEzNjk=", "number": 717, "title": "create_redis_pool().subscribe() returns 'list' if only one variable is assigned", "user": {"login": "TrulyBright", "id": 36768503, "node_id": "MDQ6VXNlcjM2NzY4NTAz", "avatar_url": "https://avatars2.githubusercontent.com/u/36768503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TrulyBright", "html_url": "https://github.com/TrulyBright", "followers_url": "https://api.github.com/users/TrulyBright/followers", "following_url": "https://api.github.com/users/TrulyBright/following{/other_user}", "gists_url": "https://api.github.com/users/TrulyBright/gists{/gist_id}", "starred_url": "https://api.github.com/users/TrulyBright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TrulyBright/subscriptions", "organizations_url": "https://api.github.com/users/TrulyBright/orgs", "repos_url": "https://api.github.com/users/TrulyBright/repos", "events_url": "https://api.github.com/users/TrulyBright/events{/privacy}", "received_events_url": "https://api.github.com/users/TrulyBright/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-12T23:04:50Z", "updated_at": "2020-03-23T12:54:29Z", "closed_at": "2020-03-23T12:54:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code below doesn't cause any error:\r\n```\r\npool = aioredis.create_redis_pool('redis://localhost')\r\n\r\nasync def main():\r\n  ch1, ch2 = await pool.subscribe('channel:1', 'channel:2')\r\n  assert isinstance(ch1, aioredis.Channel)\r\n  assert isinstance(ch2, aioredis.Channel)\r\n```\r\nBut if only one channel is assigned by subscribe(), AsserionError occurs.\r\n```\r\nasync def main():\r\n  ch1 = await pool.subscribe('channel:1')\r\n  print(type(ch1)) # <class 'list'>\r\n  assert isinstance(ch1, aioredis.Channel) # AssertionError\r\n```\r\nCurrently I need to make 'dummy' channels to use only one. Please fix the bug.\r\n\r\n__EDIT__: fixed some typo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/702", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/702/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/702/events", "html_url": "https://github.com/aio-libs/aioredis/issues/702", "id": 567027035, "node_id": "MDU6SXNzdWU1NjcwMjcwMzU=", "number": 702, "title": "connection pool publish spending a lot of time in traceback", "user": {"login": "nurettin", "id": 988845, "node_id": "MDQ6VXNlcjk4ODg0NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/988845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nurettin", "html_url": "https://github.com/nurettin", "followers_url": "https://api.github.com/users/nurettin/followers", "following_url": "https://api.github.com/users/nurettin/following{/other_user}", "gists_url": "https://api.github.com/users/nurettin/gists{/gist_id}", "starred_url": "https://api.github.com/users/nurettin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nurettin/subscriptions", "organizations_url": "https://api.github.com/users/nurettin/orgs", "repos_url": "https://api.github.com/users/nurettin/repos", "events_url": "https://api.github.com/users/nurettin/events{/privacy}", "received_events_url": "https://api.github.com/users/nurettin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T16:54:29Z", "updated_at": "2020-02-26T10:43:18Z", "closed_at": "2020-02-26T10:42:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried publishing 20k messages and it took about 6 seconds so I wondered why it was so slow, as redis self-test tells me it can do 200k set commands with 50 connections in 1.5 seconds which is pretty ok.\r\n \r\nI did a profiling with snakeviz and it turns out when I publish from the pool, the execute function spends a lot of time in traceback.py\r\n\r\nI am not very familiar with python internals, so I came here to ask why the profiler would show that we are spending so much time as if we are catching exceptions and getting stacktraces in a tight loop?\r\n\r\n![image](https://user-images.githubusercontent.com/988845/74758271-2b144500-5288-11ea-9674-e627bc600f8b.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/688", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/688/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/688/events", "html_url": "https://github.com/aio-libs/aioredis/issues/688", "id": 547870884, "node_id": "MDU6SXNzdWU1NDc4NzA4ODQ=", "number": 688, "title": "str: pop from an empty deque", "user": {"login": "silentmist", "id": 17287765, "node_id": "MDQ6VXNlcjE3Mjg3NzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/17287765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/silentmist", "html_url": "https://github.com/silentmist", "followers_url": "https://api.github.com/users/silentmist/followers", "following_url": "https://api.github.com/users/silentmist/following{/other_user}", "gists_url": "https://api.github.com/users/silentmist/gists{/gist_id}", "starred_url": "https://api.github.com/users/silentmist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/silentmist/subscriptions", "organizations_url": "https://api.github.com/users/silentmist/orgs", "repos_url": "https://api.github.com/users/silentmist/repos", "events_url": "https://api.github.com/users/silentmist/events{/privacy}", "received_events_url": "https://api.github.com/users/silentmist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-10T05:17:32Z", "updated_at": "2020-01-10T10:16:46Z", "closed_at": "2020-01-10T10:16:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "After its ideal for some time i am seeing str: pop from an empty deque message and it stops listening to pubsub messages. may be related to #623 ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/663", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/663/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/663/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/663/events", "html_url": "https://github.com/aio-libs/aioredis/issues/663", "id": 523193548, "node_id": "MDU6SXNzdWU1MjMxOTM1NDg=", "number": 663, "title": "Make hiredis an optional(extra) requirement", "user": {"login": "hallazzang", "id": 5072682, "node_id": "MDQ6VXNlcjUwNzI2ODI=", "avatar_url": "https://avatars2.githubusercontent.com/u/5072682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hallazzang", "html_url": "https://github.com/hallazzang", "followers_url": "https://api.github.com/users/hallazzang/followers", "following_url": "https://api.github.com/users/hallazzang/following{/other_user}", "gists_url": "https://api.github.com/users/hallazzang/gists{/gist_id}", "starred_url": "https://api.github.com/users/hallazzang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hallazzang/subscriptions", "organizations_url": "https://api.github.com/users/hallazzang/orgs", "repos_url": "https://api.github.com/users/hallazzang/repos", "events_url": "https://api.github.com/users/hallazzang/events{/privacy}", "received_events_url": "https://api.github.com/users/hallazzang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102945474, "node_id": "MDU6TGFiZWwxMDI5NDU0NzQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/task", "name": "task", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-11-15T01:01:57Z", "updated_at": "2019-11-20T13:19:13Z", "closed_at": "2019-11-20T13:19:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know that there were already some discussions about it in #197, #317 and #394.\r\n\r\nBut please take a look at pypa/pip#7339. Because aioredis has _forced_ hiredis dependency, I should rely on workaround methods.\r\nIf aioredis had hiredis as an optional(extra) requirement, then my requirements.txt would be like this:\r\n```\r\naioredis==1.3.0\r\n```\r\nand others who want better performance, would write their requirements.txt like this:\r\n```\r\naioredis[hiredis]==1.3.0\r\n```\r\n\r\nI think it's very clear solution, and is already adopted by another aio-libs family, [aiohttp](https://aiohttp.readthedocs.io/en/stable/#installing-speedups-altogether).\r\n_Make hiredis an optional requirement, and recommend to use `pip install aioredis[hiredis]` for users who want speedups_, how do you think about it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/659", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/659/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/659/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/659/events", "html_url": "https://github.com/aio-libs/aioredis/issues/659", "id": 519937480, "node_id": "MDU6SXNzdWU1MTk5Mzc0ODA=", "number": 659, "title": "Pubsub get() doesn't return all messages", "user": {"login": "f0ff886f", "id": 528239, "node_id": "MDQ6VXNlcjUyODIzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/528239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/f0ff886f", "html_url": "https://github.com/f0ff886f", "followers_url": "https://api.github.com/users/f0ff886f/followers", "following_url": "https://api.github.com/users/f0ff886f/following{/other_user}", "gists_url": "https://api.github.com/users/f0ff886f/gists{/gist_id}", "starred_url": "https://api.github.com/users/f0ff886f/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/f0ff886f/subscriptions", "organizations_url": "https://api.github.com/users/f0ff886f/orgs", "repos_url": "https://api.github.com/users/f0ff886f/repos", "events_url": "https://api.github.com/users/f0ff886f/events{/privacy}", "received_events_url": "https://api.github.com/users/f0ff886f/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1498180568, "node_id": "MDU6TGFiZWwxNDk4MTgwNTY4", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/need%20investigation", "name": "need investigation", "color": "dd80e5", "default": false, "description": "Need to look into described issue."}, {"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-08T10:33:13Z", "updated_at": "2019-11-13T12:41:47Z", "closed_at": "2019-11-13T12:41:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is hard to repro without the right environment, and I'm still not sure if this is asyncio code but seeing as it only repros with asyncio and not pyredis, I'm wondering what is going on.\r\n\r\nProblem: I have a simple subscription to one channel, and I am calling `ch.get()` wrapped in an `asyncio.wait_for(ch.get(), timeout=45)` to timeout after 45s. Now, what is happening is that if my machine which is running the redis server, and 6 copies of this script (all as separate invocations in the python interpreter), is under heavy CPU load (I haven't tried to artificially create the load with some CPU burn in tools yet), some (1-2) of the connected clients simply won't receive a message and the `ch.get()` will timeout.\r\n\r\nI have checked with `pubsub numsub channel_name` and ensured that I have 6 subscribers to the channel, I even open a few redis-cli subscribers, and I only ever notice that it is the aioredis subscribers which sometime never see the message (the coroutine will timeout).\r\n\r\nIs there anything in aioredis that could point to a potential problem under load? I have tried using `wait_message()` then `get()` (wrapping `wait_message()` in the `asyncio.wait_for()` in that case, but it looks to me from the code that `wait_message` is already essentially replicated in `get()` by the `self._queue.wait()` call.\r\n\r\nThanks in advance for any help!\r\nMatt", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/657", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/657/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/657/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/657/events", "html_url": "https://github.com/aio-libs/aioredis/issues/657", "id": 515730273, "node_id": "MDU6SXNzdWU1MTU3MzAyNzM=", "number": 657, "title": "Transaction data decoding is incorrect", "user": {"login": "dmvass", "id": 11655110, "node_id": "MDQ6VXNlcjExNjU1MTEw", "avatar_url": "https://avatars2.githubusercontent.com/u/11655110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmvass", "html_url": "https://github.com/dmvass", "followers_url": "https://api.github.com/users/dmvass/followers", "following_url": "https://api.github.com/users/dmvass/following{/other_user}", "gists_url": "https://api.github.com/users/dmvass/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmvass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmvass/subscriptions", "organizations_url": "https://api.github.com/users/dmvass/orgs", "repos_url": "https://api.github.com/users/dmvass/repos", "events_url": "https://api.github.com/users/dmvass/events{/privacy}", "received_events_url": "https://api.github.com/users/dmvass/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215489, "node_id": "MDU6TGFiZWwxMDIyMTU0ODk=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 1383945815, "node_id": "MDU6TGFiZWwxMzgzOTQ1ODE1", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/pr-merged", "name": "pr-merged", "color": "363396", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-31T20:39:54Z", "updated_at": "2019-11-28T09:08:07Z", "closed_at": "2019-11-28T09:07:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Transaction data always decoded two times if connection encoding was defined:\r\n\r\nTest case:\r\n```python\r\n@pytest.mark.run_loop\r\nasync def test_global_encoding(redis, create_redis, server, loop):\r\n    redis = await create_redis(\r\n        server.tcp_address,\r\n        loop=loop, encoding='utf-8')\r\n    res = await redis.set('key', 'value')\r\n    assert res is True\r\n    res = await redis.hmset(\r\n        'hash-key', 'foo', 'val1', 'bar', 'val2')\r\n    assert res is True\r\n\r\n    tr = redis.multi_exec()\r\n    fut1 = tr.get('key')\r\n    fut2 = tr.get('key', encoding='utf-8')\r\n    fut3 = tr.get('key', encoding=None)\r\n    fut4 = tr.hgetall('hash-key', encoding='utf-8')\r\n    await tr.execute()\r\n    res = await fut1\r\n    assert res == 'value'\r\n    res = await fut2\r\n    assert res == 'value'\r\n    res = await fut3\r\n    assert res == b'value'\r\n    res = await fut4\r\n    assert res == {'foo': 'val1', 'bar': 'val2'}\r\n```\r\n\r\nTracing for `util.decode`\r\n```python\r\ndecode(b'PONG', utf-8)\r\ndecode(b'OK', utf-8)\r\ndecode(b'OK', utf-8)\r\ndecode(b'OK', utf-8)\r\ndecode(b'QUEUED', utf-8)\r\ndecode(b'QUEUED', utf-8)\r\ndecode(b'QUEUED', utf-8)\r\ndecode([b'value', b'value', b'value', [b'foo', b'val1', b'bar', b'val2']], utf-8)\r\ndecode(b'value', utf-8)\r\ndecode(b'value', utf-8)\r\ndecode(b'value', utf-8)\r\ndecode([b'foo', b'val1', b'bar', b'val2'], utf-8)\r\ndecode(b'foo', utf-8)\r\ndecode(b'val1', utf-8)\r\ndecode(b'bar', utf-8)\r\ndecode(b'val2', utf-8)\r\ndecode(value, utf-8)\r\ndecode(value, utf-8)\r\ndecode(['foo', 'val1', 'bar', 'val2'], utf-8)\r\ndecode(foo, utf-8)\r\ndecode(val1, utf-8)\r\ndecode(bar, utf-8)\r\ndecode(val2, utf-8)\r\n```\r\n\r\nYou can see that `multi-exec` response `[b'value', b'value', b'value', [b'foo', b'val1', b'bar', b'val2']]` was decoded twice. In this case decoding in `RedisConnection._end_transaction` is not make sense because we have already decoded it in the `RedisConnection._process_data`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/652", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/652/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/652/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/652/events", "html_url": "https://github.com/aio-libs/aioredis/issues/652", "id": 511750601, "node_id": "MDU6SXNzdWU1MTE3NTA2MDE=", "number": 652, "title": "Installing aioredis fails after upgrading to Python 3.8", "user": {"login": "thec0sm0s", "id": 34530901, "node_id": "MDQ6VXNlcjM0NTMwOTAx", "avatar_url": "https://avatars0.githubusercontent.com/u/34530901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thec0sm0s", "html_url": "https://github.com/thec0sm0s", "followers_url": "https://api.github.com/users/thec0sm0s/followers", "following_url": "https://api.github.com/users/thec0sm0s/following{/other_user}", "gists_url": "https://api.github.com/users/thec0sm0s/gists{/gist_id}", "starred_url": "https://api.github.com/users/thec0sm0s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thec0sm0s/subscriptions", "organizations_url": "https://api.github.com/users/thec0sm0s/orgs", "repos_url": "https://api.github.com/users/thec0sm0s/repos", "events_url": "https://api.github.com/users/thec0sm0s/events{/privacy}", "received_events_url": "https://api.github.com/users/thec0sm0s/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-24T07:06:57Z", "updated_at": "2019-10-24T12:04:37Z", "closed_at": "2019-10-24T09:14:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "While installing aioredis after upgrading to Python 3.8, I am getting error saying `error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\BuildTools\\\\VC\\\\Tools\\\\MSVC\\\\14.23.28105\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit status 2`.\r\nI tried reinstalling Visual Studio Build tools again even after i had it installed (version 14.23) but it didn't worked. Following is the full traceback:\r\n```\r\nC:\\Users\\thecosmos>pip install aioredis\r\nCollecting aioredis\r\n  Using cached https://files.pythonhosted.org/packages/5a/7f/e8006bc25775124aabf2443255cfc0c5092b9bc0c27f2aa0fc559d19034e/aioredis-1.3.0-py3-none-any.whl\r\nCollecting hiredis\r\n  Using cached https://files.pythonhosted.org/packages/9e/e0/c160dbdff032ffe68e4b3c576cba3db22d8ceffc9513ae63368296d1bcc8/hiredis-1.0.0.tar.gz\r\nRequirement already satisfied: async-timeout in c:\\users\\thecosmos\\appdata\\local\\programs\\python\\python38\\lib\\site-packages (from aioredis) (3.0.1)\r\nInstalling collected packages: hiredis, aioredis\r\n    Running setup.py install for hiredis ... error\r\n    ERROR: Command errored out with exit status 1:\r\n     command: 'c:\\users\\thecosmos\\appdata\\local\\programs\\python\\python38\\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'C:\\\\Users\\\\thecosmos\\\\AppData\\\\Local\\\\Temp\\\\pip-install-fi68eshs\\\\hiredis\\\\setup.py'\"'\"'; __file__='\"'\"'C:\\\\Users\\\\thecosmos\\\\AppData\\\\Local\\\\Temp\\\\pip-install-fi68eshs\\\\hiredis\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\thecosmos\\AppData\\Local\\Temp\\pip-record-yd5kzktx\\install-record.txt' --single-version-externally-managed --compile\r\n         cwd: C:\\Users\\thecosmos\\AppData\\Local\\Temp\\pip-install-fi68eshs\\hiredis\\\r\n    Complete output (19 lines):\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build\\lib.win-amd64-3.8\r\n    creating build\\lib.win-amd64-3.8\\hiredis\r\n    copying hiredis\\version.py -> build\\lib.win-amd64-3.8\\hiredis\r\n    copying hiredis\\__init__.py -> build\\lib.win-amd64-3.8\\hiredis\r\n    running build_ext\r\n    building 'hiredis.hiredis' extension\r\n    creating build\\temp.win-amd64-3.8\r\n    creating build\\temp.win-amd64-3.8\\Release\r\n    creating build\\temp.win-amd64-3.8\\Release\\src\r\n    creating build\\temp.win-amd64-3.8\\Release\\vendor\r\n    creating build\\temp.win-amd64-3.8\\Release\\vendor\\hiredis\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.23.28105\\bin\\HostX86\\x64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -Ivendor -Ic:\\users\\thecosmos\\appdata\\local\\programs\\python\\python38\\include -Ic:\\users\\thecosmos\\appdata\\local\\programs\\python\\python38\\include \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.23.28105\\include\" /Tcsrc\\hiredis.c /Fobuild\\temp.win-amd64-3.8\\Release\\src\\hiredis.obj\r\n    hiredis.c\r\n    c:\\users\\thecosmos\\appdata\\local\\programs\\python\\python38\\include\\pyconfig.h(59): fatal error C1083: Cannot open include file: 'io.h': No such file or directory\r\n    error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\BuildTools\\\\VC\\\\Tools\\\\MSVC\\\\14.23.28105\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit status 2\r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: 'c:\\users\\thecosmos\\appdata\\local\\programs\\python\\python38\\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'C:\\\\Users\\\\thecosmos\\\\AppData\\\\Local\\\\Temp\\\\pip-install-fi68eshs\\\\hiredis\\\\setup.py'\"'\"'; __file__='\"'\"'C:\\\\Users\\\\thecosmos\\\\AppData\\\\Local\\\\Temp\\\\pip-install-fi68eshs\\\\hiredis\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\thecosmos\\AppData\\Local\\Temp\\pip-record-yd5kzktx\\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/648", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/648/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/648/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/648/events", "html_url": "https://github.com/aio-libs/aioredis/issues/648", "id": 506991283, "node_id": "MDU6SXNzdWU1MDY5OTEyODM=", "number": 648, "title": "\"@coroutine\" decorator is deprecated since Python 3.8", "user": {"login": "youngminz", "id": 5145369, "node_id": "MDQ6VXNlcjUxNDUzNjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/5145369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/youngminz", "html_url": "https://github.com/youngminz", "followers_url": "https://api.github.com/users/youngminz/followers", "following_url": "https://api.github.com/users/youngminz/following{/other_user}", "gists_url": "https://api.github.com/users/youngminz/gists{/gist_id}", "starred_url": "https://api.github.com/users/youngminz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/youngminz/subscriptions", "organizations_url": "https://api.github.com/users/youngminz/orgs", "repos_url": "https://api.github.com/users/youngminz/repos", "events_url": "https://api.github.com/users/youngminz/events{/privacy}", "received_events_url": "https://api.github.com/users/youngminz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-10-15T04:05:42Z", "updated_at": "2019-12-02T09:56:35Z", "closed_at": "2019-12-02T09:56:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I test my program using `aioredis==1.3.0` with pytest in Python 3.8.0, I get the following warning:\r\n\r\n```\r\n=============================== warnings summary ===============================\r\n/.../lib/python3.8/site-packages/aioredis/abc.py:35\r\n  /.../lib/python3.8/site-packages/aioredis/abc.py:35: DeprecationWarning: \"@coroutine\" decorator is deprecated since Python 3.8, use \"async def\" instead\r\n    def wait_closed(self):\r\n\r\n/.../lib/python3.8/site-packages/aioredis/abc.py:96\r\n  /.../lib/python3.8/site-packages/aioredis/abc.py:96: DeprecationWarning: \"@coroutine\" decorator is deprecated since Python 3.8, use \"async def\" instead\r\n    def acquire(self):  # TODO: arguments\r\n\r\n/.../lib/python3.8/site-packages/aioredis/abc.py:133\r\n  /.../lib/python3.8/site-packages/aioredis/abc.py:133: DeprecationWarning: \"@coroutine\" decorator is deprecated since Python 3.8, use \"async def\" instead\r\n    def get(self):\r\n\r\n-- Docs: https://docs.pytest.org/en/latest/warnings.html\r\n```\r\n\r\nSince Python 3.5+ supported by the aioredis supports the `async def` keyword, it seems to be fine to change the `@asyncio.coroutine` decorator to `async def`. \r\n\r\n[Python 3.5 Documentation](https://docs.python.org/3.5/library/asyncio-task.html#coroutines):\r\n\r\n> The async def type of coroutine was added in Python 3.5, and is recommended if there is no need to support older Python versions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/639", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/639/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/639/events", "html_url": "https://github.com/aio-libs/aioredis/issues/639", "id": 496540159, "node_id": "MDU6SXNzdWU0OTY1NDAxNTk=", "number": 639, "title": "\"TypeError: cannot unpack non-iterable NoneType object\" when attempting to XCLAIM a stream message that no longer exists", "user": {"login": "zackelan", "id": 10138830, "node_id": "MDQ6VXNlcjEwMTM4ODMw", "avatar_url": "https://avatars0.githubusercontent.com/u/10138830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackelan", "html_url": "https://github.com/zackelan", "followers_url": "https://api.github.com/users/zackelan/followers", "following_url": "https://api.github.com/users/zackelan/following{/other_user}", "gists_url": "https://api.github.com/users/zackelan/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackelan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackelan/subscriptions", "organizations_url": "https://api.github.com/users/zackelan/orgs", "repos_url": "https://api.github.com/users/zackelan/repos", "events_url": "https://api.github.com/users/zackelan/events{/privacy}", "received_events_url": "https://api.github.com/users/zackelan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-20T20:46:43Z", "updated_at": "2019-10-01T13:54:46Z", "closed_at": "2019-10-01T13:54:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is a tricky edge case, so I'll give a repro example using redis-cli, then show how to provoke it in aioredis.\r\n\r\nCreate a stream and write some messages to it:\r\n\r\n```\r\n127.0.0.1:6379> xadd mystream '*' x 1\r\n\"1569004125994-0\"\r\n127.0.0.1:6379> xadd mystream '*' x 2\r\n\"1569004127018-0\"\r\n127.0.0.1:6379> xadd mystream '*' x 3\r\n\"1569004127826-0\"\r\n127.0.0.1:6379>\r\n```\r\n\r\nCreate a consumer group, and read from the stream using that group:\r\n\r\n```\r\n127.0.0.1:6379> xgroup create mystream mygroup 0-0\r\nOK\r\n127.0.0.1:6379> xreadgroup group mygroup consumer1 count 10 streams mystream >\r\n1) 1) \"mystream\"\r\n   2) 1) 1) \"1569004125994-0\"\r\n         2) 1) \"x\"\r\n            2) \"1\"\r\n      2) 1) \"1569004127018-0\"\r\n         2) 1) \"x\"\r\n            2) \"2\"\r\n      3) 1) \"1569004127826-0\"\r\n         2) 1) \"x\"\r\n            2) \"3\"\r\n```\r\n\r\nAs expected, that consumer has 3 pending messages:\r\n\r\n```\r\n127.0.0.1:6379> xinfo consumers mystream mygroup\r\n1) 1) \"name\"\r\n   2) \"consumer1\"\r\n   3) \"pending\"\r\n   4) (integer) 3\r\n   5) \"idle\"\r\n   6) (integer) 21656\r\n```\r\n\r\nNow, write 1000 messages to the stream, using a MAXLEN of 100. This is the crucial part of the bug - we're writing enough messages that those 3 entries that are currently pending will fall off the end of the stream.\r\n\r\n```\r\n$ for i in $(seq 1000); do redis-cli xadd mystream MAXLEN '~' 100 '*' x $i; done\r\n```\r\n\r\nAs expected, the stream has about 100 items, and those 3 messages are still pending:\r\n\r\n```\r\n127.0.0.1:6379> xlen mystream\r\n(integer) 195\r\n127.0.0.1:6379> xpending mystream mygroup - + 10 consumer1\r\n1) 1) \"1569004125994-0\"\r\n   2) \"consumer1\"\r\n   3) (integer) 253409\r\n   4) (integer) 1\r\n2) 1) \"1569004127018-0\"\r\n   2) \"consumer1\"\r\n   3) (integer) 253409\r\n   4) (integer) 1\r\n3) 1) \"1569004127826-0\"\r\n   2) \"consumer1\"\r\n   3) (integer) 253409\r\n   4) (integer) 1\r\n```\r\n\r\nIf a new consumer comes along and tries to XCLAIM them, Redis returns nil because those message IDs are no longer in the stream:\r\n\r\n```\r\n127.0.0.1:6379> xclaim mystream mygroup consumer2 1000 \"1569004125994-0\" \"1569004127018-0\" \"1569004127826-0\"\r\n1) (nil)\r\n2) (nil)\r\n3) (nil)\r\n```\r\n\r\nHere's that same sequence of events using aioredis:\r\n\r\n```\r\nimport asyncio\r\nimport secrets\r\n\r\nimport aioredis\r\n\r\nSTREAM = secrets.token_hex(8)\r\nGROUP = 'mygroup'\r\nCONSUMER = 'myconsumer'\r\n\r\nasync def main():\r\n    conn = await aioredis.create_redis('redis://localhost')\r\n\r\n    for i in range(3):\r\n        await conn.xadd(STREAM, {'x': str(i)})\r\n\r\n    await conn.xgroup_create(STREAM, GROUP, '0-0')\r\n\r\n    messages = await conn.xread_group(GROUP, CONSUMER, [STREAM], count=10, latest_ids=['>'])\r\n    print(f'messages: {messages}')\r\n\r\n    for i in range(1000):\r\n        await conn.xadd(STREAM, {'x': str(i)}, max_len=100)\r\n\r\n    pending = await conn.xpending(STREAM, GROUP, '-', '+', 10, CONSUMER)\r\n    print(f'pending: {pending}')\r\n\r\n    message_ids = [message_id for message_id, consumer, idle_time, delivery_count in pending]\r\n    print(f'claiming: {message_ids}')\r\n    await conn.xclaim(STREAM, GROUP, 'new-consumer', 1, *message_ids)\r\n\r\n\r\nif __name__ == '__main__':\r\n    asyncio.run(main())\r\n```\r\n\r\nResults:\r\n\r\n```\r\nmessages: [(b'1fb48fc917ab9bb0', b'1569011272493-0', OrderedDict([(b'x', b'0')])), (b'1fb48fc917ab9bb0', b'1569011272494-0', OrderedDict([(b'x', b'1')])), (b'1fb48fc917ab9bb0', b'1569011272494-1', OrderedDict([(b'x', b'2')]))]\r\npending: [[b'1569011272493-0', b'myconsumer', 154, 1], [b'1569011272494-0', b'myconsumer', 154, 1], [b'1569011272494-1', b'myconsumer', 154, 1]]\r\nclaiming: [b'1569011272493-0', b'1569011272494-0', b'1569011272494-1']\r\nTraceback (most recent call last):\r\n  File \"demo.py\", line 33, in <module>\r\n    asyncio.run(main())\r\n  File \"/nix/store/96p42644i76jqgdkxjgyl3f0c8n8k16j-python3-3.7.4/lib/python3.7/asyncio/runners.py\", line 43, in run\r\n    return loop.run_until_complete(main)\r\n  File \"/nix/store/96p42644i76jqgdkxjgyl3f0c8n8k16j-python3-3.7.4/lib/python3.7/asyncio/base_events.py\", line 579, in run_until_complete\r\n    return future.result()\r\n  File \"demo.py\", line 29, in main\r\n    await conn.xclaim(STREAM, GROUP, 'new-consumer', 1, *message_ids)\r\n  File \"/home/zack/.venv/lib/python3.7/site-packages/aioredis/util.py\", line 58, in wait_convert\r\n    return type_(result, **kwargs)\r\n  File \"/home/zack/.venv/lib/python3.7/site-packages/aioredis/commands/streams.py\", line 36, in parse_messages\r\n    return [(mid, fields_to_dict(values)) for mid, values in messages]\r\n  File \"/home/zack/.venv/lib/python3.7/site-packages/aioredis/commands/streams.py\", line 36, in <listcomp>\r\n    return [(mid, fields_to_dict(values)) for mid, values in messages]\r\nTypeError: cannot unpack non-iterable NoneType object\r\n```\r\n\r\nExpected results:\r\n\r\nI think this should return a (message_id, None) tuple for each of the messages this occurs with, and then I can special-case that None response to indicate that message no longer exists, and proceed with the rest of the process of cleaning up after that consumer.\r\n\r\nEnvironment (though I don't think it matters for this) is Python 3.7.4, aioredis 1.2.0, hiredis 1.0.0, and Redis 5.0.4.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/630", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/630/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/630/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/630/events", "html_url": "https://github.com/aio-libs/aioredis/issues/630", "id": 485913656, "node_id": "MDU6SXNzdWU0ODU5MTM2NTY=", "number": 630, "title": "can't set expiry for keys ", "user": {"login": "ajay1mg", "id": 36618391, "node_id": "MDQ6VXNlcjM2NjE4Mzkx", "avatar_url": "https://avatars3.githubusercontent.com/u/36618391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajay1mg", "html_url": "https://github.com/ajay1mg", "followers_url": "https://api.github.com/users/ajay1mg/followers", "following_url": "https://api.github.com/users/ajay1mg/following{/other_user}", "gists_url": "https://api.github.com/users/ajay1mg/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajay1mg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajay1mg/subscriptions", "organizations_url": "https://api.github.com/users/ajay1mg/orgs", "repos_url": "https://api.github.com/users/ajay1mg/repos", "events_url": "https://api.github.com/users/ajay1mg/events{/privacy}", "received_events_url": "https://api.github.com/users/ajay1mg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1498180568, "node_id": "MDU6TGFiZWwxNDk4MTgwNTY4", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/need%20investigation", "name": "need investigation", "color": "dd80e5", "default": false, "description": "Need to look into described issue."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-27T16:32:24Z", "updated_at": "2019-10-01T14:18:10Z", "closed_at": "2019-10-01T14:18:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am on aioredis 1.2.0 and trying to set expiry for keys using the below syntax:\r\n\r\n```\r\nasync def get_pool(self):\r\n    if not self._pool:\r\n        with (await self._lock):\r\n            if not self._pool:\r\n                self._pool = await aioredis.create_pool((self._host, self._port), minsize=self._minsize,\r\n                                                        maxsize=self._maxsize)\r\n    return await self._pool\r\n\r\nasync def set_key(self, key, value, namespace=None, expire=0):\r\n    with (await self.get_pool()) as redis:\r\n        if namespace is not None:\r\n            key = self._get_key(namespace, key)\r\n        await redis.execute('set', key, value, expiry=30)\r\n```\r\n\r\nThis is the error which I get when I use expiry in execute for set:\r\n\r\nTypeError: execute() got an unexpected keyword argument 'expiry'\r\n\r\nhowever, I can do it by using `expireat` method like:\r\n\r\n```\r\ntimestamp = int((datetime.datetime.now() + datetime.timedelta(0, expire)).timestamp())       \r\nawait asyncio.ensure_future(redis.execute('expireat', key, timestamp))\r\n```\r\n\r\nIs there a way to set expiry in a single call with `await redis.execute('set', key, value)` or is this an issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/626", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/626/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/626/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/626/events", "html_url": "https://github.com/aio-libs/aioredis/issues/626", "id": 480644748, "node_id": "MDU6SXNzdWU0ODA2NDQ3NDg=", "number": 626, "title": "New Release?", "user": {"login": "f0ff886f", "id": 528239, "node_id": "MDQ6VXNlcjUyODIzOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/528239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/f0ff886f", "html_url": "https://github.com/f0ff886f", "followers_url": "https://api.github.com/users/f0ff886f/followers", "following_url": "https://api.github.com/users/f0ff886f/following{/other_user}", "gists_url": "https://api.github.com/users/f0ff886f/gists{/gist_id}", "starred_url": "https://api.github.com/users/f0ff886f/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/f0ff886f/subscriptions", "organizations_url": "https://api.github.com/users/f0ff886f/orgs", "repos_url": "https://api.github.com/users/f0ff886f/repos", "events_url": "https://api.github.com/users/f0ff886f/events{/privacy}", "received_events_url": "https://api.github.com/users/f0ff886f/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/12", "html_url": "https://github.com/aio-libs/aioredis/milestone/12", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/12/labels", "id": 4686977, "node_id": "MDk6TWlsZXN0b25lNDY4Njk3Nw==", "number": 12, "title": "1.3", "description": null, "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 1, "closed_issues": 8, "state": "open", "created_at": "2019-09-24T09:53:29Z", "updated_at": "2019-09-25T07:31:56Z", "due_on": null, "closed_at": null}, "comments": 5, "created_at": "2019-08-14T12:13:53Z", "updated_at": "2019-09-25T16:21:51Z", "closed_at": "2019-09-25T07:31:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any chance we can get a new release? There have been so many new fixes, its a shame to keep it away from folks on PyPi :)\r\n\r\nThank you for the great library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/621", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/621/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/621/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/621/events", "html_url": "https://github.com/aio-libs/aioredis/issues/621", "id": 467342251, "node_id": "MDU6SXNzdWU0NjczNDIyNTE=", "number": 621, "title": "Redis interaction hangs when processing Stream message", "user": {"login": "GoldsteinE", "id": 12019211, "node_id": "MDQ6VXNlcjEyMDE5MjEx", "avatar_url": "https://avatars2.githubusercontent.com/u/12019211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoldsteinE", "html_url": "https://github.com/GoldsteinE", "followers_url": "https://api.github.com/users/GoldsteinE/followers", "following_url": "https://api.github.com/users/GoldsteinE/following{/other_user}", "gists_url": "https://api.github.com/users/GoldsteinE/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoldsteinE/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoldsteinE/subscriptions", "organizations_url": "https://api.github.com/users/GoldsteinE/orgs", "repos_url": "https://api.github.com/users/GoldsteinE/repos", "events_url": "https://api.github.com/users/GoldsteinE/events{/privacy}", "received_events_url": "https://api.github.com/users/GoldsteinE/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-12T10:30:47Z", "updated_at": "2019-07-12T11:02:53Z", "closed_at": "2019-07-12T10:35:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "MWE:\r\n```python\r\nimport asyncio\r\nimport aioredis\r\n\r\n\r\nasync def process(redis, message):\r\n    print('Processing', message)\r\n    await redis.ping()\r\n    print('Ping done')\r\n    await redis.xack('test-stream', 'test-group', message[1])\r\n    print('Xack done')\r\n\r\n\r\nasync def wait_for_messages(redis):\r\n    while True:\r\n        print('Waiting for new messages')\r\n        messages = await redis.xread_group('test-group', 'test-consumer', ['test-stream'], latest_ids=['>'])\r\n        print('Got some!')\r\n        for message in messages:\r\n            print('Creating task for', message)\r\n            asyncio.create_task(process(redis, message))\r\n\r\n\r\nasync def prepare_redis(redis):\r\n    await redis.delete('test-stream')\r\n    await redis.xadd('test-stream', {'test': 'message'})\r\n    await redis.xgroup_create('test-stream', 'test-group', latest_id='0-0')\r\n\r\n\r\nasync def main():\r\n    redis = await aioredis.create_redis_pool('redis://localhost')\r\n    await prepare_redis(redis)\r\n    await wait_for_messages(redis)\r\n\r\n\r\nif __name__ == '__main__':\r\n    asyncio.run(main())\r\n```\r\n\r\nOutput:\r\n```\r\nWaiting for new messages\r\nGot some!\r\nCreating task for (b'test-stream', b'1562927347121-0', OrderedDict([(b'test', b'message')]))\r\nWaiting for new messages\r\nProcessing (b'test-stream', b'1562927347121-0', OrderedDict([(b'test', b'message')]))\r\n<hangs>\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/617", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/617/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/617/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/617/events", "html_url": "https://github.com/aio-libs/aioredis/issues/617", "id": 464366501, "node_id": "MDU6SXNzdWU0NjQzNjY1MDE=", "number": 617, "title": "XREADGROUP on message that was XDEL raises exception", "user": {"login": "szelenka", "id": 6808929, "node_id": "MDQ6VXNlcjY4MDg5Mjk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6808929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/szelenka", "html_url": "https://github.com/szelenka", "followers_url": "https://api.github.com/users/szelenka/followers", "following_url": "https://api.github.com/users/szelenka/following{/other_user}", "gists_url": "https://api.github.com/users/szelenka/gists{/gist_id}", "starred_url": "https://api.github.com/users/szelenka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/szelenka/subscriptions", "organizations_url": "https://api.github.com/users/szelenka/orgs", "repos_url": "https://api.github.com/users/szelenka/repos", "events_url": "https://api.github.com/users/szelenka/events{/privacy}", "received_events_url": "https://api.github.com/users/szelenka/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215489, "node_id": "MDU6TGFiZWwxMDIyMTU0ODk=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-04T18:30:35Z", "updated_at": "2019-10-01T13:55:11Z", "closed_at": "2019-10-01T13:55:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "When you issue an XDEL on a message, that message remains in the PEL on Redis as a \"(nil)\" value. This shows up in XREADGROUP as:\r\n```\r\nXREADGROUP GROUP group_name consumer_name STREAMS stream_name 0\r\n1) 1) \"stream_name\"\r\n   2) 1) 1) \"1561724821836-0\"\r\n         2) (nil)\r\n      2) 1) \"1562178600447-0\"\r\n         2)  1) \"stream\"\r\n             2) \"stream_name\"\r\n             3) \"topic\"\r\n             ...\r\n```\r\n\r\nHowever, this will cause an exception with the aioredis module:\r\n```\r\n../../../../../anaconda3/envs/python37/lib/python3.7/site-packages/aioredis/util.py:58: in wait_convert\r\n    return type_(result, **kwargs)\r\n../../../../../anaconda3/envs/python37/lib/python3.7/site-packages/aioredis/commands/streams.py:69: in parse_messages_by_stream\r\n    for message_id, fields in parse_messages(messages):\r\n../../../../../anaconda3/envs/python37/lib/python3.7/site-packages/aioredis/commands/streams.py:36: in parse_messages\r\n    return [(mid, fields_to_dict(values)) for mid, values in messages]\r\n../../../../../anaconda3/envs/python37/lib/python3.7/site-packages/aioredis/commands/streams.py:36: in <listcomp>\r\n    return [(mid, fields_to_dict(values)) for mid, values in messages]\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nfields = None, type_ = <class 'collections.OrderedDict'>\r\n\r\n    def fields_to_dict(fields, type_=OrderedDict):\r\n        \"\"\"Convert a flat list of key/values into an OrderedDict\"\"\"\r\n>       fields_iterator = iter(fields)\r\nE       TypeError: 'NoneType' object is not iterable\r\n\r\n../../../../../anaconda3/envs/python37/lib/python3.7/site-packages/aioredis/commands/streams.py:8: TypeError\r\n```\r\n\r\nThe problem is with the **fileds_to_dict** method, which assumes there will always be a non-None value present. This also breaks any attempt by the client to move past the message which was XDEL.\r\n\r\nA simple workaround would be to wrap it in a try/except for TypeErrors when the **field** being passed in is a (nil) value from Redis. Which typically only happens when it was XDEL and not XACK for the given stream.\r\nhttps://github.com/aio-libs/aioredis/blob/master/aioredis/commands/streams.py#L8\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/599", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/599/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/599/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/599/events", "html_url": "https://github.com/aio-libs/aioredis/issues/599", "id": 448550526, "node_id": "MDU6SXNzdWU0NDg1NTA1MjY=", "number": 599, "title": "don't support custom command", "user": {"login": "dreambe", "id": 3831001, "node_id": "MDQ6VXNlcjM4MzEwMDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3831001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dreambe", "html_url": "https://github.com/dreambe", "followers_url": "https://api.github.com/users/dreambe/followers", "following_url": "https://api.github.com/users/dreambe/following{/other_user}", "gists_url": "https://api.github.com/users/dreambe/gists{/gist_id}", "starred_url": "https://api.github.com/users/dreambe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dreambe/subscriptions", "organizations_url": "https://api.github.com/users/dreambe/orgs", "repos_url": "https://api.github.com/users/dreambe/repos", "events_url": "https://api.github.com/users/dreambe/events{/privacy}", "received_events_url": "https://api.github.com/users/dreambe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-26T10:08:43Z", "updated_at": "2019-05-27T09:34:20Z", "closed_at": "2019-05-27T09:34:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "aioredis      version   1.2.0\r\nredis server   4.0\r\npython 3.7.1\r\n\r\nmy code is:\r\n```\r\nimport asyncio\r\nimport aioredis\r\n\r\nasync def run():\r\n    pool = await aioredis.create_pool(\r\n        'redis://xxx.xx.xx.xx, minsize=5, maxsize=10)\r\n    print(await pool.execute('my_command',  'xxxxxx'))\r\n    pool.close()\r\n    await pool.wait_closed()\r\nif __name__ == '__main__':\r\n    asyncio.get_event_loop().run_until_complete(run())\r\n```\r\n\r\nbut when I change into this, it's work well:\r\n```\r\nimport asyncio\r\nimport aioredis\r\n\r\nasync def connect_uri():\r\n    conn = await aioredis.create_connection('redis://xxx.xx.xx.xx')\r\n    print(await conn.execute('my_command',  'xxxxx'))\r\n```\r\n\r\n'my_command' is a custom command by my self via redis-protocol,\r\nso, is aioredis support this? THX\r\n\r\nworng message as below:\r\n\r\nTraceback (most recent call last):\r\n  File \"ralogs_aio_test.py\", line 11, in <module>\r\n    asyncio.get_event_loop().run_until_complete(run())\r\n  File \"/usr/local/lib/python3.7/asyncio/base_events.py\", line 584, in run_until_complete\r\n    return future.result()\r\n  File \"ralogs_aio_test.py\", line 6, in run\r\n    'redis://xxx.xx.xx.xx', minsize=5, maxsize=10)\r\n  File \"/usr/local/lib/python3.7/site-packages/aioredis/pool.py\", line 56, in create_pool\r\n    await pool._fill_free(override_min=False)\r\n  File \"/usr/local/lib/python3.7/site-packages/aioredis/pool.py\", line 391, in _fill_free\r\n    await conn.execute('ping')\r\naioredis.errors.ReplyError: WRONGTYPE Array of at least 2 Bulk String is required", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/598", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/598/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/598/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/598/events", "html_url": "https://github.com/aio-libs/aioredis/issues/598", "id": 447202567, "node_id": "MDU6SXNzdWU0NDcyMDI1Njc=", "number": 598, "title": "Create connection timeout doesn't work if redis is not running.", "user": {"login": "odv052", "id": 7250328, "node_id": "MDQ6VXNlcjcyNTAzMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7250328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odv052", "html_url": "https://github.com/odv052", "followers_url": "https://api.github.com/users/odv052/followers", "following_url": "https://api.github.com/users/odv052/following{/other_user}", "gists_url": "https://api.github.com/users/odv052/gists{/gist_id}", "starred_url": "https://api.github.com/users/odv052/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odv052/subscriptions", "organizations_url": "https://api.github.com/users/odv052/orgs", "repos_url": "https://api.github.com/users/odv052/repos", "events_url": "https://api.github.com/users/odv052/events{/privacy}", "received_events_url": "https://api.github.com/users/odv052/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-22T15:26:26Z", "updated_at": "2019-10-01T14:11:58Z", "closed_at": "2019-10-01T14:11:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nthe following traceback raised instantly despite timeout argument. Is it really expected behavior? \r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/dmitry/Library/Preferences/PyCharm2018.3/scratches/scratch_4.py\", line 43, in <module>\r\n    asyncio.get_event_loop().run_until_complete(main())\r\n  File \"/Users/dmitry/.pyenv/versions/3.7.2/lib/python3.7/asyncio/base_events.py\", line 584, in run_until_complete\r\n    return future.result()\r\n  File \"/Users/dmitry/Library/Preferences/PyCharm2018.3/scratches/scratch_4.py\", line 12, in main\r\n    sub = await aioredis.create_redis(('localhost', '6379'), timeout=10)\r\n  File \"/Users/dmitry/hopto/gg-server/env/lib/python3.7/site-packages/aioredis/commands/__init__.py\", line 178, in create_redis\r\n    loop=loop)\r\n  File \"/Users/dmitry/hopto/gg-server/env/lib/python3.7/site-packages/aioredis/connection.py\", line 108, in create_connection\r\n    timeout, loop=loop)\r\n  File \"/Users/dmitry/.pyenv/versions/3.7.2/lib/python3.7/asyncio/tasks.py\", line 416, in wait_for\r\n    return fut.result()\r\n  File \"/Users/dmitry/hopto/gg-server/env/lib/python3.7/site-packages/aioredis/stream.py\", line 19, in open_connection\r\n    lambda: protocol, host, port, **kwds)\r\n  File \"/Users/dmitry/.pyenv/versions/3.7.2/lib/python3.7/asyncio/base_events.py\", line 968, in create_connection\r\n    ', '.join(str(exc) for exc in exceptions)))\r\nOSError: Multiple exceptions: [Errno 61] Connect call failed ('::1', 6379, 0, 0), [Errno 61] Connect call failed ('127.0.0.1', 6379)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/590", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/590/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/590/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/590/events", "html_url": "https://github.com/aio-libs/aioredis/issues/590", "id": 436991722, "node_id": "MDU6SXNzdWU0MzY5OTE3MjI=", "number": 590, "title": "PubSub noticable delay", "user": {"login": "schlitzered", "id": 2797971, "node_id": "MDQ6VXNlcjI3OTc5NzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2797971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schlitzered", "html_url": "https://github.com/schlitzered", "followers_url": "https://api.github.com/users/schlitzered/followers", "following_url": "https://api.github.com/users/schlitzered/following{/other_user}", "gists_url": "https://api.github.com/users/schlitzered/gists{/gist_id}", "starred_url": "https://api.github.com/users/schlitzered/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schlitzered/subscriptions", "organizations_url": "https://api.github.com/users/schlitzered/orgs", "repos_url": "https://api.github.com/users/schlitzered/repos", "events_url": "https://api.github.com/users/schlitzered/events{/privacy}", "received_events_url": "https://api.github.com/users/schlitzered/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-25T03:17:11Z", "updated_at": "2019-04-30T02:40:11Z", "closed_at": "2019-04-30T02:40:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\n\r\ni noticed that there is a pretty high delay for pubsub stuff. it takes something between 500ms and 1000ms for a published message to be parsed and output by aioredis.\r\n\r\nthis is not happening when i publish a message using redis-cli, and subscribe messages using redis-cli, there the message arrives within a few ms.\r\n\r\nenvironment:\r\nUbuntu linux 18.04,\r\nredis 4.0.9\r\n\r\nredis cli, redis-server and aioredis running on the same host.\r\n\r\nhow to reproduce:\r\n\r\nredis server is running on localhost.\r\n\r\naioredis_dummy.py\r\n\r\n```\r\nimport asyncio\r\nimport aioredis\r\n\r\n\r\ndef main():\r\n    loop = asyncio.get_event_loop()\r\n\r\n    async def reader(ch):\r\n        while await ch.wait_message():\r\n            msg = await ch.get_json()\r\n            print(\"Got Message:\", msg)\r\n\r\n    async def go():\r\n        sub = await aioredis.create_redis(\r\n            ('localhost', 6379))\r\n        res = await sub.subscribe('chan:1')\r\n        ch1 = res[0]\r\n\r\n        tsk = asyncio.ensure_future(reader(ch1))\r\n\r\n        await tsk\r\n\r\n    loop.run_until_complete(go())\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```\r\n\r\n\r\nconsole 1: run the script:\r\n```\r\npython3 aioredis_dummy.py\r\n```\r\nconsole 2: run redis-cli subscribe\r\n```\r\n redis-cli subscribe 'chan:1'\r\n```\r\n\r\nconsole 3: publish a message:\r\n```\r\nredis-cli PUBLISH chan:1 '{\"blarg\": \"blub\"}'\r\n```\r\n\r\nhave all 3 consoles side by side, so you can see the output. you will notice that the redis-cli command receives the message more or less instantly, where there is a noticeable delay using the aioredis test script.\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/589", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/589/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/589/events", "html_url": "https://github.com/aio-libs/aioredis/issues/589", "id": 436983446, "node_id": "MDU6SXNzdWU0MzY5ODM0NDY=", "number": 589, "title": "Feature: connect from url.", "user": {"login": "schlitzered", "id": 2797971, "node_id": "MDQ6VXNlcjI3OTc5NzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2797971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schlitzered", "html_url": "https://github.com/schlitzered", "followers_url": "https://api.github.com/users/schlitzered/followers", "following_url": "https://api.github.com/users/schlitzered/following{/other_user}", "gists_url": "https://api.github.com/users/schlitzered/gists{/gist_id}", "starred_url": "https://api.github.com/users/schlitzered/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schlitzered/subscriptions", "organizations_url": "https://api.github.com/users/schlitzered/orgs", "repos_url": "https://api.github.com/users/schlitzered/repos", "events_url": "https://api.github.com/users/schlitzered/events{/privacy}", "received_events_url": "https://api.github.com/users/schlitzered/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-25T02:34:12Z", "updated_at": "2019-04-30T02:40:14Z", "closed_at": "2019-04-30T02:40:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\n\r\nit would be nice if it would be possible to implement a function that will parse a \"redis url\" and return a connection / pool object that matches the url, i have something like this implemented for in https://github.com/schlitzered/pyredis.\r\n\r\nhere is the documentation on how this works:\r\n\r\nhttps://pyredis.readthedocs.io/en/latest/example.html#getting-pool-by-url\r\n\r\nand here the related source code:\r\n\r\nhttps://github.com/schlitzered/pyredis/blob/master/pyredis/__init__.py#L36\r\n\r\nit is more or less a  convenience thing for configuration files.\r\n\r\nsince redis has many different ways in how it could be setup, this would allow to have a unified config file option called redis_url, where you simply pass an url.\r\n\r\nif anyone else agrees that this is should be in here, i could also implement this for aioredis & create a pull request.\r\n\r\nKind Regards,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/588", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/588/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/588/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/588/events", "html_url": "https://github.com/aio-libs/aioredis/issues/588", "id": 435852165, "node_id": "MDU6SXNzdWU0MzU4NTIxNjU=", "number": 588, "title": "subscribe pattern example", "user": {"login": "jamesstidard", "id": 1797906, "node_id": "MDQ6VXNlcjE3OTc5MDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1797906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamesstidard", "html_url": "https://github.com/jamesstidard", "followers_url": "https://api.github.com/users/jamesstidard/followers", "following_url": "https://api.github.com/users/jamesstidard/following{/other_user}", "gists_url": "https://api.github.com/users/jamesstidard/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamesstidard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamesstidard/subscriptions", "organizations_url": "https://api.github.com/users/jamesstidard/orgs", "repos_url": "https://api.github.com/users/jamesstidard/repos", "events_url": "https://api.github.com/users/jamesstidard/events{/privacy}", "received_events_url": "https://api.github.com/users/jamesstidard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-22T19:16:17Z", "updated_at": "2019-04-23T10:43:52Z", "closed_at": "2019-04-23T10:43:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm currently using `aioredis` to subscribe to channels within my application. I want to switch to a pattern but having issues understanding the example code and docs (probably because I'm not that familiar with Redis in general).\r\n\r\nHere's what I currently have for subscribing to a specific channel:\r\n\r\n```python\r\nredis = await aioredis.create_redis(**kwargs)\r\nchannel, = await redis.subscribe(\"SOME_CHANNEL\")\r\n\r\nwhile await channel.wait_message():\r\n    data = await channel.get()\r\n```\r\n\r\nI've tried a bunch of variations to try and replace the \"SOME_CHANNEL\" with something more like \"*\" but I've not had any success. Replacing with \"*\" returns a channel that if I inspect has the `is_pattern` flag set to false.\r\n\r\nI've also tried using `aioredis.Channel(\"*\", pattern=True)` as an argument to `subscribe` as well.\r\n\r\nWould appreciate some pointers of what I'm misunderstanding. \r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/578", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/578/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/578/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/578/events", "html_url": "https://github.com/aio-libs/aioredis/issues/578", "id": 435383325, "node_id": "MDU6SXNzdWU0MzUzODMzMjU=", "number": 578, "title": "Cleanup code from TODOs", "user": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1001932635, "node_id": "MDU6TGFiZWwxMDAxOTMyNjM1", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/easy", "name": "easy", "color": "0de4e8", "default": false, "description": "Good first PR"}, {"id": 102215492, "node_id": "MDU6TGFiZWwxMDIyMTU0OTI=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-20T10:37:30Z", "updated_at": "2019-04-20T18:23:57Z", "closed_at": "2019-04-20T18:23:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Cleanup the following TODOs:\r\n\r\n* [x] https://github.com/aio-libs/aioredis/blob/master/aioredis/commands/server.py#L223\r\n* [x] https://github.com/aio-libs/aioredis/blob/master/aioredis/commands/generic.py#L146\r\n    pass `encoding='utf-8'` parameter to command.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/577", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/577/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/577/events", "html_url": "https://github.com/aio-libs/aioredis/issues/577", "id": 435382927, "node_id": "MDU6SXNzdWU0MzUzODI5Mjc=", "number": 577, "title": "Update tests runner to lookup host's redis-server", "user": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215492, "node_id": "MDU6TGFiZWwxMDIyMTU0OTI=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-20T10:33:11Z", "updated_at": "2019-04-23T13:55:03Z", "closed_at": "2019-04-23T13:55:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently `py.test` command will try to run hardcoded server executable (`/usr/bin/redis-server`).\r\nMake it search for redis-server bin or check several well-known paths.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/576", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/576/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/576/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/576/events", "html_url": "https://github.com/aio-libs/aioredis/issues/576", "id": 435376800, "node_id": "MDU6SXNzdWU0MzUzNzY4MDA=", "number": 576, "title": "towncrier integration", "user": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102945474, "node_id": "MDU6TGFiZWwxMDI5NDU0NzQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/task", "name": "task", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-20T09:31:35Z", "updated_at": "2019-06-18T09:24:42Z", "closed_at": "2019-06-18T09:24:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/572", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/572/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/572/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/572/events", "html_url": "https://github.com/aio-libs/aioredis/issues/572", "id": 431318094, "node_id": "MDU6SXNzdWU0MzEzMTgwOTQ=", "number": 572, "title": "CPU overload", "user": {"login": "xncbf", "id": 9462045, "node_id": "MDQ6VXNlcjk0NjIwNDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/9462045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xncbf", "html_url": "https://github.com/xncbf", "followers_url": "https://api.github.com/users/xncbf/followers", "following_url": "https://api.github.com/users/xncbf/following{/other_user}", "gists_url": "https://api.github.com/users/xncbf/gists{/gist_id}", "starred_url": "https://api.github.com/users/xncbf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xncbf/subscriptions", "organizations_url": "https://api.github.com/users/xncbf/orgs", "repos_url": "https://api.github.com/users/xncbf/repos", "events_url": "https://api.github.com/users/xncbf/events{/privacy}", "received_events_url": "https://api.github.com/users/xncbf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-10T06:01:21Z", "updated_at": "2019-04-16T07:52:44Z", "closed_at": "2019-04-16T07:52:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "### Intermittently increases CPU usage suddenly.\r\n\r\n![\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba 2019-04-10 \u110b\u1169\u1112\u116e 2 39 28](https://user-images.githubusercontent.com/9462045/55854740-938e9200-5ba0-11e9-85e3-264b29949635.png)\r\n\r\n<img width=\"1210\" alt=\"\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba 2019-04-10 \u110b\u1169\u1112\u116e 2 53 00\" src=\"https://user-images.githubusercontent.com/9462045/55854785-ad2fd980-5ba0-11e9-9bba-f7a4e2ad03a4.png\">\r\n\r\nCan somebody help me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/567", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/567/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/567/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/567/events", "html_url": "https://github.com/aio-libs/aioredis/issues/567", "id": 428076350, "node_id": "MDU6SXNzdWU0MjgwNzYzNTA=", "number": 567, "title": "xread with non-integer timeout argument hangs indefinitely", "user": {"login": "tino", "id": 99524, "node_id": "MDQ6VXNlcjk5NTI0", "avatar_url": "https://avatars2.githubusercontent.com/u/99524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tino", "html_url": "https://github.com/tino", "followers_url": "https://api.github.com/users/tino/followers", "following_url": "https://api.github.com/users/tino/following{/other_user}", "gists_url": "https://api.github.com/users/tino/gists{/gist_id}", "starred_url": "https://api.github.com/users/tino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tino/subscriptions", "organizations_url": "https://api.github.com/users/tino/orgs", "repos_url": "https://api.github.com/users/tino/repos", "events_url": "https://api.github.com/users/tino/events{/privacy}", "received_events_url": "https://api.github.com/users/tino/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-02T07:55:47Z", "updated_at": "2019-07-09T14:17:28Z", "closed_at": "2019-07-09T14:17:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `timeout` argument [is passed verbatim to redis](https://github.com/aio-libs/aioredis/blob/master/aioredis/commands/streams.py#L252). When that argument is not an integer, the XREAD will hang.\r\n\r\nExample:\r\n`await r.xread([\"system_event_stream\"], timeout=0.1, latest_ids=[0])` shows up in `redis monitor` as `1554191321.856104 [3 172.18.0.16:58130] \"XREAD\" \"BLOCK\" \"0.1\" \"STREAMS\" \"system_event_stream\" \"0\"` and hangs forever.\r\n\r\nIt's probably best to assert the argument is an integer. Other python functions often accept seconds for timeouts, so a warning/error would be good.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/519", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/519/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/519/events", "html_url": "https://github.com/aio-libs/aioredis/issues/519", "id": 401002425, "node_id": "MDU6SXNzdWU0MDEwMDI0MjU=", "number": 519, "title": "select() max file descriptors", "user": {"login": "Fux002", "id": 7354511, "node_id": "MDQ6VXNlcjczNTQ1MTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7354511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fux002", "html_url": "https://github.com/Fux002", "followers_url": "https://api.github.com/users/Fux002/followers", "following_url": "https://api.github.com/users/Fux002/following{/other_user}", "gists_url": "https://api.github.com/users/Fux002/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fux002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fux002/subscriptions", "organizations_url": "https://api.github.com/users/Fux002/orgs", "repos_url": "https://api.github.com/users/Fux002/repos", "events_url": "https://api.github.com/users/Fux002/events{/privacy}", "received_events_url": "https://api.github.com/users/Fux002/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-19T14:43:33Z", "updated_at": "2019-01-19T20:18:40Z", "closed_at": "2019-01-19T20:18:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does the implementation use the Select() statement and therefore has limitations to 1024 file descriptors?\r\n\r\nThx a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/506", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/506/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/506/events", "html_url": "https://github.com/aio-libs/aioredis/issues/506", "id": 393650193, "node_id": "MDU6SXNzdWUzOTM2NTAxOTM=", "number": 506, "title": "Do I need to add await wait_closed() all the time?", "user": {"login": "miranquil", "id": 25676311, "node_id": "MDQ6VXNlcjI1Njc2MzEx", "avatar_url": "https://avatars0.githubusercontent.com/u/25676311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranquil", "html_url": "https://github.com/miranquil", "followers_url": "https://api.github.com/users/miranquil/followers", "following_url": "https://api.github.com/users/miranquil/following{/other_user}", "gists_url": "https://api.github.com/users/miranquil/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranquil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranquil/subscriptions", "organizations_url": "https://api.github.com/users/miranquil/orgs", "repos_url": "https://api.github.com/users/miranquil/repos", "events_url": "https://api.github.com/users/miranquil/events{/privacy}", "received_events_url": "https://api.github.com/users/miranquil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-22T07:05:37Z", "updated_at": "2019-01-30T01:09:05Z", "closed_at": "2019-01-30T01:09:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example, just like README:\r\n```\r\nloop = asyncio.get_event_loop()\r\n\r\nasync def go():\r\n    conn = await aioredis.create_connection(\r\n        'redis://localhost', loop=loop)\r\n    await conn.execute('set', 'my-key', 'value')\r\n    val = await conn.execute('get', 'my-key')\r\n    print(val)\r\n    conn.close()\r\n    await conn.wait_closed()\r\nloop.run_until_complete(go())\r\n```\r\n\r\nIf I just delete the line `await conn.wait_closed()`, will the connection be closed at last?\r\n\r\nI'm considering sometimes I don't need to wait until the connection closed, I just need to read some data from redis and then if I need *another* data I can call a function like that above again. So after several procedures like this, will *these* connections close? Also, when? Are there any problem hidding?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/504", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/504/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/504/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/504/events", "html_url": "https://github.com/aio-libs/aioredis/issues/504", "id": 392223660, "node_id": "MDU6SXNzdWUzOTIyMjM2NjA=", "number": 504, "title": "Add a BUSYGROUP reply error", "user": {"login": "dcecile", "id": 311866, "node_id": "MDQ6VXNlcjMxMTg2Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/311866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcecile", "html_url": "https://github.com/dcecile", "followers_url": "https://api.github.com/users/dcecile/followers", "following_url": "https://api.github.com/users/dcecile/following{/other_user}", "gists_url": "https://api.github.com/users/dcecile/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcecile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcecile/subscriptions", "organizations_url": "https://api.github.com/users/dcecile/orgs", "repos_url": "https://api.github.com/users/dcecile/repos", "events_url": "https://api.github.com/users/dcecile/events{/privacy}", "received_events_url": "https://api.github.com/users/dcecile/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1001932635, "node_id": "MDU6TGFiZWwxMDAxOTMyNjM1", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/easy", "name": "easy", "color": "0de4e8", "default": false, "description": "Good first PR"}, {"id": 102215492, "node_id": "MDU6TGFiZWwxMDIyMTU0OTI=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-18T16:02:52Z", "updated_at": "2019-04-20T11:59:01Z", "closed_at": "2019-04-20T11:59:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "The XGROUP CREATE command can return a BUSYGROUP error when a group already exists: https://redis.io/commands/xgroup\r\n\r\nI think the `ReplyError` subclass for matching it would look like this:\r\n\r\n```py\r\nclass BusyGroupError(ReplyError):\r\n    MATCH_REPLY = \"BUSYGROUP Consumer Group name already exists\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/503", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/503/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/503/events", "html_url": "https://github.com/aio-libs/aioredis/issues/503", "id": 392220108, "node_id": "MDU6SXNzdWUzOTIyMjAxMDg=", "number": 503, "title": "Add the \"MKSTREAM\" option to xgroup_create", "user": {"login": "dcecile", "id": 311866, "node_id": "MDQ6VXNlcjMxMTg2Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/311866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcecile", "html_url": "https://github.com/dcecile", "followers_url": "https://api.github.com/users/dcecile/followers", "following_url": "https://api.github.com/users/dcecile/following{/other_user}", "gists_url": "https://api.github.com/users/dcecile/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcecile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcecile/subscriptions", "organizations_url": "https://api.github.com/users/dcecile/orgs", "repos_url": "https://api.github.com/users/dcecile/repos", "events_url": "https://api.github.com/users/dcecile/events{/privacy}", "received_events_url": "https://api.github.com/users/dcecile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-18T15:55:19Z", "updated_at": "2019-02-10T16:14:31Z", "closed_at": "2019-02-10T16:14:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's a not-yet-documented option for creating consumer groups before the stream exists: https://github.com/antirez/redis/issues/4824#issuecomment-438263421\r\n\r\nExample signature for `StreamCommandsMixin`:\r\n```py\r\n    def xgroup_create(self, stream, group_name, latest_id='$', mkstream=False):\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/500", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/500/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/500/events", "html_url": "https://github.com/aio-libs/aioredis/issues/500", "id": 387804842, "node_id": "MDU6SXNzdWUzODc4MDQ4NDI=", "number": 500, "title": "mset function signature improvements", "user": {"login": "suvorovalexander", "id": 8479666, "node_id": "MDQ6VXNlcjg0Nzk2NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/8479666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suvorovalexander", "html_url": "https://github.com/suvorovalexander", "followers_url": "https://api.github.com/users/suvorovalexander/followers", "following_url": "https://api.github.com/users/suvorovalexander/following{/other_user}", "gists_url": "https://api.github.com/users/suvorovalexander/gists{/gist_id}", "starred_url": "https://api.github.com/users/suvorovalexander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suvorovalexander/subscriptions", "organizations_url": "https://api.github.com/users/suvorovalexander/orgs", "repos_url": "https://api.github.com/users/suvorovalexander/repos", "events_url": "https://api.github.com/users/suvorovalexander/events{/privacy}", "received_events_url": "https://api.github.com/users/suvorovalexander/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215491, "node_id": "MDU6TGFiZWwxMDIyMTU0OTE=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-05T15:18:21Z", "updated_at": "2019-10-01T08:30:25Z", "closed_at": "2019-10-01T08:30:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/aio-libs/aioredis/blob/10ac4cb80f164f57ae4ea19ee06e5e532a7893db/aioredis/commands/string.py#L139\r\n\r\naccording to the function signature in order to set key1->1, key2->2, key3->3 I would need to call it as following\r\n`redis.mset(key1, 1, key2, 2, key3, 3)`\r\n\r\nShouldn't it be accepting a mapping instead which is more intuitive way of passing key->value pairs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/496", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/496/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/496/events", "html_url": "https://github.com/aio-libs/aioredis/issues/496", "id": 383159742, "node_id": "MDU6SXNzdWUzODMxNTk3NDI=", "number": 496, "title": "Connection pool creation to temporary not available redisDB", "user": {"login": "jpVm5jYYRE1VIKL", "id": 22169129, "node_id": "MDQ6VXNlcjIyMTY5MTI5", "avatar_url": "https://avatars3.githubusercontent.com/u/22169129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpVm5jYYRE1VIKL", "html_url": "https://github.com/jpVm5jYYRE1VIKL", "followers_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/followers", "following_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/following{/other_user}", "gists_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/subscriptions", "organizations_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/orgs", "repos_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/repos", "events_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/events{/privacy}", "received_events_url": "https://api.github.com/users/jpVm5jYYRE1VIKL/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215489, "node_id": "MDU6TGFiZWwxMDIyMTU0ODk=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2018-11-21T15:05:14Z", "updated_at": "2018-12-10T08:22:46Z", "closed_at": "2018-12-07T09:44:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Ok i not sure that i do things right way but  i try to create something like following to be sure that connection pool created before start to use it.\r\n\r\n\r\n```\r\nclass ....\r\n.....\r\n    async def InitialiseRedisPool(self):\r\n        self.redis_pool = None\r\n        while True:\r\n            try:\r\n                self.redis_pool = await aioredis.create_pool('redis://localhost',minsize = 5, maxsize = 20, loop = self.asyncloop)\r\n            except:\r\n                await asyncio.sleep(5)\r\n            if self.redis_pool is not None:\r\n                return None\r\n            else:\r\n                logger.error(\"redis pool still not ready\")\r\n```\r\n\r\nand somewhere i execute to start task: asyncio.ensure_future(something.InitialiseRedisPool(),loop=loop). \r\n\r\nmain issue that if create_pool failed to connect to redis server it create more and more (hundreds in some minutes) : \r\n\r\n\r\n```\r\n2018-11-21 15:53:14,944 File:asyncrouting.py Function:GetAllTasks Line:120 Function <Task finished coro=<ConnectionsPool._do_close() done, defined at /home/fsradius/env/lib/python3.5/site-packages/aioredis/pool.py:144> result=None>\r\n2018-11-21 15:53:14,945 File:asyncrouting.py Function:GetAllTasks Line:120 Function <Task finished coro=<ConnectionsPool._do_close() done, defined at /home/fsradius/env/lib/python3.5/site-packages/aioredis/pool.py:144> result=None>\r\n2018-11-21 15:53:14,946 File:asyncrouting.py Function:GetAllTasks Line:120 Function <Task finished coro=<ConnectionsPool._do_close() done, defined at /home/fsradius/env/lib/python3.5/site-packages/aioredis/pool.py:144> result=None>\r\n2018-11-21 15:53:14,947 File:asyncrouting.py Function:GetAllTasks Line:120 Function <Task finished coro=<ConnectionsPool._do_close() done, defined at /home/fsradius/env/lib/python3.5/site-packages/aioredis/pool.py:144> result=None>\r\n2018-11-21 15:53:14,948 File:asyncrouting.py Function:GetAllTasks Line:120 Function <Task finished coro=<ConnectionsPool._do_close() done, defined at /home/fsradius/env/lib/python3.5/site-packages/aioredis/pool.py:144> result=None>\r\n```\r\n\r\nMay be exist more real example of aioredis usage for fallback failed connection attempt because examples in current documentation is quite far from reality.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/493", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/493/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/493/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/493/events", "html_url": "https://github.com/aio-libs/aioredis/issues/493", "id": 381143501, "node_id": "MDU6SXNzdWUzODExNDM1MDE=", "number": 493, "title": "calling aioredis.create_redis_pool before main loop is started", "user": {"login": "schlitzered", "id": 2797971, "node_id": "MDQ6VXNlcjI3OTc5NzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2797971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schlitzered", "html_url": "https://github.com/schlitzered", "followers_url": "https://api.github.com/users/schlitzered/followers", "following_url": "https://api.github.com/users/schlitzered/following{/other_user}", "gists_url": "https://api.github.com/users/schlitzered/gists{/gist_id}", "starred_url": "https://api.github.com/users/schlitzered/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schlitzered/subscriptions", "organizations_url": "https://api.github.com/users/schlitzered/orgs", "repos_url": "https://api.github.com/users/schlitzered/repos", "events_url": "https://api.github.com/users/schlitzered/events{/privacy}", "received_events_url": "https://api.github.com/users/schlitzered/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-15T12:39:33Z", "updated_at": "2019-10-01T08:30:56Z", "closed_at": "2019-10-01T08:30:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\n\r\nas soon as i call aioredis.create_redis_pool(**kwargs) the function is trying to contact the a redis server.\r\n\r\nthis fails because when i create the pool, the asyncio loop is not yet running.\r\n\r\nright now i am helping myself by delaying the creating of the connection pool after the loop is running.\r\nbut now i have to check in every function trying to use the pool, if the pool is already created.\r\n\r\nis there a way to create a connection pool, that will only create a redis connection when something is requesting it?\r\n\r\nKind Regards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/480", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/480/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/480/events", "html_url": "https://github.com/aio-libs/aioredis/issues/480", "id": 371886214, "node_id": "MDU6SXNzdWUzNzE4ODYyMTQ=", "number": 480, "title": "Release date for sentinel and streams support", "user": {"login": "ffaraone", "id": 1480134, "node_id": "MDQ6VXNlcjE0ODAxMzQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1480134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ffaraone", "html_url": "https://github.com/ffaraone", "followers_url": "https://api.github.com/users/ffaraone/followers", "following_url": "https://api.github.com/users/ffaraone/following{/other_user}", "gists_url": "https://api.github.com/users/ffaraone/gists{/gist_id}", "starred_url": "https://api.github.com/users/ffaraone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ffaraone/subscriptions", "organizations_url": "https://api.github.com/users/ffaraone/orgs", "repos_url": "https://api.github.com/users/ffaraone/repos", "events_url": "https://api.github.com/users/ffaraone/events{/privacy}", "received_events_url": "https://api.github.com/users/ffaraone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-19T09:53:19Z", "updated_at": "2018-10-24T08:53:53Z", "closed_at": "2018-10-24T08:53:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\ncould you please tell me the release date for the aioredis version with support for sentinel and streams ?\r\n\r\nThanks\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/477", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/477/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/477/events", "html_url": "https://github.com/aio-libs/aioredis/issues/477", "id": 369045406, "node_id": "MDU6SXNzdWUzNjkwNDU0MDY=", "number": 477, "title": "aioredis.errors.PipelineError: ('PipelineError errors:', [CancelledError(), ...", "user": {"login": "gjcarneiro", "id": 2197096, "node_id": "MDQ6VXNlcjIxOTcwOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2197096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gjcarneiro", "html_url": "https://github.com/gjcarneiro", "followers_url": "https://api.github.com/users/gjcarneiro/followers", "following_url": "https://api.github.com/users/gjcarneiro/following{/other_user}", "gists_url": "https://api.github.com/users/gjcarneiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/gjcarneiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gjcarneiro/subscriptions", "organizations_url": "https://api.github.com/users/gjcarneiro/orgs", "repos_url": "https://api.github.com/users/gjcarneiro/repos", "events_url": "https://api.github.com/users/gjcarneiro/events{/privacy}", "received_events_url": "https://api.github.com/users/gjcarneiro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-11T10:02:47Z", "updated_at": "2018-10-11T16:02:02Z", "closed_at": "2018-10-11T16:02:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a task awaiting a pipeline execute() gets cancelled, it should raise the normal asyncio.CancelledError exception.  Instead, I am receiving a aioredis.errors.PipelineError.\r\n\r\nThis is a violation of the asyncio cancellation protocol.  If a task gets cancelled, it should raise CancelledError.\r\n\r\n```\r\n  File \"reoffer3.py\", line 286, in writer\r\n    await pipe.execute()\r\n  File \"/env/site-packages/aioredis/commands/transaction.py\", line 171, in execute\r\n    conn, return_exceptions=return_exceptions)\r\n  File \"/env/site-packages/aioredis/commands/transaction.py\", line 183, in _do_execute\r\n    return await self._gather_result(return_exceptions)\r\n  File \"/env/site-packages/aioredis/commands/transaction.py\", line 196, in _gather_result\r\n    raise self.error_class(errors)\r\naioredis.errors.PipelineError: ('PipelineError errors:', [CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError(), CancelledError()])\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/464", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/464/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/464/events", "html_url": "https://github.com/aio-libs/aioredis/issues/464", "id": 362503523, "node_id": "MDU6SXNzdWUzNjI1MDM1MjM=", "number": 464, "title": "Pipelining is very slow", "user": {"login": "baverman", "id": 31970, "node_id": "MDQ6VXNlcjMxOTcw", "avatar_url": "https://avatars2.githubusercontent.com/u/31970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/baverman", "html_url": "https://github.com/baverman", "followers_url": "https://api.github.com/users/baverman/followers", "following_url": "https://api.github.com/users/baverman/following{/other_user}", "gists_url": "https://api.github.com/users/baverman/gists{/gist_id}", "starred_url": "https://api.github.com/users/baverman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/baverman/subscriptions", "organizations_url": "https://api.github.com/users/baverman/orgs", "repos_url": "https://api.github.com/users/baverman/repos", "events_url": "https://api.github.com/users/baverman/events{/privacy}", "received_events_url": "https://api.github.com/users/baverman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215489, "node_id": "MDU6TGFiZWwxMDIyMTU0ODk=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-09-21T08:14:57Z", "updated_at": "2018-10-11T09:18:18Z", "closed_at": "2018-10-11T09:17:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems each operation leads to separate `sendto` syscall. Correct me if I wrong but the whole idea behind pipelining is to pack multiple operations into one network send.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/463", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/463/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/463/events", "html_url": "https://github.com/aio-libs/aioredis/issues/463", "id": 360529572, "node_id": "MDU6SXNzdWUzNjA1Mjk1NzI=", "number": 463, "title": "Why is context manager returning from \"await connection\" not closing the connection?", "user": {"login": "hubo1016", "id": 14069404, "node_id": "MDQ6VXNlcjE0MDY5NDA0", "avatar_url": "https://avatars3.githubusercontent.com/u/14069404?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hubo1016", "html_url": "https://github.com/hubo1016", "followers_url": "https://api.github.com/users/hubo1016/followers", "following_url": "https://api.github.com/users/hubo1016/following{/other_user}", "gists_url": "https://api.github.com/users/hubo1016/gists{/gist_id}", "starred_url": "https://api.github.com/users/hubo1016/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hubo1016/subscriptions", "organizations_url": "https://api.github.com/users/hubo1016/orgs", "repos_url": "https://api.github.com/users/hubo1016/repos", "events_url": "https://api.github.com/users/hubo1016/events{/privacy}", "received_events_url": "https://api.github.com/users/hubo1016/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-15T10:50:56Z", "updated_at": "2018-11-28T08:12:38Z", "closed_at": "2018-11-28T08:12:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In current version, when not using connection pool, you must explictly close a connection to prevent it from leaking.\r\n```python\r\nwith (await connection) as conn:\r\n    ...\r\n```\r\ndo nothing. Is it by design?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/457", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/457/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/457/events", "html_url": "https://github.com/aio-libs/aioredis/issues/457", "id": 358790283, "node_id": "MDU6SXNzdWUzNTg3OTAyODM=", "number": 457, "title": "new release with Py3.7 resolutions", "user": {"login": "dfee", "id": 262602, "node_id": "MDQ6VXNlcjI2MjYwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/262602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfee", "html_url": "https://github.com/dfee", "followers_url": "https://api.github.com/users/dfee/followers", "following_url": "https://api.github.com/users/dfee/following{/other_user}", "gists_url": "https://api.github.com/users/dfee/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfee/subscriptions", "organizations_url": "https://api.github.com/users/dfee/orgs", "repos_url": "https://api.github.com/users/dfee/repos", "events_url": "https://api.github.com/users/dfee/events{/privacy}", "received_events_url": "https://api.github.com/users/dfee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2018-09-10T20:52:52Z", "updated_at": "2018-10-24T10:05:23Z", "closed_at": "2018-10-24T08:53:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I came across this problem today after upgrading to 3.7: https://github.com/aio-libs/aioredis/issues/425\r\n\r\nI noticed that this has been solved, but want to rely on a pypi release. Can we get a new release, or is there something we're holding out for?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/444", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/444/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/444/events", "html_url": "https://github.com/aio-libs/aioredis/issues/444", "id": 353800895, "node_id": "MDU6SXNzdWUzNTM4MDA4OTU=", "number": 444, "title": "`create_redis` with string `redis://localhost:6379/0` doesn't work anymore.", "user": {"login": "Natim", "id": 229453, "node_id": "MDQ6VXNlcjIyOTQ1Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/229453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Natim", "html_url": "https://github.com/Natim", "followers_url": "https://api.github.com/users/Natim/followers", "following_url": "https://api.github.com/users/Natim/following{/other_user}", "gists_url": "https://api.github.com/users/Natim/gists{/gist_id}", "starred_url": "https://api.github.com/users/Natim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Natim/subscriptions", "organizations_url": "https://api.github.com/users/Natim/orgs", "repos_url": "https://api.github.com/users/Natim/repos", "events_url": "https://api.github.com/users/Natim/events{/privacy}", "received_events_url": "https://api.github.com/users/Natim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-24T14:13:17Z", "updated_at": "2019-01-31T09:23:06Z", "closed_at": "2019-01-31T09:23:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "It started to be broken since the last error. I now get the following **OSError**\r\n\r\n```OSErrorasyncio.selector_events in _sock_connect\r\nerror[Errno 99] Cannot assign requested address```\r\n```\r\n\r\n```\r\naddress | ['10.0.10.4', 6379]\r\n-- | --\r\nfd | 28249\r\nfut | <Future finished exception=OSError(99, 'Cannot assign requested address')>\r\nself | <_UnixSelectorEventLoop running=True closed=False debug=False>\r\nsock | <socket.socket [closed] fd=-1, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6>\r\n```\r\n\r\nIt might be because it is a list rather than a tuple. (Python 3.7)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/443", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/443/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/443/events", "html_url": "https://github.com/aio-libs/aioredis/issues/443", "id": 353493919, "node_id": "MDU6SXNzdWUzNTM0OTM5MTk=", "number": 443, "title": "migrate existing context manager wrapper v0.3 to v1.0", "user": {"login": "marcstreeter", "id": 5916490, "node_id": "MDQ6VXNlcjU5MTY0OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5916490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcstreeter", "html_url": "https://github.com/marcstreeter", "followers_url": "https://api.github.com/users/marcstreeter/followers", "following_url": "https://api.github.com/users/marcstreeter/following{/other_user}", "gists_url": "https://api.github.com/users/marcstreeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcstreeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcstreeter/subscriptions", "organizations_url": "https://api.github.com/users/marcstreeter/orgs", "repos_url": "https://api.github.com/users/marcstreeter/repos", "events_url": "https://api.github.com/users/marcstreeter/events{/privacy}", "received_events_url": "https://api.github.com/users/marcstreeter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-23T18:09:31Z", "updated_at": "2019-12-12T19:11:36Z", "closed_at": "2019-12-12T19:11:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been actively using aioredis v0.3 up until I attempted to move to python 3.7 which triggered the need to do an update to v1.  I've put aioredis inside a wrapper class that retains this interface:\r\n\r\n```python\r\n     from .util import RedisWrapper\r\n     \r\n     async with RedisWrapper() as r:\r\n         keys = await r.get(\"*\")  # cringeworthy I know, just an example\r\n```\r\n\r\nI have a feeling that I may have been using it wrong all along as my set up totally crumbled with the move.\r\n\r\nHere's my current set up under 0.3\r\n    \r\n```python\r\n    import aioredis\r\n    from aioredis import RedisPool\r\n    import config\r\n    \r\n    \r\n    class RedisWrapper:\r\n        __slots__ = (\"_instance\", )\r\n        _pool = None\r\n    \r\n        def __init__(self):\r\n            self._instance = None\r\n        \r\n        async def __aenter__(self):\r\n            pool = await self.get_pool()\r\n            self._instance = await pool.acquire()\r\n            return self._instance\r\n        \r\n        async def __aexit__(self, exc_type, exc_val, exc_tb):\r\n            pool = await self.get_pool()\r\n            pool.release(self._instance)\r\n            self._instance = None\r\n        \r\n        async def get_pool(self) -> RedisPool:\r\n            if not self._pool:\r\n                self._pool = await aioredis.create_pool(\r\n                    (config.host, config.port),\r\n                    minsize=5,\r\n                    maxsize=10\r\n                )\r\n            \r\n            return self._pool\r\n```\r\n\r\nI've been reading through the migration description and it looks like interaction has changed such that now I'm trying to make the move to the `aioredis.create_redis_pool` (as that seems like the closest fit).  After many failed attempts, however, I don't know how to (or if I even have to) release the connection during the clean up in `__aexit__`.   I've been looking around to see what others do and I've noticed the following usage in `aioredlock` ([line 118-128](https://github.com/joanvila/aioredlock/blob/master/aioredlock/redis.py#L97-L128)):\r\n\r\n```python\r\n    async def connect(self):\r\n        # I cut out a lot of code to focus on this\r\n        if self._pool is None:\r\n            async with self._lock:\r\n                if self._pool is None:\r\n                    self.log.debug('Connecting %s', repr(self))\r\n                    self._pool = await self._create_redis_pool(\r\n                        address, **redis_kwargs,\r\n                        minsize=1, maxsize=100)\r\n                    with await self._pool as redis:\r\n                        await self._register_scripts(redis)\r\n\r\n        return await self._pool\r\n```\r\n\r\nand then interacted with here([line 142-147](https://github.com/joanvila/aioredlock/blob/db0fd8752733a98ee00e55f2a4165183be3283d3/aioredlock/redis.py#L142-L147)):\r\n\r\n```python\r\n    with await self.connect() as redis:\r\n        await redis.evalsha(\r\n            self.set_lock_script_sha1,\r\n            keys=[resource],\r\n            args=[lock_identifier, lock_timeout_ms]\r\n        )\r\n```\r\n\r\nwhich leads me to believe I could just do this in v1:\r\n\r\n```python\r\n    import aioredis\r\n    import config\r\n    \r\n    class RedisWrapper:\r\n        __slots__ = (\"_instance\", )\r\n        _pool = None\r\n    \r\n        def __init__(self):\r\n            self._instance = None\r\n    \r\n        async def __aenter__(self):\r\n            self._instance = await self.get_pool()\r\n            return await self._instance\r\n    \r\n        async def __aexit__(self, exc_type, exc_val, exc_tb):\r\n            self._instance = None\r\n    \r\n        async def get_pool(self):\r\n            if not self._pool:\r\n                self._pool = await aioredis.create_redis_pool(\r\n                    (config.host, config.port),\r\n                    minsize=5,\r\n                    maxsize=10\r\n                )\r\n    \r\n            return self._pool\r\n```\r\n\r\nThis set up seems to work, but I'm just copying code, and would like a confirmation that I'm not abusing the library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/442", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/442/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/442/events", "html_url": "https://github.com/aio-libs/aioredis/issues/442", "id": 352162740, "node_id": "MDU6SXNzdWUzNTIxNjI3NDA=", "number": 442, "title": "Support Sorted Set Commands Spec", "user": {"login": "brunoalano", "id": 810642, "node_id": "MDQ6VXNlcjgxMDY0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/810642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brunoalano", "html_url": "https://github.com/brunoalano", "followers_url": "https://api.github.com/users/brunoalano/followers", "following_url": "https://api.github.com/users/brunoalano/following{/other_user}", "gists_url": "https://api.github.com/users/brunoalano/gists{/gist_id}", "starred_url": "https://api.github.com/users/brunoalano/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brunoalano/subscriptions", "organizations_url": "https://api.github.com/users/brunoalano/orgs", "repos_url": "https://api.github.com/users/brunoalano/repos", "events_url": "https://api.github.com/users/brunoalano/events{/privacy}", "received_events_url": "https://api.github.com/users/brunoalano/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-20T14:33:09Z", "updated_at": "2018-08-20T14:56:30Z", "closed_at": "2018-08-20T14:56:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to execute the `ZPOPMIN` function from Redis docs, and others related to that, and `aioredis` doesn't support that mixin. I also tried running using `Redis.execute('zpopmin', ...)`, and it fails saying `aioredis.errors.ReplyError: ERR unknown command 'ZPOPMIN'`.\r\n\r\nIt's possible to run arbitrary commands on Redis? Maybe this is relatd with #407, but related to redis spec commands.\r\n\r\nI want to know if that's a design decision, or we should implement? If that's ok to implement, I can do a PR for it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/437", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/437/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/437/events", "html_url": "https://github.com/aio-libs/aioredis/issues/437", "id": 349593957, "node_id": "MDU6SXNzdWUzNDk1OTM5NTc=", "number": 437, "title": "Error trying to import discord.py 1.0.0 right after installing it through pip.", "user": {"login": "Meinns", "id": 41879174, "node_id": "MDQ6VXNlcjQxODc5MTc0", "avatar_url": "https://avatars1.githubusercontent.com/u/41879174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Meinns", "html_url": "https://github.com/Meinns", "followers_url": "https://api.github.com/users/Meinns/followers", "following_url": "https://api.github.com/users/Meinns/following{/other_user}", "gists_url": "https://api.github.com/users/Meinns/gists{/gist_id}", "starred_url": "https://api.github.com/users/Meinns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Meinns/subscriptions", "organizations_url": "https://api.github.com/users/Meinns/orgs", "repos_url": "https://api.github.com/users/Meinns/repos", "events_url": "https://api.github.com/users/Meinns/events{/privacy}", "received_events_url": "https://api.github.com/users/Meinns/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-10T17:17:35Z", "updated_at": "2018-08-10T19:31:12Z", "closed_at": "2018-08-10T19:31:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "It shows this error\r\n\r\n`Traceback (most recent call last):\r\n  File \"D:\\Pessoal\\Animes\\Discord\\000.py\", line 1, in <module>\r\n    import discord\r\n  File \"C:\\Users\\Utilizador\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\discord\\__init__.py\", line 20, in <module>\r\n    from .client import Client, AppInfo\r\n  File \"C:\\Users\\Utilizador\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\discord\\client.py\", line 27, in <module>\r\n    from .user import User, Profile\r\n  File \"C:\\Users\\Utilizador\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\discord\\user.py\", line 33, in <module>\r\n    import discord.abc\r\n  File \"C:\\Users\\Utilizador\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\discord\\abc.py\", line 40, in <module>\r\n    from .voice_client import VoiceClient\r\n  File \"C:\\Users\\Utilizador\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\discord\\voice_client.py\", line 58, in <module>\r\n    from .gateway import *\r\n  File \"C:\\Users\\Utilizador\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\discord\\gateway.py\", line 29, in <module>\r\n    import websockets\r\n  File \"C:\\Users\\Utilizador\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\websockets\\__init__.py\", line 3, in <module>\r\n    from .client import *\r\n  File \"C:\\Users\\Utilizador\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\websockets\\client.py\", line 20, in <module>\r\n    from .protocol import WebSocketCommonProtocol\r\n  File \"C:\\Users\\Utilizador\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\websockets\\protocol.py\", line 18, in <module>\r\n    from .compatibility import asyncio_ensure_future\r\n  File \"C:\\Users\\Utilizador\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\websockets\\compatibility.py\", line 16\r\n    asyncio_ensure_future = asyncio.async           # Python < 3.5\r\n                                        ^\r\nSyntaxError: invalid syntax`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/434", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/434/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/434/events", "html_url": "https://github.com/aio-libs/aioredis/issues/434", "id": 345522217, "node_id": "MDU6SXNzdWUzNDU1MjIyMTc=", "number": 434, "title": "OSError: Multiple exceptions: [Errno 111] Connect call failed ('127.0.0.1', 6379), [Errno 99] Cannot assign requested address", "user": {"login": "yashrsharma44", "id": 31438680, "node_id": "MDQ6VXNlcjMxNDM4Njgw", "avatar_url": "https://avatars1.githubusercontent.com/u/31438680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yashrsharma44", "html_url": "https://github.com/yashrsharma44", "followers_url": "https://api.github.com/users/yashrsharma44/followers", "following_url": "https://api.github.com/users/yashrsharma44/following{/other_user}", "gists_url": "https://api.github.com/users/yashrsharma44/gists{/gist_id}", "starred_url": "https://api.github.com/users/yashrsharma44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yashrsharma44/subscriptions", "organizations_url": "https://api.github.com/users/yashrsharma44/orgs", "repos_url": "https://api.github.com/users/yashrsharma44/repos", "events_url": "https://api.github.com/users/yashrsharma44/events{/privacy}", "received_events_url": "https://api.github.com/users/yashrsharma44/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-29T11:09:26Z", "updated_at": "2019-10-02T07:28:03Z", "closed_at": "2018-11-28T08:16:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I am running an example , given in the aioredis documentation, I am getting these sort of error - \r\n```\r\nTraceback (most recent call last):\r\n  File \"python\", line 26, in <module>\r\n  File \"python\", line 7, in main\r\nOSError: Multiple exceptions: [Errno 111] Connect call failed ('127.0.0.1', 6379), [Errno 99] Cannot assign requested address\r\n```\r\nI am running the above code without any proxy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/429", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/429/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/429/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/429/events", "html_url": "https://github.com/aio-libs/aioredis/issues/429", "id": 344707903, "node_id": "MDU6SXNzdWUzNDQ3MDc5MDM=", "number": 429, "title": "elastic cache connection refused error", "user": {"login": "balaa", "id": 5822497, "node_id": "MDQ6VXNlcjU4MjI0OTc=", "avatar_url": "https://avatars1.githubusercontent.com/u/5822497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balaa", "html_url": "https://github.com/balaa", "followers_url": "https://api.github.com/users/balaa/followers", "following_url": "https://api.github.com/users/balaa/following{/other_user}", "gists_url": "https://api.github.com/users/balaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/balaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balaa/subscriptions", "organizations_url": "https://api.github.com/users/balaa/orgs", "repos_url": "https://api.github.com/users/balaa/repos", "events_url": "https://api.github.com/users/balaa/events{/privacy}", "received_events_url": "https://api.github.com/users/balaa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-26T06:12:10Z", "updated_at": "2018-07-27T06:02:08Z", "closed_at": "2018-07-27T06:01:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "i tried  redis library im able to connect to rediscache without any issue but with aioredis im getting connection refused . \r\nimport redis\r\nr = redis.Redis('redis://XXX-XXX.XXX.XX.0001.use1.cache.amazonaws.com:6379')\r\nprint(r)\r\nRedis<ConnectionPool<Connection<host=redis://XXX-XXX.XXX.XX.0001.use1.cache.amazonaws.com:6379,port=6379,db=0>>>\r\n\r\n\r\nasync def init_app():\r\n    app = web.Application(debug=True)\r\n    app.add_routes(routes)\r\n    app['redis_pool'] = await aioredis.create_redis_pool(\r\n        'redis://XXX-XXX.XXX.XX.0001.use1.cache.amazonaws.com:6379',\r\n        minsize=5, maxsize=10, encoding='utf-8',\r\n        loop=loop)\r\n    return app\r\napp = loop.run_until_complete(init_app())\r\nif __name__ == \"__main__\":\r\n    web.run_app(app)\r\n\r\nthe traceback is as follows:\r\nTraceback (most recent call last):\r\n  File \"aiohttp_app.py\", line 212, in <module>\r\n    app = loop.run_until_complete(init_app())\r\n  File \"/usr/lib64/python3.7/asyncio/base_events.py\", line 568, in run_until_complete\r\n    return future.result()\r\n  File \"aiohttp_app.py\", line 202, in init_app\r\n    loop=loop)\r\n  File \"/home/ec2-user/batch_env/lib64/python3.7/site-packages/aioredis/commands/__init__.py\", line 200, in create_redis_pool\r\n    loop=loop)\r\n  File \"/home/ec2-user/batch_env/lib64/python3.7/site-packages/aioredis/pool.py\", line 56, in create_pool\r\n    await pool._fill_free(override_min=False)\r\n  File \"/home/ec2-user/batch_env/lib64/python3.7/site-packages/aioredis/pool.py\", line 388, in _fill_free\r\n    conn = await self._create_new_connection(self._address)\r\n  File \"/home/ec2-user/batch_env/lib64/python3.7/site-packages/aioredis/connection.py\", line 107, in create_connection\r\n    timeout, loop=loop)\r\n  File \"/usr/lib64/python3.7/asyncio/tasks.py\", line 384, in wait_for\r\n    return await fut\r\n  File \"/home/ec2-user/batch_env/lib64/python3.7/site-packages/aioredis/stream.py\", line 19, in open_connection\r\n    lambda: protocol, host, port, **kwds)\r\n  File \"/usr/lib64/python3.7/asyncio/base_events.py\", line 943, in create_connection\r\n    raise exceptions[0]\r\n  File \"/usr/lib64/python3.7/asyncio/base_events.py\", line 930, in create_connection\r\n    await self.sock_connect(sock, address)\r\n  File \"/usr/lib64/python3.7/asyncio/selector_events.py\", line 475, in sock_connect\r\n    return await fut\r\n  File \"/usr/lib64/python3.7/asyncio/selector_events.py\", line 505, in _sock_connect_cb\r\n    raise OSError(err, f'Connect call failed {address}')\r\nTimeoutError: [Errno 110] Connect call failed ('X.X.X.X', 6379)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/425", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/425/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/425/events", "html_url": "https://github.com/aio-libs/aioredis/issues/425", "id": 342548774, "node_id": "MDU6SXNzdWUzNDI1NDg3NzQ=", "number": 425, "title": "calling close triggers deprecation warning in python 3.7", "user": {"login": "kkaiser", "id": 1774205, "node_id": "MDQ6VXNlcjE3NzQyMDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1774205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkaiser", "html_url": "https://github.com/kkaiser", "followers_url": "https://api.github.com/users/kkaiser/followers", "following_url": "https://api.github.com/users/kkaiser/following{/other_user}", "gists_url": "https://api.github.com/users/kkaiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkaiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkaiser/subscriptions", "organizations_url": "https://api.github.com/users/kkaiser/orgs", "repos_url": "https://api.github.com/users/kkaiser/repos", "events_url": "https://api.github.com/users/kkaiser/events{/privacy}", "received_events_url": "https://api.github.com/users/kkaiser/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-19T01:41:20Z", "updated_at": "2018-07-23T07:07:54Z", "closed_at": "2018-07-23T07:07:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`DeprecationWarning: 'with await lock' is deprecated use 'async with lock' instead` in https://github.com/aio-libs/aioredis/blob/master/aioredis/pool.py#L146\r\n\r\nNot sure if you officially support python 3.7 yet though.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/422", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/422/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/422/events", "html_url": "https://github.com/aio-libs/aioredis/issues/422", "id": 338980912, "node_id": "MDU6SXNzdWUzMzg5ODA5MTI=", "number": 422, "title": "redis.blpop('key', timeout=0.5) -> TypeError", "user": {"login": "lega911", "id": 1065738, "node_id": "MDQ6VXNlcjEwNjU3Mzg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1065738?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lega911", "html_url": "https://github.com/lega911", "followers_url": "https://api.github.com/users/lega911/followers", "following_url": "https://api.github.com/users/lega911/following{/other_user}", "gists_url": "https://api.github.com/users/lega911/gists{/gist_id}", "starred_url": "https://api.github.com/users/lega911/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lega911/subscriptions", "organizations_url": "https://api.github.com/users/lega911/orgs", "repos_url": "https://api.github.com/users/lega911/repos", "events_url": "https://api.github.com/users/lega911/events{/privacy}", "received_events_url": "https://api.github.com/users/lega911/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-06T15:28:29Z", "updated_at": "2018-07-09T06:30:49Z", "closed_at": "2018-07-09T06:30:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "float timeout throws exception, how to set timeout for half second?\r\n\r\n```python\r\nredis.blpop('key', timeout=0.5)\r\n\r\nTypeError: timeout argument must be int\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/415", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/415/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/415/events", "html_url": "https://github.com/aio-libs/aioredis/issues/415", "id": 328566067, "node_id": "MDU6SXNzdWUzMjg1NjYwNjc=", "number": 415, "title": "RuntimeError: Lock is not acquired when using redis context manager.", "user": {"login": "akhilman", "id": 180812, "node_id": "MDQ6VXNlcjE4MDgxMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/180812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akhilman", "html_url": "https://github.com/akhilman", "followers_url": "https://api.github.com/users/akhilman/followers", "following_url": "https://api.github.com/users/akhilman/following{/other_user}", "gists_url": "https://api.github.com/users/akhilman/gists{/gist_id}", "starred_url": "https://api.github.com/users/akhilman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akhilman/subscriptions", "organizations_url": "https://api.github.com/users/akhilman/orgs", "repos_url": "https://api.github.com/users/akhilman/repos", "events_url": "https://api.github.com/users/akhilman/events{/privacy}", "received_events_url": "https://api.github.com/users/akhilman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-01T15:34:25Z", "updated_at": "2018-06-02T03:38:29Z", "closed_at": "2018-06-02T03:38:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have got some wired error, may be after upgrade to recent aioredis. Before upgrade I have no such problem.\r\n  ```\r\nFile \"/home/ildar/slivoglot-2/slivoglot-core/slivoglot/core/hub.py\", line 2150, in call_method\r\n    with await self._redis as conn:\r\n  File \"/opt/slivoglot-2.dev/lib/python3.6/site-packages/aioredis/commands/__init__.py\", line 132, in __await__\r\n    conn = yield from self._pool_or_conn.acquire().__await__()\r\n  File \"/opt/slivoglot-2.dev/lib/python3.6/site-packages/aioredis/pool.py\", line 337, in acquire\r\n    await self._cond.wait()\r\n  File \"/usr/lib/python3.6/asyncio/locks.py\", line 38, in __exit__\r\n    self._lock.release()\r\n  File \"/usr/lib/python3.6/asyncio/locks.py\", line 207, in release\r\n    raise RuntimeError('Lock is not acquired.')\r\nRuntimeError: Lock is not acquired.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/411", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/411/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/411/events", "html_url": "https://github.com/aio-libs/aioredis/issues/411", "id": 324428173, "node_id": "MDU6SXNzdWUzMjQ0MjgxNzM=", "number": 411, "title": "SPOP since 3.2 supports a count but that's not represented in library", "user": {"login": "marcoceppi", "id": 70613, "node_id": "MDQ6VXNlcjcwNjEz", "avatar_url": "https://avatars0.githubusercontent.com/u/70613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcoceppi", "html_url": "https://github.com/marcoceppi", "followers_url": "https://api.github.com/users/marcoceppi/followers", "following_url": "https://api.github.com/users/marcoceppi/following{/other_user}", "gists_url": "https://api.github.com/users/marcoceppi/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcoceppi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcoceppi/subscriptions", "organizations_url": "https://api.github.com/users/marcoceppi/orgs", "repos_url": "https://api.github.com/users/marcoceppi/repos", "events_url": "https://api.github.com/users/marcoceppi/events{/privacy}", "received_events_url": "https://api.github.com/users/marcoceppi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1001932635, "node_id": "MDU6TGFiZWwxMDAxOTMyNjM1", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/easy", "name": "easy", "color": "0de4e8", "default": false, "description": "Good first PR"}, {"id": 102215491, "node_id": "MDU6TGFiZWwxMDIyMTU0OTE=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1086344154, "node_id": "MDU6TGFiZWwxMDg2MzQ0MTU0", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/hacktoberfest", "name": "hacktoberfest", "color": "d93f0b", "default": false, "description": "Hacktoberfest 2018"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-18T14:15:01Z", "updated_at": "2018-11-02T19:53:23Z", "closed_at": "2018-11-02T19:53:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure the plan for what version cut off that this library aims to support, but being able to supply a count to `spop` would be great to have.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/395", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/395/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/395/events", "html_url": "https://github.com/aio-libs/aioredis/issues/395", "id": 307451929, "node_id": "MDU6SXNzdWUzMDc0NTE5Mjk=", "number": 395, "title": "confusion with context managers", "user": {"login": "marcstreeter", "id": 5916490, "node_id": "MDQ6VXNlcjU5MTY0OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5916490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcstreeter", "html_url": "https://github.com/marcstreeter", "followers_url": "https://api.github.com/users/marcstreeter/followers", "following_url": "https://api.github.com/users/marcstreeter/following{/other_user}", "gists_url": "https://api.github.com/users/marcstreeter/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcstreeter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcstreeter/subscriptions", "organizations_url": "https://api.github.com/users/marcstreeter/orgs", "repos_url": "https://api.github.com/users/marcstreeter/repos", "events_url": "https://api.github.com/users/marcstreeter/events{/privacy}", "received_events_url": "https://api.github.com/users/marcstreeter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-03-21T23:20:24Z", "updated_at": "2018-03-22T16:25:09Z", "closed_at": "2018-03-22T16:25:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to migrate up from 0.3.3. Previously I had a context manager in place like so:\r\n\r\n\r\n```\r\nimport aioredis\r\noptions = {\r\n    'host': 'redis', \r\n    'port': 6379\r\n}\r\n\r\nclass Eph:\r\n    __slots__ = (\"_conn\", )\r\n    _redis_host = None\r\n    _redis_port = None\r\n    _pool = None\r\n\r\n    def __init__(self):\r\n        self._conn = None\r\n\r\n    async def __aenter__(self):\r\n        pool = await self.get_pool()\r\n        self._conn = await pool.acquire()\r\n        return self._conn\r\n \r\n    async def __aexit__(self, exc_type, exc_val, exc_tb):\r\n        pool = await self.get_pool()\r\n        pool.release(self._conn)\r\n        self._conn = None\r\n\r\n    async def get_pool(self):\r\n        if not Eph._pool:\r\n            Eph._pool = await aioredis.create_pool(\r\n                (self.host, self.port),\r\n                minsize=5,\r\n                maxsize=10\r\n            )\r\n        return Eph._pool\r\n\r\n    @property\r\n    def host(self) -> str:\r\n        return options['host']\r\n\r\n    @property\r\n    def port(self) -> int:\r\n        return options['port']\r\n```\r\nI've looked through much of the documentation on migration and I'm missing something\r\n\r\nCurrently calling the above like so:\r\n\r\n```\r\nasync with Eph() as eph:\r\n   await eph.script_flush()\r\n```\r\n\r\nResults in \r\n\r\n```\r\n...\r\nAttributeError: 'RedisConnection' object has no attribute 'script_flush'\r\n```\r\n\r\nI realize that some of the objects that were once returned have changed.  My main goal is to free the connection after using it.  From the source code I've read, `_AsyncConnectionContextManager` seems to do what I want but I can't find it used anywhere except for some obscure `get` method which is also proving hard to locate its use. I guess I'm looking for guidance as to the recommended way to use this library since there seem to be so many different ways.  I'm comfortable with switching over to the following way of doing it\r\n\r\n```\r\nredis = await aioredis.create_redis_pool(\r\n    ('localhost', 6379),\r\n    minsize=1,\r\n    maxsize=1)\r\n\r\nasync def task():\r\n    # Shared mode\r\n    await redis.set('key', 'val')\r\n```\r\n\r\nhowever it would necessitate me changing a lot of code that expects a context manager.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/392", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/392/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/392/events", "html_url": "https://github.com/aio-libs/aioredis/issues/392", "id": 303699512, "node_id": "MDU6SXNzdWUzMDM2OTk1MTI=", "number": 392, "title": "concurrent.futures._base.CancelledError when i use with await Redis(redis_pool) as conn", "user": {"login": "AuTa", "id": 1551768, "node_id": "MDQ6VXNlcjE1NTE3Njg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1551768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AuTa", "html_url": "https://github.com/AuTa", "followers_url": "https://api.github.com/users/AuTa/followers", "following_url": "https://api.github.com/users/AuTa/following{/other_user}", "gists_url": "https://api.github.com/users/AuTa/gists{/gist_id}", "starred_url": "https://api.github.com/users/AuTa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AuTa/subscriptions", "organizations_url": "https://api.github.com/users/AuTa/orgs", "repos_url": "https://api.github.com/users/AuTa/repos", "events_url": "https://api.github.com/users/AuTa/events{/privacy}", "received_events_url": "https://api.github.com/users/AuTa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-09T02:11:16Z", "updated_at": "2018-03-12T10:05:39Z", "closed_at": "2018-03-12T10:05:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Long story short\r\nI updated aioredis to 1.1.0 and change code to `await Redis(redis_pool) as conn:`, but get `concurrent.futures._base.CancelledError`\r\n\r\n## Error Log\r\n```\r\n  File \"/opt/login/base/environment.py\", line 134, in wrapper\r\n    with await Redis(model.env.redis_pool) as conn:\r\n  File \"/usr/local/lib/python3.6/dist-packages/aioredis/commands/__init__.py\", line 132, in __await__\r\n    conn = yield from self._pool_or_conn.acquire().__await__()\r\n  File \"/usr/local/lib/python3.6/dist-packages/aioredis/pool.py\", line 329, in acquire\r\n    await self._fill_free(override_min=True)\r\n  File \"/usr/local/lib/python3.6/dist-packages/aioredis/pool.py\", line 388, in _fill_free\r\n    conn = await self._create_new_connection(self._address)\r\n  File \"/usr/local/lib/python3.6/dist-packages/aioredis/connection.py\", line 107, in create_connection\r\n    timeout, loop=loop)\r\n  File \"/usr/lib/python3.6/asyncio/tasks.py\", line 339, in wait_for\r\n    return (yield from fut)\r\n  File \"/usr/local/lib/python3.6/dist-packages/aioredis/stream.py\", line 19, in open_connection\r\n    lambda: protocol, host, port, **kwds)\r\n  File \"uvloop/loop.pyx\", line 1558, in create_connection (uvloop/loop.c:30507)\r\n  File \"uvloop/loop.pyx\", line 1547, in uvloop.loop.Loop.create_connection (uvloop/loop.c:30269)\r\nconcurrent.futures._base.CancelledError\r\n```\r\n\r\n## Your environment\r\npython 3.6.0\r\nsanic 0.4\r\naioredis 1.1.0\r\n\r\nHow should I handle this error correctly?\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/390", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/390/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/390/events", "html_url": "https://github.com/aio-libs/aioredis/issues/390", "id": 301705168, "node_id": "MDU6SXNzdWUzMDE3MDUxNjg=", "number": 390, "title": "Why does connection pool context much slower then pool.execute()?", "user": {"login": "asleea88", "id": 33522528, "node_id": "MDQ6VXNlcjMzNTIyNTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/33522528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asleea88", "html_url": "https://github.com/asleea88", "followers_url": "https://api.github.com/users/asleea88/followers", "following_url": "https://api.github.com/users/asleea88/following{/other_user}", "gists_url": "https://api.github.com/users/asleea88/gists{/gist_id}", "starred_url": "https://api.github.com/users/asleea88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asleea88/subscriptions", "organizations_url": "https://api.github.com/users/asleea88/orgs", "repos_url": "https://api.github.com/users/asleea88/repos", "events_url": "https://api.github.com/users/asleea88/events{/privacy}", "received_events_url": "https://api.github.com/users/asleea88/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-03-02T09:34:15Z", "updated_at": "2018-03-12T09:12:21Z", "closed_at": "2018-03-12T09:12:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have measured the time for two way to use a connection pool. The one is with `context` statement and the other is just with calling `execute()`.\r\n\r\nI expected the `context` statement is surely faster because it could re-use a connection acquired in contrast to the latter. \r\n\r\nFor example\r\n```\r\nasync def test(pool):\r\n    with await pool as con:   # Reuse con for the three commands.\r\n        a = await con.execute('GET', 'a')\r\n        a = await con.execute('GET', 'a')\r\n        a = await con.execute('GET', 'a')\r\n```\r\n```\r\nasync def test2(pool):\r\n    await pool.execute('GET', 'a')   # Should acquire connection  every time.\r\n    await pool.execute('GET', 'a')   # Should acquire connection  every time.\r\n    await pool.execute('GET', 'a')   # Should acquire connection  every time.\r\n```\r\nBut somehow, the result is the reverse and even calling `execute()` is faster almost two times.\r\n\r\nWhy?\r\n\r\nThe below is the test code I did.\r\n\r\naioredis1.0.0\r\npython3.6.3\r\nRedis server v=3.0.6\r\n```\r\nfrom timeit import timeit\r\n\r\n\r\nsetup = \"\"\"\r\nimport aioredis\r\nimport asyncio\r\nimport uvloop\r\nLOOP_POLICY = uvloop.EventLoopPolicy()  \r\nasyncio.set_event_loop_policy(LOOP_POLICY)\r\nloop = asyncio.get_event_loop()\r\n\r\npool = loop.run_until_complete(aioredis.create_pool(\r\n    '/home/user/workspace/run/redis.sock', maxsize=100, minsize=100\r\n    ))\r\n\"\"\"\r\n\r\nstmt1 = \"\"\"\r\nasync def test(pool):\r\n    with await pool as con:\r\n        a = await con.execute('GET', 'a')\r\n        a = await con.execute('GET', 'a')\r\n        a = await con.execute('GET', 'a')\r\n\r\nl = []\r\nfor i in range(10000):\r\n    l.append(test(pool))\r\n\r\nloop.run_until_complete(asyncio.gather(*l))\r\n\"\"\"\r\nstmt2 = \"\"\"\r\nasync def test2(pool):\r\n    await pool.execute('GET', 'a')\r\n    await pool.execute('GET', 'a')\r\n    await pool.execute('GET', 'a')\r\n\r\nl = []\r\nfor i in range(10000):\r\n    l.append(test2(pool))\r\n\r\nloop.run_until_complete(asyncio.gather(*l))\r\n\"\"\"\r\n\r\nprint('pool context : ', timeit(stmt1, setup=setup, number=1))\r\nprint('pool execute : ', timeit(stmt2, setup=setup, number=1))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/388", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/388/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/388/events", "html_url": "https://github.com/aio-libs/aioredis/issues/388", "id": 301333530, "node_id": "MDU6SXNzdWUzMDEzMzM1MzA=", "number": 388, "title": "Document user/password usage", "user": {"login": "XayOn", "id": 107182, "node_id": "MDQ6VXNlcjEwNzE4Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/107182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XayOn", "html_url": "https://github.com/XayOn", "followers_url": "https://api.github.com/users/XayOn/followers", "following_url": "https://api.github.com/users/XayOn/following{/other_user}", "gists_url": "https://api.github.com/users/XayOn/gists{/gist_id}", "starred_url": "https://api.github.com/users/XayOn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XayOn/subscriptions", "organizations_url": "https://api.github.com/users/XayOn/orgs", "repos_url": "https://api.github.com/users/XayOn/repos", "events_url": "https://api.github.com/users/XayOn/events{/privacy}", "received_events_url": "https://api.github.com/users/XayOn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 530617726, "node_id": "MDU6TGFiZWw1MzA2MTc3MjY=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/docs", "name": "docs", "color": "006b75", "default": false, "description": null}, {"id": 102215491, "node_id": "MDU6TGFiZWwxMDIyMTU0OTE=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-01T09:29:29Z", "updated_at": "2018-03-01T10:51:37Z", "closed_at": "2018-03-01T10:51:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "DBUri usage in redis seems to not be so-well documented, it would be helpful to have it documented here.\r\nIt is a standard URI with auth in it, but I've seen some co-workers having trouble understanding it and might (even if it's a kinda-corner case, as most people don't use authentication) be helpful to have an example available.\r\n\r\nIn this case, wich is a bit  confusing is the form:\r\n\r\nredis://:password@host:port/db\r\n\r\n(the :password bit, it makes sense as it is an empty username, but as said, might be helpful to have in the docs and has no cost :-) )\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/368", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/368/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/368/events", "html_url": "https://github.com/aio-libs/aioredis/issues/368", "id": 290057212, "node_id": "MDU6SXNzdWUyOTAwNTcyMTI=", "number": 368, "title": "Sentinel pool discover doesn't take into account passed timeout", "user": {"login": "kamikaze", "id": 52880, "node_id": "MDQ6VXNlcjUyODgw", "avatar_url": "https://avatars2.githubusercontent.com/u/52880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamikaze", "html_url": "https://github.com/kamikaze", "followers_url": "https://api.github.com/users/kamikaze/followers", "following_url": "https://api.github.com/users/kamikaze/following{/other_user}", "gists_url": "https://api.github.com/users/kamikaze/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamikaze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamikaze/subscriptions", "organizations_url": "https://api.github.com/users/kamikaze/orgs", "repos_url": "https://api.github.com/users/kamikaze/repos", "events_url": "https://api.github.com/users/kamikaze/events{/privacy}", "received_events_url": "https://api.github.com/users/kamikaze/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215489, "node_id": "MDU6TGFiZWwxMDIyMTU0ODk=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 102215492, "node_id": "MDU6TGFiZWwxMDIyMTU0OTI=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/11", "html_url": "https://github.com/aio-libs/aioredis/milestone/11", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/11/labels", "id": 2920593, "node_id": "MDk6TWlsZXN0b25lMjkyMDU5Mw==", "number": 11, "title": "v1.1", "description": "", "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2017-11-17T19:44:52Z", "updated_at": "2018-02-23T11:33:36Z", "due_on": null, "closed_at": "2018-02-23T11:33:36Z"}, "comments": 2, "created_at": "2018-01-19T17:52:15Z", "updated_at": "2018-02-16T14:30:49Z", "closed_at": "2018-02-15T09:49:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/aio-libs/aioredis/blob/fd7411a8a6313c1844f615ef26902bb38fcc5c7b/aioredis/sentinel/pool.py#L44\r\n\r\nhttps://github.com/aio-libs/aioredis/blob/fd7411a8a6313c1844f615ef26902bb38fcc5c7b/aioredis/sentinel/pool.py#L196\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/367", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/367/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/367/events", "html_url": "https://github.com/aio-libs/aioredis/issues/367", "id": 289591131, "node_id": "MDU6SXNzdWUyODk1OTExMzE=", "number": 367, "title": "[solved]aioredis doesn't support Python version prior 3.3", "user": {"login": "bhsherry", "id": 20747665, "node_id": "MDQ6VXNlcjIwNzQ3NjY1", "avatar_url": "https://avatars0.githubusercontent.com/u/20747665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhsherry", "html_url": "https://github.com/bhsherry", "followers_url": "https://api.github.com/users/bhsherry/followers", "following_url": "https://api.github.com/users/bhsherry/following{/other_user}", "gists_url": "https://api.github.com/users/bhsherry/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhsherry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhsherry/subscriptions", "organizations_url": "https://api.github.com/users/bhsherry/orgs", "repos_url": "https://api.github.com/users/bhsherry/repos", "events_url": "https://api.github.com/users/bhsherry/events{/privacy}", "received_events_url": "https://api.github.com/users/bhsherry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-18T11:12:36Z", "updated_at": "2018-01-18T15:27:46Z", "closed_at": "2018-01-18T15:27:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "[root@localhost ~]# pip install aioredis\r\nCollecting aioredis\r\n  Using cached aioredis-1.0.0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-build-ed6lL4/aioredis/setup.py\", line 15, in <module>\r\n        raise RuntimeError(\"aioredis doesn't support Python version prior 3.5\")\r\n    RuntimeError: aioredis doesn't support Python version prior 3.5\r\n\r\nCould you give me any advice\r\n--------------------------------------\r\nSolved.\r\nUse pip3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/364", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/364/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/364/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/364/events", "html_url": "https://github.com/aio-libs/aioredis/issues/364", "id": 287927999, "node_id": "MDU6SXNzdWUyODc5Mjc5OTk=", "number": 364, "title": "support for ASYNC flushes", "user": {"login": "kamikaze", "id": 52880, "node_id": "MDQ6VXNlcjUyODgw", "avatar_url": "https://avatars2.githubusercontent.com/u/52880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamikaze", "html_url": "https://github.com/kamikaze", "followers_url": "https://api.github.com/users/kamikaze/followers", "following_url": "https://api.github.com/users/kamikaze/following{/other_user}", "gists_url": "https://api.github.com/users/kamikaze/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamikaze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamikaze/subscriptions", "organizations_url": "https://api.github.com/users/kamikaze/orgs", "repos_url": "https://api.github.com/users/kamikaze/repos", "events_url": "https://api.github.com/users/kamikaze/events{/privacy}", "received_events_url": "https://api.github.com/users/kamikaze/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215491, "node_id": "MDU6TGFiZWwxMDIyMTU0OTE=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 102215492, "node_id": "MDU6TGFiZWwxMDIyMTU0OTI=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/11", "html_url": "https://github.com/aio-libs/aioredis/milestone/11", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/11/labels", "id": 2920593, "node_id": "MDk6TWlsZXN0b25lMjkyMDU5Mw==", "number": 11, "title": "v1.1", "description": "", "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2017-11-17T19:44:52Z", "updated_at": "2018-02-23T11:33:36Z", "due_on": null, "closed_at": "2018-02-23T11:33:36Z"}, "comments": 2, "created_at": "2018-01-11T21:20:42Z", "updated_at": "2018-02-16T14:30:49Z", "closed_at": "2018-01-29T08:37:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add support for FLUSHDB ASYNC. Like redis.flushdb(async=True)\r\n\r\nhttps://redis.io/commands/flushdb\r\nhttps://redis.io/commands/flushall", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/362", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/362/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/362/events", "html_url": "https://github.com/aio-libs/aioredis/issues/362", "id": 287268236, "node_id": "MDU6SXNzdWUyODcyNjgyMzY=", "number": 362, "title": "Implement \"unlink\" command", "user": {"login": "kamikaze", "id": 52880, "node_id": "MDQ6VXNlcjUyODgw", "avatar_url": "https://avatars2.githubusercontent.com/u/52880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamikaze", "html_url": "https://github.com/kamikaze", "followers_url": "https://api.github.com/users/kamikaze/followers", "following_url": "https://api.github.com/users/kamikaze/following{/other_user}", "gists_url": "https://api.github.com/users/kamikaze/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamikaze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamikaze/subscriptions", "organizations_url": "https://api.github.com/users/kamikaze/orgs", "repos_url": "https://api.github.com/users/kamikaze/repos", "events_url": "https://api.github.com/users/kamikaze/events{/privacy}", "received_events_url": "https://api.github.com/users/kamikaze/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215491, "node_id": "MDU6TGFiZWwxMDIyMTU0OTE=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 102215492, "node_id": "MDU6TGFiZWwxMDIyMTU0OTI=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/11", "html_url": "https://github.com/aio-libs/aioredis/milestone/11", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/11/labels", "id": 2920593, "node_id": "MDk6TWlsZXN0b25lMjkyMDU5Mw==", "number": 11, "title": "v1.1", "description": "", "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2017-11-17T19:44:52Z", "updated_at": "2018-02-23T11:33:36Z", "due_on": null, "closed_at": "2018-02-23T11:33:36Z"}, "comments": 1, "created_at": "2018-01-09T23:40:08Z", "updated_at": "2018-02-16T14:30:49Z", "closed_at": "2018-02-09T12:22:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://redis.io/commands/unlink", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/357", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/357/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/357/events", "html_url": "https://github.com/aio-libs/aioredis/issues/357", "id": 284300892, "node_id": "MDU6SXNzdWUyODQzMDA4OTI=", "number": 357, "title": "'RedisConnection' object has no attribute 'get'", "user": {"login": "shownb", "id": 2890741, "node_id": "MDQ6VXNlcjI4OTA3NDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2890741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shownb", "html_url": "https://github.com/shownb", "followers_url": "https://api.github.com/users/shownb/followers", "following_url": "https://api.github.com/users/shownb/following{/other_user}", "gists_url": "https://api.github.com/users/shownb/gists{/gist_id}", "starred_url": "https://api.github.com/users/shownb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shownb/subscriptions", "organizations_url": "https://api.github.com/users/shownb/orgs", "repos_url": "https://api.github.com/users/shownb/repos", "events_url": "https://api.github.com/users/shownb/events{/privacy}", "received_events_url": "https://api.github.com/users/shownb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-23T11:08:48Z", "updated_at": "2017-12-23T15:43:08Z", "closed_at": "2017-12-23T15:43:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/356", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/356/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/356/events", "html_url": "https://github.com/aio-libs/aioredis/issues/356", "id": 282592515, "node_id": "MDU6SXNzdWUyODI1OTI1MTU=", "number": 356, "title": "create_redis_pool will create extra thread when pass a host name need to be resolved", "user": {"login": "zpoint", "id": 18083296, "node_id": "MDQ6VXNlcjE4MDgzMjk2", "avatar_url": "https://avatars0.githubusercontent.com/u/18083296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zpoint", "html_url": "https://github.com/zpoint", "followers_url": "https://api.github.com/users/zpoint/followers", "following_url": "https://api.github.com/users/zpoint/following{/other_user}", "gists_url": "https://api.github.com/users/zpoint/gists{/gist_id}", "starred_url": "https://api.github.com/users/zpoint/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zpoint/subscriptions", "organizations_url": "https://api.github.com/users/zpoint/orgs", "repos_url": "https://api.github.com/users/zpoint/repos", "events_url": "https://api.github.com/users/zpoint/events{/privacy}", "received_events_url": "https://api.github.com/users/zpoint/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-16T02:17:28Z", "updated_at": "2017-12-18T09:16:28Z", "closed_at": "2017-12-18T09:16:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Whenever I pass **aioredis.create_redis_pool((host, port))** a **host name** need to be resolved instead of direct ip address, as soon as I call **create_redis_pool**, **htop** shows my current **python3** process will create an extra thread, If I set up with **uvloop**, Then 4 extra threads will be created.\r\n\r\n**htop** shows after I call create_redis_pool(\"127.0.0.1\", 6379)\r\n\r\n![image](https://user-images.githubusercontent.com/18083296/34066267-4a1497ce-e247-11e7-96d0-3844ab0b22ff.png)\r\n\r\n**htop** shows after I call create_redis_pool(\"localhost\", 6379)\r\n\r\n![image](https://user-images.githubusercontent.com/18083296/34066256-1e4b7680-e247-11e7-9a51-67e41a12669b.png)\r\n\r\n**htop** shows after I call create_redis_pool(\"localhost\", 6379) with **uvloop** installed\r\n\r\n![image](https://user-images.githubusercontent.com/18083296/34066288-8db5a75c-e247-11e7-8f8f-f7f3701e687c.png)\r\n\r\n\r\n\r\n#### Environment:\r\n* Ubuntu 16.04.3 LTS (GNU/Linux 4.4.0-85-generic x86_64)\r\n* Python 3.5.2\r\n* pip package\r\n    * aioredis (1.0.0)\r\n    * tornado (4.5.2)\r\n    * uvloop (0.9.1)\r\n    * pip (9.0.1)\r\n\r\n#### Simple server example\r\n\r\n\timport asyncio\r\n\timport uvloop\r\n\timport aioredis\r\n\timport tornado.web\r\n\tfrom tornado.platform.asyncio import AsyncIOMainLoop\r\n\r\n\r\n\tclass TestHandler(tornado.web.RequestHandler):\r\n\t    async def get(self):\r\n\t        print(\"In get, passing 127.0.0.1\")\r\n\t        await self.redis_test(\"127.0.0.1\")\r\n\t        print(\"done with 127.0.0.1, going to sleep for 20s\")\r\n\t        await asyncio.sleep(20)\r\n\t        print(\"In get, passing localhost\")\r\n\t        await self.redis_test(\"localhost\")\r\n\t        print(\"Done, going to sleep for 20s\")\r\n\t        await asyncio.sleep(20)\r\n\r\n\t    async def redis_test(self, host):\r\n\t        pool = await aioredis.create_redis_pool((host, 6379))\r\n\t        keys = await pool.keys(\"*\")\r\n\t        print(keys)\r\n\r\n\r\n\tdef main():\r\n\t    server = tornado.httpserver.HTTPServer(tornado.web.Application([(\"/\", TestHandler)]))\r\n\t    server.bind(20006)\r\n\t    #############################################\r\n\t    ### If installed with uvloop, four extra thread will be created\r\n\t    ### otherwise, one extra thread will be created\r\n\t    #############################################\r\n\t    # asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())\r\n\t    AsyncIOMainLoop().install()\r\n\t    server.start(1)\r\n\t    asyncio.get_event_loop().run_forever()\r\n\r\n\r\n\tif __name__ == \"__main__\":\r\n\t    main()\r\n\r\n\r\nIn command line:\r\n\r\n     python3 test.py\r\n\r\nThen, in another terminal\r\n\r\n    curl \"http://localhost:20006\"\r\n\r\nnew thread created as the screenshots show,\r\nis it normal ? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/354", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/354/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/354/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/354/events", "html_url": "https://github.com/aio-libs/aioredis/issues/354", "id": 281568233, "node_id": "MDU6SXNzdWUyODE1NjgyMzM=", "number": 354, "title": "PubSub hangs on disconnect", "user": {"login": "dfee", "id": 262602, "node_id": "MDQ6VXNlcjI2MjYwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/262602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfee", "html_url": "https://github.com/dfee", "followers_url": "https://api.github.com/users/dfee/followers", "following_url": "https://api.github.com/users/dfee/following{/other_user}", "gists_url": "https://api.github.com/users/dfee/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfee/subscriptions", "organizations_url": "https://api.github.com/users/dfee/orgs", "repos_url": "https://api.github.com/users/dfee/repos", "events_url": "https://api.github.com/users/dfee/events{/privacy}", "received_events_url": "https://api.github.com/users/dfee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215489, "node_id": "MDU6TGFiZWwxMDIyMTU0ODk=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/11", "html_url": "https://github.com/aio-libs/aioredis/milestone/11", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/11/labels", "id": 2920593, "node_id": "MDk6TWlsZXN0b25lMjkyMDU5Mw==", "number": 11, "title": "v1.1", "description": "", "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 19, "state": "closed", "created_at": "2017-11-17T19:44:52Z", "updated_at": "2018-02-23T11:33:36Z", "due_on": null, "closed_at": "2018-02-23T11:33:36Z"}, "comments": 5, "created_at": "2017-12-12T23:03:12Z", "updated_at": "2018-02-23T12:56:00Z", "closed_at": "2018-01-31T11:14:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems I can manually close a subscription in Redis `CLIENT KILL ID xyz`, and mpsc.get() will continue to hang. https://github.com/aio-libs/aioredis/blob/master/aioredis/pubsub.py#L259\r\n\r\nThis seems like a bug. Is there some way I should be manually checking (on a timeout) if we're still in pubsub mode?\r\n\r\nI.e.\r\n```python\r\nwhile True:\r\n    result = await asyncio.gather(asyncio.sleep(1), mpsc.wait_message())\r\n    if result[0]:\r\n        if not pool.connection.in_pubsub:\r\n            break\r\n    if result[1]:\r\n        yield await mpsc.get()\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/348", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/348/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/348/events", "html_url": "https://github.com/aio-libs/aioredis/issues/348", "id": 278208489, "node_id": "MDU6SXNzdWUyNzgyMDg0ODk=", "number": 348, "title": "Aioredis fails to return from Lua script", "user": {"login": "dkvashninbay", "id": 9050601, "node_id": "MDQ6VXNlcjkwNTA2MDE=", "avatar_url": "https://avatars3.githubusercontent.com/u/9050601?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkvashninbay", "html_url": "https://github.com/dkvashninbay", "followers_url": "https://api.github.com/users/dkvashninbay/followers", "following_url": "https://api.github.com/users/dkvashninbay/following{/other_user}", "gists_url": "https://api.github.com/users/dkvashninbay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkvashninbay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkvashninbay/subscriptions", "organizations_url": "https://api.github.com/users/dkvashninbay/orgs", "repos_url": "https://api.github.com/users/dkvashninbay/repos", "events_url": "https://api.github.com/users/dkvashninbay/events{/privacy}", "received_events_url": "https://api.github.com/users/dkvashninbay/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215493, "node_id": "MDU6TGFiZWwxMDIyMTU0OTM=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-11-30T17:39:19Z", "updated_at": "2017-12-01T08:35:20Z", "closed_at": "2017-12-01T08:32:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi folks,\r\n\r\nTest case with aioredis:\r\n```\r\nimport asyncio\r\nimport aioredis\r\n\r\nloop = asyncio.get_event_loop()\r\npool = loop.run_until_complete(\r\n    aioredis.create_redis_pool(\r\n        address=('localhost', 6379),\r\n        db=0,\r\n    )\r\n)\r\n\r\nresult = loop.run_until_complete(\r\n    pool.eval(\r\n        'return KEYS[1]',\r\n        'first',\r\n        'second'\r\n    )\r\n)\r\nprint(result)  # result == b'f' <- ISSUE!\r\n\r\nresult = loop.run_until_complete(\r\n    pool.eval(\r\n        'return 2*2',\r\n        'first',\r\n        'second'\r\n    )\r\n)\r\nprint(result)  # result == 4\r\n```\r\n\r\nWhile\r\n```\r\nredis-cli\r\n127.0.0.1:6379> eval \"return KEYS[1]\" 1 key1\r\n\"key1\"\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/345", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/345/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/345/events", "html_url": "https://github.com/aio-libs/aioredis/issues/345", "id": 277309108, "node_id": "MDU6SXNzdWUyNzczMDkxMDg=", "number": 345, "title": "Fix server_bin fixture to conform pytest v3.3", "user": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-28T09:15:08Z", "updated_at": "2017-11-30T07:58:29Z", "closed_at": "2017-11-30T07:58:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://github.com/pytest-dev/pytest/issues/2959", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/342", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/342/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/342/events", "html_url": "https://github.com/aio-libs/aioredis/issues/342", "id": 277030000, "node_id": "MDU6SXNzdWUyNzcwMzAwMDA=", "number": 342, "title": "HISTORY.rst out of date", "user": {"login": "samuelcolvin", "id": 4039449, "node_id": "MDQ6VXNlcjQwMzk0NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4039449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelcolvin", "html_url": "https://github.com/samuelcolvin", "followers_url": "https://api.github.com/users/samuelcolvin/followers", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 530617726, "node_id": "MDU6TGFiZWw1MzA2MTc3MjY=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/docs", "name": "docs", "color": "006b75", "default": false, "description": null}, {"id": 515982240, "node_id": "MDU6TGFiZWw1MTU5ODIyNDA=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/misc", "name": "misc", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-11-27T14:06:51Z", "updated_at": "2017-11-27T16:11:36Z", "closed_at": "2017-11-27T16:09:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi, please can you either keep `HISTORY.rst` up to date or remove it.\r\n\r\nPreferably keep the file and keep it uptodate.\r\n\r\nHaving, but with nothing since 0.2.9 (2016-10-24) is not good.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/341", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/341/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/341/events", "html_url": "https://github.com/aio-libs/aioredis/issues/341", "id": 275822821, "node_id": "MDU6SXNzdWUyNzU4MjI4MjE=", "number": 341, "title": "provide an option to install aioredis without hiredis", "user": {"login": "olexandr-klymenko", "id": 2428944, "node_id": "MDQ6VXNlcjI0Mjg5NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2428944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olexandr-klymenko", "html_url": "https://github.com/olexandr-klymenko", "followers_url": "https://api.github.com/users/olexandr-klymenko/followers", "following_url": "https://api.github.com/users/olexandr-klymenko/following{/other_user}", "gists_url": "https://api.github.com/users/olexandr-klymenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/olexandr-klymenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olexandr-klymenko/subscriptions", "organizations_url": "https://api.github.com/users/olexandr-klymenko/orgs", "repos_url": "https://api.github.com/users/olexandr-klymenko/repos", "events_url": "https://api.github.com/users/olexandr-klymenko/events{/privacy}", "received_events_url": "https://api.github.com/users/olexandr-klymenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-21T18:56:21Z", "updated_at": "2018-11-08T18:06:41Z", "closed_at": "2017-11-22T13:11:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "In my case it is highly preferable not to install python3-dev package. I need to have an option to skip hiredis dependency", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/340", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/340/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/340/events", "html_url": "https://github.com/aio-libs/aioredis/issues/340", "id": 275397215, "node_id": "MDU6SXNzdWUyNzUzOTcyMTU=", "number": 340, "title": "Stream with Redis", "user": {"login": "barrachri", "id": 4802083, "node_id": "MDQ6VXNlcjQ4MDIwODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4802083?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barrachri", "html_url": "https://github.com/barrachri", "followers_url": "https://api.github.com/users/barrachri/followers", "following_url": "https://api.github.com/users/barrachri/following{/other_user}", "gists_url": "https://api.github.com/users/barrachri/gists{/gist_id}", "starred_url": "https://api.github.com/users/barrachri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barrachri/subscriptions", "organizations_url": "https://api.github.com/users/barrachri/orgs", "repos_url": "https://api.github.com/users/barrachri/repos", "events_url": "https://api.github.com/users/barrachri/events{/privacy}", "received_events_url": "https://api.github.com/users/barrachri/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-20T15:35:29Z", "updated_at": "2017-11-20T23:04:36Z", "closed_at": "2017-11-20T23:04:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to experiment a bit using Redis Stream (https://github.com/antirez/redis/tree/streams).\r\n\r\nDo you have some experience to share?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/337", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/337/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/337/events", "html_url": "https://github.com/aio-libs/aioredis/issues/337", "id": 274960143, "node_id": "MDU6SXNzdWUyNzQ5NjAxNDM=", "number": 337, "title": "FileNotFoundError: [Errno 2] No such file or directory", "user": {"login": "oldani", "id": 17304097, "node_id": "MDQ6VXNlcjE3MzA0MDk3", "avatar_url": "https://avatars1.githubusercontent.com/u/17304097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oldani", "html_url": "https://github.com/oldani", "followers_url": "https://api.github.com/users/oldani/followers", "following_url": "https://api.github.com/users/oldani/following{/other_user}", "gists_url": "https://api.github.com/users/oldani/gists{/gist_id}", "starred_url": "https://api.github.com/users/oldani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oldani/subscriptions", "organizations_url": "https://api.github.com/users/oldani/orgs", "repos_url": "https://api.github.com/users/oldani/repos", "events_url": "https://api.github.com/users/oldani/events{/privacy}", "received_events_url": "https://api.github.com/users/oldani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-11-17T18:47:03Z", "updated_at": "2019-05-16T20:55:42Z", "closed_at": "2017-11-19T15:55:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Traceback:\r\n```python\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 467, in run_until_complete\r\n    return future.result()\r\n  File \"<stdin>\", line 3, in go\r\n  File \"/home/vagrant/.local/lib/python3.6/site-packages/aioredis/commands/__init__.py\", line 146, in create_redis\r\n    loop=loop)\r\n  File \"/home/vagrant/.local/lib/python3.6/site-packages/aioredis/connection.py\", line 79, in create_connection\r\n    address, ssl=ssl, loop=loop)\r\n  File \"/usr/lib/python3.6/asyncio/streams.py\", line 128, in open_unix_connection\r\n    lambda: protocol, path, **kwds)\r\n  File \"/usr/lib/python3.6/asyncio/unix_events.py\", line 236, in create_unix_connection\r\n    yield from self.sock_connect(sock, path)\r\n  File \"/usr/lib/python3.6/asyncio/selector_events.py\", line 451, in sock_connect\r\n    return (yield from fut)\r\n  File \"/usr/lib/python3.6/asyncio/selector_events.py\", line 456, in _sock_connect\r\n    sock.connect(address)\r\nFileNotFoundError: [Errno 2] No such file or directory\r\n```\r\n\r\nCode:\r\n```python\r\nimport asyncio\r\nimport aioredis\r\n\r\nloop = asyncio.get_event_loop()\r\n\r\nasync def go():\r\n    redis = await aioredis.create_redis(\r\n        'redis://127.0.0.1:6379', loop=loop)\r\n    # Also tested with localhost as on examples\r\n    await redis.set('my-key', 'value')\r\n    val = await redis.get('my-key')\r\n    print(val)\r\n    redis.close()\r\n    await redis.wait_closed()\r\nloop.run_until_complete(go())\r\n```\r\n\r\nEnvironments tested:\r\n```\r\n1- VM clean setup (Ubuntu 16.04 64bits/ Python3.6)\r\n2- VM clean setup (Ubuntu 17.10 64bits/ Python3.6)\r\n3- MacOS Sierra (10.12.6/Python 3.6.1)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/333", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/333/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/333/events", "html_url": "https://github.com/aio-libs/aioredis/issues/333", "id": 274812506, "node_id": "MDU6SXNzdWUyNzQ4MTI1MDY=", "number": 333, "title": "create_connection doesn't create TCP connection if address is not tuple/list", "user": {"login": "olexandr-klymenko", "id": 2428944, "node_id": "MDQ6VXNlcjI0Mjg5NDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2428944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olexandr-klymenko", "html_url": "https://github.com/olexandr-klymenko", "followers_url": "https://api.github.com/users/olexandr-klymenko/followers", "following_url": "https://api.github.com/users/olexandr-klymenko/following{/other_user}", "gists_url": "https://api.github.com/users/olexandr-klymenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/olexandr-klymenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olexandr-klymenko/subscriptions", "organizations_url": "https://api.github.com/users/olexandr-klymenko/orgs", "repos_url": "https://api.github.com/users/olexandr-klymenko/repos", "events_url": "https://api.github.com/users/olexandr-klymenko/events{/privacy}", "received_events_url": "https://api.github.com/users/olexandr-klymenko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215493, "node_id": "MDU6TGFiZWwxMDIyMTU0OTM=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/invalid", "name": "invalid", "color": "e6e6e6", "default": true, "description": null}, {"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-17T10:05:08Z", "updated_at": "2017-11-17T10:42:18Z", "closed_at": "2017-11-17T10:42:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "To my surprise I've discovered that I can't create <b>TCP</b> connection with *URI* string as address.... What?\r\n```\r\n    if isinstance(address, (list, tuple)):\r\n        host, port = address\r\n        logger.debug(\"Creating tcp connection to %r\", address)\r\n        reader, writer = yield from asyncio.wait_for(asyncio.open_connection(\r\n            host, port, ssl=ssl, loop=loop), timeout, loop=loop)\r\n        sock = writer.transport.get_extra_info('socket')\r\n        if sock is not None:\r\n            sock.setsockopt(socket.IPPROTO_TCP, socket.TCP_NODELAY, 1)\r\n            address = sock.getpeername()\r\n        address = tuple(address[:2])\r\n    else:\r\n        logger.debug(\"Creating unix connection to %r\", address)\r\n        reader, writer = yield from asyncio.wait_for(\r\n            asyncio.open_unix_connection(address, ssl=ssl, loop=loop),\r\n            timeout, loop=loop)\r\n        sock = writer.transport.get_extra_info('socket')\r\n        if sock is not None:\r\n            address = sock.getpeername()\r\n    conn = RedisConnection(reader, writer, encoding=encoding,\r\n                           address=address, loop=loop)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/331", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/331/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/331/events", "html_url": "https://github.com/aio-libs/aioredis/issues/331", "id": 274054966, "node_id": "MDU6SXNzdWUyNzQwNTQ5NjY=", "number": 331, "title": "publish binary data will close the channel", "user": {"login": "DeoLeung", "id": 3764720, "node_id": "MDQ6VXNlcjM3NjQ3MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3764720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeoLeung", "html_url": "https://github.com/DeoLeung", "followers_url": "https://api.github.com/users/DeoLeung/followers", "following_url": "https://api.github.com/users/DeoLeung/following{/other_user}", "gists_url": "https://api.github.com/users/DeoLeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeoLeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeoLeung/subscriptions", "organizations_url": "https://api.github.com/users/DeoLeung/orgs", "repos_url": "https://api.github.com/users/DeoLeung/repos", "events_url": "https://api.github.com/users/DeoLeung/events{/privacy}", "received_events_url": "https://api.github.com/users/DeoLeung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-15T07:04:42Z", "updated_at": "2017-11-22T02:07:36Z", "closed_at": "2017-11-22T02:07:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "a quick description\r\n```python\r\ndata = ... # some binary data\r\nconn.publish('channel', data) # will close all subscribed channels\r\n\r\n# if we do a base64 on it, i works, though the data is still bytes\r\nimport base64\r\ndata = base64.64encode(data)\r\nconn.publish('channel', data)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/328", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/328/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/328/events", "html_url": "https://github.com/aio-libs/aioredis/issues/328", "id": 273887001, "node_id": "MDU6SXNzdWUyNzM4ODcwMDE=", "number": 328, "title": "Document how to run tests locally", "user": {"login": "adamrothman", "id": 662688, "node_id": "MDQ6VXNlcjY2MjY4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/662688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrothman", "html_url": "https://github.com/adamrothman", "followers_url": "https://api.github.com/users/adamrothman/followers", "following_url": "https://api.github.com/users/adamrothman/following{/other_user}", "gists_url": "https://api.github.com/users/adamrothman/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrothman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrothman/subscriptions", "organizations_url": "https://api.github.com/users/adamrothman/orgs", "repos_url": "https://api.github.com/users/adamrothman/repos", "events_url": "https://api.github.com/users/adamrothman/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrothman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-14T17:58:45Z", "updated_at": "2017-11-15T19:46:22Z", "closed_at": "2017-11-15T07:51:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This will make things much easier for contributors who are not already familiar with how to do so.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/324", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/324/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/324/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/324/events", "html_url": "https://github.com/aio-libs/aioredis/issues/324", "id": 273587076, "node_id": "MDU6SXNzdWUyNzM1ODcwNzY=", "number": 324, "title": "Can't pass bytearray as value to SET", "user": {"login": "adamrothman", "id": 662688, "node_id": "MDQ6VXNlcjY2MjY4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/662688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrothman", "html_url": "https://github.com/adamrothman", "followers_url": "https://api.github.com/users/adamrothman/followers", "following_url": "https://api.github.com/users/adamrothman/following{/other_user}", "gists_url": "https://api.github.com/users/adamrothman/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrothman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrothman/subscriptions", "organizations_url": "https://api.github.com/users/adamrothman/orgs", "repos_url": "https://api.github.com/users/adamrothman/repos", "events_url": "https://api.github.com/users/adamrothman/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrothman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215489, "node_id": "MDU6TGFiZWwxMDIyMTU0ODk=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 102215492, "node_id": "MDU6TGFiZWwxMDIyMTU0OTI=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10", "html_url": "https://github.com/aio-libs/aioredis/milestone/10", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10/labels", "id": 2244201, "node_id": "MDk6TWlsZXN0b25lMjI0NDIwMQ==", "number": 10, "title": "v1.0", "description": "Will bring refactored pool (backward incompatible), and Sentinel support.", "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 32, "state": "closed", "created_at": "2017-01-11T15:40:56Z", "updated_at": "2017-11-17T19:45:22Z", "due_on": "2017-11-17T08:00:00Z", "closed_at": "2017-11-17T19:45:22Z"}, "comments": 2, "created_at": "2017-11-13T21:38:51Z", "updated_at": "2017-11-15T08:18:34Z", "closed_at": "2017-11-15T08:18:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given that `bytes` can be used as arguments to Redis commands, it seems reasonable to also support `bytearray`.\r\n\r\nThis is currently impossible due to a check for `None` in the args to `RedisConnection::execute` which involves the creation of a set from said args. While I understand this optimization, it precludes the use of `bytearray` as it is not hashable (see below).\r\n\r\nNo Redis command accepts more than 10 or so args; just scanning the list without creating a set feels like an acceptable tradeoff.\r\n\r\n## Example\r\n\r\nHere's a snippet from an IPython session demonstrating the issue:\r\n\r\n```\r\nIn [6]: data\r\nOut[6]: bytearray(b'hello world')\r\n\r\nIn [7]: result = loop.run_until_complete(redis.set('some-sweet-key', data, expire=86400))\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-7-7f1e0c5ed0b8> in <module>()\r\n----> 1 result = loop.run_until_complete(redis.set('some-sweet-key', data, expire=86400))\r\n\r\n/usr/local/lib/python3.6/site-packages/aioredis/commands/string.py in set(self, key, value, expire, pexpire, exist)\r\n    184         elif exist is self.SET_IF_NOT_EXIST:\r\n    185             args.append(b'NX')\r\n--> 186         fut = self.execute(b'SET', key, value, *args)\r\n    187         return wait_ok(fut)\r\n    188 \r\n\r\n/usr/local/lib/python3.6/site-packages/aioredis/commands/__init__.py in execute(self, command, *args, **kwargs)\r\n     50 \r\n     51     def execute(self, command, *args, **kwargs):\r\n---> 52         return self._pool_or_conn.execute(command, *args, **kwargs)\r\n     53 \r\n     54     def close(self):\r\n\r\n/usr/local/lib/python3.6/site-packages/aioredis/pool.py in execute(self, command, *args, **kw)\r\n    200         conn, address = self.get_connection(command, args)\r\n    201         if conn is not None:\r\n--> 202             fut = conn.execute(command, *args, **kw)\r\n    203             return self._check_result(fut, command, args, kw)\r\n    204         else:\r\n\r\n/usr/local/lib/python3.6/site-packages/aioredis/connection.py in execute(self, command, encoding, *args)\r\n    261         if command is None:\r\n    262             raise TypeError(\"command must not be None\")\r\n--> 263         if None in set(args):\r\n    264             raise TypeError(\"args must not contain None\")\r\n    265         command = command.upper().strip()\r\n\r\nTypeError: unhashable type: 'bytearray'\r\n```\r\n\r\n## Environment\r\n\r\n* Python 3.6\r\n* aioredis 1.0.0b2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/320", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/320/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/320/events", "html_url": "https://github.com/aio-libs/aioredis/issues/320", "id": 272341930, "node_id": "MDU6SXNzdWUyNzIzNDE5MzA=", "number": 320, "title": "Redis 4.0.2 support", "user": {"login": "kamikaze", "id": 52880, "node_id": "MDQ6VXNlcjUyODgw", "avatar_url": "https://avatars2.githubusercontent.com/u/52880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamikaze", "html_url": "https://github.com/kamikaze", "followers_url": "https://api.github.com/users/kamikaze/followers", "following_url": "https://api.github.com/users/kamikaze/following{/other_user}", "gists_url": "https://api.github.com/users/kamikaze/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamikaze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamikaze/subscriptions", "organizations_url": "https://api.github.com/users/kamikaze/orgs", "repos_url": "https://api.github.com/users/kamikaze/repos", "events_url": "https://api.github.com/users/kamikaze/events{/privacy}", "received_events_url": "https://api.github.com/users/kamikaze/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-08T20:41:14Z", "updated_at": "2017-11-09T08:44:00Z", "closed_at": "2017-11-09T08:44:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Was it tested against redis 4.0 ? I see only 3.2 in docs", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/318", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/318/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/318/events", "html_url": "https://github.com/aio-libs/aioredis/issues/318", "id": 271936044, "node_id": "MDU6SXNzdWUyNzE5MzYwNDQ=", "number": 318, "title": "Protect master branch", "user": {"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-07T18:29:36Z", "updated_at": "2017-11-07T19:29:30Z", "closed_at": "2017-11-07T19:06:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As we did for aiohttp.\r\n\r\nA PR with failed tests cannot be merged.\r\nPR without review cannot be merged (but @popravich as admin can ignore it :)\r\nThe most important thing is a button for re-merging the master is the master branch was updated after the last PR commit.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/315", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/315/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/315/events", "html_url": "https://github.com/aio-libs/aioredis/issues/315", "id": 271688474, "node_id": "MDU6SXNzdWUyNzE2ODg0NzQ=", "number": 315, "title": "CancelledError cannot be handled properly ,when i use websocket.", "user": {"login": "larry-dev", "id": 18585750, "node_id": "MDQ6VXNlcjE4NTg1NzUw", "avatar_url": "https://avatars3.githubusercontent.com/u/18585750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larry-dev", "html_url": "https://github.com/larry-dev", "followers_url": "https://api.github.com/users/larry-dev/followers", "following_url": "https://api.github.com/users/larry-dev/following{/other_user}", "gists_url": "https://api.github.com/users/larry-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/larry-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larry-dev/subscriptions", "organizations_url": "https://api.github.com/users/larry-dev/orgs", "repos_url": "https://api.github.com/users/larry-dev/repos", "events_url": "https://api.github.com/users/larry-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/larry-dev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-07T02:23:30Z", "updated_at": "2017-11-08T15:21:25Z", "closed_at": "2017-11-07T08:10:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi @popravich \r\nour application the user access using realtime mode. \r\nWe have a scenario that requires the user to close the application and continue processing the data.\r\nbut the user close application threw cancelled from aioredis.\r\n\r\nCan you tell me how to ignore this mistake by the aioredis?\r\nThanks very much!!!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/312", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/312/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/312/events", "html_url": "https://github.com/aio-libs/aioredis/issues/312", "id": 271157703, "node_id": "MDU6SXNzdWUyNzExNTc3MDM=", "number": 312, "title": "Missing PyPI classifier for Python 3.6 support", "user": {"login": "samueldg", "id": 4542383, "node_id": "MDQ6VXNlcjQ1NDIzODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4542383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueldg", "html_url": "https://github.com/samueldg", "followers_url": "https://api.github.com/users/samueldg/followers", "following_url": "https://api.github.com/users/samueldg/following{/other_user}", "gists_url": "https://api.github.com/users/samueldg/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueldg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueldg/subscriptions", "organizations_url": "https://api.github.com/users/samueldg/orgs", "repos_url": "https://api.github.com/users/samueldg/repos", "events_url": "https://api.github.com/users/samueldg/events{/privacy}", "received_events_url": "https://api.github.com/users/samueldg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-04T01:47:09Z", "updated_at": "2017-11-04T18:30:45Z", "closed_at": "2017-11-04T18:30:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Currently, the PyPI page shows the following as supported:\r\n\r\n> Programming Language :: Python\r\n> Programming Language :: Python :: 3\r\n> Programming Language :: Python :: 3.3\r\n> Programming Language :: Python :: 3.4\r\n> Programming Language :: Python :: 3.5\r\n\r\nHowever, Python 3.6 is part of the automated tests, and the README states it is supported,\r\nso I'm presuming this is just an omission.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/310", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/310/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/310/events", "html_url": "https://github.com/aio-libs/aioredis/issues/310", "id": 269777141, "node_id": "MDU6SXNzdWUyNjk3NzcxNDE=", "number": 310, "title": "Subscribe to same channel multiple times", "user": {"login": "DurandA", "id": 3709037, "node_id": "MDQ6VXNlcjM3MDkwMzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/3709037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DurandA", "html_url": "https://github.com/DurandA", "followers_url": "https://api.github.com/users/DurandA/followers", "following_url": "https://api.github.com/users/DurandA/following{/other_user}", "gists_url": "https://api.github.com/users/DurandA/gists{/gist_id}", "starred_url": "https://api.github.com/users/DurandA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DurandA/subscriptions", "organizations_url": "https://api.github.com/users/DurandA/orgs", "repos_url": "https://api.github.com/users/DurandA/repos", "events_url": "https://api.github.com/users/DurandA/events{/privacy}", "received_events_url": "https://api.github.com/users/DurandA/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-10-30T22:37:46Z", "updated_at": "2017-11-01T15:20:23Z", "closed_at": "2017-11-01T14:54:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "When calling `subscribe()` on same connection multiple times, the message is available only on first wait_message() and is subsequently unavailable to other readers.\r\n\r\nWe can demonstrate it with a simple example:\r\n```python\r\nimport asyncio\r\nimport aioredis\r\n\r\nloop = asyncio.get_event_loop()\r\n\r\nasync def reader(ch):\r\n    while (await ch.wait_message()):\r\n        msg = await ch.get_json()\r\n        print(\"Got Message:\", msg)\r\n\r\nasync def main():\r\n    pub = await aioredis.create_redis(\r\n        ('localhost', 6379))\r\n    sub = await aioredis.create_redis(\r\n        ('localhost', 6379))\r\n    res1 = await sub.subscribe('chan:1')\r\n    ch1 = res1[0]\r\n    res2 = await sub.subscribe('chan:1')\r\n    ch2 = res2[0]\r\n\r\n    tsk = asyncio.ensure_future(reader(ch1))\r\n    tsk = asyncio.ensure_future(reader(ch2))\r\n\r\n    res = await pub.publish_json('chan:1', [\"Hello\", \"world\"])\r\n\r\nloop.run_until_complete(main())\r\nloop.run_forever()\r\n```\r\n\r\nThis output `Got Message: ['Hello', 'world']` once while I expected each reader to be able to get every message. Is this behavior intended?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/306", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/306/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/306/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/306/events", "html_url": "https://github.com/aio-libs/aioredis/issues/306", "id": 267401206, "node_id": "MDU6SXNzdWUyNjc0MDEyMDY=", "number": 306, "title": "undistinguishable command future cancellation", "user": {"login": "sebbov", "id": 13932406, "node_id": "MDQ6VXNlcjEzOTMyNDA2", "avatar_url": "https://avatars3.githubusercontent.com/u/13932406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebbov", "html_url": "https://github.com/sebbov", "followers_url": "https://api.github.com/users/sebbov/followers", "following_url": "https://api.github.com/users/sebbov/following{/other_user}", "gists_url": "https://api.github.com/users/sebbov/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebbov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebbov/subscriptions", "organizations_url": "https://api.github.com/users/sebbov/orgs", "repos_url": "https://api.github.com/users/sebbov/repos", "events_url": "https://api.github.com/users/sebbov/events{/privacy}", "received_events_url": "https://api.github.com/users/sebbov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215489, "node_id": "MDU6TGFiZWwxMDIyMTU0ODk=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10", "html_url": "https://github.com/aio-libs/aioredis/milestone/10", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10/labels", "id": 2244201, "node_id": "MDk6TWlsZXN0b25lMjI0NDIwMQ==", "number": 10, "title": "v1.0", "description": "Will bring refactored pool (backward incompatible), and Sentinel support.", "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 32, "state": "closed", "created_at": "2017-01-11T15:40:56Z", "updated_at": "2017-11-17T19:45:22Z", "due_on": "2017-11-17T08:00:00Z", "closed_at": "2017-11-17T19:45:22Z"}, "comments": 2, "created_at": "2017-10-21T17:59:34Z", "updated_at": "2017-11-09T11:39:18Z", "closed_at": "2017-11-09T11:39:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following two cases are indistinguishable from a caller's perspective, when using a reconnecting client:\r\n\r\n1. The command future was externally (by the application, possibly a higher layer one) canceled:\r\nhttps://github.com/honzasp/aioredis/blob/master/aioredis/connection.py#L169\r\n\r\n2. The read had an otherwise unhandled exception (incl in our case an unexpected, externally (network/server) initiated connection reset, `ConnectionResetError` exception):\r\nhttps://github.com/honzasp/aioredis/blob/master/aioredis/connection.py#L179\r\n(The XXX may indicate remaining work in this area that concerns the issue at hand.)\r\nIn this case, the connection ends up being closed and the waiters / command futures cancelled (whereas the expectation here would be to have a non-`asyncio.CancelledError` set on the future).\r\n\r\nIn both cases, the future returned by `aioredis` will be observed to have been canceled.\r\n\r\nIn the case of a non-reconnecting (normal) client, a canceled future due to the above can differentiate between both 1. and 2. by looking at the `client.closed` attribute.  No such luck for a reconnecting client, which always announces `client.closed = False`. If the suggested fix above isn't doable, exposing the state of the wrapped connection (e.g. a `was_closed`) in the auto-reconnecting client would still be allow to make this differentiation, and thus provide a way out.\r\n\r\nthanks!\r\n-seb.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/304", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/304/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/304/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/304/events", "html_url": "https://github.com/aio-libs/aioredis/issues/304", "id": 264864376, "node_id": "MDU6SXNzdWUyNjQ4NjQzNzY=", "number": 304, "title": "Let's drop Python 3.3 & 3.4 support", "user": {"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215491, "node_id": "MDU6TGFiZWwxMDIyMTU0OTE=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 102215492, "node_id": "MDU6TGFiZWwxMDIyMTU0OTI=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10", "html_url": "https://github.com/aio-libs/aioredis/milestone/10", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10/labels", "id": 2244201, "node_id": "MDk6TWlsZXN0b25lMjI0NDIwMQ==", "number": 10, "title": "v1.0", "description": "Will bring refactored pool (backward incompatible), and Sentinel support.", "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 32, "state": "closed", "created_at": "2017-01-11T15:40:56Z", "updated_at": "2017-11-17T19:45:22Z", "due_on": "2017-11-17T08:00:00Z", "closed_at": "2017-11-17T19:45:22Z"}, "comments": 5, "created_at": "2017-10-12T09:02:06Z", "updated_at": "2017-11-14T09:10:39Z", "closed_at": "2017-11-14T09:10:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Python 3.3 is too old and not maintained anymore.\r\nI doubt if anybody runs aioredis on this version.\r\n\r\nHonestly it's time to drop 3.4 too -- the next aiohttp release most likely will support python 3.5+ only. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/296", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/296/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/296/events", "html_url": "https://github.com/aio-libs/aioredis/issues/296", "id": 261421680, "node_id": "MDU6SXNzdWUyNjE0MjE2ODA=", "number": 296, "title": "Pool API doesn't seem to match example", "user": {"login": "zbuc", "id": 570040, "node_id": "MDQ6VXNlcjU3MDA0MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/570040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zbuc", "html_url": "https://github.com/zbuc", "followers_url": "https://api.github.com/users/zbuc/followers", "following_url": "https://api.github.com/users/zbuc/following{/other_user}", "gists_url": "https://api.github.com/users/zbuc/gists{/gist_id}", "starred_url": "https://api.github.com/users/zbuc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zbuc/subscriptions", "organizations_url": "https://api.github.com/users/zbuc/orgs", "repos_url": "https://api.github.com/users/zbuc/repos", "events_url": "https://api.github.com/users/zbuc/events{/privacy}", "received_events_url": "https://api.github.com/users/zbuc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-28T18:46:14Z", "updated_at": "2017-09-28T21:16:29Z", "closed_at": "2017-09-28T21:16:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "On the landing page for this repository, there's an example of using a pool within aioredis:\r\n\r\n```\r\nimport asyncio\r\nimport aioredis\r\n\r\nloop = asyncio.get_event_loop()\r\n\r\nasync def go():\r\n    pool = await aioredis.create_pool(\r\n        ('localhost', 6379),\r\n        minsize=5, maxsize=10,\r\n        loop=loop)\r\n    await pool.execute('set', 'my-key', 'value')\r\n    print(await pool.execute('get', 'my-key'))\r\n    # graceful shutdown\r\n    pool.close()\r\n    await pool.wait_closed()\r\n\r\nloop.run_until_complete(go())\r\n```\r\n\r\nHowever, when I try running this example, I receive the following error:\r\n\r\n```\r\n$ python redistest.py\r\nTraceback (most recent call last):\r\n  File \"redistest.py\", line 17, in <module>\r\n    loop.run_until_complete(go())\r\n  File \"/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/base_events.py\", line 467, in run_until_complete\r\n    return future.result()\r\n  File \"redistest.py\", line 11, in go\r\n    await pool.execute('set', 'my-key', 'value')\r\nAttributeError: 'RedisPool' object has no attribute 'execute'\r\n```\r\n\r\nThis is with `aioredis==1.0.0b2` from PyPI.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/292", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/292/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/292/events", "html_url": "https://github.com/aio-libs/aioredis/issues/292", "id": 258719000, "node_id": "MDU6SXNzdWUyNTg3MTkwMDA=", "number": 292, "title": "CancelledError in conn._reader_task", "user": {"login": "honzasp", "id": 64298, "node_id": "MDQ6VXNlcjY0Mjk4", "avatar_url": "https://avatars2.githubusercontent.com/u/64298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honzasp", "html_url": "https://github.com/honzasp", "followers_url": "https://api.github.com/users/honzasp/followers", "following_url": "https://api.github.com/users/honzasp/following{/other_user}", "gists_url": "https://api.github.com/users/honzasp/gists{/gist_id}", "starred_url": "https://api.github.com/users/honzasp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honzasp/subscriptions", "organizations_url": "https://api.github.com/users/honzasp/orgs", "repos_url": "https://api.github.com/users/honzasp/repos", "events_url": "https://api.github.com/users/honzasp/events{/privacy}", "received_events_url": "https://api.github.com/users/honzasp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-09-19T07:15:57Z", "updated_at": "2017-10-23T07:36:44Z", "closed_at": "2017-10-23T07:36:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using a connection pool created with `aioredis.create_redis_pool` and I regularly get a warning from asyncio about unhandled `CancelledError`:\r\n\r\n```\r\nERROR asyncio: Task exception was never retrieved\r\nfuture: <Task finished coro=<RedisConnection._read_data() done, defined at aioredis/connection.py:161> exception=CancelledError()>\r\nconcurrent.futures._base.CancelledError\r\n```\r\n\r\nDigging deeper, I reconstructed the problem as follows:\r\n1. A connection is created and used\r\n2. The connection is not used for some time, and the Redis server disconnects (we connect to AWS ElastiCache)\r\n3. `RedisConnection._read_data()` detects that the server disconnected (triggering the `Connection has been closed by server` debug log) and breaks the loop, calling `self._do_close`\r\n4. `_do_close()` closes the connection, and calls `_reader_task.cancel()`\r\n5. `_read_data()` immediately returns (in the same \"tick\" of the event loop), and finishes `_reader_task`\r\n\r\nNow, `_reader_task` is done, but with `CancelledError` set as exception. However, this exception is not detected anywhere and asyncio produces the warning described above.\r\n\r\n---\r\n\r\nI think this points to two potential problems (and their solutions):\r\n1. When `_read_data()` decides to close the connection, it should call `loop.call_sonn(self._do_close, exc)`, so that `_read_data()` returns and `_reader_task` finishes before `_do_close()` attempts to cancel the task.\r\n2. If `_reader_task` exits with an exception, it is completely ignored. However, I am not sure as to what the expected behaviour should be:\r\n   - Calling `_do_close()` with the exception is probably not desirable, because an exception here signifies a bug in `aioredis` and not an error in the user code. Moreover, the connection may have already closed, which would mean that the exception would be lost silently.\r\n   - Logging the exception to the aioredis logger would mean that most of the time, the exception would be lost without any trace.\r\n   - Relying on the asyncio `exception was never retrieved` warning may ignore the exception if the user disables the debug mode of asyncio.\r\n\r\nI am happy to contribute a PR fixing (1) and possibly (2), but I will be grateful for an advice how to test for this kind of error?\r\n\r\nEDIT: I am using Python 3.6.2, uvloop 0.8.0 and aioredis 1.0.0b2.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/285", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/285/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/285/events", "html_url": "https://github.com/aio-libs/aioredis/issues/285", "id": 250301522, "node_id": "MDU6SXNzdWUyNTAzMDE1MjI=", "number": 285, "title": "When use pool.eval together with pool.brpop, blocks quit often", "user": {"login": "yangbo1024", "id": 30541127, "node_id": "MDQ6VXNlcjMwNTQxMTI3", "avatar_url": "https://avatars1.githubusercontent.com/u/30541127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yangbo1024", "html_url": "https://github.com/yangbo1024", "followers_url": "https://api.github.com/users/yangbo1024/followers", "following_url": "https://api.github.com/users/yangbo1024/following{/other_user}", "gists_url": "https://api.github.com/users/yangbo1024/gists{/gist_id}", "starred_url": "https://api.github.com/users/yangbo1024/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yangbo1024/subscriptions", "organizations_url": "https://api.github.com/users/yangbo1024/orgs", "repos_url": "https://api.github.com/users/yangbo1024/repos", "events_url": "https://api.github.com/users/yangbo1024/events{/privacy}", "received_events_url": "https://api.github.com/users/yangbo1024/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215489, "node_id": "MDU6TGFiZWwxMDIyMTU0ODk=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10", "html_url": "https://github.com/aio-libs/aioredis/milestone/10", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10/labels", "id": 2244201, "node_id": "MDk6TWlsZXN0b25lMjI0NDIwMQ==", "number": 10, "title": "v1.0", "description": "Will bring refactored pool (backward incompatible), and Sentinel support.", "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 32, "state": "closed", "created_at": "2017-01-11T15:40:56Z", "updated_at": "2017-11-17T19:45:22Z", "due_on": "2017-11-17T08:00:00Z", "closed_at": "2017-11-17T19:45:22Z"}, "comments": 4, "created_at": "2017-08-15T12:33:18Z", "updated_at": "2018-02-09T22:37:52Z", "closed_at": "2017-11-17T19:44:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "pool = await aioredis.create_redis_pool((host, port), db=db, password=password, minsize=2, maxsize=3)\r\n\r\non coroutine run a while 1 loop to brpop, some 5 other coroutines run a same function, just call eval, then the whole pool may blocked\r\n\r\nCODE:\r\n\r\n```\r\n\r\n\r\nLOCK_SCRIPT = b\"\"\"\r\nredis.call(\"lpush\", KEYS[1], KEYS[2])\r\nif redis.call(\"llen\", KEYS[1]) <= 1 then\r\n    redis.call(\"lpush\", KEYS[2], KEYS[1])\r\n    return {KEYS[1], 0}\r\nelse\r\n    return {KEYS[1], redis.call(\"llen\", KEYS[1])}\r\nend\r\n\"\"\"\r\n\r\n\r\n\r\nUNLOCK_SCRIPT = b\"\"\"\r\nredis.call(\"rpop\", KEYS[1])\r\nif redis.call(\"llen\", KEYS[1]) > 0 then\r\n    local k = redis.call(\"lindex\", KEYS[1], -1)\r\n    redis.call(\"lpush\", k, KEYS[1])\r\nend\r\nreturn redis.call(\"llen\", KEYS[1])\r\n\"\"\"\r\n\r\n\r\nimport asyncio\r\nimport aioredis\r\nimport random\r\n\r\n\r\nhost = '10.0.30.26'\r\nport = 20100\r\npassword = '11111111'\r\nminsize=3\r\nmaxsize=3\r\ndb = 10\r\nch = 'abcde'\r\nlock_name = 'test_lock'\r\n_redis_pool = None\r\n_locks = {}\r\n\r\n\r\nasync def init():\r\n    global _redis_pool\r\n    _redis_pool = await aioredis.create_redis_pool((host, port), db=db, password=password, minsize=minsize, maxsize=maxsize)\r\n    await _redis_pool.delete('test_lock')\r\n\r\n\r\nasync def lock(i):\r\n    print('into lock', i)\r\n    await asyncio.sleep(random.uniform(0, 0.01))\r\n    if lock_name not in _locks:\r\n        _locks[lock_name] = asyncio.Queue()\r\n    q = _locks[lock_name]\r\n    await _redis_pool.eval(LOCK_SCRIPT, keys=[lock_name, ch])\r\n    await q.get()\r\n    asyncio.ensure_future(unlock(i))\r\n\r\n\r\nasync def unlock(i):\r\n    print('into unlock', i)\r\n    await _redis_pool.eval(UNLOCK_SCRIPT, keys =[lock_name])\r\n\r\n\r\nasync def recv():\r\n    while 1:\r\n        msg = await _redis_pool.brpop(ch)\r\n        lock_name = str(msg[1], 'utf8')\r\n        q = _locks[lock_name]\r\n        print('brpop', lock_name, q)\r\n        q.put_nowait(1)\r\n\r\n\r\nasyncio.get_event_loop().run_until_complete(init())\r\ntasks = [lock(i) for i in range(5)]\r\ntasks.append(recv())\r\nw = asyncio.wait(tasks)\r\nasyncio.get_event_loop().run_until_complete(w)\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/278", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/278/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/278/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/278/events", "html_url": "https://github.com/aio-libs/aioredis/issues/278", "id": 247958121, "node_id": "MDU6SXNzdWUyNDc5NTgxMjE=", "number": 278, "title": "Error when using loop.create_task, no error with asyncio.ensure_future", "user": {"login": "Julien00859", "id": 8208953, "node_id": "MDQ6VXNlcjgyMDg5NTM=", "avatar_url": "https://avatars2.githubusercontent.com/u/8208953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Julien00859", "html_url": "https://github.com/Julien00859", "followers_url": "https://api.github.com/users/Julien00859/followers", "following_url": "https://api.github.com/users/Julien00859/following{/other_user}", "gists_url": "https://api.github.com/users/Julien00859/gists{/gist_id}", "starred_url": "https://api.github.com/users/Julien00859/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Julien00859/subscriptions", "organizations_url": "https://api.github.com/users/Julien00859/orgs", "repos_url": "https://api.github.com/users/Julien00859/repos", "events_url": "https://api.github.com/users/Julien00859/events{/privacy}", "received_events_url": "https://api.github.com/users/Julien00859/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-04T09:54:21Z", "updated_at": "2017-08-04T22:37:06Z", "closed_at": "2017-08-04T22:37:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure this issue is due to my incorrect understand of asyncio or if it is an error in aioredis or python itself. What I'm sure is the following code raised a strange exception (I've use the env var `PYTHONASYNCIODEBUG` to get the complete output)\r\n\r\n    loop = asyncio.get_event_loop()\r\n    loop.create_task(shared.redis.sadd(f\"games:{game_id}:players\", *players_ids))\r\n\r\n\tTask exception was never retrieved\r\n\tfuture: Exception in __repr__ AssertionError(); value type: <class '_asyncio.Task'>\r\n\tsource_traceback: Object created at (most recent call last):\r\n\t  File \"./start.py\", line 297, in <module>\r\n\t    main()\r\n\t  File \"./start.py\", line 266, in main\r\n\t    loop.run_until_complete(stop)\r\n\t  File \"/home/julien/Projets/WebGames/manager/games.py\", line 27, in ready_check\r\n\t    loop.create_task(shared.redis.sadd(f\"games:{game_id}:players\", *players_ids))\r\n\tAttributeError: '_asyncio.Future' object has no attribute 'send'\r\n\r\nbut not the following one\r\n\r\n    asyncio.ensure_future(shared.redis.sadd(f\"games:{game_id}:players\", *players_ids))\r\n\r\nI read around about ensure_future and create_task and I don't understand why the first one failed whereas the second succeeded. If anyone could explain it.\r\n\r\nA more complete output can be found [here](https://github.com/EPHEC-TI/WebGames/issues/24)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/271", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/271/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/271/events", "html_url": "https://github.com/aio-libs/aioredis/issues/271", "id": 244303587, "node_id": "MDU6SXNzdWUyNDQzMDM1ODc=", "number": 271, "title": "Implement custom StreamReader", "user": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215491, "node_id": "MDU6TGFiZWwxMDIyMTU0OTE=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 102945474, "node_id": "MDU6TGFiZWwxMDI5NDU0NzQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/task", "name": "task", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10", "html_url": "https://github.com/aio-libs/aioredis/milestone/10", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10/labels", "id": 2244201, "node_id": "MDk6TWlsZXN0b25lMjI0NDIwMQ==", "number": 10, "title": "v1.0", "description": "Will bring refactored pool (backward incompatible), and Sentinel support.", "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 32, "state": "closed", "created_at": "2017-01-11T15:40:56Z", "updated_at": "2017-11-17T19:45:22Z", "due_on": "2017-11-17T08:00:00Z", "closed_at": "2017-11-17T19:45:22Z"}, "comments": 4, "created_at": "2017-07-20T09:44:22Z", "updated_at": "2017-11-09T11:09:07Z", "closed_at": "2017-11-09T11:08:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Rationale:\r\n* Get rid of bouble buffering (`data from socket -> asyncio.StreamReader.buffer -> hiredis.Reader.buffer`);\r\n  our StreamReader can feed data directly to parser (hiredis or PyReader);\r\n* Step over this issue \u2014 http://bugs.python.org/issue30861;\r\n\r\nSome specs:\r\n* must inherit from `asyncio.StreamReader`;\r\n* `read...`-family functions should probably raise an error (RuntimeError);\r\n* provide `async def read_response()` method waiting and returning either valid response\r\nor raising an error (protocol error, canceled, closed, etc) (maybe some other method name);", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/268", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/268/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/268/events", "html_url": "https://github.com/aio-libs/aioredis/issues/268", "id": 243212895, "node_id": "MDU6SXNzdWUyNDMyMTI4OTU=", "number": 268, "title": "LOADING Redis is loading the dataset in memory", "user": {"login": "vgoklani", "id": 180487, "node_id": "MDQ6VXNlcjE4MDQ4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/180487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vgoklani", "html_url": "https://github.com/vgoklani", "followers_url": "https://api.github.com/users/vgoklani/followers", "following_url": "https://api.github.com/users/vgoklani/following{/other_user}", "gists_url": "https://api.github.com/users/vgoklani/gists{/gist_id}", "starred_url": "https://api.github.com/users/vgoklani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vgoklani/subscriptions", "organizations_url": "https://api.github.com/users/vgoklani/orgs", "repos_url": "https://api.github.com/users/vgoklani/repos", "events_url": "https://api.github.com/users/vgoklani/events{/privacy}", "received_events_url": "https://api.github.com/users/vgoklani/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-16T02:36:21Z", "updated_at": "2017-08-17T10:51:40Z", "closed_at": "2017-08-17T10:51:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "What's the best way of handling this exception? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/267", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/267/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/267/events", "html_url": "https://github.com/aio-libs/aioredis/issues/267", "id": 243167442, "node_id": "MDU6SXNzdWUyNDMxNjc0NDI=", "number": 267, "title": "1.0 release", "user": {"login": "asvetlov", "id": 356399, "node_id": "MDQ6VXNlcjM1NjM5OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/356399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asvetlov", "html_url": "https://github.com/asvetlov", "followers_url": "https://api.github.com/users/asvetlov/followers", "following_url": "https://api.github.com/users/asvetlov/following{/other_user}", "gists_url": "https://api.github.com/users/asvetlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/asvetlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asvetlov/subscriptions", "organizations_url": "https://api.github.com/users/asvetlov/orgs", "repos_url": "https://api.github.com/users/asvetlov/repos", "events_url": "https://api.github.com/users/asvetlov/events{/privacy}", "received_events_url": "https://api.github.com/users/asvetlov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10", "html_url": "https://github.com/aio-libs/aioredis/milestone/10", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10/labels", "id": 2244201, "node_id": "MDk6TWlsZXN0b25lMjI0NDIwMQ==", "number": 10, "title": "v1.0", "description": "Will bring refactored pool (backward incompatible), and Sentinel support.", "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 32, "state": "closed", "created_at": "2017-01-11T15:40:56Z", "updated_at": "2017-11-17T19:45:22Z", "due_on": "2017-11-17T08:00:00Z", "closed_at": "2017-11-17T19:45:22Z"}, "comments": 5, "created_at": "2017-07-15T10:34:14Z", "updated_at": "2017-11-17T22:12:59Z", "closed_at": "2017-11-17T19:44:13Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "1.0 beta has very handy `aioredis.create_redis_pool()` API.\r\n@popravich do you have a schedule for 1.0 release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/266", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/266/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/266/events", "html_url": "https://github.com/aio-libs/aioredis/issues/266", "id": 242930334, "node_id": "MDU6SXNzdWUyNDI5MzAzMzQ=", "number": 266, "title": "TypeError in to_time function in server.py 218, which is callde by time command", "user": {"login": "liguangyulgy", "id": 24953536, "node_id": "MDQ6VXNlcjI0OTUzNTM2", "avatar_url": "https://avatars2.githubusercontent.com/u/24953536?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liguangyulgy", "html_url": "https://github.com/liguangyulgy", "followers_url": "https://api.github.com/users/liguangyulgy/followers", "following_url": "https://api.github.com/users/liguangyulgy/following{/other_user}", "gists_url": "https://api.github.com/users/liguangyulgy/gists{/gist_id}", "starred_url": "https://api.github.com/users/liguangyulgy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liguangyulgy/subscriptions", "organizations_url": "https://api.github.com/users/liguangyulgy/orgs", "repos_url": "https://api.github.com/users/liguangyulgy/repos", "events_url": "https://api.github.com/users/liguangyulgy/events{/privacy}", "received_events_url": "https://api.github.com/users/liguangyulgy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215489, "node_id": "MDU6TGFiZWwxMDIyMTU0ODk=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2017-07-14T08:24:37Z", "updated_at": "2017-10-25T07:40:22Z", "closed_at": "2017-10-25T07:40:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "def to_time(obj):\r\n    return float(obj[0] + _**b'.'**_ + obj[1].zfill(6))\r\n\r\nthe dot should be a **String** other than a **Byte**, or the function will raise TypeError: must be str, not bytes  in Python 3.6.0 (v3.6.0:41df79263a11, Dec 23 2016, 08:06:12) [MSC v.1900 64 bit (AMD64)] on win32\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/265", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/265/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/265/events", "html_url": "https://github.com/aio-libs/aioredis/issues/265", "id": 241557548, "node_id": "MDU6SXNzdWUyNDE1NTc1NDg=", "number": 265, "title": "hgetall returns a list instead of a dict ", "user": {"login": "vgoklani", "id": 180487, "node_id": "MDQ6VXNlcjE4MDQ4Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/180487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vgoklani", "html_url": "https://github.com/vgoklani", "followers_url": "https://api.github.com/users/vgoklani/followers", "following_url": "https://api.github.com/users/vgoklani/following{/other_user}", "gists_url": "https://api.github.com/users/vgoklani/gists{/gist_id}", "starred_url": "https://api.github.com/users/vgoklani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vgoklani/subscriptions", "organizations_url": "https://api.github.com/users/vgoklani/orgs", "repos_url": "https://api.github.com/users/vgoklani/repos", "events_url": "https://api.github.com/users/vgoklani/events{/privacy}", "received_events_url": "https://api.github.com/users/vgoklani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-09T21:16:47Z", "updated_at": "2017-07-10T03:42:14Z", "closed_at": "2017-07-10T03:42:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the latest release, hgetall returns a list instead of a dict. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/258", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/258/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/258/events", "html_url": "https://github.com/aio-libs/aioredis/issues/258", "id": 239719374, "node_id": "MDU6SXNzdWUyMzk3MTkzNzQ=", "number": 258, "title": "What's changed in 0.3.3?", "user": {"login": "samuelcolvin", "id": 4039449, "node_id": "MDQ6VXNlcjQwMzk0NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4039449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelcolvin", "html_url": "https://github.com/samuelcolvin", "followers_url": "https://api.github.com/users/samuelcolvin/followers", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-06-30T09:04:41Z", "updated_at": "2017-07-12T07:36:28Z", "closed_at": "2017-07-12T07:36:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "v0.3.3 has no release or tag so I can't find which commit it refers to and there's no reference to it in CHANGES.txt.\r\n\r\nBefore I upgrade, please can you describe what has changed and/or add a tag referring to the release?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/249", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/249/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/249/events", "html_url": "https://github.com/aio-libs/aioredis/issues/249", "id": 237200849, "node_id": "MDU6SXNzdWUyMzcyMDA4NDk=", "number": 249, "title": "PING command should work in SUBSCRIBE mode", "user": {"login": "thomasst", "id": 68381, "node_id": "MDQ6VXNlcjY4Mzgx", "avatar_url": "https://avatars1.githubusercontent.com/u/68381?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasst", "html_url": "https://github.com/thomasst", "followers_url": "https://api.github.com/users/thomasst/followers", "following_url": "https://api.github.com/users/thomasst/following{/other_user}", "gists_url": "https://api.github.com/users/thomasst/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasst/subscriptions", "organizations_url": "https://api.github.com/users/thomasst/orgs", "repos_url": "https://api.github.com/users/thomasst/repos", "events_url": "https://api.github.com/users/thomasst/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215489, "node_id": "MDU6TGFiZWwxMDIyMTU0ODk=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 102945474, "node_id": "MDU6TGFiZWwxMDI5NDU0NzQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/task", "name": "task", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-06-20T12:59:13Z", "updated_at": "2017-09-26T06:51:34Z", "closed_at": "2017-09-26T06:51:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Redis supports PING in SUBSCRIBE mode (see https://redis.io/commands/ping for details) but aioredis unexpectedly fails with `aioredis.errors.RedisError: Connection in SUBSCRIBE mode`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/247", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/247/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/247/events", "html_url": "https://github.com/aio-libs/aioredis/issues/247", "id": 235793978, "node_id": "MDU6SXNzdWUyMzU3OTM5Nzg=", "number": 247, "title": "await redis.hgetall(key) rasie concurrent.futures._base.CancelledError", "user": {"login": "larry-dev", "id": 18585750, "node_id": "MDQ6VXNlcjE4NTg1NzUw", "avatar_url": "https://avatars3.githubusercontent.com/u/18585750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/larry-dev", "html_url": "https://github.com/larry-dev", "followers_url": "https://api.github.com/users/larry-dev/followers", "following_url": "https://api.github.com/users/larry-dev/following{/other_user}", "gists_url": "https://api.github.com/users/larry-dev/gists{/gist_id}", "starred_url": "https://api.github.com/users/larry-dev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/larry-dev/subscriptions", "organizations_url": "https://api.github.com/users/larry-dev/orgs", "repos_url": "https://api.github.com/users/larry-dev/repos", "events_url": "https://api.github.com/users/larry-dev/events{/privacy}", "received_events_url": "https://api.github.com/users/larry-dev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-14T07:59:41Z", "updated_at": "2017-06-14T11:33:24Z", "closed_at": "2017-06-14T11:33:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "`result = await redis.hgetall(key)`\r\nthis key in the 'redis\u2018\r\n\r\nbut raise concurrent.futures._base.CancelledError:\r\n`Unable to display children:Error resolving variables Traceback (most recent call last):\r\n  File \"/Users/ss/Documents/ykrealtime/rtgame/logics/userlogic.py\", line 100, in leave_room\r\n    result = await redis.hgetall(key)\r\n  File \"/Users/ss/Documents/ykrealtime/venv/lib/python3.6/site-packages/aioredis/util.py\", line 77, in wait_make_dict\r\n    res = yield from fut`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/242", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/242/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/242/events", "html_url": "https://github.com/aio-libs/aioredis/issues/242", "id": 234422661, "node_id": "MDU6SXNzdWUyMzQ0MjI2NjE=", "number": 242, "title": "random errors", "user": {"login": "DeoLeung", "id": 3764720, "node_id": "MDQ6VXNlcjM3NjQ3MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3764720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeoLeung", "html_url": "https://github.com/DeoLeung", "followers_url": "https://api.github.com/users/DeoLeung/followers", "following_url": "https://api.github.com/users/DeoLeung/following{/other_user}", "gists_url": "https://api.github.com/users/DeoLeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeoLeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeoLeung/subscriptions", "organizations_url": "https://api.github.com/users/DeoLeung/orgs", "repos_url": "https://api.github.com/users/DeoLeung/repos", "events_url": "https://api.github.com/users/DeoLeung/events{/privacy}", "received_events_url": "https://api.github.com/users/DeoLeung/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215494, "node_id": "MDU6TGFiZWwxMDIyMTU0OTQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-08T06:21:30Z", "updated_at": "2017-11-09T11:30:20Z", "closed_at": "2017-11-09T11:30:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some code doing:\r\n```python\r\n# in tornado handler\r\n...\r\nres = await gen.multi({'1': self.send_task()})\r\n...\r\n\r\nasync def send_task(self):\r\n    async with self.redis.get() as conn:\r\n      channel, = await conn.subscribe(uuid.uuid1().hex)\r\n      # celery code\r\n      task.apply_async(args=args, kwargs=kwargs, task_id=channel.name)\r\n      await channel.wait_message()\r\n      response = pickle.loads(await channel.get())\r\n      await conn.unsubscribe(channel.name)\r\n```\r\n\r\nwithin my pytest, I randomly get the following errors(but the tests passed), any hints on where to look for the cause?:\r\n```sh\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 6, in _wrap_awaitable\r\n  File \"/xxx/handlers/radar.py\", line 102, in get\r\n  File \"/xxx/handlers/__init__.py\", line 455, in send_task\r\n  File \"/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/coroutines.py\", line 210, in coro\r\n  File \"/virtualenv//lib/python3.6/site-packages/aioredis/pool.py\", line 333, in __aexit__\r\n  File \"/virtualenv//lib/python3.6/site-packages/aioredis/pool.py\", line 218, in release\r\n  File \"/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/asyncio/tasks.py\", line 506, in ensure_future\r\nAttributeError: 'NoneType' object has no attribute 'isfuture'\r\n\r\nException ignored in: <generator object _wrap_awaitable at 0x10ede50a0>\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 6, in _wrap_awaitable\r\n  File \"/xxx/handlers/radar.py\", line 102, in get\r\n  File \"/xxx/handlers/__init__.py\", line 455, in send_task\r\n  File \"/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/coroutines.py\", line 206, in coro\r\n  File \"/virtualenv//lib/python3.5/site-packages/aioredis/pool.py\", line 333, in __aexit__\r\n  File \"/virtualenv//lib/python3.5/site-packages/aioredis/pool.py\", line 218, in release\r\n  File \"/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/tasks.py\", line 540, in ensure_future\r\nAttributeError: 'NoneType' object has no attribute 'Future'\r\n\r\nException ignored in: <generator object _wrap_awaitable at 0x117138f68>\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 6, in _wrap_awaitable\r\n  File \"/xxx/handlers/radar.py\", line 102, in get\r\n  File \"/xxx/handlers/__init__.py\", line 455, in send_task\r\n  File \"/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/lib/python3.5/asyncio/coroutines.py\", line 207, in coro\r\nTypeError: 'NoneType' object is not callable\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/236", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/236/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/236/events", "html_url": "https://github.com/aio-libs/aioredis/issues/236", "id": 231745405, "node_id": "MDU6SXNzdWUyMzE3NDU0MDU=", "number": 236, "title": "Pool not closed warning", "user": {"login": "argaen", "id": 3578154, "node_id": "MDQ6VXNlcjM1NzgxNTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3578154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/argaen", "html_url": "https://github.com/argaen", "followers_url": "https://api.github.com/users/argaen/followers", "following_url": "https://api.github.com/users/argaen/following{/other_user}", "gists_url": "https://api.github.com/users/argaen/gists{/gist_id}", "starred_url": "https://api.github.com/users/argaen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/argaen/subscriptions", "organizations_url": "https://api.github.com/users/argaen/orgs", "repos_url": "https://api.github.com/users/argaen/repos", "events_url": "https://api.github.com/users/argaen/events{/privacy}", "received_events_url": "https://api.github.com/users/argaen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-05-26T22:09:44Z", "updated_at": "2017-06-08T20:27:48Z", "closed_at": "2017-06-08T20:27:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When finishing executing tests or any program that uses aioredis, it usually shows \r\n\r\n```\r\n2017-05-26 23:56:44,614 ERROR asyncio(1148) | Task was destroyed but it is pending!\r\ntask: <Task pending coro=<RedisPool._do_close() running at /home/blck/.pyenv/versions/3.5.2/envs/aiocache/lib/python3.5/site-packages/aioredis/pool.py:117> wait_for=<Future pending cb=[Task._wakeup()]>>\r\n```\r\n\r\nThis is basically because the pool wasn't closed before exiting and the task is still pending (https://github.com/aio-libs/aioredis/blob/master/aioredis/pool.py#L82).\r\n\r\nThis warning still appears even when all connections in the pool are closed (because someone called `clear` or because there are no connections). IMO the warning should appear only when the program exits while there were resources allocated (i.e. connections) rather than doing it by default.\r\n\r\nAre you OK if I provide a MR fixing that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/235", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/235/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/235/events", "html_url": "https://github.com/aio-libs/aioredis/issues/235", "id": 231462640, "node_id": "MDU6SXNzdWUyMzE0NjI2NDA=", "number": 235, "title": "Created a redis url parser for aioredis", "user": {"login": "dfee", "id": 262602, "node_id": "MDQ6VXNlcjI2MjYwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/262602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfee", "html_url": "https://github.com/dfee", "followers_url": "https://api.github.com/users/dfee/followers", "following_url": "https://api.github.com/users/dfee/following{/other_user}", "gists_url": "https://api.github.com/users/dfee/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfee/subscriptions", "organizations_url": "https://api.github.com/users/dfee/orgs", "repos_url": "https://api.github.com/users/dfee/repos", "events_url": "https://api.github.com/users/dfee/events{/privacy}", "received_events_url": "https://api.github.com/users/dfee/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215491, "node_id": "MDU6TGFiZWwxMDIyMTU0OTE=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 102215492, "node_id": "MDU6TGFiZWwxMDIyMTU0OTI=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10", "html_url": "https://github.com/aio-libs/aioredis/milestone/10", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10/labels", "id": 2244201, "node_id": "MDk6TWlsZXN0b25lMjI0NDIwMQ==", "number": 10, "title": "v1.0", "description": "Will bring refactored pool (backward incompatible), and Sentinel support.", "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 32, "state": "closed", "created_at": "2017-01-11T15:40:56Z", "updated_at": "2017-11-17T19:45:22Z", "due_on": "2017-11-17T08:00:00Z", "closed_at": "2017-11-17T19:45:22Z"}, "comments": 7, "created_at": "2017-05-25T21:18:02Z", "updated_at": "2017-11-10T20:55:27Z", "closed_at": "2017-11-10T20:55:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Let me know if it'd be helpful to submit this as part of a PR. It's modeled after [`redis-py`](https://github.com/andymccurdy/redis-py/blob/master/redis/connection.py#L777) and fully tested.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/231", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/231/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/231/events", "html_url": "https://github.com/aio-libs/aioredis/issues/231", "id": 229116453, "node_id": "MDU6SXNzdWUyMjkxMTY0NTM=", "number": 231, "title": "When load testing the pools with timeouts, once the test is done the pool doesn't recover and keeps failing", "user": {"login": "argaen", "id": 3578154, "node_id": "MDQ6VXNlcjM1NzgxNTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3578154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/argaen", "html_url": "https://github.com/argaen", "followers_url": "https://api.github.com/users/argaen/followers", "following_url": "https://api.github.com/users/argaen/following{/other_user}", "gists_url": "https://api.github.com/users/argaen/gists{/gist_id}", "starred_url": "https://api.github.com/users/argaen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/argaen/subscriptions", "organizations_url": "https://api.github.com/users/argaen/orgs", "repos_url": "https://api.github.com/users/argaen/repos", "events_url": "https://api.github.com/users/argaen/events{/privacy}", "received_events_url": "https://api.github.com/users/argaen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10", "html_url": "https://github.com/aio-libs/aioredis/milestone/10", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10/labels", "id": 2244201, "node_id": "MDk6TWlsZXN0b25lMjI0NDIwMQ==", "number": 10, "title": "v1.0", "description": "Will bring refactored pool (backward incompatible), and Sentinel support.", "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 32, "state": "closed", "created_at": "2017-01-11T15:40:56Z", "updated_at": "2017-11-17T19:45:22Z", "due_on": "2017-11-17T08:00:00Z", "closed_at": "2017-11-17T19:45:22Z"}, "comments": 5, "created_at": "2017-05-16T17:51:22Z", "updated_at": "2017-11-09T11:17:56Z", "closed_at": "2017-11-09T11:17:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi, after an issue that was opened in https://github.com/argaen/aiocache/issues/196 I've been investigating concurrency issues with both aiomcache and aioredis.\r\n\r\nTLDR: When load testing the pools with timeouts, once the test is done the pool doesn't recover and keeps failing.\r\n\r\nI've been working on aiomcache implementation to fix this https://github.com/aio-libs/aiomcache/pull/46 and performs good enough. Amount of 200s is really high and server keeps working after the load test `ab -n 5000 -c 100 http://127.0.0.1:8080/`.\r\n\r\nHere are some numbers:\r\n\r\n**aiomcache**\r\n```python\r\nConcurrency Level:      100\r\nTime taken for tests:   5.345 seconds\r\nComplete requests:      5000\r\nFailed requests:        0\r\nTotal transferred:      935000 bytes\r\nHTML transferred:       180000 bytes\r\nRequests per second:    935.44 [#/sec] (mean)\r\nTime per request:       106.901 [ms] (mean)\r\nTime per request:       1.069 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          170.83 [Kbytes/sec] received\r\n```\r\n\r\n**aioredis**\r\n```python\r\nConcurrency Level:      100\r\nTime taken for tests:   10.578 seconds\r\nComplete requests:      5000\r\nFailed requests:        4843\r\n   (Connect: 0, Receive: 0, Length: 4843, Exceptions: 0)\r\nNon-2xx responses:      4843\r\nTotal transferred:      741280 bytes\r\nHTML transferred:       5652 bytes\r\nRequests per second:    472.68 [#/sec] (mean)\r\nTime per request:       211.559 [ms] (mean)\r\nTime per request:       2.116 [ms] (mean, across all concurrent requests)\r\nTransfer rate:          68.44 [Kbytes/sec] received\r\n```\r\n\r\nEven worse, in my case all requests keep failing when the test has finished.\r\n\r\nThis is the script I've been using for the load testing:\r\n\r\n```python\r\nimport uuid\r\nimport logging\r\nimport asyncio\r\nimport aiocache\r\n\r\nfrom aiohttp import web\r\n\r\nlogger = logging.getLogger(__name__)\r\n\r\n\r\nclass CacheManager:\r\n    def __init__(self):\r\n        # self.cache = aiocache.MemcachedCache(pool_size=4)\r\n        self.cache = aiocache.RedisCache(pool_max_size=4)\r\n\r\n    async def get(self, key):\r\n        return await self.cache.get(key, timeout=0.1)\r\n\r\n    async def set(self, key, value):\r\n        return await self.cache.set(key, value, timeout=0.1)\r\n\r\n\r\nasync def handler_get(req):\r\n    try:\r\n        data = await req.app['cache'].get('testkey')\r\n        if data:\r\n            return web.Response(text=data)\r\n        data = str(uuid.uuid4())\r\n        await req.app['cache'].set('testkey', data)\r\n        return web.Response(text=str(data))\r\n    except asyncio.TimeoutError:\r\n        data = str(uuid.uuid4())\r\n        await req.app['cache'].set('testkey', data)\r\n        return web.Response(status=404)\r\n\r\n\r\nif __name__ == '__main__':\r\n    app = web.Application()\r\n    app['cache'] = CacheManager()\r\n    app.router.add_route('GET', '/', handler_get)\r\n    web.run_app(app)\r\n```\r\n\r\nRequirements:\r\n\r\n```\r\n-e git+git@github.com:argaen/aiocache.git@f7fa8e71508203fa108acd89369e7d13e0403b4d#egg=aiocache\r\n-e git+git@github.com:aio-libs/aiomcache.git@ff4dbc18145fd3e99c1623879fa3c506616510fa#egg=aiomcache\r\naioredis==0.3.1\r\naiohttp==2.0.7\r\n```\r\n\r\nI have aiocache in the middle because it allows me to swap easily between one aioredis and aiomcache.\r\n\r\nNow some extra observations:\r\n\r\n- aioredis behaves well when there is no task cancellation\r\n- aioredis performs \"better\" when pool_size is 1 (and I can keep querying the server after the load test). If I move it to anything higher than 1, then crashes forever.\r\n\r\nIf its OK, I will work on fixing it once you or someone else confirms the same problem I'm seeing.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/216", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/216/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/216/events", "html_url": "https://github.com/aio-libs/aioredis/issues/216", "id": 226241595, "node_id": "MDU6SXNzdWUyMjYyNDE1OTU=", "number": 216, "title": "Proposal: Pure Python Protocol Parser", "user": {"login": "schlitzered", "id": 2797971, "node_id": "MDQ6VXNlcjI3OTc5NzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2797971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/schlitzered", "html_url": "https://github.com/schlitzered", "followers_url": "https://api.github.com/users/schlitzered/followers", "following_url": "https://api.github.com/users/schlitzered/following{/other_user}", "gists_url": "https://api.github.com/users/schlitzered/gists{/gist_id}", "starred_url": "https://api.github.com/users/schlitzered/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/schlitzered/subscriptions", "organizations_url": "https://api.github.com/users/schlitzered/orgs", "repos_url": "https://api.github.com/users/schlitzered/repos", "events_url": "https://api.github.com/users/schlitzered/events{/privacy}", "received_events_url": "https://api.github.com/users/schlitzered/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-04T10:43:55Z", "updated_at": "2017-05-04T10:51:08Z", "closed_at": "2017-05-04T10:51:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "hey,\r\n\r\ni am the maintainer of https://github.com/schlitzered/pyredis. It implements a Redis protocol parser, that matches the API of the hiredis c extension. it also passes the same tests as thy hiredis extension.\r\n\r\nif you like, you can salvage the code here: https://github.com/schlitzered/pyredis/blob/master/pyredis/protocol.py", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/209", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/209/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/209/events", "html_url": "https://github.com/aio-libs/aioredis/issues/209", "id": 224108365, "node_id": "MDU6SXNzdWUyMjQxMDgzNjU=", "number": 209, "title": "Set commands WITHSCORES should return tuples", "user": {"login": "pocek", "id": 649724, "node_id": "MDQ6VXNlcjY0OTcyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/649724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pocek", "html_url": "https://github.com/pocek", "followers_url": "https://api.github.com/users/pocek/followers", "following_url": "https://api.github.com/users/pocek/following{/other_user}", "gists_url": "https://api.github.com/users/pocek/gists{/gist_id}", "starred_url": "https://api.github.com/users/pocek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pocek/subscriptions", "organizations_url": "https://api.github.com/users/pocek/orgs", "repos_url": "https://api.github.com/users/pocek/repos", "events_url": "https://api.github.com/users/pocek/events{/privacy}", "received_events_url": "https://api.github.com/users/pocek/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 102215489, "node_id": "MDU6TGFiZWwxMDIyMTU0ODk=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 102215492, "node_id": "MDU6TGFiZWwxMDIyMTU0OTI=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/help%20wanted", "name": "help wanted", "color": "159818", "default": true, "description": null}, {"id": 102945474, "node_id": "MDU6TGFiZWwxMDI5NDU0NzQ=", "url": "https://api.github.com/repos/aio-libs/aioredis/labels/task", "name": "task", "color": "fbca04", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10", "html_url": "https://github.com/aio-libs/aioredis/milestone/10", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/milestones/10/labels", "id": 2244201, "node_id": "MDk6TWlsZXN0b25lMjI0NDIwMQ==", "number": 10, "title": "v1.0", "description": "Will bring refactored pool (backward incompatible), and Sentinel support.", "creator": {"login": "popravich", "id": 323442, "node_id": "MDQ6VXNlcjMyMzQ0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/323442?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popravich", "html_url": "https://github.com/popravich", "followers_url": "https://api.github.com/users/popravich/followers", "following_url": "https://api.github.com/users/popravich/following{/other_user}", "gists_url": "https://api.github.com/users/popravich/gists{/gist_id}", "starred_url": "https://api.github.com/users/popravich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popravich/subscriptions", "organizations_url": "https://api.github.com/users/popravich/orgs", "repos_url": "https://api.github.com/users/popravich/repos", "events_url": "https://api.github.com/users/popravich/events{/privacy}", "received_events_url": "https://api.github.com/users/popravich/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 32, "state": "closed", "created_at": "2017-01-11T15:40:56Z", "updated_at": "2017-11-17T19:45:22Z", "due_on": "2017-11-17T08:00:00Z", "closed_at": "2017-11-17T19:45:22Z"}, "comments": 1, "created_at": "2017-04-25T11:39:20Z", "updated_at": "2017-11-17T12:10:37Z", "closed_at": "2017-11-17T12:10:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is rather surprising/annoying that e.g. `SortedSetCommandsMixin.zrange(..., withscores=True)` returns a flat list instead of a list of (value, score) tuples. Both python-redis and asyncio_redis return tuples which I think is much more sensible for a high-level API.\r\n\r\nCurrent: `['a', 1, 'b', 2]`\r\nExpected: `[('a', 1), ('b', 2)]`\r\n\r\nWould a patch to rationalize this behavior be accepted? If it was a conscious design choice, one has to ask: why?\r\n\r\nThe proposal is more or less along these lines:\r\n```patch\r\n def pairs_int_or_float(value):\r\n     it = iter(value)\r\n-    return list(sum(([val, int_or_float(score)] for val, score in zip(it, it)),\r\n-                    []))\r\n+    return [(val, int_or_float(score)) for val, score in zip(it, it)]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/206", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/206/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/206/events", "html_url": "https://github.com/aio-libs/aioredis/issues/206", "id": 223298215, "node_id": "MDU6SXNzdWUyMjMyOTgyMTU=", "number": 206, "title": "aioredis with tornado", "user": {"login": "iperelivskiy", "id": 405449, "node_id": "MDQ6VXNlcjQwNTQ0OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/405449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iperelivskiy", "html_url": "https://github.com/iperelivskiy", "followers_url": "https://api.github.com/users/iperelivskiy/followers", "following_url": "https://api.github.com/users/iperelivskiy/following{/other_user}", "gists_url": "https://api.github.com/users/iperelivskiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/iperelivskiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iperelivskiy/subscriptions", "organizations_url": "https://api.github.com/users/iperelivskiy/orgs", "repos_url": "https://api.github.com/users/iperelivskiy/repos", "events_url": "https://api.github.com/users/iperelivskiy/events{/privacy}", "received_events_url": "https://api.github.com/users/iperelivskiy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-21T07:15:29Z", "updated_at": "2018-12-24T15:05:55Z", "closed_at": "2017-04-21T14:20:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nUnfortunately i could not find any mention about usage with python 3 async/await and tornado. Could you please share some info on how to use, more specifically how to create a connection within torando ioloop.\r\n\r\nThank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/204", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/204/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/204/events", "html_url": "https://github.com/aio-libs/aioredis/issues/204", "id": 220371732, "node_id": "MDU6SXNzdWUyMjAzNzE3MzI=", "number": 204, "title": "wait_message() with timeout", "user": {"login": "DeoLeung", "id": 3764720, "node_id": "MDQ6VXNlcjM3NjQ3MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/3764720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DeoLeung", "html_url": "https://github.com/DeoLeung", "followers_url": "https://api.github.com/users/DeoLeung/followers", "following_url": "https://api.github.com/users/DeoLeung/following{/other_user}", "gists_url": "https://api.github.com/users/DeoLeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/DeoLeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DeoLeung/subscriptions", "organizations_url": "https://api.github.com/users/DeoLeung/orgs", "repos_url": "https://api.github.com/users/DeoLeung/repos", "events_url": "https://api.github.com/users/DeoLeung/events{/privacy}", "received_events_url": "https://api.github.com/users/DeoLeung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-04-08T03:22:35Z", "updated_at": "2017-04-18T08:39:09Z", "closed_at": "2017-04-18T08:39:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI would like channel `wait_message` method support timeout feature, or anyone knows some workaround?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aio-libs/aioredis/issues/203", "repository_url": "https://api.github.com/repos/aio-libs/aioredis", "labels_url": "https://api.github.com/repos/aio-libs/aioredis/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/aio-libs/aioredis/issues/203/comments", "events_url": "https://api.github.com/repos/aio-libs/aioredis/issues/203/events", "html_url": "https://github.com/aio-libs/aioredis/issues/203", "id": 217099105, "node_id": "MDU6SXNzdWUyMTcwOTkxMDU=", "number": 203, "title": "aioredis.pubsub.Receiver has no iter() method", "user": {"login": "dfee", "id": 262602, "node_id": "MDQ6VXNlcjI2MjYwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/262602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfee", "html_url": "https://github.com/dfee", "followers_url": "https://api.github.com/users/dfee/followers", "following_url": "https://api.github.com/users/dfee/following{/other_user}", "gists_url": "https://api.github.com/users/dfee/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfee/subscriptions", "organizations_url": "https://api.github.com/users/dfee/orgs", "repos_url": "https://api.github.com/users/dfee/repos", "events_url": "https://api.github.com/users/dfee/events{/privacy}", "received_events_url": "https://api.github.com/users/dfee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-26T23:18:51Z", "updated_at": "2017-05-06T15:41:21Z", "closed_at": "2017-03-27T07:46:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The example code (below) references an iter() method on Receiver (here is the [implementation](https://github.com/aio-libs/aioredis/blob/master/aioredis/pubsub.py#L200)).\r\n\r\nThere is no iter() method on Receiver. What is the correct implementation of listening on all Receiver's subscribed channels?\r\n\r\ncode:\r\n```\r\n>>> from aioredis.pubsub import Receiver\r\n>>> from aioredis.abc import AbcChannel\r\n>>> mpsc = Receiver(loop=loop)\r\n>>> async def reader(mpsc):\r\n...     async for channel, msg in mpsc.iter():\r\n...         assert isinstance(channel, AbcChannel)\r\n...         print(\"Got {!r} in channel {!r}\".format(msg, channel))\r\n>>> asyncio.ensure_future(reader(mpsc))\r\n>>> await redis.subscribe(mpsc.channel('channel:1'),\r\n...                       mpsc.channel('channel:3'))\r\n...                       mpsc.channel('channel:5'))\r\n>>> await redis.psubscribe(mpsc.pattern('hello'))\r\n>>> # publishing 'Hello world' into 'hello-channel'\r\n>>> # will print this message:\r\nGot b'Hello world' in channel b'hello-channel'\r\n>>> # when all is done:\r\n>>> await redis.unsubscribe('channel:1', 'channel:3', 'channel:5')\r\n>>> await redis.punsubscribe('hello')\r\n>>> mpsc.stop()\r\n>>> # any message received after stop() will be ignored.\r\n```", "performed_via_github_app": null, "score": 1.0}]}