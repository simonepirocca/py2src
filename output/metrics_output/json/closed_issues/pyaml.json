{"total_count": 27, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/37", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/37/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/37/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/37", "id": 671648093, "node_id": "MDU6SXNzdWU2NzE2NDgwOTM=", "number": 37, "title": "Why does it sort my keys in alphabet order?", "user": {"login": "foreverLoveWisdom", "id": 63062498, "node_id": "MDQ6VXNlcjYzMDYyNDk4", "avatar_url": "https://avatars0.githubusercontent.com/u/63062498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foreverLoveWisdom", "html_url": "https://github.com/foreverLoveWisdom", "followers_url": "https://api.github.com/users/foreverLoveWisdom/followers", "following_url": "https://api.github.com/users/foreverLoveWisdom/following{/other_user}", "gists_url": "https://api.github.com/users/foreverLoveWisdom/gists{/gist_id}", "starred_url": "https://api.github.com/users/foreverLoveWisdom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foreverLoveWisdom/subscriptions", "organizations_url": "https://api.github.com/users/foreverLoveWisdom/orgs", "repos_url": "https://api.github.com/users/foreverLoveWisdom/repos", "events_url": "https://api.github.com/users/foreverLoveWisdom/events{/privacy}", "received_events_url": "https://api.github.com/users/foreverLoveWisdom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-02T16:37:09Z", "updated_at": "2020-08-04T11:49:50Z", "closed_at": "2020-08-04T11:49:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using pyaml formatter with Neoformater in Neo Vim. \r\n\r\nThis is my `docker-compose.yml` **before** formatting:\r\n```\r\nversion: 3\r\n\r\nservices:\r\n  web:\r\n    build: .\r\n    ports:\r\n      - 3000:3000\r\n```\r\n\r\n**After** formatting:\r\n```\r\nservices:\r\n  web:\r\n    build: .\r\n    ports:\r\n      - 3000:3000\r\nversion: 3\r\n```\r\nIs there a way for me to prevent it from ordering my keys in alphabet order?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/36", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/36/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/36/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/36", "id": 608967627, "node_id": "MDU6SXNzdWU2MDg5Njc2Mjc=", "number": 36, "title": "% cannot start any token", "user": {"login": "ROFLailXGOD", "id": 31758382, "node_id": "MDQ6VXNlcjMxNzU4Mzgy", "avatar_url": "https://avatars3.githubusercontent.com/u/31758382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ROFLailXGOD", "html_url": "https://github.com/ROFLailXGOD", "followers_url": "https://api.github.com/users/ROFLailXGOD/followers", "following_url": "https://api.github.com/users/ROFLailXGOD/following{/other_user}", "gists_url": "https://api.github.com/users/ROFLailXGOD/gists{/gist_id}", "starred_url": "https://api.github.com/users/ROFLailXGOD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ROFLailXGOD/subscriptions", "organizations_url": "https://api.github.com/users/ROFLailXGOD/orgs", "repos_url": "https://api.github.com/users/ROFLailXGOD/repos", "events_url": "https://api.github.com/users/ROFLailXGOD/events{/privacy}", "received_events_url": "https://api.github.com/users/ROFLailXGOD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-29T11:06:27Z", "updated_at": "2020-04-29T12:56:42Z", "closed_at": "2020-04-29T12:56:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "So, recently I've tried this module to generate .yml files and came across an issue. If a line starts with a percentage sign, then this line ends up unquotted in the generated .yml file:\r\n```\r\nhello: %world\r\n```\r\nThe problem occurs when you try to load it with `yaml.safe_load()` which results in:\r\n```\r\nfound character '%' that cannot start any token\r\n```\r\n  \r\nI'm really not sure if it is supposed to be like that (bug or feature?), because I'm not really familiar with this format yet and there might be different specifications, but if former then all we need to change is add % in this [line](https://github.com/mk-fg/pretty-yaml/blob/master/pyaml/__init__.py#L135), I think.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/35", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/35/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/35/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/35", "id": 592474466, "node_id": "MDU6SXNzdWU1OTI0NzQ0NjY=", "number": 35, "title": "openapi.yaml is invalid after re-formatting", "user": {"login": "chbndrhnns", "id": 7534547, "node_id": "MDQ6VXNlcjc1MzQ1NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7534547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chbndrhnns", "html_url": "https://github.com/chbndrhnns", "followers_url": "https://api.github.com/users/chbndrhnns/followers", "following_url": "https://api.github.com/users/chbndrhnns/following{/other_user}", "gists_url": "https://api.github.com/users/chbndrhnns/gists{/gist_id}", "starred_url": "https://api.github.com/users/chbndrhnns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chbndrhnns/subscriptions", "organizations_url": "https://api.github.com/users/chbndrhnns/orgs", "repos_url": "https://api.github.com/users/chbndrhnns/repos", "events_url": "https://api.github.com/users/chbndrhnns/events{/privacy}", "received_events_url": "https://api.github.com/users/chbndrhnns/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-02T09:07:26Z", "updated_at": "2020-04-03T18:08:57Z", "closed_at": "2020-04-02T10:05:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried to apply the formatter to an OpenAPI spec, ([ex1](https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples/v3.0/petstore.yaml). \r\n\r\nIt appears to me that after running `python -m pyaml -r ./juice_users/openapi/openapi.yaml`, the spec is broken and cannot be used anymore with the OpenAPI generator.\r\n\r\nIs there something I could do to prevent breaking my spec file?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/34", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/34/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/34/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/34", "id": 578128248, "node_id": "MDU6SXNzdWU1NzgxMjgyNDg=", "number": 34, "title": "pyaml not compatible with ruamel.yaml", "user": {"login": "StephenBrown2", "id": 1148665, "node_id": "MDQ6VXNlcjExNDg2NjU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1148665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StephenBrown2", "html_url": "https://github.com/StephenBrown2", "followers_url": "https://api.github.com/users/StephenBrown2/followers", "following_url": "https://api.github.com/users/StephenBrown2/following{/other_user}", "gists_url": "https://api.github.com/users/StephenBrown2/gists{/gist_id}", "starred_url": "https://api.github.com/users/StephenBrown2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StephenBrown2/subscriptions", "organizations_url": "https://api.github.com/users/StephenBrown2/orgs", "repos_url": "https://api.github.com/users/StephenBrown2/repos", "events_url": "https://api.github.com/users/StephenBrown2/events{/privacy}", "received_events_url": "https://api.github.com/users/StephenBrown2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-03-09T19:06:09Z", "updated_at": "2020-03-10T16:59:43Z", "closed_at": "2020-03-09T19:20:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Given the following test yaml:\r\n```yaml\r\n# This is a commented YAML file\r\nreplica: 1\r\n\r\nimage:\r\n  repository: docker/python\r\n  pull: IfNotPresent\r\n\r\nimagePullSecrets:\r\n  - name: docker-secret\r\n```\r\n\r\nand the following test python:\r\n```py\r\n#!/usr/bin/env python3\r\nfrom pathlib import Path\r\nimport pyaml\r\nfrom ruamel.yaml import YAML\r\n\r\nyaml = YAML()\r\ntest_file = Path(\"./test.yaml\")\r\ntest_load = yaml.load(test_file)\r\npyaml.p(test_load)\r\n```\r\n\r\nI get the following error:\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"./test_yaml.py\", line 9, in <module>\r\n    pyaml.p(test_load)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyaml/__init__.py\", line 208, in pprint\r\n    dump(data, dst=dst, **dump_kws)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyaml/__init__.py\", line 188, in dump\r\n    yaml.dump_all( data, buff, Dumper=Dumper,\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/yaml/__init__.py\", line 278, in dump_all\r\n    dumper.represent(data)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/yaml/representer.py\", line 27, in represent\r\n    node = self.represent_data(data)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/yaml/representer.py\", line 58, in represent_data\r\n    node = self.yaml_representers[None](self, data)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyaml/__init__.py\", line 37, in represent_undefined\r\n    elif isinstance(data, OrderedDict): return dumper.represent_odict(data)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyaml/__init__.py\", line 29, in represent_odict\r\n    node_value = dumper.represent_data(item_value)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/yaml/representer.py\", line 58, in represent_data\r\n    node = self.yaml_representers[None](self, data)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/pyaml/__init__.py\", line 40, in represent_undefined\r\n    return super(PrettyYAMLDumper, dumper).represent_undefined(data)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/yaml/representer.py\", line 231, in represent_undefined\r\n    raise RepresenterError(\"cannot represent an object\", data)\r\nyaml.representer.RepresenterError: ('cannot represent an object', [ordereddict([('name', 'docker-secret')])])\r\n```\r\n\r\nGiven that ruamel is mentioned in the docs for parsing, pyaml should be able to handle the results.\r\n\r\nThe problem is likely that ruamel creates and uses it's own subclass of OrderedDict:\r\n\r\nhttps://sourceforge.net/p/ruamel-yaml/code/ci/default/tree/constructor.py#l20\r\n\r\nhttps://sourceforge.net/p/ruamel-yaml/code/ci/default/tree/compat.py#l23\r\n\r\npyaml could do something like:\r\n\r\n```py\r\ntry:\r\n\tfrom ruamel.yaml.compat import ordereddict\r\n\tPrettyYAMLDumper.add_representer(ordereddict, PrettyYAMLDumper.represent_odict)\r\nexcept ImportError:\r\n    pass\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/33", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/33/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/33/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/33", "id": 551838159, "node_id": "MDU6SXNzdWU1NTE4MzgxNTk=", "number": 33, "title": "RepresenterError: 'cannot represent an object' for custom object", "user": {"login": "3rock618", "id": 26843743, "node_id": "MDQ6VXNlcjI2ODQzNzQz", "avatar_url": "https://avatars3.githubusercontent.com/u/26843743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/3rock618", "html_url": "https://github.com/3rock618", "followers_url": "https://api.github.com/users/3rock618/followers", "following_url": "https://api.github.com/users/3rock618/following{/other_user}", "gists_url": "https://api.github.com/users/3rock618/gists{/gist_id}", "starred_url": "https://api.github.com/users/3rock618/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/3rock618/subscriptions", "organizations_url": "https://api.github.com/users/3rock618/orgs", "repos_url": "https://api.github.com/users/3rock618/repos", "events_url": "https://api.github.com/users/3rock618/events{/privacy}", "received_events_url": "https://api.github.com/users/3rock618/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-18T23:08:00Z", "updated_at": "2020-01-23T11:16:05Z", "closed_at": "2020-01-19T00:05:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Real simple example:\r\n\r\n``` python\r\nimport pyaml\r\nclass Car:\r\n    def __init__(self):\r\n        self.make  = 'Honda'\r\ncar = Car()\r\npyaml.dump(car)\r\n```\r\nOutput: \r\n`RepresenterError: ('cannot represent an object', <__main__.Car object at 0x7fe5f1af0c10>)`\r\n\r\ntested `pyaml.dump(car.__dict__)` works fine\r\ntested `import yaml; yaml.dump(car)` works fine. output: \r\n`'!!python/object:__main__.Car\\nmake: Honda\\n` (this is the output I would expect...)\r\n\r\nWhat am I missing?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/31", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/31/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/31/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/31", "id": 534342479, "node_id": "MDU6SXNzdWU1MzQzNDI0Nzk=", "number": 31, "title": "Format and write into file", "user": {"login": "mirzawaqasahmed", "id": 6448215, "node_id": "MDQ6VXNlcjY0NDgyMTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/6448215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mirzawaqasahmed", "html_url": "https://github.com/mirzawaqasahmed", "followers_url": "https://api.github.com/users/mirzawaqasahmed/followers", "following_url": "https://api.github.com/users/mirzawaqasahmed/following{/other_user}", "gists_url": "https://api.github.com/users/mirzawaqasahmed/gists{/gist_id}", "starred_url": "https://api.github.com/users/mirzawaqasahmed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mirzawaqasahmed/subscriptions", "organizations_url": "https://api.github.com/users/mirzawaqasahmed/orgs", "repos_url": "https://api.github.com/users/mirzawaqasahmed/repos", "events_url": "https://api.github.com/users/mirzawaqasahmed/events{/privacy}", "received_events_url": "https://api.github.com/users/mirzawaqasahmed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-07T02:39:55Z", "updated_at": "2019-12-07T15:31:50Z", "closed_at": "2019-12-07T04:30:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nGreat project....\r\nJust wanted to check if there is a way to input a file, prettify it and then write back to the same file?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/30", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/30/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/30/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/30", "id": 494111033, "node_id": "MDU6SXNzdWU0OTQxMTEwMzM=", "number": 30, "title": "Deprecation warning", "user": {"login": "MyrikLD", "id": 5493841, "node_id": "MDQ6VXNlcjU0OTM4NDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/5493841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MyrikLD", "html_url": "https://github.com/MyrikLD", "followers_url": "https://api.github.com/users/MyrikLD/followers", "following_url": "https://api.github.com/users/MyrikLD/following{/other_user}", "gists_url": "https://api.github.com/users/MyrikLD/gists{/gist_id}", "starred_url": "https://api.github.com/users/MyrikLD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MyrikLD/subscriptions", "organizations_url": "https://api.github.com/users/MyrikLD/orgs", "repos_url": "https://api.github.com/users/MyrikLD/repos", "events_url": "https://api.github.com/users/MyrikLD/events{/privacy}", "received_events_url": "https://api.github.com/users/MyrikLD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-16T15:08:54Z", "updated_at": "2019-09-16T15:17:57Z", "closed_at": "2019-09-16T15:17:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\nYour lib uses pyyaml==4.2b4\r\nBut it raises a warning in Python 3.7\r\n\r\n```\r\n  File \"/Users/myrik/.local/share/virtualenvs/esentai-e7Q7McuI/lib/python3.7/site-packages/yaml/__init__.py\", line 72, in load\r\n    return loader.get_single_data()\r\n  File \"/Users/myrik/.local/share/virtualenvs/esentai-e7Q7McuI/lib/python3.7/site-packages/yaml/constructor.py\", line 37, in get_single_data\r\n    return self.construct_document(node)\r\n  File \"/Users/myrik/.local/share/virtualenvs/esentai-e7Q7McuI/lib/python3.7/site-packages/yaml/constructor.py\", line 46, in construct_document\r\n    for dummy in generator:\r\n  File \"/Users/myrik/.local/share/virtualenvs/esentai-e7Q7McuI/lib/python3.7/site-packages/yaml/constructor.py\", line 398, in construct_yaml_map\r\n    value = self.construct_mapping(node)\r\n  File \"/Users/myrik/.local/share/virtualenvs/esentai-e7Q7McuI/lib/python3.7/site-packages/yaml/constructor.py\", line 204, in construct_mapping\r\n    return super().construct_mapping(node, deep=deep)\r\n  File \"/Users/myrik/.local/share/virtualenvs/esentai-e7Q7McuI/lib/python3.7/site-packages/yaml/constructor.py\", line 126, in construct_mapping\r\n    if not isinstance(key, collections.Hashable):\r\n  File \"/Users/myrik/.local/share/virtualenvs/esentai-e7Q7McuI/lib/python3.7/collections/__init__.py\", line 52, in __getattr__\r\n    DeprecationWarning, stacklevel=2)\r\nDeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/29", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/29/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/29/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/29", "id": 433990921, "node_id": "MDU6SXNzdWU0MzM5OTA5MjE=", "number": 29, "title": "yaml.composer.ComposerError: expected a single document in the stream", "user": {"login": "u2mejc", "id": 11339468, "node_id": "MDQ6VXNlcjExMzM5NDY4", "avatar_url": "https://avatars1.githubusercontent.com/u/11339468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/u2mejc", "html_url": "https://github.com/u2mejc", "followers_url": "https://api.github.com/users/u2mejc/followers", "following_url": "https://api.github.com/users/u2mejc/following{/other_user}", "gists_url": "https://api.github.com/users/u2mejc/gists{/gist_id}", "starred_url": "https://api.github.com/users/u2mejc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/u2mejc/subscriptions", "organizations_url": "https://api.github.com/users/u2mejc/orgs", "repos_url": "https://api.github.com/users/u2mejc/repos", "events_url": "https://api.github.com/users/u2mejc/events{/privacy}", "received_events_url": "https://api.github.com/users/u2mejc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-16T21:21:40Z", "updated_at": "2019-04-17T02:30:34Z", "closed_at": "2019-04-17T02:30:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are concatenated yaml docs supported? I know that `pyyaml` supports them being delimited by three dashes, but I couldn't figure out if this is supported by looking at pretty-yaml's docs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/27", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/27/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/27/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/27", "id": 381308586, "node_id": "MDU6SXNzdWUzODEzMDg1ODY=", "number": 27, "title": "Since dict is ordered by default since 3.6, the order is lost now", "user": {"login": "pombredanne", "id": 675997, "node_id": "MDQ6VXNlcjY3NTk5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/675997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pombredanne", "html_url": "https://github.com/pombredanne", "followers_url": "https://api.github.com/users/pombredanne/followers", "following_url": "https://api.github.com/users/pombredanne/following{/other_user}", "gists_url": "https://api.github.com/users/pombredanne/gists{/gist_id}", "starred_url": "https://api.github.com/users/pombredanne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pombredanne/subscriptions", "organizations_url": "https://api.github.com/users/pombredanne/orgs", "repos_url": "https://api.github.com/users/pombredanne/repos", "events_url": "https://api.github.com/users/pombredanne/events{/privacy}", "received_events_url": "https://api.github.com/users/pombredanne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-15T19:35:24Z", "updated_at": "2018-11-19T14:18:59Z", "closed_at": "2018-11-19T14:17:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "The dict are sorted on dump... but there should be three cases: python2 and python3 until 3.5 should sort. 3.6 and up are ordered dicts by default, so they should NOT be sorted by default anymore IMHO.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/26", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/26/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/26/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/26", "id": 368560842, "node_id": "MDU6SXNzdWUzNjg1NjA4NDI=", "number": 26, "title": "Multiline String as block and quoted Strings", "user": {"login": "pansen", "id": 219162, "node_id": "MDQ6VXNlcjIxOTE2Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/219162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pansen", "html_url": "https://github.com/pansen", "followers_url": "https://api.github.com/users/pansen/followers", "following_url": "https://api.github.com/users/pansen/following{/other_user}", "gists_url": "https://api.github.com/users/pansen/gists{/gist_id}", "starred_url": "https://api.github.com/users/pansen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pansen/subscriptions", "organizations_url": "https://api.github.com/users/pansen/orgs", "repos_url": "https://api.github.com/users/pansen/repos", "events_url": "https://api.github.com/users/pansen/events{/privacy}", "received_events_url": "https://api.github.com/users/pansen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-10T08:59:17Z", "updated_at": "2018-10-13T07:11:18Z", "closed_at": "2018-10-13T07:11:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \r\n\r\nI have some [OpenAPI](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md) schema definition, that I'm extracting via [ApiSpec](https://apispec.readthedocs.io/en/stable/). \r\n\r\n```yaml\r\n    ---\r\n    x-extension: value\r\n    post:\r\n      # headline/name of the resource\r\n      operationId: users create\r\n      summary: Register user\r\n      description: |\r\n        Imagine all the users living for today\r\n\r\n        Imagine there's no countries\r\n        It isn't hard to do\r\n        Nothing to kill or die for\r\n        And no religion too\r\n\r\n        Imagine all the users living life in peace, you\r\n        You may say I'm a dreamer\r\n        But I'm not the only one\r\n        I hope some day you'll join us\r\n        And the world will be as one\r\n\r\n      security:\r\n        - APIKeyHeader: []\r\n\r\n      # this will appear as grouping in the left-side menu\r\n      tags:\r\n      - Legacy API\r\n\r\n      consumes:\r\n      - application/json\r\n      produces:\r\n      - application/json\r\n\r\n      parameters:\r\n      - in: body\r\n        name: body\r\n        description: Foo bar\r\n        required: true\r\n        schema:\r\n          $ref: '#/components/schemas/FooBodySchema'\r\n```\r\n\r\nApispec is doing all the heavy lifting, but I changed the yaml library to pretty-yaml to get rid of the Python type hints. \r\n\r\n## Question\r\n\r\nGiven the yaml above, how can I accomplish to receive multiline blocks as a block \r\n\r\n```yaml\r\n      description: |\r\n        Imagine all the users living for today\r\n\r\n        Imagine there's no countries\r\n        It isn't hard to do\r\n        Nothing to kill or die for\r\n        And no religion too\r\n```\r\n\r\n**and**\r\n\r\nhave single line Strings quoted\r\n\r\n```yaml\r\n        schema:\r\n          $ref: '#/components/schemas/FooBodySchema'\r\n```\r\n\r\nCurrently I'm using \r\n\r\n```python\r\npyaml.dump(my_spec, safe=True, force_embed=False, vspacing=[2, 1], string_val_style='\"')\r\n```\r\n\r\nwhich unfortunately puts the mutline Strings in simple quotes as well. \r\n\r\nThank you :) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/25", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/25/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/25/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/25", "id": 258843710, "node_id": "MDU6SXNzdWUyNTg4NDM3MTA=", "number": 25, "title": "Cannot install with Python 3.6 on Windows 10", "user": {"login": "ddmee", "id": 11785230, "node_id": "MDQ6VXNlcjExNzg1MjMw", "avatar_url": "https://avatars1.githubusercontent.com/u/11785230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddmee", "html_url": "https://github.com/ddmee", "followers_url": "https://api.github.com/users/ddmee/followers", "following_url": "https://api.github.com/users/ddmee/following{/other_user}", "gists_url": "https://api.github.com/users/ddmee/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddmee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddmee/subscriptions", "organizations_url": "https://api.github.com/users/ddmee/orgs", "repos_url": "https://api.github.com/users/ddmee/repos", "events_url": "https://api.github.com/users/ddmee/events{/privacy}", "received_events_url": "https://api.github.com/users/ddmee/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-19T14:33:09Z", "updated_at": "2017-09-19T17:04:11Z", "closed_at": "2017-09-19T14:52:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nUsing Pip, the pyaml fails to install on Windows 10 with Python 3.6. But if I use Python 3.5, the installation works fine. \r\n\r\n```\r\n> python -m pip install pyaml\r\nCollecting pyaml\r\n  Using cached pyaml-17.8.0-py2.py3-none-any.whl\r\nCollecting PyYAML (from pyaml)\r\n  Using cached PyYAML-3.12.tar.gz\r\nBuilding wheels for collected packages: PyYAML\r\n  Running setup.py bdist_wheel for PyYAML ... error\r\n  Complete output from command C:\\Users\\code\\venv36\\Scripts\\python.exe -u -c \"import setuptools, tokenize;__file__='C:\\\\Users\\\\code\\\\AppData\\\\Local\\\\Temp\\\\pip-build-pq03dgna\\\\PyYAML\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" bdist_wheel -d C:\\Users\\code\\AppData\\Local\\Temp\\tmp0t79bxfmpip-wheel- --python-tag cp36:\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build\\lib.win-amd64-3.6\r\n  creating build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\composer.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\constructor.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\cyaml.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\dumper.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\emitter.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\error.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\events.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\loader.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\nodes.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\parser.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\reader.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\representer.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\resolver.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\scanner.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\serializer.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\tokens.py -> build\\lib.win-amd64-3.6\\yaml\r\n  copying lib3\\yaml\\__init__.py -> build\\lib.win-amd64-3.6\\yaml\r\n  running build_ext\r\n  creating build\\temp.win-amd64-3.6\r\n  creating build\\temp.win-amd64-3.6\\Release\r\n  checking if libyaml is compilable\r\n  error: [WinError 3] The system cannot find the path specified: 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.0\\\\VC\\\\PlatformSDK\\\\lib'\r\n\r\n  ----------------------------------------\r\n  Failed building wheel for PyYAML\r\n  Running setup.py clean for PyYAML\r\nFailed to build PyYAML\r\nInstalling collected packages: PyYAML, pyaml\r\n  Running setup.py install for PyYAML ... error\r\n    Complete output from command C:\\Users\\\\code\\\\venv36\\Scripts\\python.exe -u -c \"import setuptools, tokenize;__file__='C:\\\\Users\\\\code\\\\AppData\\\\Local\\\\Temp\\\\pip-build-pq03dgna\\\\PyYAML\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record C:\\Users\\code\\AppData\\Local\\Temp\\pip-pezzmj2e-record\\install-record.txt --single-version-externally-managed --compile --install-headers C:\\Users\\code\\venv36\\include\\site\\python3.6\\PyYAML:\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build\\lib.win-amd64-3.6\r\n    creating build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\composer.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\constructor.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\cyaml.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\dumper.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\emitter.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\error.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\events.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\loader.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\nodes.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\parser.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\reader.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\representer.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\resolver.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\scanner.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\serializer.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\tokens.py -> build\\lib.win-amd64-3.6\\yaml\r\n    copying lib3\\yaml\\__init__.py -> build\\lib.win-amd64-3.6\\yaml\r\n    running build_ext\r\n    creating build\\temp.win-amd64-3.6\r\n    creating build\\temp.win-amd64-3.6\\Release\r\n    checking if libyaml is compilable\r\n    error: [WinError 3] The system cannot find the path specified: 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.0\\\\VC\\\\PlatformSDK\\\\lib'\r\n\r\n    ----------------------------------------\r\nCommand \"C:\\Users\\code\\venv36\\Scripts\\python.exe -u -c \"import setuptools, tokenize;__file__='C:\\\\Users\\\\code\\\\AppData\\\\Local\\\\Temp\\\\pip-build-pq03dgna\\\\PyYAML\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record C:\\Users\\code\\AppData\\Local\\Temp\\pip-pezzmj2e-record\\install-record.txt --single-version-externally-managed --compile --install-headers C:\\Users\\code\\venv36\\include\\site\\python3.6\\PyYAML\" failed with error code 1 in C:\\Users\\code\\AppData\\Local\\Temp\\pip-build-pq03dgna\\PyYAML\\\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/24", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/24/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/24/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/24", "id": 246412609, "node_id": "MDU6SXNzdWUyNDY0MTI2MDk=", "number": 24, "title": "dump fails on numpy arrays", "user": {"login": "DSLituiev", "id": 8426290, "node_id": "MDQ6VXNlcjg0MjYyOTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8426290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DSLituiev", "html_url": "https://github.com/DSLituiev", "followers_url": "https://api.github.com/users/DSLituiev/followers", "following_url": "https://api.github.com/users/DSLituiev/following{/other_user}", "gists_url": "https://api.github.com/users/DSLituiev/gists{/gist_id}", "starred_url": "https://api.github.com/users/DSLituiev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DSLituiev/subscriptions", "organizations_url": "https://api.github.com/users/DSLituiev/orgs", "repos_url": "https://api.github.com/users/DSLituiev/repos", "events_url": "https://api.github.com/users/DSLituiev/events{/privacy}", "received_events_url": "https://api.github.com/users/DSLituiev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-28T17:35:26Z", "updated_at": "2017-08-17T10:03:13Z", "closed_at": "2017-08-17T10:03:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to dump a dictionary with a numpy array. It works with `yaml` package, but fails here with `pyaml`:\r\n\r\n```\r\ndd = dict(a=\"b\", b=\"c\", c=(0,1,2), d= np.r_[4,5,6])\r\nprint(yaml.dump(dd, default_flow_style=False))\r\nprint(\"-\"*20)\r\nprint(pyaml.dump(dd))\r\n```\r\n\r\n```\r\n...\r\n/usr/local/lib/python3.6/site-packages/pyaml/__init__.py in represent_undefined(dumper, data)\r\n     34                 elif isinstance(data, OrderedDict): return dumper.represent_odict(data)\r\n     35                 elif isinstance(data, dict): return dumper.represent_dict(data)\r\n---> 36                 return super(PrettyYAMLDumper, dumper).represent_undefined(data)\r\n     37 \r\n     38         def serialize_node(self, node, parent, index):\r\n\r\n/usr/local/lib/python3.6/site-packages/yaml/representer.py in represent_undefined(self, data)\r\n    227 \r\n    228     def represent_undefined(self, data):\r\n--> 229         raise RepresenterError(\"cannot represent an object: %s\" % data)\r\n    230 \r\n    231 SafeRepresenter.add_representer(type(None),\r\n\r\nRepresenterError: cannot represent an object: [4 5 6]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/22", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/22/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/22/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/22", "id": 224631512, "node_id": "MDU6SXNzdWUyMjQ2MzE1MTI=", "number": 22, "title": "pyaml output stringified inexplicably in places", "user": {"login": "paul-hammant", "id": 82182, "node_id": "MDQ6VXNlcjgyMTgy", "avatar_url": "https://avatars2.githubusercontent.com/u/82182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paul-hammant", "html_url": "https://github.com/paul-hammant", "followers_url": "https://api.github.com/users/paul-hammant/followers", "following_url": "https://api.github.com/users/paul-hammant/following{/other_user}", "gists_url": "https://api.github.com/users/paul-hammant/gists{/gist_id}", "starred_url": "https://api.github.com/users/paul-hammant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paul-hammant/subscriptions", "organizations_url": "https://api.github.com/users/paul-hammant/orgs", "repos_url": "https://api.github.com/users/paul-hammant/repos", "events_url": "https://api.github.com/users/paul-hammant/events{/privacy}", "received_events_url": "https://api.github.com/users/paul-hammant/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-26T23:53:00Z", "updated_at": "2017-04-27T04:48:01Z", "closed_at": "2017-04-27T04:48:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nfrom pyaml import dumps\r\nwith open(\"foobar.yaml\", \"w\") as f2:\r\n    x = {}\r\n    x[\"y\"] = []\r\n    x[\"y\"].append(\"0.5.1\")\r\n    x[\"y\"].append(\"0.51\")\r\n    x[\"y\"].append(\"0.7.1\")\r\n    print(dumps(x, safe=True, indent=1).decode('utf-8'), file=f2)\r\n```\r\n\r\nmakes...\r\n\r\n```\r\ny:\r\n- 0.5.1\r\n- '0.51'\r\n- 0.7.1\r\n```\r\nBut it is not clear why one of the list entries is in quotes and the others not.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/21", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/21/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/21/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/21", "id": 209487379, "node_id": "MDU6SXNzdWUyMDk0ODczNzk=", "number": 21, "title": "Default to safe=True?", "user": {"login": "ypid", "id": 1301158, "node_id": "MDQ6VXNlcjEzMDExNTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1301158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ypid", "html_url": "https://github.com/ypid", "followers_url": "https://api.github.com/users/ypid/followers", "following_url": "https://api.github.com/users/ypid/following{/other_user}", "gists_url": "https://api.github.com/users/ypid/gists{/gist_id}", "starred_url": "https://api.github.com/users/ypid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ypid/subscriptions", "organizations_url": "https://api.github.com/users/ypid/orgs", "repos_url": "https://api.github.com/users/ypid/repos", "events_url": "https://api.github.com/users/ypid/events{/privacy}", "received_events_url": "https://api.github.com/users/ypid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-02-22T15:27:57Z", "updated_at": "2017-02-22T16:23:33Z", "closed_at": "2017-02-22T15:49:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently, [`pyaml.dump`](https://github.com/mk-fg/pretty-yaml/blob/47329c7c62be545ad52e5e4d657303d8c88f7e9e/pyaml/__init__.py#L159) defaults to `safe=False`. Maybe it could be changed to `safe=True` by default ([security by default](https://en.wikipedia.org/wiki/Secure_by_default))?\r\n\r\nWould there be any noticeable difference from that and do you think `safe=True` would limit normal use cases?\r\n\r\nIf you disagree with changing the default, maybe the docs can be updated to use the `safe=True` where possible?\r\n\r\nSee also: [Make load safe_load](https://github.com/yaml/pyyaml/issues/5)\r\n\r\nThanks for your nice library!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/20", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/20/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/20/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/20", "id": 194818463, "node_id": "MDU6SXNzdWUxOTQ4MTg0NjM=", "number": 20, "title": "pyaml converts integer-like strings to integers", "user": {"login": "mpenkov", "id": 1101396, "node_id": "MDQ6VXNlcjExMDEzOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1101396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpenkov", "html_url": "https://github.com/mpenkov", "followers_url": "https://api.github.com/users/mpenkov/followers", "following_url": "https://api.github.com/users/mpenkov/following{/other_user}", "gists_url": "https://api.github.com/users/mpenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpenkov/subscriptions", "organizations_url": "https://api.github.com/users/mpenkov/orgs", "repos_url": "https://api.github.com/users/mpenkov/repos", "events_url": "https://api.github.com/users/mpenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/mpenkov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-11T07:43:43Z", "updated_at": "2016-12-11T15:18:27Z", "closed_at": "2016-12-11T10:01:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example:\r\n\r\n```\r\n(ae.venv)bash-3.2$ python\r\nPython 2.7.12 (default, Nov  7 2016, 14:33:03) \r\n[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import pyaml\r\n>>> pyaml.dump({\"foo\": \"1\"})\r\nu'foo: 1\\n'\r\n```\r\n\r\nIs this intended behavior? The problem is that the data we read back from this sort of YAML is different to what was written.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/19", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/19/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/19/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/19", "id": 190576717, "node_id": "MDU6SXNzdWUxOTA1NzY3MTc=", "number": 19, "title": "Two problems converting AWS Cloudformation templates", "user": {"login": "vt102", "id": 5383511, "node_id": "MDQ6VXNlcjUzODM1MTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5383511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vt102", "html_url": "https://github.com/vt102", "followers_url": "https://api.github.com/users/vt102/followers", "following_url": "https://api.github.com/users/vt102/following{/other_user}", "gists_url": "https://api.github.com/users/vt102/gists{/gist_id}", "starred_url": "https://api.github.com/users/vt102/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vt102/subscriptions", "organizations_url": "https://api.github.com/users/vt102/orgs", "repos_url": "https://api.github.com/users/vt102/repos", "events_url": "https://api.github.com/users/vt102/events{/privacy}", "received_events_url": "https://api.github.com/users/vt102/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-20T19:10:58Z", "updated_at": "2016-12-08T20:22:30Z", "closed_at": "2016-12-08T20:22:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "AWS CloudFormation templates now support YAML, and we're converting a lot of JSON using pyaml and enjoy it, but for one thing:\r\n\r\n~~~\r\n                        \"Value\": {\r\n                            \"Fn::Join\": [\r\n                                \"\",\r\n                                [\r\n                                    \"apac-\",\r\n                                    {\r\n                                        \"Ref\": \"Environment\"\r\n                                    },\r\n                                    \"-\",\r\n                                    {\r\n                                        \"Ref\": \"EnvironmentName\"\r\n                                    },\r\n                                    \"-\",\r\n~~~\r\n\r\nHere is what the above translates to (via print pyaml.dump(json.load(sys.stdin))):\r\n\r\n~~~\r\n          Value:\r\n            Fn::Join:\r\n              -\r\n              - - apac-\r\n                - Ref: Environment\r\n                - -\r\n                - Ref: EnvironmentName\r\n                - -\r\n~~~\r\n\r\nThere are two problems.  The first, we need an empty string as the value after \"Fn::Join\".  This may not be a problem with YAML, but AWS won't accept it-- it would be nice to have an option to print empty strings.\r\n\r\nThe second I think may be a bug-- the lines that read \"- -\" need the second dash in quotes to clarify that it's not a YAML formatting mark, but actually content.\r\n\r\nTo use these, we have to manually change to the following:\r\n\r\n~~~\r\n          Value:\r\n            Fn::Join:\r\n              - ''\r\n              - - apac-\r\n                - Ref: Environment\r\n                - '-'\r\n                - Ref: EnvironmentName\r\n                - '-'\r\n~~~\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/18", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/18/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/18/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/18", "id": 176100628, "node_id": "MDU6SXNzdWUxNzYxMDA2Mjg=", "number": 18, "title": "Release pyaml 16.2.1", "user": {"login": "edbrannin", "id": 121909, "node_id": "MDQ6VXNlcjEyMTkwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/121909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edbrannin", "html_url": "https://github.com/edbrannin", "followers_url": "https://api.github.com/users/edbrannin/followers", "following_url": "https://api.github.com/users/edbrannin/following{/other_user}", "gists_url": "https://api.github.com/users/edbrannin/gists{/gist_id}", "starred_url": "https://api.github.com/users/edbrannin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edbrannin/subscriptions", "organizations_url": "https://api.github.com/users/edbrannin/orgs", "repos_url": "https://api.github.com/users/edbrannin/repos", "events_url": "https://api.github.com/users/edbrannin/events{/privacy}", "received_events_url": "https://api.github.com/users/edbrannin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-09-09T20:22:12Z", "updated_at": "2016-09-10T04:48:33Z", "closed_at": "2016-09-10T04:48:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just almost started fixing \"Quote strings that start with [\" but noticed it's been merged as #17 about 6 months ago.\n\nShort-term I can pip-install from source, but could you please release a version with that fix?\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/16", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/16/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/16/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/16", "id": 103862526, "node_id": "MDU6SXNzdWUxMDM4NjI1MjY=", "number": 16, "title": "missing margin/maxwidth option", "user": {"login": "acornejo", "id": 83786, "node_id": "MDQ6VXNlcjgzNzg2", "avatar_url": "https://avatars2.githubusercontent.com/u/83786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acornejo", "html_url": "https://github.com/acornejo", "followers_url": "https://api.github.com/users/acornejo/followers", "following_url": "https://api.github.com/users/acornejo/following{/other_user}", "gists_url": "https://api.github.com/users/acornejo/gists{/gist_id}", "starred_url": "https://api.github.com/users/acornejo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acornejo/subscriptions", "organizations_url": "https://api.github.com/users/acornejo/orgs", "repos_url": "https://api.github.com/users/acornejo/repos", "events_url": "https://api.github.com/users/acornejo/events{/privacy}", "received_events_url": "https://api.github.com/users/acornejo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-29T16:41:47Z", "updated_at": "2015-08-30T06:00:47Z", "closed_at": "2015-08-30T05:58:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the documentation:\n\n> Attempt is made to pick more readable string representation styles, depending on the value\n\nIt would be nice if the user could provide as an option what the default maxwidth of a line should be. Peeking at the code this seems to be fixed to a constant, aka 120 chars, however in plenty of cases it is desirable to have a different maximum width (my terminal might be smaller or larger).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/13", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/13/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/13/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/13", "id": 71196579, "node_id": "MDU6SXNzdWU3MTE5NjU3OQ==", "number": 13, "title": "Serialization bug", "user": {"login": "mpenkov", "id": 1101396, "node_id": "MDQ6VXNlcjExMDEzOTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1101396?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpenkov", "html_url": "https://github.com/mpenkov", "followers_url": "https://api.github.com/users/mpenkov/followers", "following_url": "https://api.github.com/users/mpenkov/following{/other_user}", "gists_url": "https://api.github.com/users/mpenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpenkov/subscriptions", "organizations_url": "https://api.github.com/users/mpenkov/orgs", "repos_url": "https://api.github.com/users/mpenkov/repos", "events_url": "https://api.github.com/users/mpenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/mpenkov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-27T06:57:52Z", "updated_at": "2015-04-27T08:12:04Z", "closed_at": "2015-04-27T08:12:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given the data:\n\n```\n{'foo': ['bar:', 'baz']}\n```\n\npyaml serializes this as:\n\n```\nfoo:\n  - bar:\n  - baz\n```\n\nwhich then gets deserialized by yaml as:\n\n```\n{'foo': [{'bar': None}, 'baz']}\n```\n\nThis is different to the original data. I'm not sure if this is a problem with pyaml, yaml, or something else. The problem is fixed by forcing quotes around \"bar:\" in the output:\n\n```\nfoo:\n  - \"bar:\"\n  - baz\n```\n\nThis can be achieved by:\n\n```\npyaml.dump(data, stream, string_val_style=\"double-quoted\")\n```\n\nSample code to reproduce the problem:\n\n```\nimport yaml\nimport pyaml\nimport StringIO\ndata = {\"foo\": [\"bar:\", \"baz\"]}\nprint data\nstream = StringIO.StringIO()\npyaml.dump(data, stream)\nprint stream.getvalue()\ndata2 = yaml.load(stream.getvalue())\nprint data2\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/12", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/12/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/12/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/12", "id": 57621648, "node_id": "MDU6SXNzdWU1NzYyMTY0OA==", "number": 12, "title": "I don't understand why we can't pretty print long unicode strings with newlines", "user": {"login": "fiatjaf", "id": 1653275, "node_id": "MDQ6VXNlcjE2NTMyNzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1653275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fiatjaf", "html_url": "https://github.com/fiatjaf", "followers_url": "https://api.github.com/users/fiatjaf/followers", "following_url": "https://api.github.com/users/fiatjaf/following{/other_user}", "gists_url": "https://api.github.com/users/fiatjaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/fiatjaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fiatjaf/subscriptions", "organizations_url": "https://api.github.com/users/fiatjaf/orgs", "repos_url": "https://api.github.com/users/fiatjaf/repos", "events_url": "https://api.github.com/users/fiatjaf/events{/privacy}", "received_events_url": "https://api.github.com/users/fiatjaf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-02-13T16:39:43Z", "updated_at": "2015-02-16T07:35:53Z", "closed_at": "2015-02-15T19:10:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\n>>> print pyaml.dump({'a': 'asldnsa\\nasldknsa\\n'})\na: |\n  asldnsa\n  asldknsa\n>>> print pyaml.dump({'a': u'asldnsa\\nasldp\u00e1knsa\\n'})\na: \"asldnsa\\nasldp\\xE1knsa\\n\"\n```\n\nI tried to read the source and inspect it, but couldn't figure out where is the problem.\nIs this solvable? If I know all the values I'm trying to print are UTF-8 strings, not bytes or anything else, is it possible to patch pyaml to allow me to print them beautifully? How?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/11", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/11/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/11/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/11", "id": 57081872, "node_id": "MDU6SXNzdWU1NzA4MTg3Mg==", "number": 11, "title": "TypeError: must be str, not bytes in Python 3", "user": {"login": "asmeurer", "id": 71486, "node_id": "MDQ6VXNlcjcxNDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/71486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asmeurer", "html_url": "https://github.com/asmeurer", "followers_url": "https://api.github.com/users/asmeurer/followers", "following_url": "https://api.github.com/users/asmeurer/following{/other_user}", "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}", "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions", "organizations_url": "https://api.github.com/users/asmeurer/orgs", "repos_url": "https://api.github.com/users/asmeurer/repos", "events_url": "https://api.github.com/users/asmeurer/events{/privacy}", "received_events_url": "https://api.github.com/users/asmeurer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-09T20:02:36Z", "updated_at": "2015-02-09T22:23:18Z", "closed_at": "2015-02-09T20:46:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIn [7]: pyaml.pprint(\"a\")\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-7-768996862cc6> in <module>()\n----> 1 pyaml.pprint(\"a\")\n\n/Users/aaronmeurer/Documents/pretty-yaml/pyaml/__init__.py in pprint(*data, **dump_kws)\n    169         dst = dump_kws.pop('file', dump_kws.pop('dst', sys.stdout))\n    170         if len(data) == 1: data, = data\n--> 171         dump(data, dst=dst, **dump_kws)\n    172\n    173 p, _p = pprint, print\n\n/Users/aaronmeurer/Documents/pretty-yaml/pyaml/__init__.py in dump(data, dst, safe, force_embed, vspacing, string_val_style)\n    161                 return buff.getvalue().decode('utf-8')\n    162         else:\n--> 163                 dst.write(buff.getvalue())\n    164\n    165 def dumps(data, **dump_kws):\n\nTypeError: must be str, not bytes\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/10", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/10/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/10/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/10", "id": 53321530, "node_id": "MDU6SXNzdWU1MzMyMTUzMA==", "number": 10, "title": "Making pretty-yaml work on python 2.6", "user": {"login": "maxgrenderjones", "id": 6059365, "node_id": "MDQ6VXNlcjYwNTkzNjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/6059365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxgrenderjones", "html_url": "https://github.com/maxgrenderjones", "followers_url": "https://api.github.com/users/maxgrenderjones/followers", "following_url": "https://api.github.com/users/maxgrenderjones/following{/other_user}", "gists_url": "https://api.github.com/users/maxgrenderjones/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxgrenderjones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxgrenderjones/subscriptions", "organizations_url": "https://api.github.com/users/maxgrenderjones/orgs", "repos_url": "https://api.github.com/users/maxgrenderjones/repos", "events_url": "https://api.github.com/users/maxgrenderjones/events{/privacy}", "received_events_url": "https://api.github.com/users/maxgrenderjones/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-04T01:41:56Z", "updated_at": "2015-01-04T09:05:40Z", "closed_at": "2015-01-04T09:05:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I think it may be as simple as replacing a few `{foo, bar}`s with `set(foo, bar)` - is there any reason why 2.6 isn't supported? As it is, means any project relying on `pretty-yaml` has to be 2.7+ also.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/9", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/9/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/9/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/9", "id": 51092131, "node_id": "MDU6SXNzdWU1MTA5MjEzMQ==", "number": 9, "title": "Make it able to load \u201drelaxed\u201d YAML files", "user": {"login": "ralienpp", "id": 295338, "node_id": "MDQ6VXNlcjI5NTMzOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/295338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ralienpp", "html_url": "https://github.com/ralienpp", "followers_url": "https://api.github.com/users/ralienpp/followers", "following_url": "https://api.github.com/users/ralienpp/following{/other_user}", "gists_url": "https://api.github.com/users/ralienpp/gists{/gist_id}", "starred_url": "https://api.github.com/users/ralienpp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ralienpp/subscriptions", "organizations_url": "https://api.github.com/users/ralienpp/orgs", "repos_url": "https://api.github.com/users/ralienpp/repos", "events_url": "https://api.github.com/users/ralienpp/events{/privacy}", "received_events_url": "https://api.github.com/users/ralienpp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-05T12:10:06Z", "updated_at": "2014-12-18T10:26:54Z", "closed_at": "2014-12-18T10:26:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wrote a simple wrapper around the yaml library that gives me some additional features:\n- comments\n- inline comments\n- warnings about mixed spaces and tabs\n- warnings about lines that contain ambiguous `#` characters (could be comment or a URL anchor)\n\nI use it for loading configuration files for my systems. Comments are really helpful for admins who run these systems, as the config file also acts as a source of documentation.\n\nBasically, it is the same philosophy, but aimed at the opposite end - reading YAML files written in a humane fashion.\n\nWould you agree with adding this relaxed reading feature to this module? Here's a draft: https://github.com/ralienpp/pretty-yaml/commit/cd7de496539204247b6775e295caa68f685e9bd4\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/7", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/7/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/7/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/7", "id": 48066593, "node_id": "MDU6SXNzdWU0ODA2NjU5Mw==", "number": 7, "title": "Dumping literal scalar", "user": {"login": "aadis", "id": 28715, "node_id": "MDQ6VXNlcjI4NzE1", "avatar_url": "https://avatars2.githubusercontent.com/u/28715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aadis", "html_url": "https://github.com/aadis", "followers_url": "https://api.github.com/users/aadis/followers", "following_url": "https://api.github.com/users/aadis/following{/other_user}", "gists_url": "https://api.github.com/users/aadis/gists{/gist_id}", "starred_url": "https://api.github.com/users/aadis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aadis/subscriptions", "organizations_url": "https://api.github.com/users/aadis/orgs", "repos_url": "https://api.github.com/users/aadis/repos", "events_url": "https://api.github.com/users/aadis/events{/privacy}", "received_events_url": "https://api.github.com/users/aadis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-11-07T10:10:00Z", "updated_at": "2014-11-10T11:05:32Z", "closed_at": "2014-11-10T11:05:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to force dumping literal for certain string values (aka http://stackoverflow.com/questions/6432605/any-yaml-libraries-in-python-that-support-dumping-of-long-strings-as-block-liter ).\n\nHow can I do this with pyaml?\n\n[And thanks for pyaml, it makes much much readable data]\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/6", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/6/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/6/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/6", "id": 33849925, "node_id": "MDU6SXNzdWUzMzg0OTkyNQ==", "number": 6, "title": "Using dump(data, safe=True) fails", "user": {"login": "asheidan", "id": 13221, "node_id": "MDQ6VXNlcjEzMjIx", "avatar_url": "https://avatars0.githubusercontent.com/u/13221?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asheidan", "html_url": "https://github.com/asheidan", "followers_url": "https://api.github.com/users/asheidan/followers", "following_url": "https://api.github.com/users/asheidan/following{/other_user}", "gists_url": "https://api.github.com/users/asheidan/gists{/gist_id}", "starred_url": "https://api.github.com/users/asheidan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asheidan/subscriptions", "organizations_url": "https://api.github.com/users/asheidan/orgs", "repos_url": "https://api.github.com/users/asheidan/repos", "events_url": "https://api.github.com/users/asheidan/events{/privacy}", "received_events_url": "https://api.github.com/users/asheidan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-20T00:42:16Z", "updated_at": "2014-05-20T03:57:06Z", "closed_at": "2014-05-20T03:57:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using dump with safe set to True causes an error\n\n```\n...\nFile \".../lib/python2.7/site-packages/pyaml/__init__.py\", line 135, in dump\n    yaml.dump_all([data], buff, Dumper=Dumper, default_flow_style=False, encoding='utf-8')\n  File \".../lib/python2.7/site-packages/yaml/__init__.py\", line 186, in dump_all\n    explicit_start=explicit_start, explicit_end=explicit_end)\nTypeError: __init__() got an unexpected keyword argument 'force_embed'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/4", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/4/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/4/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/4", "id": 24598906, "node_id": "MDU6SXNzdWUyNDU5ODkwNg==", "number": 4, "title": "Release new version to pypi", "user": {"login": "JoshBarr", "id": 1715456, "node_id": "MDQ6VXNlcjE3MTU0NTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1715456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JoshBarr", "html_url": "https://github.com/JoshBarr", "followers_url": "https://api.github.com/users/JoshBarr/followers", "following_url": "https://api.github.com/users/JoshBarr/following{/other_user}", "gists_url": "https://api.github.com/users/JoshBarr/gists{/gist_id}", "starred_url": "https://api.github.com/users/JoshBarr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JoshBarr/subscriptions", "organizations_url": "https://api.github.com/users/JoshBarr/orgs", "repos_url": "https://api.github.com/users/JoshBarr/repos", "events_url": "https://api.github.com/users/JoshBarr/events{/privacy}", "received_events_url": "https://api.github.com/users/JoshBarr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-12-20T00:45:38Z", "updated_at": "2013-12-20T09:36:15Z", "closed_at": "2013-12-20T09:36:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey hey,\n\nThis thing is pretty sweet. I like the fix for the max iterations. Do you think you could push it back up to the package index? \n\nThanks,\n\nJosh\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/2", "repository_url": "https://api.github.com/repos/mk-fg/pretty-yaml", "labels_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/2/comments", "events_url": "https://api.github.com/repos/mk-fg/pretty-yaml/issues/2/events", "html_url": "https://github.com/mk-fg/pretty-yaml/issues/2", "id": 23470302, "node_id": "MDU6SXNzdWUyMzQ3MDMwMg==", "number": 2, "title": "NameError: name 'unicode' is not defined", "user": {"login": "rpmsk", "id": 1957851, "node_id": "MDQ6VXNlcjE5NTc4NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1957851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rpmsk", "html_url": "https://github.com/rpmsk", "followers_url": "https://api.github.com/users/rpmsk/followers", "following_url": "https://api.github.com/users/rpmsk/following{/other_user}", "gists_url": "https://api.github.com/users/rpmsk/gists{/gist_id}", "starred_url": "https://api.github.com/users/rpmsk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rpmsk/subscriptions", "organizations_url": "https://api.github.com/users/rpmsk/orgs", "repos_url": "https://api.github.com/users/rpmsk/repos", "events_url": "https://api.github.com/users/rpmsk/events{/privacy}", "received_events_url": "https://api.github.com/users/rpmsk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-11-28T23:41:18Z", "updated_at": "2013-11-29T22:15:01Z", "closed_at": "2013-11-29T06:31:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can install PyYAML and pyaml but only PyYAML works.\n\nHere I install PyYAML\n# install PyYAML\n\n(vi_sys_pkgs)$ pip install PyYAML\n.. ,, ..\n.. ,, .. lots of output with warnings but ..\nSuccessfully installed PyYAML\nCleaning up...\n\nPyYAML WORKS\n(vi1)$ python3 -c 'import yaml'\n(vi1)$  # no output\nAt this point 'yaml' works when used in python.\n\nNow for pyaml ..\n# install pyaml\n\n(vi_sys_pkgs)$ pip install pyaml\nDownloading/unpacking pyaml\n  Downloading pyaml-13.07.1.tar.gz\n  Running setup.py egg_info for package pyaml\nRequirement already satisfied (use --upgrade to upgrade): PyYAML in ./lib/python3.3/site-packages (from pyaml)\nInstalling collected packages: pyaml\n  Running setup.py install for pyaml\nSuccessfully installed pyaml\nCleaning up...\n\npyaml DOES NOT WORK\n\n(vi1)$ python3 -c 'import pyaml'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/adp/wd/vi1/lib/python3.3/site-packages/pyaml/**init**.py\", line 9, in <module>\n    def dump(data, dst=unicode, safe=False, force_embed=False, vspacing=None):\nNameError: name 'unicode' is not defined\n\nDo you know what may be wrong here?\n", "performed_via_github_app": null, "score": 1.0}]}