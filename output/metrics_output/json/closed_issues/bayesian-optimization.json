{"total_count": 148, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/248", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/248/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/248/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/248/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/248", "id": 681944547, "node_id": "MDU6SXNzdWU2ODE5NDQ1NDc=", "number": 248, "title": "Add extra arguments to the objective function ", "user": {"login": "davidfitzek", "id": 33953781, "node_id": "MDQ6VXNlcjMzOTUzNzgx", "avatar_url": "https://avatars0.githubusercontent.com/u/33953781?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidfitzek", "html_url": "https://github.com/davidfitzek", "followers_url": "https://api.github.com/users/davidfitzek/followers", "following_url": "https://api.github.com/users/davidfitzek/following{/other_user}", "gists_url": "https://api.github.com/users/davidfitzek/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidfitzek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidfitzek/subscriptions", "organizations_url": "https://api.github.com/users/davidfitzek/orgs", "repos_url": "https://api.github.com/users/davidfitzek/repos", "events_url": "https://api.github.com/users/davidfitzek/events{/privacy}", "received_events_url": "https://api.github.com/users/davidfitzek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-19T15:40:12Z", "updated_at": "2020-08-19T16:33:06Z", "closed_at": "2020-08-19T16:33:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a simple way to add additional parameters to the objective function? These parameters are not supposed to be tuned.  In scipy.optimize.minimize you can add *args to the objective function. Is there a similar functionality in the BayesianOptimization package? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/233", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/233/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/233/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/233", "id": 626592896, "node_id": "MDU6SXNzdWU2MjY1OTI4OTY=", "number": 233, "title": "Controlling CPU usage", "user": {"login": "avidalto", "id": 28575746, "node_id": "MDQ6VXNlcjI4NTc1NzQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/28575746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avidalto", "html_url": "https://github.com/avidalto", "followers_url": "https://api.github.com/users/avidalto/followers", "following_url": "https://api.github.com/users/avidalto/following{/other_user}", "gists_url": "https://api.github.com/users/avidalto/gists{/gist_id}", "starred_url": "https://api.github.com/users/avidalto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avidalto/subscriptions", "organizations_url": "https://api.github.com/users/avidalto/orgs", "repos_url": "https://api.github.com/users/avidalto/repos", "events_url": "https://api.github.com/users/avidalto/events{/privacy}", "received_events_url": "https://api.github.com/users/avidalto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-28T15:13:43Z", "updated_at": "2020-05-28T17:08:58Z", "closed_at": "2020-05-28T17:08:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am running the code in a ubuntu18 machine and I notice it uses all cores available when I use \"top\". Is there a way of controlling the number of CPUs the code uses?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/223", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/223/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/223/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/223", "id": 608534790, "node_id": "MDU6SXNzdWU2MDg1MzQ3OTA=", "number": 223, "title": "Iteration time increases", "user": {"login": "jjstarn-usgs", "id": 6577137, "node_id": "MDQ6VXNlcjY1NzcxMzc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6577137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjstarn-usgs", "html_url": "https://github.com/jjstarn-usgs", "followers_url": "https://api.github.com/users/jjstarn-usgs/followers", "following_url": "https://api.github.com/users/jjstarn-usgs/following{/other_user}", "gists_url": "https://api.github.com/users/jjstarn-usgs/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjstarn-usgs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjstarn-usgs/subscriptions", "organizations_url": "https://api.github.com/users/jjstarn-usgs/orgs", "repos_url": "https://api.github.com/users/jjstarn-usgs/repos", "events_url": "https://api.github.com/users/jjstarn-usgs/events{/privacy}", "received_events_url": "https://api.github.com/users/jjstarn-usgs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-28T18:46:18Z", "updated_at": "2020-05-01T16:24:26Z", "closed_at": "2020-04-30T21:36:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm simulating a 4-parameter model and using 256 initial probings and 1,000 iterations after that.  It's a very nonlinear problem.  The first iteration executes in about 2 secs.  the progress slows as the number of iterations increases, up to about 60 seconds per iteration.  The underlying model does not increase execution time.  Is there something in the code that increases the iteration time?  Is it the complexity of the objective function surface?  Is there something that can be set to reduce  the time?  I'm using the UCB acquisition function. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/222", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/222/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/222/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/222", "id": 606761868, "node_id": "MDU6SXNzdWU2MDY3NjE4Njg=", "number": 222, "title": "working with Big Data", "user": {"login": "sbhadade", "id": 50355387, "node_id": "MDQ6VXNlcjUwMzU1Mzg3", "avatar_url": "https://avatars0.githubusercontent.com/u/50355387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbhadade", "html_url": "https://github.com/sbhadade", "followers_url": "https://api.github.com/users/sbhadade/followers", "following_url": "https://api.github.com/users/sbhadade/following{/other_user}", "gists_url": "https://api.github.com/users/sbhadade/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbhadade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbhadade/subscriptions", "organizations_url": "https://api.github.com/users/sbhadade/orgs", "repos_url": "https://api.github.com/users/sbhadade/repos", "events_url": "https://api.github.com/users/sbhadade/events{/privacy}", "received_events_url": "https://api.github.com/users/sbhadade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-25T12:42:37Z", "updated_at": "2020-04-26T03:46:58Z", "closed_at": "2020-04-25T17:16:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "we are using Bayesian optimisation with big data params tuning . the bayesian parameters running function breaks if data is more than 100 kb. can you guide which libraries can accelerate the training and bayesian optimisation function to run on big data like 100mb - 1 gb of data .\r\n\r\n![Screenshot 2020-04-25 at 18 11 12](https://user-images.githubusercontent.com/50355387/80280193-408e6b00-8720-11ea-8a73-987502dfec6e.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/218", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/218/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/218/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/218", "id": 597777950, "node_id": "MDU6SXNzdWU1OTc3Nzc5NTA=", "number": 218, "title": "Is it possible to optimize the discrete values too?", "user": {"login": "zhbfy", "id": 9170812, "node_id": "MDQ6VXNlcjkxNzA4MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9170812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhbfy", "html_url": "https://github.com/zhbfy", "followers_url": "https://api.github.com/users/zhbfy/followers", "following_url": "https://api.github.com/users/zhbfy/following{/other_user}", "gists_url": "https://api.github.com/users/zhbfy/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhbfy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhbfy/subscriptions", "organizations_url": "https://api.github.com/users/zhbfy/orgs", "repos_url": "https://api.github.com/users/zhbfy/repos", "events_url": "https://api.github.com/users/zhbfy/events{/privacy}", "received_events_url": "https://api.github.com/users/zhbfy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-10T08:49:50Z", "updated_at": "2020-04-10T08:50:26Z", "closed_at": "2020-04-10T08:50:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "As the title describe, I want to optimize a discrete parameter.  Is it possible? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/217", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/217/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/217/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/217", "id": 596017793, "node_id": "MDU6SXNzdWU1OTYwMTc3OTM=", "number": 217, "title": "TypeError: Dimension value must be integer or None or have an __index__ method", "user": {"login": "Kamalnor", "id": 63050702, "node_id": "MDQ6VXNlcjYzMDUwNzAy", "avatar_url": "https://avatars0.githubusercontent.com/u/63050702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kamalnor", "html_url": "https://github.com/Kamalnor", "followers_url": "https://api.github.com/users/Kamalnor/followers", "following_url": "https://api.github.com/users/Kamalnor/following{/other_user}", "gists_url": "https://api.github.com/users/Kamalnor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kamalnor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kamalnor/subscriptions", "organizations_url": "https://api.github.com/users/Kamalnor/orgs", "repos_url": "https://api.github.com/users/Kamalnor/repos", "events_url": "https://api.github.com/users/Kamalnor/events{/privacy}", "received_events_url": "https://api.github.com/users/Kamalnor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-07T17:01:15Z", "updated_at": "2020-04-08T14:20:30Z", "closed_at": "2020-04-08T14:20:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am doing a Bayesian Optimization to select hyperparameters for my LSTM network. I cannot understand the error given:\r\n\r\n|   iter    |  target   |   batch   | dropout1  |  epochs   |  hidden1  |    lr     |   size1   |\r\n-------------------------------------------------------------------------------------------------\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-143-f622304582cf> in <module>\r\n     11 )\r\n     12 \r\n---> 13 optimizer.maximize(init_points=100, n_iter=100,)\r\n     14 \r\n     15 \r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\bayes_opt\\bayesian_optimization.py in maximize(self, init_points, n_iter, acq, kappa, xi, **gp_params)\r\n    172                 iteration += 1\r\n    173 \r\n--> 174             self.probe(x_probe, lazy=False)\r\n    175 \r\n    176         self.dispatch(Events.OPTIMIZATION_END)\r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\bayes_opt\\bayesian_optimization.py in probe(self, params, lazy)\r\n    110             self._queue.add(params)\r\n    111         else:\r\n--> 112             self._space.probe(params)\r\n    113             self.dispatch(Events.OPTIMIZATION_STEP)\r\n    114 \r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\bayes_opt\\target_space.py in probe(self, params)\r\n    192         except KeyError:\r\n    193             params = dict(zip(self._keys, x))\r\n--> 194             target = self.target_func(**params)\r\n    195             self.register(x, target)\r\n    196         return target\r\n\r\n<ipython-input-142-f09a2564f2df> in fit_with(batch, dropout1, epochs, hidden1, lr, size1)\r\n      2 \r\n      3     # Create the model using a specified hyperparameters.\r\n----> 4     model = get_model(input_shape, hidden1, size1, dropout1)\r\n      5 \r\n      6     # Train the model for a specified number of epochs.\r\n\r\n<ipython-input-141-416f7e1dd46e> in get_model(input_shape, hidden1, size1, dropout1)\r\n      4 def get_model(input_shape, hidden1, size1, dropout1):\r\n      5     model2 = tf.keras.Sequential()\r\n----> 6     model2.add(LSTM(hidden1,input_shape=input_shape, activation = 'sigmoid', recurrent_activation = 'tanh', kernel_regularizer = regularizers.l2(0.0001), recurrent_regularizer = regularizers.l2(0.0001), return_sequences=True))\r\n      7     model2.add(Dense(size1, activation = 'sigmoid', kernel_regularizer = regularizers.l2(0.0001)))\r\n      8     model2.add(Dropout(dropout1))\r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\training\\tracking\\base.py in _method_wrapper(self, *args, **kwargs)\r\n    455     self._self_setattr_tracking = False  # pylint: disable=protected-access\r\n    456     try:\r\n--> 457       result = method(self, *args, **kwargs)\r\n    458     finally:\r\n    459       self._self_setattr_tracking = previous_value  # pylint: disable=protected-access\r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\sequential.py in add(self, layer)\r\n    183           # and create the node connecting the current layer\r\n    184           # to the input layer we just created.\r\n--> 185           layer(x)\r\n    186           set_inputs = True\r\n    187 \r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\keras\\layers\\recurrent.py in __call__(self, inputs, initial_state, constants, **kwargs)\r\n    642 \r\n    643     if initial_state is None and constants is None:\r\n--> 644       return super(RNN, self).__call__(inputs, **kwargs)\r\n    645 \r\n    646     # If any of `initial_state` or `constants` are specified and are Keras\r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\base_layer.py in __call__(self, inputs, *args, **kwargs)\r\n    746           # Build layer if applicable (if the `build` method has been\r\n    747           # overridden).\r\n--> 748           self._maybe_build(inputs)\r\n    749           cast_inputs = self._maybe_cast_inputs(inputs)\r\n    750 \r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\base_layer.py in _maybe_build(self, inputs)\r\n   2114         # operations.\r\n   2115         with tf_utils.maybe_init_scope(self):\r\n-> 2116           self.build(input_shapes)\r\n   2117       # We must set self.built since user defined build functions are not\r\n   2118       # constrained to set self.built.\r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\keras\\layers\\recurrent.py in build(self, input_shape)\r\n    562     if isinstance(self.cell, Layer):\r\n    563       if not self.cell.built:\r\n--> 564         self.cell.build(step_input_shape)\r\n    565 \r\n    566     # set or validate state_spec\r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\keras\\utils\\tf_utils.py in wrapper(instance, input_shape)\r\n    304     if input_shape is not None:\r\n    305       input_shape = convert_shapes(input_shape, to_tuples=True)\r\n--> 306     output_shape = fn(instance, input_shape)\r\n    307     # Return shapes from `fn` as TensorShapes.\r\n    308     if output_shape is not None:\r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\keras\\layers\\recurrent.py in build(self, input_shape)\r\n   2299         regularizer=self.kernel_regularizer,\r\n   2300         constraint=self.kernel_constraint,\r\n-> 2301         caching_device=default_caching_device)\r\n   2302     self.recurrent_kernel = self.add_weight(\r\n   2303         shape=(self.units, self.units * 4),\r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\base_layer.py in add_weight(self, name, shape, dtype, initializer, regularizer, trainable, constraint, partitioner, use_resource, synchronization, aggregation, **kwargs)\r\n    444         synchronization=synchronization,\r\n    445         aggregation=aggregation,\r\n--> 446         caching_device=caching_device)\r\n    447     backend.track_variable(variable)\r\n    448 \r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\training\\tracking\\base.py in _add_variable_with_custom_getter(self, name, shape, dtype, initializer, getter, overwrite, **kwargs_for_getter)\r\n    742         dtype=dtype,\r\n    743         initializer=initializer,\r\n--> 744         **kwargs_for_getter)\r\n    745 \r\n    746     # If we set an initializer and the variable processed it, tracking will not\r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\base_layer_utils.py in make_variable(name, shape, dtype, initializer, trainable, caching_device, validate_shape, constraint, use_resource, collections, synchronization, aggregation, partitioner)\r\n    127   # TODO(apassos,rohanj) figure out how to remove collections from here so we\r\n    128   # can remove the V1.\r\n--> 129   variable_shape = tensor_shape.TensorShape(shape)\r\n    130   return tf_variables.VariableV1(\r\n    131       initial_value=init_val,\r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\framework\\tensor_shape.py in __init__(self, dims)\r\n    769         self._dims = [as_dimension(dims)]\r\n    770       else:\r\n--> 771         self._dims = [as_dimension(d) for d in dims_iter]\r\n    772 \r\n    773   @property\r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\framework\\tensor_shape.py in <listcomp>(.0)\r\n    769         self._dims = [as_dimension(dims)]\r\n    770       else:\r\n--> 771         self._dims = [as_dimension(d) for d in dims_iter]\r\n    772 \r\n    773   @property\r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\framework\\tensor_shape.py in as_dimension(value)\r\n    714     return value\r\n    715   else:\r\n--> 716     return Dimension(value)\r\n    717 \r\n    718 \r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\tensorflow_core\\python\\framework\\tensor_shape.py in __init__(self, value)\r\n    198             TypeError(\"Dimension value must be integer or None or have \"\r\n    199                       \"an __index__ method, got {!r}\".format(value)),\r\n--> 200             None)\r\n    201       if self._value < 0:\r\n    202         raise ValueError(\"Dimension %d must be >= 0\" % self._value)\r\n\r\nc:\\users\\user\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\six.py in raise_from(value, from_value)\r\n\r\nTypeError: Dimension value must be integer or None or have an __index__ method, got 1237.2369876220855", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/216", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/216/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/216/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/216", "id": 593717362, "node_id": "MDU6SXNzdWU1OTM3MTczNjI=", "number": 216, "title": "Constant variables?", "user": {"login": "ben-arnao", "id": 8053809, "node_id": "MDQ6VXNlcjgwNTM4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8053809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben-arnao", "html_url": "https://github.com/ben-arnao", "followers_url": "https://api.github.com/users/ben-arnao/followers", "following_url": "https://api.github.com/users/ben-arnao/following{/other_user}", "gists_url": "https://api.github.com/users/ben-arnao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben-arnao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben-arnao/subscriptions", "organizations_url": "https://api.github.com/users/ben-arnao/orgs", "repos_url": "https://api.github.com/users/ben-arnao/repos", "events_url": "https://api.github.com/users/ben-arnao/events{/privacy}", "received_events_url": "https://api.github.com/users/ben-arnao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-04T01:45:10Z", "updated_at": "2020-05-01T14:26:20Z", "closed_at": "2020-05-01T14:26:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Is there a way to provide data to your target function. Ie. a constant variable.\r\n\r\nI would prefer not to have to use a global variable to use for accessing my data within the target function.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/215", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/215/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/215/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/215", "id": 586616312, "node_id": "MDU6SXNzdWU1ODY2MTYzMTI=", "number": 215, "title": "book or resource that explains the math", "user": {"login": "nyck33", "id": 25189545, "node_id": "MDQ6VXNlcjI1MTg5NTQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/25189545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nyck33", "html_url": "https://github.com/nyck33", "followers_url": "https://api.github.com/users/nyck33/followers", "following_url": "https://api.github.com/users/nyck33/following{/other_user}", "gists_url": "https://api.github.com/users/nyck33/gists{/gist_id}", "starred_url": "https://api.github.com/users/nyck33/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nyck33/subscriptions", "organizations_url": "https://api.github.com/users/nyck33/orgs", "repos_url": "https://api.github.com/users/nyck33/repos", "events_url": "https://api.github.com/users/nyck33/events{/privacy}", "received_events_url": "https://api.github.com/users/nyck33/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-24T01:07:05Z", "updated_at": "2020-05-01T14:20:31Z", "closed_at": "2020-05-01T14:20:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am watching this lecture:  https://www.youtube.com/watch?v=vz3D36VXefI\r\n\r\nI can sort of follow but are there any other resources for an undergrad CS student to learn the underlying math and principles?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/214", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/214/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/214/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/214", "id": 586365744, "node_id": "MDU6SXNzdWU1ODYzNjU3NDQ=", "number": 214, "title": "The order of parameters is not kept", "user": {"login": "syrte", "id": 7038335, "node_id": "MDQ6VXNlcjcwMzgzMzU=", "avatar_url": "https://avatars3.githubusercontent.com/u/7038335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/syrte", "html_url": "https://github.com/syrte", "followers_url": "https://api.github.com/users/syrte/followers", "following_url": "https://api.github.com/users/syrte/following{/other_user}", "gists_url": "https://api.github.com/users/syrte/gists{/gist_id}", "starred_url": "https://api.github.com/users/syrte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/syrte/subscriptions", "organizations_url": "https://api.github.com/users/syrte/orgs", "repos_url": "https://api.github.com/users/syrte/repos", "events_url": "https://api.github.com/users/syrte/events{/privacy}", "received_events_url": "https://api.github.com/users/syrte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-23T17:05:00Z", "updated_at": "2020-07-16T13:32:13Z", "closed_at": "2020-05-01T14:25:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed that the order of the target function parameters has been resorted intentionally (introduced in https://github.com/fmfn/BayesianOptimization/pull/121 ). `TargetSpace.__init__` writes\r\nhttps://github.com/fmfn/BayesianOptimization/blob/600d0c7f7e2a9c30132b5771695084874892ae77/bayes_opt/target_space.py#L44-L50\r\n\r\nHowever, this sometimes gives non-intuitional results. When I use the Gaussian process object `BayesianOptimization._gp`, I found the order of parameters is different from the target function itself in some cases.\r\n\r\nI believe this sorting mechanism here was introduced with a good rationale. Nevertheless, considering that dict objects are ordered in Python3 now,  this sorting seems not necessary?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/211", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/211/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/211/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/211", "id": 575846610, "node_id": "MDU6SXNzdWU1NzU4NDY2MTA=", "number": 211, "title": "Verbose when logging", "user": {"login": "samyip123", "id": 37391338, "node_id": "MDQ6VXNlcjM3MzkxMzM4", "avatar_url": "https://avatars3.githubusercontent.com/u/37391338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samyip123", "html_url": "https://github.com/samyip123", "followers_url": "https://api.github.com/users/samyip123/followers", "following_url": "https://api.github.com/users/samyip123/following{/other_user}", "gists_url": "https://api.github.com/users/samyip123/gists{/gist_id}", "starred_url": "https://api.github.com/users/samyip123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samyip123/subscriptions", "organizations_url": "https://api.github.com/users/samyip123/orgs", "repos_url": "https://api.github.com/users/samyip123/repos", "events_url": "https://api.github.com/users/samyip123/events{/privacy}", "received_events_url": "https://api.github.com/users/samyip123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-04T22:44:24Z", "updated_at": "2020-05-11T15:00:36Z", "closed_at": "2020-05-11T15:00:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the logger, the verbose is turned off with no output (verbose=0), is there any way to turn it back on\r\n\r\n```\r\noptimizer = BayesianOptimization(f=model,\r\n                                     pbounds=pbounds,\r\n                                     verbose=2,  # verbose = 1 prints only when a maximum is observed, verbose = 0 is silent\r\n                                     random_state=1)\r\n#Create Logger\r\nlogger = JSONLogger(path = './file_name.json')\r\n#Update Logger for each hyperparameter combination\r\noptimizer.subscribe(Events.OPTIMIZATION_STEP, logger)\r\noptimizer.maximize(init_points=10, n_iter=10)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/210", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/210/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/210/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/210", "id": 570999339, "node_id": "MDU6SXNzdWU1NzA5OTkzMzk=", "number": 210, "title": "How to plot 2d map of bayesian opimization in action example?", "user": {"login": "yimjinkyu1", "id": 35280361, "node_id": "MDQ6VXNlcjM1MjgwMzYx", "avatar_url": "https://avatars3.githubusercontent.com/u/35280361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yimjinkyu1", "html_url": "https://github.com/yimjinkyu1", "followers_url": "https://api.github.com/users/yimjinkyu1/followers", "following_url": "https://api.github.com/users/yimjinkyu1/following{/other_user}", "gists_url": "https://api.github.com/users/yimjinkyu1/gists{/gist_id}", "starred_url": "https://api.github.com/users/yimjinkyu1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yimjinkyu1/subscriptions", "organizations_url": "https://api.github.com/users/yimjinkyu1/orgs", "repos_url": "https://api.github.com/users/yimjinkyu1/repos", "events_url": "https://api.github.com/users/yimjinkyu1/events{/privacy}", "received_events_url": "https://api.github.com/users/yimjinkyu1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-26T01:40:35Z", "updated_at": "2020-05-01T15:54:53Z", "closed_at": "2020-05-01T15:54:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to know how to plot gaussian, target func, acquisition func 2d map in main example.\r\nDo you teach me where example code or method?\r\nThank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/209", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/209/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/209/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/209", "id": 569823498, "node_id": "MDU6SXNzdWU1Njk4MjM0OTg=", "number": 209, "title": "Suggested number of iterations", "user": {"login": "valerios1910", "id": 28448749, "node_id": "MDQ6VXNlcjI4NDQ4NzQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/28448749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/valerios1910", "html_url": "https://github.com/valerios1910", "followers_url": "https://api.github.com/users/valerios1910/followers", "following_url": "https://api.github.com/users/valerios1910/following{/other_user}", "gists_url": "https://api.github.com/users/valerios1910/gists{/gist_id}", "starred_url": "https://api.github.com/users/valerios1910/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/valerios1910/subscriptions", "organizations_url": "https://api.github.com/users/valerios1910/orgs", "repos_url": "https://api.github.com/users/valerios1910/repos", "events_url": "https://api.github.com/users/valerios1910/events{/privacy}", "received_events_url": "https://api.github.com/users/valerios1910/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-24T12:25:26Z", "updated_at": "2020-05-01T15:31:03Z", "closed_at": "2020-05-01T15:31:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm looking for a \"good\" number of iterations relative to the dimensions, e.g. iterations = 50*dimensions. Yet I cannot find anything no matter where I look. Do you have any recommendations, or it is very problem- and algorithm-dependent?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/207", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/207/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/207/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/207/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/207", "id": 567100316, "node_id": "MDU6SXNzdWU1NjcxMDAzMTY=", "number": 207, "title": "Couple questions about the correct use of the library.", "user": {"login": "ar-valdez", "id": 47374394, "node_id": "MDQ6VXNlcjQ3Mzc0Mzk0", "avatar_url": "https://avatars1.githubusercontent.com/u/47374394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ar-valdez", "html_url": "https://github.com/ar-valdez", "followers_url": "https://api.github.com/users/ar-valdez/followers", "following_url": "https://api.github.com/users/ar-valdez/following{/other_user}", "gists_url": "https://api.github.com/users/ar-valdez/gists{/gist_id}", "starred_url": "https://api.github.com/users/ar-valdez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ar-valdez/subscriptions", "organizations_url": "https://api.github.com/users/ar-valdez/orgs", "repos_url": "https://api.github.com/users/ar-valdez/repos", "events_url": "https://api.github.com/users/ar-valdez/events{/privacy}", "received_events_url": "https://api.github.com/users/ar-valdez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-18T19:12:16Z", "updated_at": "2020-05-02T23:03:18Z", "closed_at": "2020-05-02T23:01:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have gone through the next demo tutorial explanation...\r\n\r\n> https://github.com/fmfn/BayesianOptimization/blob/master/examples/exploitation_vs_exploration.ipynb\r\n\r\nAnd as many of us tried to adapted to our personal needs. Yet not successfully, hope to hear advises. Lets start with some definitions.\r\n\r\nMy model corresponds to a exponential decrease function,\r\n`def model(c,I,t):`\r\n       ` return I*np.exp(-c*t)`\r\nI want to fit/adjust a GP regressor to the next target function:\r\n`def my_target(t):\r\n    return model(0.2,5,t)`\r\n\r\nThe ranges of variations of the parameters are given in the next dictionary:\r\n`pbounds = {'c': (0, 0.4), 'I': (8, 10), 't':(0,10)}`\r\n\r\nHere comes the first TRUE question `bo = BayesianOptimization(model,pbounds,verbose=2,random_state=1)` How does `bo` received information to fit to `target`???\r\n\r\nI perform the adjust (still don't know how to l link to `target`).... with `bo.maximize(init_points=0, n_iter=5, kappa=5)`\r\n\r\nI use the following command to see the type and of `print(type(bo._gp))` and the content I found it here:\r\n> https://scikit-learn.org/stable/modules/generated/sklearn.gaussian_process.GaussianProcessRegressor.html\r\n\r\nNaturally I would like to access the methods of this class object but I don't know how.... Focusing on the tutorial demo (first link I quoted). The author used the `mean, sigma = bo._gp.predict(x.reshape(-1,1), return_std=True)` , where `x = np.linspace(-2, 10, 10000)`\r\n\r\nI am trying to reproduce this example > https://chaospy.readthedocs.io/en/master/tutorial.html employing GPs....\r\n\r\n\r\nLooking forward comments and support from the community I salute everyone of you.\r\n\r\nPs.: Sorry for the opened and closed blank issues, my keyboard trolled me...", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/206", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/206/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/206/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/206", "id": 567090929, "node_id": "MDU6SXNzdWU1NjcwOTA5Mjk=", "number": 206, "title": "adda", "user": {"login": "ar-valdez", "id": 47374394, "node_id": "MDQ6VXNlcjQ3Mzc0Mzk0", "avatar_url": "https://avatars1.githubusercontent.com/u/47374394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ar-valdez", "html_url": "https://github.com/ar-valdez", "followers_url": "https://api.github.com/users/ar-valdez/followers", "following_url": "https://api.github.com/users/ar-valdez/following{/other_user}", "gists_url": "https://api.github.com/users/ar-valdez/gists{/gist_id}", "starred_url": "https://api.github.com/users/ar-valdez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ar-valdez/subscriptions", "organizations_url": "https://api.github.com/users/ar-valdez/orgs", "repos_url": "https://api.github.com/users/ar-valdez/repos", "events_url": "https://api.github.com/users/ar-valdez/events{/privacy}", "received_events_url": "https://api.github.com/users/ar-valdez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-18T18:53:54Z", "updated_at": "2020-02-18T18:54:31Z", "closed_at": "2020-02-18T18:54:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/204", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/204/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/204/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/204/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/204", "id": 562085223, "node_id": "MDU6SXNzdWU1NjIwODUyMjM=", "number": 204, "title": "Very high noise: how to get expectation for max, rather than point max?", "user": {"login": "MilesCranmer", "id": 7593028, "node_id": "MDQ6VXNlcjc1OTMwMjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7593028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MilesCranmer", "html_url": "https://github.com/MilesCranmer", "followers_url": "https://api.github.com/users/MilesCranmer/followers", "following_url": "https://api.github.com/users/MilesCranmer/following{/other_user}", "gists_url": "https://api.github.com/users/MilesCranmer/gists{/gist_id}", "starred_url": "https://api.github.com/users/MilesCranmer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MilesCranmer/subscriptions", "organizations_url": "https://api.github.com/users/MilesCranmer/orgs", "repos_url": "https://api.github.com/users/MilesCranmer/repos", "events_url": "https://api.github.com/users/MilesCranmer/events{/privacy}", "received_events_url": "https://api.github.com/users/MilesCranmer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-08T22:08:13Z", "updated_at": "2020-05-01T15:58:33Z", "closed_at": "2020-05-01T15:58:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have a very noisy model I'm optimizing, and I'm wondering how I can get the GP's prediction for the expectation[max] rather than the recorded max? The recorded max should vary wildly since there is so much noisy, but I think the expectation value for the max should be informative of the best parameters.\r\n\r\nThanks!\r\nMiles", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/202", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/202/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/202/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/202", "id": 560972087, "node_id": "MDU6SXNzdWU1NjA5NzIwODc=", "number": 202, "title": "How to tune Gaussian Processes", "user": {"login": "Arktius", "id": 31614164, "node_id": "MDQ6VXNlcjMxNjE0MTY0", "avatar_url": "https://avatars3.githubusercontent.com/u/31614164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arktius", "html_url": "https://github.com/Arktius", "followers_url": "https://api.github.com/users/Arktius/followers", "following_url": "https://api.github.com/users/Arktius/following{/other_user}", "gists_url": "https://api.github.com/users/Arktius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arktius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arktius/subscriptions", "organizations_url": "https://api.github.com/users/Arktius/orgs", "repos_url": "https://api.github.com/users/Arktius/repos", "events_url": "https://api.github.com/users/Arktius/events{/privacy}", "received_events_url": "https://api.github.com/users/Arktius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-06T12:10:16Z", "updated_at": "2020-05-02T23:03:37Z", "closed_at": "2020-05-02T23:03:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hej folks,\r\n\r\nI've read the [advanced-tour](https://github.com/fmfn/BayesianOptimization/blob/master/examples/advanced-tour.ipynb) but there's hardly any details regarding optimizing the GPs. Ok, there are the parameters n_restarts_optimizer, alpha, normalize_y and the kernel, but how do I tweak them or should I keep them as they are? Can I figure out, that one of these parameters isn't correctly set? Any advice someone?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/201", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/201/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/201/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/201", "id": 560874167, "node_id": "MDU6SXNzdWU1NjA4NzQxNjc=", "number": 201, "title": " Dealing with discrete parameters (Advanced Tour) - Why is 'w' still of type float sometimes?", "user": {"login": "Arktius", "id": 31614164, "node_id": "MDQ6VXNlcjMxNjE0MTY0", "avatar_url": "https://avatars3.githubusercontent.com/u/31614164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Arktius", "html_url": "https://github.com/Arktius", "followers_url": "https://api.github.com/users/Arktius/followers", "following_url": "https://api.github.com/users/Arktius/following{/other_user}", "gists_url": "https://api.github.com/users/Arktius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Arktius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Arktius/subscriptions", "organizations_url": "https://api.github.com/users/Arktius/orgs", "repos_url": "https://api.github.com/users/Arktius/repos", "events_url": "https://api.github.com/users/Arktius/events{/privacy}", "received_events_url": "https://api.github.com/users/Arktius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-06T09:12:35Z", "updated_at": "2020-05-02T23:05:43Z", "closed_at": "2020-05-02T23:05:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey folks, I'm halfway through with the advanced tour and a question came up. They cast the parameter w to int, but the optimizer saved it as float anyways. \r\n\r\n![image](https://user-images.githubusercontent.com/31614164/73921300-5893e280-48c7-11ea-99bb-9790d1b3d45f.png)\r\n\r\n\r\nWhy can't one use the approach from the 1st paragraph Suggest-Evaluate-Register Paradigm and alter the suggested point before handing it in? \r\n\r\n```\r\noptimizer = BayesianOptimization(\r\n    f=None,\r\n    pbounds={'x': (-10, 10), 'y': (-10, 10), 'w': (0, 5)},\r\n    verbose=2,\r\n    random_state=1,\r\n)\r\nfrom bayes_opt import UtilityFunction\r\nutility = UtilityFunction(kind=\"ucb\", kappa=2.5, xi=0.0)\r\n\r\nnext_point_to_probe = optimizer.suggest(utility)\r\nnext_point_to_probe.update({'w':int(next_point_to_probe['w']}) \r\n\r\ntarget = black_box_function(**next_point_to_probe)\r\nprint(\"Found the target value to be:\", target)\r\n\r\n\r\noptimizer.register(\r\n    params=next_point_to_probe,\r\n    target=target,\r\n)\r\n```\r\n\r\nAm I overlooking something?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/200", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/200/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/200/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/200", "id": 558700931, "node_id": "MDU6SXNzdWU1NTg3MDA5MzE=", "number": 200, "title": "Invalid parameters", "user": {"login": "murbard", "id": 1591742, "node_id": "MDQ6VXNlcjE1OTE3NDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1591742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murbard", "html_url": "https://github.com/murbard", "followers_url": "https://api.github.com/users/murbard/followers", "following_url": "https://api.github.com/users/murbard/following{/other_user}", "gists_url": "https://api.github.com/users/murbard/gists{/gist_id}", "starred_url": "https://api.github.com/users/murbard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murbard/subscriptions", "organizations_url": "https://api.github.com/users/murbard/orgs", "repos_url": "https://api.github.com/users/murbard/repos", "events_url": "https://api.github.com/users/murbard/events{/privacy}", "received_events_url": "https://api.github.com/users/murbard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-02T14:02:39Z", "updated_at": "2020-05-03T14:36:37Z", "closed_at": "2020-05-03T14:36:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The domain of my function is not a box, there are parts of it where the function will suddenly jump of a cliff and return -inf, mostly due to hard to avoid loss of precision. I've been tricking the optimizer into accepting it by passing -1e100 instead, but I think this forces the Gaussian process to model that cliff and get the wrong idea. Is it possible for the function to just tell the Gaussian process: \"go look somewhere else!\"?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/199", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/199/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/199/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/199", "id": 548726004, "node_id": "MDU6SXNzdWU1NDg3MjYwMDQ=", "number": 199, "title": "not working if objective function score is negative", "user": {"login": "nchos88", "id": 36718545, "node_id": "MDQ6VXNlcjM2NzE4NTQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/36718545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nchos88", "html_url": "https://github.com/nchos88", "followers_url": "https://api.github.com/users/nchos88/followers", "following_url": "https://api.github.com/users/nchos88/following{/other_user}", "gists_url": "https://api.github.com/users/nchos88/gists{/gist_id}", "starred_url": "https://api.github.com/users/nchos88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nchos88/subscriptions", "organizations_url": "https://api.github.com/users/nchos88/orgs", "repos_url": "https://api.github.com/users/nchos88/repos", "events_url": "https://api.github.com/users/nchos88/events{/privacy}", "received_events_url": "https://api.github.com/users/nchos88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-13T06:13:33Z", "updated_at": "2020-05-02T23:04:45Z", "closed_at": "2020-05-02T23:04:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "-714 is better than -1 with -1 * rmse  score\r\n\r\nwhat is problem? \r\n\r\n![bay](https://user-images.githubusercontent.com/36718545/72235702-f96be680-3616-11ea-9a22-105e41396bdd.png)\r\n\r\nscore function is calculated like below \r\n`result = -1 * mean_squared_error(ytest, pred)`\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/198", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/198/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/198/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/198", "id": 546145417, "node_id": "MDU6SXNzdWU1NDYxNDU0MTc=", "number": 198, "title": "Do we need to normalize input value?", "user": {"login": "ThyrixYang", "id": 11371254, "node_id": "MDQ6VXNlcjExMzcxMjU0", "avatar_url": "https://avatars1.githubusercontent.com/u/11371254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThyrixYang", "html_url": "https://github.com/ThyrixYang", "followers_url": "https://api.github.com/users/ThyrixYang/followers", "following_url": "https://api.github.com/users/ThyrixYang/following{/other_user}", "gists_url": "https://api.github.com/users/ThyrixYang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThyrixYang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThyrixYang/subscriptions", "organizations_url": "https://api.github.com/users/ThyrixYang/orgs", "repos_url": "https://api.github.com/users/ThyrixYang/repos", "events_url": "https://api.github.com/users/ThyrixYang/events{/privacy}", "received_events_url": "https://api.github.com/users/ThyrixYang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-07T08:21:29Z", "updated_at": "2020-08-07T10:22:36Z", "closed_at": "2020-05-01T16:10:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "For example, we have parameter x1 within range(-10, 10) and x2 within range(-0.1, 0.1), do we need to normalize both x1 and x2 to e.g. range(-1.0, 1.0) for better performance?\r\n\r\nI found that some parameter stuck on an ending point in the very beginning and never change after that, is this an outcome of different scale of input paramters?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/196", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/196/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/196/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/196", "id": 540645755, "node_id": "MDU6SXNzdWU1NDA2NDU3NTU=", "number": 196, "title": "Have you implemented the 3D visualisaton of the bayesian optimiser as shown in the description (Bayesian optimisation in Action?))", "user": {"login": "DG6666666", "id": 59036159, "node_id": "MDQ6VXNlcjU5MDM2MTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/59036159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DG6666666", "html_url": "https://github.com/DG6666666", "followers_url": "https://api.github.com/users/DG6666666/followers", "following_url": "https://api.github.com/users/DG6666666/following{/other_user}", "gists_url": "https://api.github.com/users/DG6666666/gists{/gist_id}", "starred_url": "https://api.github.com/users/DG6666666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DG6666666/subscriptions", "organizations_url": "https://api.github.com/users/DG6666666/orgs", "repos_url": "https://api.github.com/users/DG6666666/repos", "events_url": "https://api.github.com/users/DG6666666/events{/privacy}", "received_events_url": "https://api.github.com/users/DG6666666/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-19T23:46:34Z", "updated_at": "2020-05-03T14:38:23Z", "closed_at": "2020-05-03T14:38:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/195", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/195/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/195/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/195", "id": 540645488, "node_id": "MDU6SXNzdWU1NDA2NDU0ODg=", "number": 195, "title": "Have you implemented the 3D visualisaton of the bayesian optimiser as shown in the description (Bayesianoptimisation in action?))", "user": {"login": "DG6666666", "id": 59036159, "node_id": "MDQ6VXNlcjU5MDM2MTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/59036159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DG6666666", "html_url": "https://github.com/DG6666666", "followers_url": "https://api.github.com/users/DG6666666/followers", "following_url": "https://api.github.com/users/DG6666666/following{/other_user}", "gists_url": "https://api.github.com/users/DG6666666/gists{/gist_id}", "starred_url": "https://api.github.com/users/DG6666666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DG6666666/subscriptions", "organizations_url": "https://api.github.com/users/DG6666666/orgs", "repos_url": "https://api.github.com/users/DG6666666/repos", "events_url": "https://api.github.com/users/DG6666666/events{/privacy}", "received_events_url": "https://api.github.com/users/DG6666666/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-19T23:45:29Z", "updated_at": "2019-12-19T23:45:45Z", "closed_at": "2019-12-19T23:45:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/194", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/194/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/194/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/194", "id": 540578875, "node_id": "MDU6SXNzdWU1NDA1Nzg4NzU=", "number": 194, "title": "Minimize, not maximize", "user": {"login": "ornlpmcp", "id": 52468590, "node_id": "MDQ6VXNlcjUyNDY4NTkw", "avatar_url": "https://avatars3.githubusercontent.com/u/52468590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ornlpmcp", "html_url": "https://github.com/ornlpmcp", "followers_url": "https://api.github.com/users/ornlpmcp/followers", "following_url": "https://api.github.com/users/ornlpmcp/following{/other_user}", "gists_url": "https://api.github.com/users/ornlpmcp/gists{/gist_id}", "starred_url": "https://api.github.com/users/ornlpmcp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ornlpmcp/subscriptions", "organizations_url": "https://api.github.com/users/ornlpmcp/orgs", "repos_url": "https://api.github.com/users/ornlpmcp/repos", "events_url": "https://api.github.com/users/ornlpmcp/events{/privacy}", "received_events_url": "https://api.github.com/users/ornlpmcp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-19T21:29:56Z", "updated_at": "2019-12-19T21:56:59Z", "closed_at": "2019-12-19T21:56:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "issue resolved", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/193", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/193/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/193/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/193", "id": 540094436, "node_id": "MDU6SXNzdWU1NDAwOTQ0MzY=", "number": 193, "title": "TypeError: 'int' object is not subscriptable , after several iteration", "user": {"login": "nchos88", "id": 36718545, "node_id": "MDQ6VXNlcjM2NzE4NTQ1", "avatar_url": "https://avatars1.githubusercontent.com/u/36718545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nchos88", "html_url": "https://github.com/nchos88", "followers_url": "https://api.github.com/users/nchos88/followers", "following_url": "https://api.github.com/users/nchos88/following{/other_user}", "gists_url": "https://api.github.com/users/nchos88/gists{/gist_id}", "starred_url": "https://api.github.com/users/nchos88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nchos88/subscriptions", "organizations_url": "https://api.github.com/users/nchos88/orgs", "repos_url": "https://api.github.com/users/nchos88/repos", "events_url": "https://api.github.com/users/nchos88/events{/privacy}", "received_events_url": "https://api.github.com/users/nchos88/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-19T05:51:42Z", "updated_at": "2020-05-03T14:37:18Z", "closed_at": "2020-05-03T14:37:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/36718545/71148216-6be2e400-226e-11ea-9755-96d037c99e64.png)\r\n\r\nos : windows 10 64bits\r\npython : 3.7\r\nLib : xgboost , sklearn\r\n\r\nI got this error randomly. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/192", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/192/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/192/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/192", "id": 540004660, "node_id": "MDU6SXNzdWU1NDAwMDQ2NjA=", "number": 192, "title": "Giving previous output to Bayesian Optimiser", "user": {"login": "DG6666666", "id": 59036159, "node_id": "MDQ6VXNlcjU5MDM2MTU5", "avatar_url": "https://avatars1.githubusercontent.com/u/59036159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DG6666666", "html_url": "https://github.com/DG6666666", "followers_url": "https://api.github.com/users/DG6666666/followers", "following_url": "https://api.github.com/users/DG6666666/following{/other_user}", "gists_url": "https://api.github.com/users/DG6666666/gists{/gist_id}", "starred_url": "https://api.github.com/users/DG6666666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DG6666666/subscriptions", "organizations_url": "https://api.github.com/users/DG6666666/orgs", "repos_url": "https://api.github.com/users/DG6666666/repos", "events_url": "https://api.github.com/users/DG6666666/events{/privacy}", "received_events_url": "https://api.github.com/users/DG6666666/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-19T00:43:24Z", "updated_at": "2020-01-12T07:48:28Z", "closed_at": "2020-01-07T23:07:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can we give the input in csv to Bayesian Optimiser to start the iterations considering the previous outputs? How can we do this? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/188", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/188/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/188/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/188", "id": 526679400, "node_id": "MDU6SXNzdWU1MjY2Nzk0MDA=", "number": 188, "title": "scikit-learn's Gaussian Process bug might be affecting your results", "user": {"login": "Amir-Arsalan", "id": 6061721, "node_id": "MDQ6VXNlcjYwNjE3MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6061721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amir-Arsalan", "html_url": "https://github.com/Amir-Arsalan", "followers_url": "https://api.github.com/users/Amir-Arsalan/followers", "following_url": "https://api.github.com/users/Amir-Arsalan/following{/other_user}", "gists_url": "https://api.github.com/users/Amir-Arsalan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amir-Arsalan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amir-Arsalan/subscriptions", "organizations_url": "https://api.github.com/users/Amir-Arsalan/orgs", "repos_url": "https://api.github.com/users/Amir-Arsalan/repos", "events_url": "https://api.github.com/users/Amir-Arsalan/events{/privacy}", "received_events_url": "https://api.github.com/users/Amir-Arsalan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 104976495, "node_id": "MDU6TGFiZWwxMDQ5NzY0OTU=", "url": "https://api.github.com/repos/fmfn/BayesianOptimization/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "fmfn", "id": 7664252, "node_id": "MDQ6VXNlcjc2NjQyNTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7664252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmfn", "html_url": "https://github.com/fmfn", "followers_url": "https://api.github.com/users/fmfn/followers", "following_url": "https://api.github.com/users/fmfn/following{/other_user}", "gists_url": "https://api.github.com/users/fmfn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmfn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmfn/subscriptions", "organizations_url": "https://api.github.com/users/fmfn/orgs", "repos_url": "https://api.github.com/users/fmfn/repos", "events_url": "https://api.github.com/users/fmfn/events{/privacy}", "received_events_url": "https://api.github.com/users/fmfn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fmfn", "id": 7664252, "node_id": "MDQ6VXNlcjc2NjQyNTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7664252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmfn", "html_url": "https://github.com/fmfn", "followers_url": "https://api.github.com/users/fmfn/followers", "following_url": "https://api.github.com/users/fmfn/following{/other_user}", "gists_url": "https://api.github.com/users/fmfn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmfn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmfn/subscriptions", "organizations_url": "https://api.github.com/users/fmfn/orgs", "repos_url": "https://api.github.com/users/fmfn/repos", "events_url": "https://api.github.com/users/fmfn/events{/privacy}", "received_events_url": "https://api.github.com/users/fmfn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-11-21T15:48:19Z", "updated_at": "2020-07-14T15:51:00Z", "closed_at": "2020-07-14T15:51:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is not necessarily an issue with `bayes_opt` but it's highly related and therefore I thought I should let you know about it.\r\n\r\nRecently, I found a bug that I recently [found](https://github.com/scikit-learn/scikit-learn/issues/15612) in scikit-learn's Gaussian Process module that might be affecting the results you get from `bayes_opt` since `bayes_opt` uses scikit-learn's GP module as the surrogate model. However, in case `bayes_opt` only depends on the _relative_ standard deviation values, which I think is the case, you will be safe and probably the bug won't be affecting you that much. That's why I asked the scikit-learn developers in [one of the comments](https://github.com/scikit-learn/scikit-learn/issues/15612#issuecomment-555082985) to add a flag whose `False` value will basically return the _relative_ std values that are within [0, 1]. But in case `bayes_opt` depends on the actual values of the standard deviation it is almost certain that you need to run your experiments again once this bug is fixed.\r\n\r\nAlso, the scikit-learn developers say they are busy at the moment and who knows when they're gonna be able to fix the issue. So maybe you can help them fix the bug and fix this issue as soon as possible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/186", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/186/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/186/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/186", "id": 518562502, "node_id": "MDU6SXNzdWU1MTg1NjI1MDI=", "number": 186, "title": "Supplying the optimizer with known values of the objective function", "user": {"login": "statsybanksy", "id": 30480731, "node_id": "MDQ6VXNlcjMwNDgwNzMx", "avatar_url": "https://avatars2.githubusercontent.com/u/30480731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/statsybanksy", "html_url": "https://github.com/statsybanksy", "followers_url": "https://api.github.com/users/statsybanksy/followers", "following_url": "https://api.github.com/users/statsybanksy/following{/other_user}", "gists_url": "https://api.github.com/users/statsybanksy/gists{/gist_id}", "starred_url": "https://api.github.com/users/statsybanksy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/statsybanksy/subscriptions", "organizations_url": "https://api.github.com/users/statsybanksy/orgs", "repos_url": "https://api.github.com/users/statsybanksy/repos", "events_url": "https://api.github.com/users/statsybanksy/events{/privacy}", "received_events_url": "https://api.github.com/users/statsybanksy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-06T15:53:41Z", "updated_at": "2019-11-08T22:20:10Z", "closed_at": "2019-11-08T22:20:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Assume you know the values of the objective function for e.g. 50 combinations of hyperparameters. Is it possible to supply those values to the optimiser during initialisation?\r\n\r\nThis is important in a situation when I ran the optimiser, collected the logs, and now (after some time) want to supply those logs to the optimiser and run it from there.\r\n\r\nIf it is possible, how could this be done?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/185", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/185/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/185/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/185", "id": 512860884, "node_id": "MDU6SXNzdWU1MTI4NjA4ODQ=", "number": 185, "title": "Possible output formatting issue", "user": {"login": "billtubbs", "id": 7958850, "node_id": "MDQ6VXNlcjc5NTg4NTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7958850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/billtubbs", "html_url": "https://github.com/billtubbs", "followers_url": "https://api.github.com/users/billtubbs/followers", "following_url": "https://api.github.com/users/billtubbs/following{/other_user}", "gists_url": "https://api.github.com/users/billtubbs/gists{/gist_id}", "starred_url": "https://api.github.com/users/billtubbs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/billtubbs/subscriptions", "organizations_url": "https://api.github.com/users/billtubbs/orgs", "repos_url": "https://api.github.com/users/billtubbs/repos", "events_url": "https://api.github.com/users/billtubbs/events{/privacy}", "received_events_url": "https://api.github.com/users/billtubbs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-26T17:09:08Z", "updated_at": "2020-05-03T14:38:06Z", "closed_at": "2020-05-03T14:38:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying this out for the first time so maybe I'm missing something here but I'm struggling to interpret the following output:\r\n\r\n```\r\n|   iter    |  target   |   theta   | theta_dot |     x     |   x_dot   |\r\n-------------------------------------------------------------------------\r\n|  1        | -4.958e+0 | -414.9    |  1.102e+0 | -499.9    | -197.7    |\r\n|  2        | -2.179e+0 | -1.766e+0 | -2.038e+0 | -313.7    | -154.4    |\r\n|  3        | -5.108e+0 | -697.5    |  1.087e+0 | -51.62    |  184.0    |\r\n|  4        | -9.701e+0 | -549.0    |  1.114e+0 | -275.1    | -5.597    |\r\n|  5        | -1.628e+0 | -419.8    |  1.089e+0 | -500.0    | -198.4    |\r\n|  6        | -1.432e+0 | -422.1    |  1.033e+0 | -491.1    | -145.3    |\r\n|  7        | -1.511e+0 | -491.1    |  1.03e+03 | -479.2    | -131.1    |\r\n|  8        | -1.032e+0 | -403.6    |  1.139e+0 | -488.0    | -240.3    |\r\n|  9        | -4.25e+04 | -697.5    |  1.087e+0 | -51.62    |  184.0    |\r\n|  10       | -3.725e+0 |  2.339e+0 | -1.965e+0 |  439.8    |  49.02    |\r\n|  11       | -1.443e+0 |  1.996e+0 | -2.224e+0 |  76.71    | -258.3    |\r\n|  12       | -1.143e+0 | -2.446e+0 |  116.7    |  389.8    | -128.8    |\r\n=========================================================================\r\n2019-10-26 10:04:38,635 root INFO Best avg. reward: -37247.02165338271\r\n2019-10-26 10:04:38,635 root INFO Best params: {'theta': 2338.7133936436103, 'theta_dot': -1964.8923085148285, 'x': 439.82148532567, 'x_dot': 49.016678840529835}\r\n```\r\n\r\nHere's a snippet of the code:\r\n```\r\n    optimizer.maximize(\r\n        init_points=2,\r\n        n_iter=10,\r\n    )\r\n    best_params = optimizer.max['params']\r\n    best_reward = optimizer.max['target']\r\n\r\n    logging.info(f\"Best avg. reward: {best_reward}\")\r\n    logging.info(f\"Best params: {best_params}\")\r\n```\r\n\r\nMy best guess at what is going on here is that the formatting of the exponent on the output has been truncated.  Is this what's happening and how do I fix it?\r\n\r\nI.e. `-37247` is being displayed as `-3.725e+0`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/184", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/184/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/184/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/184", "id": 512779375, "node_id": "MDU6SXNzdWU1MTI3NzkzNzU=", "number": 184, "title": "Adaptive Sampling on Functions with Multiple Output ", "user": {"login": "aljubrmj", "id": 44715677, "node_id": "MDQ6VXNlcjQ0NzE1Njc3", "avatar_url": "https://avatars1.githubusercontent.com/u/44715677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aljubrmj", "html_url": "https://github.com/aljubrmj", "followers_url": "https://api.github.com/users/aljubrmj/followers", "following_url": "https://api.github.com/users/aljubrmj/following{/other_user}", "gists_url": "https://api.github.com/users/aljubrmj/gists{/gist_id}", "starred_url": "https://api.github.com/users/aljubrmj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aljubrmj/subscriptions", "organizations_url": "https://api.github.com/users/aljubrmj/orgs", "repos_url": "https://api.github.com/users/aljubrmj/repos", "events_url": "https://api.github.com/users/aljubrmj/events{/privacy}", "received_events_url": "https://api.github.com/users/aljubrmj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-26T02:27:12Z", "updated_at": "2019-11-08T22:22:32Z", "closed_at": "2019-11-08T22:22:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you use this package only for adaptive sampling purposes (away from optimization) where I just want to fit the surface correctly with smallest number of points possible? Also, how can I use the package when my function has multiple outputs? \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/183", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/183/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/183/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/183", "id": 501842397, "node_id": "MDU6SXNzdWU1MDE4NDIzOTc=", "number": 183, "title": "How is parameter ranges determined?", "user": {"login": "ben-arnao", "id": 8053809, "node_id": "MDQ6VXNlcjgwNTM4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8053809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben-arnao", "html_url": "https://github.com/ben-arnao", "followers_url": "https://api.github.com/users/ben-arnao/followers", "following_url": "https://api.github.com/users/ben-arnao/following{/other_user}", "gists_url": "https://api.github.com/users/ben-arnao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben-arnao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben-arnao/subscriptions", "organizations_url": "https://api.github.com/users/ben-arnao/orgs", "repos_url": "https://api.github.com/users/ben-arnao/repos", "events_url": "https://api.github.com/users/ben-arnao/events{/privacy}", "received_events_url": "https://api.github.com/users/ben-arnao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-03T04:18:40Z", "updated_at": "2020-05-02T23:09:59Z", "closed_at": "2020-05-02T23:09:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Obviously different params operate on different scales. So they require different scales of adjustment. I assume that the same scale isnt use for all parameters? If the range of search space and optimization is parameter specific. Is this determined by the bounds you supply for a parameter? Is there a way to manually set this value independent of bounds?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/182", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/182/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/182/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/182", "id": 501841744, "node_id": "MDU6SXNzdWU1MDE4NDE3NDQ=", "number": 182, "title": "For discrete values, is rounding better than truncating?", "user": {"login": "ben-arnao", "id": 8053809, "node_id": "MDQ6VXNlcjgwNTM4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8053809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben-arnao", "html_url": "https://github.com/ben-arnao", "followers_url": "https://api.github.com/users/ben-arnao/followers", "following_url": "https://api.github.com/users/ben-arnao/following{/other_user}", "gists_url": "https://api.github.com/users/ben-arnao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben-arnao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben-arnao/subscriptions", "organizations_url": "https://api.github.com/users/ben-arnao/orgs", "repos_url": "https://api.github.com/users/ben-arnao/repos", "events_url": "https://api.github.com/users/ben-arnao/events{/privacy}", "received_events_url": "https://api.github.com/users/ben-arnao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-03T04:16:20Z", "updated_at": "2019-11-22T16:05:22Z", "closed_at": "2019-11-22T16:05:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The proposal to deal with discrete params with this library is just to create a wrapper function which casts to int. Would rounding make more sense as it doesn't favor upward or downward motion? By truncating a float dont you make it harder for the model to move up a value as opposed to down since you need to move much further from the best value?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/181", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/181/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/181/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/181", "id": 499904622, "node_id": "MDU6SXNzdWU0OTk5MDQ2MjI=", "number": 181, "title": "import JSONLogger", "user": {"login": "Amin-Tgz", "id": 19725851, "node_id": "MDQ6VXNlcjE5NzI1ODUx", "avatar_url": "https://avatars1.githubusercontent.com/u/19725851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amin-Tgz", "html_url": "https://github.com/Amin-Tgz", "followers_url": "https://api.github.com/users/Amin-Tgz/followers", "following_url": "https://api.github.com/users/Amin-Tgz/following{/other_user}", "gists_url": "https://api.github.com/users/Amin-Tgz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amin-Tgz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amin-Tgz/subscriptions", "organizations_url": "https://api.github.com/users/Amin-Tgz/orgs", "repos_url": "https://api.github.com/users/Amin-Tgz/repos", "events_url": "https://api.github.com/users/Amin-Tgz/events{/privacy}", "received_events_url": "https://api.github.com/users/Amin-Tgz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-29T11:39:06Z", "updated_at": "2020-03-09T17:54:23Z", "closed_at": "2020-03-09T17:54:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nit seems that JsonLogger exists in [logger.py](https://github.com/fmfn/BayesianOptimization/blob/master/bayes_opt/logger.py) not in [observer.py](https://github.com/fmfn/BayesianOptimization/blob/master/bayes_opt/observer.py)\r\nbut in all of the examples, you've imported it from observer\r\n`from bayes_opt.observer import JSONLogger`\r\n\r\nso replace **bayes_opt.observer** by **bayes_opt.logger** solves this problem", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/180", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/180/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/180/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/180", "id": 497439543, "node_id": "MDU6SXNzdWU0OTc0Mzk1NDM=", "number": 180, "title": "NaN found and optimization stopped", "user": {"login": "Sceki", "id": 33602846, "node_id": "MDQ6VXNlcjMzNjAyODQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/33602846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sceki", "html_url": "https://github.com/Sceki", "followers_url": "https://api.github.com/users/Sceki/followers", "following_url": "https://api.github.com/users/Sceki/following{/other_user}", "gists_url": "https://api.github.com/users/Sceki/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sceki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sceki/subscriptions", "organizations_url": "https://api.github.com/users/Sceki/orgs", "repos_url": "https://api.github.com/users/Sceki/repos", "events_url": "https://api.github.com/users/Sceki/events{/privacy}", "received_events_url": "https://api.github.com/users/Sceki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-24T03:54:39Z", "updated_at": "2019-09-27T12:57:16Z", "closed_at": "2019-09-27T12:57:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I am trying to do hyperparameter optimization using Bayesian optimization for neural networks. However, I encountered this issue: \r\nValueError: Input contains NaN, infinity or a value too large for dtype('float64'). \r\n\r\nThe weird thing is that when I try to run the same net where Bayesian optimization stops in a separate network (without optimization) I do not have any issue (no NaN\u2019s found as mean squared error, i.e. the fitness, or anything else).\r\n\r\nDo you know where this error come from?\r\n\r\n(Similar issue to #178 , why was this closed?) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/179", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/179/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/179/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/179", "id": 497245405, "node_id": "MDU6SXNzdWU0OTcyNDU0MDU=", "number": 179, "title": "Running BFGS with random's x_max", "user": {"login": "Golbstein", "id": 31940058, "node_id": "MDQ6VXNlcjMxOTQwMDU4", "avatar_url": "https://avatars0.githubusercontent.com/u/31940058?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Golbstein", "html_url": "https://github.com/Golbstein", "followers_url": "https://api.github.com/users/Golbstein/followers", "following_url": "https://api.github.com/users/Golbstein/following{/other_user}", "gists_url": "https://api.github.com/users/Golbstein/gists{/gist_id}", "starred_url": "https://api.github.com/users/Golbstein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Golbstein/subscriptions", "organizations_url": "https://api.github.com/users/Golbstein/orgs", "repos_url": "https://api.github.com/users/Golbstein/repos", "events_url": "https://api.github.com/users/Golbstein/events{/privacy}", "received_events_url": "https://api.github.com/users/Golbstein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-23T18:04:12Z", "updated_at": "2019-09-23T19:12:42Z", "closed_at": "2019-09-23T19:12:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\r\nWhy are you maximizing 250 random points in BFGS and not the argmax point (x_max) of the random sampling?\r\n\r\nWouldn't it be more logical and faster?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/178", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/178/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/178/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/178", "id": 496792945, "node_id": "MDU6SXNzdWU0OTY3OTI5NDU=", "number": 178, "title": "ValueError: Input contains NaN, infinity or a value too large for dtype('float64').", "user": {"login": "lollopes", "id": 46981565, "node_id": "MDQ6VXNlcjQ2OTgxNTY1", "avatar_url": "https://avatars2.githubusercontent.com/u/46981565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lollopes", "html_url": "https://github.com/lollopes", "followers_url": "https://api.github.com/users/lollopes/followers", "following_url": "https://api.github.com/users/lollopes/following{/other_user}", "gists_url": "https://api.github.com/users/lollopes/gists{/gist_id}", "starred_url": "https://api.github.com/users/lollopes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lollopes/subscriptions", "organizations_url": "https://api.github.com/users/lollopes/orgs", "repos_url": "https://api.github.com/users/lollopes/repos", "events_url": "https://api.github.com/users/lollopes/events{/privacy}", "received_events_url": "https://api.github.com/users/lollopes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-22T15:17:44Z", "updated_at": "2019-09-24T03:48:32Z", "closed_at": "2019-09-23T19:13:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any idea where is this error coming from ? is the algorithm searching outside boundaries ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/177", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/177/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/177/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/177", "id": 481312531, "node_id": "MDU6SXNzdWU0ODEzMTI1MzE=", "number": 177, "title": "Can no longer access .max attribute of BayesianOptimization object", "user": {"login": "bsehra", "id": 18310439, "node_id": "MDQ6VXNlcjE4MzEwNDM5", "avatar_url": "https://avatars2.githubusercontent.com/u/18310439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsehra", "html_url": "https://github.com/bsehra", "followers_url": "https://api.github.com/users/bsehra/followers", "following_url": "https://api.github.com/users/bsehra/following{/other_user}", "gists_url": "https://api.github.com/users/bsehra/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsehra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsehra/subscriptions", "organizations_url": "https://api.github.com/users/bsehra/orgs", "repos_url": "https://api.github.com/users/bsehra/repos", "events_url": "https://api.github.com/users/bsehra/events{/privacy}", "received_events_url": "https://api.github.com/users/bsehra/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-15T19:57:20Z", "updated_at": "2020-05-11T09:22:23Z", "closed_at": "2019-08-18T00:11:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've had no issues with this previously, but recently I ran a script to optimize random forest hyperparameters for maximum classification accuracy. The run is normal apart from when I wish to print out the set of parameters which maximise the accuracy score through the .max attribute.\r\n\r\nNow I get an error:\r\nAttributeError: 'BayesianOptimization' object has no attribute 'max'\r\n\r\nHere is the relevent part of the code (I took your online script as a test):\r\n    optimizer = BayesianOptimization(\r\n        f=rfc_crossval,\r\n        pbounds={\r\n            \"n_estimators\": (100, 250),\r\n            \"min_samples_split\": (2, 17),\r\n            \"max_features\": (0, 1)\r\n        },\r\n        random_state=1234,\r\n        verbose=1\r\n    )\r\n    optimizer.maximize(init_points=10, n_iter=25)\r\n\r\n    print(\"Final result:\", optimizer.max)\r\n\r\nError message:\r\nprint(\"Final result:\", optimizer.max)\r\nAttributeError: 'BayesianOptimization' object has no attribute 'max'\r\n\r\nI've run older scripts and they also now give me the same error when they didn't before. Any idea what may have gone wrong?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/173", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/173/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/173/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/173", "id": 468453922, "node_id": "MDU6SXNzdWU0Njg0NTM5MjI=", "number": 173, "title": "The optimizer does not return the parameters regarding the largest target value!", "user": {"login": "SongWang2017", "id": 23143150, "node_id": "MDQ6VXNlcjIzMTQzMTUw", "avatar_url": "https://avatars0.githubusercontent.com/u/23143150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SongWang2017", "html_url": "https://github.com/SongWang2017", "followers_url": "https://api.github.com/users/SongWang2017/followers", "following_url": "https://api.github.com/users/SongWang2017/following{/other_user}", "gists_url": "https://api.github.com/users/SongWang2017/gists{/gist_id}", "starred_url": "https://api.github.com/users/SongWang2017/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SongWang2017/subscriptions", "organizations_url": "https://api.github.com/users/SongWang2017/orgs", "repos_url": "https://api.github.com/users/SongWang2017/repos", "events_url": "https://api.github.com/users/SongWang2017/events{/privacy}", "received_events_url": "https://api.github.com/users/SongWang2017/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-16T05:26:39Z", "updated_at": "2019-07-16T18:53:10Z", "closed_at": "2019-07-16T18:53:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there! Thanks for implementing this terrific tool, which greatly reduce my work.\r\n\r\nWhen I tried the example scripts titled sklearn_example.py (https://github.com/fmfn/BayesianOptimization/blob/master/examples/sklearn_example.py).\r\nThe original code is working as expected and return the parameters regarding the best target value.\r\n\r\nI modified my code to try the regression problem, and modified the code to try svr, the terminal outputed 15 rounds of evaluation(with initial points set to 5 and n_iter = 10), then I can see the first 8 rounds moves in the direction of maximize target. However the 9th round output a target value significantly smaller (two orders smaller), and then from 9th round to 15th round, the target value again was increasing, and the output returned the maximum value found in the latter rounds and is clearly much smaller than the value find in the first 8 rounds.\r\n\r\nWould anyone kindly have a look at the code and output listed below and offer some suggestions?\r\n\r\nthe code: \r\n*def get_data():\r\n    \"\"\"Synthetic binary classification dataset.\"\"\"\r\n    data, targets = make_regression(\r\n        n_samples=1000,\r\n        n_features=12,\r\n        n_informative=12,\r\n        random_state=134985745,\r\n    )\r\n    scaler = preprocessing.StandardScaler().fit(data)\r\n    data = scaler.transform(data)\r\n    return data, targets*\r\n\r\n\r\n*def svr_cv(C, gamma, data, targets):\r\n    \"\"\"SVC cross validation.\r\n    This function will instantiate a SVC classifier with parameters C and\r\n    gamma. Combined with data and targets this will in turn be used to perform\r\n    cross validation. The result of cross validation is returned.\r\n    Our goal is to find combinations of C and gamma that maximizes the roc_auc\r\n    metric.\r\n    \"\"\"\r\n    # estimator = SVR(C=C, gamma=gamma, random_state=2)\r\n    estimator = SVR(C=C, gamma=gamma)\r\n    cval = cross_val_score(estimator, data, targets, scoring= 'neg_mean_squared_error', cv=4, n_jobs=-1)\r\n    return cval.mean()*\r\n\r\n\r\n*def optimize_svr(data, targets):\r\n    \"\"\"Apply Bayesian Optimization to SVC parameters.\"\"\"\r\n    def svr_crossval(expC, expGamma):\r\n        \"\"\"Wrapper of SVC cross validation.\r\n        Notice how we transform between regular and log scale. While this\r\n        is not technically necessary, it greatly improves the performance\r\n        of the optimizer.\r\n        \"\"\"\r\n        C = 10 ** expC\r\n        gamma = 10 ** expGamma\r\n        return svr_cv(C=C, gamma=gamma, data=data, targets=targets)\r\n\r\n    optimizer = BayesianOptimization(\r\n        f=svr_crossval,\r\n        pbounds={\"expC\": (-3, 2), \"expGamma\": (-4, -1)},\r\n        random_state=1234,\r\n        verbose=2\r\n    )\r\n    # optimizer.maximize(\r\n    #     init_points=2,\r\n    #     n_iter=3,\r\n    # )\r\n    optimizer.maximize(init_points=5, n_iter=10)\r\n\r\n    print(\"Final result:\", optimizer.max)*\r\n\r\n*if __name__ == \"__main__\":\r\n    data, targets = get_data()\r\n    print(data[:5, :])\r\n    print(targets[:5])\r\n    print(Colours.yellow(\"--- Optimizing SVM ---\"))\r\n    optimize_svr(data, targets)*\r\n\r\nand the output:\r\n--- Optimizing SVM ---\r\n|   iter    |  target   |   expC    | expGamma  |\r\n-------------------------------------------------\r\n|  1        | -4.167e+0 | -2.042    | -2.134    |\r\n|  2        | -4.082e+0 | -0.8114   | -1.644    |\r\n|  3        | -3.939e+0 |  0.8999   | -3.182    |\r\n|  4        | -4.155e+0 | -1.618    | -1.594    |\r\n|  5        | -1.466e+0 |  1.791    | -1.372    |\r\n|  6        | -1.483e+0 |  1.793    | -1.368    |\r\n|  7        | -1.344e+0 |  1.77     | -1.402    |\r\n|  8        | -1.208e+0 |  1.752    | -1.437    |\r\n|  9        | -781.3    |  1.844    | -1.545    |\r\n|  10       | -777.3    |  1.829    | -1.549    |\r\n|  11       | -754.2    |  1.831    | -1.557    |\r\n|  12       | -572.5    |  1.864    | -1.628    |\r\n|  13       | -448.3    |  1.926    | -1.686    |\r\n|  14       | -393.7    |  1.977    | -1.714    |\r\n|  15       | -379.2    |  2.0      | -1.721    |\r\n=================================================\r\nFinal result: {'target': -379.21250753066306, 'params': {'expC': 2.0, 'expGamma': -1.7207328291072168}}\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/172", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/172/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/172/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/172", "id": 466086767, "node_id": "MDU6SXNzdWU0NjYwODY3Njc=", "number": 172, "title": "Passing a list of parameters and results", "user": {"login": "rafaelpadilla", "id": 31217453, "node_id": "MDQ6VXNlcjMxMjE3NDUz", "avatar_url": "https://avatars3.githubusercontent.com/u/31217453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rafaelpadilla", "html_url": "https://github.com/rafaelpadilla", "followers_url": "https://api.github.com/users/rafaelpadilla/followers", "following_url": "https://api.github.com/users/rafaelpadilla/following{/other_user}", "gists_url": "https://api.github.com/users/rafaelpadilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/rafaelpadilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rafaelpadilla/subscriptions", "organizations_url": "https://api.github.com/users/rafaelpadilla/orgs", "repos_url": "https://api.github.com/users/rafaelpadilla/repos", "events_url": "https://api.github.com/users/rafaelpadilla/events{/privacy}", "received_events_url": "https://api.github.com/users/rafaelpadilla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-10T04:03:14Z", "updated_at": "2019-07-15T22:44:09Z", "closed_at": "2019-07-15T22:44:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "@fmfn,\r\n\r\nI really appreciate your help on this point:\r\n\r\nLet's say that during the optimization process I want to give the optimizer already **known** points and their target values. For instance:\r\n\r\nDuring the optimization process I realize the following points (that were not probed by the tool) have known target values:\r\n{'target': -4.44, 'params': {'y': 1, 'x': 2}}\r\n{'target': -3.12, 'params': {'y': 2, 'x': 3}}\r\n\r\nHow can I inform the process that I have a set of parameters with their respective target values (that were externally generated)? How to make it consider these points when probing next points?\r\n\r\nI might have to use the TargetSpace class, but I am not sure if I just pass the values to the function `register` is enough. Will it just add them in  the `_cache` tested points? Or will it also consider those points in the next iterations?\r\n\r\nThanks in advance,\r\nRafael", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/171", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/171/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/171/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/171", "id": 465003684, "node_id": "MDU6SXNzdWU0NjUwMDM2ODQ=", "number": 171, "title": "Data type for points", "user": {"login": "kellertobias", "id": 6940430, "node_id": "MDQ6VXNlcjY5NDA0MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/6940430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kellertobias", "html_url": "https://github.com/kellertobias", "followers_url": "https://api.github.com/users/kellertobias/followers", "following_url": "https://api.github.com/users/kellertobias/following{/other_user}", "gists_url": "https://api.github.com/users/kellertobias/gists{/gist_id}", "starred_url": "https://api.github.com/users/kellertobias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kellertobias/subscriptions", "organizations_url": "https://api.github.com/users/kellertobias/orgs", "repos_url": "https://api.github.com/users/kellertobias/repos", "events_url": "https://api.github.com/users/kellertobias/events{/privacy}", "received_events_url": "https://api.github.com/users/kellertobias/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-07T23:18:21Z", "updated_at": "2019-07-15T22:46:18Z", "closed_at": "2019-07-15T22:46:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having an optimization problem where some parameters are integers (such as the amount of lookahead steps).\r\n\r\nIs there a way to tell the optimizer that one of the parameters is no float or does it not matter?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/170", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/170/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/170/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/170", "id": 456547109, "node_id": "MDU6SXNzdWU0NTY1NDcxMDk=", "number": 170, "title": "API docs", "user": {"login": "bionicles", "id": 24532336, "node_id": "MDQ6VXNlcjI0NTMyMzM2", "avatar_url": "https://avatars2.githubusercontent.com/u/24532336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bionicles", "html_url": "https://github.com/bionicles", "followers_url": "https://api.github.com/users/bionicles/followers", "following_url": "https://api.github.com/users/bionicles/following{/other_user}", "gists_url": "https://api.github.com/users/bionicles/gists{/gist_id}", "starred_url": "https://api.github.com/users/bionicles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bionicles/subscriptions", "organizations_url": "https://api.github.com/users/bionicles/orgs", "repos_url": "https://api.github.com/users/bionicles/repos", "events_url": "https://api.github.com/users/bionicles/events{/privacy}", "received_events_url": "https://api.github.com/users/bionicles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-15T15:16:16Z", "updated_at": "2019-07-15T22:47:30Z", "closed_at": "2019-07-15T22:47:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "would it be possible to just get auto-generated api docs? we're using this for our molecular AI and just want to see the full list of methods without having to dig into examples", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/168", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/168/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/168/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/168", "id": 450972809, "node_id": "MDU6SXNzdWU0NTA5NzI4MDk=", "number": 168, "title": "Dealing with conditional hyperparameters", "user": {"login": "jredondopizarro", "id": 45992560, "node_id": "MDQ6VXNlcjQ1OTkyNTYw", "avatar_url": "https://avatars3.githubusercontent.com/u/45992560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jredondopizarro", "html_url": "https://github.com/jredondopizarro", "followers_url": "https://api.github.com/users/jredondopizarro/followers", "following_url": "https://api.github.com/users/jredondopizarro/following{/other_user}", "gists_url": "https://api.github.com/users/jredondopizarro/gists{/gist_id}", "starred_url": "https://api.github.com/users/jredondopizarro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jredondopizarro/subscriptions", "organizations_url": "https://api.github.com/users/jredondopizarro/orgs", "repos_url": "https://api.github.com/users/jredondopizarro/repos", "events_url": "https://api.github.com/users/jredondopizarro/events{/privacy}", "received_events_url": "https://api.github.com/users/jredondopizarro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-31T20:40:25Z", "updated_at": "2019-06-04T21:49:19Z", "closed_at": "2019-06-04T21:49:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Greetings.\r\n\r\nI would like to set up an experiment with  `number_of_layers` and `number_of_neurons_per_each_layer` hyperparameters, so I would need, for example, to exclude from the search space  the `number_of_neurons_in layer_4th` if the `number_of_layers` is < 4.\r\nIs there some way of doing this?\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/167", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/167/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/167/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/167", "id": 447170146, "node_id": "MDU6SXNzdWU0NDcxNzAxNDY=", "number": 167, "title": "No output with logger", "user": {"login": "Foolius", "id": 3611368, "node_id": "MDQ6VXNlcjM2MTEzNjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3611368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Foolius", "html_url": "https://github.com/Foolius", "followers_url": "https://api.github.com/users/Foolius/followers", "following_url": "https://api.github.com/users/Foolius/following{/other_user}", "gists_url": "https://api.github.com/users/Foolius/gists{/gist_id}", "starred_url": "https://api.github.com/users/Foolius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Foolius/subscriptions", "organizations_url": "https://api.github.com/users/Foolius/orgs", "repos_url": "https://api.github.com/users/Foolius/repos", "events_url": "https://api.github.com/users/Foolius/events{/privacy}", "received_events_url": "https://api.github.com/users/Foolius/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-22T14:27:34Z", "updated_at": "2019-06-04T21:50:11Z", "closed_at": "2019-06-04T21:50:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I followed the basic tour.\r\nWithout a logger I get the terminal output as it is in the notebook.\r\nBut when I turn on the logger exactly like it is done in the notebook I don't get the terminal output anymore unlike in the notebook where the output is still given.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/164", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/164/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/164/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/164", "id": 442786888, "node_id": "MDU6SXNzdWU0NDI3ODY4ODg=", "number": 164, "title": "Utility function to create `OptimizeResult` to reuse skopts plotting functions", "user": {"login": "sotte", "id": 79138, "node_id": "MDQ6VXNlcjc5MTM4", "avatar_url": "https://avatars3.githubusercontent.com/u/79138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sotte", "html_url": "https://github.com/sotte", "followers_url": "https://api.github.com/users/sotte/followers", "following_url": "https://api.github.com/users/sotte/following{/other_user}", "gists_url": "https://api.github.com/users/sotte/gists{/gist_id}", "starred_url": "https://api.github.com/users/sotte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sotte/subscriptions", "organizations_url": "https://api.github.com/users/sotte/orgs", "repos_url": "https://api.github.com/users/sotte/repos", "events_url": "https://api.github.com/users/sotte/events{/privacy}", "received_events_url": "https://api.github.com/users/sotte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-10T15:55:14Z", "updated_at": "2019-06-04T21:55:13Z", "closed_at": "2019-06-04T21:55:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "`skopt` can create some nice visualizations for an optimization run.\r\n![image](https://user-images.githubusercontent.com/79138/57539914-d1bbd480-734b-11e9-9155-d3115cee6564.png)\r\nSee https://scikit-optimize.github.io/notebooks/visualizing-results.html for more.\r\n\r\nIt would be nice if BayesianOptimization would also support this feature.\r\n\r\nThe plotting functions of skopt require a simple [`OptimizeResult`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.OptimizeResult.html) from scipy. If we turn the the results of BayesianOptimization into an `OptimizeResult` we could use the plotting functionality of skopt. I simple utility function could do the trick.\r\n\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/163", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/163/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/163/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/163", "id": 442580043, "node_id": "MDU6SXNzdWU0NDI1ODAwNDM=", "number": 163, "title": "This Cannot find the Min at suggestion(Need to optimize using Loss) ", "user": {"login": "aql315", "id": 44859951, "node_id": "MDQ6VXNlcjQ0ODU5OTUx", "avatar_url": "https://avatars1.githubusercontent.com/u/44859951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aql315", "html_url": "https://github.com/aql315", "followers_url": "https://api.github.com/users/aql315/followers", "following_url": "https://api.github.com/users/aql315/following{/other_user}", "gists_url": "https://api.github.com/users/aql315/gists{/gist_id}", "starred_url": "https://api.github.com/users/aql315/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aql315/subscriptions", "organizations_url": "https://api.github.com/users/aql315/orgs", "repos_url": "https://api.github.com/users/aql315/repos", "events_url": "https://api.github.com/users/aql315/events{/privacy}", "received_events_url": "https://api.github.com/users/aql315/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-10T07:36:03Z", "updated_at": "2019-05-10T13:57:00Z", "closed_at": "2019-05-10T13:57:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/162", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/162/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/162/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/162", "id": 441151409, "node_id": "MDU6SXNzdWU0NDExNTE0MDk=", "number": 162, "title": "Add `RandomOptimization`", "user": {"login": "sotte", "id": 79138, "node_id": "MDQ6VXNlcjc5MTM4", "avatar_url": "https://avatars3.githubusercontent.com/u/79138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sotte", "html_url": "https://github.com/sotte", "followers_url": "https://api.github.com/users/sotte/followers", "following_url": "https://api.github.com/users/sotte/following{/other_user}", "gists_url": "https://api.github.com/users/sotte/gists{/gist_id}", "starred_url": "https://api.github.com/users/sotte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sotte/subscriptions", "organizations_url": "https://api.github.com/users/sotte/orgs", "repos_url": "https://api.github.com/users/sotte/repos", "events_url": "https://api.github.com/users/sotte/events{/privacy}", "received_events_url": "https://api.github.com/users/sotte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-07T10:09:38Z", "updated_at": "2019-05-09T13:09:58Z", "closed_at": "2019-05-07T17:15:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I really like this the interface of this package!\r\nSometimes I wish there was `RandomOptimization` class so that I can do a random search with the same interface as `BayesianOptimization` (and maybe even parallelize it on all my cores).\r\n\r\nIf there is interest in this feature I could implement it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/161", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/161/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/161/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/161/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/161", "id": 438618429, "node_id": "MDU6SXNzdWU0Mzg2MTg0Mjk=", "number": 161, "title": "key error for multi-input model", "user": {"login": "anonymous297", "id": 43982672, "node_id": "MDQ6VXNlcjQzOTgyNjcy", "avatar_url": "https://avatars3.githubusercontent.com/u/43982672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anonymous297", "html_url": "https://github.com/anonymous297", "followers_url": "https://api.github.com/users/anonymous297/followers", "following_url": "https://api.github.com/users/anonymous297/following{/other_user}", "gists_url": "https://api.github.com/users/anonymous297/gists{/gist_id}", "starred_url": "https://api.github.com/users/anonymous297/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anonymous297/subscriptions", "organizations_url": "https://api.github.com/users/anonymous297/orgs", "repos_url": "https://api.github.com/users/anonymous297/repos", "events_url": "https://api.github.com/users/anonymous297/events{/privacy}", "received_events_url": "https://api.github.com/users/anonymous297/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-04-30T06:18:21Z", "updated_at": "2019-04-30T06:19:42Z", "closed_at": "2019-04-30T06:19:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/159", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/159/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/159/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/159", "id": 435660053, "node_id": "MDU6SXNzdWU0MzU2NjAwNTM=", "number": 159, "title": "Save, load and save again", "user": {"login": "rm-rf0", "id": 45525578, "node_id": "MDQ6VXNlcjQ1NTI1NTc4", "avatar_url": "https://avatars1.githubusercontent.com/u/45525578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rm-rf0", "html_url": "https://github.com/rm-rf0", "followers_url": "https://api.github.com/users/rm-rf0/followers", "following_url": "https://api.github.com/users/rm-rf0/following{/other_user}", "gists_url": "https://api.github.com/users/rm-rf0/gists{/gist_id}", "starred_url": "https://api.github.com/users/rm-rf0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rm-rf0/subscriptions", "organizations_url": "https://api.github.com/users/rm-rf0/orgs", "repos_url": "https://api.github.com/users/rm-rf0/repos", "events_url": "https://api.github.com/users/rm-rf0/events{/privacy}", "received_events_url": "https://api.github.com/users/rm-rf0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-04-22T09:12:02Z", "updated_at": "2020-08-17T18:12:05Z", "closed_at": "2020-05-25T15:11:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThanks for this useful library!\r\n\r\nI wonder how to do `save - load - save - load` multiple times?\r\nTo achieve this, I use the code below:\r\n```python\r\nif os.path.exists(log_path):\r\n    load_logs(optimizer, logs=[log_path])\r\n    print('Load {} records from disk.'.format(len(optimizer.space)))\r\n\r\nlogger = JSONLogger(path=log_path)\r\noptimizer.subscribe(Events.OPTMIZATION_STEP, logger)\r\n```\r\n\r\nBut it seems that this line \r\n```\r\nlogger = JSONLogger(path=log_path)\r\n```\r\nwill delete the orginal json file and previous records are lost.\r\n\r\nWhy do we need to do `os.remove(self._path)` in `JSONLogger.__init__()`?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/157", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/157/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/157/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/157", "id": 429647146, "node_id": "MDU6SXNzdWU0Mjk2NDcxNDY=", "number": 157, "title": "reproducibility", "user": {"login": "jiayeah9508", "id": 49304462, "node_id": "MDQ6VXNlcjQ5MzA0NDYy", "avatar_url": "https://avatars1.githubusercontent.com/u/49304462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiayeah9508", "html_url": "https://github.com/jiayeah9508", "followers_url": "https://api.github.com/users/jiayeah9508/followers", "following_url": "https://api.github.com/users/jiayeah9508/following{/other_user}", "gists_url": "https://api.github.com/users/jiayeah9508/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiayeah9508/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiayeah9508/subscriptions", "organizations_url": "https://api.github.com/users/jiayeah9508/orgs", "repos_url": "https://api.github.com/users/jiayeah9508/repos", "events_url": "https://api.github.com/users/jiayeah9508/events{/privacy}", "received_events_url": "https://api.github.com/users/jiayeah9508/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-05T08:48:21Z", "updated_at": "2019-04-05T17:04:33Z", "closed_at": "2019-04-05T17:04:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n  I am a student and l have used your library  to find the best parameters in my project  \uff0cto be honest, your code is excellent but  I found that when  I  use the same object funtion , same parameter bounds, same init point, same step number,  and random_state (the only one thing about random control in your code ) , the result is consistent in single machine , but different in different machine, though the numpy, scipy and scikitlearn are all same version.\r\n  Because reproducibility is important for paper, so I`ll appreciate it if you can tell me how to deal with this problem!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/156", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/156/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/156/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/156/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/156", "id": 425105163, "node_id": "MDU6SXNzdWU0MjUxMDUxNjM=", "number": 156, "title": "Variational Approximation", "user": {"login": "TensorTom", "id": 14287229, "node_id": "MDQ6VXNlcjE0Mjg3MjI5", "avatar_url": "https://avatars2.githubusercontent.com/u/14287229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TensorTom", "html_url": "https://github.com/TensorTom", "followers_url": "https://api.github.com/users/TensorTom/followers", "following_url": "https://api.github.com/users/TensorTom/following{/other_user}", "gists_url": "https://api.github.com/users/TensorTom/gists{/gist_id}", "starred_url": "https://api.github.com/users/TensorTom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TensorTom/subscriptions", "organizations_url": "https://api.github.com/users/TensorTom/orgs", "repos_url": "https://api.github.com/users/TensorTom/repos", "events_url": "https://api.github.com/users/TensorTom/events{/privacy}", "received_events_url": "https://api.github.com/users/TensorTom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-25T20:40:05Z", "updated_at": "2019-03-26T14:18:45Z", "closed_at": "2019-03-26T14:18:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Wondering if maintainers have seen this: https://github.com/rtqichen/ffjord", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/153", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/153/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/153/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/153", "id": 419171649, "node_id": "MDU6SXNzdWU0MTkxNzE2NDk=", "number": 153, "title": "BayesianOptimization with Multiprocessing", "user": {"login": "LucaCappelletti94", "id": 7738570, "node_id": "MDQ6VXNlcjc3Mzg1NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/7738570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LucaCappelletti94", "html_url": "https://github.com/LucaCappelletti94", "followers_url": "https://api.github.com/users/LucaCappelletti94/followers", "following_url": "https://api.github.com/users/LucaCappelletti94/following{/other_user}", "gists_url": "https://api.github.com/users/LucaCappelletti94/gists{/gist_id}", "starred_url": "https://api.github.com/users/LucaCappelletti94/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LucaCappelletti94/subscriptions", "organizations_url": "https://api.github.com/users/LucaCappelletti94/orgs", "repos_url": "https://api.github.com/users/LucaCappelletti94/repos", "events_url": "https://api.github.com/users/LucaCappelletti94/events{/privacy}", "received_events_url": "https://api.github.com/users/LucaCappelletti94/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-10T10:45:07Z", "updated_at": "2019-03-11T14:38:38Z", "closed_at": "2019-03-11T14:38:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\n\r\nFirst of all thank you for making this awesome library. We are loving it! I wanted to ask you if there is any way to make it work with multiprocessing, for exploring multiple parameters at the same time.\r\n\r\nAlso, there is any support for multi-machine optimization?\r\n\r\nIf there are no such feature, which other library would you suggest using?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/152", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/152/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/152/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/152", "id": 419084310, "node_id": "MDU6SXNzdWU0MTkwODQzMTA=", "number": 152, "title": "Question on generating multiple unique suggestions", "user": {"login": "dstauffer11m", "id": 22397545, "node_id": "MDQ6VXNlcjIyMzk3NTQ1", "avatar_url": "https://avatars2.githubusercontent.com/u/22397545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dstauffer11m", "html_url": "https://github.com/dstauffer11m", "followers_url": "https://api.github.com/users/dstauffer11m/followers", "following_url": "https://api.github.com/users/dstauffer11m/following{/other_user}", "gists_url": "https://api.github.com/users/dstauffer11m/gists{/gist_id}", "starred_url": "https://api.github.com/users/dstauffer11m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dstauffer11m/subscriptions", "organizations_url": "https://api.github.com/users/dstauffer11m/orgs", "repos_url": "https://api.github.com/users/dstauffer11m/repos", "events_url": "https://api.github.com/users/dstauffer11m/events{/privacy}", "received_events_url": "https://api.github.com/users/dstauffer11m/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-03-09T15:41:02Z", "updated_at": "2019-03-11T20:04:50Z", "closed_at": "2019-03-11T14:34:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using the suggest-evaluate-register paradigm, performing my function evaluations separately in parallel. Once we've moved past the initial random search stage and registered the first round of points, the suggest function now always returns the value suggested by utils.acq_max. However, I want to generate N different suggestions to evaluate at once since my function is expensive but parallelizable. Is there a suggested way to generate these suggestions? \r\n\r\nMy initial idea is to get a suggestion, register it as, say, the average value of the previous round, get another suggestion, etc.. repeat N times. This seems like it would space out suggestions reasonably well. Then actually evaluate these in parallel and register them with their real values. This would require changing the code a bit to allow overwriting already-registered values. Would this cause deeper issues with the modeled GP distributions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/146", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/146/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/146/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/146", "id": 408799928, "node_id": "MDU6SXNzdWU0MDg3OTk5Mjg=", "number": 146, "title": "blackbox function input values", "user": {"login": "NiklasDL", "id": 26283174, "node_id": "MDQ6VXNlcjI2MjgzMTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/26283174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NiklasDL", "html_url": "https://github.com/NiklasDL", "followers_url": "https://api.github.com/users/NiklasDL/followers", "following_url": "https://api.github.com/users/NiklasDL/following{/other_user}", "gists_url": "https://api.github.com/users/NiklasDL/gists{/gist_id}", "starred_url": "https://api.github.com/users/NiklasDL/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NiklasDL/subscriptions", "organizations_url": "https://api.github.com/users/NiklasDL/orgs", "repos_url": "https://api.github.com/users/NiklasDL/repos", "events_url": "https://api.github.com/users/NiklasDL/events{/privacy}", "received_events_url": "https://api.github.com/users/NiklasDL/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-11T14:12:05Z", "updated_at": "2019-02-11T18:51:58Z", "closed_at": "2019-02-11T15:41:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "My blackbox function requires additional arguments, such as directories (e.g. where to grab data or where to find the corresponding model), which I do not want to hardcode into the function.\r\n\r\nAssume I have two variables I want to optimize:\r\n\r\n``\r\nmy_bounds = {'x': (0, 1), 'y': (0,10)}\r\n``\r\n\r\nbut my blackbox function requires two additional arguments, e.g.\r\n\r\n``\r\ndef my_blackbox_fun(my_dir, my_other_dir, x, y):\r\n   ...\r\n``\r\n\r\nCan I still use the package without hardcoding the directories into my blackbox function? \r\nUnfortunately, I was not able to figure out how to ..\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/145", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/145/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/145/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/145", "id": 406818454, "node_id": "MDU6SXNzdWU0MDY4MTg0NTQ=", "number": 145, "title": "TypeError: '>' not supported between instances of 'Booster' and 'Booster'", "user": {"login": "borisRa", "id": 3207061, "node_id": "MDQ6VXNlcjMyMDcwNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3207061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/borisRa", "html_url": "https://github.com/borisRa", "followers_url": "https://api.github.com/users/borisRa/followers", "following_url": "https://api.github.com/users/borisRa/following{/other_user}", "gists_url": "https://api.github.com/users/borisRa/gists{/gist_id}", "starred_url": "https://api.github.com/users/borisRa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/borisRa/subscriptions", "organizations_url": "https://api.github.com/users/borisRa/orgs", "repos_url": "https://api.github.com/users/borisRa/repos", "events_url": "https://api.github.com/users/borisRa/events{/privacy}", "received_events_url": "https://api.github.com/users/borisRa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-05T14:50:56Z", "updated_at": "2019-02-07T15:05:51Z", "closed_at": "2019-02-06T15:47:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, using the BayesianOptimization with XGBoost and last version of Anaconda returns the following error : TypeError: '>' not supported between instances of 'Booster' and 'Booster'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/143", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/143/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/143/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/143", "id": 404031749, "node_id": "MDU6SXNzdWU0MDQwMzE3NDk=", "number": 143, "title": "Required black box function?", "user": {"login": "nikhilwbhatia", "id": 13323318, "node_id": "MDQ6VXNlcjEzMzIzMzE4", "avatar_url": "https://avatars1.githubusercontent.com/u/13323318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilwbhatia", "html_url": "https://github.com/nikhilwbhatia", "followers_url": "https://api.github.com/users/nikhilwbhatia/followers", "following_url": "https://api.github.com/users/nikhilwbhatia/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilwbhatia/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilwbhatia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilwbhatia/subscriptions", "organizations_url": "https://api.github.com/users/nikhilwbhatia/orgs", "repos_url": "https://api.github.com/users/nikhilwbhatia/repos", "events_url": "https://api.github.com/users/nikhilwbhatia/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilwbhatia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-28T22:15:40Z", "updated_at": "2019-01-29T00:30:30Z", "closed_at": "2019-01-29T00:08:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Could this library be used to shell out to from another language without a black box function? I would like to keep a stateless optimizer that I can re-initialize at every iteration and re-register all previous points to get the next suggested value. This would mean the evaluation step would be performed outside the script and all I would like to do is register a set of points with the optimizer. Is there a way to initialize the optimizer without the black box function and just do the above steps to retrieve next points?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/142", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/142/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/142/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/142", "id": 403574535, "node_id": "MDU6SXNzdWU0MDM1NzQ1MzU=", "number": 142, "title": "Non-python black box function", "user": {"login": "mikecmpbll", "id": 1962801, "node_id": "MDQ6VXNlcjE5NjI4MDE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1962801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikecmpbll", "html_url": "https://github.com/mikecmpbll", "followers_url": "https://api.github.com/users/mikecmpbll/followers", "following_url": "https://api.github.com/users/mikecmpbll/following{/other_user}", "gists_url": "https://api.github.com/users/mikecmpbll/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikecmpbll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikecmpbll/subscriptions", "organizations_url": "https://api.github.com/users/mikecmpbll/orgs", "repos_url": "https://api.github.com/users/mikecmpbll/repos", "events_url": "https://api.github.com/users/mikecmpbll/events{/privacy}", "received_events_url": "https://api.github.com/users/mikecmpbll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-27T17:26:48Z", "updated_at": "2019-01-29T00:20:15Z", "closed_at": "2019-01-29T00:04:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way of using this library without an integrated black box function? Some other libraries provide a way to input f(x) for each interation and get the recommended x for the next run out? \r\n\r\nThis is useful for integrating into non-python problems and real world problems.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/141", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/141/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/141/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/141", "id": 403241038, "node_id": "MDU6SXNzdWU0MDMyNDEwMzg=", "number": 141, "title": "Performance Considerations", "user": {"login": "olokobayusuf", "id": 17663473, "node_id": "MDQ6VXNlcjE3NjYzNDcz", "avatar_url": "https://avatars1.githubusercontent.com/u/17663473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olokobayusuf", "html_url": "https://github.com/olokobayusuf", "followers_url": "https://api.github.com/users/olokobayusuf/followers", "following_url": "https://api.github.com/users/olokobayusuf/following{/other_user}", "gists_url": "https://api.github.com/users/olokobayusuf/gists{/gist_id}", "starred_url": "https://api.github.com/users/olokobayusuf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olokobayusuf/subscriptions", "organizations_url": "https://api.github.com/users/olokobayusuf/orgs", "repos_url": "https://api.github.com/users/olokobayusuf/repos", "events_url": "https://api.github.com/users/olokobayusuf/events{/privacy}", "received_events_url": "https://api.github.com/users/olokobayusuf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-25T16:56:19Z", "updated_at": "2019-01-29T20:50:03Z", "closed_at": "2019-01-28T23:57:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there. First off, I want to say a big thank you for creating this amazing library. I'm working on an imaging application that greatly relies on it. There's just one thing I need to ask about: performance. I haven't looked through the sources, but I was wondering if you this is a priority and if it can be improved upon. The optimization stepping takes quite a while (even when the objective function is trivial to compute). Let me know your thoughts on this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/140", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/140/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/140/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/140", "id": 401581350, "node_id": "MDU6SXNzdWU0MDE1ODEzNTA=", "number": 140, "title": "import Error", "user": {"login": "Great1414", "id": 34801728, "node_id": "MDQ6VXNlcjM0ODAxNzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/34801728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Great1414", "html_url": "https://github.com/Great1414", "followers_url": "https://api.github.com/users/Great1414/followers", "following_url": "https://api.github.com/users/Great1414/following{/other_user}", "gists_url": "https://api.github.com/users/Great1414/gists{/gist_id}", "starred_url": "https://api.github.com/users/Great1414/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Great1414/subscriptions", "organizations_url": "https://api.github.com/users/Great1414/orgs", "repos_url": "https://api.github.com/users/Great1414/repos", "events_url": "https://api.github.com/users/Great1414/events{/privacy}", "received_events_url": "https://api.github.com/users/Great1414/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-22T03:10:12Z", "updated_at": "2019-10-29T02:34:54Z", "closed_at": "2019-01-22T16:56:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "There has an error  'ImportError: cannot import name 'BayesianOptimization'.\r\nBut, I have installed this package successfully.\r\nSo, I didn't find the solution about this question.\r\nPlease , help!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/139", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/139/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/139/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/139", "id": 399575015, "node_id": "MDU6SXNzdWUzOTk1NzUwMTU=", "number": 139, "title": "How is optimizer.suggest randomized?", "user": {"login": "nikhilwbhatia", "id": 13323318, "node_id": "MDQ6VXNlcjEzMzIzMzE4", "avatar_url": "https://avatars1.githubusercontent.com/u/13323318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilwbhatia", "html_url": "https://github.com/nikhilwbhatia", "followers_url": "https://api.github.com/users/nikhilwbhatia/followers", "following_url": "https://api.github.com/users/nikhilwbhatia/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilwbhatia/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilwbhatia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilwbhatia/subscriptions", "organizations_url": "https://api.github.com/users/nikhilwbhatia/orgs", "repos_url": "https://api.github.com/users/nikhilwbhatia/repos", "events_url": "https://api.github.com/users/nikhilwbhatia/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilwbhatia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-15T23:04:10Z", "updated_at": "2019-01-15T23:21:56Z", "closed_at": "2019-01-15T23:21:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "1. I noticed that one can call optimizer.suggest multiple times without calling the black box function or registering any results with the optimizer and still receive different suggested points. Can you help me understand why all the suggested points are different if the acquisition function isn't changing in between the calls?\r\n\r\n2. Given this, in a single suggest/eval/register loop could I realistically call optimizer.suggest x number of times (receiving x different points), run the black_box function on these points in parallel, and then register these x output values with their corresponding inputs (in that specific order). If this works, is there an easy explanation as how this differs statistically from only suggesting/eval one input at a time? \r\n\r\nThank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/138", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/138/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/138/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/138", "id": 398401656, "node_id": "MDU6SXNzdWUzOTg0MDE2NTY=", "number": 138, "title": "Parallel evaluations", "user": {"login": "nikhilwbhatia", "id": 13323318, "node_id": "MDQ6VXNlcjEzMzIzMzE4", "avatar_url": "https://avatars1.githubusercontent.com/u/13323318?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhilwbhatia", "html_url": "https://github.com/nikhilwbhatia", "followers_url": "https://api.github.com/users/nikhilwbhatia/followers", "following_url": "https://api.github.com/users/nikhilwbhatia/following{/other_user}", "gists_url": "https://api.github.com/users/nikhilwbhatia/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhilwbhatia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhilwbhatia/subscriptions", "organizations_url": "https://api.github.com/users/nikhilwbhatia/orgs", "repos_url": "https://api.github.com/users/nikhilwbhatia/repos", "events_url": "https://api.github.com/users/nikhilwbhatia/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhilwbhatia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-01-11T18:25:45Z", "updated_at": "2019-01-16T16:18:30Z", "closed_at": "2019-01-12T22:57:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "The flow of the suggest-evaluate-register paradigm implies that one evaluation step should be performed before the optimizer can recommend a new input set. Could bayesian optimization benefit from running multiple evaluation steps in parallel, and could this be implemented using this library?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/137", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/137/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/137/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/137/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/137", "id": 397426268, "node_id": "MDU6SXNzdWUzOTc0MjYyNjg=", "number": 137, "title": "Memory consumption is very large?", "user": {"login": "Jie-Yuan", "id": 20265321, "node_id": "MDQ6VXNlcjIwMjY1MzIx", "avatar_url": "https://avatars2.githubusercontent.com/u/20265321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jie-Yuan", "html_url": "https://github.com/Jie-Yuan", "followers_url": "https://api.github.com/users/Jie-Yuan/followers", "following_url": "https://api.github.com/users/Jie-Yuan/following{/other_user}", "gists_url": "https://api.github.com/users/Jie-Yuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jie-Yuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jie-Yuan/subscriptions", "organizations_url": "https://api.github.com/users/Jie-Yuan/orgs", "repos_url": "https://api.github.com/users/Jie-Yuan/repos", "events_url": "https://api.github.com/users/Jie-Yuan/events{/privacy}", "received_events_url": "https://api.github.com/users/Jie-Yuan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-09T15:36:34Z", "updated_at": "2019-01-09T22:40:55Z", "closed_at": "2019-01-09T22:40:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Memory consumption is very large?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/135", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/135/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/135/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/135", "id": 395864093, "node_id": "MDU6SXNzdWUzOTU4NjQwOTM=", "number": 135, "title": "Error while running async_optmization.py", "user": {"login": "jjiteshh", "id": 44354969, "node_id": "MDQ6VXNlcjQ0MzU0OTY5", "avatar_url": "https://avatars0.githubusercontent.com/u/44354969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjiteshh", "html_url": "https://github.com/jjiteshh", "followers_url": "https://api.github.com/users/jjiteshh/followers", "following_url": "https://api.github.com/users/jjiteshh/following{/other_user}", "gists_url": "https://api.github.com/users/jjiteshh/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjiteshh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjiteshh/subscriptions", "organizations_url": "https://api.github.com/users/jjiteshh/orgs", "repos_url": "https://api.github.com/users/jjiteshh/repos", "events_url": "https://api.github.com/users/jjiteshh/events{/privacy}", "received_events_url": "https://api.github.com/users/jjiteshh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-04T09:43:29Z", "updated_at": "2019-01-07T15:38:08Z", "closed_at": "2019-01-07T15:38:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI was trying to learn how to use the Optmizer in a distributed way. I tried to run the async_optmization.py in the examples folder.\r\n\r\nI am getting the below error. \r\n\r\n\r\noptimizer 3 wants to register: {}.\r\noptimizer 3 got -7.35793220819907 as target.\r\noptimizer 3 will to register next: {'params': {'x': 2.535584435045286, 'y': 2.3887922022229056}, 'target': -7.35793220819907}.\r\n\r\nERROR:tornado.application:Uncaught exception POST /bayesian_optimization (::1)\r\nHTTPServerRequest(protocol='http', host='localhost:9009', method='POST', uri='/bayesian_optimization', version='HTTP/1.1', remote_ip='::1', headers={'Host': 'localhost:9009', 'User-Agent': 'python-requests/2.18.4', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '90', 'Content-Type': 'application/json'})\r\nTraceback (most recent call last):\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/site-packages/tornado/web.py\", line 1510, in _execute\r\n    result = method(*self.path_args, **self.path_kwargs)\r\n  File \"/Users/Jitesh/Desktop/Kite/async.py\", line 48, in post\r\n    target=body[\"target\"],\r\nTypeError: register() got an unexpected keyword argument 'x'\r\nERROR:tornado.access:500 POST /bayesian_optimization (::1) 79.53ms\r\nException in thread Thread-2:\r\nTraceback (most recent call last):\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Users/Jitesh/Desktop/Kite/async.py\", line 84, in run_optimizer\r\n    json=register_data,\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/site-packages/requests/models.py\", line 892, in json\r\n    return complexjson.loads(self.text, **kwargs)\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/json/__init__.py\", line 354, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/json/decoder.py\", line 339, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/json/decoder.py\", line 357, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\noptimizer 1 wants to register: {}.\r\noptimizer 1 got -18.518887397481908 as target.\r\noptimizer 1 will to register next: {'params': {'x': -2.2980808727542117, 'y': -2.7732892414660117}, 'target': -18.518887397481908}.\r\n\r\noptimizer 2 wants to register: {}.\r\noptimizer 2 got -16.925509488264787 as target.\r\noptimizer 2 will to register next: {'params': {'x': 1.5604247824973552, 'y': -2.9358079204189917}, 'target': -16.925509488264787}.\r\n\r\nERROR:tornado.application:Uncaught exception POST /bayesian_optimization (::1)\r\nHTTPServerRequest(protocol='http', host='localhost:9009', method='POST', uri='/bayesian_optimization', version='HTTP/1.1', remote_ip='::1', headers={'Host': 'localhost:9009', 'User-Agent': 'python-requests/2.18.4', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '95', 'Content-Type': 'application/json'})\r\nTraceback (most recent call last):\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/site-packages/tornado/web.py\", line 1510, in _execute\r\n    result = method(*self.path_args, **self.path_kwargs)\r\n  File \"/Users/Jitesh/Desktop/Kite/async.py\", line 48, in post\r\n    target=body[\"target\"],\r\nTypeError: register() got an unexpected keyword argument 'x'\r\nERROR:tornado.access:500 POST /bayesian_optimization (::1) 0.66ms\r\nException in thread Thread-4:\r\nTraceback (most recent call last):\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Users/Jitesh/Desktop/Kite/async.py\", line 84, in run_optimizer\r\n    json=register_data,\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/site-packages/requests/models.py\", line 892, in json\r\n    return complexjson.loads(self.text, **kwargs)\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/json/__init__.py\", line 354, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/json/decoder.py\", line 339, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/json/decoder.py\", line 357, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nERROR:tornado.application:Uncaught exception POST /bayesian_optimization (::1)\r\nHTTPServerRequest(protocol='http', host='localhost:9009', method='POST', uri='/bayesian_optimization', version='HTTP/1.1', remote_ip='::1', headers={'Host': 'localhost:9009', 'User-Agent': 'python-requests/2.18.4', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '94', 'Content-Type': 'application/json'})\r\nTraceback (most recent call last):\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/site-packages/tornado/web.py\", line 1510, in _execute\r\n    result = method(*self.path_args, **self.path_kwargs)\r\n File \"/Users/Jitesh/Desktop/Kite/async.py\", line 48, in post\r\n    target=body[\"target\"],\r\nTypeError: register() got an unexpected keyword argument 'x'\r\nERROR:tornado.access:500 POST /bayesian_optimization (::1) 0.98ms\r\nException in thread Thread-3:\r\nTraceback (most recent call last):\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/threading.py\", line 864, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Users/Jitesh/Desktop/Kite/async.py\", line 84, in run_optimizer\r\n    json=register_data,\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/site-packages/requests/models.py\", line 892, in json\r\n    return complexjson.loads(self.text, **kwargs)\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/json/__init__.py\", line 354, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/json/decoder.py\", line 339, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/Users/Jitesh/anaconda3/lib/python3.6/json/decoder.py\", line 357, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\n[Finished in 18.785s]\r\nGit\r\nGitHub\r\nasync.py00051:25Autopep8: \u221a\r\nLFUTF-8Python0 files4 updates\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/134", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/134/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/134/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/134", "id": 388868411, "node_id": "MDU6SXNzdWUzODg4Njg0MTE=", "number": 134, "title": "Optimsation not following acquisition function suggestion.", "user": {"login": "Bacoknight", "id": 34398883, "node_id": "MDQ6VXNlcjM0Mzk4ODgz", "avatar_url": "https://avatars1.githubusercontent.com/u/34398883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bacoknight", "html_url": "https://github.com/Bacoknight", "followers_url": "https://api.github.com/users/Bacoknight/followers", "following_url": "https://api.github.com/users/Bacoknight/following{/other_user}", "gists_url": "https://api.github.com/users/Bacoknight/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bacoknight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bacoknight/subscriptions", "organizations_url": "https://api.github.com/users/Bacoknight/orgs", "repos_url": "https://api.github.com/users/Bacoknight/repos", "events_url": "https://api.github.com/users/Bacoknight/events{/privacy}", "received_events_url": "https://api.github.com/users/Bacoknight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-12-08T01:16:15Z", "updated_at": "2019-03-19T12:01:40Z", "closed_at": "2018-12-09T17:49:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi fmfn,\r\n\r\nI want to start by thanking you for this very nice implementation of Bayesian optimisation that I've found very useful. \r\n\r\nI've tried to visualise the 'thought process' of this optimisation method, and so tried to follow the code given [here](https://github.com/fmfn/BayesianOptimization/blob/master/examples/visualization.ipynb). Instead of ucb however, I've been using poi as my acquisition function as it seemed to work better for my specific problem. \r\n\r\nSimilar to the notebook, I've plotted the utility function underneath, marking the maximal point as that should be the next point probed. However, after the next iteration a different point seems to be probed, even if it has a worse acquisition function value than the other point. \r\n\r\nI'm relatively new to the game of black box optimisation, even moreso for BO, so is this intentional or am I doing something wrong? Below I've attached the animation that I've generated to show the method in action [I've zipped it up as .mp4 are not supported here.], and there are certain points where the next best point (as predicted by the poi acquisition function) is not the next point that is actually probed.\r\n\r\nHere is the code I am using to create the animation:\r\n     \r\n \r\n        # Define parameters used for the optimisation algorithm.\r\n        acqFunc = \"poi\"\r\n        acqKappa = 5\r\n        acqXi = 0.1\r\n\r\n        # Start by plotting the objective function being optimised. This could take a while.\r\n        xVals = np.linspace(0, 1e4, num = 5000)\r\n\r\n        yList = []\r\n\r\n        for x in xVals:\r\n                yList.append(BayesianObjective1D(x))\r\n\r\n        # Begin the figure plot.\r\n        fig = plt.figure(\"Optimisation Animation\")\r\n\r\n        acqAxis = plt.subplot(2, 1, 2)\r\n        yAxis = plt.subplot(2, 1, 1, sharex = acqAxis)\r\n\r\n        # Create optimisers.\r\n        inputBounds = {\"x1\": (0, 1e4)}\r\n        optimiser = BayesianOptimization(BayesianObjective1D, inputBounds, random_state = np.random.randint(1, 1e4), verbose = 0)\r\n\r\n        # Initialise optimisation with 1 random point.\r\n        optimiser.maximize(init_points = 1, n_iter = 0, acq = acqFunc, kappa = acqKappa, xi = acqXi)\r\n\r\n        # Use points to generate initial prediction graph data.\r\n        mean, stdDev = optimiser._gp.predict(xVals.reshape(-1, 1), return_std = True)\r\n        # The utility function is used to choose the next point to query.\r\n        utilFunction = UtilityFunction(kind = acqFunc, kappa = acqKappa, xi = acqXi)\r\n        util = utilFunction.utility(bVals.reshape(-1, 1), optimiser._gp, 0)\r\n        predictX, predictY = xVals[np.argmax(util)], np.max(util)\r\n        \r\n        # Create lists to store objects at each iteration.\r\n        # Observed points. To be marked.\r\n        obsList = [(optimiser.space.params.flatten(), optimiser.space.target)]\r\n        # How the optimiser sees the function.\r\n        gpList = [mean]\r\n        # How the optimiser will pick its next point, and the point it picked.\r\n        utilList = [(util, predictX, predictY)]\r\n        # Store the polygons representing the confidence levels at each iteration. We multiply the standard deviation by 1.96 to get the 95% confidence interval.\r\n        confidenceList = [yAxis.fill_between(xVals, mean + (1.96 * stdDev), mean - (1.96 * stdDev), alpha = 0.3, visible = False, color = \"c\")]\r\n\r\n        # Iterate the optimiser to see how it evolves.\r\n        for iteration in range(numIters):\r\n                # Run the same code as above.\r\n                optimiser.maximize(init_points = 0, n_iter = 1, acq = acqFunc, kappa = acqKappa, xi = acqXi)\r\n\r\n                mean, stdDev = optimiser._gp.predict(xVals.reshape(-1, 1), return_std = True)\r\n                util = utilFunction.utility(xVals.reshape(-1, 1), optimiser._gp, 0)\r\n                predictX, predictY = xVals[np.argmax(util)], np.max(util)\r\n\r\n                # Add the obtained values to the various lists.\r\n                obsList.append((optimiser.space.params.flatten(), optimiser.space.target))\r\n                gpList.append(mean)\r\n                utilList.append((util, predictB, predictFoM))\r\n                confidenceList.append(fomAxis.fill_between(xVals, mean + (1.96 * stdDev), mean - (1.96 * stdDev), alpha = 0.3, visible = False, color = \"c\"))\r\n\r\n        yAxis.set(xlim = (0, 1e4), ylim = (-0.5, 1.1))\r\n        acqAxis.set(xlim = (0, 1e4), ylim = (0, 1.1))\r\n        yAxis.set_ylabel(\"FoM\")\r\n        acqAxis.set_ylabel(\"Probability of Improvement\")\r\n        acqAxis.set_xlabel(\"Magnetic field strength (Gauss)\") \r\n\r\n        # Plot the functions that won't change with each frame.\r\n        yAxis.plot(xVals, yList, color = \"b\", linewidth = 3)\r\n\r\n        # Plot the changing graphs with their inital values.\r\n        meanLine = yAxis.plot(xVals, gpList[0], color = \"k\", linestyle = \"--\")[0]\r\n        acqLine = acqAxis.plot(xVals, utilList[0][0], color = \"purple\")[0]\r\n        probedScat = yAxis.scatter(obsList[0][0], obsList[0][1], marker = \"v\", color = \"r\")\r\n        predScat = acqAxis.scatter(utilList[0][1], utilList[0][2], marker = \"^\", color = \"r\")\r\n        confidenceList[0].set_visible(True)\r\n\r\n        def animate(i):\r\n                # Define what the graph does on each frame.\r\n                meanLine.set_ydata(gpList[i])\r\n                acqLine.set_ydata(utilList[i][0])\r\n                probedScat.set_offsets(np.c_[obsList[i][0], obsList[i][1]])\r\n                predScat.set_offsets(np.c_[utilList[i][1], utilList[i][2]])\r\n                confidenceList[i - 1].set_visible(False)\r\n                confidenceList[i].set_visible(True)\r\n\r\n                return meanLine, acqLine, probedScat, predScat, confidenceList[i]\r\n        \r\n        animator = FuncAnimation(fig, animate, frames = len(obsList), interval = 1e3, blit = True)\r\n\r\n        # Set up formatting for the movie files\r\n        Writer = writers['ffmpeg']\r\n        writer = Writer(bitrate = 1800)\r\n\r\n        animator.save(\"show_opt.mp4\", writer = writer)\r\n[show_opt.zip](https://github.com/fmfn/BayesianOptimization/files/2659234/show_opt.zip)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/133", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/133/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/133/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/133", "id": 388656655, "node_id": "MDU6SXNzdWUzODg2NTY2NTU=", "number": 133, "title": "Integration with LSTM Keras models", "user": {"login": "renan-ms", "id": 41458949, "node_id": "MDQ6VXNlcjQxNDU4OTQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/41458949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/renan-ms", "html_url": "https://github.com/renan-ms", "followers_url": "https://api.github.com/users/renan-ms/followers", "following_url": "https://api.github.com/users/renan-ms/following{/other_user}", "gists_url": "https://api.github.com/users/renan-ms/gists{/gist_id}", "starred_url": "https://api.github.com/users/renan-ms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/renan-ms/subscriptions", "organizations_url": "https://api.github.com/users/renan-ms/orgs", "repos_url": "https://api.github.com/users/renan-ms/repos", "events_url": "https://api.github.com/users/renan-ms/events{/privacy}", "received_events_url": "https://api.github.com/users/renan-ms/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-07T13:33:18Z", "updated_at": "2018-12-07T15:14:00Z", "closed_at": "2018-12-07T15:14:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to integrante Bayesian Optimization into a LSTM Keras model? Any example? Thanks. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/132", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/132/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/132/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/132", "id": 386715360, "node_id": "MDU6SXNzdWUzODY3MTUzNjA=", "number": 132, "title": "Bayesian optimization result on MICHALEWICZ FUNCTION", "user": {"login": "chenjiunhan", "id": 32821983, "node_id": "MDQ6VXNlcjMyODIxOTgz", "avatar_url": "https://avatars3.githubusercontent.com/u/32821983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenjiunhan", "html_url": "https://github.com/chenjiunhan", "followers_url": "https://api.github.com/users/chenjiunhan/followers", "following_url": "https://api.github.com/users/chenjiunhan/following{/other_user}", "gists_url": "https://api.github.com/users/chenjiunhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenjiunhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenjiunhan/subscriptions", "organizations_url": "https://api.github.com/users/chenjiunhan/orgs", "repos_url": "https://api.github.com/users/chenjiunhan/repos", "events_url": "https://api.github.com/users/chenjiunhan/events{/privacy}", "received_events_url": "https://api.github.com/users/chenjiunhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-03T08:53:24Z", "updated_at": "2018-12-03T15:32:04Z", "closed_at": "2018-12-03T15:14:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I applied Bayesian optimization to Michalewicz function, \r\nand the hyperparameters I choose as following: \r\nbo.maximize(init_points=5, n_iter=1000, acq='ucb', kappa=2.5, xi=0.01, alpha=1e-5)\r\n\r\nHere is the link about Michalewicz function, it can have different dimensions:\r\n[https://www.sfu.ca/~ssurjano/michal.html](url)\r\nIn this web page, they give us the minimum of Michalewicz function when \r\ndimension d = 1, d = 5, d= 10, and range of parameters space is [0, pi]\r\nI put a negative sign before Michalewicz function and maximize this function\r\n\r\nThe optimization result of d = 5: \r\n![image](https://user-images.githubusercontent.com/32821983/49363058-ee8b1680-f6e0-11e8-8c63-26ca1b639e4c.png)\r\n\r\nThe optimization result of d = 10: \r\n![image](https://user-images.githubusercontent.com/32821983/49363043-e337eb00-f6e0-11e8-89a2-180f2907acca.png)\r\n\r\nThe optimization result of d = 30: \r\n![image](https://user-images.githubusercontent.com/32821983/49362400-f8ac1580-f6de-11e8-98d6-8d173004a19f.png)\r\n\r\nIn theory, Bayesian optimization should work at least d = 20, do you have any suggestion on tuning\r\nparameters or do you have similar result on Michalewicz function?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/124", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/124/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/124/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/124", "id": 381849048, "node_id": "MDU6SXNzdWUzODE4NDkwNDg=", "number": 124, "title": "Applying bayesian optimization to higher dimension", "user": {"login": "chenjiunhan", "id": 32821983, "node_id": "MDQ6VXNlcjMyODIxOTgz", "avatar_url": "https://avatars3.githubusercontent.com/u/32821983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenjiunhan", "html_url": "https://github.com/chenjiunhan", "followers_url": "https://api.github.com/users/chenjiunhan/followers", "following_url": "https://api.github.com/users/chenjiunhan/following{/other_user}", "gists_url": "https://api.github.com/users/chenjiunhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenjiunhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenjiunhan/subscriptions", "organizations_url": "https://api.github.com/users/chenjiunhan/orgs", "repos_url": "https://api.github.com/users/chenjiunhan/repos", "events_url": "https://api.github.com/users/chenjiunhan/events{/privacy}", "received_events_url": "https://api.github.com/users/chenjiunhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-17T10:09:50Z", "updated_at": "2018-11-17T22:34:27Z", "closed_at": "2018-11-17T22:34:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nThis BayesianOptimization module is great and example is newbie friendly! Thanks!\r\n\r\nI try to apply bayesian optimization in about 58 dimensions, but it seems that it needs a while to generate new generation. Is it possible that I can reduce the time usage? The following is the code I modified from usage.py in this repository and the optimization progress with 30 dimensions:\r\n\r\n    8 | 00m21s |   14.70665 |    0.5000 |    0.5000 |    0.4741 |    0.4363 |    0.5000 |    0.4873 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.4709 |    0.5000 |    0.5000 |    0.4992 |    0.5000 |    0.3945 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.4763 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.4680 | \r\n    9 | 00m43s |   14.74567 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.4737 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.4734 |    0.5000 |    0.5000 |    0.5000 |    0.4197 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.4309 |    0.5000 |    0.4480 |    0.5000 |    0.5000 |    0.5000 |    0.5000 |    0.5000 | \r\n\r\n```\r\n\"\"\"Example of how to use this bayesian optimization package.\"\"\"\r\nimport numpy as np\r\nimport sys\r\nsys.path.append(\"./\")\r\nfrom bayes_opt import BayesianOptimization\r\n\r\nimport warnings\r\nwarnings.filterwarnings(\"ignore\")\r\n\r\nNUM_WEIGHTS = 30\r\n\r\ndef optimization_function_BAYESIAN(**weights):\r\n\r\n    x = [0] * NUM_WEIGHTS\r\n\r\n    for key in weights.keys():\r\n        x[int(key[1:])] = weights[key]\r\n\r\n    x = np.array(x)\r\n    \r\n    return np.sum(x)    \r\n\r\nweights = {}\r\nweights_explore = {}\r\nfor i in range(NUM_WEIGHTS):\r\n    weights['w' + str(i)] = (-0.5, 0.5)\r\n    weights_explore['w' + str(i)] = [-0.5, 0.5]\r\n\r\nbo = BayesianOptimization(optimization_function_BAYESIAN, weights)\r\n\r\nbo.explore(weights_explore)\r\n\r\ngp_params = {'kernel': None,\r\n             'alpha': 1e-5}\r\n\r\nbo.maximize(init_points=5, n_iter=15, kappa=2)\r\n\r\nprint(bo.res['max'])\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/120", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/120/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/120/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/120", "id": 379063851, "node_id": "MDU6SXNzdWUzNzkwNjM4NTE=", "number": 120, "title": "How to use it if the f(x) is unknown", "user": {"login": "yuxiaoba", "id": 35029651, "node_id": "MDQ6VXNlcjM1MDI5NjUx", "avatar_url": "https://avatars2.githubusercontent.com/u/35029651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yuxiaoba", "html_url": "https://github.com/yuxiaoba", "followers_url": "https://api.github.com/users/yuxiaoba/followers", "following_url": "https://api.github.com/users/yuxiaoba/following{/other_user}", "gists_url": "https://api.github.com/users/yuxiaoba/gists{/gist_id}", "starred_url": "https://api.github.com/users/yuxiaoba/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yuxiaoba/subscriptions", "organizations_url": "https://api.github.com/users/yuxiaoba/orgs", "repos_url": "https://api.github.com/users/yuxiaoba/repos", "events_url": "https://api.github.com/users/yuxiaoba/events{/privacy}", "received_events_url": "https://api.github.com/users/yuxiaoba/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-09T08:18:27Z", "updated_at": "2018-11-09T08:38:34Z", "closed_at": "2018-11-09T08:38:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have saw your examples, and I found that all of the examples are predefined the f(x) which is the function that    user wants to  minimize\u3002\r\nNow I have one problem that I don't know the f(x) that I want to minimize,   can I use this package to solve my problem?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/117", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/117/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/117/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/117/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/117", "id": 372357963, "node_id": "MDU6SXNzdWUzNzIzNTc5NjM=", "number": 117, "title": "Any plans to update the PyPi package?", "user": {"login": "Amir-Arsalan", "id": 6061721, "node_id": "MDQ6VXNlcjYwNjE3MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/6061721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amir-Arsalan", "html_url": "https://github.com/Amir-Arsalan", "followers_url": "https://api.github.com/users/Amir-Arsalan/followers", "following_url": "https://api.github.com/users/Amir-Arsalan/following{/other_user}", "gists_url": "https://api.github.com/users/Amir-Arsalan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amir-Arsalan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amir-Arsalan/subscriptions", "organizations_url": "https://api.github.com/users/Amir-Arsalan/orgs", "repos_url": "https://api.github.com/users/Amir-Arsalan/repos", "events_url": "https://api.github.com/users/Amir-Arsalan/events{/privacy}", "received_events_url": "https://api.github.com/users/Amir-Arsalan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-21T21:17:29Z", "updated_at": "2019-02-21T20:45:53Z", "closed_at": "2018-10-21T21:19:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "This shows that the BO package has not been updated on PyPi for a while. I wonder if it's possible to update it in a soon future?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/116", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/116/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/116/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/116", "id": 371858132, "node_id": "MDU6SXNzdWUzNzE4NTgxMzI=", "number": 116, "title": "multi-variable case when number of variables are large", "user": {"login": "pan3rock", "id": 44249464, "node_id": "MDQ6VXNlcjQ0MjQ5NDY0", "avatar_url": "https://avatars1.githubusercontent.com/u/44249464?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pan3rock", "html_url": "https://github.com/pan3rock", "followers_url": "https://api.github.com/users/pan3rock/followers", "following_url": "https://api.github.com/users/pan3rock/following{/other_user}", "gists_url": "https://api.github.com/users/pan3rock/gists{/gist_id}", "starred_url": "https://api.github.com/users/pan3rock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pan3rock/subscriptions", "organizations_url": "https://api.github.com/users/pan3rock/orgs", "repos_url": "https://api.github.com/users/pan3rock/repos", "events_url": "https://api.github.com/users/pan3rock/events{/privacy}", "received_events_url": "https://api.github.com/users/pan3rock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-19T08:34:42Z", "updated_at": "2018-11-07T22:23:55Z", "closed_at": "2018-11-07T22:23:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the given example, It needs to make a dictionary with parameters names and their bounds. It's easy for one or two variables. If the number of variables is large, it's duplicated to write. Is there an easier way to accomplish it, like numpy array?\r\n\r\nfunc = labmda x: x[0]**2 + x[1] ....  x[9] ** 2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/115", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/115/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/115/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/115", "id": 370560144, "node_id": "MDU6SXNzdWUzNzA1NjAxNDQ=", "number": 115, "title": "Data with errors", "user": {"login": "rosich", "id": 26173878, "node_id": "MDQ6VXNlcjI2MTczODc4", "avatar_url": "https://avatars2.githubusercontent.com/u/26173878?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rosich", "html_url": "https://github.com/rosich", "followers_url": "https://api.github.com/users/rosich/followers", "following_url": "https://api.github.com/users/rosich/following{/other_user}", "gists_url": "https://api.github.com/users/rosich/gists{/gist_id}", "starred_url": "https://api.github.com/users/rosich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rosich/subscriptions", "organizations_url": "https://api.github.com/users/rosich/orgs", "repos_url": "https://api.github.com/users/rosich/repos", "events_url": "https://api.github.com/users/rosich/events{/privacy}", "received_events_url": "https://api.github.com/users/rosich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-16T11:12:33Z", "updated_at": "2018-11-07T22:25:24Z", "closed_at": "2018-11-07T22:25:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Thanks for sharing this interesting implementation!\r\nI was wondering how to deal with objective function when affected by noise. Is there any way to pass the variances to the BayesianOptimization class or something like this?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/114", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/114/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/114/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/114", "id": 370319716, "node_id": "MDU6SXNzdWUzNzAzMTk3MTY=", "number": 114, "title": "Can this safely be used for classification problems?", "user": {"login": "bbennett36", "id": 7293087, "node_id": "MDQ6VXNlcjcyOTMwODc=", "avatar_url": "https://avatars0.githubusercontent.com/u/7293087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbennett36", "html_url": "https://github.com/bbennett36", "followers_url": "https://api.github.com/users/bbennett36/followers", "following_url": "https://api.github.com/users/bbennett36/following{/other_user}", "gists_url": "https://api.github.com/users/bbennett36/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbennett36/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbennett36/subscriptions", "organizations_url": "https://api.github.com/users/bbennett36/orgs", "repos_url": "https://api.github.com/users/bbennett36/repos", "events_url": "https://api.github.com/users/bbennett36/events{/privacy}", "received_events_url": "https://api.github.com/users/bbennett36/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-15T19:57:29Z", "updated_at": "2018-11-07T22:26:51Z", "closed_at": "2018-11-07T22:26:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Looking through the source code it looks like this package is mainly using the `sklearn.gaussian_process.GaussianProcessRegressor`. I have seen some of the classification examples but I've been wondering how safe it is to use the regressor on classification.  \r\n  \r\nWould it make more sense to use the `sklearn.gaussian_process.GaussianProcessClassifier` for classification problems or will this not change anything?  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/113", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/113/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/113/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/113", "id": 368263219, "node_id": "MDU6SXNzdWUzNjgyNjMyMTk=", "number": 113, "title": "ValueError: setting an array element with a sequence.", "user": {"login": "bywbilly", "id": 10766902, "node_id": "MDQ6VXNlcjEwNzY2OTAy", "avatar_url": "https://avatars0.githubusercontent.com/u/10766902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bywbilly", "html_url": "https://github.com/bywbilly", "followers_url": "https://api.github.com/users/bywbilly/followers", "following_url": "https://api.github.com/users/bywbilly/following{/other_user}", "gists_url": "https://api.github.com/users/bywbilly/gists{/gist_id}", "starred_url": "https://api.github.com/users/bywbilly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bywbilly/subscriptions", "organizations_url": "https://api.github.com/users/bywbilly/orgs", "repos_url": "https://api.github.com/users/bywbilly/repos", "events_url": "https://api.github.com/users/bywbilly/events{/privacy}", "received_events_url": "https://api.github.com/users/bywbilly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-09T15:15:48Z", "updated_at": "2018-10-10T22:21:27Z", "closed_at": "2018-10-10T22:21:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThanks for providing us with such excellent repo. I have some problems in using BO on XGBoost.\r\n\r\nI got ValueError: setting an array element with a sequence when I am running the program, and here is the related code snippet:\r\n\r\n![image](https://user-images.githubusercontent.com/10766902/46679204-7e668580-cbb4-11e8-8e1c-ab36fe548fc3.png)\r\n\r\nThe python interpreter said the error occurred at this part: \r\n\r\n![image](https://user-images.githubusercontent.com/10766902/46679295-a950d980-cbb4-11e8-8355-c8f169ccc2ef.png)\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/112", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/112/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/112/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/112", "id": 368216640, "node_id": "MDU6SXNzdWUzNjgyMTY2NDA=", "number": 112, "title": "Assertion errors", "user": {"login": "Zethson", "id": 21954664, "node_id": "MDQ6VXNlcjIxOTU0NjY0", "avatar_url": "https://avatars3.githubusercontent.com/u/21954664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zethson", "html_url": "https://github.com/Zethson", "followers_url": "https://api.github.com/users/Zethson/followers", "following_url": "https://api.github.com/users/Zethson/following{/other_user}", "gists_url": "https://api.github.com/users/Zethson/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zethson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zethson/subscriptions", "organizations_url": "https://api.github.com/users/Zethson/orgs", "repos_url": "https://api.github.com/users/Zethson/repos", "events_url": "https://api.github.com/users/Zethson/events{/privacy}", "received_events_url": "https://api.github.com/users/Zethson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-09T13:41:40Z", "updated_at": "2018-10-09T14:13:14Z", "closed_at": "2018-10-09T14:13:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm currently trying to evaluate an xgboost tree.\r\n\r\nThe error that I receive:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.7/site-packages/mhc_1-0.1.dev0-py3.7.egg/EGG-INFO/scripts/mhc-1\", line 61, in parse_CLI_start_tool\r\n    classifier = gbtrees_train(encoded_aminoacids, binding_values, silent)\r\n  File \"/usr/lib/python3.7/site-packages/mhc_1-0.1.dev0-py3.7.egg/src/algorithms/ml/gbtrees/gbtrees_training.py\", line 56, in gbtrees_train\r\n    perform_bayesian_optimization(peptides_train, peptides_test)\r\n  File \"/usr/lib/python3.7/site-packages/mhc_1-0.1.dev0-py3.7.egg/src/algorithms/ml/gbtrees/bayesian_optimization_search.py\", line 63, in perform_bayesian_optimization\r\n    }, train, labels)\r\n  File \"/usr/lib/python3.7/site-packages/bayesian_optimization-0.6.0-py3.7.egg/bayes_opt/bayesian_optimization.py\", line 30, in __init__\r\n    self.random_state = ensure_rng(random_state)\r\n  File \"/usr/lib/python3.7/site-packages/bayesian_optimization-0.6.0-py3.7.egg/bayes_opt/helpers.py\", line 154, in ensure_rng\r\n    assert isinstance(random_state, np.random.RandomState)\r\nAssertionError\r\n\r\n\r\nhttps://paste.ofcode.org/cB9CQWjL4ejcfCJsHPvM8V\r\n\r\nMy implementation for the evaluation. Do you have any idea about why the assertion error occurs in your helper function?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/111", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/111/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/111/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/111", "id": 367531196, "node_id": "MDU6SXNzdWUzNjc1MzExOTY=", "number": 111, "title": "It support lgb?", "user": {"login": "xuanzebi", "id": 26642184, "node_id": "MDQ6VXNlcjI2NjQyMTg0", "avatar_url": "https://avatars3.githubusercontent.com/u/26642184?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xuanzebi", "html_url": "https://github.com/xuanzebi", "followers_url": "https://api.github.com/users/xuanzebi/followers", "following_url": "https://api.github.com/users/xuanzebi/following{/other_user}", "gists_url": "https://api.github.com/users/xuanzebi/gists{/gist_id}", "starred_url": "https://api.github.com/users/xuanzebi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xuanzebi/subscriptions", "organizations_url": "https://api.github.com/users/xuanzebi/orgs", "repos_url": "https://api.github.com/users/xuanzebi/repos", "events_url": "https://api.github.com/users/xuanzebi/events{/privacy}", "received_events_url": "https://api.github.com/users/xuanzebi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-07T08:01:18Z", "updated_at": "2018-10-09T12:53:34Z", "closed_at": "2018-10-09T12:53:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/110", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/110/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/110/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/110", "id": 364695553, "node_id": "MDU6SXNzdWUzNjQ2OTU1NTM=", "number": 110, "title": "Finding Minimum", "user": {"login": "kimardenmiller", "id": 2165336, "node_id": "MDQ6VXNlcjIxNjUzMzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2165336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kimardenmiller", "html_url": "https://github.com/kimardenmiller", "followers_url": "https://api.github.com/users/kimardenmiller/followers", "following_url": "https://api.github.com/users/kimardenmiller/following{/other_user}", "gists_url": "https://api.github.com/users/kimardenmiller/gists{/gist_id}", "starred_url": "https://api.github.com/users/kimardenmiller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kimardenmiller/subscriptions", "organizations_url": "https://api.github.com/users/kimardenmiller/orgs", "repos_url": "https://api.github.com/users/kimardenmiller/repos", "events_url": "https://api.github.com/users/kimardenmiller/events{/privacy}", "received_events_url": "https://api.github.com/users/kimardenmiller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-28T00:08:10Z", "updated_at": "2018-10-05T13:55:45Z", "closed_at": "2018-10-05T13:55:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "For applications like machine learning minimum cost, how does one find the minimum?\r\n\r\nI can change the sign of the target, but negative numbers seem to eliminate the utility graph.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/106", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/106/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/106/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/106", "id": 350835999, "node_id": "MDU6SXNzdWUzNTA4MzU5OTk=", "number": 106, "title": "PrintLog shouldn't call print", "user": {"login": "KOLANICH", "id": 240344, "node_id": "MDQ6VXNlcjI0MDM0NA==", "avatar_url": "https://avatars1.githubusercontent.com/u/240344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KOLANICH", "html_url": "https://github.com/KOLANICH", "followers_url": "https://api.github.com/users/KOLANICH/followers", "following_url": "https://api.github.com/users/KOLANICH/following{/other_user}", "gists_url": "https://api.github.com/users/KOLANICH/gists{/gist_id}", "starred_url": "https://api.github.com/users/KOLANICH/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KOLANICH/subscriptions", "organizations_url": "https://api.github.com/users/KOLANICH/orgs", "repos_url": "https://api.github.com/users/KOLANICH/repos", "events_url": "https://api.github.com/users/KOLANICH/events{/privacy}", "received_events_url": "https://api.github.com/users/KOLANICH/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-15T14:42:15Z", "updated_at": "2018-10-05T13:51:50Z", "closed_at": "2018-10-05T13:51:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "because print uses stdout, but we may want to output the text another way. More precisely, using print breaks tqdm gui.\r\nThe better way is to compose strings and output them when they are finished using a callback function.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/104", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/104/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/104/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/104", "id": 349994298, "node_id": "MDU6SXNzdWUzNDk5OTQyOTg=", "number": 104, "title": "Citing this repo", "user": {"login": "isacarnekvist", "id": 5709580, "node_id": "MDQ6VXNlcjU3MDk1ODA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5709580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isacarnekvist", "html_url": "https://github.com/isacarnekvist", "followers_url": "https://api.github.com/users/isacarnekvist/followers", "following_url": "https://api.github.com/users/isacarnekvist/following{/other_user}", "gists_url": "https://api.github.com/users/isacarnekvist/gists{/gist_id}", "starred_url": "https://api.github.com/users/isacarnekvist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isacarnekvist/subscriptions", "organizations_url": "https://api.github.com/users/isacarnekvist/orgs", "repos_url": "https://api.github.com/users/isacarnekvist/repos", "events_url": "https://api.github.com/users/isacarnekvist/events{/privacy}", "received_events_url": "https://api.github.com/users/isacarnekvist/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-13T11:40:18Z", "updated_at": "2018-10-05T13:52:47Z", "closed_at": "2018-10-05T13:52:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Do you have any preferred way of being cited?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/103", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/103/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/103/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/103", "id": 348277542, "node_id": "MDU6SXNzdWUzNDgyNzc1NDI=", "number": 103, "title": "bo.X != bo.res['all']", "user": {"login": "mhqo", "id": 42174467, "node_id": "MDQ6VXNlcjQyMTc0NDY3", "avatar_url": "https://avatars1.githubusercontent.com/u/42174467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhqo", "html_url": "https://github.com/mhqo", "followers_url": "https://api.github.com/users/mhqo/followers", "following_url": "https://api.github.com/users/mhqo/following{/other_user}", "gists_url": "https://api.github.com/users/mhqo/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhqo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhqo/subscriptions", "organizations_url": "https://api.github.com/users/mhqo/orgs", "repos_url": "https://api.github.com/users/mhqo/repos", "events_url": "https://api.github.com/users/mhqo/events{/privacy}", "received_events_url": "https://api.github.com/users/mhqo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "fmfn", "id": 7664252, "node_id": "MDQ6VXNlcjc2NjQyNTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7664252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmfn", "html_url": "https://github.com/fmfn", "followers_url": "https://api.github.com/users/fmfn/followers", "following_url": "https://api.github.com/users/fmfn/following{/other_user}", "gists_url": "https://api.github.com/users/fmfn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmfn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmfn/subscriptions", "organizations_url": "https://api.github.com/users/fmfn/orgs", "repos_url": "https://api.github.com/users/fmfn/repos", "events_url": "https://api.github.com/users/fmfn/events{/privacy}", "received_events_url": "https://api.github.com/users/fmfn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fmfn", "id": 7664252, "node_id": "MDQ6VXNlcjc2NjQyNTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7664252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmfn", "html_url": "https://github.com/fmfn", "followers_url": "https://api.github.com/users/fmfn/followers", "following_url": "https://api.github.com/users/fmfn/following{/other_user}", "gists_url": "https://api.github.com/users/fmfn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmfn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmfn/subscriptions", "organizations_url": "https://api.github.com/users/fmfn/orgs", "repos_url": "https://api.github.com/users/fmfn/repos", "events_url": "https://api.github.com/users/fmfn/events{/privacy}", "received_events_url": "https://api.github.com/users/fmfn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-08-07T11:19:52Z", "updated_at": "2018-11-09T01:15:35Z", "closed_at": "2018-11-09T01:15:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI noticed that bo.X does not equal bo.res['all']['parameters'] ( minus the random runs ofc).\r\n\r\nThe columns of bo.X are messed up and do not represent the initial input order. (See testcode below)\r\n\r\nI feel that bo.X is more important than bo.res['all']['parameters'] since it shows ALL evaluated points !\r\n\r\n\r\n```\r\nfrom bayes_opt import BayesianOptimization\r\nfrom scipy.optimize import rosen\r\n\r\n# rosen as obj\r\ndef ro(x1, x2, x3):\r\n    return -1*rosen([x1, x2])\r\n\r\n# opt\r\nbo = BayesianOptimization(ro, pbounds={'x1' : (-1.0, 5.0), \r\n                                  'x2' : (-1.0, 5.0), 'x3' : (-1.0, 5.0)}, random_state=1)\r\n# max\r\nbo.maximize(1, 3, acq='poi')\r\n\r\n# test fails !\r\n[ro(*x) for x in bo.X] == bo.Y.tolist()\r\n\r\n# as one can see x2 is actually bo.X[:,0], x3 is bo.X[:,2] and x3 is bo.X[:,1]\r\nbo.X[1:]\r\narray([[ 2.18624627,  2.86252285,  0.70825166],\r\n       [ 4.72179023,  2.96300164,  3.01753416],\r\n       [-0.78524179,  0.15640738,  4.37775389]])\r\n\r\nbo.res['all']['params']\r\n[{'x1': 0.7082516567114334, 'x2': 2.186246270050328, 'x3': 2.8625228467524133},\r\n {'x1': 3.017534156171836, 'x2': 4.721790227135369, 'x3': 2.963001639364344},\r\n {'x1': 4.377753890676444,\r\n  'x2': -0.7852417897346731,\r\n  'x3': 0.1564073832944104}]\r\n\r\n```\r\n\r\ni think it would be great to have the same order as the obj_func input parameters.\r\n\r\nThanks in advance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/102", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/102/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/102/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/102", "id": 339923998, "node_id": "MDU6SXNzdWUzMzk5MjM5OTg=", "number": 102, "title": "Allow threshold on objective to update surrogate function", "user": {"login": "Engineero", "id": 7176289, "node_id": "MDQ6VXNlcjcxNzYyODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7176289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Engineero", "html_url": "https://github.com/Engineero", "followers_url": "https://api.github.com/users/Engineero/followers", "following_url": "https://api.github.com/users/Engineero/following{/other_user}", "gists_url": "https://api.github.com/users/Engineero/gists{/gist_id}", "starred_url": "https://api.github.com/users/Engineero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Engineero/subscriptions", "organizations_url": "https://api.github.com/users/Engineero/orgs", "repos_url": "https://api.github.com/users/Engineero/repos", "events_url": "https://api.github.com/users/Engineero/events{/privacy}", "received_events_url": "https://api.github.com/users/Engineero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-10T16:46:01Z", "updated_at": "2018-10-05T13:58:03Z", "closed_at": "2018-10-05T13:58:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "It may be nice to allow a threshold on the value of the objective function, results under which are not included in updating the surrogate objective function (basically skip the update step and move on to the next sample).\r\n\r\nMy motivation is a noisy objective function: hyperparameter optimization for a machine learning problem wherein the training process occasionally fails to converge due to bad initialization. This results in an objective function evaluation that is a major outlier, and would likely be much more reasonable with the exact same hyperparameters and a different initialization. In cases where this sort of thing is known to occur, it might be nice to provide a minimum value of the objective function, under which an iteration is just discarded rather than updating your surrogate.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/101", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/101/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/101/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/101", "id": 335205608, "node_id": "MDU6SXNzdWUzMzUyMDU2MDg=", "number": 101, "title": "Typo in xgboost_example.py?", "user": {"login": "pford221", "id": 7775219, "node_id": "MDQ6VXNlcjc3NzUyMTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7775219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pford221", "html_url": "https://github.com/pford221", "followers_url": "https://api.github.com/users/pford221/followers", "following_url": "https://api.github.com/users/pford221/following{/other_user}", "gists_url": "https://api.github.com/users/pford221/gists{/gist_id}", "starred_url": "https://api.github.com/users/pford221/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pford221/subscriptions", "organizations_url": "https://api.github.com/users/pford221/orgs", "repos_url": "https://api.github.com/users/pford221/repos", "events_url": "https://api.github.com/users/pford221/events{/privacy}", "received_events_url": "https://api.github.com/users/pford221/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-24T19:39:09Z", "updated_at": "2018-10-05T14:02:38Z", "closed_at": "2018-10-05T14:02:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThere may be a typo in line 25 where it reads `params['cosample_bytree'] = max(min(colsample_bytree, 1), 0)`. \r\n\r\nAlso, is there a reason to make the maxmin of parameters that are not allowed to explore outside those values? For example `colsample_bytree ` is constrained to be between `(0.1, 1)` in line 75. So, do we need the maxmin bit in line 25?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/99", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/99/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/99/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/99", "id": 333822307, "node_id": "MDU6SXNzdWUzMzM4MjIzMDc=", "number": 99, "title": "Save/restore progress", "user": {"login": "rspadim", "id": 2468782, "node_id": "MDQ6VXNlcjI0Njg3ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2468782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rspadim", "html_url": "https://github.com/rspadim", "followers_url": "https://api.github.com/users/rspadim/followers", "following_url": "https://api.github.com/users/rspadim/following{/other_user}", "gists_url": "https://api.github.com/users/rspadim/gists{/gist_id}", "starred_url": "https://api.github.com/users/rspadim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rspadim/subscriptions", "organizations_url": "https://api.github.com/users/rspadim/orgs", "repos_url": "https://api.github.com/users/rspadim/repos", "events_url": "https://api.github.com/users/rspadim/events{/privacy}", "received_events_url": "https://api.github.com/users/rspadim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-19T20:15:25Z", "updated_at": "2018-11-09T01:17:16Z", "closed_at": "2018-11-09T01:17:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "SOmetime we have a big optimization and it can crash (example, xgboost with gpu and memory limit)\r\n\r\nshould be nice save progress to file and resume from last position", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/98", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/98/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/98/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/98", "id": 328236027, "node_id": "MDU6SXNzdWUzMjgyMzYwMjc=", "number": 98, "title": "Unable to load Bayes opt object from pickle", "user": {"login": "Engineero", "id": 7176289, "node_id": "MDQ6VXNlcjcxNzYyODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/7176289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Engineero", "html_url": "https://github.com/Engineero", "followers_url": "https://api.github.com/users/Engineero/followers", "following_url": "https://api.github.com/users/Engineero/following{/other_user}", "gists_url": "https://api.github.com/users/Engineero/gists{/gist_id}", "starred_url": "https://api.github.com/users/Engineero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Engineero/subscriptions", "organizations_url": "https://api.github.com/users/Engineero/orgs", "repos_url": "https://api.github.com/users/Engineero/repos", "events_url": "https://api.github.com/users/Engineero/events{/privacy}", "received_events_url": "https://api.github.com/users/Engineero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-31T17:50:06Z", "updated_at": "2018-05-31T21:23:24Z", "closed_at": "2018-05-31T21:22:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran an optimization routine and then saved my trained `BayesianOptimization` object `opt` to a pickle with:\r\n\r\n```python\r\nwith open(fname, 'wb') as a_file:\r\n    pickle.dump(opt, a_file)\r\n```\r\n\r\nwhere `fname` is a defined and valid path. The pickle file shows up in the desired directory no problem. Now when I try to load this object with:\r\n\r\n```python\r\nwith open(fname, 'rb') as a_file:\r\n    opt = pickle.load(a_file)\r\n```\r\n\r\nI get the error:\r\n\r\n> ---------------------------------------------------------------------------\r\n> AttributeError                            Traceback (most recent call last)\r\n> <ipython-input-14-68a4e3f00462> in <module>()\r\n>       1 with open(fname, 'rb') as a_file:\r\n> ----> 2     opt = pickle.load(a_file)\r\n> \r\n> AttributeError: Can't get attribute 'run_bayes_opt' on <module '__main__'>\r\n\r\nThis seems like a bug in how the `opt` object gets serialized into a pickle, and that operation (maybe) not having an inverse? I am working on investigating this serialization/de-serialization now.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/97", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/97/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/97/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/97", "id": 322998763, "node_id": "MDU6SXNzdWUzMjI5OTg3NjM=", "number": 97, "title": "Error when running maximize() on custom objective function", "user": {"login": "justinlent", "id": 6541022, "node_id": "MDQ6VXNlcjY1NDEwMjI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6541022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/justinlent", "html_url": "https://github.com/justinlent", "followers_url": "https://api.github.com/users/justinlent/followers", "following_url": "https://api.github.com/users/justinlent/following{/other_user}", "gists_url": "https://api.github.com/users/justinlent/gists{/gist_id}", "starred_url": "https://api.github.com/users/justinlent/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/justinlent/subscriptions", "organizations_url": "https://api.github.com/users/justinlent/orgs", "repos_url": "https://api.github.com/users/justinlent/repos", "events_url": "https://api.github.com/users/justinlent/events{/privacy}", "received_events_url": "https://api.github.com/users/justinlent/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-14T22:06:20Z", "updated_at": "2018-05-15T03:07:37Z", "closed_at": "2018-05-15T03:07:37Z", "author_association": "NONE", "active_lock_reason": null, "body": " When running maximize() I run into this error:\r\n\r\n\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-173-36ce80c380cc> in <module>()\r\n     36 #bo_strat.explore( strat_params_explore )\r\n     37 \r\n---> 38 bo_strat.maximize(init_points=3, n_iter=15, kappa=2)\r\n\r\n~/python/anaconda3510/anaconda3/envs/quant_py364/lib/python3.6/site-packages/bayes_opt/bayesian_optimization.py in maximize(self, init_points, n_iter, acq, kappa, xi, **gp_params)\r\n    257                         bounds=self.space.bounds,\r\n    258                         random_state=self.random_state,\r\n--> 259                         **self._acqkw)\r\n    260 \r\n    261         # Print new header\r\n\r\n~/python/anaconda3510/anaconda3/envs/quant_py364/lib/python3.6/site-packages/bayes_opt/helpers.py in acq_max(ac, gp, y_max, bounds, random_state, n_warmup, n_iter)\r\n     61 \r\n     62         # Store it if better than previous minimum(maximum).\r\n---> 63         if max_acq is None or -res.fun[0] >= max_acq:\r\n     64             x_max = res.x\r\n     65             max_acq = -res.fun[0]\r\n\r\nIndexError: too many indices for array\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/96", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/96/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/96/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/96", "id": 322918375, "node_id": "MDU6SXNzdWUzMjI5MTgzNzU=", "number": 96, "title": "Optimize functions with variable number of arguments", "user": {"login": "AsierO", "id": 12262114, "node_id": "MDQ6VXNlcjEyMjYyMTE0", "avatar_url": "https://avatars1.githubusercontent.com/u/12262114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsierO", "html_url": "https://github.com/AsierO", "followers_url": "https://api.github.com/users/AsierO/followers", "following_url": "https://api.github.com/users/AsierO/following{/other_user}", "gists_url": "https://api.github.com/users/AsierO/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsierO/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsierO/subscriptions", "organizations_url": "https://api.github.com/users/AsierO/orgs", "repos_url": "https://api.github.com/users/AsierO/repos", "events_url": "https://api.github.com/users/AsierO/events{/privacy}", "received_events_url": "https://api.github.com/users/AsierO/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-14T17:53:47Z", "updated_at": "2018-05-18T17:01:15Z", "closed_at": "2018-05-18T17:01:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was wondering if it is possible to optimize a function with a variable number of arguments using BayesianOptimization. \r\n\r\nI would like to run \r\n`BayesianOptimization(f,param_dic)`\r\nwhere both have a variable number of arguments. For example, param_dic will look like\r\n`param_dic={}\r\n        for i in range(len(initial_params)):\r\n            param_dic['x'+str(i)]=(-1,1)`\r\nand the function is\r\n`def f(*arg,**kwargs):`\r\n\r\nSo far I haven't managed to make it work because it demands f to be of the form f(x0,x1,....xn).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/92", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/92/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/92/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/92", "id": 313686352, "node_id": "MDU6SXNzdWUzMTM2ODYzNTI=", "number": 92, "title": "Problem with initialize ", "user": {"login": "joaosalvado10", "id": 28062937, "node_id": "MDQ6VXNlcjI4MDYyOTM3", "avatar_url": "https://avatars0.githubusercontent.com/u/28062937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joaosalvado10", "html_url": "https://github.com/joaosalvado10", "followers_url": "https://api.github.com/users/joaosalvado10/followers", "following_url": "https://api.github.com/users/joaosalvado10/following{/other_user}", "gists_url": "https://api.github.com/users/joaosalvado10/gists{/gist_id}", "starred_url": "https://api.github.com/users/joaosalvado10/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joaosalvado10/subscriptions", "organizations_url": "https://api.github.com/users/joaosalvado10/orgs", "repos_url": "https://api.github.com/users/joaosalvado10/repos", "events_url": "https://api.github.com/users/joaosalvado10/events{/privacy}", "received_events_url": "https://api.github.com/users/joaosalvado10/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-12T11:28:33Z", "updated_at": "2018-11-07T22:37:02Z", "closed_at": "2018-11-07T22:37:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\nWhen I use the Initialize method, I got a key error saying that the data point is not unique. In fact, when I call the maximize method sometimes it is searching for already explored parameters.  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/91", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/91/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/91/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/91", "id": 310088007, "node_id": "MDU6SXNzdWUzMTAwODgwMDc=", "number": 91, "title": "missing example data ", "user": {"login": "oroojlooy", "id": 20797260, "node_id": "MDQ6VXNlcjIwNzk3MjYw", "avatar_url": "https://avatars0.githubusercontent.com/u/20797260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oroojlooy", "html_url": "https://github.com/oroojlooy", "followers_url": "https://api.github.com/users/oroojlooy/followers", "following_url": "https://api.github.com/users/oroojlooy/following{/other_user}", "gists_url": "https://api.github.com/users/oroojlooy/gists{/gist_id}", "starred_url": "https://api.github.com/users/oroojlooy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oroojlooy/subscriptions", "organizations_url": "https://api.github.com/users/oroojlooy/orgs", "repos_url": "https://api.github.com/users/oroojlooy/repos", "events_url": "https://api.github.com/users/oroojlooy/events{/privacy}", "received_events_url": "https://api.github.com/users/oroojlooy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "fmfn", "id": 7664252, "node_id": "MDQ6VXNlcjc2NjQyNTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7664252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmfn", "html_url": "https://github.com/fmfn", "followers_url": "https://api.github.com/users/fmfn/followers", "following_url": "https://api.github.com/users/fmfn/following{/other_user}", "gists_url": "https://api.github.com/users/fmfn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmfn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmfn/subscriptions", "organizations_url": "https://api.github.com/users/fmfn/orgs", "repos_url": "https://api.github.com/users/fmfn/repos", "events_url": "https://api.github.com/users/fmfn/events{/privacy}", "received_events_url": "https://api.github.com/users/fmfn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fmfn", "id": 7664252, "node_id": "MDQ6VXNlcjc2NjQyNTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7664252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmfn", "html_url": "https://github.com/fmfn", "followers_url": "https://api.github.com/users/fmfn/followers", "following_url": "https://api.github.com/users/fmfn/following{/other_user}", "gists_url": "https://api.github.com/users/fmfn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmfn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmfn/subscriptions", "organizations_url": "https://api.github.com/users/fmfn/orgs", "repos_url": "https://api.github.com/users/fmfn/repos", "events_url": "https://api.github.com/users/fmfn/events{/privacy}", "received_events_url": "https://api.github.com/users/fmfn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-03-30T15:02:06Z", "updated_at": "2018-11-24T05:05:59Z", "closed_at": "2018-11-24T05:05:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nIn example `xgboost_example.py`, the required data `../input/train.csv` is missing. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/90", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/90/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/90/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/90", "id": 308264405, "node_id": "MDU6SXNzdWUzMDgyNjQ0MDU=", "number": 90, "title": "terminate called after throwing an instance of 'std::bad_alloc'", "user": {"login": "TMorville", "id": 4254061, "node_id": "MDQ6VXNlcjQyNTQwNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/4254061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TMorville", "html_url": "https://github.com/TMorville", "followers_url": "https://api.github.com/users/TMorville/followers", "following_url": "https://api.github.com/users/TMorville/following{/other_user}", "gists_url": "https://api.github.com/users/TMorville/gists{/gist_id}", "starred_url": "https://api.github.com/users/TMorville/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TMorville/subscriptions", "organizations_url": "https://api.github.com/users/TMorville/orgs", "repos_url": "https://api.github.com/users/TMorville/repos", "events_url": "https://api.github.com/users/TMorville/events{/privacy}", "received_events_url": "https://api.github.com/users/TMorville/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-24T13:55:22Z", "updated_at": "2018-05-18T17:10:26Z", "closed_at": "2018-05-18T17:10:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the code from the[ xgboost example](https://github.com/fmfn/BayesianOptimization/blob/master/examples/xgboost_example.py) but with my own data, the optimiser quits with this error: \r\n\r\n```\r\nInitialization\r\n---------------------------------------------------------------------------------------------------------------------------\r\n Step |   Time |      Value |     alpha |   colsample_bytree |     gamma |   max_depth |   min_child_weight |   subsample |\r\nterminate called after throwing an instance of 'std::bad_alloc'\r\n  what():  std::bad_alloc\r\n```\r\n\r\nMy data is ``shape = (370551, 10762)`` with mostly onehot encoded categories. \r\nPython is ``3.5.2``.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/88", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/88/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/88/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/88", "id": 299014417, "node_id": "MDU6SXNzdWUyOTkwMTQ0MTc=", "number": 88, "title": "typo in example", "user": {"login": "StefHai", "id": 29732662, "node_id": "MDQ6VXNlcjI5NzMyNjYy", "avatar_url": "https://avatars0.githubusercontent.com/u/29732662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StefHai", "html_url": "https://github.com/StefHai", "followers_url": "https://api.github.com/users/StefHai/followers", "following_url": "https://api.github.com/users/StefHai/following{/other_user}", "gists_url": "https://api.github.com/users/StefHai/gists{/gist_id}", "starred_url": "https://api.github.com/users/StefHai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StefHai/subscriptions", "organizations_url": "https://api.github.com/users/StefHai/orgs", "repos_url": "https://api.github.com/users/StefHai/repos", "events_url": "https://api.github.com/users/StefHai/events{/privacy}", "received_events_url": "https://api.github.com/users/StefHai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "fmfn", "id": 7664252, "node_id": "MDQ6VXNlcjc2NjQyNTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7664252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmfn", "html_url": "https://github.com/fmfn", "followers_url": "https://api.github.com/users/fmfn/followers", "following_url": "https://api.github.com/users/fmfn/following{/other_user}", "gists_url": "https://api.github.com/users/fmfn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmfn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmfn/subscriptions", "organizations_url": "https://api.github.com/users/fmfn/orgs", "repos_url": "https://api.github.com/users/fmfn/repos", "events_url": "https://api.github.com/users/fmfn/events{/privacy}", "received_events_url": "https://api.github.com/users/fmfn/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "fmfn", "id": 7664252, "node_id": "MDQ6VXNlcjc2NjQyNTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/7664252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmfn", "html_url": "https://github.com/fmfn", "followers_url": "https://api.github.com/users/fmfn/followers", "following_url": "https://api.github.com/users/fmfn/following{/other_user}", "gists_url": "https://api.github.com/users/fmfn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmfn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmfn/subscriptions", "organizations_url": "https://api.github.com/users/fmfn/orgs", "repos_url": "https://api.github.com/users/fmfn/repos", "events_url": "https://api.github.com/users/fmfn/events{/privacy}", "received_events_url": "https://api.github.com/users/fmfn/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-02-21T15:29:15Z", "updated_at": "2018-11-24T05:06:11Z", "closed_at": "2018-11-24T05:06:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the example file xgboost_example.py, line 25 stands:\r\n\r\nparams['cosample_bytree'] = max(min(colsample_bytree, 1), 0)\r\n\r\nShouldn't it be 'colsample_bytree'?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/86", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/86/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/86/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/86", "id": 297963607, "node_id": "MDU6SXNzdWUyOTc5NjM2MDc=", "number": 86, "title": "Integrating a MLP with BO", "user": {"login": "spadavec", "id": 3453650, "node_id": "MDQ6VXNlcjM0NTM2NTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3453650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spadavec", "html_url": "https://github.com/spadavec", "followers_url": "https://api.github.com/users/spadavec/followers", "following_url": "https://api.github.com/users/spadavec/following{/other_user}", "gists_url": "https://api.github.com/users/spadavec/gists{/gist_id}", "starred_url": "https://api.github.com/users/spadavec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spadavec/subscriptions", "organizations_url": "https://api.github.com/users/spadavec/orgs", "repos_url": "https://api.github.com/users/spadavec/repos", "events_url": "https://api.github.com/users/spadavec/events{/privacy}", "received_events_url": "https://api.github.com/users/spadavec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-17T01:00:22Z", "updated_at": "2018-05-18T17:15:14Z", "closed_at": "2018-05-18T17:15:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Forgive my ignorance (as I am relatively new to this) but I would like to be able to use this codebase to efficient search 'chemical' space (searching vector space learned via an autoencoder), with a target function that is a multi-layer perceptron that returns estimates of a molecular property (built on a different sequential model) that I want to minimize. In this case, then, I have a few questions: \r\n\r\n1) Wouldn't it be best to supply an `init_points` equal to the number of training data points that I used to train my other MLP, instead of the traditional 2 or 3? \r\n\r\n2) in the example code: \r\n```python\r\n bo.maximize(init_points=2, n_iter=0, acq='ucb', kappa=5)\r\n```\r\nDoes the `bo.maximize` refer to the maximizing of the expected y-value of your target function, or does it maximize whatever your acquisition function? In my case, I'd like to minimize the output of the target function. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/85", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/85/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/85/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/85", "id": 296126992, "node_id": "MDU6SXNzdWUyOTYxMjY5OTI=", "number": 85, "title": "Enhancement Request: Pipe verbose logging to text file", "user": {"login": "lwaldner", "id": 7861181, "node_id": "MDQ6VXNlcjc4NjExODE=", "avatar_url": "https://avatars1.githubusercontent.com/u/7861181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lwaldner", "html_url": "https://github.com/lwaldner", "followers_url": "https://api.github.com/users/lwaldner/followers", "following_url": "https://api.github.com/users/lwaldner/following{/other_user}", "gists_url": "https://api.github.com/users/lwaldner/gists{/gist_id}", "starred_url": "https://api.github.com/users/lwaldner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lwaldner/subscriptions", "organizations_url": "https://api.github.com/users/lwaldner/orgs", "repos_url": "https://api.github.com/users/lwaldner/repos", "events_url": "https://api.github.com/users/lwaldner/events{/privacy}", "received_events_url": "https://api.github.com/users/lwaldner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-10T19:35:19Z", "updated_at": "2018-11-09T03:15:55Z", "closed_at": "2018-11-09T03:15:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey everyone I love this library but I think it would be super super useful to be able to specify an output log (or just have a default one) that the BayesianOptimizer would pipe its progress logs to.   ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/83", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/83/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/83/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/83", "id": 290171676, "node_id": "MDU6SXNzdWUyOTAxNzE2NzY=", "number": 83, "title": "Sometings about usage:how to use it for lightGBM?", "user": {"login": "rosefun", "id": 32197447, "node_id": "MDQ6VXNlcjMyMTk3NDQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/32197447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rosefun", "html_url": "https://github.com/rosefun", "followers_url": "https://api.github.com/users/rosefun/followers", "following_url": "https://api.github.com/users/rosefun/following{/other_user}", "gists_url": "https://api.github.com/users/rosefun/gists{/gist_id}", "starred_url": "https://api.github.com/users/rosefun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rosefun/subscriptions", "organizations_url": "https://api.github.com/users/rosefun/orgs", "repos_url": "https://api.github.com/users/rosefun/repos", "events_url": "https://api.github.com/users/rosefun/events{/privacy}", "received_events_url": "https://api.github.com/users/rosefun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-20T07:04:26Z", "updated_at": "2018-01-22T18:29:00Z", "closed_at": "2018-01-22T18:29:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use bayesian optimization as follow:\r\n```\r\ndef lgb_evaluate(\r\n         num_leaves,\r\n         max_depth\r\n         ):\r\n  lgbtrain = lgb.Dataset(train_df, label=y_train_df)\r\n\r\n  \r\n  params['num_leaves']=int(num_leaves)\r\n  params['max_depth']=int(max_depth)\r\n  \r\n  cv_result = lgb.cv(params, lgbtrain, num_boost_round=num_rounds, nfold=5,seed=random_state)\r\n  print('cv_result',cv_result)\r\n  return -cv_result['test-mae-mean'].values[-1]\r\n```\r\n\r\nThe error is:\r\n```\r\nValueError: Supported target types are: ('binary', 'multiclass'). Got 'continuou\r\ns' instead.\r\n```\r\n\r\nAnyone help me?\r\n\r\nThank you and best wishes!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/82", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/82/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/82/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/82", "id": 288471828, "node_id": "MDU6SXNzdWUyODg0NzE4Mjg=", "number": 82, "title": "BayesianOptimization takes all cpu", "user": {"login": "EricAugust", "id": 16010978, "node_id": "MDQ6VXNlcjE2MDEwOTc4", "avatar_url": "https://avatars1.githubusercontent.com/u/16010978?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricAugust", "html_url": "https://github.com/EricAugust", "followers_url": "https://api.github.com/users/EricAugust/followers", "following_url": "https://api.github.com/users/EricAugust/following{/other_user}", "gists_url": "https://api.github.com/users/EricAugust/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricAugust/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricAugust/subscriptions", "organizations_url": "https://api.github.com/users/EricAugust/orgs", "repos_url": "https://api.github.com/users/EricAugust/repos", "events_url": "https://api.github.com/users/EricAugust/events{/privacy}", "received_events_url": "https://api.github.com/users/EricAugust/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-01-15T03:30:37Z", "updated_at": "2018-11-06T00:11:53Z", "closed_at": "2018-01-22T18:32:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run BayesianOptimization task, it takes all cpu. And when I run 2 BayesianOptimization task in same computer in different time. The last task  is normal, but the first task could not run.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/81", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/81/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/81/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/81", "id": 285975872, "node_id": "MDU6SXNzdWUyODU5NzU4NzI=", "number": 81, "title": "Is it possible to specify the parameters should be integers?", "user": {"login": "chrism2671", "id": 456541, "node_id": "MDQ6VXNlcjQ1NjU0MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/456541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrism2671", "html_url": "https://github.com/chrism2671", "followers_url": "https://api.github.com/users/chrism2671/followers", "following_url": "https://api.github.com/users/chrism2671/following{/other_user}", "gists_url": "https://api.github.com/users/chrism2671/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrism2671/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrism2671/subscriptions", "organizations_url": "https://api.github.com/users/chrism2671/orgs", "repos_url": "https://api.github.com/users/chrism2671/repos", "events_url": "https://api.github.com/users/chrism2671/events{/privacy}", "received_events_url": "https://api.github.com/users/chrism2671/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-04T12:48:26Z", "updated_at": "2018-01-04T22:12:06Z", "closed_at": "2018-01-04T22:12:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a number of cases where the search space is discrete. Is it possible to inform the optimizer of this fact?\r\n\r\nCurrently I do `int(x)` before passing the trial params into my methods, and I think this makes the target function learnt less accurate/slower to converge.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/79", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/79/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/79/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/79", "id": 281657942, "node_id": "MDU6SXNzdWUyODE2NTc5NDI=", "number": 79, "title": "Choice of hyperparameter (alpha, kernel, Acquisition function, xi, kappa)", "user": {"login": "mkersche17", "id": 10856645, "node_id": "MDQ6VXNlcjEwODU2NjQ1", "avatar_url": "https://avatars3.githubusercontent.com/u/10856645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkersche17", "html_url": "https://github.com/mkersche17", "followers_url": "https://api.github.com/users/mkersche17/followers", "following_url": "https://api.github.com/users/mkersche17/following{/other_user}", "gists_url": "https://api.github.com/users/mkersche17/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkersche17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkersche17/subscriptions", "organizations_url": "https://api.github.com/users/mkersche17/orgs", "repos_url": "https://api.github.com/users/mkersche17/repos", "events_url": "https://api.github.com/users/mkersche17/events{/privacy}", "received_events_url": "https://api.github.com/users/mkersche17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-13T08:06:40Z", "updated_at": "2019-11-29T18:09:04Z", "closed_at": "2017-12-17T22:42:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "First of all, thank you very much fernando for creating this nice implementation of bayesian optimization. I recently became aware of bayesian optimization and I think it is a good alternative to methods like grid search or random search. \r\nHowever, I struggle to find good bayesian optimization parameters (i.e. alpha) for my given problem. I train a neural network, which takes several hours for one iteration, and want to optimize parameters like hidden layer count, neurons per layer, learning rate, dropout value, lambda of l2 regularization, etc. \r\nBecause I'm new in bayesian optimization, I have completely no clue, how to set the bo parameters.  When I expect a very thin maximum (in terms of: good results with 2 hidden-layer bad results using 3), how should I decrease alpha? set it to 1e-4 or 1e-3 or 1e-2?\r\nIn gerneral when you work with machine learning, you often get advices like, use the ReLU activiation, this often works good or use a learning rate of 1e-3 and so on. However, for bayesian optimization I have not found any recommendations. \r\nWould it be possible to create a thread, where users can share their experience? So people can describe their task (i.e. time series classification, N training examples, M inputs, O outputs, count of parameters which should be optimized) and which alpha, kernel, aquisition function, xi, kappa worked the best. \r\nThis can help to make the project more applicable. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/78", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/78/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/78/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/78", "id": 280807533, "node_id": "MDU6SXNzdWUyODA4MDc1MzM=", "number": 78, "title": "performance on discrete variables", "user": {"login": "arita37", "id": 18707623, "node_id": "MDQ6VXNlcjE4NzA3NjIz", "avatar_url": "https://avatars3.githubusercontent.com/u/18707623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arita37", "html_url": "https://github.com/arita37", "followers_url": "https://api.github.com/users/arita37/followers", "following_url": "https://api.github.com/users/arita37/following{/other_user}", "gists_url": "https://api.github.com/users/arita37/gists{/gist_id}", "starred_url": "https://api.github.com/users/arita37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arita37/subscriptions", "organizations_url": "https://api.github.com/users/arita37/orgs", "repos_url": "https://api.github.com/users/arita37/repos", "events_url": "https://api.github.com/users/arita37/events{/privacy}", "received_events_url": "https://api.github.com/users/arita37/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-10T13:00:23Z", "updated_at": "2017-12-10T21:54:35Z", "closed_at": "2017-12-10T21:54:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a set of discrete variables (integers) and wondering the performance of BO\r\non discete sets.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/76", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/76/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/76/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/76", "id": 280685159, "node_id": "MDU6SXNzdWUyODA2ODUxNTk=", "number": 76, "title": "Specifying the Resolution of input variables", "user": {"login": "Dhawgupta", "id": 22716268, "node_id": "MDQ6VXNlcjIyNzE2MjY4", "avatar_url": "https://avatars2.githubusercontent.com/u/22716268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dhawgupta", "html_url": "https://github.com/Dhawgupta", "followers_url": "https://api.github.com/users/Dhawgupta/followers", "following_url": "https://api.github.com/users/Dhawgupta/following{/other_user}", "gists_url": "https://api.github.com/users/Dhawgupta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dhawgupta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dhawgupta/subscriptions", "organizations_url": "https://api.github.com/users/Dhawgupta/orgs", "repos_url": "https://api.github.com/users/Dhawgupta/repos", "events_url": "https://api.github.com/users/Dhawgupta/events{/privacy}", "received_events_url": "https://api.github.com/users/Dhawgupta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-09T05:35:36Z", "updated_at": "2017-12-10T21:54:07Z", "closed_at": "2017-12-10T21:54:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to optimize some motor angle values using Bayesian optimization, the code takes a continuous state space and resolution of the motor is 1 degree, is there a way to specify the resolution so that we can make the results faster and search space smaller.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/74", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/74/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/74/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/74", "id": 277390737, "node_id": "MDU6SXNzdWUyNzczOTA3Mzc=", "number": 74, "title": "Problem with optimization: fmin_l_bfgs_b terminated abnormally...", "user": {"login": "Ricardus312", "id": 24890613, "node_id": "MDQ6VXNlcjI0ODkwNjEz", "avatar_url": "https://avatars1.githubusercontent.com/u/24890613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ricardus312", "html_url": "https://github.com/Ricardus312", "followers_url": "https://api.github.com/users/Ricardus312/followers", "following_url": "https://api.github.com/users/Ricardus312/following{/other_user}", "gists_url": "https://api.github.com/users/Ricardus312/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ricardus312/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ricardus312/subscriptions", "organizations_url": "https://api.github.com/users/Ricardus312/orgs", "repos_url": "https://api.github.com/users/Ricardus312/repos", "events_url": "https://api.github.com/users/Ricardus312/events{/privacy}", "received_events_url": "https://api.github.com/users/Ricardus312/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-28T13:48:25Z", "updated_at": "2018-10-10T22:19:32Z", "closed_at": "2017-11-28T16:52:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running the BO to search for hyperparameters of XGBoost model.  On the first iteration of the BO, after initialization, I get this message:\r\n\r\n/home/ubuntu/anaconda3/lib/python3.6/site-packages/sklearn/gaussian_process/gpr.py:457: UserWarning: fmin_l_bfgs_b terminated abnormally with the  state: {'grad': array([ -1.36050603e-05]), 'task': b'ABNORMAL_TERMINATION_IN_LNSRCH', 'funcalls': 51, 'nit': 4, 'warnflag': 2}\r\n  \" state: %s\" % convergence_dict)\r\n\r\nMore information about this issue:\r\nhttps://github.com/scikit-learn/scikit-learn/issues/7563\r\nhttps://stackoverflow.com/questions/34663539/scipy-optimize-fmin-l-bfgs-b-returns-abnormal-termination-in-lnsrch\r\n\r\nI was using the default gp_params. If I understood correctly those two threads, the problem is that lbfgs received a negative gradient while trying to maximize the function, which might be caused because \"the gradient does not match the function\" or a wrong set of parameters for the Gaussian Process. The thing is that I have no idea of how to solve this, so any help is appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/73", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/73/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/73/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/73", "id": 274015231, "node_id": "MDU6SXNzdWUyNzQwMTUyMzE=", "number": 73, "title": "when use bayes tuning xgboost, is there any need to set scale_pos_weight ?", "user": {"login": "StutuPig", "id": 18572544, "node_id": "MDQ6VXNlcjE4NTcyNTQ0", "avatar_url": "https://avatars3.githubusercontent.com/u/18572544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StutuPig", "html_url": "https://github.com/StutuPig", "followers_url": "https://api.github.com/users/StutuPig/followers", "following_url": "https://api.github.com/users/StutuPig/following{/other_user}", "gists_url": "https://api.github.com/users/StutuPig/gists{/gist_id}", "starred_url": "https://api.github.com/users/StutuPig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StutuPig/subscriptions", "organizations_url": "https://api.github.com/users/StutuPig/orgs", "repos_url": "https://api.github.com/users/StutuPig/repos", "events_url": "https://api.github.com/users/StutuPig/events{/privacy}", "received_events_url": "https://api.github.com/users/StutuPig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-15T02:40:24Z", "updated_at": "2017-11-17T19:05:22Z", "closed_at": "2017-11-17T19:05:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "if neg/pos is about 45-65, in this case, should we set scale_pos_weight to 1 or neg/pos ?\r\nwhen i use BayesianOptimization(bayes tuning) to tune xgboost, if i set scale_pos_weight to neg/pos the ks on valid dataset is about 18, but if i set scale_pos_weight to 1, the ks on valid dataset up to 38 ... i don't know why ? can somebody help to explain ..\r\n(Note: if scale_pos_weight ==1, i set feval='ks', or else, i set feval='auc').\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/72", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/72/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/72/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/72", "id": 271370897, "node_id": "MDU6SXNzdWUyNzEzNzA4OTc=", "number": 72, "title": "Feature selection using BayesianOptimization", "user": {"login": "eranop", "id": 7140240, "node_id": "MDQ6VXNlcjcxNDAyNDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/7140240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eranop", "html_url": "https://github.com/eranop", "followers_url": "https://api.github.com/users/eranop/followers", "following_url": "https://api.github.com/users/eranop/following{/other_user}", "gists_url": "https://api.github.com/users/eranop/gists{/gist_id}", "starred_url": "https://api.github.com/users/eranop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eranop/subscriptions", "organizations_url": "https://api.github.com/users/eranop/orgs", "repos_url": "https://api.github.com/users/eranop/repos", "events_url": "https://api.github.com/users/eranop/events{/privacy}", "received_events_url": "https://api.github.com/users/eranop/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-06T06:24:56Z", "updated_at": "2017-11-12T13:23:55Z", "closed_at": "2017-11-07T14:34:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to enter all the combinations of your features as a \"Hyper Parameter\" so that the optimization will try to maximize the features selected as well as the hyper parameters selected?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/71", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/71/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/71/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/71", "id": 271173371, "node_id": "MDU6SXNzdWUyNzExNzMzNzE=", "number": 71, "title": "sklearn.model_selection import cross_val_score not working after trying in sklearn_example.py", "user": {"login": "jmarrr", "id": 26637741, "node_id": "MDQ6VXNlcjI2NjM3NzQx", "avatar_url": "https://avatars3.githubusercontent.com/u/26637741?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmarrr", "html_url": "https://github.com/jmarrr", "followers_url": "https://api.github.com/users/jmarrr/followers", "following_url": "https://api.github.com/users/jmarrr/following{/other_user}", "gists_url": "https://api.github.com/users/jmarrr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmarrr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmarrr/subscriptions", "organizations_url": "https://api.github.com/users/jmarrr/orgs", "repos_url": "https://api.github.com/users/jmarrr/repos", "events_url": "https://api.github.com/users/jmarrr/events{/privacy}", "received_events_url": "https://api.github.com/users/jmarrr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-04T07:26:43Z", "updated_at": "2017-12-21T06:32:55Z", "closed_at": "2017-12-21T06:32:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I replaced **from sklearn.cross_validation import cross_val_score** to **from sklearn.model_selection import cross_val_score** due to deprecation warning and i got this error \r\n\r\n```\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-6-3a4f6e5aed0c> in <module>()\r\n     50     )\r\n     51 \r\n---> 52     svcBO.maximize(n_iter=10, **gp_params)\r\n     53     print('-' * 53)\r\n     54     rfcBO.maximize(n_iter=10, **gp_params)\r\n\r\nc:\\python35\\lib\\site-packages\\bayes_opt\\bayesian_optimization.py in maximize(self, init_points, n_iter, acq, kappa, xi, **gp_params)\r\n    268             if self.verbose:\r\n    269                 self.plog.print_header()\r\n--> 270             self.init(init_points)\r\n    271 \r\n    272         y_max = self.Y.max()\r\n\r\nc:\\python35\\lib\\site-packages\\bayes_opt\\bayesian_optimization.py in init(self, init_points)\r\n    111         for x in self.init_points:\r\n    112             self.X = np.vstack((self.X, np.asarray(x).reshape((1, -1))))\r\n--> 113             self.Y = np.append(self.Y, self.f(**dict(zip(self.keys, x))))\r\n    114 \r\n    115             if self.verbose:\r\n\r\n<ipython-input-6-3a4f6e5aed0c> in svccv(C, gamma)\r\n     20     val = cross_val_score(\r\n     21         SVC(C=C, gamma=gamma, random_state=2),\r\n---> 22         data, target, 'f1', cv=2\r\n     23     ).mean()\r\n     24 \r\n\r\nc:\\python35\\lib\\site-packages\\sklearn\\model_selection\\_validation.py in cross_val_score(estimator, X, y, groups, scoring, cv, n_jobs, verbose, fit_params, pre_dispatch)\r\n    340                                 n_jobs=n_jobs, verbose=verbose,\r\n    341                                 fit_params=fit_params,\r\n--> 342                                 pre_dispatch=pre_dispatch)\r\n    343     return cv_results['test_score']\r\n    344 \r\n\r\nc:\\python35\\lib\\site-packages\\sklearn\\model_selection\\_validation.py in cross_validate(estimator, X, y, groups, scoring, cv, n_jobs, verbose, fit_params, pre_dispatch, return_train_score)\r\n    190 \r\n    191     \"\"\"\r\n--> 192     X, y, groups = indexable(X, y, groups)\r\n    193 \r\n    194     cv = check_cv(cv, y, classifier=is_classifier(estimator))\r\n\r\nc:\\python35\\lib\\site-packages\\sklearn\\utils\\validation.py in indexable(*iterables)\r\n    227         else:\r\n    228             result.append(np.array(X))\r\n--> 229     check_consistent_length(*result)\r\n    230     return result\r\n    231 \r\n\r\nc:\\python35\\lib\\site-packages\\sklearn\\utils\\validation.py in check_consistent_length(*arrays)\r\n    202     if len(uniques) > 1:\r\n    203         raise ValueError(\"Found input variables with inconsistent numbers of\"\r\n--> 204                          \" samples: %r\" % [int(l) for l in lengths])\r\n    205 \r\n    206 \r\n\r\nValueError: Found input variables with inconsistent numbers of samples: [1000, 1000, 2]\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/70", "repository_url": "https://api.github.com/repos/fmfn/BayesianOptimization", "labels_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/70/comments", "events_url": "https://api.github.com/repos/fmfn/BayesianOptimization/issues/70/events", "html_url": "https://github.com/fmfn/BayesianOptimization/issues/70", "id": 266743170, "node_id": "MDU6SXNzdWUyNjY3NDMxNzA=", "number": 70, "title": "pip install error", "user": {"login": "philip-fu", "id": 26143544, "node_id": "MDQ6VXNlcjI2MTQzNTQ0", "avatar_url": "https://avatars0.githubusercontent.com/u/26143544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philip-fu", "html_url": "https://github.com/philip-fu", "followers_url": "https://api.github.com/users/philip-fu/followers", "following_url": "https://api.github.com/users/philip-fu/following{/other_user}", "gists_url": "https://api.github.com/users/philip-fu/gists{/gist_id}", "starred_url": "https://api.github.com/users/philip-fu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philip-fu/subscriptions", "organizations_url": "https://api.github.com/users/philip-fu/orgs", "repos_url": "https://api.github.com/users/philip-fu/repos", "events_url": "https://api.github.com/users/philip-fu/events{/privacy}", "received_events_url": "https://api.github.com/users/philip-fu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-10-19T07:20:40Z", "updated_at": "2017-10-24T14:20:25Z", "closed_at": "2017-10-24T14:20:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i run:\r\npip install bayesian-optimization\r\n\r\ni got:\r\nTypeError: string argument expected, got 'NoneType'\r\n\r\nHere the whole thing:\r\nRequirement already satisfied: bayesian-optimization in c:\\programdata\\anaconda3\\lib\\site-packages\\bayesian_optimization-0.4.0-py3.6.egg\r\nRequirement already satisfied: numpy>=1.9.0 in c:\\programdata\\anaconda3\\lib\\site-packages (from bayesian-optimization)\r\nRequirement already satisfied: scipy>=0.14.0 in c:\\programdata\\anaconda3\\lib\\site-packages (from bayesian-optimization)\r\nException:\r\nTraceback (most recent call last):\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\pip\\basecommand.py\", line 215, in main\r\n    status = self.run(options, args)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\pip\\commands\\install.py\", line 335, in run\r\n    wb.build(autobuilding=True)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\pip\\wheel.py\", line 749, in build\r\n    self.requirement_set.prepare_files(self.finder)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\pip\\req\\req_set.py\", line 380, in prepare_files\r\n    ignore_dependencies=self.ignore_dependencies))\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\pip\\req\\req_set.py\", line 666, in _prepare_file\r\n    check_dist_requires_python(dist)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\pip\\utils\\packaging.py\", line 48, in check_dist_requires_python\r\n    feed_parser.feed(metadata)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\email\\feedparser.py\", line 175, in feed\r\n    self._input.push(data)\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\email\\feedparser.py\", line 103, in push\r\n    self._partial.write(data)\r\nTypeError: string argument expected, got 'NoneType'\r\n", "performed_via_github_app": null, "score": 1.0}]}