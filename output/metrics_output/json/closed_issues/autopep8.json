{"total_count": 309, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/hhatto/autopep8/issues/566", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/566/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/566/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/566/events", "html_url": "https://github.com/hhatto/autopep8/issues/566", "id": 675409911, "node_id": "MDU6SXNzdWU2NzU0MDk5MTE=", "number": 566, "title": "toml is not required. Refactor import toml", "user": {"login": "Metallicow", "id": 4668356, "node_id": "MDQ6VXNlcjQ2NjgzNTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4668356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Metallicow", "html_url": "https://github.com/Metallicow", "followers_url": "https://api.github.com/users/Metallicow/followers", "following_url": "https://api.github.com/users/Metallicow/following{/other_user}", "gists_url": "https://api.github.com/users/Metallicow/gists{/gist_id}", "starred_url": "https://api.github.com/users/Metallicow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Metallicow/subscriptions", "organizations_url": "https://api.github.com/users/Metallicow/orgs", "repos_url": "https://api.github.com/users/Metallicow/repos", "events_url": "https://api.github.com/users/Metallicow/events{/privacy}", "received_events_url": "https://api.github.com/users/Metallicow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 391092013, "node_id": "MDU6TGFiZWwzOTEwOTIwMTM=", "url": "https://api.github.com/repos/hhatto/autopep8/labels/needs%20patch", "name": "needs patch", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/10", "html_url": "https://github.com/hhatto/autopep8/milestone/10", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/10/labels", "id": 5748863, "node_id": "MDk6TWlsZXN0b25lNTc0ODg2Mw==", "number": 10, "title": "1.5.5", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 1, "state": "open", "created_at": "2020-08-09T12:09:46Z", "updated_at": "2020-08-09T12:11:35Z", "due_on": "2020-10-29T07:00:00Z", "closed_at": null}, "comments": 6, "created_at": "2020-08-08T02:43:55Z", "updated_at": "2020-08-09T22:05:25Z", "closed_at": "2020-08-09T12:11:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "toml import is not required and is throwing ImportError. This needs refactored so it throws an error when trying to access features that actually use it.\r\n\r\n```python\r\ntry:\r\n    import toml\r\nexcept ImportError:\r\n    print('FAILED to import toml')\r\n    # toml import is not required. accessing these functions that use toml will throw error.\r\n    toml = None\r\n    \r\n...\r\n\r\ndef SomeFuncThatUsesTOML():\r\n    if toml is None:\r\n        raise ImportError('toml is not required. Try \"pip install toml\"')\r\n```\r\n\r\nAs you can see by the code, that it can be run on the cmd as a singlefile script(like pep8.py and pycodestyle.py is) and code added afterwards which makes it undoable/redoable in an editor.\r\n\r\n<details>\r\n    <summary>Collapsible Content - Click to expand</summary>\r\n\r\n```python\r\n    def OnautoPEP8(self, event=None):\r\n        \"\"\"\r\n        Perform autopep8 operations on the active document.\r\n        \"\"\"\r\n        self.FormatErrorsAndWarnings()\r\n        if not self.checkedErrorsAndWarnings:\r\n            return\r\n\r\n        aSTC = gMainWin.activeSTC\r\n        fileToCheck = aSTC.filepath\r\n        if not fileToCheck:\r\n            wx.MessageBox(_(u'File must be saved first!'), _(u'Warning'), wx.OK)\r\n            return\r\n\r\n        ## print('--select=%s' % self.checkedErrorsAndWarnings)\r\n        p = subprocess.Popen([sys.executable,        # 'python',\r\n                              _autopep8ScriptPath,   # 'autopep8.py',\r\n                              # '--first',\r\n                              '--select=%s' % self.checkedErrorsAndWarnings,    # Ex: '--select=E221,E222,E223,\r\n                              # '--ignore=%s' % self.checkedErrorsAndWarnings,  # Ex: '--ignore=E',\r\n                              # '--show-pep8',\r\n                              # '--max-line-length=120',\r\n                              fileToCheck],\r\n                              stdout=subprocess.PIPE,\r\n                              stderr=subprocess.PIPE)\r\n        out, err = p.communicate()\r\n        if err:\r\n            print(err)\r\n            raise Exception(err)\r\n        print(out)\r\n        ## aSTC.BeginUndoAction()\r\n        ## aSTC.SetTarget(0, aSTC.GetLength())\r\n        ## aSTC.ReplaceTarget(out)\r\n        ## aSTC.EndUndoAction()\r\n        print('OnautoPEP8')\r\n```\r\n</details>", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/564", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/564/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/564/events", "html_url": "https://github.com/hhatto/autopep8/issues/564", "id": 669208695, "node_id": "MDU6SXNzdWU2NjkyMDg2OTU=", "number": 564, "title": "SyntaxWarning when parsing comment", "user": {"login": "avancil", "id": 10202123, "node_id": "MDQ6VXNlcjEwMjAyMTIz", "avatar_url": "https://avatars0.githubusercontent.com/u/10202123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avancil", "html_url": "https://github.com/avancil", "followers_url": "https://api.github.com/users/avancil/followers", "following_url": "https://api.github.com/users/avancil/following{/other_user}", "gists_url": "https://api.github.com/users/avancil/gists{/gist_id}", "starred_url": "https://api.github.com/users/avancil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avancil/subscriptions", "organizations_url": "https://api.github.com/users/avancil/orgs", "repos_url": "https://api.github.com/users/avancil/repos", "events_url": "https://api.github.com/users/avancil/events{/privacy}", "received_events_url": "https://api.github.com/users/avancil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37680374, "node_id": "MDU6TGFiZWwzNzY4MDM3NA==", "url": "https://api.github.com/repos/hhatto/autopep8/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/9", "html_url": "https://github.com/hhatto/autopep8/milestone/9", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/9/labels", "id": 5483308, "node_id": "MDk6TWlsZXN0b25lNTQ4MzMwOA==", "number": 9, "title": "1.5.4", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2020-06-01T01:50:53Z", "updated_at": "2020-08-09T12:09:25Z", "due_on": "2020-07-30T07:00:00Z", "closed_at": "2020-08-09T12:09:25Z"}, "comments": 1, "created_at": "2020-07-30T21:24:15Z", "updated_at": "2020-07-31T07:14:08Z", "closed_at": "2020-07-31T07:14:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running autopep8 against one of my files, it spit out a couple syntax warnings. These appear to result from one line in the file, which is actually just a comment. I can reproduce the issue with just that line in the file.\r\n\r\n---\r\n\r\n## Python Code\r\n```python\r\n#                        [something] (something)\r\n```\r\n\r\n## Command Line and Configuration\r\nCommand Line\r\n```shell\r\n$ autopep8 temp.py\r\n<string>:1: SyntaxWarning: 'list' object is not callable; perhaps you missed a comma?\r\n<string>:1: SyntaxWarning: 'list' object is not callable; perhaps you missed a comma?\r\n#                        [something] (something)\r\n$\r\n```\r\n\r\n## Your Environment\r\n* Python version: 3.8.5 (pyenv)\r\n* autopep8 version: autopep8 1.5.3 (pycodestyle: 2.6.0)\r\n* Platform: Linux Ubuntu 20.04 LTS\r\nLinux ubuntu 5.4.0-42-generic #46-Ubuntu SMP Fri Jul 10 00:24:02 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/560", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/560/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/560/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/560/events", "html_url": "https://github.com/hhatto/autopep8/issues/560", "id": 662600734, "node_id": "MDU6SXNzdWU2NjI2MDA3MzQ=", "number": 560, "title": "Enhancement Idea: Be able to handle E203 \u2014 whitespace before ':'", "user": {"login": "ThatXliner", "id": 66848002, "node_id": "MDQ6VXNlcjY2ODQ4MDAy", "avatar_url": "https://avatars2.githubusercontent.com/u/66848002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThatXliner", "html_url": "https://github.com/ThatXliner", "followers_url": "https://api.github.com/users/ThatXliner/followers", "following_url": "https://api.github.com/users/ThatXliner/following{/other_user}", "gists_url": "https://api.github.com/users/ThatXliner/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThatXliner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThatXliner/subscriptions", "organizations_url": "https://api.github.com/users/ThatXliner/orgs", "repos_url": "https://api.github.com/users/ThatXliner/repos", "events_url": "https://api.github.com/users/ThatXliner/events{/privacy}", "received_events_url": "https://api.github.com/users/ThatXliner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-21T05:18:59Z", "updated_at": "2020-07-27T00:23:13Z", "closed_at": "2020-07-27T00:23:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "---\r\n\r\n## Python Code\r\n```python\r\n#!/usr/bin/env python3\r\n# -*- coding: utf-8 -*-\r\n\"\"\"\r\nAuthor: Bryanhu .\r\n\r\n@Bryanhu .\r\n\r\nMade with love by Bryanhu .\r\n\r\nVersion: v0.1.0.1\r\n\r\nDesc: This file is for tokenizing the scratch project for\r\neasier usage. It will store the output JSON in a GOOD_JSON.json file. This is\r\nmade so other languages such as C++, etc can easily process ugly scratch JSON.\r\n\"\"\"\r\n################################################################\r\n# Imports ######################################################\r\n################################################################\r\nimport json\r\n\r\n# import pprint  # NOT USED\r\n\r\n################################################################\r\n# Object definitions ###########################################\r\n################################################################\r\n\r\n\r\nclass Sprite(object):\r\n    \"\"\"Python's scratch sprites.\r\n\r\n    Attributes\r\n    ----------\r\n    code\r\n    broadcasts\r\n    lists\r\n    sounds\r\n    tempo\r\n    textToSpeechLanguage\r\n    videoState\r\n    videoTransparency\r\n    volume\r\n    variables\r\n\r\n    \"\"\"\r\n\r\n    # TODO: Simplify the assignments\r\n    # How? Well, we're going to combine the data variables and the lists.\r\n\r\n    def __init__(\r\n        self,\r\n        variables,\r\n        lists,\r\n        broadcasts,\r\n        blocks,\r\n        comments,\r\n        costumes,\r\n        sounds,\r\n        volume,\r\n        tempo,\r\n        videoTransparency,\r\n        videoState,\r\n        textToSpeechLanguage,\r\n        name,\r\n        data,\r\n        code,\r\n    ):\r\n        \"\"\"For making the scratch sprites a little bit easier to handle.\r\n\r\n        Returns\r\n        -------\r\n        type\r\n            Description of returned object.\r\n\r\n        \"\"\"\r\n        # Boring stuff\r\n        # NOTE: We're not using the name, data, and code variables\r\n        # Just yet.\r\n        self.code = code\r\n        self.broadcasts = broadcasts\r\n        self.lists = lists\r\n        self.sounds = sounds\r\n        self.tempo = tempo\r\n        self.textToSpeechLanguage = textToSpeechLanguage\r\n        self.videoState = videoState\r\n        self.videoTransparency = videoTransparency\r\n        self.volume = volume\r\n        self.variables = variables\r\n\r\n\r\nclass WalrusDiedError(Exception):\r\n    \"\"\"You're not running the version of python that supports the walrus operator syntax.\"\"\"\r\n\r\n    pass\r\n\r\n\r\n################################################################\r\n# Get input from INPUT_JSON.txt ################################\r\n################################################################\r\n\r\nwith open(\"INPUT_JSON.txt\") as f:\r\n    parseme = json.loads(f.read())\r\noutput = {}\r\n\r\nprint(parseme[\"targets\"])\r\n\r\n\r\nif __debug__:\r\n    for target in parseme[\"targets\"]:\r\n        try:\r\n            if (given_stage := target[\"isStage\"]) :\r\n                # There must be a better way to do this\r\n                stage = Sprite(\r\n                    # The data\r\n                    {  # Processing the variables\r\n                        variable[1][0]: variable[1][1]\r\n                        for variable in list(given_stage[\"variables\"].items())\r\n                    },\r\n                    given_stage[\"lists\"],\r\n                    given_stage[\"broadcasts\"],\r\n                    # Workspace elements\r\n                    given_stage[\"blocks\"],\r\n                    given_stage[\"comments\"],\r\n                    given_stage[\"costumes\"],\r\n                    # Sounds\r\n                    given_stage[\"sounds\"],\r\n                    given_stage[\"volume\"],\r\n                    given_stage[\"tempo\"],\r\n                    # Video elements\r\n                    given_stage[\"videoTransparency\"],\r\n                    given_stage[\"videoState\"],\r\n                    given_stage[\"textToSpeechLanguage\"],\r\n                )\r\n        except SyntaxError:  # You're not running python3.8\r\n            raise WalrusDiedError(\r\n                \"Your version of python doesn\u2019t support the walrus operator (python3.8 -?)\"\r\n            )\r\n\r\n```\r\n\r\n## Command Line and Configuration\r\n`.pep8`, `setup.cfg`, ...\r\n\r\n```ini\r\n[pep8]\r\n\r\n```\r\n\r\nCommand Line\r\n```shell\r\n$ autopep8 Parser.py\r\n```\r\n\r\n## Your Environment\r\n* Python version: 3.8.2\r\n* autopep8 version: autopep8 1.5.3 (pycodestyle: 2.6.0)\r\n* Platform: windows, linux, macOSX, and other OS... macOSX+\r\n\r\n\r\n\r\n\r\nENHANCEMENT: Be able to handle \tE203 \u2014 whitespace before ':'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/559", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/559/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/559/events", "html_url": "https://github.com/hhatto/autopep8/issues/559", "id": 661954987, "node_id": "MDU6SXNzdWU2NjE5NTQ5ODc=", "number": 559, "title": "E203 is not ignored via pyproject.toml", "user": {"login": "RJ722", "id": 15556382, "node_id": "MDQ6VXNlcjE1NTU2Mzgy", "avatar_url": "https://avatars1.githubusercontent.com/u/15556382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RJ722", "html_url": "https://github.com/RJ722", "followers_url": "https://api.github.com/users/RJ722/followers", "following_url": "https://api.github.com/users/RJ722/following{/other_user}", "gists_url": "https://api.github.com/users/RJ722/gists{/gist_id}", "starred_url": "https://api.github.com/users/RJ722/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RJ722/subscriptions", "organizations_url": "https://api.github.com/users/RJ722/orgs", "repos_url": "https://api.github.com/users/RJ722/repos", "events_url": "https://api.github.com/users/RJ722/events{/privacy}", "received_events_url": "https://api.github.com/users/RJ722/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-20T15:29:27Z", "updated_at": "2020-07-27T00:02:47Z", "closed_at": "2020-07-27T00:02:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "If `E203` (I've not checked with other issues, happy to do so if required) is specified under `ignore` key in `pyproject.toml`, it is not being ignored, and is still fixed. Let me give you a more concrete example:\r\n\r\n```python\r\n# mock file - a.py\r\n\r\nli = [1, 2, 3, 10]\r\nprint(li[1 : 2])\r\n```\r\n\r\n`pyproject.toml` at the root of the project:\r\n\r\n```toml\r\n[tool.autopep8]\r\nignore = \"E203\"\r\n```\r\n\r\nWhen I run, `autopep8 -dvvvv a.py`:\r\n\r\n```diff\r\nenable pyproject.toml config: section=tool.autopep8, key=ignore, value=\"E203\"\r\n[file:a.py]\r\n--->  Applying global fix for E265\r\n--->  1 issue(s) to fix {'E203': {4}}\r\n--->  0 issue(s) to fix {}\r\n--- original/a.py\r\n+++ fixed/a.py\r\n@@ -1,4 +1,4 @@\r\n # mock file\r\n\r\n li = [1, 2, 3, 10]\r\n-print(li[1 : 2])\r\n+print(li[1: 2])\r\n```\r\n\r\nAs you can see, `E203` isn't ignored. However, if I run `autopep8 -dvvvv --ignore E203`, or I specify `E203` under `pycodestyle` in my `setup.cfg`, it is ignored correctly. Here's the output of `autopep8 -dvvvv --ignore E203`:\r\n\r\n```\r\nenable pyproject.toml config: section=tool.autopep8, key=ignore, value=\"E203\"\r\n[file:a.py]\r\n--->  Applying global fix for E265\r\n--->  0 issue(s) to fix {}\r\n```\r\n\r\n---\r\n\r\n## Your Environment\r\n* Python version: Python 3.8.2\r\n* autopep8 version: `autopep8 1.5.2 (pycodestyle: 2.5.0)`\r\n* Platform: macOSX\r\n\r\nI shall be happy to provide more information if required. Thanks for the great project!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/555", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/555/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/555/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/555/events", "html_url": "https://github.com/hhatto/autopep8/issues/555", "id": 651046956, "node_id": "MDU6SXNzdWU2NTEwNDY5NTY=", "number": 555, "title": "Bug in Logical statement ", "user": {"login": "mradultiw", "id": 53928253, "node_id": "MDQ6VXNlcjUzOTI4MjUz", "avatar_url": "https://avatars2.githubusercontent.com/u/53928253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mradultiw", "html_url": "https://github.com/mradultiw", "followers_url": "https://api.github.com/users/mradultiw/followers", "following_url": "https://api.github.com/users/mradultiw/following{/other_user}", "gists_url": "https://api.github.com/users/mradultiw/gists{/gist_id}", "starred_url": "https://api.github.com/users/mradultiw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mradultiw/subscriptions", "organizations_url": "https://api.github.com/users/mradultiw/orgs", "repos_url": "https://api.github.com/users/mradultiw/repos", "events_url": "https://api.github.com/users/mradultiw/events{/privacy}", "received_events_url": "https://api.github.com/users/mradultiw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-05T10:54:01Z", "updated_at": "2020-07-05T16:35:41Z", "closed_at": "2020-07-05T15:28:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n## Logical bug found\r\n\r\nI've a package on PyPi ([pyropes.PyPI](https://pypi.org/project/pyropes/)) which I want to refactor according to PEP8 but found this logical statement bug while retesting.\r\n\r\nLook at the image attached:\r\n\r\n![autopep8 bug](https://user-images.githubusercontent.com/53928253/86531046-a5fa9700-bedb-11ea-8ab4-ac54c7bac528.png)\r\n\r\n This is a serious bug and causes several test fail which earlier were passing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/554", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/554/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/554/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/554/events", "html_url": "https://github.com/hhatto/autopep8/issues/554", "id": 649249329, "node_id": "MDU6SXNzdWU2NDkyNDkzMjk=", "number": 554, "title": "Autopep8 is not fixing F541 (f-string is missing placeholders)", "user": {"login": "forest-benchling", "id": 64445763, "node_id": "MDQ6VXNlcjY0NDQ1NzYz", "avatar_url": "https://avatars3.githubusercontent.com/u/64445763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/forest-benchling", "html_url": "https://github.com/forest-benchling", "followers_url": "https://api.github.com/users/forest-benchling/followers", "following_url": "https://api.github.com/users/forest-benchling/following{/other_user}", "gists_url": "https://api.github.com/users/forest-benchling/gists{/gist_id}", "starred_url": "https://api.github.com/users/forest-benchling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/forest-benchling/subscriptions", "organizations_url": "https://api.github.com/users/forest-benchling/orgs", "repos_url": "https://api.github.com/users/forest-benchling/repos", "events_url": "https://api.github.com/users/forest-benchling/events{/privacy}", "received_events_url": "https://api.github.com/users/forest-benchling/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-01T19:25:49Z", "updated_at": "2020-07-06T00:41:58Z", "closed_at": "2020-07-05T15:37:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "---\r\nIs there a way to auto-fix Flake8's F541 (f-string is missing placeholders) error?\r\n\r\nIf not, would this be appropriate/easy to introduce? Thanks!\r\n\r\n## Python Code\r\n```python\r\nf\"foo\"\r\n```\r\n\r\n## Command Line and Configuration\r\n`.pep8`, `setup.cfg`, ...\r\n\r\nCommand Line\r\n```shell\r\n$ autopep8 -ri .\r\n$ flake8 .\r\nfoo.py:1:1: F541 f-string is missing placeholders\r\n```\r\n\r\n## Your Environment\r\n* Python version: 3.8\r\n* autopep8 version: 1.5.3\r\n* Platform: macOSX\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/552", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/552/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/552/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/552/events", "html_url": "https://github.com/hhatto/autopep8/issues/552", "id": 640629267, "node_id": "MDU6SXNzdWU2NDA2MjkyNjc=", "number": 552, "title": "Doesn't work in Jupyter Notebook when combined with pycodestyle_magic", "user": {"login": "PavloFesenko", "id": 16855796, "node_id": "MDQ6VXNlcjE2ODU1Nzk2", "avatar_url": "https://avatars1.githubusercontent.com/u/16855796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PavloFesenko", "html_url": "https://github.com/PavloFesenko", "followers_url": "https://api.github.com/users/PavloFesenko/followers", "following_url": "https://api.github.com/users/PavloFesenko/following{/other_user}", "gists_url": "https://api.github.com/users/PavloFesenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/PavloFesenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PavloFesenko/subscriptions", "organizations_url": "https://api.github.com/users/PavloFesenko/orgs", "repos_url": "https://api.github.com/users/PavloFesenko/repos", "events_url": "https://api.github.com/users/PavloFesenko/events{/privacy}", "received_events_url": "https://api.github.com/users/PavloFesenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-17T17:46:50Z", "updated_at": "2020-06-18T00:36:30Z", "closed_at": "2020-06-18T00:36:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the Jupyter Notebook when I activate `%pycodestyle_on` from the extension [pycodestyle_magic](https://github.com/mattijn/pycodestyle_magic), applying autopep8 to the notebook cells results in a browser pop-up message `SyntaxError: Unexpected token : in JSON at position 1`. It doesn't give this error for a simple code like `a=1` but for something slightly complicated like import of two modules, it does (see the examples below).\r\n\r\n## Python Code\r\n\r\nThe first cell loads pycodestyle_magic and activates style checking for all cells.\r\n\r\n```python\r\n%load_ext pycodestyle_magic\r\n%pycodestyle_on\r\n```\r\n\r\nThe autopep8 works for this cell.\r\n\r\n```python\r\na=1\r\n```\r\n\r\nBut gives an error for this one.\r\n\r\n```python\r\nimport pandas as    pd\r\nimport numpy as np\r\n```\r\n\r\nI was wondering if the extension pycodestyle_magic does something fishy or is it a bug within autopep8? \ud83e\udd14\r\n\r\n## Your Environment\r\n* Python version: 3.6.9\r\n* autopep8 version: 1.4.4\r\n* Platform: Linux\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/551", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/551/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/551/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/551/events", "html_url": "https://github.com/hhatto/autopep8/issues/551", "id": 636184988, "node_id": "MDU6SXNzdWU2MzYxODQ5ODg=", "number": 551, "title": "autopep8 inplace is ignoring W292", "user": {"login": "ChillarAnand", "id": 4463796, "node_id": "MDQ6VXNlcjQ0NjM3OTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/4463796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChillarAnand", "html_url": "https://github.com/ChillarAnand", "followers_url": "https://api.github.com/users/ChillarAnand/followers", "following_url": "https://api.github.com/users/ChillarAnand/following{/other_user}", "gists_url": "https://api.github.com/users/ChillarAnand/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChillarAnand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChillarAnand/subscriptions", "organizations_url": "https://api.github.com/users/ChillarAnand/orgs", "repos_url": "https://api.github.com/users/ChillarAnand/repos", "events_url": "https://api.github.com/users/ChillarAnand/events{/privacy}", "received_events_url": "https://api.github.com/users/ChillarAnand/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37915105, "node_id": "MDU6TGFiZWwzNzkxNTEwNQ==", "url": "https://api.github.com/repos/hhatto/autopep8/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/9", "html_url": "https://github.com/hhatto/autopep8/milestone/9", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/9/labels", "id": 5483308, "node_id": "MDk6TWlsZXN0b25lNTQ4MzMwOA==", "number": 9, "title": "1.5.4", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2020-06-01T01:50:53Z", "updated_at": "2020-08-09T12:09:25Z", "due_on": "2020-07-30T07:00:00Z", "closed_at": "2020-08-09T12:09:25Z"}, "comments": 2, "created_at": "2020-06-10T11:55:15Z", "updated_at": "2020-06-22T14:04:28Z", "closed_at": "2020-06-22T14:04:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Command Line\r\n\r\n```shell\r\n$ echo -n 'import x' > foo.py\r\n\r\n$ file foo.py\r\nfoo.py: ASCII text, with no line terminators\r\n\r\n$ autopep8 --recursive --diff .    \r\n--- original/./foo.py\r\n+++ fixed/./foo.py\r\n@@ -1 +1 @@\r\n-import x\r\n\\ No newline at end of file\r\n+import x\r\n\r\n$ autopep8 --recursive --in-place .\r\n\r\n$ file foo.py\r\nfoo.py: ASCII text, with no line terminators\r\n```\r\n\r\n## Your Environment\r\n* Python version: 3.8\r\n\r\n* autopep8 version: autopep8 1.5.3 (pycodestyle: 2.6.0)\r\n\r\n* Platform: macOSX\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/547", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/547/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/547/events", "html_url": "https://github.com/hhatto/autopep8/issues/547", "id": 627662008, "node_id": "MDU6SXNzdWU2Mjc2NjIwMDg=", "number": 547, "title": "places Jupyter shell commands after imports", "user": {"login": "drscotthawley", "id": 13925685, "node_id": "MDQ6VXNlcjEzOTI1Njg1", "avatar_url": "https://avatars1.githubusercontent.com/u/13925685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drscotthawley", "html_url": "https://github.com/drscotthawley", "followers_url": "https://api.github.com/users/drscotthawley/followers", "following_url": "https://api.github.com/users/drscotthawley/following{/other_user}", "gists_url": "https://api.github.com/users/drscotthawley/gists{/gist_id}", "starred_url": "https://api.github.com/users/drscotthawley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drscotthawley/subscriptions", "organizations_url": "https://api.github.com/users/drscotthawley/orgs", "repos_url": "https://api.github.com/users/drscotthawley/repos", "events_url": "https://api.github.com/users/drscotthawley/events{/privacy}", "received_events_url": "https://api.github.com/users/drscotthawley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-30T06:12:33Z", "updated_at": "2020-05-30T06:17:23Z", "closed_at": "2020-05-30T06:17:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "My mistake.  This Issue is Jupyter-specific.  Closing and opening in `jupyter-contrib` repo instead. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/543", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/543/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/543/events", "html_url": "https://github.com/hhatto/autopep8/issues/543", "id": 620232617, "node_id": "MDU6SXNzdWU2MjAyMzI2MTc=", "number": 543, "title": "`-j0` incompatible with `--exit-code`", "user": {"login": "pitrou", "id": 1721820, "node_id": "MDQ6VXNlcjE3MjE4MjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1721820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pitrou", "html_url": "https://github.com/pitrou", "followers_url": "https://api.github.com/users/pitrou/followers", "following_url": "https://api.github.com/users/pitrou/following{/other_user}", "gists_url": "https://api.github.com/users/pitrou/gists{/gist_id}", "starred_url": "https://api.github.com/users/pitrou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pitrou/subscriptions", "organizations_url": "https://api.github.com/users/pitrou/orgs", "repos_url": "https://api.github.com/users/pitrou/repos", "events_url": "https://api.github.com/users/pitrou/events{/privacy}", "received_events_url": "https://api.github.com/users/pitrou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/8", "html_url": "https://github.com/hhatto/autopep8/milestone/8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/8/labels", "id": 5335287, "node_id": "MDk6TWlsZXN0b25lNTMzNTI4Nw==", "number": 8, "title": "1.5.3", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2020-04-22T00:14:10Z", "updated_at": "2020-05-31T14:23:15Z", "due_on": "2020-05-28T07:00:00Z", "closed_at": "2020-05-31T14:23:15Z"}, "comments": 1, "created_at": "2020-05-18T13:58:02Z", "updated_at": "2020-05-25T03:36:38Z", "closed_at": "2020-05-22T00:14:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I pass `--exit-code` together with `-j0` (or e.g. `-j2`), it seems the exit code is always 2.\r\n* without `-j0`\r\n```\r\n$ autopep8  --global-config /home/antoine/arrow/dev/python/setup.cfg --ignore-local-config --diff --exit-code /home/antoine/arrow/dev/dev/archery/archery/__init__.py\r\n$ echo $?\r\n0\r\n```\r\n* same with `-j0`:\r\n```\r\n$ autopep8 -j0 --global-config /home/antoine/arrow/dev/python/setup.cfg --ignore-local-config --diff --exit-code /home/antoine/arrow/dev/dev/archery/archery/__init__.py\r\n$ echo $?\r\n2\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/542", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/542/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/542/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/542/events", "html_url": "https://github.com/hhatto/autopep8/issues/542", "id": 612709461, "node_id": "MDU6SXNzdWU2MTI3MDk0NjE=", "number": 542, "title": "Autopep Modifies Python 3.8 Assignment Operator Incorrectly", "user": {"login": "chrisgilbert", "id": 361112, "node_id": "MDQ6VXNlcjM2MTExMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/361112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisgilbert", "html_url": "https://github.com/chrisgilbert", "followers_url": "https://api.github.com/users/chrisgilbert/followers", "following_url": "https://api.github.com/users/chrisgilbert/following{/other_user}", "gists_url": "https://api.github.com/users/chrisgilbert/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisgilbert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisgilbert/subscriptions", "organizations_url": "https://api.github.com/users/chrisgilbert/orgs", "repos_url": "https://api.github.com/users/chrisgilbert/repos", "events_url": "https://api.github.com/users/chrisgilbert/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisgilbert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-05T15:52:58Z", "updated_at": "2020-06-01T00:41:19Z", "closed_at": "2020-05-07T14:27:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "I started using the new `:=` assignment operations/walrus operator [from python 3.8 ](https://www.python.org/dev/peps/pep-0572/)today. When I ran the file through autopep, it unfortunately treated the `:` as the end of the statement and added a newline, breaking the code syntax. Here's a test case to reproduce the problem.\r\n\r\n---\r\n\r\n## Python Code\r\n```python\r\nsql_stmt = \"\"\r\nwith open(filename) as f:\r\n    while line := f.readline():\r\n        sql_stmt += line\r\n```\r\n\r\n## Command Line and Configuration\r\nDefault config.\r\n\r\nCommand Line\r\n```shell\r\n$ autopep8 \r\nsql_stmt = \"\"\r\nwith open(filename) as f:\r\n     while line:\r\n         = f.readline():\r\n         sql_stmt += line\r\n```\r\n\r\n## Your Environment\r\n* Python version: 3.8.2\r\n* autopep8 version: 1.5.2\r\n* Platform: MacOSX 10.14.4 (Mojave)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/540", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/540/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/540/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/540/events", "html_url": "https://github.com/hhatto/autopep8/issues/540", "id": 604214621, "node_id": "MDU6SXNzdWU2MDQyMTQ2MjE=", "number": 540, "title": "Hangs when line just contains backslash", "user": {"login": "mowat27", "id": 249602, "node_id": "MDQ6VXNlcjI0OTYwMg==", "avatar_url": "https://avatars3.githubusercontent.com/u/249602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mowat27", "html_url": "https://github.com/mowat27", "followers_url": "https://api.github.com/users/mowat27/followers", "following_url": "https://api.github.com/users/mowat27/following{/other_user}", "gists_url": "https://api.github.com/users/mowat27/gists{/gist_id}", "starred_url": "https://api.github.com/users/mowat27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mowat27/subscriptions", "organizations_url": "https://api.github.com/users/mowat27/orgs", "repos_url": "https://api.github.com/users/mowat27/repos", "events_url": "https://api.github.com/users/mowat27/events{/privacy}", "received_events_url": "https://api.github.com/users/mowat27/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37915105, "node_id": "MDU6TGFiZWwzNzkxNTEwNQ==", "url": "https://api.github.com/repos/hhatto/autopep8/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/8", "html_url": "https://github.com/hhatto/autopep8/milestone/8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/8/labels", "id": 5335287, "node_id": "MDk6TWlsZXN0b25lNTMzNTI4Nw==", "number": 8, "title": "1.5.3", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2020-04-22T00:14:10Z", "updated_at": "2020-05-31T14:23:15Z", "due_on": "2020-05-28T07:00:00Z", "closed_at": "2020-05-31T14:23:15Z"}, "comments": 1, "created_at": "2020-04-21T19:04:48Z", "updated_at": "2020-05-03T08:05:12Z", "closed_at": "2020-05-03T08:05:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "---\r\n\r\n## Python Code\r\n```python\r\n# in file breaks_autopep.py\r\nimport sys\r\n\\\r\ndef f():\r\n    pass\r\n```\r\n\r\n## Command Line and Configuration\r\n`.pep8`, `setup.cfg`, ... \r\n\r\nN/A - default settings\r\n\r\n```ini\r\n[pep8]\r\n\r\n```\r\n\r\nN/A - default settings\r\n\r\nCommand Line\r\n```shell\r\n$ autopep8 -v --in-place --aggressive breaks_autopep.py\r\n[file:tmp/breaks_autopep.py]\r\n--->  Applying global fix for E265\r\n--->  Applying global fix for E231\r\n--->  Applying global fix for E721\r\n--->  Applying global fix for W601\r\n--->  Applying global fix for W603\r\n--->  Applying global fix for W604\r\n--->  Applying global fix for W690\r\n--->  1 issue(s) to fix {'E302': {3}}\r\n--->  2 issue(s) to fix {'E302': {5}, 'E122': {5}}\r\n--->  2 issue(s) to fix {'E302': {7}, 'E122': {7}}\r\n--->  2 issue(s) to fix {'E302': {9}, 'E122': {9}}\r\n--->  2 issue(s) to fix {'E302': {11}, 'E122': {11}}\r\n--->  2 issue(s) to fix {'E302': {13}, 'E122': {13}}\r\n--->  2 issue(s) to fix {'E302': {15}, 'E122': {15}}\r\n--->  2 issue(s) to fix {'E302': {17}, 'E122': {17}}\r\n--->  2 issue(s) to fix {'E302': {19}, 'E122': {19}}\r\n--->  2 issue(s) to fix {'E302': {21}, 'E122': {21}}\r\n--->  2 issue(s) to fix {'E302': {23}, 'E122': {23}}\r\n--->  2 issue(s) to fix {'E302': {25}, 'E122': {25}}\r\n--->  2 issue(s) to fix {'E302': {27}, 'E122': {27}}\r\n--->  2 issue(s) to fix {'E302': {29}, 'E122': {29}}\r\n--->  2 issue(s) to fix {'E302': {31}, 'E122': {31}}\r\n--->  2 issue(s) to fix {'E302': {33}, 'E122': {33}}\r\n--->  2 issue(s) to fix {'E302': {35}, 'E122': {35}}\r\n--->  2 issue(s) to fix {'E302': {37}, 'E122': {37}}\r\n--->  2 issue(s) to fix {'E302': {39}, 'E122': {39}}\r\n--->  2 issue(s) to fix {'E302': {41}, 'E122': {41}}\r\n# ...\r\n# and so on and on and on....\r\n```\r\n\r\n## Your Environment\r\n* Python version: `Python 3.8.2`\r\n* autopep8 version: `autopep8 1.5.1 (pycodestyle: 2.5.0)`\r\n* Platform: MacOS `10.15.2`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/536", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/536/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/536/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/536/events", "html_url": "https://github.com/hhatto/autopep8/issues/536", "id": 597808551, "node_id": "MDU6SXNzdWU1OTc4MDg1NTE=", "number": 536, "title": "Support PEP572", "user": {"login": "brupelo", "id": 18058492, "node_id": "MDQ6VXNlcjE4MDU4NDky", "avatar_url": "https://avatars3.githubusercontent.com/u/18058492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brupelo", "html_url": "https://github.com/brupelo", "followers_url": "https://api.github.com/users/brupelo/followers", "following_url": "https://api.github.com/users/brupelo/following{/other_user}", "gists_url": "https://api.github.com/users/brupelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/brupelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brupelo/subscriptions", "organizations_url": "https://api.github.com/users/brupelo/orgs", "repos_url": "https://api.github.com/users/brupelo/repos", "events_url": "https://api.github.com/users/brupelo/events{/privacy}", "received_events_url": "https://api.github.com/users/brupelo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-10T10:01:18Z", "updated_at": "2020-04-10T10:09:52Z", "closed_at": "2020-04-10T10:09:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "It'd be awesome if autopep8 would support the walrus operator, right now when i try to format something like this:\r\n\r\n```\r\ndef extract_signature(pe):\r\n    if address:=signature_address(pe):\r\n        raise Exception('Source file is not signed')\r\n    else:\r\n        return pe.write()[address + 8:]\r\n\r\n```\r\nit'll break into something like this:\r\n\r\n```\r\ndef extract_signature(pe):\r\n    if address:\r\n        =signature_address(pe):\r\n        raise Exception('Source file is not signed')\r\n    else:\r\n        return pe.write()[address + 8:]\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/531", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/531/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/531/events", "html_url": "https://github.com/hhatto/autopep8/issues/531", "id": 593022218, "node_id": "MDU6SXNzdWU1OTMwMjIyMTg=", "number": 531, "title": ":= formatted wrongly", "user": {"login": "BornForFever", "id": 62426149, "node_id": "MDQ6VXNlcjYyNDI2MTQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/62426149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BornForFever", "html_url": "https://github.com/BornForFever", "followers_url": "https://api.github.com/users/BornForFever/followers", "following_url": "https://api.github.com/users/BornForFever/following{/other_user}", "gists_url": "https://api.github.com/users/BornForFever/gists{/gist_id}", "starred_url": "https://api.github.com/users/BornForFever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BornForFever/subscriptions", "organizations_url": "https://api.github.com/users/BornForFever/orgs", "repos_url": "https://api.github.com/users/BornForFever/repos", "events_url": "https://api.github.com/users/BornForFever/events{/privacy}", "received_events_url": "https://api.github.com/users/BornForFever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-03T01:51:57Z", "updated_at": "2020-04-03T02:31:52Z", "closed_at": "2020-04-03T02:31:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Python 3.8, the walrus operator `:=` means assigning a value to a variable in an expression, e.g.\r\n```python\r\n\r\nif (n := len(a)) > 10:  # avoid calling len() twice\r\n    print(f\"List is too long ({n} elements, expected <= 10)\")\r\n```\r\nFor a full description, see [PEP 572](https://www.python.org/dev/peps/pep-0572).\r\nHowever, when I try to format `a := b` using autopep8, it will turn to `a: = b` by mistake. I hope this bug will be solved. Thanks!\r\n\r\n---\r\n\r\n## Python Code\r\n```python\r\n\r\nif (key := keycode[1]) == 'n': do_something()\r\n```\r\n\r\n## Command Line and Configuration\r\n`.pep8`, `setup.cfg`, ...\r\n\r\n```ini\r\n[pep8]\r\n# default\r\n```\r\n\r\nCommand Line\r\n```shell\r\npython -m autopep8 uieditor/uieditor.py\r\n```\r\n\r\n## Your Environment\r\n* Python version: 3.8.2\r\n* autopep8 version: 1.5\r\n* Platform: windows\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/529", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/529/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/529/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/529/events", "html_url": "https://github.com/hhatto/autopep8/issues/529", "id": 589609132, "node_id": "MDU6SXNzdWU1ODk2MDkxMzI=", "number": 529, "title": "when __all__ var is defined over multiple lines, import annotations moved incorrectly", "user": {"login": "parthlathiya", "id": 8876569, "node_id": "MDQ6VXNlcjg4NzY1Njk=", "avatar_url": "https://avatars3.githubusercontent.com/u/8876569?v=4", "gravatar_id": "", "url": "https://api.github.com/users/parthlathiya", "html_url": "https://github.com/parthlathiya", "followers_url": "https://api.github.com/users/parthlathiya/followers", "following_url": "https://api.github.com/users/parthlathiya/following{/other_user}", "gists_url": "https://api.github.com/users/parthlathiya/gists{/gist_id}", "starred_url": "https://api.github.com/users/parthlathiya/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/parthlathiya/subscriptions", "organizations_url": "https://api.github.com/users/parthlathiya/orgs", "repos_url": "https://api.github.com/users/parthlathiya/repos", "events_url": "https://api.github.com/users/parthlathiya/events{/privacy}", "received_events_url": "https://api.github.com/users/parthlathiya/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37915105, "node_id": "MDU6TGFiZWwzNzkxNTEwNQ==", "url": "https://api.github.com/repos/hhatto/autopep8/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/5", "html_url": "https://github.com/hhatto/autopep8/milestone/5", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/5/labels", "id": 4966385, "node_id": "MDk6TWlsZXN0b25lNDk2NjM4NQ==", "number": 5, "title": "1.5.1", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2020-01-01T15:54:44Z", "updated_at": "2020-04-05T23:20:20Z", "due_on": "2020-04-02T07:00:00Z", "closed_at": "2020-04-05T23:20:20Z"}, "comments": 1, "created_at": "2020-03-28T16:20:45Z", "updated_at": "2020-04-02T00:40:32Z", "closed_at": "2020-04-02T00:40:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "---\r\n\r\n## Python Code\r\n```python\r\n__all__ = [\r\n\t'temp1',\r\n\t'temp2'\r\n]\r\n\r\ntemp1 = 1\r\ntemp2 = 2\r\n\r\nimport time \r\n\r\nprint(time.time())\r\n```\r\n\r\n## Command Line and Configuration\r\n`.pep8`, `setup.cfg`, ...\r\n\r\n```ini\r\n[pep8]\r\n\r\n```\r\n\r\nCommand Line\r\n```shell\r\n$ autopep8 \r\n```\r\n\r\n## Your Environment\r\n* Python version: 2.7.16\r\n* autopep8 version: 1.5 (pycodestyle: 2.5.0)\r\n* Platform: macOSX\r\n\r\n## autopep8 output\r\n```python\r\n__all__ = [\r\n    import time\r\n    'temp1',\r\n    'temp2'\r\n]\r\n\r\ntemp1 = 1\r\ntemp2 = 2\r\n\r\n\r\nprint(time.time())\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/528", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/528/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/528/events", "html_url": "https://github.com/hhatto/autopep8/issues/528", "id": 585705532, "node_id": "MDU6SXNzdWU1ODU3MDU1MzI=", "number": 528, "title": "Expected pyproject.toml configuration syntax incompatible with TOML format", "user": {"login": "OliverSieweke", "id": 30631513, "node_id": "MDQ6VXNlcjMwNjMxNTEz", "avatar_url": "https://avatars2.githubusercontent.com/u/30631513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OliverSieweke", "html_url": "https://github.com/OliverSieweke", "followers_url": "https://api.github.com/users/OliverSieweke/followers", "following_url": "https://api.github.com/users/OliverSieweke/following{/other_user}", "gists_url": "https://api.github.com/users/OliverSieweke/gists{/gist_id}", "starred_url": "https://api.github.com/users/OliverSieweke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OliverSieweke/subscriptions", "organizations_url": "https://api.github.com/users/OliverSieweke/orgs", "repos_url": "https://api.github.com/users/OliverSieweke/repos", "events_url": "https://api.github.com/users/OliverSieweke/events{/privacy}", "received_events_url": "https://api.github.com/users/OliverSieweke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/8", "html_url": "https://github.com/hhatto/autopep8/milestone/8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/8/labels", "id": 5335287, "node_id": "MDk6TWlsZXN0b25lNTMzNTI4Nw==", "number": 8, "title": "1.5.3", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2020-04-22T00:14:10Z", "updated_at": "2020-05-31T14:23:15Z", "due_on": "2020-05-28T07:00:00Z", "closed_at": "2020-05-31T14:23:15Z"}, "comments": 4, "created_at": "2020-03-22T12:19:33Z", "updated_at": "2020-06-09T18:41:19Z", "closed_at": "2020-05-25T03:36:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "#510 introduced a configuration option through the `pyproject.toml` file, under a `[tool.autopep8]` header. However the expected syntax conforms to the [syntax of the `setup.cfg` file](https://docs.python.org/3/distutils/configfile.html), which is not quite compatible with the [TOML](https://github.com/toml-lang/toml) format.\r\n\r\nThe following example from the documentation works fine on its own:\r\n\r\n```ini\r\n[tool.autopep8]\r\nmax_line_length = 120\r\nignore = E501\r\n```\r\n\r\nHowever this syntax will break other tools that use the `pyproject.toml` file, for instance leading them to interpret `E203` as a float without a leading digit in this case. I believe the correct syntax should be: \r\n\r\n```toml\r\n[tool.autopep8]\r\nmax_line_length = 120\r\nignore = ['E501']\r\n```\r\n\r\nThe current parser will not pick up this corrected syntax however. This makes it impossible to use the `pyproject.toml` configuration option, while also using other tools that expect a strict [TOML](https://github.com/toml-lang/toml) format.\r\n\r\nI believe this is the relevant part of the code:\r\nhttps://github.com/hhatto/autopep8/blob/3d5506e612f7f86bd9a516cc8d0c7642b81efa94/autopep8.py#L3821-L3862\r\n\r\n---\r\n\r\nQuite new to Python, but happy to give this a shot...\r\n\r\n---\r\n\r\n## Your Environment\r\n* Python version: `3.7`\r\n* autopep8 version: `1.5`\r\n* Platform: macOSX", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/523", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/523/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/523/events", "html_url": "https://github.com/hhatto/autopep8/issues/523", "id": 564404691, "node_id": "MDU6SXNzdWU1NjQ0MDQ2OTE=", "number": 523, "title": "autopep 8 incorrectly change the order of import statements", "user": {"login": "qiulang", "id": 516243, "node_id": "MDQ6VXNlcjUxNjI0Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/516243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qiulang", "html_url": "https://github.com/qiulang", "followers_url": "https://api.github.com/users/qiulang/followers", "following_url": "https://api.github.com/users/qiulang/following{/other_user}", "gists_url": "https://api.github.com/users/qiulang/gists{/gist_id}", "starred_url": "https://api.github.com/users/qiulang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qiulang/subscriptions", "organizations_url": "https://api.github.com/users/qiulang/orgs", "repos_url": "https://api.github.com/users/qiulang/repos", "events_url": "https://api.github.com/users/qiulang/events{/privacy}", "received_events_url": "https://api.github.com/users/qiulang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-13T02:49:10Z", "updated_at": "2020-02-13T03:32:39Z", "closed_at": "2020-02-13T03:32:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "---\r\nI initially thought it was a vscode bug so I opened an issue for them,  check here https://github.com/microsoft/vscode-python/issues/10069 \r\n\r\n## Python Code\r\nPut test code & source code at the same level as pytest document suggested \r\n\r\n```\r\nmypkg/\r\n    __init__.py\r\n    app.py\r\n    view.py\r\ntests/\r\n    test_app.py\r\n    test_view.py\r\n\r\n```\r\n\r\nSo in the test code the first line is alway\r\n\r\n```\r\nimport sys\r\nsys.path.append(\"../\")\r\n# then import my app code\r\n```\r\n\r\nThen autopep8 will change it to \r\n\r\n```\r\nimport my app code\r\nimport sys\r\nsys.path.append(\"../\")\r\n```\r\n\r\nThen I would get ModuleNotFoundError: No module named xxx\r\n\r\n## Your Environment\r\n* Python version: 3.7.3\r\n* autopep8 version: 1.5\r\n* Platform:  macOSX\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/522", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/522/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/522/events", "html_url": "https://github.com/hhatto/autopep8/issues/522", "id": 562424776, "node_id": "MDU6SXNzdWU1NjI0MjQ3NzY=", "number": 522, "title": "No difference detected between \" e \"and \" \u00e9 \" (french accents) in DataGrip", "user": {"login": "Doria2020", "id": 60873772, "node_id": "MDQ6VXNlcjYwODczNzcy", "avatar_url": "https://avatars0.githubusercontent.com/u/60873772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Doria2020", "html_url": "https://github.com/Doria2020", "followers_url": "https://api.github.com/users/Doria2020/followers", "following_url": "https://api.github.com/users/Doria2020/following{/other_user}", "gists_url": "https://api.github.com/users/Doria2020/gists{/gist_id}", "starred_url": "https://api.github.com/users/Doria2020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Doria2020/subscriptions", "organizations_url": "https://api.github.com/users/Doria2020/orgs", "repos_url": "https://api.github.com/users/Doria2020/repos", "events_url": "https://api.github.com/users/Doria2020/events{/privacy}", "received_events_url": "https://api.github.com/users/Doria2020/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-10T09:17:43Z", "updated_at": "2020-02-10T11:46:35Z", "closed_at": "2020-02-10T11:15:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I created tables with DataGrip (MySQL) and as the words in the tables are french I used \" collate = utf8_unicode_ci \". The words and the accents are correctly displayed but the program doesn't make the difference between \" e \" and \" \u00e9 \". And as I have to detect duplicates, this is an important problem.\r\n\r\nFor example, when I use this statement : \r\n\r\nSELECT word FROM table_2 WHERE word = 'bouch\u00e9' ;\r\n\r\nThe result I get is this one : \r\n\r\n![Picture1](https://user-images.githubusercontent.com/60873772/74135798-3d89e100-4bed-11ea-8371-253b4f32ec1f.png)\r\n\r\nBoth words are in my table, but they are not written the same way and have different meanings. \r\nI already checked in the settings if the encoding was utf-8 and it is (as the accents are correctly displayed). \r\nHow can fix this problem and make sure that \"bouche\" and \"bouch\u00e9\" (for example) are not considered as identical ? \r\n\r\nThank you in advance for your help ! \r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/518", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/518/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/518/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/518/events", "html_url": "https://github.com/hhatto/autopep8/issues/518", "id": 561961696, "node_id": "MDU6SXNzdWU1NjE5NjE2OTY=", "number": 518, "title": "creates syntax error with -aa --select=E,W ", "user": {"login": "markblundeberg", "id": 36528214, "node_id": "MDQ6VXNlcjM2NTI4MjE0", "avatar_url": "https://avatars0.githubusercontent.com/u/36528214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markblundeberg", "html_url": "https://github.com/markblundeberg", "followers_url": "https://api.github.com/users/markblundeberg/followers", "following_url": "https://api.github.com/users/markblundeberg/following{/other_user}", "gists_url": "https://api.github.com/users/markblundeberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/markblundeberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markblundeberg/subscriptions", "organizations_url": "https://api.github.com/users/markblundeberg/orgs", "repos_url": "https://api.github.com/users/markblundeberg/repos", "events_url": "https://api.github.com/users/markblundeberg/events{/privacy}", "received_events_url": "https://api.github.com/users/markblundeberg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37915105, "node_id": "MDU6TGFiZWwzNzkxNTEwNQ==", "url": "https://api.github.com/repos/hhatto/autopep8/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/5", "html_url": "https://github.com/hhatto/autopep8/milestone/5", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/5/labels", "id": 4966385, "node_id": "MDk6TWlsZXN0b25lNDk2NjM4NQ==", "number": 5, "title": "1.5.1", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 4, "state": "closed", "created_at": "2020-01-01T15:54:44Z", "updated_at": "2020-04-05T23:20:20Z", "due_on": "2020-04-02T07:00:00Z", "closed_at": "2020-04-05T23:20:20Z"}, "comments": 3, "created_at": "2020-02-08T03:14:07Z", "updated_at": "2020-04-04T04:10:53Z", "closed_at": "2020-04-04T04:10:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "---\r\n\r\n## Python Code\r\n\r\nI put if True: just for indentation purposes. This is excerpt from [here](https://github.com/Bitcoin-ABC/bitcoin-abc/blob/26a48be3982368752c2b244e362a3264298f4463/test/functional/rpc_rawtransaction.py#L396-L397):\r\n```python\r\nif True:\r\n    if True:\r\n        assert_equal(self.nodes[0].getbalance(\r\n        ), bal + Decimal('50.00000000') + Decimal('2.19000000'))  # block reward + tx\r\n```\r\n\r\nCommand Line\r\n```shell\r\n$ autopep8 -aa --select=E,W --diff foo.py \r\n```\r\n\r\nOutput converts `Decimal('50.00000000') + Decim...` to `Decimal('50.00 + 00000') Decim...` (note that besides the movement of the `+`, one `0` is missing):\r\n```diff\r\n--- original/foo.py\r\n+++ fixed/foo.py\r\n@@ -1,4 +1,7 @@\r\n if True:\r\n     if True:\r\n-        assert_equal(self.nodes[0].getbalance(\r\n-        ), bal + Decimal('50.00000000') + Decimal('2.19000000'))  # block reward + tx\r\n+        assert_equal(\r\n+            self.nodes[0].getbalance(),\r\n+            bal +\r\n+            Decimal('50.00 + 00000')\r\n+            Decimal('2.19000000'))  # block reward + tx\r\n```\r\n\r\n## Your Environment\r\n* Python version: 3.7.4\r\n* autopep8 version: autopep8 1.5 (pycodestyle: 2.5.0)\r\n* Platform: linux pyenv\r\n\r\nAlso appears in autopep8 1.4.3 (pycodestyle: 2.4.0), on Python 3.7.3 -- Ubuntu 19.04 stock.\r\n\r\nBut does _not_ appear in autopep8 1.3.4 (pycodestyle: 2.3.1) on Python 3.6.9 (pyenv).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/516", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/516/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/516/events", "html_url": "https://github.com/hhatto/autopep8/issues/516", "id": 550704570, "node_id": "MDU6SXNzdWU1NTA3MDQ1NzA=", "number": 516, "title": "Exclude-Section", "user": {"login": "qohelet", "id": 13061154, "node_id": "MDQ6VXNlcjEzMDYxMTU0", "avatar_url": "https://avatars1.githubusercontent.com/u/13061154?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qohelet", "html_url": "https://github.com/qohelet", "followers_url": "https://api.github.com/users/qohelet/followers", "following_url": "https://api.github.com/users/qohelet/following{/other_user}", "gists_url": "https://api.github.com/users/qohelet/gists{/gist_id}", "starred_url": "https://api.github.com/users/qohelet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qohelet/subscriptions", "organizations_url": "https://api.github.com/users/qohelet/orgs", "repos_url": "https://api.github.com/users/qohelet/repos", "events_url": "https://api.github.com/users/qohelet/events{/privacy}", "received_events_url": "https://api.github.com/users/qohelet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-16T10:11:26Z", "updated_at": "2020-01-16T11:37:58Z", "closed_at": "2020-01-16T11:01:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "---\r\n\r\n## Python Code\r\n```python\r\n\r\nimport django\r\ndjango.setup()\r\nfrom .forms import *\r\n```\r\nI want to be able a certain section of my code to be excluded from the reformatting of autopep8.\r\nIn some of my tests I have to avoid the error:` django.core.exceptions.AppRegistryNotReady: Apps aren't loaded yet.`\r\n with this imports:\r\n```python\r\nimport django\r\ndjango.setup()\r\nfrom .forms import *\r\n```\r\nIn this specific order. But this order is always reversed to:\r\n```python\r\nfrom .forms import *\r\nimport django\r\ndjango.setup()\r\n```\r\nAnd my code fails. Please give me the freedom to avoid some of my code from being formatted. \r\nUsually I'm satisfied with E402. Just in this case it's making my code fail\r\n\r\n## Your Environment\r\n* Python version: 3.6.8\r\n* autopep8 version: 1.4.4\r\n* emacs version: 26.3\r\n* Platform: Ubuntu 18.04\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/513", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/513/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/513/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/513/events", "html_url": "https://github.com/hhatto/autopep8/issues/513", "id": 537635069, "node_id": "MDU6SXNzdWU1Mzc2MzUwNjk=", "number": 513, "title": "Wrong imports sorting ", "user": {"login": "daridar", "id": 33403645, "node_id": "MDQ6VXNlcjMzNDAzNjQ1", "avatar_url": "https://avatars0.githubusercontent.com/u/33403645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daridar", "html_url": "https://github.com/daridar", "followers_url": "https://api.github.com/users/daridar/followers", "following_url": "https://api.github.com/users/daridar/following{/other_user}", "gists_url": "https://api.github.com/users/daridar/gists{/gist_id}", "starred_url": "https://api.github.com/users/daridar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daridar/subscriptions", "organizations_url": "https://api.github.com/users/daridar/orgs", "repos_url": "https://api.github.com/users/daridar/repos", "events_url": "https://api.github.com/users/daridar/events{/privacy}", "received_events_url": "https://api.github.com/users/daridar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-13T16:13:22Z", "updated_at": "2019-12-16T07:50:51Z", "closed_at": "2019-12-16T07:50:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "---\r\n\r\n## Python Code\r\n```python\r\n\r\n########### IMPORTS IN FILE ###########\r\n\r\nimport argparse\r\nimport json\r\nimport logging\r\nimport os\r\nimport re\r\nfrom hashlib import md5\r\nfrom collections import Counter, defaultdict\r\nfrom pathlib import Path\r\nfrom pprint import pprint\r\n\r\nimport torch.multiprocessing as mp\r\nif __name__ == \"__main__\":\r\n    mp.set_start_method(\"spawn\")\r\n\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\nimport pandas as pd\r\nimport spacy\r\nimport torch\r\nfrom sklearn.feature_extraction.text import TfidfVectorizer\r\n\r\nfrom ner.ner_pipeline import construct_pipeline\r\nfrom spacy.lang.en.stop_words import STOP_WORDS as SPACY_STOP_WORDS\r\nfrom tqdm import tqdm\r\n\r\n\r\n########### RESULT ###########\r\n\r\nfrom tqdm import tqdm\r\nfrom spacy.lang.en.stop_words import STOP_WORDS as SPACY_STOP_WORDS\r\nfrom ner.ner_pipeline import construct_pipeline\r\nfrom sklearn.feature_extraction.text import TfidfVectorizer\r\nimport torch\r\nimport spacy\r\nimport pandas as pd\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport argparse\r\nimport json\r\nimport logging\r\nimport os\r\nimport re\r\nfrom hashlib import md5\r\nfrom collections import Counter, defaultdict\r\nfrom pathlib import Path\r\nfrom pprint import pprint\r\n\r\nimport torch.multiprocessing as mp\r\nif __name__ == \"__main__\":\r\n    mp.set_start_method(\"spawn\")\r\n```\r\n\r\n\r\nCommand Line\r\n```shell\r\n$ autopep8 --in-place --aggressive --aggressive file.py\r\n```\r\n\r\n## Your Environment\r\n* Python version: Python 3.6.8 \r\n* autopep8 version: autopep8-1.4.4 pycodestyle-2.5.0\r\n* Platform: linux\r\n\r\n\r\nI think it's not the right way to reorder my imports. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/509", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/509/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/509/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/509/events", "html_url": "https://github.com/hhatto/autopep8/issues/509", "id": 518173825, "node_id": "MDU6SXNzdWU1MTgxNzM4MjU=", "number": 509, "title": "`--ignore E731` not work.", "user": {"login": "heckad", "id": 45011689, "node_id": "MDQ6VXNlcjQ1MDExNjg5", "avatar_url": "https://avatars2.githubusercontent.com/u/45011689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/heckad", "html_url": "https://github.com/heckad", "followers_url": "https://api.github.com/users/heckad/followers", "following_url": "https://api.github.com/users/heckad/following{/other_user}", "gists_url": "https://api.github.com/users/heckad/gists{/gist_id}", "starred_url": "https://api.github.com/users/heckad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/heckad/subscriptions", "organizations_url": "https://api.github.com/users/heckad/orgs", "repos_url": "https://api.github.com/users/heckad/repos", "events_url": "https://api.github.com/users/heckad/events{/privacy}", "received_events_url": "https://api.github.com/users/heckad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-11-06T01:06:01Z", "updated_at": "2019-12-16T07:53:58Z", "closed_at": "2019-12-16T07:53:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "---\r\n\r\n## Python Code\r\n```python\r\nl = lambda _: True\r\n```\r\n\r\n## Command-Line and Configuration\r\n`.flake`\r\n\r\n```ini\r\n[flake8]\r\nmax-line-length = 120\r\nmax-complexity = 18\r\nselect = B,C,E,F,G,W,T4,B9\r\n#ignore = E203, E266, E501, W503\r\nignore =\r\n    E126,\r\n    E401,\r\n    E402,\r\n    E701,\r\n    E731,\r\n    F401  # Ignore not used import\r\n\r\nexclude =\r\n    .venv,\r\n    .git,\r\n    .tox,\r\n    venv,\r\n    dist,\r\n    doc,\r\n    *openstack/common/*,\r\n    *lib/python*,\r\n    *egg,\r\n    build,\r\n    tools/xenserver*,\r\n    releasenotes,\r\n    migrations\r\n\r\n\r\n```\r\n\r\nCommand Line\r\n```shell\r\n$ autopep8 t.py --ignore E731\r\n```\r\n\r\n## Your Environment\r\n* Python version: 3.8\r\n* autopep8 version: 1.4.4\r\n* Platform: windows\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/508", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/508/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/508/events", "html_url": "https://github.com/hhatto/autopep8/issues/508", "id": 512934674, "node_id": "MDU6SXNzdWU1MTI5MzQ2NzQ=", "number": 508, "title": "Missing Support for Walrus operator", "user": {"login": "waqarsaleem", "id": 13131021, "node_id": "MDQ6VXNlcjEzMTMxMDIx", "avatar_url": "https://avatars0.githubusercontent.com/u/13131021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/waqarsaleem", "html_url": "https://github.com/waqarsaleem", "followers_url": "https://api.github.com/users/waqarsaleem/followers", "following_url": "https://api.github.com/users/waqarsaleem/following{/other_user}", "gists_url": "https://api.github.com/users/waqarsaleem/gists{/gist_id}", "starred_url": "https://api.github.com/users/waqarsaleem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/waqarsaleem/subscriptions", "organizations_url": "https://api.github.com/users/waqarsaleem/orgs", "repos_url": "https://api.github.com/users/waqarsaleem/repos", "events_url": "https://api.github.com/users/waqarsaleem/events{/privacy}", "received_events_url": "https://api.github.com/users/waqarsaleem/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-27T08:08:43Z", "updated_at": "2019-11-03T14:34:47Z", "closed_at": "2019-11-03T14:34:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "---\r\n\r\n## Python Code\r\n```python\r\n\r\n(n := 42)\r\n```\r\n\r\n## Command Line and Configuration\r\nFresh install, default configuration.\r\n\r\n## Your Environment\r\n* Python version: Python 3.8.0rc1\r\n* autopep8 version: autopep8 1.4.4 (pycodestyle: 2.5.0)\r\n* Platform: macOSX Catalina 10.15\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/507", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/507/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/507/events", "html_url": "https://github.com/hhatto/autopep8/issues/507", "id": 510096955, "node_id": "MDU6SXNzdWU1MTAwOTY5NTU=", "number": 507, "title": ":= gets turned into : =, which is not correct syntax", "user": {"login": "ooa113y", "id": 462484, "node_id": "MDQ6VXNlcjQ2MjQ4NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/462484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ooa113y", "html_url": "https://github.com/ooa113y", "followers_url": "https://api.github.com/users/ooa113y/followers", "following_url": "https://api.github.com/users/ooa113y/following{/other_user}", "gists_url": "https://api.github.com/users/ooa113y/gists{/gist_id}", "starred_url": "https://api.github.com/users/ooa113y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ooa113y/subscriptions", "organizations_url": "https://api.github.com/users/ooa113y/orgs", "repos_url": "https://api.github.com/users/ooa113y/repos", "events_url": "https://api.github.com/users/ooa113y/events{/privacy}", "received_events_url": "https://api.github.com/users/ooa113y/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-21T16:25:19Z", "updated_at": "2020-05-12T12:06:28Z", "closed_at": "2019-11-03T14:34:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Python Code\r\n```python\r\n\r\nitems = [{(s := y.split('='))[0]: s[1] for y in x} for x in items]\r\n```\r\n\r\n## Your Environment\r\n* Python version: 3.8.0\r\n* autopep8 version: 1.4.4\r\n* Platform: Windows\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/506", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/506/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/506/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/506/events", "html_url": "https://github.com/hhatto/autopep8/issues/506", "id": 507963336, "node_id": "MDU6SXNzdWU1MDc5NjMzMzY=", "number": 506, "title": "Set options for not moving import", "user": {"login": "KLGJ", "id": 21209621, "node_id": "MDQ6VXNlcjIxMjA5NjIx", "avatar_url": "https://avatars0.githubusercontent.com/u/21209621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KLGJ", "html_url": "https://github.com/KLGJ", "followers_url": "https://api.github.com/users/KLGJ/followers", "following_url": "https://api.github.com/users/KLGJ/following{/other_user}", "gists_url": "https://api.github.com/users/KLGJ/gists{/gist_id}", "starred_url": "https://api.github.com/users/KLGJ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KLGJ/subscriptions", "organizations_url": "https://api.github.com/users/KLGJ/orgs", "repos_url": "https://api.github.com/users/KLGJ/repos", "events_url": "https://api.github.com/users/KLGJ/events{/privacy}", "received_events_url": "https://api.github.com/users/KLGJ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-16T16:33:53Z", "updated_at": "2019-10-17T02:16:39Z", "closed_at": "2019-10-17T02:16:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "`autopep8` always moves import to the beginning of the file, this can lead to long running times in some cases. Using the original file with no arguments takes only 0.06 seconds, and using the formatted file with no arguments always takes more than 0.25 seconds.\r\n```python\r\n\r\nimport sys\r\n\r\nif len(sys.argv) < 3:\r\n    print(\"Usage: %s <input image file> <output text file>\" % sys.argv[0])\r\n    sys.exit(1)\r\n\r\nimport codecs\r\nfrom PIL import Image\r\nimport pyocr\r\nimport pyocr.builders\r\n```\r\nwill be converted to\r\n```python\r\nimport pyocr.builders\r\nimport pyocr\r\nfrom PIL import Image\r\nimport codecs\r\nimport sys\r\n\r\nif len(sys.argv) < 3:\r\n    print(\"Usage: %s <input image file> <output text file>\" % sys.argv[0])\r\n    sys.exit(1)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/503", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/503/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/503/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/503/events", "html_url": "https://github.com/hhatto/autopep8/issues/503", "id": 493770115, "node_id": "MDU6SXNzdWU0OTM3NzAxMTU=", "number": 503, "title": "Fixing W503 line break before binary operator puts `and` within comment", "user": {"login": "taldcroft", "id": 348089, "node_id": "MDQ6VXNlcjM0ODA4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/348089?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taldcroft", "html_url": "https://github.com/taldcroft", "followers_url": "https://api.github.com/users/taldcroft/followers", "following_url": "https://api.github.com/users/taldcroft/following{/other_user}", "gists_url": "https://api.github.com/users/taldcroft/gists{/gist_id}", "starred_url": "https://api.github.com/users/taldcroft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taldcroft/subscriptions", "organizations_url": "https://api.github.com/users/taldcroft/orgs", "repos_url": "https://api.github.com/users/taldcroft/repos", "events_url": "https://api.github.com/users/taldcroft/events{/privacy}", "received_events_url": "https://api.github.com/users/taldcroft/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37915105, "node_id": "MDU6TGFiZWwzNzkxNTEwNQ==", "url": "https://api.github.com/repos/hhatto/autopep8/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/4", "html_url": "https://github.com/hhatto/autopep8/milestone/4", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/4/labels", "id": 4906309, "node_id": "MDk6TWlsZXN0b25lNDkwNjMwOQ==", "number": 4, "title": "1.5", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2019-12-05T14:50:15Z", "updated_at": "2020-01-20T14:19:47Z", "due_on": "2020-01-15T08:00:00Z", "closed_at": "2020-01-20T14:19:47Z"}, "comments": 2, "created_at": "2019-09-15T18:26:13Z", "updated_at": "2019-12-17T01:43:35Z", "closed_at": "2019-12-16T07:45:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "---\r\n\r\n## Python Code\r\n```python\r\n\r\nif (True  #\r\n    and True\r\n    and True):\r\n    print(1)\r\n```\r\n\r\n## Command Line and Configuration\r\n\r\nCommand Line\r\n```shell\r\n$ autopep8 -d --select=W503 junk.py \r\n--- original/junk.py\r\n+++ fixed/junk.py\r\n@@ -1,4 +1,4 @@\r\n-if (True  #\r\n-    and True\r\n-    and True):\r\n+if (True  # and\r\n+    True and\r\n+    True):\r\n     print(1)\r\n```\r\n\r\n## Your Environment\r\n* Python version: Python 3.6.8 :: Anaconda, Inc.\r\n* autopep8 version: autopep8 1.5a1 (pycodestyle: 2.5.0)\r\n* Platform: macOSX\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/502", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/502/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/502/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/502/events", "html_url": "https://github.com/hhatto/autopep8/issues/502", "id": 492176570, "node_id": "MDU6SXNzdWU0OTIxNzY1NzA=", "number": 502, "title": "The options 'filename' and 'exclude' differ in format", "user": {"login": "thernstig", "id": 30827238, "node_id": "MDQ6VXNlcjMwODI3MjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/30827238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thernstig", "html_url": "https://github.com/thernstig", "followers_url": "https://api.github.com/users/thernstig/followers", "following_url": "https://api.github.com/users/thernstig/following{/other_user}", "gists_url": "https://api.github.com/users/thernstig/gists{/gist_id}", "starred_url": "https://api.github.com/users/thernstig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thernstig/subscriptions", "organizations_url": "https://api.github.com/users/thernstig/orgs", "repos_url": "https://api.github.com/users/thernstig/repos", "events_url": "https://api.github.com/users/thernstig/events{/privacy}", "received_events_url": "https://api.github.com/users/thernstig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-11T11:23:15Z", "updated_at": "2019-09-12T15:08:57Z", "closed_at": "2019-09-12T12:56:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "There is a difference in the format to include a filename and to exclude a filename, see example below. It would be good if they matched. Notice the `./` needed for the `filename` section.\r\n\r\n## Command Line and Configuration\r\n```ini\r\n[flake8]\r\n\r\nfilename=\r\n  ./pathto/file1.py\r\n\r\nexclude=\r\n  pathto/file2.py\r\n```\r\n\r\n## Your Environment\r\n* Python version: 3.6.9\r\n* autopep8 version: 1.4.4 (pycodestyle: 2.5.0)\r\n* Platform: Linux\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/501", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/501/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/501/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/501/events", "html_url": "https://github.com/hhatto/autopep8/issues/501", "id": 483272261, "node_id": "MDU6SXNzdWU0ODMyNzIyNjE=", "number": 501, "title": "autopep8 not respecting --global-config when doing an --in-place directly on file", "user": {"login": "thernstig", "id": 30827238, "node_id": "MDQ6VXNlcjMwODI3MjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/30827238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thernstig", "html_url": "https://github.com/thernstig", "followers_url": "https://api.github.com/users/thernstig/followers", "following_url": "https://api.github.com/users/thernstig/following{/other_user}", "gists_url": "https://api.github.com/users/thernstig/gists{/gist_id}", "starred_url": "https://api.github.com/users/thernstig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thernstig/subscriptions", "organizations_url": "https://api.github.com/users/thernstig/orgs", "repos_url": "https://api.github.com/users/thernstig/repos", "events_url": "https://api.github.com/users/thernstig/events{/privacy}", "received_events_url": "https://api.github.com/users/thernstig/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37680374, "node_id": "MDU6TGFiZWwzNzY4MDM3NA==", "url": "https://api.github.com/repos/hhatto/autopep8/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/7", "html_url": "https://github.com/hhatto/autopep8/milestone/7", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/7/labels", "id": 5290468, "node_id": "MDk6TWlsZXN0b25lNTI5MDQ2OA==", "number": 7, "title": "1.5.2", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2020-04-09T01:24:35Z", "updated_at": "2020-05-19T10:03:25Z", "due_on": "2020-04-18T07:00:00Z", "closed_at": "2020-05-19T10:03:25Z"}, "comments": 5, "created_at": "2019-08-21T08:25:15Z", "updated_at": "2020-05-08T14:02:12Z", "closed_at": "2020-05-07T13:43:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the autopep8 command with a `--global-config` the global config is not respected when doing an `--in-place` directly on a file. This is especially problematic with editors such as VS Code as there is no way to respect the .flake8 file contained in the root of the repo. See https://github.com/microsoft/vscode-python/issues/7040\r\n\r\n## Command Line and Configuration\r\n`.flake8`\r\n\r\n```ini\r\n[flake8]\r\n\r\nexclude=\r\n  pathto/file.py\r\n```\r\n\r\nCommand Line\r\n```shell\r\n$ autopep8 --global-config /home/username/project/.flake8 -r -i pathto/ # Respects the ignore\r\n$ autopep8 --global-config /home/username/project/.flake8 -i pathto/file.py # Does NOT respect the ignore\r\n```\r\n\r\n## Your Environment\r\n* Python version: 3.6.9\r\n* autopep8 version: 1.4.4 (pycodestyle: 2.5.0)\r\n* Platform: Linux\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/500", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/500/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/500/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/500/events", "html_url": "https://github.com/hhatto/autopep8/issues/500", "id": 482002244, "node_id": "MDU6SXNzdWU0ODIwMDIyNDQ=", "number": 500, "title": "Rename to autopycodestyle", "user": {"login": "thernstig", "id": 30827238, "node_id": "MDQ6VXNlcjMwODI3MjM4", "avatar_url": "https://avatars1.githubusercontent.com/u/30827238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thernstig", "html_url": "https://github.com/thernstig", "followers_url": "https://api.github.com/users/thernstig/followers", "following_url": "https://api.github.com/users/thernstig/following{/other_user}", "gists_url": "https://api.github.com/users/thernstig/gists{/gist_id}", "starred_url": "https://api.github.com/users/thernstig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thernstig/subscriptions", "organizations_url": "https://api.github.com/users/thernstig/orgs", "repos_url": "https://api.github.com/users/thernstig/repos", "events_url": "https://api.github.com/users/thernstig/events{/privacy}", "received_events_url": "https://api.github.com/users/thernstig/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-18T14:46:40Z", "updated_at": "2019-09-12T12:57:30Z", "closed_at": "2019-09-12T12:57:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Any chance this project could/shoud be renamed to autopycodestyle to correlate with the quite old change of pep8 to pycodestyle?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/499", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/499/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/499/events", "html_url": "https://github.com/hhatto/autopep8/issues/499", "id": 481574304, "node_id": "MDU6SXNzdWU0ODE1NzQzMDQ=", "number": 499, "title": "unknown option 'indent-size' ignored", "user": {"login": "MarkGreeny", "id": 40479001, "node_id": "MDQ6VXNlcjQwNDc5MDAx", "avatar_url": "https://avatars3.githubusercontent.com/u/40479001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarkGreeny", "html_url": "https://github.com/MarkGreeny", "followers_url": "https://api.github.com/users/MarkGreeny/followers", "following_url": "https://api.github.com/users/MarkGreeny/following{/other_user}", "gists_url": "https://api.github.com/users/MarkGreeny/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarkGreeny/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarkGreeny/subscriptions", "organizations_url": "https://api.github.com/users/MarkGreeny/orgs", "repos_url": "https://api.github.com/users/MarkGreeny/repos", "events_url": "https://api.github.com/users/MarkGreeny/events{/privacy}", "received_events_url": "https://api.github.com/users/MarkGreeny/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-08-16T11:50:49Z", "updated_at": "2019-08-24T09:21:49Z", "closed_at": "2019-08-24T09:21:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "My autopep8 does not seem to recognize the `indent-size` option. I am prompted with\r\n\r\n> unknown option 'indent-size' ignored\r\n\r\nI installed the autopep8 using pip3. I attach the config bellow. Please inform me what i am doing wrong.\r\n\r\n### Config\r\n\r\n```\r\n[pycodestyle]\r\nindent-size=2\r\nignore = E111,E114\r\n```\r\n(note that i get the sam ebehaviour if i use a [pep8] block)\r\n\r\n### Command Line\r\n```shell\r\n$ autopep8 --global-config /path/to/config file.py\r\n```\r\n\r\n## Your Environment\r\n* Python version: 3.7.3\r\n* autopep8 version: autopep8 1.4.4 (pycodestyle: 2.4.0)\r\n* Platform: linux\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/495", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/495/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/495/events", "html_url": "https://github.com/hhatto/autopep8/issues/495", "id": 478548369, "node_id": "MDU6SXNzdWU0Nzg1NDgzNjk=", "number": 495, "title": "Breaks program functionality even without --aggressive", "user": {"login": "sguillia", "id": 15984272, "node_id": "MDQ6VXNlcjE1OTg0Mjcy", "avatar_url": "https://avatars0.githubusercontent.com/u/15984272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sguillia", "html_url": "https://github.com/sguillia", "followers_url": "https://api.github.com/users/sguillia/followers", "following_url": "https://api.github.com/users/sguillia/following{/other_user}", "gists_url": "https://api.github.com/users/sguillia/gists{/gist_id}", "starred_url": "https://api.github.com/users/sguillia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sguillia/subscriptions", "organizations_url": "https://api.github.com/users/sguillia/orgs", "repos_url": "https://api.github.com/users/sguillia/repos", "events_url": "https://api.github.com/users/sguillia/events{/privacy}", "received_events_url": "https://api.github.com/users/sguillia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-08T15:39:53Z", "updated_at": "2019-08-11T15:36:12Z", "closed_at": "2019-08-11T15:36:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "---\r\n## Python Code\r\n\r\nmain.py\r\n```python\r\nimport os\r\nos.environ['abort'] = \"no\"\r\nimport foo\r\n```\r\n\r\nfoo.py\r\n```python\r\nimport os\r\n\r\nif os.environ['abort'] != 'no':\r\n\traise Exception\r\n```\r\n\r\n## Steps to reproduce problem\r\n\r\n1. Watch as the program runs normally\r\n```\r\n$ python3 main.py\r\n```\r\n\r\n2. Run autopep8\r\n```\r\n$ autopep8 --in-place main.py\r\n```\r\n\r\n3. Watch as the program functionality / meaning has changed\r\n```shell\r\n$ python3 main.py\r\nTraceback (most recent call last):\r\n...\r\nKeyError: 'abort'\r\n```\r\n\r\n4. Look at what autopep8 did to main.py:\r\n```python\r\nimport foo\r\nimport os\r\nos.environ['abort'] = \"no\"\r\n```\r\n\r\nSome packages like tensorflow require environment variables to be set before importing them. I agree this is bad practice, nonetheless I believe autopep8 should not break the program functionality without the `--aggressive` flag. This applies for all fixes, not only the `E402` which is causing trouble here.\r\n\r\n## Command Line and Configuration\r\nNo config file\r\n\r\n## Your Environment\r\n* Python version: Python 3.5.2\r\n* autopep8 version: autopep8 1.4.4 (pycodestyle: 2.5.0)\r\n* Platform: Linux Ubuntu amd64", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/490", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/490/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/490/events", "html_url": "https://github.com/hhatto/autopep8/issues/490", "id": 466662157, "node_id": "MDU6SXNzdWU0NjY2NjIxNTc=", "number": 490, "title": "SyntaxError rewriting specific combination of imports and defs", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-11T04:54:14Z", "updated_at": "2019-08-12T00:47:22Z", "closed_at": "2019-08-12T00:47:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "---\r\n\r\n## Python Code\r\n```python\r\ndef setup():\r\n    pass\r\n\r\nfrom a import b\r\nfrom b import c\r\nfrom b import d\r\n```\r\n\r\n## Command Line and Configuration\r\n\r\nCommand Line\r\n```shell\r\n$ autopep8 -i t.py\r\nTraceback (most recent call last):\r\n  File \"/tmp/pyqtgraph/venv/bin/autopep8\", line 10, in <module>\r\n    sys.exit(main())\r\n  File \"/tmp/pyqtgraph/venv/lib/python3.6/site-packages/autopep8.py\", line 4200, in main\r\n    ret = fix_multiple_files(args.files, args, sys.stdout)\r\n  File \"/tmp/pyqtgraph/venv/lib/python3.6/site-packages/autopep8.py\", line 4100, in fix_multiple_files\r\n    ret = _fix_file((name, options, output))\r\n  File \"/tmp/pyqtgraph/venv/lib/python3.6/site-packages/autopep8.py\", line 4080, in _fix_file\r\n    return fix_file(*parameters)\r\n  File \"/tmp/pyqtgraph/venv/lib/python3.6/site-packages/autopep8.py\", line 3454, in fix_file\r\n    fixed_source = fix_lines(fixed_source, options, filename=filename)\r\n  File \"/tmp/pyqtgraph/venv/lib/python3.6/site-packages/autopep8.py\", line 3434, in fix_lines\r\n    fixed_source = fix.fix()\r\n  File \"/tmp/pyqtgraph/venv/lib/python3.6/site-packages/autopep8.py\", line 593, in fix\r\n    aggressive=self.options.aggressive))\r\n  File \"/tmp/pyqtgraph/venv/lib/python3.6/site-packages/autopep8.py\", line 535, in _fix_source\r\n    modified_lines = fix(result)\r\n  File \"/tmp/pyqtgraph/venv/lib/python3.6/site-packages/autopep8.py\", line 889, in fix_e402\r\n    line_index)\r\n  File \"/tmp/pyqtgraph/venv/lib/python3.6/site-packages/autopep8.py\", line 1442, in get_module_imports_on_top_of_file\r\n    if cnt == import_line_index or is_future_import(line):\r\n  File \"/tmp/pyqtgraph/venv/lib/python3.6/site-packages/autopep8.py\", line 1412, in is_future_import\r\n    nodes = ast.parse(line)\r\n  File \"/usr/lib/python3.6/ast.py\", line 35, in parse\r\n    return compile(source, filename, mode, PyCF_ONLY_AST)\r\n  File \"<unknown>\", line 2\r\n    def setup():\r\n               ^\r\nSyntaxError: unexpected EOF while parsing\r\n```\r\n\r\n## Your Environment\r\n```console\r\n$ python --version --version\r\nPython 3.6.8 (default, Jan 14 2019, 11:02:34) \r\n[GCC 8.0.1 20180414 (experimental) [trunk revision 259383]]\r\n$ autopep8 --version\r\nautopep8 1.4.4 (pycodestyle: 2.5.0)\r\n```\r\n\r\n## Analysis\r\n\r\nit appears to be happening while checking for `__future__` imports -- the import reordering code is combining a `from` import line with the `def` line causing the \"check if this import is a `__future__` import\" code to parse too much", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/489", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/489/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/489/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/489/events", "html_url": "https://github.com/hhatto/autopep8/issues/489", "id": 459223445, "node_id": "MDU6SXNzdWU0NTkyMjM0NDU=", "number": 489, "title": "E711/E712 not correcting", "user": {"login": "graingert", "id": 413772, "node_id": "MDQ6VXNlcjQxMzc3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/413772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graingert", "html_url": "https://github.com/graingert", "followers_url": "https://api.github.com/users/graingert/followers", "following_url": "https://api.github.com/users/graingert/following{/other_user}", "gists_url": "https://api.github.com/users/graingert/gists{/gist_id}", "starred_url": "https://api.github.com/users/graingert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graingert/subscriptions", "organizations_url": "https://api.github.com/users/graingert/orgs", "repos_url": "https://api.github.com/users/graingert/repos", "events_url": "https://api.github.com/users/graingert/events{/privacy}", "received_events_url": "https://api.github.com/users/graingert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/4", "html_url": "https://github.com/hhatto/autopep8/milestone/4", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/4/labels", "id": 4906309, "node_id": "MDk6TWlsZXN0b25lNDkwNjMwOQ==", "number": 4, "title": "1.5", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2019-12-05T14:50:15Z", "updated_at": "2020-01-20T14:19:47Z", "due_on": "2020-01-15T08:00:00Z", "closed_at": "2020-01-20T14:19:47Z"}, "comments": 2, "created_at": "2019-06-21T14:23:21Z", "updated_at": "2019-12-16T07:44:37Z", "closed_at": "2019-12-16T07:44:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n## Python Code\r\n```python\r\nh = None\r\nassert None == hj\r\n```\r\n\r\nCommand Line\r\n```shell\r\n$ autopep8 --in-place -aaaaaa --ignore-local-config --select E711,E712 -r foo.py \r\n```\r\n\r\nI expected to get\r\n\r\n```python\r\nh = None\r\nassert None is h\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/486", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/486/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/486/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/486/events", "html_url": "https://github.com/hhatto/autopep8/issues/486", "id": 452808588, "node_id": "MDU6SXNzdWU0NTI4MDg1ODg=", "number": 486, "title": "too much indentation later when previous is off by one", "user": {"login": "Fla3inH0tCheet0s", "id": 46694471, "node_id": "MDQ6VXNlcjQ2Njk0NDcx", "avatar_url": "https://avatars1.githubusercontent.com/u/46694471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fla3inH0tCheet0s", "html_url": "https://github.com/Fla3inH0tCheet0s", "followers_url": "https://api.github.com/users/Fla3inH0tCheet0s/followers", "following_url": "https://api.github.com/users/Fla3inH0tCheet0s/following{/other_user}", "gists_url": "https://api.github.com/users/Fla3inH0tCheet0s/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fla3inH0tCheet0s/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fla3inH0tCheet0s/subscriptions", "organizations_url": "https://api.github.com/users/Fla3inH0tCheet0s/orgs", "repos_url": "https://api.github.com/users/Fla3inH0tCheet0s/repos", "events_url": "https://api.github.com/users/Fla3inH0tCheet0s/events{/privacy}", "received_events_url": "https://api.github.com/users/Fla3inH0tCheet0s/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-06-06T03:02:17Z", "updated_at": "2020-02-21T01:04:21Z", "closed_at": "2020-02-21T01:04:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "---\r\n\r\n## Python Code\r\n```python\r\nfor a in [1, 2, 3]:\r\n   print('hello world')\r\n    for b in [1, 2, 3]:\r\n        print(a, b)\r\n```\r\nturns into\r\n```python\r\nfor a in [1, 2, 3]:\r\n    print('hello world')\r\n    for b in [1, 2, 3]:\r\n            print(a, b)\r\n```\r\nLine 2's first indentation is intended, but line 4's has one extra indentation.\r\n\r\n## Command Line and Configuration\r\n`.pep8`, `setup.cfg`, ...\r\n\r\n```ini\r\n[pep8]\r\n\r\n```\r\n\r\nCommand Line\r\n```shell\r\n$ autopep8 \r\n```\r\n\r\n## Your Environment\r\n* Python version: Python 2.7.12\r\n* autopep8 version: autopep8 1.4.4 (pycodestyle: 2.5.0)\r\n* Platform: windows, linux, macOSX, and other OS...\r\nUbuntu 16.04\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/485", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/485/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/485/events", "html_url": "https://github.com/hhatto/autopep8/issues/485", "id": 451317426, "node_id": "MDU6SXNzdWU0NTEzMTc0MjY=", "number": 485, "title": "How to set --max-line-length in pycharm external tools? ", "user": {"login": "RainFung", "id": 23121539, "node_id": "MDQ6VXNlcjIzMTIxNTM5", "avatar_url": "https://avatars0.githubusercontent.com/u/23121539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RainFung", "html_url": "https://github.com/RainFung", "followers_url": "https://api.github.com/users/RainFung/followers", "following_url": "https://api.github.com/users/RainFung/following{/other_user}", "gists_url": "https://api.github.com/users/RainFung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RainFung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RainFung/subscriptions", "organizations_url": "https://api.github.com/users/RainFung/orgs", "repos_url": "https://api.github.com/users/RainFung/repos", "events_url": "https://api.github.com/users/RainFung/events{/privacy}", "received_events_url": "https://api.github.com/users/RainFung/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-03T06:44:43Z", "updated_at": "2019-08-12T01:21:25Z", "closed_at": "2019-08-12T01:21:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to set --max-line-length in pycharm external tools? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/481", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/481/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/481/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/481/events", "html_url": "https://github.com/hhatto/autopep8/issues/481", "id": 426954825, "node_id": "MDU6SXNzdWU0MjY5NTQ4MjU=", "number": 481, "title": "from __future__ import annotations moved incorrectly", "user": {"login": "ikamensh", "id": 23004004, "node_id": "MDQ6VXNlcjIzMDA0MDA0", "avatar_url": "https://avatars0.githubusercontent.com/u/23004004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ikamensh", "html_url": "https://github.com/ikamensh", "followers_url": "https://api.github.com/users/ikamensh/followers", "following_url": "https://api.github.com/users/ikamensh/following{/other_user}", "gists_url": "https://api.github.com/users/ikamensh/gists{/gist_id}", "starred_url": "https://api.github.com/users/ikamensh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ikamensh/subscriptions", "organizations_url": "https://api.github.com/users/ikamensh/orgs", "repos_url": "https://api.github.com/users/ikamensh/repos", "events_url": "https://api.github.com/users/ikamensh/events{/privacy}", "received_events_url": "https://api.github.com/users/ikamensh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-29T12:05:28Z", "updated_at": "2020-04-01T08:09:02Z", "closed_at": "2020-04-01T08:09:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have used the command from the readme (autopep8 --aggressive -aggressive) and as a result my code stoped running:\r\nSyntaxError: from __future__ imports must occur at the beginning of the file\r\n\r\nThe reason is that the from __future__ imports were moved to seemingly random location among other imports.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/480", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/480/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/480/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/480/events", "html_url": "https://github.com/hhatto/autopep8/issues/480", "id": 424390400, "node_id": "MDU6SXNzdWU0MjQzOTA0MDA=", "number": 480, "title": "Parallel jobs not supported with --diff", "user": {"login": "ulope", "id": 55078, "node_id": "MDQ6VXNlcjU1MDc4", "avatar_url": "https://avatars0.githubusercontent.com/u/55078?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulope", "html_url": "https://github.com/ulope", "followers_url": "https://api.github.com/users/ulope/followers", "following_url": "https://api.github.com/users/ulope/following{/other_user}", "gists_url": "https://api.github.com/users/ulope/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulope/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulope/subscriptions", "organizations_url": "https://api.github.com/users/ulope/orgs", "repos_url": "https://api.github.com/users/ulope/repos", "events_url": "https://api.github.com/users/ulope/events{/privacy}", "received_events_url": "https://api.github.com/users/ulope/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37680374, "node_id": "MDU6TGFiZWwzNzY4MDM3NA==", "url": "https://api.github.com/repos/hhatto/autopep8/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/7", "html_url": "https://github.com/hhatto/autopep8/milestone/7", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/7/labels", "id": 5290468, "node_id": "MDk6TWlsZXN0b25lNTI5MDQ2OA==", "number": 7, "title": "1.5.2", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2020-04-09T01:24:35Z", "updated_at": "2020-05-19T10:03:25Z", "due_on": "2020-04-18T07:00:00Z", "closed_at": "2020-05-19T10:03:25Z"}, "comments": 3, "created_at": "2019-03-22T20:37:48Z", "updated_at": "2020-04-09T11:32:50Z", "closed_at": "2020-04-09T11:32:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently autopep8 aborts with the error message `parallel jobs requires --in-place` when trying to run with `--jobs 0 --diff`.\r\n\r\nIs there a reason why this shouldn't be allowed?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/479", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/479/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/479/events", "html_url": "https://github.com/hhatto/autopep8/issues/479", "id": 423553987, "node_id": "MDU6SXNzdWU0MjM1NTM5ODc=", "number": 479, "title": "IGNORE whitespace errors? Which rule to apply?", "user": {"login": "gotexis", "id": 38595828, "node_id": "MDQ6VXNlcjM4NTk1ODI4", "avatar_url": "https://avatars3.githubusercontent.com/u/38595828?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gotexis", "html_url": "https://github.com/gotexis", "followers_url": "https://api.github.com/users/gotexis/followers", "following_url": "https://api.github.com/users/gotexis/following{/other_user}", "gists_url": "https://api.github.com/users/gotexis/gists{/gist_id}", "starred_url": "https://api.github.com/users/gotexis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gotexis/subscriptions", "organizations_url": "https://api.github.com/users/gotexis/orgs", "repos_url": "https://api.github.com/users/gotexis/repos", "events_url": "https://api.github.com/users/gotexis/events{/privacy}", "received_events_url": "https://api.github.com/users/gotexis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-21T02:56:15Z", "updated_at": "2020-04-12T06:04:39Z", "closed_at": "2020-04-12T06:04:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey I would like to format my code like this\r\n```python\r\n\r\n    id                = LALALA\r\n    domain_id         = asfddsaf\r\n    name                 = FooBar\r\n```\r\n\r\n(the equals are kind of trimmed, but not correctly displaying here due to font not being monospaced.)\r\n\r\nToo bad I cannot find which rule to use, to ignore whitespace squashing.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/477", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/477/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/477/events", "html_url": "https://github.com/hhatto/autopep8/issues/477", "id": 419124090, "node_id": "MDU6SXNzdWU0MTkxMjQwOTA=", "number": 477, "title": "--max-line-length -> error: incorrect number of arguments", "user": {"login": "PescheHelfer", "id": 8842081, "node_id": "MDQ6VXNlcjg4NDIwODE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8842081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PescheHelfer", "html_url": "https://github.com/PescheHelfer", "followers_url": "https://api.github.com/users/PescheHelfer/followers", "following_url": "https://api.github.com/users/PescheHelfer/following{/other_user}", "gists_url": "https://api.github.com/users/PescheHelfer/gists{/gist_id}", "starred_url": "https://api.github.com/users/PescheHelfer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PescheHelfer/subscriptions", "organizations_url": "https://api.github.com/users/PescheHelfer/orgs", "repos_url": "https://api.github.com/users/PescheHelfer/repos", "events_url": "https://api.github.com/users/PescheHelfer/events{/privacy}", "received_events_url": "https://api.github.com/users/PescheHelfer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-03-09T22:49:07Z", "updated_at": "2019-11-07T15:29:03Z", "closed_at": "2019-04-02T17:17:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's probably just me being inexperienced, but I don't manage to set the --max-line-length option. I tried various ways to set it, but always get the error \"incorrect number of arguments\" or other errors. Ways  I tried:\r\nautopep8 --max-line-length=120\r\nautopep8 --max-line-length 120\r\nautopep8 \"--max-line-length 120\"\r\nautopep8 [--max-line-length 120]\r\nautopep8 [--max-line-length=120]\r\nautopep8 --in-place --aggressive --aggressive --max-line-length=120\r\nautopep8 --in-place --aggressive --aggressive --max-line-length 120\r\n\r\nI am running these commands from the terminal window inside Visual Studio Code. \r\n\r\nWhat is the proper way to set this option?\r\n\r\nSuggestion: maybe include some examples in the usage part of the manual. I am sure that usage is obvious for pros, but not so much for beginners like me :)\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/472", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/472/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/472/events", "html_url": "https://github.com/hhatto/autopep8/issues/472", "id": 406281116, "node_id": "MDU6SXNzdWU0MDYyODExMTY=", "number": 472, "title": "E712 if cond is", "user": {"login": "cansarigol", "id": 5008696, "node_id": "MDQ6VXNlcjUwMDg2OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5008696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cansarigol", "html_url": "https://github.com/cansarigol", "followers_url": "https://api.github.com/users/cansarigol/followers", "following_url": "https://api.github.com/users/cansarigol/following{/other_user}", "gists_url": "https://api.github.com/users/cansarigol/gists{/gist_id}", "starred_url": "https://api.github.com/users/cansarigol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cansarigol/subscriptions", "organizations_url": "https://api.github.com/users/cansarigol/orgs", "repos_url": "https://api.github.com/users/cansarigol/repos", "events_url": "https://api.github.com/users/cansarigol/events{/privacy}", "received_events_url": "https://api.github.com/users/cansarigol/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-02-04T11:13:51Z", "updated_at": "2019-02-13T06:59:44Z", "closed_at": "2019-02-13T06:59:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "E712 comparison to False should be 'if cond is False:' or 'if not cond:'\r\nCan be added?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/469", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/469/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/469/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/469/events", "html_url": "https://github.com/hhatto/autopep8/issues/469", "id": 400070987, "node_id": "MDU6SXNzdWU0MDAwNzA5ODc=", "number": 469, "title": "autopep8 changed my code", "user": {"login": "sazad44", "id": 36613205, "node_id": "MDQ6VXNlcjM2NjEzMjA1", "avatar_url": "https://avatars1.githubusercontent.com/u/36613205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sazad44", "html_url": "https://github.com/sazad44", "followers_url": "https://api.github.com/users/sazad44/followers", "following_url": "https://api.github.com/users/sazad44/following{/other_user}", "gists_url": "https://api.github.com/users/sazad44/gists{/gist_id}", "starred_url": "https://api.github.com/users/sazad44/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sazad44/subscriptions", "organizations_url": "https://api.github.com/users/sazad44/orgs", "repos_url": "https://api.github.com/users/sazad44/repos", "events_url": "https://api.github.com/users/sazad44/events{/privacy}", "received_events_url": "https://api.github.com/users/sazad44/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-17T01:24:10Z", "updated_at": "2019-09-12T13:04:18Z", "closed_at": "2019-09-12T13:04:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran autopep8 and it changed my code to previous versions apparently. I am using emacs. That is insane!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/465", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/465/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/465/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/465/events", "html_url": "https://github.com/hhatto/autopep8/issues/465", "id": 398491646, "node_id": "MDU6SXNzdWUzOTg0OTE2NDY=", "number": 465, "title": "Problems installing Autopep8 in VS Code", "user": {"login": "tomshelley", "id": 46613246, "node_id": "MDQ6VXNlcjQ2NjEzMjQ2", "avatar_url": "https://avatars0.githubusercontent.com/u/46613246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomshelley", "html_url": "https://github.com/tomshelley", "followers_url": "https://api.github.com/users/tomshelley/followers", "following_url": "https://api.github.com/users/tomshelley/following{/other_user}", "gists_url": "https://api.github.com/users/tomshelley/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomshelley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomshelley/subscriptions", "organizations_url": "https://api.github.com/users/tomshelley/orgs", "repos_url": "https://api.github.com/users/tomshelley/repos", "events_url": "https://api.github.com/users/tomshelley/events{/privacy}", "received_events_url": "https://api.github.com/users/tomshelley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-01-11T23:42:42Z", "updated_at": "2020-01-01T16:02:36Z", "closed_at": "2020-01-01T16:02:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "_I see similar issues but unfortunately none of the solutions on here have resolved the issue (I am running VS Code 3.5.2 on Linux Mint 18.3 Sylvia). When trying to install autopep8 I get the following:_\r\n\r\n$ /usr/bin/python3 -m pip install -U black --user\r\nCollecting black\r\n  Using cached https://files.pythonhosted.org/packages/e8/5f/0f79fcd943ba465cbd4bf303c9794970c13a95e5456630de9f72e7f37ad4/black-18.9b0.tar.gz\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n    ImportError: No module named 'setuptools'\r\n\r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-build-1_c9dsrf/black/\r\nYou are using pip version 8.1.1, however version 18.1 is available.\r\nYou should consider upgrading via the 'pip install --upgrade pip' command.\r\n\r\n_I tried:_ \r\npip install --upgrade setuptools\r\n\r\n_but got the following_\r\n\r\npip install --upgrade setuptools\r\n/home/tom/.local/lib/python2.7/site-packages/pip/_vendor/requests/__init__.py:83: RequestsDependencyWarning: Old version of cryptography ([1, 2, 3]) may cause slowdown.\r\n  warnings.warn(warning, RequestsDependencyWarning)\r\nRequirement already up-to-date: setuptools in /home/tom/.local/lib/python2.7/site-packages (40.6.3)\r\n\r\n_please forgive my ignorance I'm very new to this.\r\n\r\nMany thanks_\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/463", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/463/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/463/events", "html_url": "https://github.com/hhatto/autopep8/issues/463", "id": 398039084, "node_id": "MDU6SXNzdWUzOTgwMzkwODQ=", "number": 463, "title": "Applying W504 may cause syntax error if there are comments", "user": {"login": "bagerard", "id": 11854690, "node_id": "MDQ6VXNlcjExODU0Njkw", "avatar_url": "https://avatars0.githubusercontent.com/u/11854690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bagerard", "html_url": "https://github.com/bagerard", "followers_url": "https://api.github.com/users/bagerard/followers", "following_url": "https://api.github.com/users/bagerard/following{/other_user}", "gists_url": "https://api.github.com/users/bagerard/gists{/gist_id}", "starred_url": "https://api.github.com/users/bagerard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bagerard/subscriptions", "organizations_url": "https://api.github.com/users/bagerard/orgs", "repos_url": "https://api.github.com/users/bagerard/repos", "events_url": "https://api.github.com/users/bagerard/events{/privacy}", "received_events_url": "https://api.github.com/users/bagerard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-10T22:15:25Z", "updated_at": "2019-01-12T00:51:14Z", "closed_at": "2019-01-12T00:51:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I just noticed that the following code:\r\n```\r\nx = (1 |\r\n     2) # test\r\n```\r\nwas being formatted as\r\n```\r\nx = (1|\r\n     | 2) # test\r\n```\r\ncausing a syntax error. It seems to be related to the presence of the comment.\r\n\r\nI'll push a PR shortly", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/462", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/462/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/462/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/462/events", "html_url": "https://github.com/hhatto/autopep8/issues/462", "id": 396684140, "node_id": "MDU6SXNzdWUzOTY2ODQxNDA=", "number": 462, "title": "Keywords get hidden in the comments", "user": {"login": "GTValentine", "id": 11280818, "node_id": "MDQ6VXNlcjExMjgwODE4", "avatar_url": "https://avatars1.githubusercontent.com/u/11280818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GTValentine", "html_url": "https://github.com/GTValentine", "followers_url": "https://api.github.com/users/GTValentine/followers", "following_url": "https://api.github.com/users/GTValentine/following{/other_user}", "gists_url": "https://api.github.com/users/GTValentine/gists{/gist_id}", "starred_url": "https://api.github.com/users/GTValentine/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GTValentine/subscriptions", "organizations_url": "https://api.github.com/users/GTValentine/orgs", "repos_url": "https://api.github.com/users/GTValentine/repos", "events_url": "https://api.github.com/users/GTValentine/events{/privacy}", "received_events_url": "https://api.github.com/users/GTValentine/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-07T23:01:12Z", "updated_at": "2020-04-04T12:29:58Z", "closed_at": "2020-04-04T12:29:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran autopep8 on [pycodestyle.py](https://github.com/PyCQA/pycodestyle/blob/bd17ca651a57f8cdd278a8fac84d6a09a178a3eb/pycodestyle.py) and it broke the code. The diff is:\r\n\r\n```\r\n@@ -1119,9 +1119,9 @@ def compound_statements(logical_line):\r\n     counts = {char: 0 for char in '{}[]()'}\r\n     while -1 < found < last_char:\r\n         update_counts(line[prev_found:found], counts)\r\n-        if ((counts['{'] <= counts['}'] and   # {'a': 1} (dict)\r\n-             counts['['] <= counts[']'] and   # [1:2] (slice)\r\n-             counts['('] <= counts[')'])):    # (annotation)\r\n+        if ((counts['{'] <= counts['}']   # {'a': 1} (dict) and\r\n+             counts['['] <= counts[']']   # [1:2] (slice)\r\n+             and counts['('] <= counts[')'])):    # (annotation)\r\n```\r\nMy .pep8 file:\r\n```\r\n[pep8]\r\nindent-size = 4\r\nmax-line-length = 120\r\nignore = E3\r\n```\r\n\r\nYou can see that it put `and` in the comment and broke the code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/460", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/460/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/460/events", "html_url": "https://github.com/hhatto/autopep8/issues/460", "id": 392681752, "node_id": "MDU6SXNzdWUzOTI2ODE3NTI=", "number": 460, "title": "Skip formatting of a block in a file", "user": {"login": "martemyev", "id": 2182432, "node_id": "MDQ6VXNlcjIxODI0MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2182432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martemyev", "html_url": "https://github.com/martemyev", "followers_url": "https://api.github.com/users/martemyev/followers", "following_url": "https://api.github.com/users/martemyev/following{/other_user}", "gists_url": "https://api.github.com/users/martemyev/gists{/gist_id}", "starred_url": "https://api.github.com/users/martemyev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martemyev/subscriptions", "organizations_url": "https://api.github.com/users/martemyev/orgs", "repos_url": "https://api.github.com/users/martemyev/repos", "events_url": "https://api.github.com/users/martemyev/events{/privacy}", "received_events_url": "https://api.github.com/users/martemyev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/9", "html_url": "https://github.com/hhatto/autopep8/milestone/9", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/9/labels", "id": 5483308, "node_id": "MDk6TWlsZXN0b25lNTQ4MzMwOA==", "number": 9, "title": "1.5.4", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2020-06-01T01:50:53Z", "updated_at": "2020-08-09T12:09:25Z", "due_on": "2020-07-30T07:00:00Z", "closed_at": "2020-08-09T12:09:25Z"}, "comments": 6, "created_at": "2018-12-19T16:32:03Z", "updated_at": "2020-08-02T04:37:04Z", "closed_at": "2020-08-02T04:37:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Couldn't find if it was asked before. Some other python formatters offer a way to disable formatting of a part of a file by surrounding it with\r\n```\r\n<black>\r\n# fmt: off\r\n# fmt: on\r\n```\r\nor\r\n```\r\n<yapf>\r\n# yapf: disable\r\n# yapf: enable\r\n```\r\nAs far as I understand `autopep8` does not have this capability. Am I right? If so, would you consider adding it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/459", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/459/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/459/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/459/events", "html_url": "https://github.com/hhatto/autopep8/issues/459", "id": 390578656, "node_id": "MDU6SXNzdWUzOTA1Nzg2NTY=", "number": 459, "title": "Imports are always moved to top of the file", "user": {"login": "Tadaboody", "id": 6463334, "node_id": "MDQ6VXNlcjY0NjMzMzQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/6463334?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tadaboody", "html_url": "https://github.com/Tadaboody", "followers_url": "https://api.github.com/users/Tadaboody/followers", "following_url": "https://api.github.com/users/Tadaboody/following{/other_user}", "gists_url": "https://api.github.com/users/Tadaboody/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tadaboody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tadaboody/subscriptions", "organizations_url": "https://api.github.com/users/Tadaboody/orgs", "repos_url": "https://api.github.com/users/Tadaboody/repos", "events_url": "https://api.github.com/users/Tadaboody/events{/privacy}", "received_events_url": "https://api.github.com/users/Tadaboody/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 8, "created_at": "2018-12-13T09:00:52Z", "updated_at": "2019-01-13T13:48:45Z", "closed_at": "2019-01-13T13:48:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running autopep8 on \r\n```py\r\n\"\"\"Module docstring\"\"\"\r\na = 5\r\nimport random\r\nimport itertools\r\n```\r\nresults in \r\n```py\r\nimport itertools\r\nimport random\r\n\"\"\"module docstring\"\"\"\r\na = 5\r\n```\r\nInstead of \r\n```py\r\n\"\"\"module docstring\"\"\"\r\nimport itertools\r\nimport random\r\na = 5\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/456", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/456/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/456/events", "html_url": "https://github.com/hhatto/autopep8/issues/456", "id": 387389980, "node_id": "MDU6SXNzdWUzODczODk5ODA=", "number": 456, "title": "Inconsistently rewrites W504/3 (newline after/before binary operator)", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-12-04T17:09:10Z", "updated_at": "2019-01-30T17:19:26Z", "closed_at": "2019-01-30T17:19:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider this input, which has two lines of whitespace above the function\r\n\r\n```python\r\nq = 1\r\n\r\n\r\ndef x(y, z):\r\n    if (\r\n            y and\r\n            z\r\n    ):\r\n        pass\r\n```\r\n\r\n`autopep8` will not touch it (this is good, this is what I expect)\r\n\r\nHowever if it has more line breaks at the top this happens:\r\n\r\n```diff\r\n q = 1\r\n-\r\n-\r\n \r\n \r\n def x(y, z):\r\n     if (\r\n-            y and\r\n-            z\r\n+            y\r\n+            and z\r\n     ):\r\n         pass\r\n```\r\n\r\nI don't think autopep8 should be rewriting W504 / W503 unless asked to and especially not when fixing an unrelated issue. pycodestyle and flake8 by default turns those warnings off\r\n\r\n```\r\n$ /home/asottile/.cache/pre-commit/repoadsj3zb8/py_env-python3/bin/autopep8 --version\r\nautopep8 1.4.2 (pycodestyle: 2.4.0)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/455", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/455/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/455/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/455/events", "html_url": "https://github.com/hhatto/autopep8/issues/455", "id": 387251706, "node_id": "MDU6SXNzdWUzODcyNTE3MDY=", "number": 455, "title": "invalid exit code when '--in-place --exit-code' options are set and no changes was made", "user": {"login": "VolodymyrLavrenchuk", "id": 482614, "node_id": "MDQ6VXNlcjQ4MjYxNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/482614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VolodymyrLavrenchuk", "html_url": "https://github.com/VolodymyrLavrenchuk", "followers_url": "https://api.github.com/users/VolodymyrLavrenchuk/followers", "following_url": "https://api.github.com/users/VolodymyrLavrenchuk/following{/other_user}", "gists_url": "https://api.github.com/users/VolodymyrLavrenchuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/VolodymyrLavrenchuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VolodymyrLavrenchuk/subscriptions", "organizations_url": "https://api.github.com/users/VolodymyrLavrenchuk/orgs", "repos_url": "https://api.github.com/users/VolodymyrLavrenchuk/repos", "events_url": "https://api.github.com/users/VolodymyrLavrenchuk/events{/privacy}", "received_events_url": "https://api.github.com/users/VolodymyrLavrenchuk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-12-04T11:57:39Z", "updated_at": "2018-12-15T03:39:16Z", "closed_at": "2018-12-15T03:39:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/hhatto/autopep8/pull/437/files#diff-1f8ef9e30f90510a0b8497bc11ffe74fR4137\r\n**ret** variable will contain array of empty strings if fix_multiple_files has not made any changes.\r\nEx: ['', '', '', '']\r\nBut return code will be 2 because of len(['', '', '', '']) > 0\r\n\r\nCheck could be like: \r\n\r\n`len(''.join(ret)) > 0`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/453", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/453/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/453/events", "html_url": "https://github.com/hhatto/autopep8/issues/453", "id": 378558200, "node_id": "MDU6SXNzdWUzNzg1NTgyMDA=", "number": 453, "title": "autopep8 stop formating on my atom 1.32.1 x64", "user": {"login": "chinh-trieutien", "id": 8264004, "node_id": "MDQ6VXNlcjgyNjQwMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8264004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chinh-trieutien", "html_url": "https://github.com/chinh-trieutien", "followers_url": "https://api.github.com/users/chinh-trieutien/followers", "following_url": "https://api.github.com/users/chinh-trieutien/following{/other_user}", "gists_url": "https://api.github.com/users/chinh-trieutien/gists{/gist_id}", "starred_url": "https://api.github.com/users/chinh-trieutien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chinh-trieutien/subscriptions", "organizations_url": "https://api.github.com/users/chinh-trieutien/orgs", "repos_url": "https://api.github.com/users/chinh-trieutien/repos", "events_url": "https://api.github.com/users/chinh-trieutien/events{/privacy}", "received_events_url": "https://api.github.com/users/chinh-trieutien/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-11-08T02:58:41Z", "updated_at": "2018-11-08T03:08:46Z", "closed_at": "2018-11-08T03:08:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "As subject, autopep8 no longer format on my Python file with atom 1.32.1 x64", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/449", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/449/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/449/events", "html_url": "https://github.com/hhatto/autopep8/issues/449", "id": 376110448, "node_id": "MDU6SXNzdWUzNzYxMTA0NDg=", "number": 449, "title": "W605: identical tokens cause infinite loop ", "user": {"login": "bigredengineer", "id": 44625091, "node_id": "MDQ6VXNlcjQ0NjI1MDkx", "avatar_url": "https://avatars0.githubusercontent.com/u/44625091?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bigredengineer", "html_url": "https://github.com/bigredengineer", "followers_url": "https://api.github.com/users/bigredengineer/followers", "following_url": "https://api.github.com/users/bigredengineer/following{/other_user}", "gists_url": "https://api.github.com/users/bigredengineer/gists{/gist_id}", "starred_url": "https://api.github.com/users/bigredengineer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bigredengineer/subscriptions", "organizations_url": "https://api.github.com/users/bigredengineer/orgs", "repos_url": "https://api.github.com/users/bigredengineer/repos", "events_url": "https://api.github.com/users/bigredengineer/events{/privacy}", "received_events_url": "https://api.github.com/users/bigredengineer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/4", "html_url": "https://github.com/hhatto/autopep8/milestone/4", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/4/labels", "id": 4906309, "node_id": "MDk6TWlsZXN0b25lNDkwNjMwOQ==", "number": 4, "title": "1.5", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 5, "state": "closed", "created_at": "2019-12-05T14:50:15Z", "updated_at": "2020-01-20T14:19:47Z", "due_on": "2020-01-15T08:00:00Z", "closed_at": "2020-01-20T14:19:47Z"}, "comments": 4, "created_at": "2018-10-31T18:48:00Z", "updated_at": "2019-12-16T11:24:49Z", "closed_at": "2019-12-16T11:24:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a bug with the way that tokens are handled with W605 that causes an infinite loop to occur when two identical W605 tokens exist on the same line of code.  This infinite loop can be observed both on the command line and by adding a test to the test_autopep8.py unit test file.\r\n\r\n**Test Case Code:**\r\n`escape = foo('\\.bar', '\\.bar')\\n`\r\n\r\n**Command Line:**\r\n`autopep8.py src/ -i -r --exclude \"config_*\" -a -j 8`\r\n\r\n**Workaround:** \r\n- To the command line, add `--pep8-passes <n>`.  This will break the infinite loop, but a bad code-fix is put in place\r\n- Bad Code-Fix Example =  `escape = foo(rrrrrrrrr'\\.bar', '\\.bar')\\n`\r\n\r\n**Version Info**\r\n`autopep8.py --version  :  autopep8 1.4.1 (pycodestyle: 2.4.0)`\r\n`/usr/bin/env python --version  : Python 2.7.5`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/447", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/447/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/447/events", "html_url": "https://github.com/hhatto/autopep8/issues/447", "id": 374467027, "node_id": "MDU6SXNzdWUzNzQ0NjcwMjc=", "number": 447, "title": "Sorting imports wrong way", "user": {"login": "samirbr", "id": 1590543, "node_id": "MDQ6VXNlcjE1OTA1NDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1590543?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samirbr", "html_url": "https://github.com/samirbr", "followers_url": "https://api.github.com/users/samirbr/followers", "following_url": "https://api.github.com/users/samirbr/following{/other_user}", "gists_url": "https://api.github.com/users/samirbr/gists{/gist_id}", "starred_url": "https://api.github.com/users/samirbr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samirbr/subscriptions", "organizations_url": "https://api.github.com/users/samirbr/orgs", "repos_url": "https://api.github.com/users/samirbr/repos", "events_url": "https://api.github.com/users/samirbr/events{/privacy}", "received_events_url": "https://api.github.com/users/samirbr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-10-26T16:55:57Z", "updated_at": "2018-11-12T13:57:44Z", "closed_at": "2018-11-12T13:57:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following imports in a file.\r\n```\r\nimport os\r\nimport os.path as P\r\nimport sys\r\nimport cv2\r\nimport math\r\nimport time\r\nimport numpy as np\r\nimport tensorflow as tf\r\nimport matplotlib\r\nfrom matplotlib import pyplot as plt\r\nfrom scipy.sparse import coo_matrix\r\nfrom scipy.ndimage.filters import maximum_filter\r\n\r\nsys.path.insert(0, P.abspath(P.join(P.dirname(__file__), \"../job/\")))\r\n\r\nfrom configuration import Configuration\r\nfrom personLabNetworkFunctions import get_personlab\r\nfrom helper import (\r\n    add_circle_to_matrix,\r\n    circle_of_digits,\r\n    circle_of_x_offsets,\r\n    circle_of_y_offsets,\r\n    circle_of_mid_range_x_offsets,\r\n    circle_of_mid_range_y_offsets,\r\n    transform,\r\n    display_mid_range_offsets,\r\n    display_short_range_offsets,\r\n    display_heatmaps,\r\n    show_computed_heatmaps,\r\n)\r\nfrom constants import (\r\n    KEYPOINTS,\r\n    EDGES,\r\n    IM_WIDTH,\r\n    IM_HEIGHT,\r\n    IN_WIDTH,\r\n    IN_HEIGHT,\r\n    RADIUS,\r\n    PEAK_THRESH,\r\n    DATA_DIR,\r\n    NUM_EDGES,\r\n    NUM_KP,\r\n)\r\n```\r\nWhen I run `autopep8 test.py` it wrongly reorders the imports.\r\n\r\n```\r\nfrom constants import (\r\n    from helper import (\r\n        from personLabNetworkFunctions import get_personlab\r\n        from configuration import Configuration\r\n        import os\r\n        import os.path as P\r\n        import sys\r\n        import cv2\r\n        import math\r\n        import time\r\n        import numpy as np\r\n        import tensorflow as tf\r\n        import matplotlib\r\n        from matplotlib import pyplot as plt\r\n        from scipy.sparse import coo_matrix\r\n        from scipy.ndimage.filters import maximum_filter\r\n\r\n        sys.path.insert(0, P.abspath(P.join(P.dirname(__file__), \"../job/\")))\r\n\r\n        add_circle_to_matrix,\r\n        circle_of_digits,\r\n        circle_of_x_offsets,\r\n        circle_of_y_offsets,\r\n        circle_of_mid_range_x_offsets,\r\n        circle_of_mid_range_y_offsets,\r\n        transform,\r\n        display_mid_range_offsets,\r\n        display_short_range_offsets,\r\n        display_heatmaps,\r\n        show_computed_heatmaps,\r\n    )\r\n    KEYPOINTS,\r\n    EDGES,\r\n    IM_WIDTH,\r\n    IM_HEIGHT,\r\n    IN_WIDTH,\r\n    IN_HEIGHT,\r\n    RADIUS,\r\n    PEAK_THRESH,\r\n    DATA_DIR,\r\n    NUM_EDGES,\r\n    NUM_KP,\r\n)\r\n```\r\nIf there is no line breaks between parentheses it works fine.\r\nI'm using `autopep8 1.4.2 (pycodestyle: 2.4.0)` with `Python 3.6.6`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/446", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/446/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/446/events", "html_url": "https://github.com/hhatto/autopep8/issues/446", "id": 373705058, "node_id": "MDU6SXNzdWUzNzM3MDUwNTg=", "number": 446, "title": "Multiline statements with a comment generate wrong code in 1.4.2", "user": {"login": "dchanm", "id": 403603, "node_id": "MDQ6VXNlcjQwMzYwMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/403603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dchanm", "html_url": "https://github.com/dchanm", "followers_url": "https://api.github.com/users/dchanm/followers", "following_url": "https://api.github.com/users/dchanm/following{/other_user}", "gists_url": "https://api.github.com/users/dchanm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dchanm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dchanm/subscriptions", "organizations_url": "https://api.github.com/users/dchanm/orgs", "repos_url": "https://api.github.com/users/dchanm/repos", "events_url": "https://api.github.com/users/dchanm/events{/privacy}", "received_events_url": "https://api.github.com/users/dchanm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-10-24T22:39:44Z", "updated_at": "2018-11-12T13:59:13Z", "closed_at": "2018-11-12T13:59:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "#442 doesn't appear to fix the following\r\n\r\n```\r\n$ autopep8 --version\r\nautopep8 1.4.2 (pycodestyle: 2.4.0)\r\n\r\n$ python --version\r\nPython 2.7.6\r\n```\r\n\r\nTestcase\r\n```\r\ndef test():\r\n    return (\r\n        True not in [] and\r\n        False  # comment required\r\n    )\r\n```\r\n\r\nExpected result\r\n```\r\ndef test():\r\n    return (\r\n        True not in [] and\r\n        False  # comment required\r\n    )\r\n```\r\n\r\nActual result\r\n```\r\ndef test():\r\n    return (\r\n        True not and n[]\r\n        False  # comment required\r\n    )   \r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/444", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/444/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/444/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/444/events", "html_url": "https://github.com/hhatto/autopep8/issues/444", "id": 372693197, "node_id": "MDU6SXNzdWUzNzI2OTMxOTc=", "number": 444, "title": "Q: \"Applying global fix for <CODE>\" - what does it mean and how to resolve", "user": {"login": "tkang007", "id": 8038624, "node_id": "MDQ6VXNlcjgwMzg2MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/8038624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkang007", "html_url": "https://github.com/tkang007", "followers_url": "https://api.github.com/users/tkang007/followers", "following_url": "https://api.github.com/users/tkang007/following{/other_user}", "gists_url": "https://api.github.com/users/tkang007/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkang007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkang007/subscriptions", "organizations_url": "https://api.github.com/users/tkang007/orgs", "repos_url": "https://api.github.com/users/tkang007/repos", "events_url": "https://api.github.com/users/tkang007/events{/privacy}", "received_events_url": "https://api.github.com/users/tkang007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-10-22T20:47:46Z", "updated_at": "2018-10-23T15:18:15Z", "closed_at": "2018-10-23T15:18:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have a question regarding a verbose message: \"Applying global fix for <CODE>\"\r\nMy question is what does the message means, and how to resolve the error.\r\nIt was not removed even though I use --in-place option as below multiple time.\r\n\r\nautopep8 --verbose --global-config /dev/null --ignore-local-config --max-line-length=160 -aa --recursive --in-place  pkg/mod.py\r\n\r\nMy environments is Window7, Python 2.7, and autopep8 1.3.5 (pycodestyle: 2.3.1)\r\n\r\nThanks in advance.\r\nTaewon", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/443", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/443/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/443/events", "html_url": "https://github.com/hhatto/autopep8/issues/443", "id": 372426920, "node_id": "MDU6SXNzdWUzNzI0MjY5MjA=", "number": 443, "title": "w503: error indexing an empty string when E721 is ignored", "user": {"login": "ideasman42", "id": 1869379, "node_id": "MDQ6VXNlcjE4NjkzNzk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1869379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ideasman42", "html_url": "https://github.com/ideasman42", "followers_url": "https://api.github.com/users/ideasman42/followers", "following_url": "https://api.github.com/users/ideasman42/following{/other_user}", "gists_url": "https://api.github.com/users/ideasman42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ideasman42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ideasman42/subscriptions", "organizations_url": "https://api.github.com/users/ideasman42/orgs", "repos_url": "https://api.github.com/users/ideasman42/repos", "events_url": "https://api.github.com/users/ideasman42/events{/privacy}", "received_events_url": "https://api.github.com/users/ideasman42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-10-22T08:01:30Z", "updated_at": "2018-10-23T15:12:19Z", "closed_at": "2018-10-23T15:12:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Run the following command with the attached file:\r\n```\r\nautopep8 --ignore E721 mathutils.Quaternion.py\r\n```\r\n\r\n[mathutils.Quaternion.py.txt](https://github.com/hhatto/autopep8/files/2500582/mathutils.Quaternion.py.txt)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/441", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/441/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/441/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/441/events", "html_url": "https://github.com/hhatto/autopep8/issues/441", "id": 371779714, "node_id": "MDU6SXNzdWUzNzE3Nzk3MTQ=", "number": 441, "title": "Lots of (wrong) code added", "user": {"login": "asottile", "id": 1810591, "node_id": "MDQ6VXNlcjE4MTA1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1810591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asottile", "html_url": "https://github.com/asottile", "followers_url": "https://api.github.com/users/asottile/followers", "following_url": "https://api.github.com/users/asottile/following{/other_user}", "gists_url": "https://api.github.com/users/asottile/gists{/gist_id}", "starred_url": "https://api.github.com/users/asottile/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asottile/subscriptions", "organizations_url": "https://api.github.com/users/asottile/orgs", "repos_url": "https://api.github.com/users/asottile/repos", "events_url": "https://api.github.com/users/asottile/events{/privacy}", "received_events_url": "https://api.github.com/users/asottile/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-10-19T02:10:11Z", "updated_at": "2018-10-23T15:34:11Z", "closed_at": "2018-10-23T15:12:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Very simple example:\r\n\r\n```python\r\nif True:\r\n    if True:\r\n        if (\r\n                link.is_wheel and\r\n                isinstance(link.comes_from, HTMLPage) and\r\n                link.comes_from.url.startswith(index_url)\r\n        ):\r\n            _store_wheel_in_cache(file_path, index_url)\r\n```\r\n\r\n```diff\r\n--- original/t.py\r\n+++ fixed/t.py\r\n@@ -1,8 +1,24 @@\r\n if True:\r\n     if True:\r\n         if (\r\n-                link.is_wheel and\r\n-                isinstance(link.comes_from, HTMLPage) and\r\n-                link.comes_from.url.startswith(index_url)\r\n+                linkis_wheel and\r\n+            is_wheel and\r\n+            isinstancelinkcomes_fromHTMLPageand and\r\n+            isinstancelinkcomes_fromHTMLPageand and\r\n+            linkcomes_fromHTMLPageand and\r\n+            linkcomes_fromHTMLPageand and\r\n+            comes_fromHTMLPageand and\r\n+            comes_fromHTMLPageand and\r\n+            comes_fromHTMLPageand and\r\n+            comes_fromHTMLPageand and\r\n+            HTMLPageand and\r\n+            HTMLPageand and\r\n+            HTMLPageand and\r\n+            HTMLPageand and\r\n+            HTMLPageand and\r\n+            HTMLPageand and\r\n+            HTMLPageand and\r\n+            HTMLPageand and\r\n+            . (., ) link.comes_from.url.startswith(index_url)\r\n         ):\r\n             _store_wheel_in_cache(file_path, index_url)\r\n```\r\n\r\n\r\n1.4 seems fine though -- I'll revert", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/440", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/440/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/440/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/440/events", "html_url": "https://github.com/hhatto/autopep8/issues/440", "id": 371768768, "node_id": "MDU6SXNzdWUzNzE3Njg3Njg=", "number": 440, "title": "Multiline if statements that have a . cause a repeat of the rest of the statement in v1.4.1", "user": {"login": "ATRAN2", "id": 3700260, "node_id": "MDQ6VXNlcjM3MDAyNjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/3700260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ATRAN2", "html_url": "https://github.com/ATRAN2", "followers_url": "https://api.github.com/users/ATRAN2/followers", "following_url": "https://api.github.com/users/ATRAN2/following{/other_user}", "gists_url": "https://api.github.com/users/ATRAN2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ATRAN2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ATRAN2/subscriptions", "organizations_url": "https://api.github.com/users/ATRAN2/orgs", "repos_url": "https://api.github.com/users/ATRAN2/repos", "events_url": "https://api.github.com/users/ATRAN2/events{/privacy}", "received_events_url": "https://api.github.com/users/ATRAN2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-10-19T01:03:46Z", "updated_at": "2018-10-25T17:43:34Z", "closed_at": "2018-10-25T14:43:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "autopep8 version:\r\n```\r\n$ autopep8 --version\r\nautopep8 1.4.1 (pycodestyle: 2.4.0)\r\n```\r\nPython version:\r\n```\r\n$ python --version\r\nPython 3.6.0\r\n```\r\nHost info:\r\n```\r\n$ uname -a\r\nLinux xxxx 4.4.0-75-generic #96-Ubuntu SMP Thu Apr 20 09:56:33 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n\r\nExample testcase:\r\n```\r\nif(\r\n    foo.bar and\r\n    baz\r\n):\r\n    print('whomp')\r\n\r\nif(\r\n    foo.bar or\r\n    baz\r\n):\r\n    print('whomp')\r\n```\r\n\r\nExpected result:\r\n```\r\nif(\r\n    foo.bar and\r\n    baz\r\n):\r\n    print('whomp')\r\n\r\nif(\r\n    foo.bar or\r\n    baz\r\n):\r\n    print('whomp')\r\n```\r\n(Essentially a noop)\r\n\r\nActual result:\r\n```\r\n$ autopep8 example.py\r\nif(\r\n    foobar and\r\n    bar and\r\n    . baz\r\n):\r\n    print('whomp')\r\n\r\nif(\r\n    foobar or\r\n    bar or\r\n    . baz\r\n):\r\n    print('whomp')\r\n```\r\n\r\n1.4.1 should be the most recent version as of this post\r\n\r\nReverting to 1.4 seems to work", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/439", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/439/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/439/events", "html_url": "https://github.com/hhatto/autopep8/issues/439", "id": 369818026, "node_id": "MDU6SXNzdWUzNjk4MTgwMjY=", "number": 439, "title": "tokenize.TokenError: ('EOF in multi-line statement') with the line breaking backslash", "user": {"login": "AlexArcPy", "id": 7373268, "node_id": "MDQ6VXNlcjczNzMyNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7373268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexArcPy", "html_url": "https://github.com/AlexArcPy", "followers_url": "https://api.github.com/users/AlexArcPy/followers", "following_url": "https://api.github.com/users/AlexArcPy/following{/other_user}", "gists_url": "https://api.github.com/users/AlexArcPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexArcPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexArcPy/subscriptions", "organizations_url": "https://api.github.com/users/AlexArcPy/orgs", "repos_url": "https://api.github.com/users/AlexArcPy/repos", "events_url": "https://api.github.com/users/AlexArcPy/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexArcPy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-13T16:31:10Z", "updated_at": "2018-10-15T09:52:25Z", "closed_at": "2018-10-15T01:14:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Having this valid Python code\r\n\r\n```python\r\ns = 'result' + '{}'.format('aaa') + 'bbb' + 'ccc' +\\\r\n    \"\\d\"\r\nprint(s)\r\n```\r\n\r\nthat executes to\r\n\r\n`resultaaabbbccc\\d`\r\n\r\nthrows \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"c:\\python36\\lib\\runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"c:\\python36\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Python36\\Scripts\\autopep8.exe\\__main__.py\", line 9, in <module>\r\n  File \"c:\\python36\\lib\\site-packages\\autopep8.py\", line 3993, in main\r\n    fix_multiple_files(args.files, args, sys.stdout)\r\n  File \"c:\\python36\\lib\\site-packages\\autopep8.py\", line 3905, in fix_multiple_files\r\n    _fix_file((name, options, output))\r\n  File \"c:\\python36\\lib\\site-packages\\autopep8.py\", line 3886, in _fix_file\r\n    fix_file(*parameters)\r\n  File \"c:\\python36\\lib\\site-packages\\autopep8.py\", line 3275, in fix_file\r\n    fixed_source = fix_lines(fixed_source, options, filename=filename)\r\n  File \"c:\\python36\\lib\\site-packages\\autopep8.py\", line 3255, in fix_lines\r\n    fixed_source = fix.fix()\r\n  File \"c:\\python36\\lib\\site-packages\\autopep8.py\", line 571, in fix\r\n    aggressive=self.options.aggressive))\r\n  File \"c:\\python36\\lib\\site-packages\\autopep8.py\", line 513, in _fix_source\r\n    modified_lines = fix(result)\r\n  File \"c:\\python36\\lib\\site-packages\\autopep8.py\", line 1237, in fix_w605\r\n    tokens = list(generate_tokens(target))\r\n  File \"c:\\python36\\lib\\site-packages\\autopep8.py\", line 4015, in generate_tokens\r\n    tokenize.generate_tokens(string_io.readline)\r\n  File \"c:\\python36\\lib\\tokenize.py\", line 595, in _tokenize\r\n    raise TokenError(\"EOF in multi-line statement\", (lnum, 0))\r\ntokenize.TokenError: ('EOF in multi-line statement', (2, 0))\r\nProcess terminated with an exit code of 1\r\n```\r\n\r\nwhen using the `autopep8 1.4 (pycodestyle: 2.4.0)` and Python 3.6.\r\n\r\nThe cause of the issue is the backslash in the string that follows the breaking line backslash. \r\n\r\nThis code won't raise any errors:\r\n\r\n```python\r\ns = 'result' + '{}'.format('aaa') + 'bbb' + 'ccc' +\\\r\n    \"d\"\r\nprint(s)\r\n```\r\n\r\nThis code won't raise any errors (adding `r` making a raw string):\r\n\r\n```python\r\ns = 'result' + '{}'.format('aaa') + 'bbb' + 'ccc' +\\\r\n    r\"\\d\"\r\nprint(s)\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/438", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/438/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/438/events", "html_url": "https://github.com/hhatto/autopep8/issues/438", "id": 369122350, "node_id": "MDU6SXNzdWUzNjkxMjIzNTA=", "number": 438, "title": "TokenError thrown when run against directory", "user": {"login": "rameshrvr", "id": 28801292, "node_id": "MDQ6VXNlcjI4ODAxMjky", "avatar_url": "https://avatars1.githubusercontent.com/u/28801292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rameshrvr", "html_url": "https://github.com/rameshrvr", "followers_url": "https://api.github.com/users/rameshrvr/followers", "following_url": "https://api.github.com/users/rameshrvr/following{/other_user}", "gists_url": "https://api.github.com/users/rameshrvr/gists{/gist_id}", "starred_url": "https://api.github.com/users/rameshrvr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rameshrvr/subscriptions", "organizations_url": "https://api.github.com/users/rameshrvr/orgs", "repos_url": "https://api.github.com/users/rameshrvr/repos", "events_url": "https://api.github.com/users/rameshrvr/events{/privacy}", "received_events_url": "https://api.github.com/users/rameshrvr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2018-10-11T13:30:18Z", "updated_at": "2018-10-17T14:21:10Z", "closed_at": "2018-10-17T14:21:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I ran the autopep8 command against directory, upto v1.3.5 it is working fine. Today i upgraded it to 1.4 and ran and noticed the below error\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/autopep8\", line 9, in <module>\r\n    load_entry_point('autopep8==1.4', 'console_scripts', 'autopep8')()\r\n  File \"/Library/Python/2.7/site-packages/autopep8.py\", line 3993, in main\r\n    fix_multiple_files(args.files, args, sys.stdout)\r\n  File \"/Library/Python/2.7/site-packages/autopep8.py\", line 3905, in fix_multiple_files\r\n    _fix_file((name, options, output))\r\n  File \"/Library/Python/2.7/site-packages/autopep8.py\", line 3886, in _fix_file\r\n    fix_file(*parameters)\r\n  File \"/Library/Python/2.7/site-packages/autopep8.py\", line 3275, in fix_file\r\n    fixed_source = fix_lines(fixed_source, options, filename=filename)\r\n  File \"/Library/Python/2.7/site-packages/autopep8.py\", line 3255, in fix_lines\r\n    fixed_source = fix.fix()\r\n  File \"/Library/Python/2.7/site-packages/autopep8.py\", line 571, in fix\r\n    aggressive=self.options.aggressive))\r\n  File \"/Library/Python/2.7/site-packages/autopep8.py\", line 513, in _fix_source\r\n    modified_lines = fix(result)\r\n  File \"/Library/Python/2.7/site-packages/autopep8.py\", line 1237, in fix_w605\r\n    tokens = list(generate_tokens(target))\r\n  File \"/Library/Python/2.7/site-packages/autopep8.py\", line 4015, in generate_tokens\r\n    tokenize.generate_tokens(string_io.readline)\r\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/tokenize.py\", line 363, in generate_tokens\r\n    raise TokenError, (\"EOF in multi-line statement\", (lnum, 0))\r\ntokenize.TokenError: ('EOF in multi-line statement', (2, 0))\r\n```\r\nIs there anything i am doing wrong. Or issue with the fix_multiple_files method?\r\ncommand used `autopep8 --in-place -a -r /Documents/python_test_code/`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/436", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/436/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/436/events", "html_url": "https://github.com/hhatto/autopep8/issues/436", "id": 365858448, "node_id": "MDU6SXNzdWUzNjU4NTg0NDg=", "number": 436, "title": "Pycodestyle unused-import", "user": {"login": "anselmos", "id": 5718592, "node_id": "MDQ6VXNlcjU3MTg1OTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5718592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anselmos", "html_url": "https://github.com/anselmos", "followers_url": "https://api.github.com/users/anselmos/followers", "following_url": "https://api.github.com/users/anselmos/following{/other_user}", "gists_url": "https://api.github.com/users/anselmos/gists{/gist_id}", "starred_url": "https://api.github.com/users/anselmos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anselmos/subscriptions", "organizations_url": "https://api.github.com/users/anselmos/orgs", "repos_url": "https://api.github.com/users/anselmos/repos", "events_url": "https://api.github.com/users/anselmos/events{/privacy}", "received_events_url": "https://api.github.com/users/anselmos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-10-02T11:42:48Z", "updated_at": "2019-03-30T03:43:48Z", "closed_at": "2018-10-02T15:16:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've used autopep8 for project and I'm really happy about how it works.\r\n\r\nI'd like to know is there a possibility to add feature of removing any `unused-import` as an parameter-argument like `--remove-unused-imports` ? \r\n\r\nIf there is anything I could do to create it, please provide me some feedback.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/433", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/433/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/433/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/433/events", "html_url": "https://github.com/hhatto/autopep8/issues/433", "id": 363988344, "node_id": "MDU6SXNzdWUzNjM5ODgzNDQ=", "number": 433, "title": "UnicodeDecodeError: 'ascii' codec can't decode byte 0xe7 in position 168: ordinal not in range(128)", "user": {"login": "dlintw", "id": 326179, "node_id": "MDQ6VXNlcjMyNjE3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/326179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlintw", "html_url": "https://github.com/dlintw", "followers_url": "https://api.github.com/users/dlintw/followers", "following_url": "https://api.github.com/users/dlintw/following{/other_user}", "gists_url": "https://api.github.com/users/dlintw/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlintw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlintw/subscriptions", "organizations_url": "https://api.github.com/users/dlintw/orgs", "repos_url": "https://api.github.com/users/dlintw/repos", "events_url": "https://api.github.com/users/dlintw/events{/privacy}", "received_events_url": "https://api.github.com/users/dlintw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-26T11:47:14Z", "updated_at": "2018-11-08T03:45:23Z", "closed_at": "2018-11-08T01:28:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use autopep8 as pre-commit hook for subversion.  I'm trying check if the input file content is fit for PEP8 by trying to fix it and compare the original file content.( I don't know is there better method)\r\nThe python source file contains Chinese utf-8 comments.\r\n\r\npre-commit code(use python to write):\r\n```\r\n193     def is_invalid_pep8(fname):\r\n194         \"\"\"check is pep8\"\"\"\r\n195         org_contents = file_contents(fname, look_cmd)\r\n196         with open(\"/tmp/autopep8.debug.py\", \"wb\") as f:\r\n197             f.write(org_contents)\r\n198         new_contents = autopep8.fix_code(org_contents, options={'jobs': 0})\r\n199         # sys.stderr.write(\"org size=%d new_size=%d u(org)size=%d\\n\" % (\r\n200         #         #    len(org_contents), len(new_contents),\r\n201         #         len(unicode(org_contents,\"utf-8\"))))\r\n202         return unicode(org_contents, \"utf-8\") != new_contents\r\n```\r\nHere is the error message\r\n```\r\nERROR from SVN:\r\nA repository hook failed: Commit blocked by pre-commit hook (exit code 1) with output:\r\nTraceback (most recent call last):\r\n  File \"/trac/tfxsvn/hooks/pre-commit\", line 243, in <module>\r\n    sys.exit(main())\r\n  File \"/trac/tfxsvn/hooks/pre-commit\", line 233, in main\r\n    errors += check_py(look_cmd, filelist)\r\n  File \"/trac/tfxsvn/hooks/pre-commit\", line 205, in check_py\r\n    is_invalid_pep8(ff)]\r\n  File \"/trac/tfxsvn/hooks/pre-commit\", line 198, in is_invalid_pep8\r\n    new_contents = autopep8.fix_code(org_contents, options={'jobs': 0})\r\n  File \"/lib/python2.7/site-packages/autopep8.py\", line 3177, in fix_code\r\n    source = source.decode(encoding or get_encoding())\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe7 in position 168: ordinal not in range(128)\r\nW: e2851c1a8e477a3b636c8ad7232bc2977cd5d5fa and refs/remotes/git-svn differ, using rebase:\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/432", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/432/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/432/events", "html_url": "https://github.com/hhatto/autopep8/issues/432", "id": 363838696, "node_id": "MDU6SXNzdWUzNjM4Mzg2OTY=", "number": 432, "title": "Prefer to get non-zero exit status if diff exists", "user": {"login": "sonots", "id": 2290461, "node_id": "MDQ6VXNlcjIyOTA0NjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2290461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sonots", "html_url": "https://github.com/sonots", "followers_url": "https://api.github.com/users/sonots/followers", "following_url": "https://api.github.com/users/sonots/following{/other_user}", "gists_url": "https://api.github.com/users/sonots/gists{/gist_id}", "starred_url": "https://api.github.com/users/sonots/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sonots/subscriptions", "organizations_url": "https://api.github.com/users/sonots/orgs", "repos_url": "https://api.github.com/users/sonots/repos", "events_url": "https://api.github.com/users/sonots/events{/privacy}", "received_events_url": "https://api.github.com/users/sonots/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2018-09-26T02:55:40Z", "updated_at": "2018-10-17T16:24:35Z", "closed_at": "2018-10-04T15:11:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "`autopep8 --diff` always exits with status code 0 currently. But, I prefer to get non-zero exit status if diff exists. This behavior is useful to use autopep8 in CI.\r\n\r\nFYI: [yapf](https://github.com/google/yapf) exits with status code 1 if diff exists.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/424", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/424/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/424/events", "html_url": "https://github.com/hhatto/autopep8/issues/424", "id": 356347337, "node_id": "MDU6SXNzdWUzNTYzNDczMzc=", "number": 424, "title": "Autopep8 don't fix E225:missing whitespace around operator", "user": {"login": "PhungXuanAnh", "id": 22319798, "node_id": "MDQ6VXNlcjIyMzE5Nzk4", "avatar_url": "https://avatars2.githubusercontent.com/u/22319798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PhungXuanAnh", "html_url": "https://github.com/PhungXuanAnh", "followers_url": "https://api.github.com/users/PhungXuanAnh/followers", "following_url": "https://api.github.com/users/PhungXuanAnh/following{/other_user}", "gists_url": "https://api.github.com/users/PhungXuanAnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/PhungXuanAnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PhungXuanAnh/subscriptions", "organizations_url": "https://api.github.com/users/PhungXuanAnh/orgs", "repos_url": "https://api.github.com/users/PhungXuanAnh/repos", "events_url": "https://api.github.com/users/PhungXuanAnh/events{/privacy}", "received_events_url": "https://api.github.com/users/PhungXuanAnh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-03T03:29:24Z", "updated_at": "2018-09-03T04:29:51Z", "closed_at": "2018-09-03T04:29:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try autopep8 on vscode and using command line, but it don't fix [pep8] E225:missing whitespace around operator\r\n\r\nfor example with code\r\na = b+1\r\n\r\nit should change to: a = b + 1", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/415", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/415/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/415/events", "html_url": "https://github.com/hhatto/autopep8/issues/415", "id": 351897425, "node_id": "MDU6SXNzdWUzNTE4OTc0MjU=", "number": 415, "title": "w503 failure", "user": {"login": "delandtj", "id": 5995555, "node_id": "MDQ6VXNlcjU5OTU1NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5995555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/delandtj", "html_url": "https://github.com/delandtj", "followers_url": "https://api.github.com/users/delandtj/followers", "following_url": "https://api.github.com/users/delandtj/following{/other_user}", "gists_url": "https://api.github.com/users/delandtj/gists{/gist_id}", "starred_url": "https://api.github.com/users/delandtj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/delandtj/subscriptions", "organizations_url": "https://api.github.com/users/delandtj/orgs", "repos_url": "https://api.github.com/users/delandtj/repos", "events_url": "https://api.github.com/users/delandtj/events{/privacy}", "received_events_url": "https://api.github.com/users/delandtj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-19T12:02:09Z", "updated_at": "2018-08-30T13:07:27Z", "closed_at": "2018-08-30T13:07:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ncat > x.py << EOF\r\ndef extractBlocks(self):\r\n    addLine = (self.matchMultiple(linesIncludePatterns, line)\r\n       and not self.matchMultiple(linesExcludePatterns, line)) or emptyLine\r\nEOF\r\nautopep8 -a -a -a -v --experimental x.py\r\n```\r\n\r\nfails with the following:\r\n```\r\n[file:x.py]\r\n--->  Applying global fix for E265\r\n--->  Applying global fix for E231\r\n--->  Applying global fix for E721\r\n--->  Applying global fix for W601\r\n--->  Applying global fix for W603\r\n--->  Applying global fix for W604\r\n--->  Applying global fix for W690\r\n--->  2 issue(s) to fix {'W503': {3}, 'E128': {3}}\r\n--->  2 issue(s) to fix {'E501': {3}, 'W503': {3}}\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/autopep8\", line 11, in <module>\r\n    load_entry_point('autopep8', 'console_scripts', 'autopep8')()\r\n  File \"/home/src/autopep8/autopep8.py\", line 3972, in main\r\n    fix_multiple_files(args.files, args, sys.stdout)\r\n  File \"/home/src/autopep8/autopep8.py\", line 3884, in fix_multiple_files\r\n    _fix_file((name, options, output))\r\n  File \"/home/src/autopep8/autopep8.py\", line 3865, in _fix_file\r\n    fix_file(*parameters)\r\n  File \"/home/src/autopep8/autopep8.py\", line 3254, in fix_file\r\n    fixed_source = fix_lines(fixed_source, options, filename=filename)\r\n  File \"/home/src/autopep8/autopep8.py\", line 3234, in fix_lines\r\n    fixed_source = fix.fix()\r\n  File \"/home/src/autopep8/autopep8.py\", line 572, in fix\r\n    aggressive=self.options.aggressive))\r\n  File \"/home/src/autopep8/autopep8.py\", line 514, in _fix_source\r\n    modified_lines = fix(result)\r\n  File \"/home/src/autopep8/autopep8.py\", line 1161, in fix_w503\r\n    one_string_token = target.split()[0]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/414", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/414/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/414/events", "html_url": "https://github.com/hhatto/autopep8/issues/414", "id": 351809720, "node_id": "MDU6SXNzdWUzNTE4MDk3MjA=", "number": 414, "title": "tokenize failing on valid python 3.6 code (W605-related)", "user": {"login": "delandtj", "id": 5995555, "node_id": "MDQ6VXNlcjU5OTU1NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5995555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/delandtj", "html_url": "https://github.com/delandtj", "followers_url": "https://api.github.com/users/delandtj/followers", "following_url": "https://api.github.com/users/delandtj/following{/other_user}", "gists_url": "https://api.github.com/users/delandtj/gists{/gist_id}", "starred_url": "https://api.github.com/users/delandtj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/delandtj/subscriptions", "organizations_url": "https://api.github.com/users/delandtj/orgs", "repos_url": "https://api.github.com/users/delandtj/repos", "events_url": "https://api.github.com/users/delandtj/events{/privacy}", "received_events_url": "https://api.github.com/users/delandtj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-08-18T10:25:25Z", "updated_at": "2018-09-04T00:07:26Z", "closed_at": "2018-09-04T00:07:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "the following code when parsed through autopep8 throws an exception:\r\n```\r\nco = re.compile(\r\n            \"\\(\")\r\n```\r\n\r\n```\r\n  File \"/home/src/autopep8/autopep8.py\", line 3993, in generate_tokens\r\n    tokenize.generate_tokens(string_io.readline)\r\n  File \"/usr/lib/python3.6/tokenize.py\", line 596, in _tokenize\r\n    raise TokenError(\"EOF in multi-line statement\", (lnum, 0))\r\ntokenize.TokenError: ('EOF in multi-line statement', (2, 0))\r\n```\r\n\r\nwhen the bracket inside the quotes is REMOVED, it is accepted.\r\n\r\nwhen the backslash inside the quotes is REMOVED, it is accepted.\r\n\r\nwhen the string is placed on the SAME LINE as the re.compile, it is accepted.\r\n\r\nONLY when these three EXACT conditions combine, tokenize.py will raise an exception.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/411", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/411/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/411/events", "html_url": "https://github.com/hhatto/autopep8/issues/411", "id": 339536649, "node_id": "MDU6SXNzdWUzMzk1MzY2NDk=", "number": 411, "title": "Moving \"and\" statement into a comment. E131 and W503 aggressive 3", "user": {"login": "jack1728", "id": 27445389, "node_id": "MDQ6VXNlcjI3NDQ1Mzg5", "avatar_url": "https://avatars3.githubusercontent.com/u/27445389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jack1728", "html_url": "https://github.com/jack1728", "followers_url": "https://api.github.com/users/jack1728/followers", "following_url": "https://api.github.com/users/jack1728/following{/other_user}", "gists_url": "https://api.github.com/users/jack1728/gists{/gist_id}", "starred_url": "https://api.github.com/users/jack1728/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jack1728/subscriptions", "organizations_url": "https://api.github.com/users/jack1728/orgs", "repos_url": "https://api.github.com/users/jack1728/repos", "events_url": "https://api.github.com/users/jack1728/events{/privacy}", "received_events_url": "https://api.github.com/users/jack1728/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37915105, "node_id": "MDU6TGFiZWwzNzkxNTEwNQ==", "url": "https://api.github.com/repos/hhatto/autopep8/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-07-09T17:16:45Z", "updated_at": "2018-09-04T02:29:21Z", "closed_at": "2018-09-04T02:29:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code:\r\n    y = (\r\n        if a not in c\r\n        # 1234\r\n        and a not in d\r\n    )\r\n\r\nResult:\r\n    y = (\r\n        if a not in c\r\n        # 1234 and\r\n        a not in d\r\n    )\r\n\r\nCommand: \"autopep8 --in-place -aaa\"\r\n\r\nThe \"and\" statement got moved into a commented line of code instead of the previous non-comment line\r\n\r\nautopep8 1.3.5 (pycodestyle: 2.3.1)\r\nPython 3.6.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/410", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/410/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/410/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/410/events", "html_url": "https://github.com/hhatto/autopep8/issues/410", "id": 335456657, "node_id": "MDU6SXNzdWUzMzU0NTY2NTc=", "number": 410, "title": "E113 is not being fixed", "user": {"login": "martemyev", "id": 2182432, "node_id": "MDQ6VXNlcjIxODI0MzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2182432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martemyev", "html_url": "https://github.com/martemyev", "followers_url": "https://api.github.com/users/martemyev/followers", "following_url": "https://api.github.com/users/martemyev/following{/other_user}", "gists_url": "https://api.github.com/users/martemyev/gists{/gist_id}", "starred_url": "https://api.github.com/users/martemyev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martemyev/subscriptions", "organizations_url": "https://api.github.com/users/martemyev/orgs", "repos_url": "https://api.github.com/users/martemyev/repos", "events_url": "https://api.github.com/users/martemyev/events{/privacy}", "received_events_url": "https://api.github.com/users/martemyev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-25T15:27:15Z", "updated_at": "2018-08-21T13:10:08Z", "closed_at": "2018-08-21T13:10:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All,\r\n\r\nHere is the issue I'm seeing:\r\n```\r\n$ cat /Users/mikhail/test.py\r\n    # comment\r\n    a = 1\r\n```\r\n```\r\n$ ./pycodestyle.py /Users/mikhail/test.py\r\n/Users/mikhail/test.py:1:5: E116 unexpected indentation (comment)\r\n/Users/mikhail/test.py:2:5: E113 unexpected indentation\r\n```\r\n\r\n```\r\n$ ./autopep8.py /Users/mikhail/test.py -v\r\n--->  Applying global fix for E265\r\n--->  2 issue(s) to fix {'E116': set([1]), 'E113': set([2])}\r\n--->  3 issue(s) to fix {'E114': set([1]), 'E116': set([1]), 'E113': set([2])}\r\n--->  3 issue(s) to fix {'E114': set([1]), 'E116': set([1]), 'E113': set([2])}\r\n--->  3 issue(s) to fix {'E114': set([1]), 'E116': set([1]), 'E113': set([2])}\r\n--->  1 issue(s) to fix {'E113': set([2])}\r\n# comment\r\n    a = 1\r\n```\r\nI.e. the last line (with error E113) is not fixed. Also, I'm not sure why the meaning of the error in autopep8\r\n```\r\n$ ./autopep8.py --list-fixes | grep E113\r\nE113 - Fix over-indented comments.\r\n```\r\nis different from pycodestyle and, apparently, PEP8:\r\n```\r\nE113 unexpected indentation\r\n```\r\n\r\nThank you!\r\n\r\nP.S. I used the latest versions of pycodestyle and autopep8 for the examples above.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/408", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/408/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/408/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/408/events", "html_url": "https://github.com/hhatto/autopep8/issues/408", "id": 334211205, "node_id": "MDU6SXNzdWUzMzQyMTEyMDU=", "number": 408, "title": "don't separate library names in requirements.txt ", "user": {"login": "PabTorre", "id": 4969082, "node_id": "MDQ6VXNlcjQ5NjkwODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4969082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PabTorre", "html_url": "https://github.com/PabTorre", "followers_url": "https://api.github.com/users/PabTorre/followers", "following_url": "https://api.github.com/users/PabTorre/following{/other_user}", "gists_url": "https://api.github.com/users/PabTorre/gists{/gist_id}", "starred_url": "https://api.github.com/users/PabTorre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PabTorre/subscriptions", "organizations_url": "https://api.github.com/users/PabTorre/orgs", "repos_url": "https://api.github.com/users/PabTorre/repos", "events_url": "https://api.github.com/users/PabTorre/events{/privacy}", "received_events_url": "https://api.github.com/users/PabTorre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-20T19:07:36Z", "updated_at": "2018-06-24T13:30:47Z", "closed_at": "2018-06-22T01:07:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "When running with double aggressive on requirements.txt\r\nthe name of libraries with a hyphen get corrupted with spaces \r\nwhich leads to errors when feeding the requirments file to pip. \r\n\r\nVersion: \r\nautopep8 1.3.5 (pycodestyle: 2.3.1)\r\n\r\n\r\nExpected output: \r\n\r\nshould not separate hyphenated library names with spaces. \r\n\r\n\r\nCurrent output: \r\n\r\nhyphenated library names get separated with spaces \r\n\r\nExample: \r\n\r\n\r\nmake a file requirements.txt with library names containing hyphen \r\nrun autopep8 --aggressive --aggressive \r\n```\r\n$cat requirements.txt\r\nmore-itertools\r\npsycopg2-binary\r\npytest-cov\r\npython-dateutil\r\n$autopep8 --in-place --aggressive --aggressive requirements.txt\r\n$cat requirements.txt\r\nmore - itertools\r\npsycopg2 - binary\r\npytest - cov\r\npython - dateutil\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/407", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/407/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/407/events", "html_url": "https://github.com/hhatto/autopep8/issues/407", "id": 333044222, "node_id": "MDU6SXNzdWUzMzMwNDQyMjI=", "number": 407, "title": "Does not remove the unneccessary semicolon in the end of the line", "user": {"login": "AlexArcPy", "id": 7373268, "node_id": "MDQ6VXNlcjczNzMyNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7373268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexArcPy", "html_url": "https://github.com/AlexArcPy", "followers_url": "https://api.github.com/users/AlexArcPy/followers", "following_url": "https://api.github.com/users/AlexArcPy/following{/other_user}", "gists_url": "https://api.github.com/users/AlexArcPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexArcPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexArcPy/subscriptions", "organizations_url": "https://api.github.com/users/AlexArcPy/orgs", "repos_url": "https://api.github.com/users/AlexArcPy/repos", "events_url": "https://api.github.com/users/AlexArcPy/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexArcPy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-17T08:01:07Z", "updated_at": "2018-09-27T08:47:44Z", "closed_at": "2018-09-27T08:47:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "> >autopep8 --version\r\n> autopep8 1.3.5 (pycodestyle: 2.3.1)\r\n\r\nOddly enough, running `autopep8 --aggressive --aggressive filepath` on a module with the contents:\r\n\r\n```\r\ndef example2(): return {'has_key() is deprecated':True}.has_key({'f':2}.has_key(''));\r\n```\r\n\r\nProduces a line with the semi-colon present in the end of the line.\r\n\r\n```\r\ndef example2(): return ('' in {'f': 2}) in {'has_key() is deprecated': True};\r\n```\r\n\r\nIn the main [docs file](https://github.com/hhatto/autopep8#id3) page the semi-colon is gone, but when I run the same contents, it is still present.\r\n\r\nIs there a way to remove the such redundant semi-colons?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/405", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/405/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/405/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/405/events", "html_url": "https://github.com/hhatto/autopep8/issues/405", "id": 326720336, "node_id": "MDU6SXNzdWUzMjY3MjAzMzY=", "number": 405, "title": "some error in python line style", "user": {"login": "pangge", "id": 3088196, "node_id": "MDQ6VXNlcjMwODgxOTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3088196?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pangge", "html_url": "https://github.com/pangge", "followers_url": "https://api.github.com/users/pangge/followers", "following_url": "https://api.github.com/users/pangge/following{/other_user}", "gists_url": "https://api.github.com/users/pangge/gists{/gist_id}", "starred_url": "https://api.github.com/users/pangge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pangge/subscriptions", "organizations_url": "https://api.github.com/users/pangge/orgs", "repos_url": "https://api.github.com/users/pangge/repos", "events_url": "https://api.github.com/users/pangge/events{/privacy}", "received_events_url": "https://api.github.com/users/pangge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-26T08:13:10Z", "updated_at": "2018-05-26T08:13:16Z", "closed_at": "2018-05-26T08:13:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "todo", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/404", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/404/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/404/events", "html_url": "https://github.com/hhatto/autopep8/issues/404", "id": 325671690, "node_id": "MDU6SXNzdWUzMjU2NzE2OTA=", "number": 404, "title": "E226 missing whitespace around arithmetic operator", "user": {"login": "brupelo", "id": 18058492, "node_id": "MDQ6VXNlcjE4MDU4NDky", "avatar_url": "https://avatars3.githubusercontent.com/u/18058492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brupelo", "html_url": "https://github.com/brupelo", "followers_url": "https://api.github.com/users/brupelo/followers", "following_url": "https://api.github.com/users/brupelo/following{/other_user}", "gists_url": "https://api.github.com/users/brupelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/brupelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brupelo/subscriptions", "organizations_url": "https://api.github.com/users/brupelo/orgs", "repos_url": "https://api.github.com/users/brupelo/repos", "events_url": "https://api.github.com/users/brupelo/events{/privacy}", "received_events_url": "https://api.github.com/users/brupelo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-23T11:54:49Z", "updated_at": "2018-09-01T14:27:17Z", "closed_at": "2018-09-01T14:27:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nboth this snippet:\r\n\r\n    c = {}\r\n    d = []\r\n    for a, b in sorted(c.items()):\r\n        d.append(\"\".format(b+','))\r\n\r\nand this one:\r\n\r\n    c = {}\r\n    d = []\r\n    for a, b in sorted(c.items()):\r\n        d.append(\"\".format(\r\n            b+','\r\n        ))\r\n\r\nwill report:\r\n\r\n    --->  Applying global fix for E265\r\n    --->  0 issue(s) to fix {}\r\n\r\nbut when doing `flake8 tests.py --ignore=E501,E266,F405,F403,E241` I'll get:\r\n\r\n`tests.py:5:10: E226 missing whitespace around arithmetic operator` because `b+','`, any idea how to run autopep to fix errors like this one?\r\n\r\nThanks in advance", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/403", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/403/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/403/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/403/events", "html_url": "https://github.com/hhatto/autopep8/issues/403", "id": 324701965, "node_id": "MDU6SXNzdWUzMjQ3MDE5NjU=", "number": 403, "title": "Multiline string occurs error because of fix_w605", "user": {"login": "seeeturtle", "id": 22187719, "node_id": "MDQ6VXNlcjIyMTg3NzE5", "avatar_url": "https://avatars3.githubusercontent.com/u/22187719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seeeturtle", "html_url": "https://github.com/seeeturtle", "followers_url": "https://api.github.com/users/seeeturtle/followers", "following_url": "https://api.github.com/users/seeeturtle/following{/other_user}", "gists_url": "https://api.github.com/users/seeeturtle/gists{/gist_id}", "starred_url": "https://api.github.com/users/seeeturtle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seeeturtle/subscriptions", "organizations_url": "https://api.github.com/users/seeeturtle/orgs", "repos_url": "https://api.github.com/users/seeeturtle/repos", "events_url": "https://api.github.com/users/seeeturtle/events{/privacy}", "received_events_url": "https://api.github.com/users/seeeturtle/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 815130738, "node_id": "MDU6TGFiZWw4MTUxMzA3Mzg=", "url": "https://api.github.com/repos/hhatto/autopep8/labels/needs%20patch%20in%20pycodestyle", "name": "needs patch in pycodestyle", "color": "e8c87f", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-20T11:24:28Z", "updated_at": "2020-06-01T00:54:57Z", "closed_at": "2020-06-01T00:54:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nfoo('hello '\r\n    '\\world')\r\n```\r\n\r\n```python\r\n>>> code = \"foo('hello '\\n    '\\world')\\n\"\r\n>>> autopep8.fix_code(code, options={'aggressive':1})\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/bumblebee/envs/autopep8-dev/lib/python3.6/site-packages/autopep8-1.4a1-py3.6.egg/autopep8.py\", line 3158, in fix_code\r\n    return fix_lines(sio.readlines(), options=options)\r\n  File \"/home/bumblebee/envs/autopep8-dev/lib/python3.6/site-packages/autopep8-1.4a1-py3.6.egg/autopep8.py\", line 3233, in fix_lines\r\n    fixed_source = fix.fix()\r\n  File \"/home/bumblebee/envs/autopep8-dev/lib/python3.6/site-packages/autopep8-1.4a1-py3.6.egg/autopep8.py\", line 572, in fix\r\n    aggressive=self.options.aggressive))\r\n  File \"/home/bumblebee/envs/autopep8-dev/lib/python3.6/site-packages/autopep8-1.4a1-py3.6.egg/autopep8.py\", line 514, in _fix_source\r\n    modified_lines = fix(result)\r\n  File \"/home/bumblebee/envs/autopep8-dev/lib/python3.6/site-packages/autopep8-1.4a1-py3.6.egg/autopep8.py\", line 1214, in fix_w605\r\n    tokens = list(generate_tokens(target))\r\n  File \"/home/bumblebee/envs/autopep8-dev/lib/python3.6/site-packages/autopep8-1.4a1-py3.6.egg/autopep8.py\", line 3993, in generate_tokens\r\n    tokenize.generate_tokens(string_io.readline)\r\n  File \"/usr/lib/python3.6/tokenize.py\", line 595, in _tokenize\r\n    raise TokenError(\"EOF in multi-line statement\", (lnum, 0))\r\ntokenize.TokenError: ('EOF in multi-line statement', (2, 0))\r\n```\r\nMultiline strings like the above occurs error because of `fix_w605`\r\n\r\npython: 3.6.5\r\nautopep8: 1.4a1 (latest version)\r\npycodestyle: 2.4.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/402", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/402/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/402/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/402/events", "html_url": "https://github.com/hhatto/autopep8/issues/402", "id": 322511137, "node_id": "MDU6SXNzdWUzMjI1MTExMzc=", "number": 402, "title": "Enable E226", "user": {"login": "varalgit", "id": 3208044, "node_id": "MDQ6VXNlcjMyMDgwNDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/3208044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varalgit", "html_url": "https://github.com/varalgit", "followers_url": "https://api.github.com/users/varalgit/followers", "following_url": "https://api.github.com/users/varalgit/following{/other_user}", "gists_url": "https://api.github.com/users/varalgit/gists{/gist_id}", "starred_url": "https://api.github.com/users/varalgit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varalgit/subscriptions", "organizations_url": "https://api.github.com/users/varalgit/orgs", "repos_url": "https://api.github.com/users/varalgit/repos", "events_url": "https://api.github.com/users/varalgit/events{/privacy}", "received_events_url": "https://api.github.com/users/varalgit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-12T13:21:36Z", "updated_at": "2018-08-31T03:12:59Z", "closed_at": "2018-08-31T03:12:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to enable E226 without disabling all other errors; I want to override the default ignoring of this error. Is that possible without the need for enabling all other errors too? I've hacked the script by removing E226 from the DEFAULT_IGNORE string, and it works fine then, but that doesn't feel right :-).\r\n\r\nAm I really the only person who wants spaces around the arithmetic operators without having to type them all the time?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/400", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/400/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/400/events", "html_url": "https://github.com/hhatto/autopep8/issues/400", "id": 320387088, "node_id": "MDU6SXNzdWUzMjAzODcwODg=", "number": 400, "title": "Double-indent does not trigger fix up", "user": {"login": "LiraNuna", "id": 205628, "node_id": "MDQ6VXNlcjIwNTYyOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/205628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LiraNuna", "html_url": "https://github.com/LiraNuna", "followers_url": "https://api.github.com/users/LiraNuna/followers", "following_url": "https://api.github.com/users/LiraNuna/following{/other_user}", "gists_url": "https://api.github.com/users/LiraNuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/LiraNuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LiraNuna/subscriptions", "organizations_url": "https://api.github.com/users/LiraNuna/orgs", "repos_url": "https://api.github.com/users/LiraNuna/repos", "events_url": "https://api.github.com/users/LiraNuna/events{/privacy}", "received_events_url": "https://api.github.com/users/LiraNuna/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-04T18:46:37Z", "updated_at": "2018-09-04T02:49:09Z", "closed_at": "2018-09-04T02:49:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "This code:\r\n\r\n```python\r\ndef test_method(\r\n        param1: int,\r\n        param2: int,\r\n        param3: int,\r\n) -> int:\r\n    return param1 + param2 + param3\r\n```\r\n\r\nDoes not trigger fix up but\r\n\r\n```python\r\ndef test_method(\r\n            param1: int,\r\n            param2: int,\r\n            param3: int,\r\n) -> int:\r\n    return param1 + param2 + param3\r\n```\r\n\r\ndoes.\r\n\r\nIdeal result to both:\r\n\r\n```python\r\ndef test_method(\r\n    param1: int,\r\n    param2: int,\r\n    param3: int,\r\n) -> int:\r\n    return param1 + param2 + param3\r\n```\r\n\r\nNot sure if an issue but an option would be nice to enforce single-indent spacing increments.\r\n\r\nautopep8 1.3.5 \r\npycodestyle: 2.3.1\r\npython 3.6.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/399", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/399/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/399/events", "html_url": "https://github.com/hhatto/autopep8/issues/399", "id": 316459623, "node_id": "MDU6SXNzdWUzMTY0NTk2MjM=", "number": 399, "title": "autopep8 pending when ignore E303", "user": {"login": "willdonggg", "id": 505993, "node_id": "MDQ6VXNlcjUwNTk5Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/505993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willdonggg", "html_url": "https://github.com/willdonggg", "followers_url": "https://api.github.com/users/willdonggg/followers", "following_url": "https://api.github.com/users/willdonggg/following{/other_user}", "gists_url": "https://api.github.com/users/willdonggg/gists{/gist_id}", "starred_url": "https://api.github.com/users/willdonggg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willdonggg/subscriptions", "organizations_url": "https://api.github.com/users/willdonggg/orgs", "repos_url": "https://api.github.com/users/willdonggg/repos", "events_url": "https://api.github.com/users/willdonggg/events{/privacy}", "received_events_url": "https://api.github.com/users/willdonggg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37915105, "node_id": "MDU6TGFiZWwzNzkxNTEwNQ==", "url": "https://api.github.com/repos/hhatto/autopep8/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-21T04:08:26Z", "updated_at": "2018-08-30T08:07:07Z", "closed_at": "2018-08-30T08:07:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "when use autopep8 format the code below with '--ignore E303', the process will be pending and cpu usage will increase to 100%\r\n```\r\n# define move function\r\ndef move_right():\r\n    print('move left')\r\n    return\r\n# define star function\r\n\r\ndef star():\r\n    print('step1: choose one paper')\r\n    print('step2: xxxx')\r\n    print('step3: xxxx')\r\n    print('step4: xxxx')\r\n    print('step5: xxxx')\r\n    print('step6: xxxx')\r\n    return\r\n\r\n\r\n\r\n# move to right place\r\nmove_right()\r\nmove_right()\r\n\r\n# finish star\r\nstar()\r\nstar()\r\n```\r\nautopep8 version:  1.3.5\r\npython version\uff1a3.6.3\r\nos: CentOS 6.8 or macOS Sierra 10.12.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/398", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/398/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/398/events", "html_url": "https://github.com/hhatto/autopep8/issues/398", "id": 314410527, "node_id": "MDU6SXNzdWUzMTQ0MTA1Mjc=", "number": 398, "title": "warning diagnostics (eg W503) cannot be fixed in-place", "user": {"login": "bje-", "id": 4327840, "node_id": "MDQ6VXNlcjQzMjc4NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4327840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bje-", "html_url": "https://github.com/bje-", "followers_url": "https://api.github.com/users/bje-/followers", "following_url": "https://api.github.com/users/bje-/following{/other_user}", "gists_url": "https://api.github.com/users/bje-/gists{/gist_id}", "starred_url": "https://api.github.com/users/bje-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bje-/subscriptions", "organizations_url": "https://api.github.com/users/bje-/orgs", "repos_url": "https://api.github.com/users/bje-/repos", "events_url": "https://api.github.com/users/bje-/events{/privacy}", "received_events_url": "https://api.github.com/users/bje-/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-15T12:16:05Z", "updated_at": "2018-04-16T21:46:57Z", "closed_at": "2018-04-16T21:46:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "`flake8` finds warnings like `W503 line break before binary operator`, but `autopep8` will not correct them:\r\n\r\n````\r\n$ autopep8 --select=W503 --in-place --recursive .\r\n$ git diff\r\n````\r\n(crickets)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/396", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/396/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/396/events", "html_url": "https://github.com/hhatto/autopep8/issues/396", "id": 313526438, "node_id": "MDU6SXNzdWUzMTM1MjY0Mzg=", "number": 396, "title": "error code to keep if statement at the same line", "user": {"login": "JianghanLi", "id": 14610903, "node_id": "MDQ6VXNlcjE0NjEwOTAz", "avatar_url": "https://avatars2.githubusercontent.com/u/14610903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JianghanLi", "html_url": "https://github.com/JianghanLi", "followers_url": "https://api.github.com/users/JianghanLi/followers", "following_url": "https://api.github.com/users/JianghanLi/following{/other_user}", "gists_url": "https://api.github.com/users/JianghanLi/gists{/gist_id}", "starred_url": "https://api.github.com/users/JianghanLi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JianghanLi/subscriptions", "organizations_url": "https://api.github.com/users/JianghanLi/orgs", "repos_url": "https://api.github.com/users/JianghanLi/repos", "events_url": "https://api.github.com/users/JianghanLi/events{/privacy}", "received_events_url": "https://api.github.com/users/JianghanLi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-11T23:45:28Z", "updated_at": "2018-05-07T13:07:26Z", "closed_at": "2018-05-07T13:07:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to keep it like:\r\nIf True: res += 1\r\n\r\ninstead of:\r\nIf True:\r\n   res += 1\r\n\r\nBut I can't find relative error code?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/392", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/392/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/392/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/392/events", "html_url": "https://github.com/hhatto/autopep8/issues/392", "id": 312888061, "node_id": "MDU6SXNzdWUzMTI4ODgwNjE=", "number": 392, "title": "Implicit line breaks within parentheses vs. operators vs. comments ", "user": {"login": "bersbersbers", "id": 12128514, "node_id": "MDQ6VXNlcjEyMTI4NTE0", "avatar_url": "https://avatars1.githubusercontent.com/u/12128514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bersbersbers", "html_url": "https://github.com/bersbersbers", "followers_url": "https://api.github.com/users/bersbersbers/followers", "following_url": "https://api.github.com/users/bersbersbers/following{/other_user}", "gists_url": "https://api.github.com/users/bersbersbers/gists{/gist_id}", "starred_url": "https://api.github.com/users/bersbersbers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bersbersbers/subscriptions", "organizations_url": "https://api.github.com/users/bersbersbers/orgs", "repos_url": "https://api.github.com/users/bersbersbers/repos", "events_url": "https://api.github.com/users/bersbersbers/events{/privacy}", "received_events_url": "https://api.github.com/users/bersbersbers/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37915105, "node_id": "MDU6TGFiZWwzNzkxNTEwNQ==", "url": "https://api.github.com/repos/hhatto/autopep8/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-10T11:49:38Z", "updated_at": "2018-04-10T14:18:54Z", "closed_at": "2018-04-10T14:18:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I do not know how to summarize this briefly, comprehensive, and correctly.\r\n\r\nNon-comprehensively: autopep8 creates improper syntax. Here's an example:\r\n\r\ntest.txt\r\n```\r\nX = (\r\n    1  # 1\r\n    + 2  # 2\r\n    + 3  # 3\r\n    + 4  # 4\r\n    + 5  # 5\r\n    + 6  # 6\r\n    + 7  # 7\r\n)\r\n```\r\n\r\nAnd this is the output:\r\n\r\n```\r\nC:\\>autopep8 --version\r\nautopep8 1.3.5 (pycodestyle: 2.3.1)\r\n\r\nC:\\>autopep8 test.txt -a -a -a\r\nX = (\r\n    1 +  # 1\r\n    2 +  # 2\r\n    3 +  # 3\r\n    4 +  # 4\r\n    5 +  # 5\r\n    6  # 6 +\r\n    7  # 7\r\n)\r\n```\r\nNote the operator between 6 and 7, which has been moved behind the comment \"# 6\".", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/391", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/391/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/391/events", "html_url": "https://github.com/hhatto/autopep8/issues/391", "id": 310900841, "node_id": "MDU6SXNzdWUzMTA5MDA4NDE=", "number": 391, "title": "E225 - ValueError: source code string cannot contain null bytes", "user": {"login": "patvdleer", "id": 1138136, "node_id": "MDQ6VXNlcjExMzgxMzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/1138136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/patvdleer", "html_url": "https://github.com/patvdleer", "followers_url": "https://api.github.com/users/patvdleer/followers", "following_url": "https://api.github.com/users/patvdleer/following{/other_user}", "gists_url": "https://api.github.com/users/patvdleer/gists{/gist_id}", "starred_url": "https://api.github.com/users/patvdleer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/patvdleer/subscriptions", "organizations_url": "https://api.github.com/users/patvdleer/orgs", "repos_url": "https://api.github.com/users/patvdleer/repos", "events_url": "https://api.github.com/users/patvdleer/events{/privacy}", "received_events_url": "https://api.github.com/users/patvdleer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-04-03T16:07:29Z", "updated_at": "2018-09-04T04:13:37Z", "closed_at": "2018-09-04T04:13:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n$ autopep8 -r --in-place src/*\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/autopep8\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python3.6/dist-packages/autopep8.py\", line 3928, in main\r\n    fix_multiple_files(args.files, args, sys.stdout)\r\n  File \"/usr/local/lib/python3.6/dist-packages/autopep8.py\", line 3840, in fix_multiple_files\r\n    _fix_file((name, options, output))\r\n  File \"/usr/local/lib/python3.6/dist-packages/autopep8.py\", line 3821, in _fix_file\r\n    fix_file(*parameters)\r\n  File \"/usr/local/lib/python3.6/dist-packages/autopep8.py\", line 3210, in fix_file\r\n    fixed_source = fix_lines(fixed_source, options, filename=filename)\r\n  File \"/usr/local/lib/python3.6/dist-packages/autopep8.py\", line 3190, in fix_lines\r\n    fixed_source = fix.fix()\r\n  File \"/usr/local/lib/python3.6/dist-packages/autopep8.py\", line 571, in fix\r\n    aggressive=self.options.aggressive))\r\n  File \"/usr/local/lib/python3.6/dist-packages/autopep8.py\", line 513, in _fix_source\r\n    modified_lines = fix(result)\r\n  File \"/usr/local/lib/python3.6/dist-packages/autopep8.py\", line 688, in fix_e225\r\n    if not check_syntax(fixed.lstrip()):\r\n  File \"/usr/local/lib/python3.6/dist-packages/autopep8.py\", line 2908, in check_syntax\r\n    return compile(code, '<string>', 'exec', dont_inherit=True)\r\nValueError: source code string cannot contain null bytes\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/389", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/389/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/389/events", "html_url": "https://github.com/hhatto/autopep8/issues/389", "id": 309699022, "node_id": "MDU6SXNzdWUzMDk2OTkwMjI=", "number": 389, "title": "Does not fix `E265 block comment should start with '# '` when comment starts with non-alphanumeric symbols", "user": {"login": "AlexArcPy", "id": 7373268, "node_id": "MDQ6VXNlcjczNzMyNjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/7373268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexArcPy", "html_url": "https://github.com/AlexArcPy", "followers_url": "https://api.github.com/users/AlexArcPy/followers", "following_url": "https://api.github.com/users/AlexArcPy/following{/other_user}", "gists_url": "https://api.github.com/users/AlexArcPy/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexArcPy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexArcPy/subscriptions", "organizations_url": "https://api.github.com/users/AlexArcPy/orgs", "repos_url": "https://api.github.com/users/AlexArcPy/repos", "events_url": "https://api.github.com/users/AlexArcPy/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexArcPy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-29T10:17:39Z", "updated_at": "2018-03-29T12:40:44Z", "closed_at": "2018-03-29T12:40:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I wonder whether `autopep8` does not move non-alphanumeric symbols one space away from the `#` comment sign by design or this is a bug?\r\n\r\n```python\r\nautopep8.fix_code('#--')\r\nu'#--\\n'\r\nautopep8.fix_code('#a--')\r\nu'# a--\\n'\r\nautopep8.fix_code('#4--')\r\nu'# 4--\\n'\r\n```\r\n\r\nWith exception for the `#`:\r\n\r\n```python\r\nautopep8.fix_code('##--')\r\nu'# --\\n'\r\n```\r\n\r\nMore examples on not digits/letters:\r\n\r\n```python\r\nautopep8.fix_code('#%--')\r\nu'#%--\\n'\r\nautopep8.fix_code('#@--')\r\nu'#@--\\n'\r\nautopep8.fix_code('#^--')\r\nu'#^--\\n'\r\nautopep8.fix_code('#&--')\r\nu'#&--\\n'\r\nautopep8.fix_code('#>--')\r\nu'#>--\\n'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/388", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/388/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/388/events", "html_url": "https://github.com/hhatto/autopep8/issues/388", "id": 307824748, "node_id": "MDU6SXNzdWUzMDc4MjQ3NDg=", "number": 388, "title": "\"not\" moved to wrong \"in\"", "user": {"login": "fordvision", "id": 10038662, "node_id": "MDQ6VXNlcjEwMDM4NjYy", "avatar_url": "https://avatars0.githubusercontent.com/u/10038662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fordvision", "html_url": "https://github.com/fordvision", "followers_url": "https://api.github.com/users/fordvision/followers", "following_url": "https://api.github.com/users/fordvision/following{/other_user}", "gists_url": "https://api.github.com/users/fordvision/gists{/gist_id}", "starred_url": "https://api.github.com/users/fordvision/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fordvision/subscriptions", "organizations_url": "https://api.github.com/users/fordvision/orgs", "repos_url": "https://api.github.com/users/fordvision/repos", "events_url": "https://api.github.com/users/fordvision/events{/privacy}", "received_events_url": "https://api.github.com/users/fordvision/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2018-03-22T21:40:10Z", "updated_at": "2018-03-30T08:24:20Z", "closed_at": "2018-03-30T08:24:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "With 2x aggressive \"-a -a\"\r\n\r\n-    if not 'results' in response and 'message' in response:\r\n\r\nget rewritten to:\r\n\r\n+    if 'results' in response and 'message' not in response:\r\n\r\n```python\r\n>>> response = {1,2}\r\n>>> if not 3 in response and 2 in response:\r\n...   print True\r\nTrue\r\n>>> if 3 in response and 2 not in response:\r\n...   print True\r\n>>> if 3 not in response and 2 in response:\r\n...   print True\r\nTrue\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/387", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/387/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/387/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/387/events", "html_url": "https://github.com/hhatto/autopep8/issues/387", "id": 306087257, "node_id": "MDU6SXNzdWUzMDYwODcyNTc=", "number": 387, "title": "Format multi-line code to fewer lines that fit within --max-line-length characters", "user": {"login": "Jaewan-Yun", "id": 14205022, "node_id": "MDQ6VXNlcjE0MjA1MDIy", "avatar_url": "https://avatars3.githubusercontent.com/u/14205022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jaewan-Yun", "html_url": "https://github.com/Jaewan-Yun", "followers_url": "https://api.github.com/users/Jaewan-Yun/followers", "following_url": "https://api.github.com/users/Jaewan-Yun/following{/other_user}", "gists_url": "https://api.github.com/users/Jaewan-Yun/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jaewan-Yun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jaewan-Yun/subscriptions", "organizations_url": "https://api.github.com/users/Jaewan-Yun/orgs", "repos_url": "https://api.github.com/users/Jaewan-Yun/repos", "events_url": "https://api.github.com/users/Jaewan-Yun/events{/privacy}", "received_events_url": "https://api.github.com/users/Jaewan-Yun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-16T21:50:15Z", "updated_at": "2018-04-03T00:08:30Z", "closed_at": "2018-04-03T00:08:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Refactoring an autopep8 (aggressively) formatted code often leads to shorter logical line lengths. These statements are not automatically concatenated into fewer lines that fit within --max-line-length characters by default. Is there a combination of argument options for autopep8 that formats multi-line code to fewer lines that fit within --max-line-length characters? For example:\r\n\r\n```\r\ndef example1():\r\n    # This is a long comment. This should be wrapped to fit within 72\r\n    # characters.\r\n    some_tuple = (1, 2, 3, 'a')\r\n    some_variable = {\r\n        'long': 'Long code lines should be wrapped within 79 characters.',\r\n        'other': [\r\n            math.pi,\r\n            100,\r\n            200,\r\n            300,\r\n            9876543210,\r\n            'This is a long string that goes on'],\r\n        'more': {\r\n            'inner': 'This whole logical line should be wrapped.',\r\n            some_tuple: [\r\n                1,\r\n                20,\r\n                300,\r\n                40000,\r\n                500000000,\r\n                60000000000000000]}}\r\n    return (some_tuple, some_variable)\r\n```\r\n\r\nrefactored to:\r\n\r\n```\r\ndef example1():\r\n    # This is a long comment. This should be wrapped to fit within 72\r\n    # characters.\r\n    some_tuple = (1, 2, 3, 'a')\r\n    some_variable = {\r\n        'other': [\r\n            math.pi,\r\n            100,\r\n            200,\r\n            300],\r\n        'more': {\r\n            some_tuple: [\r\n                1,\r\n                20,\r\n                300]}}\r\n    return (some_tuple, some_variable)\r\n```\r\n\r\ncontains excessive line splitting that need to be manually rectified for a more concise code as autopep8, by default, does not.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/385", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/385/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/385/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/385/events", "html_url": "https://github.com/hhatto/autopep8/issues/385", "id": 305169720, "node_id": "MDU6SXNzdWUzMDUxNjk3MjA=", "number": 385, "title": "Autopep8 cannot read `.flake8` as configuration file", "user": {"login": "denever", "id": 19746, "node_id": "MDQ6VXNlcjE5NzQ2", "avatar_url": "https://avatars2.githubusercontent.com/u/19746?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denever", "html_url": "https://github.com/denever", "followers_url": "https://api.github.com/users/denever/followers", "following_url": "https://api.github.com/users/denever/following{/other_user}", "gists_url": "https://api.github.com/users/denever/gists{/gist_id}", "starred_url": "https://api.github.com/users/denever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denever/subscriptions", "organizations_url": "https://api.github.com/users/denever/orgs", "repos_url": "https://api.github.com/users/denever/repos", "events_url": "https://api.github.com/users/denever/events{/privacy}", "received_events_url": "https://api.github.com/users/denever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-14T13:59:41Z", "updated_at": "2018-10-02T15:23:13Z", "closed_at": "2018-10-02T15:23:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be useful that autopep8 consider also `.flake8` and `[flake8]` section as configuration sources.\r\n\r\nI've already seen that in master, `[flake8]` is supported. Would be useful to support also `.flake8`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/382", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/382/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/382/events", "html_url": "https://github.com/hhatto/autopep8/issues/382", "id": 301609015, "node_id": "MDU6SXNzdWUzMDE2MDkwMTU=", "number": 382, "title": "Autoformat of boolean equality comparison to True/False could change semantics", "user": {"login": "offlinemark", "id": 2467355, "node_id": "MDQ6VXNlcjI0NjczNTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2467355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/offlinemark", "html_url": "https://github.com/offlinemark", "followers_url": "https://api.github.com/users/offlinemark/followers", "following_url": "https://api.github.com/users/offlinemark/following{/other_user}", "gists_url": "https://api.github.com/users/offlinemark/gists{/gist_id}", "starred_url": "https://api.github.com/users/offlinemark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/offlinemark/subscriptions", "organizations_url": "https://api.github.com/users/offlinemark/orgs", "repos_url": "https://api.github.com/users/offlinemark/repos", "events_url": "https://api.github.com/users/offlinemark/events{/privacy}", "received_events_url": "https://api.github.com/users/offlinemark/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-02T00:19:45Z", "updated_at": "2018-03-22T17:26:07Z", "closed_at": "2018-03-22T17:26:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! Apologies if this is not the correct place for this discussion, but I wanted to inform you about an issue we (https://github.com/trailofbits/manticore) had recently, related to autopep8, that you might want to take into consideration. It is not _necessarily_ a bug.\r\n\r\nautopep8 will simplify boolean equality comparisons to a True/False literal, e.g.\r\n\r\n`var == True` will be formatted to just `var`. However, if `var` is an object which overloads the `==` operator, this autoformat could result in changed semantics for the autoformatted program, depending on the `__eq__` overloading function.\r\n\r\nSpecifically for our use case, we use this style of operator overloading to conveniently create AST-like expression tree data structures. For example, `var == True`, would return an `EqualExpression` object. With the autoformat, this would be simplified to just `var`, which would be incorrect in the context of our project.\r\n\r\nDue to the fact that this autoformat can sometimes cause bugs in the formatted program, perhaps we could consider not enabling this autoformat by default?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/379", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/379/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/379/events", "html_url": "https://github.com/hhatto/autopep8/issues/379", "id": 295124732, "node_id": "MDU6SXNzdWUyOTUxMjQ3MzI=", "number": 379, "title": "can't run autopep8 directly after pip installed it", "user": {"login": "GraceGay", "id": 13695086, "node_id": "MDQ6VXNlcjEzNjk1MDg2", "avatar_url": "https://avatars3.githubusercontent.com/u/13695086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GraceGay", "html_url": "https://github.com/GraceGay", "followers_url": "https://api.github.com/users/GraceGay/followers", "following_url": "https://api.github.com/users/GraceGay/following{/other_user}", "gists_url": "https://api.github.com/users/GraceGay/gists{/gist_id}", "starred_url": "https://api.github.com/users/GraceGay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GraceGay/subscriptions", "organizations_url": "https://api.github.com/users/GraceGay/orgs", "repos_url": "https://api.github.com/users/GraceGay/repos", "events_url": "https://api.github.com/users/GraceGay/events{/privacy}", "received_events_url": "https://api.github.com/users/GraceGay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-07T12:46:55Z", "updated_at": "2018-09-04T04:15:09Z", "closed_at": "2018-09-04T04:15:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "uninstall the package\r\nhaijun@Blackhole:~/ws/frame/concept$ pip uninstall autopep8\r\nUninstalling autopep8-1.3.4:\r\n  /home/haijun/.local/bin/autopep8\r\n  /home/haijun/.local/lib/python2.7/site-packages/autopep8-1.3.4.dist-info/DESCRIPTION.rst\r\n  /home/haijun/.local/lib/python2.7/site-packages/autopep8-1.3.4.dist-info/INSTALLER\r\n  /home/haijun/.local/lib/python2.7/site-packages/autopep8-1.3.4.dist-info/METADATA\r\n  /home/haijun/.local/lib/python2.7/site-packages/autopep8-1.3.4.dist-info/RECORD\r\n  /home/haijun/.local/lib/python2.7/site-packages/autopep8-1.3.4.dist-info/WHEEL\r\n  /home/haijun/.local/lib/python2.7/site-packages/autopep8-1.3.4.dist-info/entry_points.txt\r\n  /home/haijun/.local/lib/python2.7/site-packages/autopep8-1.3.4.dist-info/metadata.json\r\n  /home/haijun/.local/lib/python2.7/site-packages/autopep8-1.3.4.dist-info/top_level.txt\r\n  /home/haijun/.local/lib/python2.7/site-packages/autopep8.py\r\n  /home/haijun/.local/lib/python2.7/site-packages/autopep8.pyc\r\nProceed (y/n)? y\r\n  Successfully uninstalled autopep8-1.3.4\r\nhaijun@Blackhole:~/ws/frame/concept$ pip3 uninstall autopep8\r\nUninstalling autopep8-1.3.4:\r\n  /home/haijun/.local/lib/python3.5/site-packages/__pycache__/autopep8.cpython-35.pyc\r\n  /home/haijun/.local/lib/python3.5/site-packages/autopep8-1.3.4-py3.5.egg-info\r\n  /home/haijun/.local/lib/python3.5/site-packages/autopep8.py\r\nProceed (y/n)? y\r\n  Successfully uninstalled autopep8-1.3.4\r\nReinstall:\r\nhaijun@Blackhole:~/ws/frame/concept$ pip3 install autopep8 --user -I\r\nCollecting autopep8\r\nCollecting pycodestyle>=2.3 (from autopep8)\r\n  Using cached pycodestyle-2.3.1-py2.py3-none-any.whl\r\nInstalling collected packages: pycodestyle, autopep8\r\nSuccessfully installed autopep8-1.3.4 pycodestyle-2.3.1\r\n\r\nhaijun@Blackhole:~/ws/frame/concept$ pip install autopep8 --user -I\r\nCollecting autopep8\r\nCollecting pycodestyle>=2.3 (from autopep8)\r\n  Using cached pycodestyle-2.3.1-py2.py3-none-any.whl\r\nInstalling collected packages: pycodestyle, autopep8\r\nSuccessfully installed autopep8-1.3.4 pycodestyle-2.3.1\r\nhaijun@Blackhole:~/ws/frame/concept$ python --version\r\nPython 2.7.12\r\n\r\nhaijun@Blackhole:~/ws/frame/concept$ autopep8\r\nThe program 'autopep8' is currently not installed. To run 'autopep8' please ask your administrator to install the package 'python-autopep8'\r\nhaijun@Blackhole:~/ws/frame/concept$ lsb_release --all\r\nNo LSB modules are available.\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 16.04.3 LTS\r\nRelease:        16.04\r\nCodename:       xenial\r\n \r\nWhy I still can not run the auropep8 directly?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/378", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/378/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/378/events", "html_url": "https://github.com/hhatto/autopep8/issues/378", "id": 294117917, "node_id": "MDU6SXNzdWUyOTQxMTc5MTc=", "number": 378, "title": "Help - How to use local config file?", "user": {"login": "michaelfresco", "id": 15065392, "node_id": "MDQ6VXNlcjE1MDY1Mzky", "avatar_url": "https://avatars2.githubusercontent.com/u/15065392?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelfresco", "html_url": "https://github.com/michaelfresco", "followers_url": "https://api.github.com/users/michaelfresco/followers", "following_url": "https://api.github.com/users/michaelfresco/following{/other_user}", "gists_url": "https://api.github.com/users/michaelfresco/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelfresco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelfresco/subscriptions", "organizations_url": "https://api.github.com/users/michaelfresco/orgs", "repos_url": "https://api.github.com/users/michaelfresco/repos", "events_url": "https://api.github.com/users/michaelfresco/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelfresco/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-03T15:09:07Z", "updated_at": "2018-03-12T03:43:01Z", "closed_at": "2018-03-12T03:43:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't understand how to use a local config to pass settings to. For example, with flake8 you can have a `.flake8` file which you dump in your project root, and pass settings to like [this](http://flake8.pycqa.org/en/latest/user/configuration.html#configuration-locations):\r\n\r\n    [flake8]\r\n    # ignore = D203\r\n    max-line-length = 99\r\n\r\nHow can I do the same with autopep8? \r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/377", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/377/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/377/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/377/events", "html_url": "https://github.com/hhatto/autopep8/issues/377", "id": 293365605, "node_id": "MDU6SXNzdWUyOTMzNjU2MDU=", "number": 377, "title": "[Errno 13] Permission denied: 'project path'", "user": {"login": "Matuiss2", "id": 31539494, "node_id": "MDQ6VXNlcjMxNTM5NDk0", "avatar_url": "https://avatars1.githubusercontent.com/u/31539494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Matuiss2", "html_url": "https://github.com/Matuiss2", "followers_url": "https://api.github.com/users/Matuiss2/followers", "following_url": "https://api.github.com/users/Matuiss2/following{/other_user}", "gists_url": "https://api.github.com/users/Matuiss2/gists{/gist_id}", "starred_url": "https://api.github.com/users/Matuiss2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Matuiss2/subscriptions", "organizations_url": "https://api.github.com/users/Matuiss2/orgs", "repos_url": "https://api.github.com/users/Matuiss2/repos", "events_url": "https://api.github.com/users/Matuiss2/events{/privacy}", "received_events_url": "https://api.github.com/users/Matuiss2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-01T00:49:04Z", "updated_at": "2018-08-31T03:14:30Z", "closed_at": "2018-08-31T03:14:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im receiving this error (on some of mine projects, not all which make this even more annoying) while trying to use autopep8 on pycharm. Anyone knows how to fix it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/370", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/370/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/370/events", "html_url": "https://github.com/hhatto/autopep8/issues/370", "id": 290201358, "node_id": "MDU6SXNzdWUyOTAyMDEzNTg=", "number": 370, "title": "autopep8.fix_code() adding many new-lines at the end of code", "user": {"login": "kriadmin", "id": 31792358, "node_id": "MDQ6VXNlcjMxNzkyMzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/31792358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kriadmin", "html_url": "https://github.com/kriadmin", "followers_url": "https://api.github.com/users/kriadmin/followers", "following_url": "https://api.github.com/users/kriadmin/following{/other_user}", "gists_url": "https://api.github.com/users/kriadmin/gists{/gist_id}", "starred_url": "https://api.github.com/users/kriadmin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kriadmin/subscriptions", "organizations_url": "https://api.github.com/users/kriadmin/orgs", "repos_url": "https://api.github.com/users/kriadmin/repos", "events_url": "https://api.github.com/users/kriadmin/events{/privacy}", "received_events_url": "https://api.github.com/users/kriadmin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-01-20T15:48:29Z", "updated_at": "2018-01-21T05:20:57Z", "closed_at": "2018-01-21T05:20:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have this code\r\n``` python\r\ndef spread(arg):\r\n    ret = []\r\n    for i in arg:\r\n        if isinstance(i, list):\r\n            ret.extend(i)\r\n        else:\r\n            ret.append(i)\r\n    return ret\r\n\r\n def deep_flatten(arr):\r\n    result = []\r\n    result.extend(spread(list(map(lambda x : deep(x) if type(x) == list else x,arr))))\r\n    return result\r\n```\r\n\r\nI run auto-pep8 and I get this\r\n```py\r\n\r\n\r\n\r\ndef spread(arg):\r\n    ret = []\r\n    for i in arg:\r\n        if isinstance(i, list):\r\n            ret.extend(i)\r\n        else:\r\n            ret.append(i)\r\n    return ret\r\n\r\n def deep_flatten(arr):\r\n    result = []\r\n    result.extend(spread(list(map(lambda x : deep(x) if type(x) == list else x,arr))))\r\n    return result\r\n\r\n```\r\nwhich is the intended result.\r\nBut after running 8-9 times the result  is \r\n\r\n```py\r\n\r\n\r\ndef spread(arg):\r\n    ret = []\r\n    for i in arg:\r\n        if isinstance(i, list):\r\n            ret.extend(i)\r\n        else:\r\n            ret.append(i)\r\n    return ret\r\n\r\n def deep_flatten(arr):\r\n    result = []\r\n    result.extend(spread(list(map(lambda x : deep(x) if type(x) == list else x,arr))))\r\n    return result\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n```\r\n\r\nAnd I have to run autopep8 on my code nearly 10-20 times so this is causing problems for me. It had added 500 lines of code without my knowledge. I think the number of lines added is increasing exponentially. I pasted the whole code because the problem is for this code only not for other codes.\r\n\r\nI use it in the following way ` formatedCode = autopep8.fix_code(code)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/367", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/367/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/367/events", "html_url": "https://github.com/hhatto/autopep8/issues/367", "id": 287272506, "node_id": "MDU6SXNzdWUyODcyNzI1MDY=", "number": 367, "title": "Only format changed code?", "user": {"login": "Storyyeller", "id": 999674, "node_id": "MDQ6VXNlcjk5OTY3NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/999674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Storyyeller", "html_url": "https://github.com/Storyyeller", "followers_url": "https://api.github.com/users/Storyyeller/followers", "following_url": "https://api.github.com/users/Storyyeller/following{/other_user}", "gists_url": "https://api.github.com/users/Storyyeller/gists{/gist_id}", "starred_url": "https://api.github.com/users/Storyyeller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Storyyeller/subscriptions", "organizations_url": "https://api.github.com/users/Storyyeller/orgs", "repos_url": "https://api.github.com/users/Storyyeller/repos", "events_url": "https://api.github.com/users/Storyyeller/events{/privacy}", "received_events_url": "https://api.github.com/users/Storyyeller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-10T00:03:37Z", "updated_at": "2018-01-10T03:31:20Z", "closed_at": "2018-01-10T03:31:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to only format the changed parts of a file? If I have a large amount of legacy code, I only want to format the new parts to avoid creating giant diffs.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/365", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/365/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/365/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/365/events", "html_url": "https://github.com/hhatto/autopep8/issues/365", "id": 281908638, "node_id": "MDU6SXNzdWUyODE5MDg2Mzg=", "number": 365, "title": "Annotated variable names that begin with class emit bad code", "user": {"login": "euresti", "id": 1081858, "node_id": "MDQ6VXNlcjEwODE4NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1081858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euresti", "html_url": "https://github.com/euresti", "followers_url": "https://api.github.com/users/euresti/followers", "following_url": "https://api.github.com/users/euresti/following{/other_user}", "gists_url": "https://api.github.com/users/euresti/gists{/gist_id}", "starred_url": "https://api.github.com/users/euresti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euresti/subscriptions", "organizations_url": "https://api.github.com/users/euresti/orgs", "repos_url": "https://api.github.com/users/euresti/repos", "events_url": "https://api.github.com/users/euresti/events{/privacy}", "received_events_url": "https://api.github.com/users/euresti/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 815130738, "node_id": "MDU6TGFiZWw4MTUxMzA3Mzg=", "url": "https://api.github.com/repos/hhatto/autopep8/labels/needs%20patch%20in%20pycodestyle", "name": "needs patch in pycodestyle", "color": "e8c87f", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-12-13T21:49:15Z", "updated_at": "2019-01-17T01:31:00Z", "closed_at": "2019-01-17T01:30:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is related to https://github.com/PyCQA/pycodestyle/issues/716\r\n\r\n```\r\nclass Foo:\r\n    classification: int\r\n    definition: int\r\n    _def: int\r\n    _class: int\r\n\r\n\r\ndef foo():\r\n    class_foo: int\r\n    def_value: int\r\n```\r\n\r\nresults in \r\n```\r\nclass Foo:\r\n    classification:\r\n        int\r\n    definition: int\r\n    _def: int\r\n    _class: int\r\n\r\n\r\ndef foo():\r\n    class_foo:\r\n        int\r\n    def_value: int\r\n```\r\n\r\n\r\nWeird that `def` isn't affected.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/364", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/364/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/364/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/364/events", "html_url": "https://github.com/hhatto/autopep8/issues/364", "id": 279280438, "node_id": "MDU6SXNzdWUyNzkyODA0Mzg=", "number": 364, "title": "E702 fixes code incorrectly", "user": {"login": "ancc", "id": 5238948, "node_id": "MDQ6VXNlcjUyMzg5NDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5238948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ancc", "html_url": "https://github.com/ancc", "followers_url": "https://api.github.com/users/ancc/followers", "following_url": "https://api.github.com/users/ancc/following{/other_user}", "gists_url": "https://api.github.com/users/ancc/gists{/gist_id}", "starred_url": "https://api.github.com/users/ancc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ancc/subscriptions", "organizations_url": "https://api.github.com/users/ancc/orgs", "repos_url": "https://api.github.com/users/ancc/repos", "events_url": "https://api.github.com/users/ancc/events{/privacy}", "received_events_url": "https://api.github.com/users/ancc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 37915105, "node_id": "MDU6TGFiZWwzNzkxNTEwNQ==", "url": "https://api.github.com/repos/hhatto/autopep8/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/hhatto/autopep8/milestones/7", "html_url": "https://github.com/hhatto/autopep8/milestone/7", "labels_url": "https://api.github.com/repos/hhatto/autopep8/milestones/7/labels", "id": 5290468, "node_id": "MDk6TWlsZXN0b25lNTI5MDQ2OA==", "number": 7, "title": "1.5.2", "description": "", "creator": {"login": "hhatto", "id": 150309, "node_id": "MDQ6VXNlcjE1MDMwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/150309?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhatto", "html_url": "https://github.com/hhatto", "followers_url": "https://api.github.com/users/hhatto/followers", "following_url": "https://api.github.com/users/hhatto/following{/other_user}", "gists_url": "https://api.github.com/users/hhatto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhatto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhatto/subscriptions", "organizations_url": "https://api.github.com/users/hhatto/orgs", "repos_url": "https://api.github.com/users/hhatto/repos", "events_url": "https://api.github.com/users/hhatto/events{/privacy}", "received_events_url": "https://api.github.com/users/hhatto/received_events", "type": "User", "site_admin": false}, "open_issues": 0, "closed_issues": 7, "state": "closed", "created_at": "2020-04-09T01:24:35Z", "updated_at": "2020-05-19T10:03:25Z", "due_on": "2020-04-18T07:00:00Z", "closed_at": "2020-05-19T10:03:25Z"}, "comments": 2, "created_at": "2017-12-05T08:02:48Z", "updated_at": "2020-04-11T13:27:20Z", "closed_at": "2020-04-11T13:26:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "autopep8 version 1.3.3\r\nWith following code:\r\n```\r\nfor i in range(3):\r\n    if i == 1: print i;continue\r\n    print i\r\n```\r\n\r\noutput is:\r\n0\r\n1\r\n2\r\n\r\nafter running\r\nautopep8 -i --select=E702\r\n\r\ncode will be\r\n\r\n```\r\nfor i in range(3):\r\n    if i == 1: print i\r\n    continue\r\n    print i\r\n```\r\n\r\nand output is\r\n1\r\n\r\ncorrect is\r\n\r\n```\r\nfor i in range(3):\r\n    if i == 1: print i\r\n        continue\r\n    print i\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/363", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/363/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/363/events", "html_url": "https://github.com/hhatto/autopep8/issues/363", "id": 278816437, "node_id": "MDU6SXNzdWUyNzg4MTY0Mzc=", "number": 363, "title": "Atom Beautify not working because not finding autopep8.", "user": {"login": "bramvana", "id": 24454138, "node_id": "MDQ6VXNlcjI0NDU0MTM4", "avatar_url": "https://avatars1.githubusercontent.com/u/24454138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bramvana", "html_url": "https://github.com/bramvana", "followers_url": "https://api.github.com/users/bramvana/followers", "following_url": "https://api.github.com/users/bramvana/following{/other_user}", "gists_url": "https://api.github.com/users/bramvana/gists{/gist_id}", "starred_url": "https://api.github.com/users/bramvana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bramvana/subscriptions", "organizations_url": "https://api.github.com/users/bramvana/orgs", "repos_url": "https://api.github.com/users/bramvana/repos", "events_url": "https://api.github.com/users/bramvana/events{/privacy}", "received_events_url": "https://api.github.com/users/bramvana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-03T20:24:52Z", "updated_at": "2018-09-21T17:08:04Z", "closed_at": "2018-09-01T14:44:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "![autopep8](https://user-images.githubusercontent.com/24454138/33529222-ffe0a464-d86d-11e7-88ba-29a01c0a2e36.png)\r\n\r\nFollowed instruction in error, went and did this: pip install --upgrade autopep8\r\nSome autopep8 files ended up here:\r\nC:\\Users\\MyNameHere\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts\r\n\r\nPython (which has the pip command) installs itself in:\r\nC:\\Users\\MyNameHere\\AppData\\Local\\Programs\\Python\r\n\r\nAtom, for some reason here:\r\nC:\\Users\\MyNameHere\\AppData\\Local\\atom\r\n\r\nThere's more stuff right here:\r\nC:\\Users\\MyNameHere\\.atom\\\r\n\r\nWhich appears to be where beautify installs itself:\r\nC:\\Users\\MyNameHere\\.atom\\packages\\atom-beautify\r\n\r\nWhy is all this stuff in unpredictable places? Why not, like all other applications, C:\\Program Files?\r\n\r\nAnd how do I solve the error?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/362", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/362/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/362/events", "html_url": "https://github.com/hhatto/autopep8/issues/362", "id": 277366021, "node_id": "MDU6SXNzdWUyNzczNjYwMjE=", "number": 362, "title": "yapf glitch with long function annotation", "user": {"login": "gsemet", "id": 133498, "node_id": "MDQ6VXNlcjEzMzQ5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/133498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsemet", "html_url": "https://github.com/gsemet", "followers_url": "https://api.github.com/users/gsemet/followers", "following_url": "https://api.github.com/users/gsemet/following{/other_user}", "gists_url": "https://api.github.com/users/gsemet/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsemet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsemet/subscriptions", "organizations_url": "https://api.github.com/users/gsemet/orgs", "repos_url": "https://api.github.com/users/gsemet/repos", "events_url": "https://api.github.com/users/gsemet/events{/privacy}", "received_events_url": "https://api.github.com/users/gsemet/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-28T12:25:08Z", "updated_at": "2017-11-28T12:26:30Z", "closed_at": "2017-11-28T12:26:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello\r\nI saw today a small issue on yapf 0.20.0 when the return type is specified and very long:\r\n\r\nHere is the configuration:\r\n```\r\n[style]\r\nbased_on_style = pep8\r\n\r\n; knobs\r\nalign_closing_bracket_with_visual_indent = true\r\nblank_line_before_class_docstring= true\r\nblank_line_before_nested_class_or_def = true\r\ncoalesce_brackets = true\r\ncolumn_limit = 100\r\ndedent_closing_brackets = false\r\nindent_dictionary_value = true\r\nspaces_around_power_operator = false\r\nspaces_before_comment = 2\r\nsplit_before_first_argument= false\r\nsplit_before_logical_operator = false\r\nsplit_penalty_after_opening_bracket = 1000\r\n```\r\n\r\nCode is rendered as:\r\n```\r\nfrom typing import List\r\n\r\n\r\ndef a_very_long_function_name(self, any_arg: List[MyWonderWonderfulComplexName]\r\n                              ) -> List[MyWonderWonderfulComplexName]:\r\n    pass\r\n```\r\npylint then complain:\r\n```\r\ntest.py:8 Wrong continued indentation (remove 1 space).\r\n                              ) -> List[MyWonderWonderfulComplexName]:\r\n                             |^ [bad-continuation]\r\n```\r\nWhen there is an argument, yes an extra space is needed, but if no parameter is in the \r\nsame line than the closing parenthesis, we don't want the extra space", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/361", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/361/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/361/events", "html_url": "https://github.com/hhatto/autopep8/issues/361", "id": 273990779, "node_id": "MDU6SXNzdWUyNzM5OTA3Nzk=", "number": 361, "title": "New flag that applies --indent-size to continuation indents for data literals ", "user": {"login": "CMLivingston", "id": 12532471, "node_id": "MDQ6VXNlcjEyNTMyNDcx", "avatar_url": "https://avatars1.githubusercontent.com/u/12532471?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CMLivingston", "html_url": "https://github.com/CMLivingston", "followers_url": "https://api.github.com/users/CMLivingston/followers", "following_url": "https://api.github.com/users/CMLivingston/following{/other_user}", "gists_url": "https://api.github.com/users/CMLivingston/gists{/gist_id}", "starred_url": "https://api.github.com/users/CMLivingston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CMLivingston/subscriptions", "organizations_url": "https://api.github.com/users/CMLivingston/orgs", "repos_url": "https://api.github.com/users/CMLivingston/repos", "events_url": "https://api.github.com/users/CMLivingston/events{/privacy}", "received_events_url": "https://api.github.com/users/CMLivingston/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-15T00:19:13Z", "updated_at": "2017-11-20T18:58:04Z", "closed_at": "2017-11-20T18:58:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a codebase that uses Python to configure application monitoring objects. We find ourselves defining large data literals (namely arrays) of these mon objects and strings. We would like to keep continuation indents on multiline constructs/data literals consistent with the indent size set by the `--indent-size` flag. Our specific goal is to maintain an indent of 2 spaces throughout the codebase. An example below: \r\n```\r\ndata = [\r\n  ObjectWithLongParams(\r\n    param1=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r\n    param2=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r\n    param3={\r\n      'longstring1',\r\n      'longstring2',\r\n    }\r\n  ),\r\n  ObjectWithLongParams(\r\n    param1=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r\n    param2=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r\n    param3={\r\n      'longstring1',\r\n      'longstring2',\r\n    }\r\n  )\r\n]\r\n```\r\ngets indented to:\r\n```\r\ndata = [\r\n    ObjectWithLongParams(\r\n        param1=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r\n        param2=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r\n        param3={\r\n            'longstring1',\r\n            'longstring2',\r\n        }\r\n    ),\r\n    ObjectWithLongParams(\r\n        param1=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r\n        param2=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\r\n        param3={\r\n            'longstring1',\r\n            'longstring2',\r\n        }\r\n    )\r\n]\r\n```\r\nFunction bodies and conditional statements respect the `--indent-size` value (2 spaces for us) but re-indents like the above example over-indent to four spaces. My proposed solution is to add support for a flag that allows the application of `--indent-size` to these continuation indents. I checked pycodestyle and tried to find a PEP8 code to exclude for this and had no luck. I am using version: `autopep8 1.3.3 (pycodestyle: 2.3.1)`. I am happy to contribute if there is no existing solution and no developer time for this change. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/356", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/356/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/356/events", "html_url": "https://github.com/hhatto/autopep8/issues/356", "id": 269620756, "node_id": "MDU6SXNzdWUyNjk2MjA3NTY=", "number": 356, "title": "inline (Python 2 style) type annotation wrongly formatted", "user": {"login": "sfermigier", "id": 271079, "node_id": "MDQ6VXNlcjI3MTA3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/271079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfermigier", "html_url": "https://github.com/sfermigier", "followers_url": "https://api.github.com/users/sfermigier/followers", "following_url": "https://api.github.com/users/sfermigier/following{/other_user}", "gists_url": "https://api.github.com/users/sfermigier/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfermigier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfermigier/subscriptions", "organizations_url": "https://api.github.com/users/sfermigier/orgs", "repos_url": "https://api.github.com/users/sfermigier/repos", "events_url": "https://api.github.com/users/sfermigier/events{/privacy}", "received_events_url": "https://api.github.com/users/sfermigier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-10-30T14:31:05Z", "updated_at": "2018-09-01T14:54:34Z", "closed_at": "2018-09-01T14:54:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Autopep8 wrongly formats some type annotations, but only when `--ignore` is used:\r\n\r\nExample:\r\n\r\n```\r\n\u279c  cat bar.py\r\ndef sync_ca_rh(self, partenaire):\r\n    infos_d = {}\r\n    business_infos = partenaire.business_infos  # type: List[PartenaireBusinessInfo]\r\n\u279c  autopep8 -d --ignore E711 bar.py\r\n--- original/bar.py\r\n+++ fixed/bar.py\r\n@@ -1,3 +1,4 @@\r\n def sync_ca_rh(self, partenaire):\r\n     infos_d = {}\r\n-    business_infos = partenaire.business_infos  # type: List[PartenaireBusinessInfo]\r\n+    # type: List[PartenaireBusinessInfo]\r\n+    business_infos = partenaire.business_infos\r\n\u279c  autopep8 -d bar.py\r\n\u279c  \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/353", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/353/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/353/events", "html_url": "https://github.com/hhatto/autopep8/issues/353", "id": 267774856, "node_id": "MDU6SXNzdWUyNjc3NzQ4NTY=", "number": 353, "title": "KeyError: u'count getting started?", "user": {"login": "cggaurav", "id": 84106, "node_id": "MDQ6VXNlcjg0MTA2", "avatar_url": "https://avatars0.githubusercontent.com/u/84106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cggaurav", "html_url": "https://github.com/cggaurav", "followers_url": "https://api.github.com/users/cggaurav/followers", "following_url": "https://api.github.com/users/cggaurav/following{/other_user}", "gists_url": "https://api.github.com/users/cggaurav/gists{/gist_id}", "starred_url": "https://api.github.com/users/cggaurav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cggaurav/subscriptions", "organizations_url": "https://api.github.com/users/cggaurav/orgs", "repos_url": "https://api.github.com/users/cggaurav/repos", "events_url": "https://api.github.com/users/cggaurav/events{/privacy}", "received_events_url": "https://api.github.com/users/cggaurav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-23T18:43:18Z", "updated_at": "2017-10-24T06:01:57Z", "closed_at": "2017-10-24T06:01:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n(x) \u2601  services [master] \u26a1 autopep8 --in-place --aggressive --aggressive image_precheck.py\r\nTraceback (most recent call last):\r\n  File \"/x/bin/autopep8\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/x/lib/python2.7/site-packages/autopep8.py\", line 3858, in main\r\n    args = parse_args(argv[1:], apply_config=apply_config)\r\n  File \"/x/lib/python2.7/site-packages/autopep8.py\", line 3358, in parse_args\r\n    parser = read_config(args, parser)\r\n  File \"/x/lib/python2.7/site-packages/autopep8.py\", line 3457, in read_config\r\n    opt_type = option_list[norm_opt]\r\nKeyError: u'count'``\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/351", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/351/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/351/events", "html_url": "https://github.com/hhatto/autopep8/issues/351", "id": 264508242, "node_id": "MDU6SXNzdWUyNjQ1MDgyNDI=", "number": 351, "title": "Only first line is held in multiple-line raises statements", "user": {"login": "mirkocoric", "id": 14822000, "node_id": "MDQ6VXNlcjE0ODIyMDAw", "avatar_url": "https://avatars2.githubusercontent.com/u/14822000?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mirkocoric", "html_url": "https://github.com/mirkocoric", "followers_url": "https://api.github.com/users/mirkocoric/followers", "following_url": "https://api.github.com/users/mirkocoric/following{/other_user}", "gists_url": "https://api.github.com/users/mirkocoric/gists{/gist_id}", "starred_url": "https://api.github.com/users/mirkocoric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mirkocoric/subscriptions", "organizations_url": "https://api.github.com/users/mirkocoric/orgs", "repos_url": "https://api.github.com/users/mirkocoric/repos", "events_url": "https://api.github.com/users/mirkocoric/events{/privacy}", "received_events_url": "https://api.github.com/users/mirkocoric/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-11T09:02:50Z", "updated_at": "2017-10-13T15:29:18Z", "closed_at": "2017-10-13T15:27:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "autopep8 1.3.3 (pycodestyle: 2.3.1), python 2.7.13\r\n\r\nSimple input:\r\n```\r\nraise (ValueError\r\n          if var else TypeError)\r\nraise (ValueError(\"THIS IS A LONG \"\r\n                              \"MESSAGE\"))\r\n```\r\n\r\nExpected output: same as input\r\n\r\nAfter:\r\n```\r\nautopep8 --recursive --in-place --aggressive --aggressive bug_report.py\r\ngenerated output is:\r\nraise ValueError\r\nraise ValueError\r\n```\r\n(second line is removed which changes function behaviour)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/349", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/349/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/349/events", "html_url": "https://github.com/hhatto/autopep8/issues/349", "id": 261301115, "node_id": "MDU6SXNzdWUyNjEzMDExMTU=", "number": 349, "title": "Visual Studio Code for OSX does not find autopep8", "user": {"login": "danquack", "id": 25692880, "node_id": "MDQ6VXNlcjI1NjkyODgw", "avatar_url": "https://avatars2.githubusercontent.com/u/25692880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danquack", "html_url": "https://github.com/danquack", "followers_url": "https://api.github.com/users/danquack/followers", "following_url": "https://api.github.com/users/danquack/following{/other_user}", "gists_url": "https://api.github.com/users/danquack/gists{/gist_id}", "starred_url": "https://api.github.com/users/danquack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danquack/subscriptions", "organizations_url": "https://api.github.com/users/danquack/orgs", "repos_url": "https://api.github.com/users/danquack/repos", "events_url": "https://api.github.com/users/danquack/events{/privacy}", "received_events_url": "https://api.github.com/users/danquack/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-09-28T12:30:55Z", "updated_at": "2018-09-02T13:27:58Z", "closed_at": "2018-09-02T13:27:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if this is a bug for anyone else, or for visual studio code, but upon pip install autopep8 is not detected. Manual entry of bin path doesn't allow for formatting. Formatting does work in the CLI.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/346", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/346/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/346/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/346/events", "html_url": "https://github.com/hhatto/autopep8/issues/346", "id": 257558307, "node_id": "MDU6SXNzdWUyNTc1NTgzMDc=", "number": 346, "title": "IndexError: string index out of range", "user": {"login": "fcastilloec", "id": 1280530, "node_id": "MDQ6VXNlcjEyODA1MzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1280530?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fcastilloec", "html_url": "https://github.com/fcastilloec", "followers_url": "https://api.github.com/users/fcastilloec/followers", "following_url": "https://api.github.com/users/fcastilloec/following{/other_user}", "gists_url": "https://api.github.com/users/fcastilloec/gists{/gist_id}", "starred_url": "https://api.github.com/users/fcastilloec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fcastilloec/subscriptions", "organizations_url": "https://api.github.com/users/fcastilloec/orgs", "repos_url": "https://api.github.com/users/fcastilloec/repos", "events_url": "https://api.github.com/users/fcastilloec/events{/privacy}", "received_events_url": "https://api.github.com/users/fcastilloec/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-09-14T00:17:04Z", "updated_at": "2017-10-13T04:53:22Z", "closed_at": "2017-10-13T04:53:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to run `autopep8` on my file and this is the output I get:\r\n\r\n```\r\n[file:movieConverter_general.py]\r\n--->  Applying global fix for E265\r\n--->  Applying global fix for W602\r\n--->  161 issue(s) to fix {u'E201': set([32, 113, 234, 123, 71]), u'E203': set([229]), u'E202': set([32, 113, 210, 123, 220]), 'E226': set([149, 150, 152, 156, 159, 160, 164, 171, 201, 202, 204, 208, 209, 210, 213, 214, 218, 219, 220, 95, 96, 97, 228, 229]), u'E211': set([12]), u'E127': set([67, 59, 63]), 'E501': set([129, 135, 140, 143, 19, 34, 171, 175, 189, 196, 76, 82, 84, 88, 89, 228, 229, 106, 238, 239, 116, 118, 249]), 'E265': set([129, 34, 19, 76, 118]), 'E261': set([224, 99, 231, 173, 167]), u'E231': set([135, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 106, 107, 113, 116]), 'E302': set([16, 35, 12, 21, 14]), 'E303': set([194]), 'E305': set([78]), u'E129': set([140])}\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/autopep8\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python2.7/dist-packages/autopep8.py\", line 3811, in main\r\n    fix_multiple_files(args.files, args, sys.stdout)\r\n  File \"/usr/local/lib/python2.7/dist-packages/autopep8.py\", line 3723, in fix_multiple_files\r\n    _fix_file((name, options, output))\r\n  File \"/usr/local/lib/python2.7/dist-packages/autopep8.py\", line 3704, in _fix_file\r\n    fix_file(*parameters)\r\n  File \"/usr/local/lib/python2.7/dist-packages/autopep8.py\", line 3104, in fix_file\r\n    fixed_source = fix_lines(fixed_source, options, filename=filename)\r\n  File \"/usr/local/lib/python2.7/dist-packages/autopep8.py\", line 3084, in fix_lines\r\n    fixed_source = fix.fix()\r\n  File \"/usr/local/lib/python2.7/dist-packages/autopep8.py\", line 564, in fix\r\n    aggressive=self.options.aggressive))\r\n  File \"/usr/local/lib/python2.7/dist-packages/autopep8.py\", line 507, in _fix_source\r\n    modified_lines = fix(result)\r\n  File \"/usr/local/lib/python2.7/dist-packages/autopep8.py\", line 872, in fix_long_line_physically\r\n    original=target)\r\n  File \"/usr/local/lib/python2.7/dist-packages/autopep8.py\", line 903, in fix_long_line\r\n    verbose=self.options.verbose)\r\n  File \"/usr/local/lib/python2.7/dist-packages/autopep8.py\", line 1166, in get_fixed_long_line\r\n    key=lambda x: line_shortening_rank(\r\n  File \"/usr/local/lib/python2.7/dist-packages/autopep8.py\", line 1170, in <lambda>\r\n    experimental=experimental))\r\n  File \"/usr/local/lib/python2.7/dist-packages/autopep8.py\", line 3465, in line_shortening_rank\r\n    lines[0].rstrip()[-1] not in '([{'\r\nIndexError: string index out of range\r\n```\r\n\r\nI've tried to look everywhere what's going on, but I haven't found any answers.\r\nHere's the version of my packages:\r\n`autopep8 1.3.2 (pycodestyle: 2.3.1)`\r\n`pep8 1.7.0`\r\n\r\nI'm using Ubuntu 16.04, and as the versions show, I install the packages using `pip`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/345", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/345/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/345/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/345/events", "html_url": "https://github.com/hhatto/autopep8/issues/345", "id": 255019423, "node_id": "MDU6SXNzdWUyNTUwMTk0MjM=", "number": 345, "title": "Provide a way to skip formatting on the whole file", "user": {"login": "fabioz", "id": 117621, "node_id": "MDQ6VXNlcjExNzYyMQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/117621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabioz", "html_url": "https://github.com/fabioz", "followers_url": "https://api.github.com/users/fabioz/followers", "following_url": "https://api.github.com/users/fabioz/following{/other_user}", "gists_url": "https://api.github.com/users/fabioz/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabioz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabioz/subscriptions", "organizations_url": "https://api.github.com/users/fabioz/orgs", "repos_url": "https://api.github.com/users/fabioz/repos", "events_url": "https://api.github.com/users/fabioz/events{/privacy}", "received_events_url": "https://api.github.com/users/fabioz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-04T11:53:22Z", "updated_at": "2018-02-04T04:39:35Z", "closed_at": "2018-02-04T04:39:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'd like to know if it would be possible to provide a marker in the document to skip formatting on the whole file.\r\n\r\n`isort` has a feature where putting a comment with `isort:skip_file` to the file makes the formatting not be applied, ideally I'd like to have something as `autopep8:skip_file` too (although any other marker would do too).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/hhatto/autopep8/issues/340", "repository_url": "https://api.github.com/repos/hhatto/autopep8", "labels_url": "https://api.github.com/repos/hhatto/autopep8/issues/340/labels{/name}", "comments_url": "https://api.github.com/repos/hhatto/autopep8/issues/340/comments", "events_url": "https://api.github.com/repos/hhatto/autopep8/issues/340/events", "html_url": "https://github.com/hhatto/autopep8/issues/340", "id": 245361670, "node_id": "MDU6SXNzdWUyNDUzNjE2NzA=", "number": 340, "title": "Function annotations with defaults are incorrectly changed", "user": {"login": "vdboor", "id": 200303, "node_id": "MDQ6VXNlcjIwMDMwMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/200303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdboor", "html_url": "https://github.com/vdboor", "followers_url": "https://api.github.com/users/vdboor/followers", "following_url": "https://api.github.com/users/vdboor/following{/other_user}", "gists_url": "https://api.github.com/users/vdboor/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdboor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdboor/subscriptions", "organizations_url": "https://api.github.com/users/vdboor/orgs", "repos_url": "https://api.github.com/users/vdboor/repos", "events_url": "https://api.github.com/users/vdboor/events{/privacy}", "received_events_url": "https://api.github.com/users/vdboor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-07-25T10:49:20Z", "updated_at": "2018-09-02T13:31:07Z", "closed_at": "2018-09-02T13:31:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "PEP 484 changes function annotations to include spaces.\r\n\r\nThus, the following syntax is correct:\r\n\r\n```\r\ndef foo(value: Optional[str] = None):\r\n    pass\r\n```\r\n\r\nautopep8 wants to remove the extra spaces however:\r\n\r\n```\r\ndef foo(value: Optional[str]=None):\r\n    pass\r\n```", "performed_via_github_app": null, "score": 1.0}]}