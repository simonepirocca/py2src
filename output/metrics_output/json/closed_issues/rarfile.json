{"total_count": 40, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/markokr/rarfile/issues/62", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/62/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/62/events", "html_url": "https://github.com/markokr/rarfile/issues/62", "id": 674304795, "node_id": "MDU6SXNzdWU2NzQzMDQ3OTU=", "number": 62, "title": "Some tests fail with python 3.6.5", "user": {"login": "lgbaldoni", "id": 1450716, "node_id": "MDQ6VXNlcjE0NTA3MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgbaldoni", "html_url": "https://github.com/lgbaldoni", "followers_url": "https://api.github.com/users/lgbaldoni/followers", "following_url": "https://api.github.com/users/lgbaldoni/following{/other_user}", "gists_url": "https://api.github.com/users/lgbaldoni/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgbaldoni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgbaldoni/subscriptions", "organizations_url": "https://api.github.com/users/lgbaldoni/orgs", "repos_url": "https://api.github.com/users/lgbaldoni/repos", "events_url": "https://api.github.com/users/lgbaldoni/events{/privacy}", "received_events_url": "https://api.github.com/users/lgbaldoni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-06T13:14:24Z", "updated_at": "2020-08-06T15:56:26Z", "closed_at": "2020-08-06T15:56:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "On openSUSE Leap 15.1.\r\nUnsure if the python version is the actual culprit, everything works with 3.6.10 and 3.8.x.\r\n\r\nAnyway here's the [log](https://github.com/markokr/rarfile/files/5034952/rarfile4_leap151.txt).\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/61", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/61/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/61/events", "html_url": "https://github.com/markokr/rarfile/issues/61", "id": 671836639, "node_id": "MDU6SXNzdWU2NzE4MzY2Mzk=", "number": 61, "title": "\"Cannot find working tool\" on V4.0", "user": {"login": "zhbzhbzhbz", "id": 4599992, "node_id": "MDQ6VXNlcjQ1OTk5OTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4599992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhbzhbzhbz", "html_url": "https://github.com/zhbzhbzhbz", "followers_url": "https://api.github.com/users/zhbzhbzhbz/followers", "following_url": "https://api.github.com/users/zhbzhbzhbz/following{/other_user}", "gists_url": "https://api.github.com/users/zhbzhbzhbz/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhbzhbzhbz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhbzhbzhbz/subscriptions", "organizations_url": "https://api.github.com/users/zhbzhbzhbz/orgs", "repos_url": "https://api.github.com/users/zhbzhbzhbz/repos", "events_url": "https://api.github.com/users/zhbzhbzhbz/events{/privacy}", "received_events_url": "https://api.github.com/users/zhbzhbzhbz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-08-03T06:43:32Z", "updated_at": "2020-08-04T02:12:50Z", "closed_at": "2020-08-03T16:07:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "After I saw \"**Removing dependency on unrar for extract, thus making maintenance of alternative backends more manageable.**\" in the Release News,\r\n  \r\nI joyfully removed the code `rarfile.UNRAR_TOOL=/**/**/UnRAR.exe`. \r\n\r\nBut I got the error \"**Cannot find working tool**\".\r\n\r\nSo what does \"Removing dependency on unrar for extract\" exactly means? Thanks~", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/58", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/58/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/58/events", "html_url": "https://github.com/markokr/rarfile/issues/58", "id": 499085194, "node_id": "MDU6SXNzdWU0OTkwODUxOTQ=", "number": 58, "title": "Include Rar3 volume number ", "user": {"login": "Safihre", "id": 5703454, "node_id": "MDQ6VXNlcjU3MDM0NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5703454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Safihre", "html_url": "https://github.com/Safihre", "followers_url": "https://api.github.com/users/Safihre/followers", "following_url": "https://api.github.com/users/Safihre/following{/other_user}", "gists_url": "https://api.github.com/users/Safihre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Safihre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Safihre/subscriptions", "organizations_url": "https://api.github.com/users/Safihre/orgs", "repos_url": "https://api.github.com/users/Safihre/repos", "events_url": "https://api.github.com/users/Safihre/events{/privacy}", "received_events_url": "https://api.github.com/users/Safihre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-26T19:55:26Z", "updated_at": "2020-07-20T17:37:58Z", "closed_at": "2020-07-20T17:27:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "We (me and @sanderjo) were very happy to see your activity here again!\r\nAnd now you also added a way to actually retrieve the volume number from Rar5 files. \r\nCould you implement the same for Rar3? It would be very useful for our application where we have to deal with obfuscated Rar files and detect which ones belong together.\r\n\r\nWe now have our own custom code, but would be great if we could use Rarfile for everything! We already use it in a number of different locations in our application. \r\nhttps://github.com/sabnzbd/sabnzbd/commit/a5c8318b5fdaae4521651e0881522fbe3deeb154", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/56", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/56/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/56/events", "html_url": "https://github.com/markokr/rarfile/issues/56", "id": 497038714, "node_id": "MDU6SXNzdWU0OTcwMzg3MTQ=", "number": 56, "title": "how to find file info in not-first rar file?", "user": {"login": "sanderjo", "id": 1273502, "node_id": "MDQ6VXNlcjEyNzM1MDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1273502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanderjo", "html_url": "https://github.com/sanderjo", "followers_url": "https://api.github.com/users/sanderjo/followers", "following_url": "https://api.github.com/users/sanderjo/following{/other_user}", "gists_url": "https://api.github.com/users/sanderjo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanderjo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanderjo/subscriptions", "organizations_url": "https://api.github.com/users/sanderjo/orgs", "repos_url": "https://api.github.com/users/sanderjo/repos", "events_url": "https://api.github.com/users/sanderjo/events{/privacy}", "received_events_url": "https://api.github.com/users/sanderjo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-09-23T11:24:08Z", "updated_at": "2019-09-30T21:45:33Z", "closed_at": "2019-09-25T19:02:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "With rarfile, how can I find the files in a rar file other than the first?\r\n\r\nWith the `unrar` tool it's easy:\r\n\r\n```\r\n$ unrar l mytestrar.part5.rar\r\n\r\nUNRAR 5.50 freeware      Copyright (c) 1993-2017 Alexander Roshal\r\n\r\nArchive: mytestrar.part5.rar\r\nDetails: RAR 5, volume 5\r\n\r\n Attributes      Size     Date    Time   Name\r\n----------- ---------  ---------- -----  ----\r\n -rw-rw-r--  20971520  2019-09-23 12:08  blabla.bin\r\n -rw-rw-r--  10485760  2019-09-23 12:08  rrrjfjfj.bin\r\n----------- ---------  ---------- -----  ----\r\n             10485760                    1\r\n```\r\n\r\nBut with rarfile I get an error:\r\n\r\n```\r\n$ python3 -c \"import rarfile; rf = rarfile.RarFile('mytestrar.part5.rar');\"\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.6/dist-packages/rarfile.py\", line 685, in __init__\r\n    self._parse()\r\n  File \"/usr/local/lib/python3.6/dist-packages/rarfile.py\", line 879, in _parse\r\n    self._file_parser.parse()\r\n  File \"/usr/local/lib/python3.6/dist-packages/rarfile.py\", line 998, in parse\r\n    self._parse_real()\r\n  File \"/usr/local/lib/python3.6/dist-packages/rarfile.py\", line 1056, in _parse_real\r\n    % (h.main_volume_number,)\r\nrarfile.NeedFirstVolume: Need to start from first volume (current: 4)\r\n```\r\n\r\nFWIW: the filenames are in plaintext in the part5.rar file:\r\n\r\n```\r\n$ strings mytestrar.part5.rar\r\nRar!\r\nblabla.bin\r\nrrrjfjfj.bin\r\nblabla.bin\r\n        `:/(=\r\nrrrjfjfj.bin\r\n \r\n```\r\nand\r\n\r\n\r\n```\r\n$ cat mytestrar.part5.rar | hd\r\n00000000  52 61 72 21 1a 07 01 00  26 0f a8 76 0e 01 05 09  |Rar!....&..v....|\r\n00000010  03 04 08 01 01 cf fe ff  82 80 00 bc 72 41 f7 30  |............rA.0|\r\n00000020  02 0b 0b c3 86 c0 80 80  00 04 80 80 80 8a 80 00  |................|\r\n00000030  b4 83 02 17 34 77 38 80  00 01 0a 62 6c 61 62 6c  |....4w8....blabl|\r\n00000040  61 2e 62 69 6e 0a 03 13  a3 99 88 5d 25 c8 1f 09  |a.bin......]%...|\r\n00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\r\n*\r\n00100390  00 00 00 92 f9 38 21 32  02 13 0b 8d f7 bf 82 80  |.....8!2........|\r\n001003a0  00 04 80 80 80 85 80 00  b4 83 02 de 14 c2 d7 80  |................|\r\n001003b0  00 01 0c 72 72 72 6a 66  6a 66 6a 2e 62 69 6e 0a  |...rrrjfjfj.bin.|\r\n001003c0  03 13 ad 99 88 5d 93 4b  2e 0d 00 00 00 00 00 00  |.....].K........|\r\n001003d0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\r\n*\r\n005fff50  00 00 00 00 00 00 00 bb  70 14 cf 0e 03 06 82 01  |........p.......|\r\n005fff60  00 82 01 00 80 00 01 02  51 4f b3 e1 5f 52 3b 00  |........QO.._R;.|\r\n005fff70  bc fe ff 02 35 bc 72 41  f7 30 02 0b 0b c3 86 c0  |....5.rA.0......|\r\n005fff80  80 80 00 04 80 80 80 8a  80 00 b4 83 02 17 34 77  |..............4w|\r\n005fff90  38 80 00 01 0a 62 6c 61  62 6c 61 2e 62 69 6e 0a  |8....blabla.bin.|\r\n005fffa0  03 13 a3 99 88 5d 25 c8  1f 09 60 3a 2f 28 3d 00  |.....]%...`:/(=.|\r\n005fffb0  c4 f7 bf 02 37 92 f9 38  21 32 02 13 0b 8d f7 bf  |....7..8!2......|\r\n005fffc0  82 80 00 04 80 80 80 85  80 00 b4 83 02 de 14 c2  |................|\r\n005fffd0  d7 80 00 01 0c 72 72 72  6a 66 6a 66 6a 2e 62 69  |.....rrrjfjfj.bi|\r\n005fffe0  6e 0a 03 13 ad 99 88 5d  93 4b 2e 0d 8b 47 51 26  |n......].K...GQ&|\r\n005ffff0  03 05 04 01 00 00 00 00  00 00 00 00 00 00 00 00  |................|\r\n00600000\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/55", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/55/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/55/events", "html_url": "https://github.com/markokr/rarfile/issues/55", "id": 476162133, "node_id": "MDU6SXNzdWU0NzYxNjIxMzM=", "number": 55, "title": "retrieve \"volume number\" from rar file other than first rar file?", "user": {"login": "sanderjo", "id": 1273502, "node_id": "MDQ6VXNlcjEyNzM1MDI=", "avatar_url": "https://avatars3.githubusercontent.com/u/1273502?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanderjo", "html_url": "https://github.com/sanderjo", "followers_url": "https://api.github.com/users/sanderjo/followers", "following_url": "https://api.github.com/users/sanderjo/following{/other_user}", "gists_url": "https://api.github.com/users/sanderjo/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanderjo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanderjo/subscriptions", "organizations_url": "https://api.github.com/users/sanderjo/orgs", "repos_url": "https://api.github.com/users/sanderjo/repos", "events_url": "https://api.github.com/users/sanderjo/events{/privacy}", "received_events_url": "https://api.github.com/users/sanderjo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-02T12:46:26Z", "updated_at": "2019-09-15T13:54:12Z", "closed_at": "2019-09-15T13:54:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to retrieve the \"volume number\" from a random rar file (with an obfuscated name), so other than first rar file.\r\n\r\nThe rar binary shows it's possible:\r\n\r\n```\r\n$ rar l mytestpost-brackets.part486.rar | grep Details\r\nDetails: RAR 5, volume 486\r\n```\r\nand also works for a random filename:\r\n```\r\n$ cp mytestpost-brackets.part345.rar some-blabla-rar-file\r\n$ rar l some-blabla-rar-file | grep Details\r\nDetails: RAR 5, volume 345\r\n\r\n```\r\n\r\nSo I tried with the unrar module.\r\n\r\nTry on first rar file ... works:\r\n```\r\n$ ~/rar_info_via_module_rarfile.py mytestpost-brackets.part001.rar\r\n500MB.bin 524288000 volume: 0\r\n```\r\nBut any other rar file does not work:\r\n```\r\n$ ~/rar_info_via_module_rarfile.py mytestpost-brackets.part486.rar\r\nTraceback (most recent call last):\r\n  File \"/home/sander/rar_info_via_module_rarfile.py\", line 8, in <module>\r\n    rf = rarfile.RarFile(sys.argv[1])\r\n  File \"/usr/local/lib/python2.7/dist-packages/rarfile.py\", line 666, in __init__\r\n    self._parse()\r\n  File \"/usr/local/lib/python2.7/dist-packages/rarfile.py\", line 858, in _parse\r\n    self._file_parser.parse()\r\n  File \"/usr/local/lib/python2.7/dist-packages/rarfile.py\", line 973, in parse\r\n    self._parse_real()\r\n  File \"/usr/local/lib/python2.7/dist-packages/rarfile.py\", line 1027, in _parse_real\r\n    raise NeedFirstVolume(\"Need to start from first volume\")\r\nrarfile.NeedFirstVolume: Need to start from first volume\r\n```\r\nHmmm `Need to start from first volume` is not what I wanted to hear.\r\n\r\nAny way to solve this?\r\n\r\nThe micro program I use, based on the first code snippet on https://rarfile.readthedocs.io/en/latest/api.html\r\n\r\n```\r\n#!/usr/bin/env python\r\n\r\nimport rarfile, sys\r\n\r\nrf = rarfile.RarFile(sys.argv[1])\r\nfor f in rf.infolist():\r\n    print f.filename, f.file_size, \"volume:\", f.volume\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/54", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/54/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/54/events", "html_url": "https://github.com/markokr/rarfile/issues/54", "id": 414091133, "node_id": "MDU6SXNzdWU0MTQwOTExMzM=", "number": 54, "title": "Cannot get the fp=rarfile.RarFile('test.rar')  object  when test.rar  is encrypted with filename.", "user": {"login": "hyq5890", "id": 38711921, "node_id": "MDQ6VXNlcjM4NzExOTIx", "avatar_url": "https://avatars1.githubusercontent.com/u/38711921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hyq5890", "html_url": "https://github.com/hyq5890", "followers_url": "https://api.github.com/users/hyq5890/followers", "following_url": "https://api.github.com/users/hyq5890/following{/other_user}", "gists_url": "https://api.github.com/users/hyq5890/gists{/gist_id}", "starred_url": "https://api.github.com/users/hyq5890/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hyq5890/subscriptions", "organizations_url": "https://api.github.com/users/hyq5890/orgs", "repos_url": "https://api.github.com/users/hyq5890/repos", "events_url": "https://api.github.com/users/hyq5890/events{/privacy}", "received_events_url": "https://api.github.com/users/hyq5890/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-25T12:54:59Z", "updated_at": "2020-07-19T18:04:02Z", "closed_at": "2020-07-19T18:04:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/53", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/53/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/53/events", "html_url": "https://github.com/markokr/rarfile/issues/53", "id": 371450526, "node_id": "MDU6SXNzdWUzNzE0NTA1MjY=", "number": 53, "title": "pandas how to read csv in an rar file ", "user": {"login": "xxllp", "id": 4278666, "node_id": "MDQ6VXNlcjQyNzg2NjY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4278666?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xxllp", "html_url": "https://github.com/xxllp", "followers_url": "https://api.github.com/users/xxllp/followers", "following_url": "https://api.github.com/users/xxllp/following{/other_user}", "gists_url": "https://api.github.com/users/xxllp/gists{/gist_id}", "starred_url": "https://api.github.com/users/xxllp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xxllp/subscriptions", "organizations_url": "https://api.github.com/users/xxllp/orgs", "repos_url": "https://api.github.com/users/xxllp/repos", "events_url": "https://api.github.com/users/xxllp/events{/privacy}", "received_events_url": "https://api.github.com/users/xxllp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-18T09:55:22Z", "updated_at": "2018-10-27T06:27:50Z", "closed_at": "2018-10-27T06:27:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/52", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/52/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/52/events", "html_url": "https://github.com/markokr/rarfile/issues/52", "id": 364100101, "node_id": "MDU6SXNzdWUzNjQxMDAxMDE=", "number": 52, "title": "Compatibility: RarFile.extract() doesn't return extracted filename", "user": {"login": "rmspeers", "id": 9883657, "node_id": "MDQ6VXNlcjk4ODM2NTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/9883657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmspeers", "html_url": "https://github.com/rmspeers", "followers_url": "https://api.github.com/users/rmspeers/followers", "following_url": "https://api.github.com/users/rmspeers/following{/other_user}", "gists_url": "https://api.github.com/users/rmspeers/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmspeers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmspeers/subscriptions", "organizations_url": "https://api.github.com/users/rmspeers/orgs", "repos_url": "https://api.github.com/users/rmspeers/repos", "events_url": "https://api.github.com/users/rmspeers/events{/privacy}", "received_events_url": "https://api.github.com/users/rmspeers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-26T15:53:39Z", "updated_at": "2020-07-20T20:52:26Z", "closed_at": "2020-07-20T20:52:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "For better compatibility with zipfile, I would like to have extract() return the file path that it extracted to, with any normalization performed taken into account.\r\n\r\nThis would affect the function at https://github.com/markokr/rarfile/blob/master/rarfile.py#L871, at least the variant of it used for single-argument-extract, and would:\r\n- change the `-idq` parameter in extract arguments to something like `-idc` to allow output\r\n- parsing of the output for each `Extracted:` line\r\n- forming these into a list and returning", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/51", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/51/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/51/events", "html_url": "https://github.com/markokr/rarfile/issues/51", "id": 354106621, "node_id": "MDU6SXNzdWUzNTQxMDY2MjE=", "number": 51, "title": "MacOS: when `rarfile` uses bsdtar as alternative, RAR comments aren't parsed", "user": {"login": "speidy", "id": 3459028, "node_id": "MDQ6VXNlcjM0NTkwMjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/3459028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/speidy", "html_url": "https://github.com/speidy", "followers_url": "https://api.github.com/users/speidy/followers", "following_url": "https://api.github.com/users/speidy/following{/other_user}", "gists_url": "https://api.github.com/users/speidy/gists{/gist_id}", "starred_url": "https://api.github.com/users/speidy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/speidy/subscriptions", "organizations_url": "https://api.github.com/users/speidy/orgs", "repos_url": "https://api.github.com/users/speidy/repos", "events_url": "https://api.github.com/users/speidy/events{/privacy}", "received_events_url": "https://api.github.com/users/speidy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-26T16:10:21Z", "updated_at": "2019-09-20T17:18:53Z", "closed_at": "2019-09-20T17:18:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\n\r\nI'm running MacOS High-Sierra, and its seems like `rarfile` module will use `bsdtar` binary as `unrar` is not installed by default.\r\n\r\nOne problem with that is the archive comments aren't being decoded and it fools the user to think like there aren't any comment even though they actually appear in the .rar archive.\r\n\r\nI think that a warning should be thrown to the user in this case. \r\n\r\nI personally don't like the `bsdtar` fallback as there are many feature lacks when using it (as commented in the comments of the module)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/50", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/50/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/50/events", "html_url": "https://github.com/markokr/rarfile/issues/50", "id": 324631124, "node_id": "MDU6SXNzdWUzMjQ2MzExMjQ=", "number": 50, "title": "Error 193 when trying to read a RAR archive", "user": {"login": "roydbt", "id": 14271648, "node_id": "MDQ6VXNlcjE0MjcxNjQ4", "avatar_url": "https://avatars2.githubusercontent.com/u/14271648?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roydbt", "html_url": "https://github.com/roydbt", "followers_url": "https://api.github.com/users/roydbt/followers", "following_url": "https://api.github.com/users/roydbt/following{/other_user}", "gists_url": "https://api.github.com/users/roydbt/gists{/gist_id}", "starred_url": "https://api.github.com/users/roydbt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roydbt/subscriptions", "organizations_url": "https://api.github.com/users/roydbt/orgs", "repos_url": "https://api.github.com/users/roydbt/repos", "events_url": "https://api.github.com/users/roydbt/events{/privacy}", "received_events_url": "https://api.github.com/users/roydbt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-19T13:49:42Z", "updated_at": "2019-09-15T13:02:58Z", "closed_at": "2019-09-15T13:02:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my code:\r\n\r\n```\r\nimport rarfile\r\n# Set to full path of unrar.exe if it is not in PATH\r\nrarfile.UNRAR_TOOL = \"C:\\Python27\\Lib\\site-packages\\unrar\\unrarlib.py\"\r\n\r\nrf=rarfile.RarFile('unzipme.0')\r\nfor f in rf.infolist():\r\n    print f.filename, f.file_size\r\n    if f.filename == 'Boring':\r\n        print true\r\n```\r\n\r\nAnd this is the output:\r\n\r\n> Traceback (most recent call last):\r\n>  File \"C:/Users/*UserName*/Desktop/archives/__file.py\", line 5, in <module>\r\n>    rf=rarfile.RarFile('unzipme.0')\r\n>  File \"C:\\Python27\\lib\\site-packages\\rarfile.py\", line 666, in __init__\r\n>    self._parse()\r\n>  File \"C:\\Python27\\lib\\site-packages\\rarfile.py\", line 858, in _parse\r\n>    self._file_parser.parse()\r\n>  File \"C:\\Python27\\lib\\site-packages\\rarfile.py\", line 973, in parse\r\n>    self._parse_real()\r\n>  File \"C:\\Python27\\lib\\site-packages\\rarfile.py\", line 1047, in _parse_real\r\n>    self.process_entry(fd, h)\r\n>  File \"C:\\Python27\\lib\\site-packages\\rarfile.py\", line 1460, in process_entry\r\n>    cmt = self._read_comment_v3(item, self._password)\r\n>  File \"C:\\Python27\\lib\\site-packages\\rarfile.py\", line 1414, in _read_comment_v3\r\n>    inf.file_size, inf.flags, inf.CRC, psw, inf.salt)\r\n>  File \"C:\\Python27\\lib\\site-packages\\rarfile.py\", line 2747, in rar3_decompress\r\n>    p = custom_popen(cmd)\r\n>  File \"C:\\Python27\\lib\\site-packages\\rarfile.py\", line 2813, in custom_popen\r\n>    creationflags=creationflags)\r\n>  File \"C:\\Python27\\lib\\subprocess.py\", line 711, in __init__\r\n>    errread, errwrite)\r\n>  File \"C:\\Python27\\lib\\subprocess.py\", line 959, in _execute_child\r\n>    startupinfo)\r\n>WindowsError: [Error 193] %1 is not a valid Win32 application", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/48", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/48/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/48/events", "html_url": "https://github.com/markokr/rarfile/issues/48", "id": 315989714, "node_id": "MDU6SXNzdWUzMTU5ODk3MTQ=", "number": 48, "title": "Missing support for SFX archives", "user": {"login": "Hugal31", "id": 9070803, "node_id": "MDQ6VXNlcjkwNzA4MDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/9070803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hugal31", "html_url": "https://github.com/Hugal31", "followers_url": "https://api.github.com/users/Hugal31/followers", "following_url": "https://api.github.com/users/Hugal31/following{/other_user}", "gists_url": "https://api.github.com/users/Hugal31/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hugal31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hugal31/subscriptions", "organizations_url": "https://api.github.com/users/Hugal31/orgs", "repos_url": "https://api.github.com/users/Hugal31/repos", "events_url": "https://api.github.com/users/Hugal31/events{/privacy}", "received_events_url": "https://api.github.com/users/Hugal31/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-04-19T18:26:35Z", "updated_at": "2019-09-21T11:48:38Z", "closed_at": "2019-09-21T11:48:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "As specified by the documentation for both RAR3 and RAR5, RAR archive can have a self-extractor module (SFX) at the beginning of the file.\r\n\r\nFor now, rarfile reject the file if the magic number is not at the offset 0, but to be completely compliant with the specification, it should search for it within at least the first Mega-byte of the file.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/47", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/47/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/47/events", "html_url": "https://github.com/markokr/rarfile/issues/47", "id": 312135842, "node_id": "MDU6SXNzdWUzMTIxMzU4NDI=", "number": 47, "title": "Documentation/Implementation: UNRAR_TOOL handling broken in certain situations", "user": {"login": "pannal", "id": 1359593, "node_id": "MDQ6VXNlcjEzNTk1OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1359593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pannal", "html_url": "https://github.com/pannal", "followers_url": "https://api.github.com/users/pannal/followers", "following_url": "https://api.github.com/users/pannal/following{/other_user}", "gists_url": "https://api.github.com/users/pannal/gists{/gist_id}", "starred_url": "https://api.github.com/users/pannal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pannal/subscriptions", "organizations_url": "https://api.github.com/users/pannal/orgs", "repos_url": "https://api.github.com/users/pannal/repos", "events_url": "https://api.github.com/users/pannal/events{/privacy}", "received_events_url": "https://api.github.com/users/pannal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-06T22:12:32Z", "updated_at": "2019-09-21T11:51:16Z", "closed_at": "2019-09-21T11:51:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey,\r\n\r\nI've discovered a nasty bug/documentation issue with the `UNRAR_TOOL` variable. \r\n\r\nNote: As this is a library, the user of the library is expected to import rarfile and set `UNRAR_TOOL` afterwards, before using it, instead of manipulating the actual `rarfile.py` itself.\r\n\r\n`rarfile._check_unrar_tool` is called explicitly at the end of the module and consists of:\r\n\r\n```\r\ndef _check_unrar_tool():\r\n    global UNRAR_TOOL, OPEN_ARGS, EXTRACT_ARGS, TEST_ARGS\r\n    try:\r\n        # does UNRAR_TOOL work?\r\n        custom_check([ORIG_UNRAR_TOOL], True)\r\n\r\n        UNRAR_TOOL = ORIG_UNRAR_TOOL\r\n        OPEN_ARGS = ORIG_OPEN_ARGS\r\n        EXTRACT_ARGS = ORIG_EXTRACT_ARGS\r\n        TEST_ARGS = ORIG_TEST_ARGS\r\n    except RarCannotExec:\r\n        try:\r\n            # does ALT_TOOL work?\r\n            custom_check([ALT_TOOL] + list(ALT_CHECK_ARGS), True)\r\n            # replace config\r\n            UNRAR_TOOL = ALT_TOOL\r\n            OPEN_ARGS = ALT_OPEN_ARGS\r\n            EXTRACT_ARGS = ALT_EXTRACT_ARGS\r\n            TEST_ARGS = ALT_TEST_ARGS\r\n        except RarCannotExec:\r\n            # no usable tool, only uncompressed archives work\r\n            return False\r\n    return True\r\n```\r\n\r\nWhen `UNRAR_TOOL` is set specifically, that is done AFTER this function has run at least once, because of the necessary `rarfile` import.\r\n\r\nWhen the initial check for `unrar` didn't work, all the variables are set to the `ALT_`-ones, if `bsdtar` was found.\r\n\r\nThus, after setting `rarfile.UNRAR_TOOL`, `rarfile` tries to execute that executable using the `ALT_` arguments meant for `bsdtar`.\r\n\r\nSo in order for `UNRAR_TOOL` to work properly, one has to call `rarfile._check_unrar_tool()` again, after setting `UNRAR_TOOL` *and* `ORIG_UNRAR_TOOL`.\r\n\r\n\r\nThe ALT fallback is the culprit, as it always overrides the necessary parameters for unrar, if bsdtar is available, so calling `_check_unrar_tool()` after setting `UNRAR_TOOL` isn't solving the problem, if `UNRAR_TOOL` didn't work in the first place. And it's not exposed as a public function anyways.\r\n\r\nI think instead `custom_check` should be used after setting `UNRAR_TOOL`, and then all args need to be reset to their corresponding `ORIG_`-value, if its return value is `True` (by the library user).\r\n\r\nAnother option would be for `_check_unrar_tool()` to only set `UNRAR_TOOL` to `ORIG_UNRAR_TOOL`, if `UNRAR_TOOL` was *not* modified and doesn't differ from `ORIG_UNRAR_TOOL`. \r\n\r\nOnce `UNRAR_TOOL` is modified, the user does most likely not want to fall back to bsdtar.\r\n\r\nThis is largely a documentation issue to be honest.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/46", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/46/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/46/events", "html_url": "https://github.com/markokr/rarfile/issues/46", "id": 309208805, "node_id": "MDU6SXNzdWUzMDkyMDg4MDU=", "number": 46, "title": "BadRarFile, when header reads b\"Rar!\\x1a\\x07\\x01\"", "user": {"login": "cubinator", "id": 6325082, "node_id": "MDQ6VXNlcjYzMjUwODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6325082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cubinator", "html_url": "https://github.com/cubinator", "followers_url": "https://api.github.com/users/cubinator/followers", "following_url": "https://api.github.com/users/cubinator/following{/other_user}", "gists_url": "https://api.github.com/users/cubinator/gists{/gist_id}", "starred_url": "https://api.github.com/users/cubinator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cubinator/subscriptions", "organizations_url": "https://api.github.com/users/cubinator/orgs", "repos_url": "https://api.github.com/users/cubinator/repos", "events_url": "https://api.github.com/users/cubinator/events{/privacy}", "received_events_url": "https://api.github.com/users/cubinator/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-28T03:31:15Z", "updated_at": "2019-09-15T12:55:21Z", "closed_at": "2019-09-15T12:55:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Password protected archives seem to include some more header information. If the archive header reads `b\"Rar!\\x1a\\x07\\x01\"` instead of `b\"Rar!\\x1a\\x07\\x00\"` (HEAD_SIZE is 0x0107 instead of 0x0007), the module raises `BadRarFile(\"Not a Rar archive: <filename>\")`. I tried replacing `RAR_ID=b\"Rar!\\x1a\\x07\\x01\"` with `RAR_ID=b\"Rar!\\x1a\\x07\"`, but then `rarfile.RarFile.infolist` always returns an empty list (didn't forget to set password).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/45", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/45/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/45/events", "html_url": "https://github.com/markokr/rarfile/issues/45", "id": 307212622, "node_id": "MDU6SXNzdWUzMDcyMTI2MjI=", "number": 45, "title": "Overwritten.", "user": {"login": "acquykhud", "id": 29769801, "node_id": "MDQ6VXNlcjI5NzY5ODAx", "avatar_url": "https://avatars1.githubusercontent.com/u/29769801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acquykhud", "html_url": "https://github.com/acquykhud", "followers_url": "https://api.github.com/users/acquykhud/followers", "following_url": "https://api.github.com/users/acquykhud/following{/other_user}", "gists_url": "https://api.github.com/users/acquykhud/gists{/gist_id}", "starred_url": "https://api.github.com/users/acquykhud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acquykhud/subscriptions", "organizations_url": "https://api.github.com/users/acquykhud/orgs", "repos_url": "https://api.github.com/users/acquykhud/repos", "events_url": "https://api.github.com/users/acquykhud/events{/privacy}", "received_events_url": "https://api.github.com/users/acquykhud/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-21T11:47:04Z", "updated_at": "2019-09-15T13:09:32Z", "closed_at": "2019-09-15T13:09:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello @markokr . Your module is awesome\r\nI have tried to find a way to overwrite the files if they are existed, but i found nothing about this.\r\nCan you help me with it, thank you !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/44", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/44/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/44/events", "html_url": "https://github.com/markokr/rarfile/issues/44", "id": 304370385, "node_id": "MDU6SXNzdWUzMDQzNzAzODU=", "number": 44, "title": "isdir() vs ZipInfo.is_dir()", "user": {"login": "radek00p", "id": 37298556, "node_id": "MDQ6VXNlcjM3Mjk4NTU2", "avatar_url": "https://avatars0.githubusercontent.com/u/37298556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/radek00p", "html_url": "https://github.com/radek00p", "followers_url": "https://api.github.com/users/radek00p/followers", "following_url": "https://api.github.com/users/radek00p/following{/other_user}", "gists_url": "https://api.github.com/users/radek00p/gists{/gist_id}", "starred_url": "https://api.github.com/users/radek00p/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/radek00p/subscriptions", "organizations_url": "https://api.github.com/users/radek00p/orgs", "repos_url": "https://api.github.com/users/radek00p/repos", "events_url": "https://api.github.com/users/radek00p/events{/privacy}", "received_events_url": "https://api.github.com/users/radek00p/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-12T13:26:47Z", "updated_at": "2020-07-19T20:51:43Z", "closed_at": "2020-07-19T20:51:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWould that be possible to improve zipfile-compatibility when it comes to 'isdir()' method?\r\nIn ZipInfo class the equivalent is 'is_dir()'.\r\n\r\nThank you.\r\nradek", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/43", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/43/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/43/events", "html_url": "https://github.com/markokr/rarfile/issues/43", "id": 304076738, "node_id": "MDU6SXNzdWUzMDQwNzY3Mzg=", "number": 43, "title": "[Feature Request] Add rarfile.HACK_TMP_DIR for mkstemp(dir=rarfile.HACK_TMP_DIR)", "user": {"login": "TwoAnts", "id": 5968383, "node_id": "MDQ6VXNlcjU5NjgzODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5968383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TwoAnts", "html_url": "https://github.com/TwoAnts", "followers_url": "https://api.github.com/users/TwoAnts/followers", "following_url": "https://api.github.com/users/TwoAnts/following{/other_user}", "gists_url": "https://api.github.com/users/TwoAnts/gists{/gist_id}", "starred_url": "https://api.github.com/users/TwoAnts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TwoAnts/subscriptions", "organizations_url": "https://api.github.com/users/TwoAnts/orgs", "repos_url": "https://api.github.com/users/TwoAnts/repos", "events_url": "https://api.github.com/users/TwoAnts/events{/privacy}", "received_events_url": "https://api.github.com/users/TwoAnts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-03-10T14:59:58Z", "updated_at": "2019-09-20T18:46:12Z", "closed_at": "2019-09-20T18:46:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "One may want to use a special temporary directory for `rarfile` module. \r\n\r\nAs `mkstemp()` uses the default directory which is chosen from a platform-dependent list or setted by _TMPDIR_, _TEMP_ or _TMP_ environment variables, it is so hard to modify environment variables for every rarfile function call.  Using `rarfile.HACK_TMP_DIR = 'path\\to\\a\\special\\tmp\\dir'`  may be easier.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/42", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/42/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/42/events", "html_url": "https://github.com/markokr/rarfile/issues/42", "id": 282843194, "node_id": "MDU6SXNzdWUyODI4NDMxOTQ=", "number": 42, "title": "[Feature Request] Return the normalized path created after successful execution of extract", "user": {"login": "abilash13", "id": 5894226, "node_id": "MDQ6VXNlcjU4OTQyMjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5894226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abilash13", "html_url": "https://github.com/abilash13", "followers_url": "https://api.github.com/users/abilash13/followers", "following_url": "https://api.github.com/users/abilash13/following{/other_user}", "gists_url": "https://api.github.com/users/abilash13/gists{/gist_id}", "starred_url": "https://api.github.com/users/abilash13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abilash13/subscriptions", "organizations_url": "https://api.github.com/users/abilash13/orgs", "repos_url": "https://api.github.com/users/abilash13/repos", "events_url": "https://api.github.com/users/abilash13/events{/privacy}", "received_events_url": "https://api.github.com/users/abilash13/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-18T11:13:43Z", "updated_at": "2020-07-20T20:51:07Z", "closed_at": "2020-07-20T20:51:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since this python module is supposed to be made as zipfile-like as possible, can you please make the extract function return the normalized path created, just like how the extract function in zipfile works.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/41", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/41/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/41/events", "html_url": "https://github.com/markokr/rarfile/issues/41", "id": 282069984, "node_id": "MDU6SXNzdWUyODIwNjk5ODQ=", "number": 41, "title": "How to replace unrar use bsdtar in libarchive?", "user": {"login": "Sewens", "id": 9146919, "node_id": "MDQ6VXNlcjkxNDY5MTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9146919?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sewens", "html_url": "https://github.com/Sewens", "followers_url": "https://api.github.com/users/Sewens/followers", "following_url": "https://api.github.com/users/Sewens/following{/other_user}", "gists_url": "https://api.github.com/users/Sewens/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sewens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sewens/subscriptions", "organizations_url": "https://api.github.com/users/Sewens/orgs", "repos_url": "https://api.github.com/users/Sewens/repos", "events_url": "https://api.github.com/users/Sewens/events{/privacy}", "received_events_url": "https://api.github.com/users/Sewens/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-14T11:33:59Z", "updated_at": "2019-09-15T12:59:57Z", "closed_at": "2019-09-15T12:59:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "I always get some problem in using unrar as 'backend' to unrar file. Then I google it and find sometimes free version of unrar may cause those problem.\r\nSo, could you give me some advice on how to use libarchive?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/40", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/40/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/40/events", "html_url": "https://github.com/markokr/rarfile/issues/40", "id": 279893184, "node_id": "MDU6SXNzdWUyNzk4OTMxODQ=", "number": 40, "title": "multi volume rar archive with naming part01,part02,part03 not processed correctly", "user": {"login": "vchrizz", "id": 5678480, "node_id": "MDQ6VXNlcjU2Nzg0ODA=", "avatar_url": "https://avatars0.githubusercontent.com/u/5678480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vchrizz", "html_url": "https://github.com/vchrizz", "followers_url": "https://api.github.com/users/vchrizz/followers", "following_url": "https://api.github.com/users/vchrizz/following{/other_user}", "gists_url": "https://api.github.com/users/vchrizz/gists{/gist_id}", "starred_url": "https://api.github.com/users/vchrizz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vchrizz/subscriptions", "organizations_url": "https://api.github.com/users/vchrizz/orgs", "repos_url": "https://api.github.com/users/vchrizz/repos", "events_url": "https://api.github.com/users/vchrizz/events{/privacy}", "received_events_url": "https://api.github.com/users/vchrizz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-06T20:21:19Z", "updated_at": "2017-12-06T21:00:58Z", "closed_at": "2017-12-06T21:00:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "multi volume rar archives are not treated correctly as multi volume archive with naming style like following:\r\nfile.part01.rar\r\nfile.part02.rar\r\nfile.part03.rar\r\n\r\nsame for this:\r\nfile.part1.rar\r\nfile.part2.rar\r\nfile.part3.rar\r\n\r\nbut it is working correctly if naming is like:\r\nfile.r00\r\nfile.r01\r\nfile.rar", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/38", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/38/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/38/events", "html_url": "https://github.com/markokr/rarfile/issues/38", "id": 244428549, "node_id": "MDU6SXNzdWUyNDQ0Mjg1NDk=", "number": 38, "title": "rarfile's custom_check/custom_popen doesn't handle permission issues", "user": {"login": "pannal", "id": 1359593, "node_id": "MDQ6VXNlcjEzNTk1OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1359593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pannal", "html_url": "https://github.com/pannal", "followers_url": "https://api.github.com/users/pannal/followers", "following_url": "https://api.github.com/users/pannal/following{/other_user}", "gists_url": "https://api.github.com/users/pannal/gists{/gist_id}", "starred_url": "https://api.github.com/users/pannal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pannal/subscriptions", "organizations_url": "https://api.github.com/users/pannal/orgs", "repos_url": "https://api.github.com/users/pannal/repos", "events_url": "https://api.github.com/users/pannal/events{/privacy}", "received_events_url": "https://api.github.com/users/pannal/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-20T16:47:27Z", "updated_at": "2019-09-15T12:58:51Z", "closed_at": "2019-09-15T12:58:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "In this example a user tried to import rarfile on an NVIDIA SHIELD platform.\r\nThe SHIELD has very limited permissions (SELinux enforced) when the user hasn't rooted the device, resulting in:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/data/user/0/com.plexapp.mediaserver.smb/Plex Media Server/Plug-ins/Sub-Zero.bundle/Contents/Libraries/Shared/subliminal/__init__.py\", line 17, in <module>\r\n    from .core import (AsyncProviderPool, ProviderPool, check_video, download_best_subtitles, download_subtitles,\r\n  File \"/data/user/0/com.plexapp.mediaserver.smb/Plex Media Server/Plug-ins/Sub-Zero.bundle/Contents/Libraries/Shared/subliminal/core.py\", line 14, in <module>\r\n    from rarfile import NotRarFile, RarCannotExec, RarFile\r\n  File \"/data/user/0/com.plexapp.mediaserver.smb/Plex Media Server/Plug-ins/Sub-Zero.bundle/Contents/Libraries/Shared/rarfile.py\", line 2950, in <module>\r\n    _check_unrar_tool()\r\n  File \"/data/user/0/com.plexapp.mediaserver.smb/Plex Media Server/Plug-ins/Sub-Zero.bundle/Contents/Libraries/Shared/rarfile.py\", line 2931, in _check_unrar_tool\r\n    custom_check([ORIG_UNRAR_TOOL], True)\r\n  File \"/data/user/0/com.plexapp.mediaserver.smb/Plex Media Server/Plug-ins/Sub-Zero.bundle/Contents/Libraries/Shared/rarfile.py\", line 2823, in custom_check\r\n    p = custom_popen(cmd)\r\n  File \"/data/user/0/com.plexapp.mediaserver.smb/Plex Media Server/Plug-ins/Sub-Zero.bundle/Contents/Libraries/Shared/rarfile.py\", line 2813, in custom_popen\r\n    creationflags=creationflags)\r\n  File \"/data/user/0/com.plexapp.mediaserver.smb/Resources/Python/lib/python2.7/subprocess.py\", line 711, in __init__\r\n    errread, errwrite)\r\n  File \"/data/user/0/com.plexapp.mediaserver.smb/Resources/Python/lib/python2.7/subprocess.py\", line 1343, in _execute_child\r\n    raise child_exception\r\nOSError: [Errno 13] Permission denied\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/36", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/36/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/36/events", "html_url": "https://github.com/markokr/rarfile/issues/36", "id": 205188295, "node_id": "MDU6SXNzdWUyMDUxODgyOTU=", "number": 36, "title": "[Feature request]: Add unar support", "user": {"login": "lgbaldoni", "id": 1450716, "node_id": "MDQ6VXNlcjE0NTA3MTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1450716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lgbaldoni", "html_url": "https://github.com/lgbaldoni", "followers_url": "https://api.github.com/users/lgbaldoni/followers", "following_url": "https://api.github.com/users/lgbaldoni/following{/other_user}", "gists_url": "https://api.github.com/users/lgbaldoni/gists{/gist_id}", "starred_url": "https://api.github.com/users/lgbaldoni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lgbaldoni/subscriptions", "organizations_url": "https://api.github.com/users/lgbaldoni/orgs", "repos_url": "https://api.github.com/users/lgbaldoni/repos", "events_url": "https://api.github.com/users/lgbaldoni/events{/privacy}", "received_events_url": "https://api.github.com/users/lgbaldoni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-03T15:30:52Z", "updated_at": "2019-09-21T11:49:50Z", "closed_at": "2019-09-21T11:49:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "As per subject, unar is on feature parity with the nonfree unrar and it's available on most linux distributions.\r\nSee [http://unarchiver.c3.cx/commandline](http://unarchiver.c3.cx/commandline).\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/35", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/35/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/35/events", "html_url": "https://github.com/markokr/rarfile/issues/35", "id": 204237151, "node_id": "MDU6SXNzdWUyMDQyMzcxNTE=", "number": 35, "title": "setpassword() fails incorrectly", "user": {"login": "Safihre", "id": 5703454, "node_id": "MDQ6VXNlcjU3MDM0NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5703454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Safihre", "html_url": "https://github.com/Safihre", "followers_url": "https://api.github.com/users/Safihre/followers", "following_url": "https://api.github.com/users/Safihre/following{/other_user}", "gists_url": "https://api.github.com/users/Safihre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Safihre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Safihre/subscriptions", "organizations_url": "https://api.github.com/users/Safihre/orgs", "repos_url": "https://api.github.com/users/Safihre/repos", "events_url": "https://api.github.com/users/Safihre/events{/privacy}", "received_events_url": "https://api.github.com/users/Safihre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-01-31T09:01:17Z", "updated_at": "2017-08-21T09:41:02Z", "closed_at": "2017-07-10T11:56:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "We use the `zf.testrar()` to see if the user put the correct password for a job during downloading.\r\nBut for some archives the `zf.setpassword()` will fail with:\r\n```\r\nzf.setpassword(password)\r\n*** BadRarFile: Bad count to header decrypt - wrong password?\r\n```\r\nEven though it's the correct password.\r\n\r\nI can share a test RAR if you like?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/33", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/33/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/33/events", "html_url": "https://github.com/markokr/rarfile/issues/33", "id": 201933282, "node_id": "MDU6SXNzdWUyMDE5MzMyODI=", "number": 33, "title": "`bytes` not treated as valid filepath in Python 3", "user": {"login": "natezb", "id": 3268059, "node_id": "MDQ6VXNlcjMyNjgwNTk=", "avatar_url": "https://avatars2.githubusercontent.com/u/3268059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/natezb", "html_url": "https://github.com/natezb", "followers_url": "https://api.github.com/users/natezb/followers", "following_url": "https://api.github.com/users/natezb/following{/other_user}", "gists_url": "https://api.github.com/users/natezb/gists{/gist_id}", "starred_url": "https://api.github.com/users/natezb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/natezb/subscriptions", "organizations_url": "https://api.github.com/users/natezb/orgs", "repos_url": "https://api.github.com/users/natezb/repos", "events_url": "https://api.github.com/users/natezb/events{/privacy}", "received_events_url": "https://api.github.com/users/natezb/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-19T18:04:16Z", "updated_at": "2017-06-28T15:50:56Z", "closed_at": "2017-06-28T15:50:56Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed this because it affects the importer in [beets](https://github.com/beetbox/beets). Beets passes the file path as a `bytes` object, which `is_filelike` does not like.\r\n\r\nSince you already have an alias for `unicode`, and `bytes` exists in both Py2 and Py3, I'd just check against the two of them. i.e.:\r\n\r\n    if isinstance(obj, (bytes, unicode)):\r\n        ...\r\n\r\nThis fixed the bug for me, and I can submit a quick PR for this if you'd like.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/31", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/31/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/31/events", "html_url": "https://github.com/markokr/rarfile/issues/31", "id": 198232268, "node_id": "MDU6SXNzdWUxOTgyMzIyNjg=", "number": 31, "title": "trailing slashes for \"leaf\" directories, usage of '\\\\'", "user": {"login": "h5rdly", "id": 24714022, "node_id": "MDQ6VXNlcjI0NzE0MDIy", "avatar_url": "https://avatars2.githubusercontent.com/u/24714022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h5rdly", "html_url": "https://github.com/h5rdly", "followers_url": "https://api.github.com/users/h5rdly/followers", "following_url": "https://api.github.com/users/h5rdly/following{/other_user}", "gists_url": "https://api.github.com/users/h5rdly/gists{/gist_id}", "starred_url": "https://api.github.com/users/h5rdly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h5rdly/subscriptions", "organizations_url": "https://api.github.com/users/h5rdly/orgs", "repos_url": "https://api.github.com/users/h5rdly/repos", "events_url": "https://api.github.com/users/h5rdly/events{/privacy}", "received_events_url": "https://api.github.com/users/h5rdly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-12-31T13:24:56Z", "updated_at": "2020-07-20T18:38:33Z", "closed_at": "2020-07-20T18:38:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI Wanted to ask regarding some parsing issues I'm having. \r\n\r\nOn Windows, Zipfile listings look like this:\r\n'Folder/Folder2/FILE'\r\n'Folder/Folder2/EmptyFolder/'\r\n\r\nWith Rarfile it's:\r\nu'Folder\\\\\\Folder2\\\\\\FILE'\r\nu'Folder\\\\\\Folder2\\\\\\EmptyFolder'\r\n\r\nThis causes obstacles - \r\n1. With the lack of trailing slashes, I need extra info to know if FILE a file or a folder.\r\n2. I would need to parse windows and linux rars differently, as well as rarfiles and zipfiles, gzipfiles etc.\r\n\r\nWould it be possible to add trailing slashes to last-in-line folders, and/or use Python's generic platform agnostic '/' instead of '\\\\\\\\'? That would be awesome, as it would allow to utilize a single generic archive parsing.\r\n\r\n\r\nThanks.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/30", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/30/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/30/events", "html_url": "https://github.com/markokr/rarfile/issues/30", "id": 197515345, "node_id": "MDU6SXNzdWUxOTc1MTUzNDU=", "number": 30, "title": "Pypi info regarding RAR5 support", "user": {"login": "h5rdly", "id": 24714022, "node_id": "MDQ6VXNlcjI0NzE0MDIy", "avatar_url": "https://avatars2.githubusercontent.com/u/24714022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/h5rdly", "html_url": "https://github.com/h5rdly", "followers_url": "https://api.github.com/users/h5rdly/followers", "following_url": "https://api.github.com/users/h5rdly/following{/other_user}", "gists_url": "https://api.github.com/users/h5rdly/gists{/gist_id}", "starred_url": "https://api.github.com/users/h5rdly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/h5rdly/subscriptions", "organizations_url": "https://api.github.com/users/h5rdly/orgs", "repos_url": "https://api.github.com/users/h5rdly/repos", "events_url": "https://api.github.com/users/h5rdly/events{/privacy}", "received_events_url": "https://api.github.com/users/h5rdly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-25T21:14:38Z", "updated_at": "2016-12-28T11:26:49Z", "closed_at": "2016-12-27T17:28:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nNot really an issue with rarfile, just wanted to let you know that the PyPi page for rarfile still states it doesn't support RAR5 - \r\n\r\nhttps://pypi.python.org/pypi/rarfile/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/29", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/29/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/29/events", "html_url": "https://github.com/markokr/rarfile/issues/29", "id": 193596264, "node_id": "MDU6SXNzdWUxOTM1OTYyNjQ=", "number": 29, "title": "[Windows 10] unrar not found with some archives", "user": {"login": "XenHat", "id": 980408, "node_id": "MDQ6VXNlcjk4MDQwOA==", "avatar_url": "https://avatars3.githubusercontent.com/u/980408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XenHat", "html_url": "https://github.com/XenHat", "followers_url": "https://api.github.com/users/XenHat/followers", "following_url": "https://api.github.com/users/XenHat/following{/other_user}", "gists_url": "https://api.github.com/users/XenHat/gists{/gist_id}", "starred_url": "https://api.github.com/users/XenHat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XenHat/subscriptions", "organizations_url": "https://api.github.com/users/XenHat/orgs", "repos_url": "https://api.github.com/users/XenHat/repos", "events_url": "https://api.github.com/users/XenHat/events{/privacy}", "received_events_url": "https://api.github.com/users/XenHat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-12-05T20:03:18Z", "updated_at": "2019-09-20T17:09:53Z", "closed_at": "2019-09-20T17:09:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I created a new issue following issue creep in #13 \r\n\r\nI am trying to use rarfile on Windows 10.\r\n\r\nOn rarfile 2.8, running `rarfile.is_rarfile` on my package returns `false` due the package being a rar5 file.\r\nI cannot seem to be able to create a rar4 package that can be detected as valid either.\r\n\r\nAfter finding out that rarfile 2.8 does not support rar5, I compiled and installed the current repo (at time of writing, latest commit is pulling in #25)\r\n\r\nwith my newly build rarfile-3.0-xxx.egg, I can sucessfully read the file list and a file out of the archive using:\r\n```\r\nrf = rarfile.RarFile(myFileName)\r\n    for f in rf.infolist():\r\n        print(f.filename, f.file_size)\r\n        if f.filename == 'samplefile.txt':\r\n            print(rf.read(f))\r\n```\r\nHowever, I am unable to run `rarfile.extractall` on that same file:\r\n```\r\nin __extract_rar_archive\r\n    rf.extractall(install_dir,extract)\r\n  File \"C:\\Python27\\lib\\site-packages\\rarfile-3.0-py2.7.egg\\rarfile.py\", line 811, in extractall\r\n    self._extract(fnlist, path, pwd)\r\n  File \"C:\\Python27\\lib\\site-packages\\rarfile-3.0-py2.7.egg\\rarfile.py\", line 877, in _extract\r\n    p = custom_popen(cmd)\r\n  File \"C:\\Python27\\lib\\site-packages\\rarfile-3.0-py2.7.egg\\rarfile.py\", line 2805, in custom_popen\r\n    raise RarCannotExec(\"Unrar not installed? (rarfile.UNRAR_TOOL=%r)\" % UNRAR_TOOL)\r\nrarfile.RarCannotExec: Unrar not installed? (rarfile.UNRAR_TOOL='unrar')\r\n```\r\nboth `rar` and `undar` binaries are in path, and I have tried the following:\r\n\r\n- `rarfile.UNRAR_TOOL=\"rar\"`\r\n- `rarfile.UNRAR_TOOL=\"unrar\"`\r\n- `rarfile.UNRAR_TOOL=\"rar.exe\"`\r\n- `rarfile.UNRAR_TOOL=\"unrar.exe\"`\r\n- `rarfile.UNRAR_TOOL=\"C:\\\\Program Files\\WinRAR\\\\UnRAR\"`\r\n- `rarfile.UNRAR_TOOL=\"C:\\\\Program Files\\WinRAR\\\\UnRAR.exe\"`\r\n- `rarfile.UNRAR_TOOL=\"C:\\Program Files\\WinRAR\\UnRAR\"`\r\n- `rarfile.UNRAR_TOOL=\"C:\\Program Files\\WinRAR\\UnRAR.exe\"`\r\n- `rarfile.UNRAR_TOOL=\"C:/Program Files/WinRAR/UnRAR\"`\r\n- `rarfile.UNRAR_TOOL=\"/cygwin/c/Program Files/WinRAR/UnRAR\"`\r\n- `rarfile.UNRAR_TOOL=\"/cygwin/c/Program Files/WinRAR/UnRAR.exe\"`\r\n\r\nThe list goes on...\r\nSome additional output:\r\n```\r\n>ls \"C:\\Program Files\\WinRAR\\UnRAR.exe\" -ls\r\n396 -rwxr-xr-x 1 Xenhat Xenhat 401808 Aug 15 00:16 'C:\\Program Files\\WinRAR\\UnRAR.exe'\r\n>dir \"C:\\Program Files\\WinRAR\\UnRAR.exe\"\r\n Directory of C:\\Program Files\\WinRAR\r\n\r\n2016-08-14  11:16 PM           401,808 UnRAR.exe\r\n               1 File(s)        401,808 bytes\r\n               0 Dir(s)  118,082,936,832 bytes free\r\n\r\nF:\\devel>which rar\r\n/cygdrive/c/Program Files/WinRAR/rar\r\n\r\nF:\\devel>which winrar\r\n/cygdrive/c/Program Files/WinRAR/winrar\r\n\r\nF:\\devel>which unrar\r\n/cygdrive/c/Program Files/WinRAR/unrar\r\n\r\nF:\\devel>unrar /? | head -n 4\r\n\r\nUNRAR 5.40 x64 freeware      Copyright (c) 1993-2016 Alexander Roshal\r\n\r\nUsage:     unrar <command> -<switch 1> -<switch N> <archive> <files...>\r\n```\r\nCurrently, UnRAR.exe exists in 3 different locations included in PATH, and **in the current working folder** as well. I cannot come up with a reason why this doesn't work.\r\n\r\nSome more information about my environment:\r\n* Makes use of cygwin so path can sometimes be `/cygdrive/c/something/blah.exe`\r\n* I have a working example for both `tarfile` and `zipfile`\r\n\r\nAny help would be appreciated.\r\n\r\n**update**\r\nI have managed to extract a small package conform to my framework.\r\nThe problem appears to only happen on some archives, I have successfully extracted other archives with sizes anywhere between 300K and 118MB.\r\nI am still trying to find what is special about this archive as it appears to refuse extracting it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/28", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/28/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/28/events", "html_url": "https://github.com/markokr/rarfile/issues/28", "id": 192968515, "node_id": "MDU6SXNzdWUxOTI5Njg1MTU=", "number": 28, "title": "RarInfo not agreeing with parameters needed to pass to the extraction step; use libunrar instead of running command-line unrar, and non-unicode filenames", "user": {"login": "HinTak", "id": 14662953, "node_id": "MDQ6VXNlcjE0NjYyOTUz", "avatar_url": "https://avatars1.githubusercontent.com/u/14662953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HinTak", "html_url": "https://github.com/HinTak", "followers_url": "https://api.github.com/users/HinTak/followers", "following_url": "https://api.github.com/users/HinTak/following{/other_user}", "gists_url": "https://api.github.com/users/HinTak/gists{/gist_id}", "starred_url": "https://api.github.com/users/HinTak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HinTak/subscriptions", "organizations_url": "https://api.github.com/users/HinTak/orgs", "repos_url": "https://api.github.com/users/HinTak/repos", "events_url": "https://api.github.com/users/HinTak/events{/privacy}", "received_events_url": "https://api.github.com/users/HinTak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-12-01T21:33:59Z", "updated_at": "2020-07-19T17:54:52Z", "closed_at": "2020-07-19T17:54:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "RarInfo not agreeing with parameters needed to pass to the extraction step seem to defeat the purpose of looking at RarInfo  first.\r\n\r\nUse libunrar instead of running command-line unrar for non-unicode filenames might be the answer.\r\n\r\nI have a rar file which seems to have been generated on localised CJK windows system (i.e. filenames are multi-byte but non-unicode).\r\n\r\nRarInfo.filename gives the following hexdumps with ` ' '.join([\"%04X\"% ord(x) for x in info.filename])`\r\n\r\n```\r\nE5A4 A9B9 72A6 ACAB\r\nE5A4 A9B9 72A6 ACAB 535C 4E49 3030 504D 542E 4654\r\n00A4 00E5 00B9 00A9 00A6 0072 00AB 00AC 005C 0057 0045 0049 0030 0030 0042 002E 0054 0054 0046\r\n```\r\n\r\nrarfile seems to interprete the data as UTF16-LE  or latin1, but in fact it is BIG5 (and big-endian - higher-byte of big5 encoding first). You can see the 3rd item is padded and byte-swapped compared to the others.\r\n\r\nI also don't know why rarfile is behaving inconsistently - one file is in latin1, but all the others are in UTF16-LE, in the same archive.\r\n\r\nAnyway, I have two problems:\r\n\r\ncommand-line unrar munches the paths - in the name of 'security measure', it would not extract filename as they were, or even list them as rawbytes, but insists that they are unicode and insert a lot of '0xE0' with private encoding in the path names when the byte ranges is outside unicode descriptions. (see `unrar/unicode.cpp` in unrar's source).\r\n\r\nAnd you are running unrar the command line, which means there is no hope of matching the `RarInfo.filename` with what is required on the command line (to extract then rename), since `RarInfo.filename` contains raw non-unicode multibyte date, while command line wants corrupted unicode data.\r\n\r\nFWIW, `lsar -e BIG5 ...` seems to do the right thing. But I just like `python-rarfile` to be able to do that, and give me more control of examining and extracting the files individually.\r\n\r\nRarInfo not agreeing with parameters needed to pass to the extraction step seem to defeat the purpose of looking at RarInfo  first.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/26", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/26/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/26/events", "html_url": "https://github.com/markokr/rarfile/issues/26", "id": 184758859, "node_id": "MDU6SXNzdWUxODQ3NTg4NTk=", "number": 26, "title": "How to add recovery record?", "user": {"login": "eromoe", "id": 3938751, "node_id": "MDQ6VXNlcjM5Mzg3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3938751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eromoe", "html_url": "https://github.com/eromoe", "followers_url": "https://api.github.com/users/eromoe/followers", "following_url": "https://api.github.com/users/eromoe/following{/other_user}", "gists_url": "https://api.github.com/users/eromoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/eromoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eromoe/subscriptions", "organizations_url": "https://api.github.com/users/eromoe/orgs", "repos_url": "https://api.github.com/users/eromoe/repos", "events_url": "https://api.github.com/users/eromoe/events{/privacy}", "received_events_url": "https://api.github.com/users/eromoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-24T06:27:29Z", "updated_at": "2016-11-24T11:41:30Z", "closed_at": "2016-11-24T11:41:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I search recovery from docs but nothing found. Not support ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/22", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/22/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/22/events", "html_url": "https://github.com/markokr/rarfile/issues/22", "id": 155918741, "node_id": "MDU6SXNzdWUxNTU5MTg3NDE=", "number": 22, "title": "RarInfo.needs_password() returns integer rather than bool", "user": {"login": "mhchia", "id": 8223657, "node_id": "MDQ6VXNlcjgyMjM2NTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8223657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mhchia", "html_url": "https://github.com/mhchia", "followers_url": "https://api.github.com/users/mhchia/followers", "following_url": "https://api.github.com/users/mhchia/following{/other_user}", "gists_url": "https://api.github.com/users/mhchia/gists{/gist_id}", "starred_url": "https://api.github.com/users/mhchia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mhchia/subscriptions", "organizations_url": "https://api.github.com/users/mhchia/orgs", "repos_url": "https://api.github.com/users/mhchia/repos", "events_url": "https://api.github.com/users/mhchia/events{/privacy}", "received_events_url": "https://api.github.com/users/mhchia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-05-20T09:09:29Z", "updated_at": "2016-05-20T11:12:07Z", "closed_at": "2016-05-20T11:12:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\n>>> bf.infolist()[0].needs_password()\n4\n```\n\nAs above mentioned, it is quite confusing although we know that \"not 0\" means True\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/21", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/21/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/21/events", "html_url": "https://github.com/markokr/rarfile/issues/21", "id": 151369304, "node_id": "MDU6SXNzdWUxNTEzNjkzMDQ=", "number": 21, "title": "API consistency", "user": {"login": "Diaoul", "id": 319220, "node_id": "MDQ6VXNlcjMxOTIyMA==", "avatar_url": "https://avatars2.githubusercontent.com/u/319220?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diaoul", "html_url": "https://github.com/Diaoul", "followers_url": "https://api.github.com/users/Diaoul/followers", "following_url": "https://api.github.com/users/Diaoul/following{/other_user}", "gists_url": "https://api.github.com/users/Diaoul/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diaoul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diaoul/subscriptions", "organizations_url": "https://api.github.com/users/Diaoul/orgs", "repos_url": "https://api.github.com/users/Diaoul/repos", "events_url": "https://api.github.com/users/Diaoul/events{/privacy}", "received_events_url": "https://api.github.com/users/Diaoul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-04-27T12:07:58Z", "updated_at": "2016-05-20T11:12:07Z", "closed_at": "2016-05-20T11:12:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been using rarfile with in-memory streams and it worked great so far. However it seems this API behavior isn't consistent: https://github.com/Diaoul/subliminal/issues/644\nIn-memory streams don't work with solid archives, I think it's up to rarfile to maintain a consistent API and save the file to a temporary location instead of failing. Of course writing on the filesystem is no easy decision so I suggest to give a configuration option to disable this behavior.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/19", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/19/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/19/events", "html_url": "https://github.com/markokr/rarfile/issues/19", "id": 138911201, "node_id": "MDU6SXNzdWUxMzg5MTEyMDE=", "number": 19, "title": "Bad rar causes infinite loop in rarfile.py", "user": {"login": "chuncheng", "id": 4064113, "node_id": "MDQ6VXNlcjQwNjQxMTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4064113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chuncheng", "html_url": "https://github.com/chuncheng", "followers_url": "https://api.github.com/users/chuncheng/followers", "following_url": "https://api.github.com/users/chuncheng/following{/other_user}", "gists_url": "https://api.github.com/users/chuncheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/chuncheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chuncheng/subscriptions", "organizations_url": "https://api.github.com/users/chuncheng/orgs", "repos_url": "https://api.github.com/users/chuncheng/repos", "events_url": "https://api.github.com/users/chuncheng/events{/privacy}", "received_events_url": "https://api.github.com/users/chuncheng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-07T07:56:47Z", "updated_at": "2016-03-07T10:00:09Z", "closed_at": "2016-03-07T10:00:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\ndef _load_metadata(self, handle):\n    \"\"\"Load archive members metadata.\"\"\"\n    rarinfo = self._read_header(handle)\n    while rarinfo:\n        if len(rarinfo.filename) == 0:\n            break\n        self.filelist.append(rarinfo)\n        self.NameToInfo[rarinfo.filename] = rarinfo\n        self._process_current(handle, constants.RAR_SKIP)\n        rarinfo = self._read_header(handle)\n```\n\n[badrar.zip](https://github.com/markokr/rarfile/files/160939/badrar.zip)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/16", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/16/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/16/events", "html_url": "https://github.com/markokr/rarfile/issues/16", "id": 117736148, "node_id": "MDU6SXNzdWUxMTc3MzYxNDg=", "number": 16, "title": "ValueError: insecure string pickle", "user": {"login": "phretor", "id": 192820, "node_id": "MDQ6VXNlcjE5MjgyMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/192820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phretor", "html_url": "https://github.com/phretor", "followers_url": "https://api.github.com/users/phretor/followers", "following_url": "https://api.github.com/users/phretor/following{/other_user}", "gists_url": "https://api.github.com/users/phretor/gists{/gist_id}", "starred_url": "https://api.github.com/users/phretor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phretor/subscriptions", "organizations_url": "https://api.github.com/users/phretor/orgs", "repos_url": "https://api.github.com/users/phretor/repos", "events_url": "https://api.github.com/users/phretor/events{/privacy}", "received_events_url": "https://api.github.com/users/phretor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-19T03:56:42Z", "updated_at": "2015-11-19T16:49:06Z", "closed_at": "2015-11-19T14:51:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "On Mac OS X El Capitan\n\n``` python\n$ python --version\nPython 2.7.10\n$ git clone https://github.com/markokr/rarfile.git\n$ cd rarfile\n$ python setup.py install\nTraceback (most recent call last):\n  File \"setup.py\", line 5, in <module>\n    import rarfile\n  File \"/Users/phretor/reversing/tools/aleph/rarfile/rarfile.py\", line 1973, in <module>\n    custom_check([UNRAR_TOOL], True)\n  File \"/Users/phretor/reversing/tools/aleph/rarfile/rarfile.py\", line 1921, in custom_check\n    p = custom_popen(cmd)\n  File \"/Users/phretor/reversing/tools/aleph/rarfile/rarfile.py\", line 1911, in custom_popen\n    creationflags = creationflags)\n  File \"/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py\", line 710, in __init__\n    errread, errwrite)\n  File \"/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py\", line 1334, in _execute_child\n    child_exception = pickle.loads(data)\n  File \"/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/pickle.py\", line 1382, in loads\n    return Unpickler(file).load()\n  File \"/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/pickle.py\", line 858, in load\n    dispatch[key](self)\n  File \"/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/pickle.py\", line 966, in load_string\n    raise ValueError, \"insecure string pickle\"\nValueError: insecure string pickle\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/15", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/15/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/15/events", "html_url": "https://github.com/markokr/rarfile/issues/15", "id": 93095270, "node_id": "MDU6SXNzdWU5MzA5NTI3MA==", "number": 15, "title": "[Windows] Unicode in file paths", "user": {"login": "seanegoodwin", "id": 1712653, "node_id": "MDQ6VXNlcjE3MTI2NTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1712653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seanegoodwin", "html_url": "https://github.com/seanegoodwin", "followers_url": "https://api.github.com/users/seanegoodwin/followers", "following_url": "https://api.github.com/users/seanegoodwin/following{/other_user}", "gists_url": "https://api.github.com/users/seanegoodwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/seanegoodwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanegoodwin/subscriptions", "organizations_url": "https://api.github.com/users/seanegoodwin/orgs", "repos_url": "https://api.github.com/users/seanegoodwin/repos", "events_url": "https://api.github.com/users/seanegoodwin/events{/privacy}", "received_events_url": "https://api.github.com/users/seanegoodwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-05T09:28:50Z", "updated_at": "2019-09-20T17:13:56Z", "closed_at": "2019-09-20T17:13:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems there are some problems in dealing with with rar files contained under a path containing unicode characters in Windows. This is only when the path contains unicode, not the filename itself.\n\nWhen trying to load such a rar file, I get the following error:\n\nrarfile.RarWarning: Non-fatal error [1]: b'\\r\\nCannot read contents of C:\\Regular path here\\??\\myrar.rar\\r\\nNo files to extract\\r\\n'\n\nI've removed the real path and the filename. The '??' is the part of the path that contains unicode \n\nI suspect this is more of a Windows problem than a problem in the library, but if possible rarfile should account for this.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/14", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/14/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/14/events", "html_url": "https://github.com/markokr/rarfile/issues/14", "id": 73622438, "node_id": "MDU6SXNzdWU3MzYyMjQzOA==", "number": 14, "title": "BadRarFile: Failed the read enough data", "user": {"login": "SantjagoCorkez", "id": 9654644, "node_id": "MDQ6VXNlcjk2NTQ2NDQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/9654644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SantjagoCorkez", "html_url": "https://github.com/SantjagoCorkez", "followers_url": "https://api.github.com/users/SantjagoCorkez/followers", "following_url": "https://api.github.com/users/SantjagoCorkez/following{/other_user}", "gists_url": "https://api.github.com/users/SantjagoCorkez/gists{/gist_id}", "starred_url": "https://api.github.com/users/SantjagoCorkez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SantjagoCorkez/subscriptions", "organizations_url": "https://api.github.com/users/SantjagoCorkez/orgs", "repos_url": "https://api.github.com/users/SantjagoCorkez/repos", "events_url": "https://api.github.com/users/SantjagoCorkez/events{/privacy}", "received_events_url": "https://api.github.com/users/SantjagoCorkez/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-05-06T13:35:03Z", "updated_at": "2015-05-13T07:13:15Z", "closed_at": "2015-05-13T07:13:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Somehow related to #10 but the same exception is raised when calling a script by jenkins with user jenkins. Calling the same script with user jenkins after `su` or `sudo` does not cause the exception.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/13", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/13/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/13/events", "html_url": "https://github.com/markokr/rarfile/issues/13", "id": 69936358, "node_id": "MDU6SXNzdWU2OTkzNjM1OA==", "number": 13, "title": "WinRAR 5.x RAR format support", "user": {"login": "pgjensen", "id": 1410483, "node_id": "MDQ6VXNlcjE0MTA0ODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1410483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pgjensen", "html_url": "https://github.com/pgjensen", "followers_url": "https://api.github.com/users/pgjensen/followers", "following_url": "https://api.github.com/users/pgjensen/following{/other_user}", "gists_url": "https://api.github.com/users/pgjensen/gists{/gist_id}", "starred_url": "https://api.github.com/users/pgjensen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pgjensen/subscriptions", "organizations_url": "https://api.github.com/users/pgjensen/orgs", "repos_url": "https://api.github.com/users/pgjensen/repos", "events_url": "https://api.github.com/users/pgjensen/events{/privacy}", "received_events_url": "https://api.github.com/users/pgjensen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-04-21T19:58:58Z", "updated_at": "2016-12-27T17:28:43Z", "closed_at": "2016-12-27T17:28:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently an error/stacktrace is thrown on version 5 RAR format (RAR5).  The spec is located at http://www.rarlab.com/technote.htm\n\nAre there any plans to support this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/11", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/11/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/11/events", "html_url": "https://github.com/markokr/rarfile/issues/11", "id": 44033103, "node_id": "MDU6SXNzdWU0NDAzMzEwMw==", "number": 11, "title": "Not working with StringIO (as opposed to ZipFile)", "user": {"login": "anduchs", "id": 4572892, "node_id": "MDQ6VXNlcjQ1NzI4OTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4572892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anduchs", "html_url": "https://github.com/anduchs", "followers_url": "https://api.github.com/users/anduchs/followers", "following_url": "https://api.github.com/users/anduchs/following{/other_user}", "gists_url": "https://api.github.com/users/anduchs/gists{/gist_id}", "starred_url": "https://api.github.com/users/anduchs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anduchs/subscriptions", "organizations_url": "https://api.github.com/users/anduchs/orgs", "repos_url": "https://api.github.com/users/anduchs/repos", "events_url": "https://api.github.com/users/anduchs/events{/privacy}", "received_events_url": "https://api.github.com/users/anduchs/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-26T09:15:26Z", "updated_at": "2014-11-23T08:42:09Z", "closed_at": "2014-11-23T08:42:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unfortunately it does not work with the File-Like StringIO type as ZipFile does.\n\nAs workaround I created a NamedTemporaryFile(), dumped the content into there and used this.\n\nSince I've seen you use temporary files already throughout the code, but did not quite understand how and what for, I didn't dare to just dump some code-snippeds about NamedTemporaryFile into the init() or extract() functions. I guess you'll want to do something more suited.\n\nThanks for the module anyways. Helped me a great deal ! :-)\n\nCheers,\nAndreas\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/10", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/10/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/10/events", "html_url": "https://github.com/markokr/rarfile/issues/10", "id": 39654355, "node_id": "MDU6SXNzdWUzOTY1NDM1NQ==", "number": 10, "title": "BadRarFile: Failed the read enough data", "user": {"login": "chrisspen", "id": 116631, "node_id": "MDQ6VXNlcjExNjYzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/116631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisspen", "html_url": "https://github.com/chrisspen", "followers_url": "https://api.github.com/users/chrisspen/followers", "following_url": "https://api.github.com/users/chrisspen/following{/other_user}", "gists_url": "https://api.github.com/users/chrisspen/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisspen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisspen/subscriptions", "organizations_url": "https://api.github.com/users/chrisspen/orgs", "repos_url": "https://api.github.com/users/chrisspen/repos", "events_url": "https://api.github.com/users/chrisspen/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisspen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-08-06T19:05:52Z", "updated_at": "2020-08-06T07:43:27Z", "closed_at": "2014-08-06T19:25:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running into strange behavior on different servers with reading Rar files. On my Ubuntu 12.04 localhost, I have unrar-nonfree installed, and I can unrar a sample archive just fine, but on an Ubuntu 12.04 instance running on Amazon, which uses the unrar-free package instead, I get the error:\n\n```\n>>> import rarfile\n>>> fn = '/tmp/sample.rar'\n>>> rf = rarfile.RarFile(fn)\n>>> fin = rf.open(rf.namelist()[0])\n>>> total_lines = rf.open(rf.namelist()[0]).read().count('\\n')\nBadRarFile: Failed the read enough data\n```\n\nWhat does that error mean?\n\nUsing checksums, I've confirmed the rar files aren't getting corrupted and permissions are corrupt. That same code runs fine on my localhost.\n\nThe only difference seems to be which backend unrar package I'm using. However, the unrar-nonfree seems to have become obsolete and has been removed from the standard repos, so I can't install in on the Amazon server. How do I fix this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/7", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/7/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/7/events", "html_url": "https://github.com/markokr/rarfile/issues/7", "id": 16174333, "node_id": "MDU6SXNzdWUxNjE3NDMzMw==", "number": 7, "title": "Malformed files?", "user": {"login": "MaciekBaron", "id": 1668712, "node_id": "MDQ6VXNlcjE2Njg3MTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1668712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaciekBaron", "html_url": "https://github.com/MaciekBaron", "followers_url": "https://api.github.com/users/MaciekBaron/followers", "following_url": "https://api.github.com/users/MaciekBaron/following{/other_user}", "gists_url": "https://api.github.com/users/MaciekBaron/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaciekBaron/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaciekBaron/subscriptions", "organizations_url": "https://api.github.com/users/MaciekBaron/orgs", "repos_url": "https://api.github.com/users/MaciekBaron/repos", "events_url": "https://api.github.com/users/MaciekBaron/events{/privacy}", "received_events_url": "https://api.github.com/users/MaciekBaron/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-06-29T12:35:30Z", "updated_at": "2013-06-29T12:42:52Z", "closed_at": "2013-06-29T12:42:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nWhenever I try to unrar an acrhive in my script (using Windows), the files that I output are malformed. It works when I use `unrar` in the command line. Here is what I'm doing:\n\n```\nfor f in rf.infolist():\n(...)\n    fd = open(artist+\"/[2013] \"+title+album_type+\"/\"+filename, \"w\")\n    fd.write(rf.read(f))\n    fd.close()\n```\n\nI've also tried:\n\n```\nfd.write(rf.open(f.filename).read())\n```\n\nWhich gives me the same result.\n\nParts of the files are correct (e.g. some MP3 files have their tags, or some JPGs have their EXIF info), however parts of the file seem malformed.\n\nI don't seem to be doing anything out of the ordinary...\n\nI'm using Python 2.7 (I've downgraded from 3.3 where I've had the same problem).\n\nAny help will be much appreciated\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/2", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/2/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/2/events", "html_url": "https://github.com/markokr/rarfile/issues/2", "id": 2731074, "node_id": "MDU6SXNzdWUyNzMxMDc0", "number": 2, "title": "extract(), extractall() don't raise exception if password is wrong", "user": {"login": "dangmai", "id": 1305527, "node_id": "MDQ6VXNlcjEzMDU1Mjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1305527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dangmai", "html_url": "https://github.com/dangmai", "followers_url": "https://api.github.com/users/dangmai/followers", "following_url": "https://api.github.com/users/dangmai/following{/other_user}", "gists_url": "https://api.github.com/users/dangmai/gists{/gist_id}", "starred_url": "https://api.github.com/users/dangmai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dangmai/subscriptions", "organizations_url": "https://api.github.com/users/dangmai/orgs", "repos_url": "https://api.github.com/users/dangmai/repos", "events_url": "https://api.github.com/users/dangmai/events{/privacy}", "received_events_url": "https://api.github.com/users/dangmai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2012-01-05T02:24:16Z", "updated_at": "2012-01-06T16:13:54Z", "closed_at": "2012-01-06T16:13:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, it seems that in the latest version of rarfile, no exception is raised if the password provided is wrong; instead it creates the directory structure with no content inside. Is there a way to know if the password is correct or not?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/markokr/rarfile/issues/1", "repository_url": "https://api.github.com/repos/markokr/rarfile", "labels_url": "https://api.github.com/repos/markokr/rarfile/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/markokr/rarfile/issues/1/comments", "events_url": "https://api.github.com/repos/markokr/rarfile/issues/1/events", "html_url": "https://github.com/markokr/rarfile/issues/1", "id": 2701963, "node_id": "MDU6SXNzdWUyNzAxOTYz", "number": 1, "title": "RarFile.read work incorrectly", "user": {"login": "fidoman", "id": 1260925, "node_id": "MDQ6VXNlcjEyNjA5MjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1260925?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fidoman", "html_url": "https://github.com/fidoman", "followers_url": "https://api.github.com/users/fidoman/followers", "following_url": "https://api.github.com/users/fidoman/following{/other_user}", "gists_url": "https://api.github.com/users/fidoman/gists{/gist_id}", "starred_url": "https://api.github.com/users/fidoman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fidoman/subscriptions", "organizations_url": "https://api.github.com/users/fidoman/orgs", "repos_url": "https://api.github.com/users/fidoman/repos", "events_url": "https://api.github.com/users/fidoman/events{/privacy}", "received_events_url": "https://api.github.com/users/fidoman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2012-01-02T15:27:51Z", "updated_at": "2012-01-03T09:02:20Z", "closed_at": "2012-01-03T09:01:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\n\nRarFile.read function seems to work incorrectly.\nIt does return sporadically 10 or 15 first kilobytes of archived file instead of full content.\nIf do open the same archived file (RarFile.open) then read from file object, it does return all data.\n\nSample archive:\nhttp://sergey.fidoman.ru/tmp/9cc17f01.we0\nCode:\nPython 3.2.2 (default, Nov 16 2011, 10:58:44) [C] on sunos5\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n> > > import rarfile\n> > > r=rarfile.RarFile(\"9cc17f01.we0\")\n> > > r.namelist()\n> > > ['9cc17f01.pkt']\n> > > len(r.read('9cc17f01.pkt'))\n> > > 15360\n> > > len(r.read('9cc17f01.pkt'))\n> > > 15360\n> > > len(r.read('9cc17f01.pkt'))\n> > > 15360\n> > > len(r.read('9cc17f01.pkt'))\n> > > 15360\n> > > len(r.read('9cc17f01.pkt'))\n> > > 15360\n> > > len(r.open('9cc17f01.pkt').read())\n> > > 10240\n> > > len(r.open('9cc17f01.pkt').read())\n> > > 15360\n> > > len(r.open('9cc17f01.pkt').read())\n> > > 15360\n> > > f=r.open('9cc17f01.pkt')    # Only this way seem to work\n> > > len(f.read())\n> > > 33245\n> > > len(f.read())\n> > > 0\n> > > len(f.read())\n> > > 0\n", "performed_via_github_app": null, "score": 1.0}]}