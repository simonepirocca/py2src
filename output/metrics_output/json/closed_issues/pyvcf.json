{"total_count": 123, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/325", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/325/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/325/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/325", "id": 677555335, "node_id": "MDU6SXNzdWU2Nzc1NTUzMzU=", "number": 325, "title": "Custom section delimited by \";\" and not \":\"", "user": {"login": "BioComSoftware", "id": 6683102, "node_id": "MDQ6VXNlcjY2ODMxMDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/6683102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BioComSoftware", "html_url": "https://github.com/BioComSoftware", "followers_url": "https://api.github.com/users/BioComSoftware/followers", "following_url": "https://api.github.com/users/BioComSoftware/following{/other_user}", "gists_url": "https://api.github.com/users/BioComSoftware/gists{/gist_id}", "starred_url": "https://api.github.com/users/BioComSoftware/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BioComSoftware/subscriptions", "organizations_url": "https://api.github.com/users/BioComSoftware/orgs", "repos_url": "https://api.github.com/users/BioComSoftware/repos", "events_url": "https://api.github.com/users/BioComSoftware/events{/privacy}", "received_events_url": "https://api.github.com/users/BioComSoftware/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-12T09:49:35Z", "updated_at": "2020-08-13T14:00:39Z", "closed_at": "2020-08-13T14:00:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "While attempting to parse a VCF file, a custom segment \"DBSNP\" (using a similar format to \"INFO\") is delimited by semi-colons (\";\") and not the expected colon (\":\"). As such an error arises...\r\n\r\n`Traceback (most recent call last):`\r\n`  File \"/<redacted>/VCFcrawl.py\", line 15, in <module>\r\n    for i in o.dump():`\r\n`  File \"/<redacted>/VCFcrawl.py\", line 9, in dump\r\n    for record in vcf_reader:`\r\n`  File \"/<virtualenv>/lib/python3.6/site-packages/vcf/parser.py\", line 590, in __next__\r\n    samples = self._parse_samples(row[9:], fmt, record)`\r\n`  File \"/<virtualenv>/lib/python3.6/site-packages/vcf/parser.py\", line 489, in _parse_samples\r\n    sampdat[i] = float(vals)`\r\n`ValueError: could not convert string to float: '<int>;WGT<int>;VC<alpha>;SLO;INT;ASP;G5A;G5;GNO;KGPhase1;ID=<alphanum>&MATCH=exact;POS=<int>;END=<int>;RS<int>;RSPOS<int>;dbSNPBuildID<int>;SSR<int>;SAO<int>;VP=<hex>;GENEINFO=<alphanum>'`\r\n*Actual values redacted from `vals` for privacy\r\n\r\nThe error arises from ...\r\n- the parser.py `def _parse_samples(self, samples, samp_fmt, site):` (line 436)\r\n- lines (starting at 497) `elif entry_type == 'Float': sampdat[i] = float(vals)` \r\n... where `vals` still contains the entire string `vals = '<int>;WGT<int>;VC<alpha>;SLO;INT;ASP;G5A;G5;GNO;KGPhase1;ID=<alphanum>&MATCH=exact;POS=<int>;END=<int>;RS<int>;RSPOS<int>;dbSNPBuildID<int>;SSR<int>;SAO<int>;VP=<hex>;GENEINFO=<alphanum>'`\r\n*Actual values redacted from `vals` for privacy", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/321", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/321/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/321/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/321", "id": 564263872, "node_id": "MDU6SXNzdWU1NjQyNjM4NzI=", "number": 321, "title": "Is the project dead ?", "user": {"login": "dridk", "id": 1911063, "node_id": "MDQ6VXNlcjE5MTEwNjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1911063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dridk", "html_url": "https://github.com/dridk", "followers_url": "https://api.github.com/users/dridk/followers", "following_url": "https://api.github.com/users/dridk/following{/other_user}", "gists_url": "https://api.github.com/users/dridk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dridk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dridk/subscriptions", "organizations_url": "https://api.github.com/users/dridk/orgs", "repos_url": "https://api.github.com/users/dridk/repos", "events_url": "https://api.github.com/users/dridk/events{/privacy}", "received_events_url": "https://api.github.com/users/dridk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-12T20:52:39Z", "updated_at": "2020-02-13T14:14:07Z", "closed_at": "2020-02-13T14:14:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I m wondering if the project is dead because there are many pull request waiting for.\r\nDo you need help ? \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/319", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/319/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/319/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/319", "id": 524655794, "node_id": "MDU6SXNzdWU1MjQ2NTU3OTQ=", "number": 319, "title": "Filtering REF column of VCF file", "user": {"login": "Trincatalyst", "id": 57217457, "node_id": "MDQ6VXNlcjU3MjE3NDU3", "avatar_url": "https://avatars0.githubusercontent.com/u/57217457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Trincatalyst", "html_url": "https://github.com/Trincatalyst", "followers_url": "https://api.github.com/users/Trincatalyst/followers", "following_url": "https://api.github.com/users/Trincatalyst/following{/other_user}", "gists_url": "https://api.github.com/users/Trincatalyst/gists{/gist_id}", "starred_url": "https://api.github.com/users/Trincatalyst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Trincatalyst/subscriptions", "organizations_url": "https://api.github.com/users/Trincatalyst/orgs", "repos_url": "https://api.github.com/users/Trincatalyst/repos", "events_url": "https://api.github.com/users/Trincatalyst/events{/privacy}", "received_events_url": "https://api.github.com/users/Trincatalyst/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-11-18T22:25:07Z", "updated_at": "2020-05-28T13:56:26Z", "closed_at": "2020-05-28T13:56:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n I am quite new to Python and of course PyVCF. I have been struggingly to understand how to filter VCF based off the values contained within each row/entry of the REF column. For example I would like to remove REF entries which are greater in size than 1 e.g. GTATAAC. Then I would like to create a new VCF which has filtered out these large REF entries. Apologies for my newbie question, but I am really struggingly with the documentation. \r\nAny information you could provide would be greatly appreciated!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/296", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/296/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/296/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/296", "id": 343574233, "node_id": "MDU6SXNzdWUzNDM1NzQyMzM=", "number": 296, "title": "ValueError: could not convert string to float", "user": {"login": "ecaestecker", "id": 6703409, "node_id": "MDQ6VXNlcjY3MDM0MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6703409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecaestecker", "html_url": "https://github.com/ecaestecker", "followers_url": "https://api.github.com/users/ecaestecker/followers", "following_url": "https://api.github.com/users/ecaestecker/following{/other_user}", "gists_url": "https://api.github.com/users/ecaestecker/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecaestecker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecaestecker/subscriptions", "organizations_url": "https://api.github.com/users/ecaestecker/orgs", "repos_url": "https://api.github.com/users/ecaestecker/repos", "events_url": "https://api.github.com/users/ecaestecker/events{/privacy}", "received_events_url": "https://api.github.com/users/ecaestecker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-23T10:23:25Z", "updated_at": "2019-10-20T22:25:13Z", "closed_at": "2018-07-23T11:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Exceptionally I receive the error below when parsing output from snpEff (not all my vcf files return the error)\r\nI assume some discrepency between the FORMAT info fields and the content of the vcf lines, but I cannot see any differences between offending vcf lines (pos 359075359 & 46041344) and those which are ok. Any tips?\r\n\r\npyvcf                     0.6.8.dev0\r\nnumpy                     1.13.1\r\n\r\n> Traceback (most recent call last):\r\n  File \"/data/workspace/conda/pyvcf/lib/python3.5/site-packages/vcf/parser.py\", line 478, in _parse_samples\r\n    sampdat[i] = int(vals)\r\nValueError: invalid literal for int() with base 10: ''\r\n>\r\n>During handling of the above exception, another exception occurred:\r\n>\r\n>Traceback (most recent call last):\r\n  File \"../src/summary_test.py\", line 9, in <module>\r\n    for record in vcf_reader:\r\n  File \"/data/workspace/conda/pyvcf/lib/python3.5/site-packages/vcf/parser.py\", line 583, in __next__\r\n    samples = self._parse_samples(row[9:], fmt, record)\r\n  File \"/data/workspace/conda/pyvcf/lib/python3.5/site-packages/vcf/parser.py\", line 480, in _parse_samples\r\n    sampdat[i] = float(vals)\r\nValueError: could not convert string to float:\r\n\r\n\r\n>...\r\n##FORMAT=<ID=AD,Number=R,Type=Integer,Description=\"Allelic depths for the ref and alt alleles in the order listed\">\r\n##FORMAT=<ID=DP,Number=1,Type=Integer,Description=\"Approximate read depth (reads with MQ=255 or with bad mates are filtered)\">\r\n##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=\"Genotype Quality\">\r\n##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\r\n##FORMAT=<ID=MIN_DP,Number=1,Type=Integer,Description=\"Minimum DP observed within the GVCF block\">\r\n##FORMAT=<ID=MAX_DP,Number=1,Type=Integer,Description=\"Maximum DP observed within the GVCF block\">\r\n##FORMAT=<ID=AVG_DP,Number=1,Type=Integer,Description=\"Average DP observed within the GVCF block\">\r\n##FORMAT=<ID=MIN_GQ,Number=1,Type=Integer,Description=\"Minimum GQ observed within the GVCF block\">\r\n##FORMAT=<ID=MAX_GQ,Number=1,Type=Integer,Description=\"Maximum GQ observed within the GVCF block\">\r\n##FORMAT=<ID=AVG_GQ,Number=1,Type=Integer,Description=\"Average GQ observed within the GVCF block\">\r\n...\r\nchr4   359075358       .       TACA    TA      100.0   .       AN=16;AC=2;AF=1.250e-01;ANN=TA|3_prime_UTR_variant|MODIFIER|id|id|transcript|id|protein_coding|10/10|c.*173_*174delTG|||||2241|      GT:AD:DP:GQ     0/0:7,0:7:184   0/0:6,0:6:166   0/0:6,0:6:175   0/0:11,0:11:256 0/0:2,0:2:79    0/0:3,0:3:123   1/1:0,1:1:127   0/0:6,0:6:185\r\nchr4   359075359       .       AC      A       100.0   .       AN=16;AC=1;AF=6.250e-02;ANN=A|3_prime_UTR_variant|MODIFIER|id|id|transcript|id|protein_coding|10/10|c.*174delG|||||2242|     GT:AD:DP:GQ     0/0:7,0:7:184   0/0:6,0:6:166   0/0:6,0:6:175   0/1:3,3:6:53    0/0:2,0:2:79    0/0:5,0:5:83    0/0:2,0:2:72    0/0:6,0:6:185**\r\nchr4   359075360       .       CAAAAAAAAAAAAAAA        .       100.0   .       AN=16;AC=.;AF=. GT:AD:DP:GQ     0/0:7:7:184     0/0:6:6:166     0/0:6:6:175     0/0:17:17:      0/0:0:0:38      0/0:8:8:201   0/0:2:2:72       0/0:6:6:185\r\nchr4   46040199        .       G       C       100.0   .       AN=2;AC=1;AF=5.000e-01;ANN=C|intergenic_region|MODIFIER|id|id|intergenic_region|id|||n.46040199G>C||||||      GT:AD:DP:GQ     ./.:.,.:.:.     0/1:1,1:2:32    ./.:.,.:.:.     ./.:.,.:.:.     ./.:.,.:.:.     ./.:.,.:.:.     ./.:.,.:.:.     ./.:.,.:.:.\r\nchr4   46041344        .       G       A       100.0   .       AN=6;AC=2;AF=3.333e-01;ANN=A|intergenic_region|MODIFIER|id|id|intergenic_region|id|||n.46041344G>A||||||      GT:AD:DP:GQ     0/0:1,0:1:55    0/0:2,0:2:98    ./.:.,.:.:.     ./.:.,.:.:.     ./.:.,.:.:.     ./.:.,.:.:.     ./.:.,.:.:.     1/1:0,1:1:127**\r\nchr4   46041349        .       TA      TAA     100.0   .       AN=6;AC=2;AF=3.333e-01;ANN=TAA|intergenic_region|MODIFIER|id|id|intergenic_region|id|||n.46041350_46041351insA||||||  GT:AD:DP:GQ     0/0:1,0:1:55    0/0:2,0:2:98    ./.:.,.:.:.     ./.:.,.:.:.     ./.:.,.:.:.     ./.:.,.:.:.     ./.:.,.:.:.   1/1:0,1:1:127\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/288", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/288/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/288/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/288", "id": 300319356, "node_id": "MDU6SXNzdWUzMDAzMTkzNTY=", "number": 288, "title": "AttributeError: 'module' object has no attribute 'Reader'", "user": {"login": "vigneshravi", "id": 8239398, "node_id": "MDQ6VXNlcjgyMzkzOTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8239398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vigneshravi", "html_url": "https://github.com/vigneshravi", "followers_url": "https://api.github.com/users/vigneshravi/followers", "following_url": "https://api.github.com/users/vigneshravi/following{/other_user}", "gists_url": "https://api.github.com/users/vigneshravi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vigneshravi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vigneshravi/subscriptions", "organizations_url": "https://api.github.com/users/vigneshravi/orgs", "repos_url": "https://api.github.com/users/vigneshravi/repos", "events_url": "https://api.github.com/users/vigneshravi/events{/privacy}", "received_events_url": "https://api.github.com/users/vigneshravi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-26T17:05:12Z", "updated_at": "2018-03-05T18:54:03Z", "closed_at": "2018-03-05T18:53:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI am trying to install PyVCF on Red Hat Enterprise Linux Client machine ( 3.10.0-693.5.2.el7.x86_64) for python3.4\r\nI am getting the following error, everytime I read a VCf\r\n\r\nAttributeError: 'module' object has no attribute 'Reader'\r\n\r\nThis is my command - `vcf_reader=vcf.Reader(open(os.path.expanduser(str(namevcf)),'r'))`\r\nAny help regarding this is appreciated!! Thank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/285", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/285/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/285/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/285", "id": 268436913, "node_id": "MDU6SXNzdWUyNjg0MzY5MTM=", "number": 285, "title": "Fetch() not returning some positions", "user": {"login": "webmasterar", "id": 2817984, "node_id": "MDQ6VXNlcjI4MTc5ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2817984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webmasterar", "html_url": "https://github.com/webmasterar", "followers_url": "https://api.github.com/users/webmasterar/followers", "following_url": "https://api.github.com/users/webmasterar/following{/other_user}", "gists_url": "https://api.github.com/users/webmasterar/gists{/gist_id}", "starred_url": "https://api.github.com/users/webmasterar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webmasterar/subscriptions", "organizations_url": "https://api.github.com/users/webmasterar/orgs", "repos_url": "https://api.github.com/users/webmasterar/repos", "events_url": "https://api.github.com/users/webmasterar/events{/privacy}", "received_events_url": "https://api.github.com/users/webmasterar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-25T15:12:38Z", "updated_at": "2017-10-27T13:50:41Z", "closed_at": "2017-10-27T13:50:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I'm getting nothing back when using fetch() for the particular range described below. I confirmed the existence of the record in the Y chromosome from the 1000 genomes project data (.vcf.gz with accompanying .tbi file) using VCFTools.\r\n\r\n```\r\n~$ vcftools --chr Y --from-bp 8146500 --to-bp 8146512 --gzvcf ./vcf/ALL.chrY.phase3_integrated_v2a.20130502.genotypes.vcf.gz --out ./vcf/Y_8146512_Y --recode\r\n~$ cat ./vcf/Y_8146512_Y.recode.vcf\r\n```\r\n\r\nThe file contains the expected SNP:\r\n```\r\n#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\r\nY\t8146511\trs374462934\tG\tA\t100\tPASS\t.\tGT\r\n```\r\n\r\nBut when I try to get the same thing back with PyVCF I get nothing!\r\n\r\n```\r\n~$ python\r\nimport vcf\r\nvcf_reader = vcf.Reader(filename='./vcf/ALL.chrY.phase3_integrated_v2a.20130502.genotypes.vcf.gz')\r\nfor record in vcf_reader.fetch('Y', 8146500, 8146512):\r\n    print record`\r\n```\r\n\r\nI'm using Python 2.7.12 and version 0.6.7-2build1 of PyVCF.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/279", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/279/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/279/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/279", "id": 235914986, "node_id": "MDU6SXNzdWUyMzU5MTQ5ODY=", "number": 279, "title": "Installation error error: can't copy 'vcf/cparse.c': doesn't exist or not a regular file", "user": {"login": "wcardoen", "id": 5612039, "node_id": "MDQ6VXNlcjU2MTIwMzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/5612039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wcardoen", "html_url": "https://github.com/wcardoen", "followers_url": "https://api.github.com/users/wcardoen/followers", "following_url": "https://api.github.com/users/wcardoen/following{/other_user}", "gists_url": "https://api.github.com/users/wcardoen/gists{/gist_id}", "starred_url": "https://api.github.com/users/wcardoen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wcardoen/subscriptions", "organizations_url": "https://api.github.com/users/wcardoen/orgs", "repos_url": "https://api.github.com/users/wcardoen/repos", "events_url": "https://api.github.com/users/wcardoen/events{/privacy}", "received_events_url": "https://api.github.com/users/wcardoen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-14T15:15:33Z", "updated_at": "2018-07-14T23:53:48Z", "closed_at": "2018-07-14T23:53:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI used python 2.7.11 (Centos 7 OS) and the pyVCF 0.6.8 source code:\r\npython setup.py build\r\nrunning build\r\nrunning build_py\r\ncreating build\r\ncreating build/lib.linux-x86_64-2.7\r\ncreating build/lib.linux-x86_64-2.7/vcf\r\ncopying vcf/utils.py -> build/lib.linux-x86_64-2.7/vcf\r\ncopying vcf/parser.py -> build/lib.linux-x86_64-2.7/vcf\r\ncopying vcf/__init__.py -> build/lib.linux-x86_64-2.7/vcf\r\ncopying vcf/filters.py -> build/lib.linux-x86_64-2.7/vcf\r\ncopying vcf/sample_filter.py -> build/lib.linux-x86_64-2.7/vcf\r\ncopying vcf/model.py -> build/lib.linux-x86_64-2.7/vcf\r\ncreating build/lib.linux-x86_64-2.7/vcf/test\r\ncopying vcf/test/test_vcf.py -> build/lib.linux-x86_64-2.7/vcf/test\r\ncopying vcf/test/__init__.py -> build/lib.linux-x86_64-2.7/vcf/test\r\ncopying vcf/test/prof.py -> build/lib.linux-x86_64-2.7/vcf/test\r\nrunning egg_info\r\nwriting requirements to PyVCF.egg-info/requires.txt\r\nwriting PyVCF.egg-info/PKG-INFO\r\nwriting top-level names to PyVCF.egg-info/top_level.txt\r\nwriting dependency_links to PyVCF.egg-info/dependency_links.txt\r\nwriting entry points to PyVCF.egg-info/entry_points.txt\r\nreading manifest file 'PyVCF.egg-info/SOURCES.txt'\r\nreading manifest template 'MANIFEST.in'\r\nwriting manifest file 'PyVCF.egg-info/SOURCES.txt'\r\nerror: can't copy 'vcf/cparse.c': doesn't exist or not a regular file\r\n\r\nThanks,\r\n\r\nWim", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/269", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/269/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/269/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/269", "id": 211052987, "node_id": "MDU6SXNzdWUyMTEwNTI5ODc=", "number": 269, "title": "ValueError: invalid literal for float()", "user": {"login": "stanedav", "id": 14347491, "node_id": "MDQ6VXNlcjE0MzQ3NDkx", "avatar_url": "https://avatars0.githubusercontent.com/u/14347491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanedav", "html_url": "https://github.com/stanedav", "followers_url": "https://api.github.com/users/stanedav/followers", "following_url": "https://api.github.com/users/stanedav/following{/other_user}", "gists_url": "https://api.github.com/users/stanedav/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanedav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanedav/subscriptions", "organizations_url": "https://api.github.com/users/stanedav/orgs", "repos_url": "https://api.github.com/users/stanedav/repos", "events_url": "https://api.github.com/users/stanedav/events{/privacy}", "received_events_url": "https://api.github.com/users/stanedav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-01T11:24:27Z", "updated_at": "2018-02-14T05:53:21Z", "closed_at": "2017-03-09T08:50:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nI am trying to use your library to load and read VCF file, my code is:\r\n```\r\n\r\nimport vcf\r\n\r\nvcf_reader = vcf.Reader(open('6788.vcf', 'r'))\r\n\r\nrecord = next(vcf_reader)\r\n```\r\nI tried Py2.7 and Py3.5 and got these errors:\r\nPython 2.7:\r\n```\r\nTraceback (most recent call last):\r\n\r\n  File \"/Users/davidstanek/Dropbox/Skola/2LF UK/Python/vcf_filter27/filter_vcf_27.py\", line 6, in <module>\r\n    record = next(vcf_reader)\r\n  File \"/Library/Python/2.7/site-packages/vcf/parser.py\", line 586, in next\r\n    samples = self._parse_samples(row[9:], fmt, record)\r\n  File \"/Library/Python/2.7/site-packages/vcf/parser.py\", line 483, in _parse_samples\r\n    sampdat[i] = float(vals)\r\nValueError: invalid literal for float(): 0,255,255\r\n```\r\n\r\nPython 3.5:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/vcf/parser.py\", line 481, in _parse_samples\r\n    sampdat[i] = int(vals)\r\nValueError: invalid literal for int() with base 10: '0,255,255'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/davidstanek/Dropbox/Skola/2LF UK/Python/vcf_filtering/filter_vcf.py\", line 6, in <module>\r\n    record = next(vcf_reader)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/vcf/parser.py\", line 586, in __next__\r\n    samples = self._parse_samples(row[9:], fmt, record)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/vcf/parser.py\", line 483, in _parse_samples\r\n    sampdat[i] = float(vals)\r\nValueError: could not convert string to float: '0,255,255'\r\n```\r\n\r\nCan you please help with this error? Thank you\r\n\r\nVCF is here: https://www.dropbox.com/s/rnkzp9635h0tmc5/6788.vcf?dl=0 (its 50 MB)\r\nFew lines of VCF:\r\n```\r\n##fileformat=VCFv4.1\t\t\t\t\t\t\t\t\t\r\n##GeneratedBy=SureCall2.0 Snppet\t\t\t\t\t\t\t\t\t\r\n##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Raw read depth\">\t\t\t\t\t\t\t\t\t\r\n##INFO=<ID=DP4,Number=4,Type=Integer,Description=\"# high-quality ref-forward bases, ref-reverse, alt-forward and alt-reverse bases\">\t\t\t\t\t\t\t\t\t\r\n##INFO=<ID=MQ,Number=1,Type=Float,Description=\"Root-mean-square mapping quality of covering reads\">\t\t\t\t\t\t\t\t\t\r\n##INFO=<ID=AF1,Number=1,Type=Float,Description=\"estimate of the first ALT allele frequency\">\t\t\t\t\t\t\t\t\t\r\n##INFO=<ID=AN,Number=1,Type=Float,Description=\"Total number of alleles in called genotypes\">\t\t\t\t\t\t\t\t\t\r\n##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\t\t\t\t\t\t\t\t\t\r\n##FORMAT=<ID=PL,Number=1,Type=Integer,Description=\"List of Phred-scaled genotype likelihoods\">\t\t\t\t\t\t\t\t\t\r\n##FORMAT=<ID=GQ,Number=1,Type=Integer,Description=\"Genotype Quality\">\t\t\t\t\t\t\t\t\t\r\n#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\t6788\r\nchr1\t65529\t.\tC\tT\t255.0\tPASS\tALTCOUNT=14;DP=51.0;DP4=27,11,9,5;AF1=0.27450982;MQ=41;IsKnownVariant=0;EFF=UPSTREAM(MODIFIER||||OR4F5|mRNA|CODING|NM_001005484|);SEL_PRIMARY_EFF=0;pValue=1.0E-255;Zygosity=HET;Category=Category//@IV-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/0:0,255,255:10\r\nchr1\t65591\t.\tC\tT\t255.0\tPASS\tALTCOUNT=13;DP=59.0;DP4=21,26,6,7;AF1=0.22033899;MQ=41;IsKnownVariant=0;dbnsfpUniprot_acc;dbnsfpInterpro_domain;dbnsfpEnsembl_transcriptid;dbnsfpSIFT_score;dbnsfpGERP++_NR;dbnsfpGERP++_RS;dbnsfp29way_logOdds;dbnsfp1000Gp1_AF;dbnsfp1000Gp1_AFR_AF;dbnsfp1000Gp1_EUR_AF;dbnsfp1000Gp1_AMR_AF;dbnsfp1000Gp1_ASN_AF;dbnsfpESP5400_AA_AF;EFF=UPSTREAM(MODIFIER||||OR4F5|mRNA|CODING|NM_001005484|);SEL_PRIMARY_EFF=0;pValue=1.0E-255;Zygosity=HOM;Category=Category//@IV-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/0:0,255,255:10\r\nchr1\t65797\t.\tT\tC\t255.0\tPASS\tALTCOUNT=10;DP=36.0;DP4=25,2,9,1;AF1=0.2777778;MQ=41;IsKnownVariant=0;dbnsfpUniprot_acc;dbnsfpInterpro_domain;dbnsfpEnsembl_transcriptid;dbnsfpSIFT_score;dbnsfpGERP++_NR;dbnsfpGERP++_RS;dbnsfp29way_logOdds;dbnsfp1000Gp1_AF;dbnsfp1000Gp1_AFR_AF;dbnsfp1000Gp1_EUR_AF;dbnsfp1000Gp1_AMR_AF;dbnsfp1000Gp1_ASN_AF;dbnsfpESP5400_AA_AF;EFF=UPSTREAM(MODIFIER||||OR4F5|mRNA|CODING|NM_001005484|);SEL_PRIMARY_EFF=0;pValue=1.0E-255;Zygosity=HET;Category=Category//@IV-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/0:0,255,255:10\r\nchr1\t65872\t.\tT\tG\t255.0\tPASS\tALTCOUNT=31;DP=113.0;DP4=49,34,17,14;AF1=0.27433628;MQ=41;IsKnownVariant=0;dbnsfpUniprot_acc;dbnsfpInterpro_domain;dbnsfpEnsembl_transcriptid;dbnsfpSIFT_score;dbnsfpGERP++_NR;dbnsfpGERP++_RS;dbnsfp29way_logOdds;dbnsfp1000Gp1_AF;dbnsfp1000Gp1_AFR_AF;dbnsfp1000Gp1_EUR_AF;dbnsfp1000Gp1_AMR_AF;dbnsfp1000Gp1_ASN_AF;dbnsfpESP5400_AA_AF;EFF=UPSTREAM(MODIFIER||||OR4F5|mRNA|CODING|NM_001005484|);SEL_PRIMARY_EFF=0;pValue=1.0E-255;Zygosity=HET;Category=Category//@IV-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/0:0,255,255:10\r\nchr1\t69511\t.\tA\tG\t123.0\tPASS\tALTCOUNT=84;DP=84.0;DP4=1,0,59,25;AF1=1.0;MQ=41;IsKnownVariant=0;dbnsfpUniprot_acc=Q8NH21;dbnsfpInterpro_domain=GPCR,_rhodopsin-like_superfamily_(1),;dbnsfpEnsembl_transcriptid=ENST00000534990,ENST00000335137;dbnsfpSIFT_score=0.950000;dbnsfpGERP++_NR=2.31;dbnsfpGERP++_RS=1.15;dbnsfp29way_logOdds=4.1978;dbnsfp1000Gp1_AF=0.652014652014652;dbnsfp1000Gp1_AFR_AF=0.32926829268292684;dbnsfp1000Gp1_EUR_AF=0.6952506596306068;dbnsfp1000Gp1_AMR_AF=0.649171270718232;dbnsfp1000Gp1_ASN_AF=0.8741258741258742;dbnsfpESP5400_AA_AF=0.568242;EFF=NON_SYNONYMOUS_CODING(MODERATE|MISSENSE|Aca/Gca|T141A|OR4F5|mRNA|CODING|NM_001005484|NM_001005484.ex.1);SEL_PRIMARY_EFF=0;Mutation_Description(COSMIC)=Substitution_Missense;Mutation_cds_syntax=c.421A>G;Mutation_AA_syntax=p.T141A;Tumour_Site_(cosmic)=thyroid;Frequency_(cosmic)=100.00;HGVS_Syntax(COSMIC)=c.421A>Gp.T141A;Gene_Description=70008;pValue=1.0E-123;Zygosity=HOM;Category=Category//@II-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/1:0,0,255:255\r\nchr1\t752894\t.\tT\tC\t255.0\tPASS\tALTCOUNT=36;DP=66.0;DP4=26,5,28,8;AF1=0.54545456;MQ=41;IsKnownVariant=0;EFF=SYNONYMOUS_CODING(LOW|SILENT|gcT/gcC|A48|FAM87B|Non-coding_transcript|NON_CODING|NR_103536|NR_103536.ex.1);SEL_PRIMARY_EFF=0;Gene_Description=755214;pValue=1.0E-255;Zygosity=HET;Category=Category//@III-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/0:0,255,255:10\r\nchr1\t762273\t.\tG\tA\t123.0\tPASS\tALTCOUNT=69;DP=69.0;DP4=1,0,21,48;AF1=1.0;MQ=41;IsKnownVariant=0;EFF=SYNONYMOUS_CODING(LOW|SILENT|tcC/tcT|S210|LINC00115|Non-coding_transcript|NON_CODING|NR_024321|NR_024321.ex.1),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047519|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047521|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047523|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047524|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047525|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047526|);SEL_PRIMARY_EFF=0;Gene_Description=762902;pValue=1.0E-123;Zygosity=HOM;Category=Category//@III-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/1:0,0,255:255\r\nchr1\t762589\t.\tG\tC\t255.0\tPASS\tALTCOUNT=10;DP=13.0;DP4=1,3,0,10;AF1=0.7692308;MQ=41;IsKnownVariant=0;EFF=NON_SYNONYMOUS_CODING(MODERATE|MISSENSE|cCt/cGt|P105R|LINC00115|Non-coding_transcript|NON_CODING|NR_024321|NR_024321.ex.1),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047519|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047521|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047523|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047524|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047525|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047526|);SEL_PRIMARY_EFF=0;Gene_Description=762902;pValue=1.0E-255;Zygosity=HOM;Category=Category//@II-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/1:0,0,0:10\r\nchr1\t762592\t.\tC\tG\t255.0\tPASS\tALTCOUNT=11;DP=13.0;DP4=1,2,1,10;AF1=0.84615386;MQ=41;IsKnownVariant=0;EFF=NON_SYNONYMOUS_CODING(MODERATE|MISSENSE|cGg/cCg|R104P|LINC00115|Non-coding_transcript|NON_CODING|NR_024321|NR_024321.ex.1),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047519|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047521|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047523|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047524|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047525|),UPSTREAM(MODIFIER||||LINC01128|Non-coding_transcript|NON_CODING|NR_047526|);SEL_PRIMARY_EFF=0;Gene_Description=762902;pValue=1.0E-255;Zygosity=HOM;Category=Category//@II-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/0:0,255,255:10\r\nchr1\t792263\t.\tA\tG\t255.0\tPASS\tALTCOUNT=31;DP=35.0;DP4=4,1,27,4;AF1=0.8857143;MQ=41;IsKnownVariant=0;EFF=NON_SYNONYMOUS_CODING(MODERATE|MISSENSE|Act/Gct|T1322A|LINC01128|Non-coding_transcript|NON_CODING|NR_047523|NR_047523.ex.4),NON_SYNONYMOUS_CODING(MODERATE|MISSENSE|Act/Gct|T1354A|LINC01128|Non-coding_transcript|NON_CODING|NR_047521|NR_047521.ex.5),NON_SYNONYMOUS_CODING(MODERATE|MISSENSE|Act/Gct|T1405A|LINC01128|Non-coding_transcript|NON_CODING|NR_047519|NR_047519.ex.6),SYNONYMOUS_CODING(LOW|SILENT|gcA/gcG|A1292|LINC01128|Non-coding_transcript|NON_CODING|NR_047524|NR_047524.ex.4),SYNONYMOUS_CODING(LOW|SILENT|gcA/gcG|A1309|LINC01128|Non-coding_transcript|NON_CODING|NR_047525|NR_047525.ex.5);SEL_PRIMARY_EFF=0;Gene_Description=794826;pValue=1.0E-255;Zygosity=HOM;Category=Category//@II-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/0:0,255,255:10\r\nchr1\t792480\t.\tC\tT\t123.0\tPASS\tALTCOUNT=91;DP=91.0;DP4=1,0,32,59;AF1=1.0;MQ=41;IsKnownVariant=0;EFF=NON_SYNONYMOUS_CODING(MODERATE|MISSENSE|Cat/Tat|H1365Y|LINC01128|Non-coding_transcript|NON_CODING|NR_047524|NR_047524.ex.4),NON_SYNONYMOUS_CODING(MODERATE|MISSENSE|Cat/Tat|H1382Y|LINC01128|Non-coding_transcript|NON_CODING|NR_047525|NR_047525.ex.5),NON_SYNONYMOUS_CODING(MODERATE|MISSENSE|aCa/aTa|T1394I|LINC01128|Non-coding_transcript|NON_CODING|NR_047523|NR_047523.ex.4),NON_SYNONYMOUS_CODING(MODERATE|MISSENSE|aCa/aTa|T1426I|LINC01128|Non-coding_transcript|NON_CODING|NR_047521|NR_047521.ex.5),NON_SYNONYMOUS_CODING(MODERATE|MISSENSE|aCa/aTa|T1477I|LINC01128|Non-coding_transcript|NON_CODING|NR_047519|NR_047519.ex.6);SEL_PRIMARY_EFF=0;Gene_Description=794826;pValue=1.0E-123;Zygosity=HOM;Category=Category//@II-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/1:0,0,255:255\r\nchr1\t866319\t.\tG\tA\t123.0\tPASS\tALTCOUNT=17;DP=17.0;DP4=1,0,14,3;AF1=1.0;MQ=41;IsKnownVariant=0;dbnsfpUniprot_acc;dbnsfpInterpro_domain;dbnsfpEnsembl_transcriptid;dbnsfpSIFT_score;dbnsfpGERP++_NR;dbnsfpGERP++_RS;dbnsfp29way_logOdds;dbnsfp1000Gp1_AF;dbnsfp1000Gp1_AFR_AF;dbnsfp1000Gp1_EUR_AF;dbnsfp1000Gp1_AMR_AF;dbnsfp1000Gp1_ASN_AF;dbnsfpESP5400_AA_AF;EFF=INTRON(MODIFIER||||SAMD11|mRNA|CODING|NM_152486|);SEL_PRIMARY_EFF=0;OMIM_ID=OMIM:616765;Gene_Description=879961;pValue=1.0E-123;Zygosity=HOM;Category=Category//@III-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/1:0,0,255:255\r\nchr1\t880238\t.\tA\tG\t123.0\tPASS\tALTCOUNT=70;DP=70.0;DP4=1,0,37,33;AF1=1.0;MQ=41;IsKnownVariant=0;dbnsfpUniprot_acc;dbnsfpInterpro_domain;dbnsfpEnsembl_transcriptid;dbnsfpSIFT_score;dbnsfpGERP++_NR;dbnsfpGERP++_RS;dbnsfp29way_logOdds;dbnsfp1000Gp1_AF;dbnsfp1000Gp1_AFR_AF;dbnsfp1000Gp1_EUR_AF;dbnsfp1000Gp1_AMR_AF;dbnsfp1000Gp1_ASN_AF;dbnsfpESP5400_AA_AF;EFF=DOWNSTREAM(MODIFIER||||SAMD11|mRNA|CODING|NM_152486|),INTRON(MODIFIER||||NOC2L|mRNA|CODING|NM_015658|);SEL_PRIMARY_EFF=1;OMIM_ID=OMIM:610770;Gene_Description=894679;pValue=1.0E-123;Zygosity=HOM;Category=Category//@III-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/1:0,0,255:255\r\nchr1\t881627\t.\tG\tA\t255.0\tPASS\tALTCOUNT=19;DP=43.0;DP4=18,7,9,10;AF1=0.44186047;MQ=41;IsKnownVariant=0;dbnsfpUniprot_acc;dbnsfpInterpro_domain;dbnsfpEnsembl_transcriptid;dbnsfpSIFT_score;dbnsfpGERP++_NR;dbnsfpGERP++_RS;dbnsfp29way_logOdds;dbnsfp1000Gp1_AF;dbnsfp1000Gp1_AFR_AF;dbnsfp1000Gp1_EUR_AF;dbnsfp1000Gp1_AMR_AF;dbnsfp1000Gp1_ASN_AF;dbnsfpESP5400_AA_AF;EFF=DOWNSTREAM(MODIFIER||||SAMD11|mRNA|CODING|NM_152486|),SYNONYMOUS_CODING(LOW|SILENT|Ctg/Ttg|L615|NOC2L|mRNA|CODING|NM_015658|NM_015658.ex.16);SEL_PRIMARY_EFF=1;Mutation_Description(COSMIC)=Substitution_coding//\\@silent;Mutation_cds_syntax=c.1843C>T;Mutation_AA_syntax=p.L615L;Tumour_Site_(cosmic)=large_intestine,thyroid;Frequency_(cosmic)=8.82,33.33;HGVS_Syntax(COSMIC)=c.1843C>Tp.L615L;OMIM_ID=OMIM:610770;Gene_Description=894679;pValue=1.0E-255;Zygosity=HET;Category=Category//@III-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/0:0,255,255:10\r\nchr1\t883625\t.\tA\tG\t123.0\tPASS\tALTCOUNT=38;DP=38.0;DP4=1,0,20,18;AF1=1.0;MQ=41;IsKnownVariant=0;dbnsfpUniprot_acc;dbnsfpInterpro_domain;dbnsfpEnsembl_transcriptid;dbnsfpSIFT_score;dbnsfpGERP++_NR;dbnsfpGERP++_RS;dbnsfp29way_logOdds;dbnsfp1000Gp1_AF;dbnsfp1000Gp1_AFR_AF;dbnsfp1000Gp1_EUR_AF;dbnsfp1000Gp1_AMR_AF;dbnsfp1000Gp1_ASN_AF;dbnsfpESP5400_AA_AF;EFF=DOWNSTREAM(MODIFIER||||SAMD11|mRNA|CODING|NM_152486|),INTRON(MODIFIER||||NOC2L|mRNA|CODING|NM_015658|);SEL_PRIMARY_EFF=1;OMIM_ID=OMIM:610770;Gene_Description=894679;pValue=1.0E-123;Zygosity=HOM;Category=Category//@III-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/1:0,0,255:255\r\nchr1\t884091\t.\tC\tG\t255.0\tPASS\tALTCOUNT=14;DP=35.0;DP4=2,20,1,13;AF1=0.4;MQ=41;IsKnownVariant=0;dbnsfpUniprot_acc;dbnsfpInterpro_domain;dbnsfpEnsembl_transcriptid;dbnsfpSIFT_score;dbnsfpGERP++_NR;dbnsfpGERP++_RS;dbnsfp29way_logOdds;dbnsfp1000Gp1_AF;dbnsfp1000Gp1_AFR_AF;dbnsfp1000Gp1_EUR_AF;dbnsfp1000Gp1_AMR_AF;dbnsfp1000Gp1_ASN_AF;dbnsfpESP5400_AA_AF;EFF=DOWNSTREAM(MODIFIER||||SAMD11|mRNA|CODING|NM_152486|),INTRON(MODIFIER||||NOC2L|mRNA|CODING|NM_015658|);SEL_PRIMARY_EFF=1;OMIM_ID=OMIM:610770;Gene_Description=894679;pValue=1.0E-255;Zygosity=HET;Category=Category//@III-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/0:0,255,255:10\r\nchr1\t884101\t.\tA\tC\t255.0\tPASS\tALTCOUNT=12;DP=29.0;DP4=2,16,2,10;AF1=0.41379312;MQ=41;IsKnownVariant=0;dbnsfpUniprot_acc;dbnsfpInterpro_domain;dbnsfpEnsembl_transcriptid;dbnsfpSIFT_score;dbnsfpGERP++_NR;dbnsfpGERP++_RS;dbnsfp29way_logOdds;dbnsfp1000Gp1_AF;dbnsfp1000Gp1_AFR_AF;dbnsfp1000Gp1_EUR_AF;dbnsfp1000Gp1_AMR_AF;dbnsfp1000Gp1_ASN_AF;dbnsfpESP5400_AA_AF;EFF=DOWNSTREAM(MODIFIER||||SAMD11|mRNA|CODING|NM_152486|),INTRON(MODIFIER||||NOC2L|mRNA|CODING|NM_015658|);SEL_PRIMARY_EFF=1;OMIM_ID=OMIM:610770;Gene_Description=894679;pValue=1.0E-255;Zygosity=HET;Category=Category//@III-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/0:0,255,255:10\r\nchr1\t886788\t.\tG\tA\t123.0\tPASS\tALTCOUNT=26;DP=26.0;DP4=1,0,2,24;AF1=1.0;MQ=41;IsKnownVariant=0;dbnsfpUniprot_acc;dbnsfpInterpro_domain;dbnsfpEnsembl_transcriptid;dbnsfpSIFT_score;dbnsfpGERP++_NR;dbnsfpGERP++_RS;dbnsfp29way_logOdds;dbnsfp1000Gp1_AF;dbnsfp1000Gp1_AFR_AF;dbnsfp1000Gp1_EUR_AF;dbnsfp1000Gp1_AMR_AF;dbnsfp1000Gp1_ASN_AF;dbnsfpESP5400_AA_AF;EFF=INTRON(MODIFIER||||NOC2L|mRNA|CODING|NM_015658|);SEL_PRIMARY_EFF=0;OMIM_ID=OMIM:610770;Gene_Description=894679;pValue=1.0E-123;Zygosity=HOM;Category=Category//@III-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/1:0,0,255:255\r\nchr1\t886817\t.\tC\tT\t123.0\tPASS\tALTCOUNT=15;DP=15.0;DP4=1,0,1,14;AF1=1.0;MQ=41;IsKnownVariant=0;dbnsfpUniprot_acc;dbnsfpInterpro_domain;dbnsfpEnsembl_transcriptid;dbnsfpSIFT_score;dbnsfpGERP++_NR;dbnsfpGERP++_RS;dbnsfp29way_logOdds;dbnsfp1000Gp1_AF;dbnsfp1000Gp1_AFR_AF;dbnsfp1000Gp1_EUR_AF;dbnsfp1000Gp1_AMR_AF;dbnsfp1000Gp1_ASN_AF;dbnsfpESP5400_AA_AF;EFF=INTRON(MODIFIER||||NOC2L|mRNA|CODING|NM_015658|);SEL_PRIMARY_EFF=0;OMIM_ID=OMIM:610770;Gene_Description=894679;pValue=1.0E-123;Zygosity=HOM;Category=Category//@III-Default//@Categorization;state=ALGORITHM_GENERATED\tGT:PL:GQ\t1/1:0,0,255:255\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/268", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/268/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/268/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/268", "id": 210047687, "node_id": "MDU6SXNzdWUyMTAwNDc2ODc=", "number": 268, "title": "UnicodeDecodeError parsing ClinVar VCF file", "user": {"login": "freekvh", "id": 12241293, "node_id": "MDQ6VXNlcjEyMjQxMjkz", "avatar_url": "https://avatars0.githubusercontent.com/u/12241293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freekvh", "html_url": "https://github.com/freekvh", "followers_url": "https://api.github.com/users/freekvh/followers", "following_url": "https://api.github.com/users/freekvh/following{/other_user}", "gists_url": "https://api.github.com/users/freekvh/gists{/gist_id}", "starred_url": "https://api.github.com/users/freekvh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freekvh/subscriptions", "organizations_url": "https://api.github.com/users/freekvh/orgs", "repos_url": "https://api.github.com/users/freekvh/repos", "events_url": "https://api.github.com/users/freekvh/events{/privacy}", "received_events_url": "https://api.github.com/users/freekvh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-24T13:26:29Z", "updated_at": "2017-03-05T09:37:08Z", "closed_at": "2017-03-05T09:37:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI downloaded the file clinvar_20170130.vcf.gz from ftp://ftp.ncbi.nlm.nih.gov/pub/clinvar/vcf_GRCh38/\r\n\r\nI start extracting information but I hit a UnicodeDecodeError:\r\n\r\n```\r\nfile = vcf.Reader(filename='clinvar_20170130GRCh38.vcf.gz')\r\ngenelist = []\r\nfor record in file:\r\n    genelist.append(Record.INFO['GENEINFO'].split(':')[0])\r\n```\r\n\r\n```\r\nUnicodeDecodeError                        Traceback (most recent call last)\r\n<ipython-input-42-a2a406474c55> in <module>()\r\n      1 genelist = []\r\n----> 2 for record in file:\r\n      3     genelist.append(Record.INFO['GENEINFO'].split(':')[0])\r\n\r\n/cadappl/python3/anaconda-3.5.1/lib/python3.5/site-packages/vcf/parser.py in __next__(self)\r\n    540     def __next__(self):\r\n    541         '''Return the next record in the file.'''\r\n--> 542         line = next(self.reader)\r\n    543         row = self._row_pattern.split(line.rstrip())\r\n    544         chrom = row[0]\r\n\r\n/cadappl/python3/anaconda-3.5.1/lib/python3.5/site-packages/vcf/parser.py in <genexpr>(.0)\r\n    278         self._alt_pattern = re.compile('[\\[\\]]')\r\n    279 \r\n--> 280         self.reader = (line.strip() for line in self._reader if line.strip())\r\n    281 \r\n    282         #: metadata fields from header (string or hash, depending)\r\n\r\n/cadappl/python3/anaconda-3.5.1/lib/python3.5/codecs.py in __next__(self)\r\n    640 \r\n    641         \"\"\" Return the next decoded line from the input stream.\"\"\"\r\n--> 642         line = self.readline()\r\n    643         if line:\r\n    644             return line\r\n\r\n/cadappl/python3/anaconda-3.5.1/lib/python3.5/codecs.py in readline(self, size, keepends)\r\n    553         # If size is given, we call read() only once\r\n    554         while True:\r\n--> 555             data = self.read(readsize, firstline=True)\r\n    556             if data:\r\n    557                 # If we're at a \"\\r\" read one extra character (which might\r\n\r\n/cadappl/python3/anaconda-3.5.1/lib/python3.5/codecs.py in read(self, size, chars, firstline)\r\n    499                 break\r\n    500             try:\r\n--> 501                 newchars, decodedbytes = self.decode(data, self.errors)\r\n    502             except UnicodeDecodeError as exc:\r\n    503                 if firstline:\r\n\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 52: ordinal not in range(128)\r\n```\r\n\r\nAt the moment the parsing crashes the genelist is 10937 entries long so it does work for a lot of entries. also:\r\n```\r\n\r\nRecord = next(file)\r\nprint('Chrom =', Record.CHROM)\r\nprint('POS =', Record.POS)\r\nprint('ID =', Record.ID)\r\nprint('REF =', Record.REF)\r\nprint('ALT =', Record.ALT)\r\nprint('Qual =', Record.QUAL)\r\nprint('Filter =', Record.FILTER)\r\nprint('Info =', Record.INFO)\r\nprint('\\n')\r\nprint('format =', Record.FORMAT)\r\nprint('Samples =', Record.samples)\r\nprint('Record =', Record.genotype)\r\n#print('\\n')\r\nprint('Info =', Record.INFO['GENEINFO'])\r\n```\r\n\r\nWorks and gives me meaningful data. Is one entry corrupt?\r\n\r\nI tried excepting the error but that doesn't work, it still stops parsing. I have no idea how I can invesigate said single entry.\r\n\r\nAny suggestions? Thank you!\r\n(As you can see I'm using Python 3.5.1 and I'm using the latest version of pyvcf.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/265", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/265/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/265/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/265", "id": 207288724, "node_id": "MDU6SXNzdWUyMDcyODg3MjQ=", "number": 265, "title": "no attribute 'data' in dict: sample.data", "user": {"login": "mh00h", "id": 3390579, "node_id": "MDQ6VXNlcjMzOTA1Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3390579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mh00h", "html_url": "https://github.com/mh00h", "followers_url": "https://api.github.com/users/mh00h/followers", "following_url": "https://api.github.com/users/mh00h/following{/other_user}", "gists_url": "https://api.github.com/users/mh00h/gists{/gist_id}", "starred_url": "https://api.github.com/users/mh00h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mh00h/subscriptions", "organizations_url": "https://api.github.com/users/mh00h/orgs", "repos_url": "https://api.github.com/users/mh00h/repos", "events_url": "https://api.github.com/users/mh00h/events{/privacy}", "received_events_url": "https://api.github.com/users/mh00h/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-02-13T17:40:45Z", "updated_at": "2017-04-07T20:29:31Z", "closed_at": "2017-04-07T20:29:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/jamescasbon/PyVCF/blob/master/vcf/parser.py#L744\r\n\r\n    def _format_sample(self, fmt, sample):\r\n        if hasattr(sample.data, 'GT'):\r\n        \r\n        AttributeError: 'dict' object has no attribute 'data'\r\n\r\nSeems the writer is missing some type safety, making the writer unusable.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/254", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/254/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/254/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/254", "id": 191583310, "node_id": "MDU6SXNzdWUxOTE1ODMzMTA=", "number": 254, "title": "Use a consistent data type for fields with a given format?", "user": {"login": "sambrightman", "id": 536652, "node_id": "MDQ6VXNlcjUzNjY1Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/536652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sambrightman", "html_url": "https://github.com/sambrightman", "followers_url": "https://api.github.com/users/sambrightman/followers", "following_url": "https://api.github.com/users/sambrightman/following{/other_user}", "gists_url": "https://api.github.com/users/sambrightman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sambrightman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sambrightman/subscriptions", "organizations_url": "https://api.github.com/users/sambrightman/orgs", "repos_url": "https://api.github.com/users/sambrightman/repos", "events_url": "https://api.github.com/users/sambrightman/events{/privacy}", "received_events_url": "https://api.github.com/users/sambrightman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-11-24T19:41:30Z", "updated_at": "2017-02-02T10:27:46Z", "closed_at": "2017-01-26T20:30:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "These lines:\r\n\r\n```\r\n                # we don't need to split single entries\r\n                 if entry_num == 1 or ',' not in vals:\r\n```\r\n\r\nin `parser.py` do not seem ideal. The first part of the condition \u2013 if the type of the field is `Number=1` \u2013 makes complete sense: do not provide a list for something that is always length 1. But the second part seems inconsistent when `Number` > 1, or `R`/`A` etc. A list is provided at one position and a non-list at another position because of the incidental difference in calls. It also makes it harder to deal with from client code - you can't only know the format of the field you are interested in. Is there a strong reason to do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/252", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/252/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/252/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/252", "id": 174076908, "node_id": "MDU6SXNzdWUxNzQwNzY5MDg=", "number": 252, "title": "Reading multiple VCFs in a loop gives IOError", "user": {"login": "nuin", "id": 6273, "node_id": "MDQ6VXNlcjYyNzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nuin", "html_url": "https://github.com/nuin", "followers_url": "https://api.github.com/users/nuin/followers", "following_url": "https://api.github.com/users/nuin/following{/other_user}", "gists_url": "https://api.github.com/users/nuin/gists{/gist_id}", "starred_url": "https://api.github.com/users/nuin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nuin/subscriptions", "organizations_url": "https://api.github.com/users/nuin/orgs", "repos_url": "https://api.github.com/users/nuin/repos", "events_url": "https://api.github.com/users/nuin/events{/privacy}", "received_events_url": "https://api.github.com/users/nuin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-30T17:23:34Z", "updated_at": "2017-05-30T16:40:27Z", "closed_at": "2017-05-30T16:40:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi\n\nI have a simple loop that iterates over a list of VCFs in a directory for comparison of variant calls and whenever I open the VCF inside the `Reader` call \n\n``` python\nfor i in range(1, 101):\n    prob = '0' + str(prob_int)\n    downsample_vcf = vcf.Reader(open(result_path + '/' + sample_id + '/' + prob + '/' + sample_id + '_' + str(i) + '_' + prob + '.vcf', 'r'))\n...\n```\n\nit fails with this error\n\n``` python\nTraceback (most recent call last):\n  File \"extract_sensitivity.py\", line 104, in <module>\n    compare_variants(downsample_vcf, original_vcf)\n  File \"extract_sensitivity.py\", line 56, in compare_variants\n    for dvariant in vcf_file:\n  File \"parser.py\", line 526, in next\n    line = self.reader.next()\n  File \"parser.py\", line 268, in <genexpr>\n    self.reader = (line.strip() for line in self._reader if line.strip())\nIOError: [Errno 9] Bad file descriptor\nclose failed in file object destructor:\nIOError: [Errno 9] Bad file descriptor\n```\n\nIf I open the VCF outside the `Reader` call, and just pass the stream to it, closing the stream after no error is output.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/246", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/246/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/246/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/246", "id": 168511105, "node_id": "MDU6SXNzdWUxNjg1MTExMDU=", "number": 246, "title": "Genotype level filters not supported", "user": {"login": "Redmar-van-den-Berg", "id": 15814544, "node_id": "MDQ6VXNlcjE1ODE0NTQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/15814544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Redmar-van-den-Berg", "html_url": "https://github.com/Redmar-van-den-Berg", "followers_url": "https://api.github.com/users/Redmar-van-den-Berg/followers", "following_url": "https://api.github.com/users/Redmar-van-den-Berg/following{/other_user}", "gists_url": "https://api.github.com/users/Redmar-van-den-Berg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Redmar-van-den-Berg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Redmar-van-den-Berg/subscriptions", "organizations_url": "https://api.github.com/users/Redmar-van-den-Berg/orgs", "repos_url": "https://api.github.com/users/Redmar-van-den-Berg/repos", "events_url": "https://api.github.com/users/Redmar-van-den-Berg/events{/privacy}", "received_events_url": "https://api.github.com/users/Redmar-van-den-Berg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-31T10:10:11Z", "updated_at": "2016-08-11T21:25:55Z", "closed_at": "2016-08-11T21:25:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Next to the normal FILTER, vcf files can also contain per-genotype filters, using the FT annotation in the FORMAT field. The format mimics the formatting of the FILTER field, eg 'PASS' for passing the filter, and 'filt1;filt2' for failing two filters.\n\nFrom the VCFv4.2 spec:\n\n> FT : sample genotype filter indicating if this genotype was \u201ccalled\u201d (similar in concept to the FILTER field). Again, use PASS to indicate that all filters have been passed, a semi-colon separated list of codes for filters that fail, or \u2018.\u2019 to indicate that filters have not been applied. These values should be described in the meta-information in the same way as FILTERs (String, no white-space or semi-colons permitted)\n\nFor now, PyVCF treats the FT annotation as a regular annotation instead of as a filter. I would like to add support for the FT annotation, and will post a pull request when I have a working implementation.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/243", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/243/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/243/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/243", "id": 165740087, "node_id": "MDU6SXNzdWUxNjU3NDAwODc=", "number": 243, "title": "Error when creating empty records with `make_calldata_tuple` and `_Call`", "user": {"login": "bow", "id": 343998, "node_id": "MDQ6VXNlcjM0Mzk5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/343998?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bow", "html_url": "https://github.com/bow", "followers_url": "https://api.github.com/users/bow/followers", "following_url": "https://api.github.com/users/bow/following{/other_user}", "gists_url": "https://api.github.com/users/bow/gists{/gist_id}", "starred_url": "https://api.github.com/users/bow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bow/subscriptions", "organizations_url": "https://api.github.com/users/bow/orgs", "repos_url": "https://api.github.com/users/bow/repos", "events_url": "https://api.github.com/users/bow/events{/privacy}", "received_events_url": "https://api.github.com/users/bow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-15T08:53:16Z", "updated_at": "2016-07-21T19:00:15Z", "closed_at": "2016-07-21T19:00:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello PyVCF developers,\n\nSome time ago I needed to write a VCF merging script that involves creating empty sample calls (for when a call at a given position is present in one sample but not the other). This involves the use of `vcf.model.make_calldata_tuple`.\n\nThe way I created the empty record was to simply get the expected `FORMAT` keys and use them like this:\n\n```\nempty_call_func = make_calldata_tuple(format_keys)\nempty_call = _Call(None, sample_name, empty_call_func(*[None for n in format_keys]))\n```\n\nThis worked when I was doing it on PyVCF 0.6.7. However in the most recent release (0.6.8), I stumbled on this error:\n\n```\nTraceback (most recent call last):\n  File \"/exports/test/vcf_merge.py\", line 51, in <module>\n    empty_call = _Call(None, sample, empty_cd_func(*[None for n in writer.template.formats]))\n  File \"/usr/local/sasc/miniconda3/envs/test/lib/python3.5/site-packages/vcf/model.py\", line 27, in __init__\n    self.gt_alleles = [(al if al != '.' else None) for al in allele_delimiter.split(self.data.GT)]\nTypeError: expected string or bytes-like object\n```\n\nUpon checking it further, it seems the culprit was [this particular line](https://github.com/jamescasbon/PyVCF/blob/master/vcf/model.py#L26). It's not very apparent, but the check there is only for whether the attribute (which may well be `None`) is present or not. I think a more thorough check should be:\n\n```\nif hasattr(self.data, 'GT') and self.data.GT is not None:\n```\n\nThere is also an additional error that assumes implicit conversion of `True` to an  `int` [here](https://github.com/jamescasbon/PyVCF/blob/master/vcf/model.py#L282). There, it seems that the better call should be:\n\n```\nreturn sum(1 for s in self.samples if s.called)\n```\n\nSo that even when `s.called` is None, it will still work.\n\nNow, I'm not exactly sure first if the way I created the empty record is the best (I used `_Call`, which I know is supposed to be private). So I'm open to suggestions of doing another way :). Still, I do think the previous two lines can be improved so that they're more error-resistant.\n\n(by the way, these are only two simple code change so I thought I'd just open an issue here. Let me know if you prefer otherwise).\n\nThanks in advance for looking into this :).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/242", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/242/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/242/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/242", "id": 164984818, "node_id": "MDU6SXNzdWUxNjQ5ODQ4MTg=", "number": 242, "title": "invalid literal for float() when parsing VCF records", "user": {"login": "darencard", "id": 8263623, "node_id": "MDQ6VXNlcjgyNjM2MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/8263623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darencard", "html_url": "https://github.com/darencard", "followers_url": "https://api.github.com/users/darencard/followers", "following_url": "https://api.github.com/users/darencard/following{/other_user}", "gists_url": "https://api.github.com/users/darencard/gists{/gist_id}", "starred_url": "https://api.github.com/users/darencard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darencard/subscriptions", "organizations_url": "https://api.github.com/users/darencard/orgs", "repos_url": "https://api.github.com/users/darencard/repos", "events_url": "https://api.github.com/users/darencard/events{/privacy}", "received_events_url": "https://api.github.com/users/darencard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-12T03:08:11Z", "updated_at": "2016-07-12T06:03:31Z", "closed_at": "2016-07-12T06:03:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having an issue that appears to occur when parsing VCF records that I fetched from a tabix-indexed VCF file. Here is the traceback:\n\n```\nTraceback (most recent call last):\n  File \"vcfconsensus\", line 267, in <module>\n    main(sys.argv)\n  File \"vcfconsensus\", line 216, in main\n    for record in vcf_in.fetch(seqNameTuple[0], seqNameTuple[1], seqNameTuple[2]):\n  File \"//anaconda/lib/python2.7/site-packages/vcf/parser.py\", line 586, in next\n    samples = self._parse_samples(row[9:], fmt, record)\n  File \"//anaconda/lib/python2.7/site-packages/vcf/parser.py\", line 451, in _parse_samples\n    self.samples, samples, samp_fmt, samp_fmt._types, samp_fmt._nums, site)\n  File \"vcf/cparse.pyx\", line 57, in vcf.cparse.parse_samples (vcf/cparse.c:1552)\nValueError: invalid literal for float(): 0,3,32\n```\n\nI've read in the VCF using:\n\n```\nvcf_in = vcf.Reader(filename=args.vcf)\n```\n\nwhere `args.vcf` is reading the VCF file name from python command-line arguments. From here I'm following the documentation and am fetching from the Reader:\n\n```\nfor record in vcf_in.fetch(seqNameTuple[0], seqNameTuple[1], seqNameTuple[2]):\n```\n\nThe seqNameTuple is simply a tuple of `(chrom, start, end)` that I've parsed from a FASTA header.\n\nThe VCF is v.4.2 and records look like this (with more samples than just 2... I've abbreviated).\n\n```\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  Pymo063 Pymo067\nNW_006532014.1  257889  .   G   C   34.75   PASS    AN=174;AC=2 GT:AD:DP:FT:GQ:PL   ./.:.:.:PASS:.:.    0/0:132,0:132:PASS:99:0,394,4900\nNW_006532014.1  275657  .   C   T   446.12  PASS    AN=176;AC=2 GT:AD:DP:FT:GQ:HP:PL    ./.:.:.:PASS:.:.:.  0/0:169,0:169:PASS:99:.:0,499,6088\nNW_006532014.1  332170  .   T   G   71819.1 PASS    AN=134;AC=133   GT:AD:DP:FT:GQ:HP:PL    ./.:.:.:PASS:.:.:.  1/1:0,23:23:PASS:69:.:868,69,0\nNW_006532014.1  376980  .   T   C   2066.56 PASS    AN=164;AC=4 GT:AD:DP:FT:GQ:HP:PL    ./.:.:.:PASS:.:.:.  0/0:201,2:203:PASS:99:.:0,514,7833\nNW_006532014.1  376981  .   C   T   218.08  PASS    AN=164;AC=2 GT:AD:DP:FT:GQ:HP:PL    ./.:.:.:PASS:.:.:.  0/0:201,0:201:PASS:99:.:0,596,8071\nNW_006532014.1  548411  .   C   T   388.5   PASS    AN=178;AC=1 GT:AD:DP:FT:GQ:HP:PL    ./.:.:.:PASS:.:.:.  0/0:137,0:137:PASS:99:.:0,412,5489\nNW_006532014.1  727775  .   A   C   603.39  PASS    AN=110;AC=2 GT:AD:DP:FT:GQ:PL   ./.:.:.:PASS:.:.    0/0:9,0:9:PASS:27:0,27,327\nNW_006532014.1  742459  .   G   A   1747.37 PASS    AN=182;AC=1 GT:AD:DP:FT:GQ:HP:PL    ./.:.:.:PASS:.:.:.  0/0:243,0:243:PASS:99:.:0,719,9317\nNW_006532014.1  1052825 .   G   A   32.53   PASS    AN=134;AC=1 GT:AD:DP:FT:GQ:HP:PL    ./.:.:.:PASS:.:.:.  0/0:42,0:42:PASS:99:.:0,126,1660\nNW_006532014.1  1172356 .   T   C   171261  PASS    AN=182;AC=179   GT:AD:DP:FT:GQ:HP:PL    ./.:.:.:PASS:.:.:.  1/1:3,127:130:PASS:99:.:4420,269,0\nNW_006532014.1  1172371 .   C   T   190104  PASS    AN=182;AC=182   GT:AD:DP:FT:GQ:PL   ./.:.:.:PASS:.:.    1/1:1,155:156:PASS:99:5665,436,0\n```\n\nThe problematic string from the error above is found in the 1st record of this VCF (confirmed via Grep). Any guidance on getting around this would be greatly appreciated, as I don't have the knowledge of Python to diagnose myself.\n\nThanks!\nDaren\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/241", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/241/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/241/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/241/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/241", "id": 163932764, "node_id": "MDU6SXNzdWUxNjM5MzI3NjQ=", "number": 241, "title": "vcf_melt ", "user": {"login": "ericcoy", "id": 20045311, "node_id": "MDQ6VXNlcjIwMDQ1MzEx", "avatar_url": "https://avatars3.githubusercontent.com/u/20045311?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ericcoy", "html_url": "https://github.com/ericcoy", "followers_url": "https://api.github.com/users/ericcoy/followers", "following_url": "https://api.github.com/users/ericcoy/following{/other_user}", "gists_url": "https://api.github.com/users/ericcoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ericcoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ericcoy/subscriptions", "organizations_url": "https://api.github.com/users/ericcoy/orgs", "repos_url": "https://api.github.com/users/ericcoy/repos", "events_url": "https://api.github.com/users/ericcoy/events{/privacy}", "received_events_url": "https://api.github.com/users/ericcoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-07-05T19:58:00Z", "updated_at": "2016-07-05T19:59:58Z", "closed_at": "2016-07-05T19:59:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to turn my VCF file into a data frame using the vcf_melt script. At the following line:\n inp = file(sys.argv[1])\n\nNameError: name 'file' is not defined\n\nHow do I designate my vcf file to this script to create a data frame?  Preferably, I will use this data frame with Pandas and export to an excel file.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/237", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/237/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/237/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/237", "id": 162351052, "node_id": "MDU6SXNzdWUxNjIzNTEwNTI=", "number": 237, "title": "Error when try read vcf file", "user": {"login": "andrelramos", "id": 10236206, "node_id": "MDQ6VXNlcjEwMjM2MjA2", "avatar_url": "https://avatars1.githubusercontent.com/u/10236206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrelramos", "html_url": "https://github.com/andrelramos", "followers_url": "https://api.github.com/users/andrelramos/followers", "following_url": "https://api.github.com/users/andrelramos/following{/other_user}", "gists_url": "https://api.github.com/users/andrelramos/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrelramos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrelramos/subscriptions", "organizations_url": "https://api.github.com/users/andrelramos/orgs", "repos_url": "https://api.github.com/users/andrelramos/repos", "events_url": "https://api.github.com/users/andrelramos/events{/privacy}", "received_events_url": "https://api.github.com/users/andrelramos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-26T22:25:16Z", "updated_at": "2016-06-27T17:05:35Z", "closed_at": "2016-06-27T17:05:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "This is my VCF file:\n\n```\nBEGIN:VCARD\nVERSION:2.1\nEMAIL;PREF:pastorcjunior@hotmail.com\nEND:VCARD\n```\n\nThis is my code:\n\n```\n>>> a = open('/home/marco/contacts2.vcf','r')\n>>> r = vcf.Reader(a)\n>>> next(r)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/marco/saapenv/lib/python3.5/site-packages/vcf/parser.py\", line 547, in __next__\n    pos = int(row[1])\nIndexError: list index out of range\n>>> \n```\n\n Can someone help me?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/234", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/234/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/234/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/234", "id": 160438276, "node_id": "MDU6SXNzdWUxNjA0MzgyNzY=", "number": 234, "title": "SyntaxError: One of the INFO lines is malformed", "user": {"login": "jsmedmar", "id": 8843150, "node_id": "MDQ6VXNlcjg4NDMxNTA=", "avatar_url": "https://avatars2.githubusercontent.com/u/8843150?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsmedmar", "html_url": "https://github.com/jsmedmar", "followers_url": "https://api.github.com/users/jsmedmar/followers", "following_url": "https://api.github.com/users/jsmedmar/following{/other_user}", "gists_url": "https://api.github.com/users/jsmedmar/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsmedmar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsmedmar/subscriptions", "organizations_url": "https://api.github.com/users/jsmedmar/orgs", "repos_url": "https://api.github.com/users/jsmedmar/repos", "events_url": "https://api.github.com/users/jsmedmar/events{/privacy}", "received_events_url": "https://api.github.com/users/jsmedmar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-15T14:36:08Z", "updated_at": "2016-06-15T20:58:29Z", "closed_at": "2016-06-15T20:58:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Regards, \n\nIssue #200  addressed a very similar error that was supposed to be fixed with the `0.6.8` release.\n\nThis is my code:\n\n```\nfilename = \"filename.vcf.gz\"\nreader = vcf.Reader(filename=filename)\nnext(reader)\n```\n\nThis is the error:\n\n```\nFile \"<string>\", line unknown\nSyntaxError: One of the INFO lines is malformed: ##INFO=<ID=CA,Number=,Type=Flag,Description=\"Position could not be annotated to a coding region of a transcript using the supplied bed file\">\n```\n\nThe `Number` tag has nothing after the `=` character, that seems to break the parsing.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/231", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/231/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/231/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/231", "id": 143296222, "node_id": "MDU6SXNzdWUxNDMyOTYyMjI=", "number": 231, "title": "v0.6.8 AttributeError: 'str' object has no attribute 'type'", "user": {"login": "stevendavis", "id": 7604948, "node_id": "MDQ6VXNlcjc2MDQ5NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/7604948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevendavis", "html_url": "https://github.com/stevendavis", "followers_url": "https://api.github.com/users/stevendavis/followers", "following_url": "https://api.github.com/users/stevendavis/following{/other_user}", "gists_url": "https://api.github.com/users/stevendavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevendavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevendavis/subscriptions", "organizations_url": "https://api.github.com/users/stevendavis/orgs", "repos_url": "https://api.github.com/users/stevendavis/repos", "events_url": "https://api.github.com/users/stevendavis/events{/privacy}", "received_events_url": "https://api.github.com/users/stevendavis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-24T16:36:15Z", "updated_at": "2016-03-25T18:39:33Z", "closed_at": "2016-03-25T18:39:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Started seeing this stack trace after upgrading to 0.6.8.  No error when using 0.6.7.\n\n  File .../python2.7/site-packages/vcf/model.py, line 192, in **init**\n    self._set_start_and_end()\n  File .../python2.7/site-packages/vcf/model.py, line 200, in _set_start_and_end\n    elif alt.type == 'SNV':\nAttributeError: 'str' object has no attribute 'type'\n\nWhat am I doing wrong?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/229", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/229/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/229/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/229", "id": 140148747, "node_id": "MDU6SXNzdWUxNDAxNDg3NDc=", "number": 229, "title": "Can we have a 0.6.8 release?", "user": {"login": "holtgrewe", "id": 521780, "node_id": "MDQ6VXNlcjUyMTc4MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/521780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/holtgrewe", "html_url": "https://github.com/holtgrewe", "followers_url": "https://api.github.com/users/holtgrewe/followers", "following_url": "https://api.github.com/users/holtgrewe/following{/other_user}", "gists_url": "https://api.github.com/users/holtgrewe/gists{/gist_id}", "starred_url": "https://api.github.com/users/holtgrewe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/holtgrewe/subscriptions", "organizations_url": "https://api.github.com/users/holtgrewe/orgs", "repos_url": "https://api.github.com/users/holtgrewe/repos", "events_url": "https://api.github.com/users/holtgrewe/events{/privacy}", "received_events_url": "https://api.github.com/users/holtgrewe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-11T10:28:59Z", "updated_at": "2016-03-18T19:41:38Z", "closed_at": "2016-03-18T16:24:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "The previous release is already quite old and the master branch contains important fixes (such as contig lines being valid despite having no length).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/227", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/227/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/227/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/227", "id": 138397792, "node_id": "MDU6SXNzdWUxMzgzOTc3OTI=", "number": 227, "title": "potential issue with vcf.model._Record.var_type", "user": {"login": "FrankFeng", "id": 4476144, "node_id": "MDQ6VXNlcjQ0NzYxNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4476144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrankFeng", "html_url": "https://github.com/FrankFeng", "followers_url": "https://api.github.com/users/FrankFeng/followers", "following_url": "https://api.github.com/users/FrankFeng/following{/other_user}", "gists_url": "https://api.github.com/users/FrankFeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrankFeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrankFeng/subscriptions", "organizations_url": "https://api.github.com/users/FrankFeng/orgs", "repos_url": "https://api.github.com/users/FrankFeng/repos", "events_url": "https://api.github.com/users/FrankFeng/events{/privacy}", "received_events_url": "https://api.github.com/users/FrankFeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-04T07:07:46Z", "updated_at": "2016-03-04T17:24:08Z", "closed_at": "2016-03-04T17:24:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \n\nFor a non-variant VCF record line, pyvcf mistakenly treats it as a INDEL:\n\n``` text\nIn [2]: import vcf\n\nIn [3]: !cat test_for_pyvcf.vcf\n##fileformat=VCFv4.1\n##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n##FORMAT=<ID=DP,Number=1,Type=Integer,Description=\"Read Depth\">\n#CHROM  POS     ID      REF     ALT     QUAL    FILTER  INFO    FORMAT  unknown\n1       7887248 .       G       .       3       .       .       GT:DP   0/0:37\n\nIn [4]: record = vcf.Reader(filename='test_for_pyvcf.vcf').next()\n\nIn [5]: print record\nRecord(CHROM=1, POS=7887248, REF=G, ALT=[None])\n\nIn [6]: record.var_type\nOut[6]: 'indel'\n\nIn [7]: record.is_deletion\nOut[7]: True\n\nIn [8]: record.is_snp\nOut[8]: False\n\nIn [9]: record.is_indel\nOut[9]: True\n\nIn [10]: record.is_monomorphic\nOut[10]: True\n\nIn [11]: record.num_hom_ref\nOut[11]: 1\n\nIn [12]: vcf.VERSION\nOut[12]: '0.6.8.dev0'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/225", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/225/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/225/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/225", "id": 127933682, "node_id": "MDU6SXNzdWUxMjc5MzM2ODI=", "number": 225, "title": "VEP CSQ fields can contain `=` which breaks parsing", "user": {"login": "dakl", "id": 17823, "node_id": "MDQ6VXNlcjE3ODIz", "avatar_url": "https://avatars0.githubusercontent.com/u/17823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dakl", "html_url": "https://github.com/dakl", "followers_url": "https://api.github.com/users/dakl/followers", "following_url": "https://api.github.com/users/dakl/following{/other_user}", "gists_url": "https://api.github.com/users/dakl/gists{/gist_id}", "starred_url": "https://api.github.com/users/dakl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dakl/subscriptions", "organizations_url": "https://api.github.com/users/dakl/orgs", "repos_url": "https://api.github.com/users/dakl/repos", "events_url": "https://api.github.com/users/dakl/events{/privacy}", "received_events_url": "https://api.github.com/users/dakl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-01-21T14:18:37Z", "updated_at": "2016-01-22T21:48:30Z", "closed_at": "2016-01-22T15:05:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following variant line\n\n```\n1       115251195       .       C       G       .       .       AC=2;AF=0.25;AN=8;set=variant17;CSQ=G|ENSG00000213281|ENST00000369535|Transcript|synonymous_variant|785/4449|531/570|177/189|G|ggG/ggC||||1|NM_002524.4|5/7|||||||-1||YES|NRAS|HGNC||||protein_coding|ENSP00000358548||CCDS877.1|ENST00000369535.4:c.531N>C|ENST00000369535.4:c.531N>C(p.=)|||||        GT      ./.     ./.     ./.     ./.     ./.\n```\n\nsilently causes an error when reading with pyvcf, due to the `=` in the string (element `ENST00000369535.4:c.531N>C(p.=)` towards the end of the string. Currently, no error is thrown, and pyvcf truncates the string to `G|ENSG00000213281|ENST00000369535|Transcript|synonymous_variant|785/4449|531/570|177/189|G|ggG/ggC||||1|NM_002524.4|5/7|||||||-1||YES|NRAS|HGNC||||protein_coding|ENSP00000358548||CCDS877.1|ENST00000369535.4:c.531N>C|ENST00000369535.4:c.531N>C(p.`. \n\nIs there anyway that `=` can be escaped by pyvcf? One could for example have a dedicated parser of the CSQ field if present.\n\nIs there any workaround that I'm missing? \n\nthanks\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/224", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/224/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/224/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/224", "id": 125819633, "node_id": "MDU6SXNzdWUxMjU4MTk2MzM=", "number": 224, "title": "SNPs and indels merged into a single record", "user": {"login": "krlk89", "id": 9166242, "node_id": "MDQ6VXNlcjkxNjYyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/9166242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krlk89", "html_url": "https://github.com/krlk89", "followers_url": "https://api.github.com/users/krlk89/followers", "following_url": "https://api.github.com/users/krlk89/following{/other_user}", "gists_url": "https://api.github.com/users/krlk89/gists{/gist_id}", "starred_url": "https://api.github.com/users/krlk89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krlk89/subscriptions", "organizations_url": "https://api.github.com/users/krlk89/orgs", "repos_url": "https://api.github.com/users/krlk89/repos", "events_url": "https://api.github.com/users/krlk89/events{/privacy}", "received_events_url": "https://api.github.com/users/krlk89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-10T13:43:17Z", "updated_at": "2016-02-06T18:55:00Z", "closed_at": "2016-02-06T18:55:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "VCF specification allows SNPSs and indels to be merged into a single record.\n\nFor example:\n\n```\nRef: a t C g a // C is the reference base\n   : a t G g a // C base is a G in some individuals (SNP)\n   : a t C A g a // A base is inserted (indel)\n\nCorresponding (simplified) VCF record would look something like this:\n20     2 .         C      G,CA\n```\n\nHowever, in the described case, record.var_type returns always \"indel\". Is it possible to differentiate the types of alternative alleles in such cases?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/223", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/223/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/223/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/223", "id": 125282537, "node_id": "MDU6SXNzdWUxMjUyODI1Mzc=", "number": 223, "title": "Error when fetch()", "user": {"login": "sterding", "id": 682270, "node_id": "MDQ6VXNlcjY4MjI3MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/682270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sterding", "html_url": "https://github.com/sterding", "followers_url": "https://api.github.com/users/sterding/followers", "following_url": "https://api.github.com/users/sterding/following{/other_user}", "gists_url": "https://api.github.com/users/sterding/gists{/gist_id}", "starred_url": "https://api.github.com/users/sterding/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sterding/subscriptions", "organizations_url": "https://api.github.com/users/sterding/orgs", "repos_url": "https://api.github.com/users/sterding/repos", "events_url": "https://api.github.com/users/sterding/events{/privacy}", "received_events_url": "https://api.github.com/users/sterding/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-01-06T22:58:43Z", "updated_at": "2016-01-07T17:00:50Z", "closed_at": "2016-01-07T17:00:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi, I'm a newbie in Python and it's my first time to use the module. I got following error when calling fetch(), even on the example vcf file. Could some of you please help? Thanks a lot. \n\n```\n>>> import vcf\n>>> vcf_reader = vcf.Reader(filename='/PHShome/xd010/lib/python2.7/site-packages/PyVCF-0.6.8.dev0-py2.7-linux-x86_64.egg/vcf/test/example-4.0.vcf')\n>>> for record in vcf_reader.fetch('20', 1110695, 1230237):\n...     print record\n... \nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/PHShome/xd010/lib/python2.7/site-packages/PyVCF-0.6.8.dev0-py2.7-linux-x86_64.egg/vcf/parser.py\", line 626, in fetch\n    encoding=self.encoding)\n  File \"ctabix.pyx\", line 92, in pysam.ctabix.Tabixfile.__cinit__ (lib/pysam/ctabix.c:2234)\n  File \"ctabix.pyx\", line 98, in pysam.ctabix.Tabixfile._open (lib/pysam/ctabix.c:2344)\nTypeError: _open() got an unexpected keyword argument 'encoding'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/221", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/221/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/221/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/221", "id": 124809365, "node_id": "MDU6SXNzdWUxMjQ4MDkzNjU=", "number": 221, "title": "How does PyVCF handle entry collision in INFO tab?", "user": {"login": "kotoroshinoto", "id": 1337560, "node_id": "MDQ6VXNlcjEzMzc1NjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1337560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kotoroshinoto", "html_url": "https://github.com/kotoroshinoto", "followers_url": "https://api.github.com/users/kotoroshinoto/followers", "following_url": "https://api.github.com/users/kotoroshinoto/following{/other_user}", "gists_url": "https://api.github.com/users/kotoroshinoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/kotoroshinoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kotoroshinoto/subscriptions", "organizations_url": "https://api.github.com/users/kotoroshinoto/orgs", "repos_url": "https://api.github.com/users/kotoroshinoto/repos", "events_url": "https://api.github.com/users/kotoroshinoto/events{/privacy}", "received_events_url": "https://api.github.com/users/kotoroshinoto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-04T18:10:35Z", "updated_at": "2016-01-04T19:49:10Z", "closed_at": "2016-01-04T19:49:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "It appears to construct a dict of the entries in INFO, I was hoping to use PyVCF to interact with the COSMIC VCF files, but they have many entries with duplicate INFO tags.\nsuch as: \n\nGENE=OR4F5;STRAND=+;GENE=OR4F5;STRAND=+;CDS=c.134A>C;AA=p.D45A;CNT=1\n\nI'm not sure WHY they format their file like this. I don't currently know if it means anything or if there are any cases where the values don't match. How would PyVCF handle this?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/218", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/218/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/218/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/218", "id": 119318376, "node_id": "MDU6SXNzdWUxMTkzMTgzNzY=", "number": 218, "title": "AttributeError: 'Reader' object has no attribute 'next'", "user": {"login": "krlk89", "id": 9166242, "node_id": "MDQ6VXNlcjkxNjYyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/9166242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krlk89", "html_url": "https://github.com/krlk89", "followers_url": "https://api.github.com/users/krlk89/followers", "following_url": "https://api.github.com/users/krlk89/following{/other_user}", "gists_url": "https://api.github.com/users/krlk89/gists{/gist_id}", "starred_url": "https://api.github.com/users/krlk89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krlk89/subscriptions", "organizations_url": "https://api.github.com/users/krlk89/orgs", "repos_url": "https://api.github.com/users/krlk89/repos", "events_url": "https://api.github.com/users/krlk89/events{/privacy}", "received_events_url": "https://api.github.com/users/krlk89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-28T21:21:07Z", "updated_at": "2015-12-04T09:01:59Z", "closed_at": "2015-11-29T18:29:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Python 3.4.3 and I've tried both PyVCF 0.6.7 and 0.6.8-dev. My code looks as follows:\n\n```\nimport vcf\n\nvcf = vcf.Reader(open(\"test.vcf\", \"r\"))\nrecord = vcf.next()\nprint(record)\n```\n\nAnd after executing the script I get the following error:\n\n```\nTraceback (most recent call last):\n  File \".\\vcf_test.py\", line 47, in <module>\n    mask_seq()\n  File \".\\vcf_test.py\", line 15, in mask_seq\n    record = vcf.next()\nAttributeError: 'Reader' object has no attribute 'next'\n```\n\nIterating over vcf using a for cycle works just fine:\n\n```\nimport vcf\n\nvcf = vcf.Reader(open(\"test.vcf\", \"r\"))\nfor record in vcf:\n    print(record)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/217", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/217/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/217/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/217", "id": 118936935, "node_id": "MDU6SXNzdWUxMTg5MzY5MzU=", "number": 217, "title": "UnicodeDecodeError using tabix indexed vcf", "user": {"login": "krlk89", "id": 9166242, "node_id": "MDQ6VXNlcjkxNjYyNDI=", "avatar_url": "https://avatars2.githubusercontent.com/u/9166242?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krlk89", "html_url": "https://github.com/krlk89", "followers_url": "https://api.github.com/users/krlk89/followers", "following_url": "https://api.github.com/users/krlk89/following{/other_user}", "gists_url": "https://api.github.com/users/krlk89/gists{/gist_id}", "starred_url": "https://api.github.com/users/krlk89/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krlk89/subscriptions", "organizations_url": "https://api.github.com/users/krlk89/orgs", "repos_url": "https://api.github.com/users/krlk89/repos", "events_url": "https://api.github.com/users/krlk89/events{/privacy}", "received_events_url": "https://api.github.com/users/krlk89/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-11-25T22:46:36Z", "updated_at": "2018-06-13T18:39:41Z", "closed_at": "2015-11-28T13:38:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I compressed my vcf file with bgzip and indexed it with tabix. Trying to iterate over a specific chromosome gives me the following error:\n\n```\nTraceback (most recent call last):\n  File \"vcf_test.py\", line 39, in <module>\n    mask_seq()\n  File \"vcf_test.py\", line 11, in mask_seq\n    vcf = vcf.Reader(open(argv[1]))\n  File \"/home/krlk89/.local/lib/python3.4/site-packages/PyVCF-0.6.7-py3.4.egg/vcf/parser.py\", line 288, in __init__\n    self._parse_metainfo()\n  File \"/home/krlk89/.local/lib/python3.4/site-packages/PyVCF-0.6.7-py3.4.egg/vcf/parser.py\", line 304, in _parse_metainfo\n    line = next(self.reader)\n  File \"/home/krlk89/.local/lib/python3.4/site-packages/PyVCF-0.6.7-py3.4.egg/vcf/parser.py\", line 268, in <genexpr>\n    self.reader = (line.strip() for line in self._reader if line.strip())\n  File \"/home/krlk89/.local/lib/python3.4/codecs.py\", line 638, in __next__\n    line = self.readline()\n  File \"/home/krlk89/.local/lib/python3.4/codecs.py\", line 551, in readline\n    data = self.read(readsize, firstline=True)\n  File \"/home/krlk89/.local/lib/python3.4/codecs.py\", line 491, in read\n    newdata = self.stream.read(size)\n  File \"/home/krlk89/.local/lib/python3.4/gzip.py\", line 365, in read\n    if not self._read(readsize):\n  File \"/home/krlk89/.local/lib/python3.4/gzip.py\", line 433, in _read\n    if not self._read_gzip_header():\n  File \"/home/krlk89/.local/lib/python3.4/gzip.py\", line 292, in _read_gzip_header\n    magic = self.fileobj.read(2)\n  File \"/home/krlk89/.local/lib/python3.4/gzip.py\", line 90, in read\n    self.file.read(size-self._length+read)\n  File \"/home/krlk89/.local/lib/python3.4/codecs.py\", line 319, in decode\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x8b in position 1: invalid start byte\n```\n\nMy code sample looks like this:\n\n```\nfor record in vcf.fetch(\"1\"):\n    print(record)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/214", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/214/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/214/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/214", "id": 116520636, "node_id": "MDU6SXNzdWUxMTY1MjA2MzY=", "number": 214, "title": "is_snp doesn't allow spanning deletions", "user": {"login": "Redmar-van-den-Berg", "id": 15814544, "node_id": "MDQ6VXNlcjE1ODE0NTQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/15814544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Redmar-van-den-Berg", "html_url": "https://github.com/Redmar-van-den-Berg", "followers_url": "https://api.github.com/users/Redmar-van-den-Berg/followers", "following_url": "https://api.github.com/users/Redmar-van-den-Berg/following{/other_user}", "gists_url": "https://api.github.com/users/Redmar-van-den-Berg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Redmar-van-den-Berg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Redmar-van-den-Berg/subscriptions", "organizations_url": "https://api.github.com/users/Redmar-van-den-Berg/orgs", "repos_url": "https://api.github.com/users/Redmar-van-den-Berg/repos", "events_url": "https://api.github.com/users/Redmar-van-den-Berg/events{/privacy}", "received_events_url": "https://api.github.com/users/Redmar-van-den-Berg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-12T10:25:35Z", "updated_at": "2015-11-12T19:54:56Z", "closed_at": "2015-11-12T19:54:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "When a snip occurs that contains a spanning deletion ( see http://gatkforums.broadinstitute.org/discussion/5647/new-allele-and-the-vcf-file-format) as one of the calls, PyVCF doesn't classify it as a snip (via record.is_snp).\n\n> print(s)\n> Record(ref, POS=456904, REF=T, ALT=[C, *])\n> s.is_snp\n> False\n\nUsing gatk's own VariantsToTable walker with -F TYPE does classify it as a snip.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/213", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/213/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/213/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/213", "id": 115165034, "node_id": "MDU6SXNzdWUxMTUxNjUwMzQ=", "number": 213, "title": "One of the INFO lines is malformed", "user": {"login": "VidJa", "id": 6108142, "node_id": "MDQ6VXNlcjYxMDgxNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6108142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VidJa", "html_url": "https://github.com/VidJa", "followers_url": "https://api.github.com/users/VidJa/followers", "following_url": "https://api.github.com/users/VidJa/following{/other_user}", "gists_url": "https://api.github.com/users/VidJa/gists{/gist_id}", "starred_url": "https://api.github.com/users/VidJa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VidJa/subscriptions", "organizations_url": "https://api.github.com/users/VidJa/orgs", "repos_url": "https://api.github.com/users/VidJa/repos", "events_url": "https://api.github.com/users/VidJa/events{/privacy}", "received_events_url": "https://api.github.com/users/VidJa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-04T22:35:09Z", "updated_at": "2015-11-05T15:21:45Z", "closed_at": "2015-11-05T15:21:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the following error on a vcf file generated with a recent samtools/bcftools combo\n\n\"One of the INFO lines is malformed: %s\" % info_string)\nSyntaxError: One of the INFO lines is malformed: ##INFO=<ID=VDB,Number=1,Type=Float,Description=\"Variant Distance Bias for filtering splice-site artefacts in RNA-seq data (bigger is better)\",Version=\"3\">\n\nThe \"Version=\"3\" part at the end of the INFO line is causing the error. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/210", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/210/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/210/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/210", "id": 110397684, "node_id": "MDU6SXNzdWUxMTAzOTc2ODQ=", "number": 210, "title": "Reading/writing vcf breaks VCF header", "user": {"login": "jrderuiter", "id": 307739, "node_id": "MDQ6VXNlcjMwNzczOQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/307739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrderuiter", "html_url": "https://github.com/jrderuiter", "followers_url": "https://api.github.com/users/jrderuiter/followers", "following_url": "https://api.github.com/users/jrderuiter/following{/other_user}", "gists_url": "https://api.github.com/users/jrderuiter/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrderuiter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrderuiter/subscriptions", "organizations_url": "https://api.github.com/users/jrderuiter/orgs", "repos_url": "https://api.github.com/users/jrderuiter/repos", "events_url": "https://api.github.com/users/jrderuiter/events{/privacy}", "received_events_url": "https://api.github.com/users/jrderuiter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-08T08:31:27Z", "updated_at": "2015-10-08T11:36:51Z", "closed_at": "2015-10-08T11:35:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use PyVCF to write a simple script that filters VCF records based on certain criteria. However, this script seems to break the header of my VCF file, as bcftools no longer parses the resulting VCF, but has no problem with the VCF that is used as input.\n\n``` python\ndef main(args):\n    in_path = args.input\n    out_path = args.output or path.splitext(in_path)[0] + '.som.vcf'\n\n    with open(in_path, 'r') as vcf_in:\n        reader = vcf.Reader(vcf_in)\n        records = iter(reader)\n\n        # Filter records here.\n\n        # Write records to output VCF.\n        with open(out_path, 'w') as vcf_out:\n            writer = vcf.Writer(vcf_out, template=reader)\n            for record in records:\n                writer.write_record(record)\n```\n\nInput vcf header: https://gist.github.com/jrderuiter/ca373a8d4b4652379244\nOutput vcf header: https://gist.github.com/jrderuiter/e1a4b2d5e437f7652e8c\n\nBcftools errors on output vcf:\n\n```\nCould not parse the header line: \"##GATKCommandLine.VariantFiltration=<ID=VariantFiltration,Version=3.4-0-g7e26428,Date=\"Wed Oct 07 09:11:47 CEST 2015\",Epoch=1444201907400,CommandLineOptions=\"analysis_type=VariantFiltration input_file=[] showFullBamList=false read_buffer_size=null phone_home=AWS gatk_key=null tag=NA read_filter=[] disable_read_filter=[] intervals=null excludeIntervals=null interval_set_rule=UNION interval_merging=ALL interval_padding=0 reference_sequence=./references/homo_sapiens/b37/dna/bwa/human_g1k_v37_decoy.fa nonDeterministicRandomSeed=false disableDithering=false maxRuntime=-1 maxRuntimeUnits=MINUTES downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=1000 baq=OFF baqGapOpenPenalty=40.0 refactor_NDN_cigar_string=false fix_misencoded_quality_scores=false allow_potentially_misencoded_quality_scores=false useOriginalQualities=false defaultBaseQualities=-1 performanceLog=null BQSR=null quantize_quals=0 disable_indel_quals=false emit_original_quals=false preserve_qscores_less_than=6 globalQScorePrior=-1.0 validation_strictness=SILENT remove_program_records=false keep_program_records=false sample_rename_mapping_file=null unsafe=null disable_auto_index_creation_and_locking_when_reading_rods=false no_cmdline_in_header=false sites_only=false never_trim_vcf_format_field=false bcf=false bam_compression=null simplifyBAM=false disable_bam_indexing=false generate_md5=false num_threads=1 num_cpu_threads_per_data_thread=1 num_io_threads=0 monitorThreadEfficiency=false num_bam_file_handles=null read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false generateShadowBCF=false variant_index_type=DYNAMIC_SEEK variant_index_parameter=-1 logging_level=INFO log_to_file=null help=false version=false variant=(RodBinding name=variant source=./out/joint_calls.snps.vcf) mask=(RodBinding name= source=UNBOUND) out=./out/joint_calls.snps.filt.vcf.tmp/joint_calls.snps.filt.vcf filterExpression=[QD >\n##GVCFBlock0-1=minGQ=0(inclusive),maxGQ=1(exclusive)\n##GVCFBlock1-2=minGQ=1(inclusive),maxGQ=2(exclusive)\n##GVCFBlock10-11=minGQ=10(inclusive),maxGQ=11(exclusive)\n##GVCFBlock11-12=minGQ=11(inclusive),maxGQ=12(exclusive)\n##GVCFBlock12-13=minGQ=12(inclusive),maxGQ=13(exclusive)\n##GVCFBlock13-14=minGQ=13(inclusive),maxGQ=14(exclusive)\n##GVCFBlock14-15=minGQ=14(inclusive),maxGQ=15(exclusive)\n##GVCFBlock15-16=minGQ=15(inclusive),maxGQ=16(exclusive)\n##GVCFBlock16-17=minGQ=16(inclusive),maxGQ=17(exclusive)\n##GVCFBlock17-18=minGQ=17(inclusive),maxGQ=18(exclusive)\n##GVCFBlock18-19=minGQ=18(inclusive),maxGQ=19(exclusive)\n##GVCFBlock19-20=minGQ=19(inclusive),maxGQ=20(exclusive)\n##GVCFBlock2-3=minGQ=2(inclusive),maxGQ=3(exclusive)\n##GVCFBlock20-21=minGQ=20(inclusive),maxGQ=21(exclusive)\n##GVCFBlock21-22=minGQ=21(inclusive),maxGQ=22(exclusive)\n##GVCFBlock22-23=minGQ=22(inclusive),maxGQ=23(exclusive)\n##GVCFBlock23-24=minGQ=23(inclusive),maxGQ=24(exclusive)\n##GVCFBlock24-25=minGQ=24(inclusive),maxGQ=25(exclusive)\n##GVCFBlock25-26=minGQ=25(inclusive),maxGQ=26(exclusive)\n##GVCFBlock26-27=minGQ=26(inclusive),maxGQ=27(exclusive)\n##GVCFBlock27-28=minGQ=27(inclusive),maxGQ=28(exclusive)\n##GVCFBlock28-29=minGQ=28(inclusive),maxGQ=29(exclusive)\n##GVCFBlock29-30=minGQ=29(inclusive),maxGQ=30(exclusive)\n##GVCFBlock3-4=minGQ=3(inclusive),maxGQ=4(exclusive)\n##GVCFBlock30-31=minGQ=30(inclusive),maxGQ=31(exclusive)\n##GVCFBlock31-32=minGQ=31(inclusive),maxGQ=32(exclusive)\n##GVCFBlock32-33=minGQ=32(inclusive),maxGQ=33(exclusive)\n##GVCFBlock33-34=minGQ=33(inclusive),maxGQ=34(exclusive)\n##GVCFBlock34-35=minGQ=34(inclusive),maxGQ=35(exclusive)\n##GVCFBlock35-36=minGQ=35(inclusive),maxGQ=36(exclusive)\n##GVCFBlock36-37=minGQ=36(inclusive),maxGQ=37(exclusive)\n##GVCFBlock37-38=minGQ=37(inclusive),maxGQ=38(exclusive)\n##GVCFBlock38-39=minGQ=38(inclusive),maxGQ=39(exclusive)\n##GVCFBlock39-40=minGQ=39(inclusive),maxGQ=40(exclusive)\n##GVCFBlock4-5=minGQ=4(inclusive),maxGQ=5(exclusive)\n##GVCFBlock40-41=minGQ=40(inclusive),maxGQ=41(exclusive)\n##GVCFBlock41-42=minGQ=41(inclusive),maxGQ=42(exclusive)\n##GVCFBlock42-43=minGQ=42(inclusive),maxGQ=43(exclusive)\n##GVCFBlock43-44=minGQ=43(inclusive),maxGQ=44(exclusive)\n##GVCFBlock44-45=minGQ=44(inclusive),maxGQ=45(exclusive)\n##GVCFBlock45-46=minGQ=45(inclusive),maxGQ=46(exclusive)\n##GVCFBlock46-47=minGQ=46(inclusive),maxGQ=47(exclusive)\n##GVCFBlock47-48=minGQ=47(inclusive),maxGQ=48(exclusive)\n##GVCFBlock48-49=minGQ=48(inclusive),maxGQ=49(exclusive)\n##GVCFBlock49-50=minGQ=49(inclusive),maxGQ=50(exclusive)\n##GVCFBlock5-6=minGQ=5(inclusive),maxGQ=6(exclusive)\n##GVCFBlock50-51=minGQ=50(inclusive),maxGQ=51(exclusive)\n##GVCFBlock51-52=minGQ=51(inclusive),maxGQ=52(exclusive)\n##GVCFBlock52-53=minGQ=52(inclusive),maxGQ=53(exclusive)\n##GVCFBlock53-54=minGQ=53(inclusive),maxGQ=54(exclusive)\n##GVCFBlock54-55=minGQ=54(inclusive),maxGQ=55(exclusive)\n##GVCFBlock55-56=minGQ=55(inclusive),maxGQ=56(exclusive)\n##GVCFBlock56-57=minGQ=56(inclusive),maxGQ=57(exclusive)\n##GVCFBlock57-58=minGQ=57(inclusive),maxGQ=58(exclusive)\n##GVCFBlock58-59=minGQ=58(inclusive),maxGQ=59(exclusive)\n##GVCFBlock59-60=minGQ=59(inclusive),maxGQ=60(exclusive)\n##GVCFBlock6-7=minGQ=6(inclusive),maxGQ=7(exclusive)\n##GVCFBlock60-70=minGQ=60(inclusive),maxGQ=70(exclusive)\n##GVCFBlock7-8=minGQ=7(inclusive),maxGQ=8(exclusive)\n##GVCFBlock70-80=minGQ=70(inclusive),maxGQ=80(exclusive)\n##GVCFBlock8-9=minGQ=8(inclusive),maxGQ=9(exclusive)\n##GVCFBlock80-90=minGQ=80(inclusive),maxGQ=90(exclusive)\n##GVCFBlock9-10=minGQ=9(inclusive),maxGQ=10(exclusive)\n##GVCFBlock90-99=minGQ=90(inclusive),maxGQ=99(exclusive)\n##GVCFBlock99-2147483647=minGQ=99(inclusive),maxGQ=2147483647(exclusive)\n##reference=file://./references/homo_sapiens/b37/dna/bwa/human_g1k_v37_decoy.fa\n##source=SelectVariants\n##bcftools_normVersion=1.2+htslib-1.2.1\n##bcftools_normCommand=norm -m-both --output ./out/joint_calls.merged.filt.pass.norm_tmp.vcf.tmp/joint_calls.merged.filt.pass.norm_tmp.vcf ./out/joint_calls.merged.filt.pass.vcf\n##bcftools_normCommand=norm -f ./references/homo_sapiens/b37/dna/bwa/human_g1k_v37_decoy.fa --output ./out/joint_calls.merged.filt.pass.norm.vcf.tmp/joint_calls.merged.filt.pass.norm.vcf ./out/joint_calls.merged.filt.pass.norm_tmp.vcf\n##INFO=<ID=AC,Number=A,Type=Integer,Description=\"Allele count in genotypes, for each ALT allele, in the same order as listed\">\"\n[W::vcf_parse] contig '1' is not defined in the header. (Quick workaround: index the file with tabix.)\n[W::vcf_parse] INFO 'AC' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'AF' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'AN' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'BaseQRankSum' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'ClippingRankSum' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'DB' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'DP' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'FS' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'InbreedingCoeff' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'MLEAC' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'MLEAF' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'MQ' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'MQRankSum' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'QD' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'ReadPosRankSum' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'SOR' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'ANNOVAR_DATE' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'Func.ensGene' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'Gene.ensGene' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'GeneDetail.ensGene' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'ExonicFunc.ensGene' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'AAChange.ensGene' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'SIFT_score' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'SIFT_pred' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'Polyphen2_HDIV_score' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'Polyphen2_HDIV_pred' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'Polyphen2_HVAR_score' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'Polyphen2_HVAR_pred' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'LRT_score' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'LRT_pred' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'MutationTaster_score' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'MutationTaster_pred' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'MutationAssessor_score' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'MutationAssessor_pred' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'FATHMM_score' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'FATHMM_pred' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'RadialSVM_score' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'RadialSVM_pred' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'LR_score' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'LR_pred' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'VEST3_score' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'CADD_raw' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'CADD_phred' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'GERP++_RS' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'phyloP46way_placental' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'phyloP100way_vertebrate' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'SiPhy_29way_logOdds' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'snp138NonFlagged' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO '1000g2015aug_eur' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'nci60' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'cosmic70' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'clinvar_20150629' is not defined in the header, assuming Type=String\n[W::vcf_parse] INFO 'ALLELE_END' is not defined in the header, assuming Type=String\n[W::vcf_parse] contig '2' is not defined in the header. (Quick workaround: index the file with tabix.)\n[W::vcf_parse] contig '3' is not defined in the header. (Quick workaround: index the file with tabix.)\n[W::vcf_parse] contig '4' is not defined in the header. (Quick workaround: index the file with tabix.)\n[W::vcf_parse] contig '5' is not defined in the header. (Quick workaround: index the file with tabix.)\n...\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/208", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/208/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/208/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/208", "id": 102312763, "node_id": "MDU6SXNzdWUxMDIzMTI3NjM=", "number": 208, "title": "Is the python 3 branch far behind master?", "user": {"login": "WimS83", "id": 3929296, "node_id": "MDQ6VXNlcjM5MjkyOTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/3929296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WimS83", "html_url": "https://github.com/WimS83", "followers_url": "https://api.github.com/users/WimS83/followers", "following_url": "https://api.github.com/users/WimS83/following{/other_user}", "gists_url": "https://api.github.com/users/WimS83/gists{/gist_id}", "starred_url": "https://api.github.com/users/WimS83/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WimS83/subscriptions", "organizations_url": "https://api.github.com/users/WimS83/orgs", "repos_url": "https://api.github.com/users/WimS83/repos", "events_url": "https://api.github.com/users/WimS83/events{/privacy}", "received_events_url": "https://api.github.com/users/WimS83/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-21T06:55:58Z", "updated_at": "2015-09-14T15:45:46Z", "closed_at": "2015-09-14T15:45:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi thanks for this great VCF parser! \n\nI am wondering if the Python3 branch is far behind the master branch?\nhttps://github.com/jamescasbon/PyVCF/tree/master\nhttps://github.com/jamescasbon/PyVCF/tree/python3\n\nI have installed pyvcf using pip3.4 which somehow installed the correct python3 branch. Or is there a forked pyvcf python3 project somewhere else? \n\nSo far all functionality that is need is available (after you find out that you have to call  2underscores next 2underscores instead of next on the vcf reader. :) )\n\nIf the python3 branch is to far behind I might have to downgrade to using python2. Or maybe somebody could port the more recent commits to the python3 branch? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/206", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/206/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/206/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/206", "id": 101785451, "node_id": "MDU6SXNzdWUxMDE3ODU0NTE=", "number": 206, "title": "Serialization of Record type", "user": {"login": "gideonite", "id": 2163686, "node_id": "MDQ6VXNlcjIxNjM2ODY=", "avatar_url": "https://avatars2.githubusercontent.com/u/2163686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gideonite", "html_url": "https://github.com/gideonite", "followers_url": "https://api.github.com/users/gideonite/followers", "following_url": "https://api.github.com/users/gideonite/following{/other_user}", "gists_url": "https://api.github.com/users/gideonite/gists{/gist_id}", "starred_url": "https://api.github.com/users/gideonite/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gideonite/subscriptions", "organizations_url": "https://api.github.com/users/gideonite/orgs", "repos_url": "https://api.github.com/users/gideonite/repos", "events_url": "https://api.github.com/users/gideonite/events{/privacy}", "received_events_url": "https://api.github.com/users/gideonite/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-08-19T01:27:48Z", "updated_at": "2015-11-13T14:30:17Z", "closed_at": "2015-11-13T14:30:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nIs there any work being done on serialization of Record types? I'm trying to write a program using PyVCF and multiprocessing and multiprocessing doesn't know how to pass around VCF Record types.\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/202", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/202/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/202/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/202", "id": 96188194, "node_id": "MDU6SXNzdWU5NjE4ODE5NA==", "number": 202, "title": "unable to parse", "user": {"login": "cariaso", "id": 125330, "node_id": "MDQ6VXNlcjEyNTMzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/125330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cariaso", "html_url": "https://github.com/cariaso", "followers_url": "https://api.github.com/users/cariaso/followers", "following_url": "https://api.github.com/users/cariaso/following{/other_user}", "gists_url": "https://api.github.com/users/cariaso/gists{/gist_id}", "starred_url": "https://api.github.com/users/cariaso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cariaso/subscriptions", "organizations_url": "https://api.github.com/users/cariaso/orgs", "repos_url": "https://api.github.com/users/cariaso/repos", "events_url": "https://api.github.com/users/cariaso/events{/privacy}", "received_events_url": "https://api.github.com/users/cariaso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-07-20T23:29:27Z", "updated_at": "2015-07-21T15:07:38Z", "closed_at": "2015-07-21T15:07:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "ftp://ftp.ebi.ac.uk/pub/databases/eva/PRJEB8636/ERZ108620/decode_variants_chr22.EVA.fixed.vcf.gz\nand all of the other genomes from\nhttp://www.nature.com/articles/sdata201511\nhttps://www.ebi.ac.uk/eva/?eva-study=PRJEB8636\nwith the message\n\n```\nvcf_reader = vcf.Reader(fsock=vcffh, compressed=False)\n```\n\n  File \"/Library/Python/2.7/site-packages/vcf/parser.py\", line 288, in **init**\n    self._parse_metainfo()\n  File \"/Library/Python/2.7/site-packages/vcf/parser.py\", line 325, in _parse_metainfo\n    key, val = parser.read_contig(line)\n  File \"/Library/Python/2.7/site-packages/vcf/parser.py\", line 173, in read_contig\n    \"One of the contig lines is malformed: %s\" % contig_string)\nSyntaxError: One of the contig lines is malformed: ##contig=<ID=1,accession=NC_000001.9,assembly=GCF_000001405.12>\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/201", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/201/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/201/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/201", "id": 95273453, "node_id": "MDU6SXNzdWU5NTI3MzQ1Mw==", "number": 201, "title": "vcf iterator from 'fetch' method crashes with: UnicodeDecodeError: 'ascii' codec can't decode byte", "user": {"login": "trb8", "id": 13079167, "node_id": "MDQ6VXNlcjEzMDc5MTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/13079167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trb8", "html_url": "https://github.com/trb8", "followers_url": "https://api.github.com/users/trb8/followers", "following_url": "https://api.github.com/users/trb8/following{/other_user}", "gists_url": "https://api.github.com/users/trb8/gists{/gist_id}", "starred_url": "https://api.github.com/users/trb8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trb8/subscriptions", "organizations_url": "https://api.github.com/users/trb8/orgs", "repos_url": "https://api.github.com/users/trb8/repos", "events_url": "https://api.github.com/users/trb8/events{/privacy}", "received_events_url": "https://api.github.com/users/trb8/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-07-15T19:39:34Z", "updated_at": "2019-08-08T11:32:32Z", "closed_at": "2015-09-15T10:11:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nThe following code crashes with the error at the bottom:\n\nPython 3.4.1 (default, Nov 11 2014, 09:06:26)\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-3)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n```\n        import vcf\n        vcf_reader = vcf.Reader(filename='bar.vcf.gz',compressed=True)\n        cr = vcf_reader.fetch(chrom='17')\n        x=next(cr)\n```\n\n<vcf.parser.Reader object at 0x7f97cd6cff28>\n\n```\n        Traceback (most recent call last):\n        File \"\", line 1, in\n        File \"/usr//local/lib/python3.4/site-packages/vcf/parser.py\", line 537, in next\n        line = next(self.reader)\n        File \"pysam/ctabix.pyx\", line 543, in pysam.ctabix.TabixIterator.next (pysam/ctabix.c:5906)\n        File \"pysam/ctabix.pyx\", line 69, in pysam.ctabix._charptr_to_str (pysam/ctabix.c:2311)\n        UnicodeDecodeError: 'ascii' codec can't decode byte 0xc3 in position 5708: ordinal not in range(128)\n```\n\nIt crashed at the record (line) in the vcf file (bar.vcf.gz) that contains several annotations as follows:\n17 19559848 rs72547564 G A 0 . GENEINFO=ALDH3A2:224;OriginalChr=chr17;OriginalStart=19656535;RS=72547564;RSPOS=19656535;SAO=1;SSR=0;VC=SNV;VP=0x050260000a05000002110100;WGT=1;dbSNPBuildID=130;ASP;LSD;NSM;OM;PM;REF;S3D;ANN=A|missense_variant|MODERATE|ALDH3A2|ENSG00000072210|transcript|ENST00000339618|protein_coding|4/11|c.641G>A|p.Cys214Tyr|862/3828|641/1527|214/508||,A|missense_variant|MODERATE|ALDH3A2|ENSG00000072210|transcript|ENST00000176643|protein_coding|4/10|c.641G>A|p.Cys214Tyr|1087/3928|641/1458|214/485||,A|missense_variant|MODERATE|ALDH3A2|ENSG00000072210|transcript|ENST00000581518|protein_coding|4/12|c.641G>A|p.Cys214Tyr|890/2785|641/1527|214/508||,A|missense_variant|MODERATE|ALDH3A2|ENSG00000072210|transcript|ENST00000395575|protein_coding|5/11|c.641G>A|p.Cys214Tyr|799/3640|641/1458|214/485||,A|missense_variant|MODERATE|ALDH3A2|ENSG00000072210|transcript|ENST00000579855|protein_coding|5/11|c.641G>A|p.Cys214Tyr|740/3583|641/1458|214/485||,A|missense_variant|MODERATE|ALDH3A2|ENSG00000072210|transcript|ENST00000571537|protein_coding|1/3|c.134G>A|p.Cys45Tyr|134/607|134/489|45/162||WARNING_TRANSCRIPT_NO_START_CODON,A|missense_variant|MODERATE|ALDH3A2|ENSG00000072210|transcript|ENST00000578696|protein_coding|1/4|c.47G>A|p.Cys16Tyr|48/400|47/399|16/132||WARNING_TRANSCRIPT_NO_START_CODON,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000581518|protein_coding|8/12|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000581518|protein_coding|3/12|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000581518|protein_coding|2/12|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000581518|protein_coding|7/12|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000581518|protein_coding|5/12|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000581518|protein_coding|9/12|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000581518|protein_coding|4/12|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000581518|protein_coding|6/12|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000581518|protein_coding|1/12|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000579855|protein_coding|9/11|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000579855|protein_coding|4/11|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000579855|protein_coding|3/11|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000579855|protein_coding|8/11|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000579855|protein_coding|6/11|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000579855|protein_coding|10/11|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000579855|protein_coding|5/11|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000579855|protein_coding|2/11|c.641G>A||||||,A|sequence_feature|LOW|ALDH3A2|ENSG00000072210|topological_domain:Cytoplasmic|ENST00000579855|protein_coding|7/11|c.641G>A||||||,A|3_prime_UTR_variant|MODIFIER|ALDH3A2|ENSG00000072210|transcript|ENST00000472059|nonsense_mediated_decay|5/11|n.199G>A|||||1177|,A|upstream_gene_variant|MODIFIER|ALDH3A2|ENSG00000072210|transcript|ENST00000574078|processed_transcript||n.-1G>A|||||3038|,A|downstream_gene_variant|MODIFIER|ALDH3A2|ENSG00000072210|transcript|ENST00000446398|protein_coding||c.665G>A|||||143|WARNING_TRANSCRIPT_NO_STOP_CODON,A|downstream_gene_variant|MODIFIER|ALDH3A2|ENSG00000072210|transcript|ENST00000467473|retained_intron||n.651G>A|||||3880|,A|downstream_gene_variant|MODIFIER|ALDH3A2|ENSG00000072210|transcript|ENST00000580550|protein_coding||c.540G>A|||||3935|WARNING_TRANSCRIPT_INCOMPLETE,A|downstream_gene_variant|MODIFIER|ALDH3A2|ENSG00000072210|transcript|ENST00000584332|protein_coding||c.573G>A|||||165|WARNING_TRANSCRIPT_INCOMPLETE,A|downstream_gene_variant|MODIFIER|ALDH3A2|ENSG00000072210|transcript|ENST00000578614|nonsense_mediated_decay||n.359G>A|||||76|,A|downstream_gene_variant|MODIFIER|ALDH3A2|ENSG00000072210|transcript|ENST00000579403|retained_intron||n.582G>A|||||3838|,A|non_coding_exon_variant|MODIFIER|ALDH3A2|ENSG00000072210|transcript|ENST00000582991|nonsense_mediated_decay|4/10|n.641G>A||||||,A|non_coding_exon_variant|MODIFIER|ALDH3A2|ENSG00000072210|transcript|ENST00000472059|nonsense_mediated_decay|5/11|n.199G>A||||||,A|non_coding_exon_variant|MODIFIER|ALDH3A2|ENSG00000072210|transcript|ENST00000476965|retained_intron|1/7|n.391G>A||||||;dbNSFP_GERP++_RS=5.84;dbNSFP_MutationTaster_pred=D;dbNSFP_GERP++_RS_rankscore=0.93424;dbNSFP_phastCons46way_placental_rankscore=0.4774;dbNSFP_MutationTaster_score=1;dbNSFP_phastCons100way_vertebrate=1;dbNSFP_MetaSVM_pred=D;dbNSFP_VEST3_rankscore=0.99865;dbNSFP_fold-degenerate=0;dbNSFP_LRT_pred=D;dbNSFP_LRT_score=0;dbNSFP_SiPhy_29way_logOdds=19.1316;dbNSFP_phyloP100way_vertebrate=9.757;dbNSFP_cds_strand=+;dbNSFP_VEST3_score=0.996;dbNSFP_MetaSVM_score=0.6006;dbNSFP_MetaLR_pred=D;dbNSFP_phyloP100way_vertebrate_rankscore=0.98924;dbNSFP_rs_dbSNP141=rs72547564;dbNSFP_SIFT_pred=D,D,D;dbNSFP_clinvar_trait=Sj\u00c3\u00b6gren-Larsson_syndrome;dbNSFP_SiPhy_29way_pi=0.0:0.0:1.0:0.0;dbNSFP_LRT_converted_rankscore=0.85682;dbNSFP_aapos_FATHMM=ENSP00000176643:C214Y,ENSP00000378942:C214Y,ENSP00000345774:C214Y;dbNSFP_aapos=214;dbNSFP_SLR_test_statistic=-18.6067;dbNSFP_aapos_SIFT=ENSP00000176643:C214Y;dbNSFP_Reliability_index=10;dbNSFP_pos(1-coor)=19559848;dbNSFP_Ensembl_transcriptid=ENST00000176643,ENST00000395575,ENST00000339618;dbNSFP_MetaLR_rankscore=0.90604;dbNSFP_clinvar_rs=rs72547564;dbNSFP_Polyphen2_HVAR_score=1,0.997;dbNSFP_ref=G;dbNSFP_Polyphen2_HDIV_rankscore=0.89917;dbNSFP_Polyphen2_HVAR_rankscore=0.9711;dbNSFP_phyloP46way_placental_rankscore=0.95229;dbNSFP_phastCons46way_primate_rankscore=0.84299;dbNSFP_Ensembl_geneid=ENSG00000072210;dbNSFP_FATHMM_score=-0.96,-0.96,-0.96;dbNSFP_SiPhy_29way_logOdds_rankscore=0.9341;dbNSFP_FATHMM_pred=T,T,T;dbNSFP_MutationAssessor_score=3.55;dbNSFP_phyloP46way_primate_rankscore=0.77884;dbNSFP_phastCons100way_vertebrate_rankscore=0.71417;dbNSFP_LRT_Omega=0;dbNSFP_GERP++_NR=5.84;dbNSFP_PROVEAN_pred=D,D,D;dbNSFP_FATHMM_rankscore=0.75704;dbNSFP_Interpro_domain=Aldehydedehydrogenasedomain(1),Aldehydedehydrogenase,N-terminal(1),Aldehyde/histidinoldehydrogenase(1),;dbNSFP_MutationAssessor_pred=H;dbNSFP_PROVEAN_score=-10.53,-10.53,-10.53;dbNSFP_aaref=C;dbNSFP_MetaSVM_rankscore=0.92498;dbNSFP_hg18_pos(1-coor)=19500440;dbNSFP_genename=ALDH3A2;dbNSFP_phastCons46way_placental=0.991;dbNSFP_SIFT_converted_rankscore=0.90636;dbNSFP_MutationAssessor_rankscore=0.94542;dbNSFP_MetaLR_score=0.7054;dbNSFP_chr=17;dbNSFP_clinvar_clnsig=5;dbNSFP_Uniprot_acc=P51648,P51648-2;dbNSFP_codonpos=2;dbNSFP_Polyphen2_HDIV_score=1,1;dbNSFP_aaalt=Y;dbNSFP_refcodon=TGT;dbNSFP_alt=A;dbNSFP_Uniprot_aapos=214,214;dbNSFP_SIFT_score=0,0,0;dbNSFP_MutationTaster_converted_rankscore=0.70825;dbNSFP_hg38_pos=19656535;dbNSFP_Uniprot_id=AL3A2_HUMAN,.;dbNSFP_PROVEAN_converted_rankscore=0.99041;dbNSFP_phastCons46way_primate=0.994;dbNSFP_Ancestral_allele=G;dbNSFP_Polyphen2_HDIV_pred=D,D;dbNSFP_phyloP46way_primate=0.563;dbNSFP_phyloP46way_placental=2.769;dbNSFP_Polyphen2_HVAR_pred=D,D;dbSNP142=rs72547564;regulomeDB=2c;GERP=5.38;chainSelf=26.3\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/200", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/200/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/200/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/200", "id": 74793248, "node_id": "MDU6SXNzdWU3NDc5MzI0OA==", "number": 200, "title": "contig lines malformed error", "user": {"login": "deannachurch", "id": 4339273, "node_id": "MDQ6VXNlcjQzMzkyNzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4339273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deannachurch", "html_url": "https://github.com/deannachurch", "followers_url": "https://api.github.com/users/deannachurch/followers", "following_url": "https://api.github.com/users/deannachurch/following{/other_user}", "gists_url": "https://api.github.com/users/deannachurch/gists{/gist_id}", "starred_url": "https://api.github.com/users/deannachurch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deannachurch/subscriptions", "organizations_url": "https://api.github.com/users/deannachurch/orgs", "repos_url": "https://api.github.com/users/deannachurch/repos", "events_url": "https://api.github.com/users/deannachurch/events{/privacy}", "received_events_url": "https://api.github.com/users/deannachurch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2015-05-10T00:33:41Z", "updated_at": "2016-06-15T14:36:54Z", "closed_at": "2016-06-14T18:35:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\nI'm trying to parse the latest ClinVar VCF and run into this error:\n\nSyntaxError: One of the contig lines is malformed: ##contig=<ID=1>\n\nThe lines in the ClinVar VCF look like:\n\n```\n##contig=<ID=1>\n##contig=<ID=2>\n##contig=<ID=3>\n##contig=<ID=4>\n##contig=<ID=5>\n##contig=<ID=6>\n##contig=<ID=7>\n##contig=<ID=8>\n##contig=<ID=9>\n##contig=<ID=10>\n##contig=<ID=11>\n##contig=<ID=12>\n##contig=<ID=13>\n##contig=<ID=14>\n##contig=<ID=15>\n##contig=<ID=16>\n##contig=<ID=17>\n##contig=<ID=18>\n##contig=<ID=19>\n##contig=<ID=20>\n##contig=<ID=21>\n##contig=<ID=22>\n##contig=<ID=X>\n##contig=<ID=Y>\n##contig=<ID=MT>\n```\n\nNot great, but it seems unfortunate this kills off the whole thing. Can this just be a warning instead of killing off the whole process?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/198", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/198/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/198/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/198", "id": 69462522, "node_id": "MDU6SXNzdWU2OTQ2MjUyMg==", "number": 198, "title": "disabling decompression being force on", "user": {"login": "cariaso", "id": 125330, "node_id": "MDQ6VXNlcjEyNTMzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/125330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cariaso", "html_url": "https://github.com/cariaso", "followers_url": "https://api.github.com/users/cariaso/followers", "following_url": "https://api.github.com/users/cariaso/following{/other_user}", "gists_url": "https://api.github.com/users/cariaso/gists{/gist_id}", "starred_url": "https://api.github.com/users/cariaso/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cariaso/subscriptions", "organizations_url": "https://api.github.com/users/cariaso/orgs", "repos_url": "https://api.github.com/users/cariaso/repos", "events_url": "https://api.github.com/users/cariaso/events{/privacy}", "received_events_url": "https://api.github.com/users/cariaso/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-19T20:47:06Z", "updated_at": "2015-04-19T22:14:23Z", "closed_at": "2015-04-19T22:14:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "for my use case\nfh is a gzip object, so I'm doing my decompression outside of the reader. I'd hoped\n\nvcf.Reader(fsock=fh, compressed=False)\n\nwould solve this, but \nhttps://github.com/jamescasbon/PyVCF/blob/master/vcf/parser.py\nline 259 is written in a way, that the .gz suffix forces compression on, even though it was explicitly passed as False. consider changing the default function param to\ncompressed=None\nand changing lines 259 and 261 to something like\nif compressed is None: compressed = filename.endswith('.gz')\n\nwithout this it is necessary to lie about the original filename via a\nfh.name = 'fakename'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/197", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/197/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/197/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/197", "id": 65452036, "node_id": "MDU6SXNzdWU2NTQ1MjAzNg==", "number": 197, "title": "Retrieve header info?", "user": {"login": "ronammar", "id": 5419280, "node_id": "MDQ6VXNlcjU0MTkyODA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5419280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronammar", "html_url": "https://github.com/ronammar", "followers_url": "https://api.github.com/users/ronammar/followers", "following_url": "https://api.github.com/users/ronammar/following{/other_user}", "gists_url": "https://api.github.com/users/ronammar/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronammar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronammar/subscriptions", "organizations_url": "https://api.github.com/users/ronammar/orgs", "repos_url": "https://api.github.com/users/ronammar/repos", "events_url": "https://api.github.com/users/ronammar/events{/privacy}", "received_events_url": "https://api.github.com/users/ronammar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-31T13:34:11Z", "updated_at": "2019-10-30T11:59:42Z", "closed_at": "2015-09-14T15:31:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to retrieve header info that corresponds to the record attributes in the INFO field?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/194", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/194/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/194/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/194", "id": 60391404, "node_id": "MDU6SXNzdWU2MDM5MTQwNA==", "number": 194, "title": "Syntax Error loading a vcf made by freebayes", "user": {"login": "mrvollger", "id": 6935283, "node_id": "MDQ6VXNlcjY5MzUyODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/6935283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrvollger", "html_url": "https://github.com/mrvollger", "followers_url": "https://api.github.com/users/mrvollger/followers", "following_url": "https://api.github.com/users/mrvollger/following{/other_user}", "gists_url": "https://api.github.com/users/mrvollger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrvollger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrvollger/subscriptions", "organizations_url": "https://api.github.com/users/mrvollger/orgs", "repos_url": "https://api.github.com/users/mrvollger/repos", "events_url": "https://api.github.com/users/mrvollger/events{/privacy}", "received_events_url": "https://api.github.com/users/mrvollger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-09T18:50:53Z", "updated_at": "2015-03-09T19:10:13Z", "closed_at": "2015-03-09T19:10:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/192", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/192/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/192/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/192", "id": 59693354, "node_id": "MDU6SXNzdWU1OTY5MzM1NA==", "number": 192, "title": "SyntaxError due to malformed INFO lines", "user": {"login": "trutane", "id": 70386, "node_id": "MDQ6VXNlcjcwMzg2", "avatar_url": "https://avatars3.githubusercontent.com/u/70386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trutane", "html_url": "https://github.com/trutane", "followers_url": "https://api.github.com/users/trutane/followers", "following_url": "https://api.github.com/users/trutane/following{/other_user}", "gists_url": "https://api.github.com/users/trutane/gists{/gist_id}", "starred_url": "https://api.github.com/users/trutane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trutane/subscriptions", "organizations_url": "https://api.github.com/users/trutane/orgs", "repos_url": "https://api.github.com/users/trutane/repos", "events_url": "https://api.github.com/users/trutane/events{/privacy}", "received_events_url": "https://api.github.com/users/trutane/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-03-03T19:37:02Z", "updated_at": "2015-03-15T22:33:20Z", "closed_at": "2015-03-14T21:31:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "If whitespace is present after the commas in the key=value attribute list for an INFO metadata line in a VCF, such as:\n\n`##INFO=<ID=VP, Number=1, Type=String, Description=\"Variation Property.  Documentation is at ftp://ftp.ncbi.nlm.nih.gov/snp/specs/dbSNP_BitField_latest.pdf\">`\n\nthis will cause PyVCF to exit with a SyntaxError:\n\n``` python\n  File \".../apps/python-2.7.3/lib/python2.7/site-packages/PyVCF-0.6.6-py2.7.egg/vcf/parser.py\", line 288, in __init__\n    self._parse_metainfo()\n  File \".../apps/python-2.7.3/lib/python2.7/site-packages/PyVCF-0.6.6-py2.7.egg/vcf/parser.py\", line 309, in _parse_metainfo\n    key, val = parser.read_info(line)\n  File \".../apps/python-2.7.3/lib/python2.7/site-packages/PyVCF-0.6.6-py2.7.egg/vcf/parser.py\", line 123, in read_info\n    \"One of the INFO lines is malformed: %s\" % info_string)\nSyntaxError: One of the INFO lines is malformed: ##INFO=<ID=VP, Number=1, Type=String, Description=\"Variation Property.  Documentation is at ftp://ftp.ncbi.nlm.nih.gov/snp/specs/dbSNP_BitField_latest.pdf\">\n```\n\nWithout whitespace, no problem:\n`##INFO=<ID=VP,Number=1,Type=String,Description=\"Variation Property.  Documentation is at ftp://ftp.ncbi.nlm.nih.gov/snp/specs/dbSNP_BitField_latest.pdf\">`\n\nThe [VCF spec](http://samtools.github.io/hts-specs/VCFv4.2.pdf) does not explicitly forbid whitespace in between the key=value pairs in the INFO lines, so it seems like overkill to abort parsing due to this.\n\nThis issue affects VCF files produced by SnpEff/SnpSift v4.1b.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/191", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/191/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/191/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/191", "id": 58187388, "node_id": "MDU6SXNzdWU1ODE4NzM4OA==", "number": 191, "title": "Unable to pickle vcf record", "user": {"login": "jdeligt", "id": 5850879, "node_id": "MDQ6VXNlcjU4NTA4Nzk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5850879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdeligt", "html_url": "https://github.com/jdeligt", "followers_url": "https://api.github.com/users/jdeligt/followers", "following_url": "https://api.github.com/users/jdeligt/following{/other_user}", "gists_url": "https://api.github.com/users/jdeligt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdeligt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdeligt/subscriptions", "organizations_url": "https://api.github.com/users/jdeligt/orgs", "repos_url": "https://api.github.com/users/jdeligt/repos", "events_url": "https://api.github.com/users/jdeligt/events{/privacy}", "received_events_url": "https://api.github.com/users/jdeligt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-02-19T09:57:32Z", "updated_at": "2015-03-11T12:22:02Z", "closed_at": "2015-03-10T22:37:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use vcf records in a multiprocess script.\nBut python cannot pickle the record class.\n\n```\nTraceback\n    job.get()\nFile \"/xx/python2.7/multiprocessing/pool.py\", line 558, in get\n    raise self._value\ncPickle.PicklingError: Can't pickle <class 'vcf.model.CallData'>: attribute lookup vcf.model.CallData failed\n```\n\nIt would be good to adjust the **str**(self) to match the form used in the writer module:\n\n``` python\n        ffs = self._map(str, [record.CHROM, record.POS, record.ID, record.REF]) \\\n              + [self._format_alt(record.ALT), record.QUAL or '.', self._format_filter(record.FILTER),\n                 self._format_info(record.INFO)]\n```\n\nThis would allow people to at least pass this string between processes and enable multi threading.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/187", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/187/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/187/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/187", "id": 46934516, "node_id": "MDU6SXNzdWU0NjkzNDUxNg==", "number": 187, "title": "IndexError with a VCFv4.1 file |  PyVCF-0.6.7 | macosx-10.5-x86_64", "user": {"login": "deep-introspection", "id": 208779, "node_id": "MDQ6VXNlcjIwODc3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/208779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deep-introspection", "html_url": "https://github.com/deep-introspection", "followers_url": "https://api.github.com/users/deep-introspection/followers", "following_url": "https://api.github.com/users/deep-introspection/following{/other_user}", "gists_url": "https://api.github.com/users/deep-introspection/gists{/gist_id}", "starred_url": "https://api.github.com/users/deep-introspection/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deep-introspection/subscriptions", "organizations_url": "https://api.github.com/users/deep-introspection/orgs", "repos_url": "https://api.github.com/users/deep-introspection/repos", "events_url": "https://api.github.com/users/deep-introspection/events{/privacy}", "received_events_url": "https://api.github.com/users/deep-introspection/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-10-27T17:31:32Z", "updated_at": "2014-10-28T09:52:14Z", "closed_at": "2014-10-28T09:52:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\n\nIt seems I am running into a common problem with Headers but can't figure out how to solve it.\nI am using PyVCF-0.6.7-py2.7-macosx-10.5-x86_64 and try to iterate records on a VCF file and get this error:\n\n```\nIn [11]: for record in vcf_reader:\n    print record.CHROM + ' ' + str(record.POS) + ' ' + str(record.ALT)\n    for n in range(0,13):\n        print record.samples[n]['GT']\n\n1 861323 [None]\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n./.\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n1 861324 [None]\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n./.\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n\n[ . . . ]\n\n1 879411 [None]\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n1 879412 [None]\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n0/0\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n<ipython-input-11-a45b703a98d9> in <module>()\n----> 1 for record in vcf_reader:\n      2     print record.CHROM + ' ' + str(record.POS) + ' ' + str(record.ALT)\n      3     for n in range(0,13):\n      4         print record.samples[n]['GT']\n\n/Users/XXX/anaconda/lib/python2.7/site-packages/PyVCF-0.6.7-py2.7-macosx-10.5-x86_64.egg/vcf/parser.pyc in next(self)\n    566         else:\n    567             filt = filt.split(';')\n--> 568         info = self._parse_info(row[7])\n    569 \n    570         try:\n\n/Users/XXX/anaconda/lib/python2.7/site-packages/PyVCF-0.6.7-py2.7-macosx-10.5-x86_64.egg/vcf/parser.pyc in _parse_info(self, info_str)\n    382 \n    383             if entry_type == 'Integer':\n--> 384                 vals = entry[1].split(',')\n    385                 try:\n    386                     val = self._map(int, vals)\n\nIndexError: list index out of range\n```\n\nApparently, the error comes in when PyVCF reads the first line of the VCF that contains an alternative allele (before there is only missing information or \".\"):\n\n```\n1   879412  .   C   .   1139.16 .   AC=0;AF=0.00;AN=26;CAnc=C;CpG=;DP=263;GRP=1.4;MQ=0;MQ0=0;Map20=1;TS=HP;TSseq=C,C;bSC=934;pSC=0.058  GT:DP:GQ:PL:A:C:G:T:IR:MQ:MQ0   0/0:31:93.30:0,93,1229:0,0:15,16:0,0:0,0:0:0:0  0/0:36:99:0,105,1400:0,0:34,2:0,0:0,0:0:0:0 0/0:9:27.09:0,27,352:0,0:7,2:0,0:0,0:0:0:0  0/0:16:48.14:0,48,610:0,0:7,9:0,0:0,0:0:0:0 0/0:13:36.10:0,36,448:0,0:9,4:0,0:0,0:0:0:0 0/0:15:39.12:0,39,493:0,0:10,5:0,0:0,0:0:0:0    0/0:30:84.24:0,84,1052:0,0:11,19:0,0:0,0:0:0:0  0/0:22:60.18:0,60,741:0,0:7,15:0,0:0,0:0:0:0    0/0:26:75.23:0,75,974:0,0:13,13:0,0:0,0:0:0:0   0/0:22:54.10:0,54,558:0,0:12,9:0,0:0,0:1:0:0    0/0:16:48.15:0,48,615:0,0:9,6:0,0:0,0:0:0:0 0/0:14:42.14:0,42,547:0,0:5,9:0,0:0,0:0:0:0 0/0:13:36.11:0,36,455:0,0:8,5:0,0:0,0:0:0:0\n1   879413  rs116279254 G   A   1255.54 .   1000gALT=A;AC=1;AF=0.04;AF1000g=0.01;AFR_AF=0.02;AN=26;CAnc=G;CpG=;DP=262;GRP=-3.42;HRun;MQ=0;MQ0=0;Map20=1;TS=HP;TSseq=G,G;bSC=934;pSC=0.045   GT:DP:GQ:PL:A:C:G:T:IR:MQ:MQ0   0/0:33:96.31:0,96,1267:0,1:0,0:16,16:0,0:0:0:0  0/0:34:96.32:0,96,1280:2,0:0,0:29,3:0,0:0:0:0   0/0:8:24.08:0,24,313:0,0:0,0:6,2:0,0:0:0:0  0/0:17:51.13:0,51,632:0,0:0,0:8,9:0,0:0:0:0 0/1:13:99:228,0,137:6,2:0,0:3,2:0,0:0:0:0   0/0:15:39.10:0,39,481:0,0:0,0:10,5:0,0:0:0:0    0/0:30:84.25:0,84,1037:0,0:0,0:12,18:0,0:0:0:0  0/0:22:57.17:0,57,711:0,0:0,0:7,15:0,0:0:0:0    0/0:26:78.23:0,78,1001:0,0:0,0:13,13:0,0:0:0:0  0/0:21:54.05:0,54,509:0,0:0,0:12,8:0,0:0:0:0    0/0:16:45.14:0,45,566:0,0:0,0:9,6:0,0:0:0:0 0/0:14:39.13:0,39,509:0,0:0,0:5,9:0,0:0:0:0 0/0:13:33.11:0,33,425:0,0:0,0:8,4:0,1:0:0:0\n```\n\nThe Header of the VCF is this one:\n\n```\n##fileformat=VCFv4.1\n##FORMAT=<ID=A,Number=2,Type=Integer,Description=\"Number of A bases on forward and reverse strand\">\n##FORMAT=<ID=C,Number=2,Type=Integer,Description=\"Number of C bases on forward and reverse strand\">\n##FORMAT=<ID=G,Number=2,Type=Integer,Description=\"Number of G bases on forward and reverse strand\">\n##FORMAT=<ID=T,Number=2,Type=Integer,Description=\"Number of T bases on forward and reverse strand\">\n##FORMAT=<ID=IR,Number=1,Type=Integer,Description=\"Number of reads with InDel starting at this position\">\n##FORMAT=<ID=AD,Number=.,Type=Integer,Description=\"Allelic depths for the ref and alt alleles in the order listed\">\n##FORMAT=<ID=GQ,Number=1,Type=Float,Description=\"Genotype Quality\">\n##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n##FORMAT=<ID=PL,Number=G,Type=Integer,Description=\"Normalized, Phred-scaled likelihoods for genotypes as defined in the VCF specification\">\n##FORMAT=<ID=MQ,Number=1,Type=Float,Description=\"RMS Mapping Quality\">\n##FORMAT=<ID=MQ0,Number=1,Type=Integer,Description=\"Total Mapping Quality Zero Reads\">\n##FORMAT=<ID=DP,Number=1,Type=Integer,Description=\"Filtered Depth\">\n##INFO=<ID=AF1000g,Number=1,Type=Float,Description=\"Global alternative allele frequency (AF) based on Alternate Allele Count/Total Allele Count in the 20110521 1000Genome release\">\n##INFO=<ID=AMR_AF,Number=1,Type=Float,Description=\"Alternative allele frequency (AF) for samples from AMR based on 1000G\">\n##INFO=<ID=ASN_AF,Number=1,Type=Float,Description=\"Alternative allele frequency (AF) for samples from ASN based on 1000G\">\n##INFO=<ID=AFR_AF,Number=1,Type=Float,Description=\"Alternative allele frequency (AF) for samples from AFR based on 1000G\">\n##INFO=<ID=EUR_AF,Number=1,Type=Float,Description=\"Alternative allele frequency (AF) for samples from EUR based on 1000G\">\n##INFO=<ID=1000gALT,Number=1,Type=String,Description=\"Alternative allele referred to by 1000G\">\n##INFO=<ID=TS,Number=1,Type=String,Description=\"Sequences in Ensembl v64 EPO Compara 6 primate block\">\n##INFO=<ID=TSseq,Number=1,Type=String,Description=\"Primary species bases (in order of TS field) in the EPO Compara 6 primate block\">\n##INFO=<ID=CAnc,Number=1,Type=String,Description=\"Ref-Chimp/Human ancestor base at this position\">\n##INFO=<ID=GAnc,Number=1,Type=String,Description=\"Ref-Gorilla ancestor base at this position\">\n##INFO=<ID=OAnc,Number=1,Type=String,Description=\"Ref-Orang ancestor base at this position\">\n##INFO=<ID=mSC,Number=1,Type=Float,Description=\"PhastCons Mammalian conservation score (excluding human)\">\n##INFO=<ID=pSC,Number=1,Type=Float,Description=\"PhastCons Primate conservation score (excluding human)\">\n##INFO=<ID=GRP,Number=1,Type=Float,Description=\"GERP conservation score\">\n##INFO=<ID=bSC,Number=1,Type=Float,Description=\"B score\">\n##INFO=<ID=Map20,Number=1,Type=Float,Description=\"Mapability score of Duke University (determined from 20bp reads)\">\n##INFO=<ID=CpG,Number=0,Type=Flag,Description=\"Position is in a CpG context based on the Ref/Ancestor\">\n##INFO=<ID=RM,Number=0,Type=Flag,Description=\"Position is repeat masked in the reference sequence of the EPO 6 primate block\">\n##INFO=<ID=SysErr,Number=0,Type=Flag,Description=\"Position was identified as systematic error in the 1000 genome trios\">\n##INFO=<ID=SysErrHCB,Number=0,Type=Flag,Description=\"Position was identified as systematic error based on shared SNPs in human, chimp and bonobo\">\n##INFO=<ID=UR,Number=0,Type=Flag,Description=\"Position is in a copy number control region identified by the Eichler lab\">\n##INFO=<ID=AC,Number=A,Type=Integer,Description=\"Allele count in genotypes, for each ALT allele, in the same order as listed\">\n##INFO=<ID=AF,Number=A,Type=Float,Description=\"Allele Frequency, for each ALT allele, in the same order as listed\">\n##INFO=<ID=AN,Number=1,Type=Integer,Description=\"Total number of alleles in called genotypes\">\n##INFO=<ID=BaseQRankSum,Number=1,Type=Float,Description=\"Z-score from Wilcoxon rank sum test of Alt Vs. Ref base qualities from Altai\">\n##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Filtered Depth\">\n##INFO=<ID=DS,Number=0,Type=Flag,Description=\"Were any of the samples downsampled?\">\n##INFO=<ID=Dels,Number=1,Type=Float,Description=\"Fraction of Reads Containing Spanning Deletions\">\n##INFO=<ID=FS,Number=1,Type=Float,Description=\"Phred-scaled p-value using Fisher's exact test to detect strand bias from Altai\">\n##INFO=<ID=HRun,Number=1,Type=Integer,Description=\"Largest Contiguous Homopolymer Run of Variant Allele In Either Direction\">\n##INFO=<ID=HaplotypeScore,Number=1,Type=Float,Description=\"Consistency of the site with at most two segregating haplotypes from Altai\">\n##INFO=<ID=MQ,Number=1,Type=Float,Description=\"RMS Mapping Quality\">\n##INFO=<ID=MQ0,Number=1,Type=Integer,Description=\"Total Mapping Quality Zero Reads\">\n##INFO=<ID=MQRankSum,Number=1,Type=Float,Description=\"Z-score From Wilcoxon rank sum test of Alt vs. Ref read mapping qualities from Altai\">\n##INFO=<ID=QD,Number=1,Type=Float,Description=\"Variant Confidence/Quality by Depth from Altai\">\n##INFO=<ID=ReadPosRankSum,Number=1,Type=Float,Description=\"Z-score from Wilcoxon rank sum test of Alt vs. Ref read position bias from Altai\">\n##UnifiedGenotyper=\"analysis_type=UnifiedGenotyper input_file=[/mnt/ngs_data/AltaiNeanderthal_temp_folder/final_bam/hg19_1000g/AltaiNea.hg19_1000g.1.dq.bam] read_buffer_size=null phone_home=STANDARD read_filter=[] intervals=[org.broadinstitute.sting.commandline.IntervalBinding@68ed662d] excludeIntervals=null interval_set_rule=UNION interval_merging=ALL reference_sequence=/mnt/solexa/Genomes/hg19_1000g/whole_genome.fa rodBind=[] nonDeterministicRandomSeed=false downsampling_type=BY_SAMPLE downsample_to_fraction=null downsample_to_coverage=250 baq=OFF baqGapOpenPenalty=40.0 performanceLog=null useOriginalQualities=false defaultBaseQualities=-1 validation_strictness=SILENT unsafe=null num_threads=1 read_group_black_list=null pedigree=[] pedigreeString=[] pedigreeValidationType=STRICT allow_intervals_with_unindexed_bam=false disable_experimental_low_memory_sharding=false logging_level=INFO log_to_file=null help=false genotype_likelihoods_model=BOTH p_nonref_model=EXACT heterozygosity=0.001 pcr_error_rate=1.0E-4 genotyping_mode=DISCOVERY output_mode=EMIT_ALL_SITES standard_min_confidence_threshold_for_calling=30.0 standard_min_confidence_threshold_for_emitting=30.0 computeSLOD=false alleles=(RodBinding name= source=UNBOUND) assume_single_sample_reads=null min_base_quality_score=17 max_deletion_fraction=0.05 min_indel_count_for_genotyping=5 indel_heterozygosity=1.25E-4 indelGapContinuationPenalty=10.0 indelGapOpenPenalty=45.0 indelHaplotypeSize=80 bandedIndel=false indelDebug=false ignoreSNPAlleles=false dbsnp=(RodBinding name= source=UNBOUND) out=org.broadinstitute.sting.gatk.io.stubs.VCFWriterStub NO_HEADER=org.broadinstitute.sting.gatk.io.stubs.VCFWriterStub sites_only=org.broadinstitute.sting.gatk.io.stubs.VCFWriterStub debug_file=null metrics_file=null annotation=[] excludeAnnotation=[] filter_mismatching_base_and_quals=false\"\n##contig=<ID=1,length=249250621>\n##contig=<ID=10,length=135534747>\n##contig=<ID=11,length=135006516>\n##contig=<ID=12,length=133851895>\n##contig=<ID=13,length=115169878>\n##contig=<ID=14,length=107349540>\n##contig=<ID=15,length=102531392>\n##contig=<ID=16,length=90354753>\n##contig=<ID=17,length=81195210>\n##contig=<ID=18,length=78077248>\n##contig=<ID=19,length=59128983>\n##contig=<ID=2,length=243199373>\n##contig=<ID=20,length=63025520>\n##contig=<ID=21,length=48129895>\n##contig=<ID=22,length=51304566>\n##contig=<ID=3,length=198022430>\n##contig=<ID=4,length=191154276>\n##contig=<ID=5,length=180915260>\n##contig=<ID=6,length=171115067>\n##contig=<ID=7,length=159138663>\n##contig=<ID=8,length=146364022>\n##contig=<ID=9,length=141213431>\n##contig=<ID=GL000191.1,length=106433>\n##contig=<ID=GL000192.1,length=547496>\n##contig=<ID=GL000193.1,length=189789>\n##contig=<ID=GL000194.1,length=191469>\n##contig=<ID=GL000195.1,length=182896>\n##contig=<ID=GL000196.1,length=38914>\n##contig=<ID=GL000197.1,length=37175>\n##contig=<ID=GL000198.1,length=90085>\n##contig=<ID=GL000199.1,length=169874>\n##contig=<ID=GL000200.1,length=187035>\n##contig=<ID=GL000201.1,length=36148>\n##contig=<ID=GL000202.1,length=40103>\n##contig=<ID=GL000203.1,length=37498>\n##contig=<ID=GL000204.1,length=81310>\n##contig=<ID=GL000205.1,length=174588>\n##contig=<ID=GL000206.1,length=41001>\n##contig=<ID=GL000207.1,length=4262>\n##contig=<ID=GL000208.1,length=92689>\n##contig=<ID=GL000209.1,length=159169>\n##contig=<ID=GL000210.1,length=27682>\n##contig=<ID=GL000211.1,length=166566>\n##contig=<ID=GL000212.1,length=186858>\n##contig=<ID=GL000213.1,length=164239>\n##contig=<ID=GL000214.1,length=137718>\n##contig=<ID=GL000215.1,length=172545>\n##contig=<ID=GL000216.1,length=172294>\n##contig=<ID=GL000217.1,length=172149>\n##contig=<ID=GL000218.1,length=161147>\n##contig=<ID=GL000219.1,length=179198>\n##contig=<ID=GL000220.1,length=161802>\n##contig=<ID=GL000221.1,length=155397>\n##contig=<ID=GL000222.1,length=186861>\n##contig=<ID=GL000223.1,length=180455>\n##contig=<ID=GL000224.1,length=179693>\n##contig=<ID=GL000225.1,length=211173>\n##contig=<ID=GL000226.1,length=15008>\n##contig=<ID=GL000227.1,length=128374>\n##contig=<ID=GL000228.1,length=129120>\n##contig=<ID=GL000229.1,length=19913>\n##contig=<ID=GL000230.1,length=43691>\n##contig=<ID=GL000231.1,length=27386>\n##contig=<ID=GL000232.1,length=40652>\n##contig=<ID=GL000233.1,length=45941>\n##contig=<ID=GL000234.1,length=40531>\n##contig=<ID=GL000235.1,length=34474>\n##contig=<ID=GL000236.1,length=41934>\n##contig=<ID=GL000237.1,length=45867>\n##contig=<ID=GL000238.1,length=39939>\n##contig=<ID=GL000239.1,length=33824>\n##contig=<ID=GL000240.1,length=41933>\n##contig=<ID=GL000241.1,length=42152>\n##contig=<ID=GL000242.1,length=43523>\n##contig=<ID=GL000243.1,length=43341>\n##contig=<ID=GL000244.1,length=39929>\n##contig=<ID=GL000245.1,length=36651>\n##contig=<ID=GL000246.1,length=38154>\n##contig=<ID=GL000247.1,length=36422>\n##contig=<ID=GL000248.1,length=39786>\n##contig=<ID=GL000249.1,length=38502>\n##contig=<ID=MT,length=16569>\n##contig=<ID=X,length=155270560>\n##contig=<ID=Y,length=59373566>\n##reference=file:///mnt/solexa/Genomes/hg19_1000g/whole_genome.fa\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  Altai   Vindija Sidron  Denisovan   HGDP01284   HGDP00927   DNK02   HGDP00521   HGDP00665   NA12891 HGDP00778   HGDP01307   HGDP00542\n```\n\nAny idea of how I can make PyVCF comes through this?\n\nCheers!\n\nGuillaume\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/182", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/182/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/182/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/182", "id": 45763659, "node_id": "MDU6SXNzdWU0NTc2MzY1OQ==", "number": 182, "title": "VCFWriter adds additional quotes for quoted INFO values", "user": {"login": "handstad", "id": 1928673, "node_id": "MDQ6VXNlcjE5Mjg2NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1928673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/handstad", "html_url": "https://github.com/handstad", "followers_url": "https://api.github.com/users/handstad/followers", "following_url": "https://api.github.com/users/handstad/following{/other_user}", "gists_url": "https://api.github.com/users/handstad/gists{/gist_id}", "starred_url": "https://api.github.com/users/handstad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/handstad/subscriptions", "organizations_url": "https://api.github.com/users/handstad/orgs", "repos_url": "https://api.github.com/users/handstad/repos", "events_url": "https://api.github.com/users/handstad/events{/privacy}", "received_events_url": "https://api.github.com/users/handstad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-10-14T15:25:16Z", "updated_at": "2014-10-27T14:54:56Z", "closed_at": "2014-10-27T14:54:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "If using a `vcf.VCFWriter` to write a record containing _quoted_ INFO values, extra quotes are added to the INFO field and also surrounding the quoted value.\n\nFor example, having the following in a read VCF file ('class' and 'key' are INFO keys):\n\n```\n#CHROM  POS     ID      REF     ALT     QUAL    FILTER  INFO    FORMAT  Metasample\n\n13      32890572        .  G       A       .       .       class=1;key=\"quoted\"    GT      0/1\n13      32890573        .  C       A       .       .       class=1;key=\"\"twicequoted\"\"  GT      0/1\n```\n\nwill after writing using vcf.VCFWriter with template equal to the VCF file above produce:\n\n```\n#CHROM  POS     ID      REF     ALT     QUAL    FILTER  INFO    FORMAT  Metasample\n\n13      32890572        .  G       A       .       .       \"class=1;key=\"\"quoted\"\"\"        GT      0/1\n13      32890573        .  C       A       .       .       \"class=1;key=\"\"\"\"twicequoted\"\"\"\"\"    GT      0/1\n```\n\nThe extra quotes should not be there.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/181", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/181/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/181/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/181", "id": 45478540, "node_id": "MDU6SXNzdWU0NTQ3ODU0MA==", "number": 181, "title": "Parse equals sign in INFO field", "user": {"login": "handstad", "id": 1928673, "node_id": "MDQ6VXNlcjE5Mjg2NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/1928673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/handstad", "html_url": "https://github.com/handstad", "followers_url": "https://api.github.com/users/handstad/followers", "following_url": "https://api.github.com/users/handstad/following{/other_user}", "gists_url": "https://api.github.com/users/handstad/gists{/gist_id}", "starred_url": "https://api.github.com/users/handstad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/handstad/subscriptions", "organizations_url": "https://api.github.com/users/handstad/orgs", "repos_url": "https://api.github.com/users/handstad/repos", "events_url": "https://api.github.com/users/handstad/events{/privacy}", "received_events_url": "https://api.github.com/users/handstad/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-10-10T13:08:36Z", "updated_at": "2014-10-10T18:52:41Z", "closed_at": "2014-10-10T18:51:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are several characters that are illegal to use as values in VCF files, notably '=', ',', ';', ' ', '\\t'. \nThe VCF INFO field should not contain these characters in the keys or values. For example, the equals sign is used to separate keys from values in the INFO field.\n\nHowever, not all VCF-outputting tools follow these rules.\nFor example, Ensembl VEP can output protein [HGVS](http://www.hgvs.org/mutnomen/) expressions that contain equals sign, e.g. `CCDS9344.1:c.6513G>C(p.=)`. The current parsing by PyVCF will take the equals sign as a deliminator, which gives a wrong parsing of the data that follows the equals sign.\n\nThe parsing error happens in `parser.py` at line 361 in the function _parse_info():\n\n``` python\nentry = entry.split('=')\n```\n\nA fix is to add the following line (right below the previous line):\n\n``` python\nentry[1] = '='.join(entry[1:])\n```\n\nThis will \"merge\" the value content that was previously split on the equals sign.\n\nEven though one should assume that the VCF file being parsed should have correct format, and this solution is kind of a hack, it might be valuable to add this solution. But I will leave that to the maintainers to decide.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/180", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/180/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/180/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/180", "id": 43163807, "node_id": "MDU6SXNzdWU0MzE2MzgwNw==", "number": 180, "title": "Issue with fetching whole chromosome", "user": {"login": "ckeown", "id": 4188607, "node_id": "MDQ6VXNlcjQxODg2MDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4188607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckeown", "html_url": "https://github.com/ckeown", "followers_url": "https://api.github.com/users/ckeown/followers", "following_url": "https://api.github.com/users/ckeown/following{/other_user}", "gists_url": "https://api.github.com/users/ckeown/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckeown/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckeown/subscriptions", "organizations_url": "https://api.github.com/users/ckeown/orgs", "repos_url": "https://api.github.com/users/ckeown/repos", "events_url": "https://api.github.com/users/ckeown/events{/privacy}", "received_events_url": "https://api.github.com/users/ckeown/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-09-18T18:27:48Z", "updated_at": "2014-10-16T08:27:15Z", "closed_at": "2014-10-16T08:00:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "The nugget of code below works beautifully:\n\n``` python\nimport vcf\nvcf_reader = vcf.Reader(open('../SNPs/snps_spretus_chr19.recode.vcf.gz', 'r'))\nsnps_vcf = vcf_reader.fetch('19', 0, 200000000)                                                                                                                                                         snps = {}\nalt_snps = {}\nfor snp in snps_vcf:\n    snps[int(snp.POS)] = snp.REF.upper()\n    alt_snps[int(snp.POS)] = [str(alt_snp).upper() for alt_snp in snp.ALT]\n```\n\nI want to change it, however, so that I can read the whole chromosome in without having to specify a range on the positions (because ultimately I want to run this for all chromosomes). I have tried `snps_vcf = vcf_reader.fetch('19', 0)`. However, I get an error:\n\n```\nTypeError: 'NoneType' object is not iterable\n```\n\nI have similarly tried leaving the starting position out as well, but that gives me this error:\n\n```\nTypeError: fetch() takes at least 3 arguments (2 given)\n```\n\nAny suggestions? The documentation states that I should be able to run both of the commands above. I would include the version number, but I can't seem to find it because `vcf.__version__` doesn't exist. It was installed within the last week, however, using pip, so it's probably the most recent.\n\nThanks in advance for your help!\nchris\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/175", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/175/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/175/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/175", "id": 42319251, "node_id": "MDU6SXNzdWU0MjMxOTI1MQ==", "number": 175, "title": "Using fetch with pysam 0.8.0 is broken on Python 3", "user": {"login": "martijnvermaat", "id": 623509, "node_id": "MDQ6VXNlcjYyMzUwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/623509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martijnvermaat", "html_url": "https://github.com/martijnvermaat", "followers_url": "https://api.github.com/users/martijnvermaat/followers", "following_url": "https://api.github.com/users/martijnvermaat/following{/other_user}", "gists_url": "https://api.github.com/users/martijnvermaat/gists{/gist_id}", "starred_url": "https://api.github.com/users/martijnvermaat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martijnvermaat/subscriptions", "organizations_url": "https://api.github.com/users/martijnvermaat/orgs", "repos_url": "https://api.github.com/users/martijnvermaat/repos", "events_url": "https://api.github.com/users/martijnvermaat/events{/privacy}", "received_events_url": "https://api.github.com/users/martijnvermaat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-09-09T15:31:41Z", "updated_at": "2014-11-10T15:30:10Z", "closed_at": "2014-11-10T15:30:10Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "My first tries at fixing this have been unsuccesful. At a first glance, we don't seem to be doing anything different from pysam's own unit tests and they pass just fine on Python 3.\n\n```\nTraceback (most recent call last):                                                                                                                                                                               \n  File \"/home/travis/build/jamescasbon/PyVCF/build/lib.linux-x86_64-3.3/vcf/test/test_vcf.py\", line 1109, in testNoVariantsInRange                                                                               \n    fetched_variants = self.reader.fetch('20', 14370, 17329)                                                                                                                                                     \n  File \"/home/travis/build/jamescasbon/PyVCF/build/lib.linux-x86_64-3.3/vcf/parser.py\", line 623, in fetch                                                                                                       \n    self.reader = self._tabix.fetch(chrom, start, end)                                                                                                                                                           \n  File \"ctabix.pyx\", line 345, in pysam.ctabix.Tabixfile.fetch (pysam/ctabix.c:4241)                                                                                                                             \nTypeError: expected bytes, str found   \n```\n\nSince this breaks our automated testing, I'll temporarily fix the pysam dependency to the latest working release.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/173", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/173/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/173/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/173", "id": 42262092, "node_id": "MDU6SXNzdWU0MjI2MjA5Mg==", "number": 173, "title": "No ploidity handling in uncalled genotypes", "user": {"login": "amwenger", "id": 7155109, "node_id": "MDQ6VXNlcjcxNTUxMDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7155109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amwenger", "html_url": "https://github.com/amwenger", "followers_url": "https://api.github.com/users/amwenger/followers", "following_url": "https://api.github.com/users/amwenger/following{/other_user}", "gists_url": "https://api.github.com/users/amwenger/gists{/gist_id}", "starred_url": "https://api.github.com/users/amwenger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amwenger/subscriptions", "organizations_url": "https://api.github.com/users/amwenger/orgs", "repos_url": "https://api.github.com/users/amwenger/repos", "events_url": "https://api.github.com/users/amwenger/events{/privacy}", "received_events_url": "https://api.github.com/users/amwenger/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-09-09T01:28:26Z", "updated_at": "2014-09-19T13:27:33Z", "closed_at": "2014-09-19T13:27:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to the VCF specification:\n\n> If a call cannot be made at a given locus, '.' should be specified for each missing allele in the GT field (for example './.' for a diploid genotype and '.' for a haploid genotype).\n\nBut the PyVCF _parse_samples function treats \".\" and \"./.\" uncalled genotypes equivalently, turning both into None.  The None eventually becomes the gt_nums value of a _Call object, and that _Call's \"called\" attribute is set to False.  When the _Call is written, _format_sample reverts None to \"./.\".\n\nI think that gt_nums should maintain the ploidity for uncalled genotypes by keeping the value \".\" for haploid calls and \"./.\" for diploid ones.  The gt_alleles property (which currently throws an exception for uncalled genotypes), should return a list with the uncalled bases manifested as None entries.  The genotype \".\" would be the list [None], and \"./.\" would be [None, None].\n\nI'm happy to write a fix with tests if we can agree on the proper behavior.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/172", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/172/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/172/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/172", "id": 41862762, "node_id": "MDU6SXNzdWU0MTg2Mjc2Mg==", "number": 172, "title": "VCFv4.2 compatibility...", "user": {"login": "travc", "id": 5840897, "node_id": "MDQ6VXNlcjU4NDA4OTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/5840897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/travc", "html_url": "https://github.com/travc", "followers_url": "https://api.github.com/users/travc/followers", "following_url": "https://api.github.com/users/travc/following{/other_user}", "gists_url": "https://api.github.com/users/travc/gists{/gist_id}", "starred_url": "https://api.github.com/users/travc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/travc/subscriptions", "organizations_url": "https://api.github.com/users/travc/orgs", "repos_url": "https://api.github.com/users/travc/repos", "events_url": "https://api.github.com/users/travc/events{/privacy}", "received_events_url": "https://api.github.com/users/travc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-09-03T20:24:21Z", "updated_at": "2017-04-06T15:49:48Z", "closed_at": "2014-12-03T13:11:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Edit by** @martijnvermaat: Let's have this as the main issue for tracking VCFv4.2 compatibility.\n\nI think the following are all changes from VCFv4.1 to VCFv4.2. (That's not to say that our VCFv4.1 support is complete of course.)\n- [x] Add `R` as an _INFO_ field count (number of alleles including reference).\n- [x] Support the optional _Source_ and _Version_ keys on _INFO_ metainformation.\n- [ ] Support any number of extra fields after the default ones in _INFO_, _FORMAT_, _FILTER_, and _ALT_ metainformation. These optional fields should always be stored as strings.\n- [ ] Handle `*` as _ALT_ value (reserved to indicate that the allele is missing due to an upstream deletion). Not sure what to do with it, if anything.\n\n---\n\nThe new samtools/bcftools/htslib are producing VCFv4.2, which is causing PyVCF problems.\nI've made some changes to header parsing which gets it to work on my files, but I seriously doubt this is a complete fix.  Here is the diff...\n\n``` diff\ndiff --git a/vcf/parser.py b/vcf/parser.py\nindex 9e4f739..e055a3b 100644\n--- a/vcf/parser.py\n+++ b/vcf/parser.py\n@@ -63,8 +63,9 @@ SINGULAR_METADATA = ['fileformat', 'fileDate', 'reference']\n # Conversion between value in file and Python value\n field_counts = {\n     '.': None,  # Unknown number of values\n-    'A': -1,  # Equal to the number of alleles in a given record\n+    'A': -1,  # Equal to the number of alternate alleles in a given record\n     'G': -2,  # Equal to the number of genotypes in a given record\n+    'R': -3,  # Equal to the number of alleles including reference in a given record\n }\n\n\n@@ -82,9 +83,11 @@ class _vcf_metadata_parser(object):\n         super(_vcf_metadata_parser, self).__init__()\n         self.info_pattern = re.compile(r'''\\#\\#INFO=<\n             ID=(?P<id>[^,]+),\n-            Number=(?P<number>-?\\d+|\\.|[AG]),\n+            Number=(?P<number>-?\\d+|\\.|[AGR]),\n             Type=(?P<type>Integer|Float|Flag|Character|String),\n             Description=\"(?P<desc>[^\"]*)\"\n+            (?:,Source=\"(?P<source>[^\"]*)\"){0,1}\n+            (?:,Version=(?P<version>[^\"]*)){0,1}\n             >''', re.VERBOSE)\n         self.filter_pattern = re.compile(r'''\\#\\#FILTER=<\n             ID=(?P<id>[^,]+),\n@@ -96,7 +99,7 @@ class _vcf_metadata_parser(object):\n             >''', re.VERBOSE)\n         self.format_pattern = re.compile(r'''\\#\\#FORMAT=<\n             ID=(?P<id>.+),\n-            Number=(?P<number>-?\\d+|\\.|[AG]),\n+            Number=(?P<number>-?\\d+|\\.|[AGR]),\n             Type=(?P<type>.+),\n             Description=\"(?P<desc>.*)\"\n             >''', re.VERBOSE)\n```\n\nPS: I really like PyVCF...  Makes life much easier.  Thanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/170", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/170/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/170/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/170", "id": 40163798, "node_id": "MDU6SXNzdWU0MDE2Mzc5OA==", "number": 170, "title": "PyVCF fails to import (Error in checkConflicts(value))", "user": {"login": "dnbaker", "id": 6412885, "node_id": "MDQ6VXNlcjY0MTI4ODU=", "avatar_url": "https://avatars2.githubusercontent.com/u/6412885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnbaker", "html_url": "https://github.com/dnbaker", "followers_url": "https://api.github.com/users/dnbaker/followers", "following_url": "https://api.github.com/users/dnbaker/following{/other_user}", "gists_url": "https://api.github.com/users/dnbaker/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnbaker/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnbaker/subscriptions", "organizations_url": "https://api.github.com/users/dnbaker/orgs", "repos_url": "https://api.github.com/users/dnbaker/repos", "events_url": "https://api.github.com/users/dnbaker/events{/privacy}", "received_events_url": "https://api.github.com/users/dnbaker/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-08-13T15:05:43Z", "updated_at": "2014-08-13T19:00:41Z", "closed_at": "2014-08-13T19:00:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried installing a number of PyVCF versions (current and the two previous from PyPI), as well as this using setup.py. Each time, I experience the following error when trying to import it:\n\n> > > import vcf\n> > > Error in getLoadedDLLs() : there is no .Internal function 'getLoadedDLLs'\n> > > Error in checkConflicts(value) :\n> > >   \".isMethodsDispatchOn\" is not a BUILTIN function\n\nOpensuse 64bit Linux, 48GB RAM.\n\nAny ideas? Thanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/169", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/169/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/169/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/169", "id": 37290101, "node_id": "MDU6SXNzdWUzNzI5MDEwMQ==", "number": 169, "title": "VDB Error", "user": {"login": "danielecook", "id": 1536935, "node_id": "MDQ6VXNlcjE1MzY5MzU=", "avatar_url": "https://avatars0.githubusercontent.com/u/1536935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielecook", "html_url": "https://github.com/danielecook", "followers_url": "https://api.github.com/users/danielecook/followers", "following_url": "https://api.github.com/users/danielecook/following{/other_user}", "gists_url": "https://api.github.com/users/danielecook/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielecook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielecook/subscriptions", "organizations_url": "https://api.github.com/users/danielecook/orgs", "repos_url": "https://api.github.com/users/danielecook/repos", "events_url": "https://api.github.com/users/danielecook/events{/privacy}", "received_events_url": "https://api.github.com/users/danielecook/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-07-07T17:19:25Z", "updated_at": "2015-05-12T14:38:07Z", "closed_at": "2015-05-12T14:38:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "The vcfs from the new version of bcftools can't be read.\n\n bcftools view test2.bcf | vcf_melt\n\nTraceback (most recent call last):\n  File \"/usr/local/bin/vcf_melt\", line 19, in <module>\n    reader = vcf.VCFReader(inp)\n  File \"/usr/local/lib/python2.7/site-packages/vcf/parser.py\", line 288, in **init**\n    self._parse_metainfo()\n  File \"/usr/local/lib/python2.7/site-packages/vcf/parser.py\", line 309, in _parse_metainfo\n    key, val = parser.read_info(line)\n  File \"/usr/local/lib/python2.7/site-packages/vcf/parser.py\", line 123, in read_info\n    \"One of the INFO lines is malformed: %s\" % info_string)\nSyntaxError: One of the INFO lines is malformed: ##INFO=<ID=VDB,Number=1,Type=Float,Description=\"Variant Distance Bias for filtering splice-site artefacts in RNA-seq data (bigger is better)\",Version=3>\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/168", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/168/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/168/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/168", "id": 36807928, "node_id": "MDU6SXNzdWUzNjgwNzkyOA==", "number": 168, "title": "'NoneType' object has no attribute 'group'", "user": {"login": "mgalardini", "id": 1125215, "node_id": "MDQ6VXNlcjExMjUyMTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/1125215?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgalardini", "html_url": "https://github.com/mgalardini", "followers_url": "https://api.github.com/users/mgalardini/followers", "following_url": "https://api.github.com/users/mgalardini/following{/other_user}", "gists_url": "https://api.github.com/users/mgalardini/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgalardini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgalardini/subscriptions", "organizations_url": "https://api.github.com/users/mgalardini/orgs", "repos_url": "https://api.github.com/users/mgalardini/repos", "events_url": "https://api.github.com/users/mgalardini/events{/privacy}", "received_events_url": "https://api.github.com/users/mgalardini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-30T15:26:18Z", "updated_at": "2014-07-17T14:04:14Z", "closed_at": "2014-07-06T16:33:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\n\nI'm trying to parse the following VCF file (generated by the breseq tool gdtools):\n\n```\n##fileformat=VCFv4.1\n##fileDate\n##source=breseq_GD2VCF_converterter\n##contig=<ID=REL606,length=4629812>\n##INFO=<ID=AF,Number=A,Type=Float,Description=\"Allele Frequency\">\n##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n#CHROM  POS     ID      REF     ALT     QUAL    FILTER  INFO\nREL606  1612    .       A       G       .       .       AF=1.0000\nREL606  9972    .       T       G       .       .       AF=1.0000\nREL606  10563   .       G       A       .       .       AF=1.0000  \nREL606  16965   .       G       GG      .       .       AF=1.0000\n[...]\n```\n\nWhen running the follwing snippet I get:\n\n```\nimport vcf\nvcf_reader = vcf.Reader(open('FILE.vcf', 'r')) \n\nAttributeError: 'NoneType' object has no attribute 'group'\n```\n\nI am using a freshly cloned version (0.6.7).\n\nThanks,\nMarco\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/167", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/167/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/167/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/167", "id": 36730816, "node_id": "MDU6SXNzdWUzNjczMDgxNg==", "number": 167, "title": "Fetch not finding correct file. ", "user": {"login": "nathansharris", "id": 5531818, "node_id": "MDQ6VXNlcjU1MzE4MTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5531818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nathansharris", "html_url": "https://github.com/nathansharris", "followers_url": "https://api.github.com/users/nathansharris/followers", "following_url": "https://api.github.com/users/nathansharris/following{/other_user}", "gists_url": "https://api.github.com/users/nathansharris/gists{/gist_id}", "starred_url": "https://api.github.com/users/nathansharris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nathansharris/subscriptions", "organizations_url": "https://api.github.com/users/nathansharris/orgs", "repos_url": "https://api.github.com/users/nathansharris/repos", "events_url": "https://api.github.com/users/nathansharris/events{/privacy}", "received_events_url": "https://api.github.com/users/nathansharris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-06-28T18:44:39Z", "updated_at": "2016-08-11T20:54:04Z", "closed_at": "2014-06-29T04:30:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cannot get fetch to work as expected. I am looking at data from the 1000 genomes. The minimal code that reproduces the error is:\n\nvcf_reader = vcf.Reader(open(\"ALL.chr3.phase1_release_v3.20101123.snps_indels_svs.genotypes.vcf.gz\"))\n\nvcf_reader.fetch('3',1,2)\n\nAnd the following error:\n\n/usr/local/lib/python2.7/dist-packages/vcf/parser.pyc in fetch(self, chrom, start, end)\n    582 \n    583         if not self._tabix:\n--> 584             self._tabix = pysam.Tabixfile(self.filename)\n    585 \n    586         if self._prepend_chr and chrom[:3] == 'chr':\n\n/usr/local/lib/python2.7/dist-packages/pysam/ctabix.so in pysam.ctabix.Tabixfile.**cinit** (pysam/ctabix.c:2547)()\n\n/usr/local/lib/python2.7/dist-packages/pysam/ctabix.so in pysam.ctabix.Tabixfile._open (pysam/ctabix.c:3052)()\n\nIOError: index `ALL.chr3.phase1_release_v3.20101123.snps_indels_svs.genotypes.vcf.gz.tbi` not found\n\nAm I missing something obvious? Thanks. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/164", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/164/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/164/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/164", "id": 35599026, "node_id": "MDU6SXNzdWUzNTU5OTAyNg==", "number": 164, "title": "Error Reading VCF", "user": {"login": "tatumdmortimer", "id": 6402676, "node_id": "MDQ6VXNlcjY0MDI2NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/6402676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatumdmortimer", "html_url": "https://github.com/tatumdmortimer", "followers_url": "https://api.github.com/users/tatumdmortimer/followers", "following_url": "https://api.github.com/users/tatumdmortimer/following{/other_user}", "gists_url": "https://api.github.com/users/tatumdmortimer/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatumdmortimer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatumdmortimer/subscriptions", "organizations_url": "https://api.github.com/users/tatumdmortimer/orgs", "repos_url": "https://api.github.com/users/tatumdmortimer/repos", "events_url": "https://api.github.com/users/tatumdmortimer/events{/privacy}", "received_events_url": "https://api.github.com/users/tatumdmortimer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-06-12T16:11:36Z", "updated_at": "2016-07-01T07:12:55Z", "closed_at": "2014-06-25T21:02:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting an error reading VCFs that have been processed with snpEff. \n\nHere's my VCF header:\n\n```\n##fileformat=VCFv4.1\n##INFO=<ID=AB,Number=1,Type=String,Description=\"Alt Base\">\n##SnpEffVersion=\"3.6c (build 2014-05-20), by Pablo Cingolani\"\n##SnpEffCmd=\"SnpEff  G_vaginalis_B1core -no-upstream -no-downstream - \"\n##INFO=<ID=EFF,Number=.,Type=String,Description=\"Predicted effects for this variant.Format: 'Effect ( Effect_Impact | Functional_Class | Codon_Change | Amino_Acid_Change| Amino_Acid_length | Gene_Name | Transcript_BioType | Gene_Coding | Transcript_ID | Exon_Rank  | Genotype_Number [ | ERRORS | WARNINGS ] )' \">\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  troy    284v    \n```\n\nHere's the error I get:\n\n```\nTraceback (most recent call last):\n  File \"/home/tmortimer/scripts/popgen-stats/siteFrequencySpectra.py\", line 55, in <module>\n    calc_freqs(vcfFile)\n  File \"/home/tmortimer/scripts/popgen-stats/siteFrequencySpectra.py\", line 35, in calc_freqs\n    for record in vcf_reader:\n  File \"/usr/local/lib/python2.7/dist-packages/PyVCF-0.6.7-py2.7-linux-x86_64.egg/vcf/parser.py\", line 556, in next\n    info = self._parse_info(row[7])\n  File \"/usr/local/lib/python2.7/dist-packages/PyVCF-0.6.7-py2.7-linux-x86_64.egg/vcf/parser.py\", line 397, in _parse_info\n    val = val[0]\nTypeError: 'bool' object has no attribute '__getitem__'\n```\n\nThis seems similar to Issue #78, but I haven't been able to figure out how to fix it. Thanks for any help!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/153", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/153/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/153/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/153", "id": 32937955, "node_id": "MDU6SXNzdWUzMjkzNzk1NQ==", "number": 153, "title": "Report PASS filter instead of removing it", "user": {"login": "ihodes", "id": 167803, "node_id": "MDQ6VXNlcjE2NzgwMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/167803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ihodes", "html_url": "https://github.com/ihodes", "followers_url": "https://api.github.com/users/ihodes/followers", "following_url": "https://api.github.com/users/ihodes/following{/other_user}", "gists_url": "https://api.github.com/users/ihodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/ihodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ihodes/subscriptions", "organizations_url": "https://api.github.com/users/ihodes/orgs", "repos_url": "https://api.github.com/users/ihodes/repos", "events_url": "https://api.github.com/users/ihodes/events{/privacy}", "received_events_url": "https://api.github.com/users/ihodes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-05-06T22:05:32Z", "updated_at": "2017-01-27T14:25:17Z", "closed_at": "2014-05-30T08:22:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "If the FILTER column of a record in VCF is \"PASS\", instead of reporting that in the _Record as `['PASS']`, PyVCF instead reports an empty array, `[]`. \n\nAs far as I or grep could tell, this isn't documented and it isn't clear that this is happening without reading the source. As `[]` is treated as a falsey value in Python, I'm not sure it makes sense semantically. \n\nI'd be happy to submit a PR to change this if desired, but if a change shouldn't be made, I'm curious as to the reasoning behind this? \n\n---\n\nin parser.py:550-555:\n\n``` python\nif filt == '.':\n    filt = None\nelif filt == 'PASS':\n    filt = []\nelse:\n    filt = filt.split(';')\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/152", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/152/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/152/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/152", "id": 30732382, "node_id": "MDU6SXNzdWUzMDczMjM4Mg==", "number": 152, "title": "Error reading vcf file.", "user": {"login": "amkenney", "id": 3698577, "node_id": "MDQ6VXNlcjM2OTg1Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3698577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amkenney", "html_url": "https://github.com/amkenney", "followers_url": "https://api.github.com/users/amkenney/followers", "following_url": "https://api.github.com/users/amkenney/following{/other_user}", "gists_url": "https://api.github.com/users/amkenney/gists{/gist_id}", "starred_url": "https://api.github.com/users/amkenney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amkenney/subscriptions", "organizations_url": "https://api.github.com/users/amkenney/orgs", "repos_url": "https://api.github.com/users/amkenney/repos", "events_url": "https://api.github.com/users/amkenney/events{/privacy}", "received_events_url": "https://api.github.com/users/amkenney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-04-02T22:41:22Z", "updated_at": "2014-04-03T12:35:21Z", "closed_at": "2014-04-03T12:35:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I commented on another issue with a similar error, then noticed the original issue had been closed. I'm not sure if my comment will show up so I am posting a new issue just in case.\n\n---\n\nHello, I am getting a very similar error, but I can't figure out why. I have pyvcf6.0 installed, which I used to sucessfully parse a vcf file recently.\n\nThis is the error I get:\n\nTraceback (most recent call last):\nFile \"\", line 1, in\nv = vcf.Reader(filename='CACid.MIM.snps.q40.3.26.14.vcf.gz')\nFile \"vcf/parser.py\", line 216, in init\nself._parse_metainfo()\nFile \"vcf/parser.py\", line 254, in _parse_metainfo\nkey, val = parser.read_meta(line.strip())\nFile \"vcf/parser.py\", line 166, in read_meta\nreturn self.read_meta_hash(meta_string)\nFile \"vcf/parser.py\", line 161, in read_meta_hash\nval = dict(item.split(\"=\") for item in hashItems)\nValueError: dictionary update sequence element #4 has length 4; 2 is required\n\nI didn't use to get this error. It seems to only be with some new vcf files I made using the newest version of the GATK.\n\nThoughts?\nThanks,\nAmanda\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/151", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/151/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/151/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/151", "id": 30660122, "node_id": "MDU6SXNzdWUzMDY2MDEyMg==", "number": 151, "title": "Default line-terminator in Writer class is \"\\r\\n\" instead of os.linesep", "user": {"login": "andreas-wilm", "id": 1095945, "node_id": "MDQ6VXNlcjEwOTU5NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1095945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-wilm", "html_url": "https://github.com/andreas-wilm", "followers_url": "https://api.github.com/users/andreas-wilm/followers", "following_url": "https://api.github.com/users/andreas-wilm/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-wilm/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-wilm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-wilm/subscriptions", "organizations_url": "https://api.github.com/users/andreas-wilm/orgs", "repos_url": "https://api.github.com/users/andreas-wilm/repos", "events_url": "https://api.github.com/users/andreas-wilm/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-wilm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-04-02T05:16:51Z", "updated_at": "2014-04-02T13:46:07Z", "closed_at": "2014-04-02T12:24:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi James,\n\nI'm working with PyVCF 0.6.4. and ran into some unexpected trouble because the default line-terminator for the Writer class in parser.py is set to \"\\r\\n\" in its init function. Couldn't that simply be changed to os.linesep or alternatively inferred from the template, if given?\n\nThanks,\nAndreas\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/149", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/149/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/149/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/149", "id": 29285575, "node_id": "MDU6SXNzdWUyOTI4NTU3NQ==", "number": 149, "title": "not reading var_type correctly, all called indels", "user": {"login": "amkenney", "id": 3698577, "node_id": "MDQ6VXNlcjM2OTg1Nzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/3698577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amkenney", "html_url": "https://github.com/amkenney", "followers_url": "https://api.github.com/users/amkenney/followers", "following_url": "https://api.github.com/users/amkenney/following{/other_user}", "gists_url": "https://api.github.com/users/amkenney/gists{/gist_id}", "starred_url": "https://api.github.com/users/amkenney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amkenney/subscriptions", "organizations_url": "https://api.github.com/users/amkenney/orgs", "repos_url": "https://api.github.com/users/amkenney/repos", "events_url": "https://api.github.com/users/amkenney/events{/privacy}", "received_events_url": "https://api.github.com/users/amkenney/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-03-12T17:48:17Z", "updated_at": "2019-02-18T21:00:51Z", "closed_at": "2017-01-26T20:04:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\nI am trying to parse a vcf file I recently made using samtools. My reader thinks all the records are 'indels' even though most are invariant or are snps. When I parse the samtools.vcf example, it works perfectly, so I think it's a problem with my vcf file. (I have previously used GATK to make vcf files and successfully read them using pyvcf. I am new to using samtools to make vcf files, so am still learning the particulars.)\n\nHere are some example record lines from my vcf file. Is the problem that I am missing information in the format field? And no genotype field?\n# CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  DUNG\n\nscaffold_1  552 .   G   .   33  .   DP=1;AF1=0;AC1=0;DP4=1,0,0,0;MQ=29;FQ=-30   PL  0\nscaffold_1  553 .   T   .   28.2    .   DP=1;;AC1=2;FQ=-30  PL  0\nscaffold_1  554 .   C   .   33  .   DP=1;AF1=0;AC1=0;DP4=1,0,0,0;MQ=29;FQ=-30   PL  0\nscaffold_1  554 .   CAAAAAAA    .   23.5    .   INDEL;IS=1,1.000000;DP=1;AF1=1;AC1=2;DP4=0,0,1,0;MQ=29;FQ=-37.7 PL  14\nscaffold_1  982 .   T   C   76.3    .   DP=5;VDB=1.999423e-02;AF1=1;AC1=2;DP4=0,0,5,0;MQ=37;FQ=-42  PL  109,15,0\n\nThank you!\nAmanda\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/147", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/147/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/147/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/147", "id": 27972670, "node_id": "MDU6SXNzdWUyNzk3MjY3MA==", "number": 147, "title": "Error on install using pip (v0.6.6)", "user": {"login": "lemieuxl", "id": 6589489, "node_id": "MDQ6VXNlcjY1ODk0ODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/6589489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lemieuxl", "html_url": "https://github.com/lemieuxl", "followers_url": "https://api.github.com/users/lemieuxl/followers", "following_url": "https://api.github.com/users/lemieuxl/following{/other_user}", "gists_url": "https://api.github.com/users/lemieuxl/gists{/gist_id}", "starred_url": "https://api.github.com/users/lemieuxl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lemieuxl/subscriptions", "organizations_url": "https://api.github.com/users/lemieuxl/orgs", "repos_url": "https://api.github.com/users/lemieuxl/repos", "events_url": "https://api.github.com/users/lemieuxl/events{/privacy}", "received_events_url": "https://api.github.com/users/lemieuxl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-02-20T16:03:48Z", "updated_at": "2014-02-20T16:07:39Z", "closed_at": "2014-02-20T16:07:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following error occured while installing PyVCF version 0.6.6 using pip on a python virtual environment. In brief, it seems that the file `vcf/cparse.pyx` is absent from the archive (even when downloaded from PyPI).\n\n``` console\n$ pip install -U PyVCF\nDownloading/unpacking PyVCF\n  Downloading PyVCF-0.6.6.tar.gz\n  Running setup.py (path:/home/user/softwares/Python-2.7.6_virtualenv/build/PyVCF/setup.py) egg_info for package PyVCF\n\nRequirement already up-to-date: distribute in /home/user/softwares/Python-2.7.6_virtualenv/lib/python2.7/site-packages (from PyVCF)\nRequirement already up-to-date: setuptools>=0.7 in /home/user/softwares/Python-2.7.6_virtualenv/lib/python2.7/site-packages (from distribute->PyVCF)\nInstalling collected packages: PyVCF\n  Running setup.py install for PyVCF\n\n    error: can't copy 'vcf/cparse.pyx': doesn't exist or not a regular file\n    Complete output from command /home/user/softwares/Python-2.7.6_virtualenv/bin/python -c \"import setuptools, tokenize;__file__='/home/user/softwares/Python-2.7.6_virtualenv/build/PyVCF/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-F4PiFh-record/install-record.txt --single-version-externally-managed --compile --install-headers /home/user/softwares/Python-2.7.6_virtualenv/include/site/python2.7:\n    running install\n\nrunning build\n\nrunning build_py\n\ncreating build\n\ncreating build/lib.linux-x86_64-2.7\n\ncreating build/lib.linux-x86_64-2.7/vcf\n\ncopying vcf/__init__.py -> build/lib.linux-x86_64-2.7/vcf\n\ncopying vcf/filters.py -> build/lib.linux-x86_64-2.7/vcf\n\ncopying vcf/utils.py -> build/lib.linux-x86_64-2.7/vcf\n\ncopying vcf/parser.py -> build/lib.linux-x86_64-2.7/vcf\n\ncopying vcf/model.py -> build/lib.linux-x86_64-2.7/vcf\n\ncreating build/lib.linux-x86_64-2.7/vcf/test\n\ncopying vcf/test/__init__.py -> build/lib.linux-x86_64-2.7/vcf/test\n\ncopying vcf/test/prof.py -> build/lib.linux-x86_64-2.7/vcf/test\n\ncopying vcf/test/test_vcf.py -> build/lib.linux-x86_64-2.7/vcf/test\n\nrunning egg_info\n\nwriting dependency_links to PyVCF.egg-info/dependency_links.txt\n\nwriting requirements to PyVCF.egg-info/requires.txt\n\nwriting PyVCF.egg-info/PKG-INFO\n\nwriting top-level names to PyVCF.egg-info/top_level.txt\n\nwriting entry points to PyVCF.egg-info/entry_points.txt\n\nwarning: manifest_maker: standard file '-c' not found\n\n\n\nreading manifest file 'PyVCF.egg-info/SOURCES.txt'\n\nwriting manifest file 'PyVCF.egg-info/SOURCES.txt'\n\nerror: can't copy 'vcf/cparse.pyx': doesn't exist or not a regular file\n\n----------------------------------------\nCleaning up...\nCommand /home/user/softwares/Python-2.7.6_virtualenv/bin/python -c \"import setuptools, tokenize;__file__='/home/user/softwares/Python-2.7.6_virtualenv/build/PyVCF/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-F4PiFh-record/install-record.txt --single-version-externally-managed --compile --install-headers /home/user/softwares/Python-2.7.6_virtualenv/include/site/python2.7 failed with error code 1 in /home/user/softwares/Python-2.7.6_virtualenv/build/PyVCF\nStoring debug log for failure in /home/user/.pip/pip.log\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/145", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/145/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/145/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/145", "id": 27781121, "node_id": "MDU6SXNzdWUyNzc4MTEyMQ==", "number": 145, "title": "missing cparse.pyx file on the pypi ?", "user": {"login": "FrankFeng", "id": 4476144, "node_id": "MDQ6VXNlcjQ0NzYxNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4476144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrankFeng", "html_url": "https://github.com/FrankFeng", "followers_url": "https://api.github.com/users/FrankFeng/followers", "following_url": "https://api.github.com/users/FrankFeng/following{/other_user}", "gists_url": "https://api.github.com/users/FrankFeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrankFeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrankFeng/subscriptions", "organizations_url": "https://api.github.com/users/FrankFeng/orgs", "repos_url": "https://api.github.com/users/FrankFeng/repos", "events_url": "https://api.github.com/users/FrankFeng/events{/privacy}", "received_events_url": "https://api.github.com/users/FrankFeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-02-18T09:51:47Z", "updated_at": "2015-05-12T17:57:15Z", "closed_at": "2014-02-21T12:04:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\n\nWhen upgrading to pyvcf 0.6.6 via pip in Ubuntu, it failed with such an error:\n\n```\nerror: can't copy 'vcf/cparse.pyx': doesn't exist or not a regular file\n```\n\nThen I download pyvcf 0.6.6 from pypi , uncompressed the file, and found there is no cparse.pyx . \n\nSo I manually downloaded the cparse.pyx file and put it into the vcf folder, and finally the setup could be finished. Hopefully I did it right here.\n\n```\n# download PyVCF 0.6.6 from pypi\nwget https://pypi.python.org/packages/source/P/PyVCF/PyVCF-0.6.6.tar.gz\n\ntar -zxvf PyVCF-0.6.6.tar.gz\n\ncd PyVCF-0.6.6/\n\n# download cparse.pyx from github\nwget -P ./vcf https://raw2.github.com/jamescasbon/PyVCF/master/vcf/cparse.pyx\n\n# now run install\nsudo python setup.py install\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/140", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/140/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/140/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/140/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/140", "id": 27016619, "node_id": "MDU6SXNzdWUyNzAxNjYxOQ==", "number": 140, "title": "Bug in vcf.utils.walk_together(..) even when .vcfs are sorted correctly", "user": {"login": "bw2", "id": 6240170, "node_id": "MDQ6VXNlcjYyNDAxNzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6240170?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bw2", "html_url": "https://github.com/bw2", "followers_url": "https://api.github.com/users/bw2/followers", "following_url": "https://api.github.com/users/bw2/following{/other_user}", "gists_url": "https://api.github.com/users/bw2/gists{/gist_id}", "starred_url": "https://api.github.com/users/bw2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bw2/subscriptions", "organizations_url": "https://api.github.com/users/bw2/orgs", "repos_url": "https://api.github.com/users/bw2/repos", "events_url": "https://api.github.com/users/bw2/events{/privacy}", "received_events_url": "https://api.github.com/users/bw2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-02-06T00:06:36Z", "updated_at": "2014-09-18T17:53:28Z", "closed_at": "2014-02-10T10:56:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for creating this library and continuing to improve it.  I just came across the following issue.  walk_together  uses a purely alphabetical ordering of chromosome names and so isn't aware that chr9 < chr10 or that chrY < chrM. As a result, it almost always produces unexpected behavior which, even when discovered, isn't useful in any situations I'm aware of, so I'm posting it as a bug.\n\nFor example, if you pass it 2 vcf files that have 4 variants each:\n\nfile1.vcf:\nchr9  100 ...\nchr9  200 ...\nchr10  300 ...\nchr10  400  ...\n\nfile2.vcf:\nchr9  100 ...\nchr9  210 ...\nchr10  300 ...\nchr10  410  ...\n\nit will emit:\n(file1-record1, file2-record2)     # expected\n(file1-record2, None)     # expected\n(file1-record3, None)     # expecting (None, file2-record2) instead\n(file1-record4, None)     # expecting (file1-record3, file2-record3) instead\n(None, file2-record2)\n(None, file2-record3)\n(None, file2-record4)\n\nI'm not sure about the best way to make this function aware of the user's desired contig ordering, but as a simple solution it could take a list of contigs in their expected order (and then only emit records in those contigs). \n\nAlso, I think it would be nice if walk_together could raise an exception if any of the VCFs have conflicting contig orders. \n\n-Ben\n\nPs. Below is a demonstration with 2 .vcf files with 17 variants each:\n\ntest1.vcf:\n![image](https://f.cloud.github.com/assets/6240170/2093736/037424f0-8ebe-11e3-9ba6-a5a763d22abb.png)\n\ntest2.vcf:\n![image](https://f.cloud.github.com/assets/6240170/2093742/0da0e4b8-8ebe-11e3-818c-4ca0f318fb34.png)\n\nresults for  walk_together(test1, test2):\n![image](https://f.cloud.github.com/assets/6240170/2093725/e2a645be-8ebd-11e3-8783-7166fd32fef5.png)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/138", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/138/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/138/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/138", "id": 26700165, "node_id": "MDU6SXNzdWUyNjcwMDE2NQ==", "number": 138, "title": "Release new version to pypi", "user": {"login": "naegelyd", "id": 3911912, "node_id": "MDQ6VXNlcjM5MTE5MTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/3911912?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naegelyd", "html_url": "https://github.com/naegelyd", "followers_url": "https://api.github.com/users/naegelyd/followers", "following_url": "https://api.github.com/users/naegelyd/following{/other_user}", "gists_url": "https://api.github.com/users/naegelyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/naegelyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naegelyd/subscriptions", "organizations_url": "https://api.github.com/users/naegelyd/orgs", "repos_url": "https://api.github.com/users/naegelyd/repos", "events_url": "https://api.github.com/users/naegelyd/events{/privacy}", "received_events_url": "https://api.github.com/users/naegelyd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-01-31T17:10:03Z", "updated_at": "2014-02-06T16:02:40Z", "closed_at": "2014-02-06T16:02:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "It has been a while since the last release and there are a number of useful changes(especially #128 in my case) that are in the repo but not in a released version. Please consider creating a new release to capture these fixes and changes and posting it up on pypi.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/130", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/130/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/130/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/130", "id": 23229820, "node_id": "MDU6SXNzdWUyMzIyOTgyMA==", "number": 130, "title": "The \"HOMSEQ\" field in the INFO contains a string.", "user": {"login": "spvanleeuwen", "id": 5654320, "node_id": "MDQ6VXNlcjU2NTQzMjA=", "avatar_url": "https://avatars1.githubusercontent.com/u/5654320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spvanleeuwen", "html_url": "https://github.com/spvanleeuwen", "followers_url": "https://api.github.com/users/spvanleeuwen/followers", "following_url": "https://api.github.com/users/spvanleeuwen/following{/other_user}", "gists_url": "https://api.github.com/users/spvanleeuwen/gists{/gist_id}", "starred_url": "https://api.github.com/users/spvanleeuwen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spvanleeuwen/subscriptions", "organizations_url": "https://api.github.com/users/spvanleeuwen/orgs", "repos_url": "https://api.github.com/users/spvanleeuwen/repos", "events_url": "https://api.github.com/users/spvanleeuwen/events{/privacy}", "received_events_url": "https://api.github.com/users/spvanleeuwen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-11-25T09:20:30Z", "updated_at": "2013-11-25T10:39:04Z", "closed_at": "2013-11-25T10:38:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "When parsing my VCF file I get the following error:\n\n File \"/usr/local/lib/python2.7/dist-packages/vcf/parser.py\", line 341, in _map\n    for x in iterable]\nValueError: could not convert string to float: GCCAGGCTAGTCTT\n\nVCF line:\n\nchr1    66263909    .   .   .   .   PASS    END=66264242;HOMLEN=14;HOMSEQ=GCCAGGCTAGTCTT;SVLEN=-333;SVTYPE=DEL\n\nPyVCF expects an integer for this field while it contains a string (this is correct according to the VCF 4.1 documentation).\n\nPyVCF code:\n\nRESERVED_INFO = {\n    'AA': 'String', 'AC': 'Integer', 'AF': 'Float', 'AN': 'Integer',\n    'BQ': 'Float', 'CIGAR': 'String', 'DB': 'Flag', 'DP': 'Integer',\n    'END': 'Integer', 'H2': 'Flag', 'MQ': 'Float', 'MQ0': 'Integer',\n    'NS': 'Integer', 'SB': 'String', 'SOMATIC': 'Flag', 'VALIDATED': 'Flag',\n\n```\n# VCF 4.1 Additions\n'IMPRECISE':'Flag', 'NOVEL':'Flag', 'END':'Integer', 'SVTYPE':'String',\n'CIPOS':'Integer','CIEND':'Integer','HOMLEN':'Integer','HOMSEQ':'Integer',\n'BKPTID':'String','MEINFO':'String','METRANS':'String','DGVID':'String',\n'DBVARID':'String','MATEID':'String','PARID':'String','EVENT':'String',\n'CILEN':'Integer','CN':'Integer','CNADJ':'Integer','CICN':'Integer',\n'CICNADJ':'Integer'\n```\n\n}\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/124", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/124/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/124/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/124", "id": 20765424, "node_id": "MDU6SXNzdWUyMDc2NTQyNA==", "number": 124, "title": "build error", "user": {"login": "mbourgey", "id": 5649914, "node_id": "MDQ6VXNlcjU2NDk5MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/5649914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbourgey", "html_url": "https://github.com/mbourgey", "followers_url": "https://api.github.com/users/mbourgey/followers", "following_url": "https://api.github.com/users/mbourgey/following{/other_user}", "gists_url": "https://api.github.com/users/mbourgey/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbourgey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbourgey/subscriptions", "organizations_url": "https://api.github.com/users/mbourgey/orgs", "repos_url": "https://api.github.com/users/mbourgey/repos", "events_url": "https://api.github.com/users/mbourgey/events{/privacy}", "received_events_url": "https://api.github.com/users/mbourgey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-10-09T19:41:08Z", "updated_at": "2013-10-09T20:17:26Z", "closed_at": "2013-10-09T20:17:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi when I try to build PyVcf using poython 2.7.5 i get this error:\n\n$ python setup.py build\nrunning build\nrunning build_py\ncopying vcf/cparse.py -> build/lib.linux-x86_64-2.7/vcf\nrunning egg_info\nwriting requirements to PyVCF.egg-info/requires.txt\nwriting PyVCF.egg-info/PKG-INFO\nwriting top-level names to PyVCF.egg-info/top_level.txt\nwriting dependency_links to PyVCF.egg-info/dependency_links.txt\nwriting entry points to PyVCF.egg-info/entry_points.txt\nwriting requirements to PyVCF.egg-info/requires.txt\nwriting PyVCF.egg-info/PKG-INFO\nwriting top-level names to PyVCF.egg-info/top_level.txt\nwriting dependency_links to PyVCF.egg-info/dependency_links.txt\nwriting entry points to PyVCF.egg-info/entry_points.txt\nreading manifest file 'PyVCF.egg-info/SOURCES.txt'\nwriting manifest file 'PyVCF.egg-info/SOURCES.txt'\nerror: can't copy 'vcf/cparse.c': doesn't exist or not a regular file\n\nthanks\n\nMathieu\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/123", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/123/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/123/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/123", "id": 20582371, "node_id": "MDU6SXNzdWUyMDU4MjM3MQ==", "number": 123, "title": "Cannot fetch() whole chromosome", "user": {"login": "nkoelling", "id": 763321, "node_id": "MDQ6VXNlcjc2MzMyMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/763321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nkoelling", "html_url": "https://github.com/nkoelling", "followers_url": "https://api.github.com/users/nkoelling/followers", "following_url": "https://api.github.com/users/nkoelling/following{/other_user}", "gists_url": "https://api.github.com/users/nkoelling/gists{/gist_id}", "starred_url": "https://api.github.com/users/nkoelling/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nkoelling/subscriptions", "organizations_url": "https://api.github.com/users/nkoelling/orgs", "repos_url": "https://api.github.com/users/nkoelling/repos", "events_url": "https://api.github.com/users/nkoelling/events{/privacy}", "received_events_url": "https://api.github.com/users/nkoelling/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 68664561, "node_id": "MDU6TGFiZWw2ODY2NDU2MQ==", "url": "https://api.github.com/repos/jamescasbon/PyVCF/labels/Triaged", "name": "Triaged", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-06T16:45:40Z", "updated_at": "2014-05-14T15:10:27Z", "closed_at": "2014-05-14T15:10:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "In tabix, one can grab all variants for an entire chromosome using tabix.fetch(chr, None, None). In PyVCF, this call fails because of the line \"start = start - 1\" in the fetch() wrapper, which assumes that start is an integer.\n\nI worked around this by setting the .reader property to the correct call to _tabix.fetch() manually, but it would obviously be better to make fetch() work with start=None in the first place.\n\nI guess a very simple solution would be this, although I actually suspect the line should not be required in the first place:\n\n```\n    if not start is None:\n        start = start - 1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/122", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/122/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/122/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/122", "id": 20132594, "node_id": "MDU6SXNzdWUyMDEzMjU5NA==", "number": 122, "title": "Space in INFO field", "user": {"login": "omerfarukgerdan", "id": 5493550, "node_id": "MDQ6VXNlcjU0OTM1NTA=", "avatar_url": "https://avatars3.githubusercontent.com/u/5493550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omerfarukgerdan", "html_url": "https://github.com/omerfarukgerdan", "followers_url": "https://api.github.com/users/omerfarukgerdan/followers", "following_url": "https://api.github.com/users/omerfarukgerdan/following{/other_user}", "gists_url": "https://api.github.com/users/omerfarukgerdan/gists{/gist_id}", "starred_url": "https://api.github.com/users/omerfarukgerdan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omerfarukgerdan/subscriptions", "organizations_url": "https://api.github.com/users/omerfarukgerdan/orgs", "repos_url": "https://api.github.com/users/omerfarukgerdan/repos", "events_url": "https://api.github.com/users/omerfarukgerdan/events{/privacy}", "received_events_url": "https://api.github.com/users/omerfarukgerdan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-09-26T19:53:22Z", "updated_at": "2013-09-28T07:10:36Z", "closed_at": "2013-09-28T07:10:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When there's a space \" \" in info field, such as in annotated vcf files, program can't read the vcf successfully.\n\nWhen the spaces \" \" are replaced with \"\" program reads the vcf without a problem.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/120", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/120/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/120/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/120", "id": 19778372, "node_id": "MDU6SXNzdWUxOTc3ODM3Mg==", "number": 120, "title": "bug in parsing of \"Character\" types in INFO column", "user": {"login": "AndrewUzilov", "id": 124773, "node_id": "MDQ6VXNlcjEyNDc3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/124773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewUzilov", "html_url": "https://github.com/AndrewUzilov", "followers_url": "https://api.github.com/users/AndrewUzilov/followers", "following_url": "https://api.github.com/users/AndrewUzilov/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewUzilov/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewUzilov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewUzilov/subscriptions", "organizations_url": "https://api.github.com/users/AndrewUzilov/orgs", "repos_url": "https://api.github.com/users/AndrewUzilov/repos", "events_url": "https://api.github.com/users/AndrewUzilov/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewUzilov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-09-19T20:09:41Z", "updated_at": "2013-09-20T12:01:08Z", "closed_at": "2013-09-20T10:18:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "To reproduce, save the sample VCF below to `simple.vcf` and do:\n\n```\npython2.7 PyVCF/scripts/vcf_filter.py simple.vcf sq\n```\n\nExpected output:\n\n```\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  Sample \nchr1    100 id1 G   A   .   PASS    FIELD1=123.456;FIELD2=Y GT  0/1\n```\n\nActual output (`FIELD2` is wrong, it is a duplicate of `FIELD1`):\n\n```\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  Sample\nchr1    100 id1 G   A   .   PASS    FIELD1=123.456;FIELD2=123.456   GT  0/1\n```\n\nThe reason this happens is because `Character` VCF types are not handled in `vcf.parser.Reader._parse_info()`, so anytime we see that type, we just use the value of the previous entry in the `INFO` column.\n\nTwo related comments on testing:\n1. None of the test files in  `PyVCF/vcf/test/*.vcf` use the `Character` type; this should be added to maybe catch such cases.\n2. I discovered this bug by running `vcf-validator` (from http://vcftools.sourceforge.net/) and noticing that although the input file to PyVCF passed, the output file didn't because Character types changed.  Maybe it makes sense to run `vcf-validator` as automated testing, i.e. take all input in `PyVCF/vcf/test/*.vcf`, run it through a simple reader/writer script using PyVCF, and make sure output validates.\n\nSample VCF used for testing (sorry, not sure if I can attach non-image files?):\n\n```\n##fileformat=VCFv4.1\n##INFO=<ID=FIELD1,Number=.,Type=Float,Description=\"A floating point value\">\n##INFO=<ID=FIELD2,Number=.,Type=Character,Description=\"A character value\">\n##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  Sample\nchr1    100 id1 G   A   .   .   FIELD1=123.456;FIELD2=Y GT  0/1\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/118", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/118/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/118/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/118", "id": 19773755, "node_id": "MDU6SXNzdWUxOTc3Mzc1NQ==", "number": 118, "title": "contig metadata is not output when using vcf.Writer", "user": {"login": "AndrewUzilov", "id": 124773, "node_id": "MDQ6VXNlcjEyNDc3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/124773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewUzilov", "html_url": "https://github.com/AndrewUzilov", "followers_url": "https://api.github.com/users/AndrewUzilov/followers", "following_url": "https://api.github.com/users/AndrewUzilov/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewUzilov/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewUzilov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewUzilov/subscriptions", "organizations_url": "https://api.github.com/users/AndrewUzilov/orgs", "repos_url": "https://api.github.com/users/AndrewUzilov/repos", "events_url": "https://api.github.com/users/AndrewUzilov/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewUzilov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-09-19T18:45:43Z", "updated_at": "2013-09-19T19:54:16Z", "closed_at": "2013-09-19T19:54:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "The `##contig` header lines disappear when loading/writing a VCF file.  To reproduce:\n\n```\nimport vcf\nr = vcf.Reader (open ('PyVCF/vcf/test/gatk.vcf', 'r'))\nw = vcf.Writer (open ('out.vcf', 'w'), r)\nw.close()\n```\n\nNote that `out.vcf` has no `##contig` lines, but they were present in `PyVCF/vcf/test/gatk.vcf`\n\nThis actually happens with the sample filter script, too:\n\n```\npython2.7 scripts/vcf_filter.py vcf/test/gatk.vcf sq > ~/tmp/out.vcf\ndiff vcf/test/gatk.vcf ~/tmp/out.vcf | less\n```\n\nNotice that all the `##contig` header lines are in the old file, but not the new file.\n\nThis is odd... contigs are stored in the `Reader` obj, but aren't written out?  Everything else in the header is written out more-or-less verbatim.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/114", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/114/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/114/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/114", "id": 17707598, "node_id": "MDU6SXNzdWUxNzcwNzU5OA==", "number": 114, "title": "parser does not track whether FILTER was explicitly set", "user": {"login": "AndrewUzilov", "id": 124773, "node_id": "MDQ6VXNlcjEyNDc3Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/124773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndrewUzilov", "html_url": "https://github.com/AndrewUzilov", "followers_url": "https://api.github.com/users/AndrewUzilov/followers", "following_url": "https://api.github.com/users/AndrewUzilov/following{/other_user}", "gists_url": "https://api.github.com/users/AndrewUzilov/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndrewUzilov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndrewUzilov/subscriptions", "organizations_url": "https://api.github.com/users/AndrewUzilov/orgs", "repos_url": "https://api.github.com/users/AndrewUzilov/repos", "events_url": "https://api.github.com/users/AndrewUzilov/events{/privacy}", "received_events_url": "https://api.github.com/users/AndrewUzilov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-08-06T18:50:20Z", "updated_at": "2013-08-07T14:52:28Z", "closed_at": "2013-08-07T14:52:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Very nice tool, but one nitpick.\n\nIf the FILTER column is `.` (meaning no filters applied) or `PASS`, the `_Record.FILTER` attribute is an empty list.  So, it impossible to tell whether the original VCF contained a `.` or `PASS`, since the convention for storing both is the same.\n\nYes, I know that it only makes sense to EITHER have the entire VCF file contain `.` in that col, OR have that col always explicitly specify `PASS` or the rejection criteria string.  But in some use cases, `PASS` and `.` might be mixed in the same file, and that should be stored --- perhaps I am actually writing a parser designed to catch and fix malformed VCFs with this fixing, which are other syntactically valid.\n\nA backwards-compatible solution is to just add a new attribute to `_Record` that tracks whether the FILTER value was ever set or not.\n\nI cloned this repo and hacked in the change ( [https://github.com/AndrewUzilov/PyVCF.git] ), so pull from there or I can do a pull request if OK.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/113", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/113/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/113/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/113", "id": 17546623, "node_id": "MDU6SXNzdWUxNzU0NjYyMw==", "number": 113, "title": "Unable to fetch records from indexed VCF file", "user": {"login": "ychen306", "id": 3420769, "node_id": "MDQ6VXNlcjM0MjA3Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3420769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ychen306", "html_url": "https://github.com/ychen306", "followers_url": "https://api.github.com/users/ychen306/followers", "following_url": "https://api.github.com/users/ychen306/following{/other_user}", "gists_url": "https://api.github.com/users/ychen306/gists{/gist_id}", "starred_url": "https://api.github.com/users/ychen306/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ychen306/subscriptions", "organizations_url": "https://api.github.com/users/ychen306/orgs", "repos_url": "https://api.github.com/users/ychen306/repos", "events_url": "https://api.github.com/users/ychen306/events{/privacy}", "received_events_url": "https://api.github.com/users/ychen306/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-08-02T06:41:09Z", "updated_at": "2013-08-02T15:48:03Z", "closed_at": "2013-08-02T15:48:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here are my python lines trying to fetch some records from one of the example VCF files in you repo:\n`\nvcf_reader = vcf.Reader(filename='tb.vcf.gz')`\n`for record in vcf_reader.fetch('20', 1110696, 1230237):`\n`print record`\n\nIt prints nothing however.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/110", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/110/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/110/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/110", "id": 16675350, "node_id": "MDU6SXNzdWUxNjY3NTM1MA==", "number": 110, "title": "TestVcfSpecs.test_vcf_4_1 fails", "user": {"login": "superbobry", "id": 185856, "node_id": "MDQ6VXNlcjE4NTg1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/185856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superbobry", "html_url": "https://github.com/superbobry", "followers_url": "https://api.github.com/users/superbobry/followers", "following_url": "https://api.github.com/users/superbobry/following{/other_user}", "gists_url": "https://api.github.com/users/superbobry/gists{/gist_id}", "starred_url": "https://api.github.com/users/superbobry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superbobry/subscriptions", "organizations_url": "https://api.github.com/users/superbobry/orgs", "repos_url": "https://api.github.com/users/superbobry/repos", "events_url": "https://api.github.com/users/superbobry/events{/privacy}", "received_events_url": "https://api.github.com/users/superbobry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-12T10:24:51Z", "updated_at": "2013-07-16T12:04:16Z", "closed_at": "2013-07-16T12:04:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python2.7\n\n``` python\n$ python setup.py test\n======================================================================\nFAIL: test_vcf_4_1 (vcf.test.test_vcf.TestVcfSpecs)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/superbobry/Code/PyVCF/vcf/test/test_vcf.py\", line 53, in test_vcf_4_1\n    assert 'contig' in reader.metadata\nAssertionError\n```\n\nAccording to [Travis](https://travis-ci.org/jamescasbon/PyVCF/jobs/8302345), the issue was introduced by #105. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/108", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/108/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/108/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/108", "id": 16591616, "node_id": "MDU6SXNzdWUxNjU5MTYxNg==", "number": 108, "title": "PyVCF records are unpicklable", "user": {"login": "superbobry", "id": 185856, "node_id": "MDQ6VXNlcjE4NTg1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/185856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superbobry", "html_url": "https://github.com/superbobry", "followers_url": "https://api.github.com/users/superbobry/followers", "following_url": "https://api.github.com/users/superbobry/following{/other_user}", "gists_url": "https://api.github.com/users/superbobry/gists{/gist_id}", "starred_url": "https://api.github.com/users/superbobry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superbobry/subscriptions", "organizations_url": "https://api.github.com/users/superbobry/orgs", "repos_url": "https://api.github.com/users/superbobry/repos", "events_url": "https://api.github.com/users/superbobry/events{/privacy}", "received_events_url": "https://api.github.com/users/superbobry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-07-10T18:05:47Z", "updated_at": "2013-07-15T06:45:42Z", "closed_at": "2013-07-15T06:45:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Unfortunately, because of this it's impossible to process `PyVCF` records with `joblib`. Here's an example:\n\n``` python\n>>> import vcf\n>>> import cPickle\n>>> f = open(path)\n>>> r = vcf.Reader(f)\n>>> cPickle.dumps(next(r))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/user/.virtualenvs/bio-env/lib64/python2.6/copy_reg.py\", line 77, in _reduce_ex\n    raise TypeError(\"a class that defines __slots__ without \"\nTypeError: a class that defines __slots__ without defining __getstate__ cannot be pickled\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/107", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/107/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/107/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/107/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/107", "id": 15746129, "node_id": "MDU6SXNzdWUxNTc0NjEyOQ==", "number": 107, "title": "homozygous variety SNP", "user": {"login": "mictadlo", "id": 588297, "node_id": "MDQ6VXNlcjU4ODI5Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/588297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mictadlo", "html_url": "https://github.com/mictadlo", "followers_url": "https://api.github.com/users/mictadlo/followers", "following_url": "https://api.github.com/users/mictadlo/following{/other_user}", "gists_url": "https://api.github.com/users/mictadlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/mictadlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mictadlo/subscriptions", "organizations_url": "https://api.github.com/users/mictadlo/orgs", "repos_url": "https://api.github.com/users/mictadlo/repos", "events_url": "https://api.github.com/users/mictadlo/events{/privacy}", "received_events_url": "https://api.github.com/users/mictadlo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-06-19T14:04:23Z", "updated_at": "2013-07-15T06:42:34Z", "closed_at": "2013-07-15T06:42:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \nHow would it be possible to create with help of PyVCF a VCF file for the below homozygous variety SNP?\n\n```\n    POS     391\n    ID      X8r0000001\n    REF     G\n    ALT     A\n    QUAL    2\n    FILTER  .\n    INFO    DP=5\n    genotypes:\n    - variety1 = 2*G (variety1 has two G's at locus position)\n    - variety2 = 3*A (variety2 has two A's at locus position)\n    - variety3 = 0*x (variety3 has no base at locus position)\n    allele       A/G\n```\n\nThank you in advance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/106", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/106/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/106/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/106/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/106", "id": 15561493, "node_id": "MDU6SXNzdWUxNTU2MTQ5Mw==", "number": 106, "title": "Error on install: distribute/setuptools issue", "user": {"login": "murphyke", "id": 928642, "node_id": "MDQ6VXNlcjkyODY0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/928642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/murphyke", "html_url": "https://github.com/murphyke", "followers_url": "https://api.github.com/users/murphyke/followers", "following_url": "https://api.github.com/users/murphyke/following{/other_user}", "gists_url": "https://api.github.com/users/murphyke/gists{/gist_id}", "starred_url": "https://api.github.com/users/murphyke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/murphyke/subscriptions", "organizations_url": "https://api.github.com/users/murphyke/orgs", "repos_url": "https://api.github.com/users/murphyke/repos", "events_url": "https://api.github.com/users/murphyke/events{/privacy}", "received_events_url": "https://api.github.com/users/murphyke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-06-14T14:44:16Z", "updated_at": "2013-07-15T06:49:17Z", "closed_at": "2013-07-15T06:49:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I downloaded the latest PyVCF and tried installing it.  The final error was:\n\n```\nValueError: A 0.7-series setuptools cannot be installed with distribute. Found one at /home/eft/pcgc2-env/lib/python2.7/site-packages\n```\n\nerror: Setup script exited with 1\n\nI removed setuptools\\* from my environment's site-packages and manually installed setuptools 0.6c11 and tried again.\n\nI got the same result; the log is below.\n\nAlso, not only did the installation fail, but setuptools was poisoned in the process, and I had to remove and re-install it.\n\n<pre>\n$ python setup.py install\nrunning install\nrunning bdist_egg\nrunning egg_info\ncreating PyVCF.egg-info\nwriting requirements to PyVCF.egg-info/requires.txt\nwriting PyVCF.egg-info/PKG-INFO\nwriting top-level names to PyVCF.egg-info/top_level.txt\nwriting dependency_links to PyVCF.egg-info/dependency_links.txt\nwriting entry points to PyVCF.egg-info/entry_points.txt\nwriting manifest file 'PyVCF.egg-info/SOURCES.txt'\nreading manifest file 'PyVCF.egg-info/SOURCES.txt'\nwriting manifest file 'PyVCF.egg-info/SOURCES.txt'\ninstalling library code to build/bdist.linux-x86_64/egg\nrunning install_lib\nrunning build_py\ncreating build\ncreating build/lib\ncreating build/lib/vcf\ncopying vcf/filters.py -> build/lib/vcf\ncopying vcf/parser.py -> build/lib/vcf\ncopying vcf/model.py -> build/lib/vcf\ncopying vcf/utils.py -> build/lib/vcf\ncopying vcf/__init__.py -> build/lib/vcf\ncreating build/lib/vcf/test\ncopying vcf/test/test_vcf.py -> build/lib/vcf/test\ncopying vcf/test/prof.py -> build/lib/vcf/test\ncopying vcf/test/__init__.py -> build/lib/vcf/test\ncopying vcf/test/example-4.1-info-multiple-values.vcf -> build/lib/vcf/test\ncopying vcf/test/issue-16.vcf -> build/lib/vcf/test\ncopying vcf/test/gatk.vcf -> build/lib/vcf/test\ncopying vcf/test/example-4.0.vcf -> build/lib/vcf/test\ncopying vcf/test/example-4.1.vcf -> build/lib/vcf/test\ncopying vcf/test/issue_49.vcf -> build/lib/vcf/test\ncopying vcf/test/samtools.vcf -> build/lib/vcf/test\ncopying vcf/test/freebayes.vcf -> build/lib/vcf/test\ncopying vcf/test/example-4.1-bnd.vcf -> build/lib/vcf/test\ncopying vcf/test/null_genotype_mono.vcf -> build/lib/vcf/test\ncopying vcf/test/bcftools.vcf -> build/lib/vcf/test\ncopying vcf/test/samples-space.vcf -> build/lib/vcf/test\ncopying vcf/test/example-4.1-sv.vcf -> build/lib/vcf/test\ncopying vcf/test/walk_left.vcf -> build/lib/vcf/test\ncopying vcf/test/1kg.sites.vcf -> build/lib/vcf/test\ncopying vcf/test/tb.vcf.gz -> build/lib/vcf/test\ncopying vcf/test/1kg.vcf.gz -> build/lib/vcf/test\ncopying vcf/test/tb.vcf.gz.tbi -> build/lib/vcf/test\ncreating build/bdist.linux-x86_64\ncreating build/bdist.linux-x86_64/egg\ncreating build/bdist.linux-x86_64/egg/vcf\ncopying build/lib/vcf/filters.py -> build/bdist.linux-x86_64/egg/vcf\ncopying build/lib/vcf/parser.py -> build/bdist.linux-x86_64/egg/vcf\ncopying build/lib/vcf/model.py -> build/bdist.linux-x86_64/egg/vcf\ncopying build/lib/vcf/utils.py -> build/bdist.linux-x86_64/egg/vcf\ncopying build/lib/vcf/__init__.py -> build/bdist.linux-x86_64/egg/vcf\ncreating build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/example-4.1-info-multiple-values.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/issue-16.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/tb.vcf.gz -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/gatk.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/1kg.vcf.gz -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/tb.vcf.gz.tbi -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/example-4.0.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/test_vcf.py -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/example-4.1.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/issue_49.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/samtools.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/freebayes.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/prof.py -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/example-4.1-bnd.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/__init__.py -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/null_genotype_mono.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/bcftools.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/samples-space.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/example-4.1-sv.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/walk_left.vcf -> build/bdist.linux-x86_64/egg/vcf/test\ncopying build/lib/vcf/test/1kg.sites.vcf -> build/bdist.linux-x86_64/egg/vcf/test\nbyte-compiling build/bdist.linux-x86_64/egg/vcf/filters.py to filters.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/vcf/parser.py to parser.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/vcf/model.py to model.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/vcf/utils.py to utils.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/vcf/__init__.py to __init__.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/vcf/test/test_vcf.py to test_vcf.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/vcf/test/prof.py to prof.pyc\nbyte-compiling build/bdist.linux-x86_64/egg/vcf/test/__init__.py to __init__.pyc\ncreating build/bdist.linux-x86_64/egg/EGG-INFO\ninstalling scripts to build/bdist.linux-x86_64/egg/EGG-INFO/scripts\nrunning install_scripts\nrunning build_scripts\ncreating build/scripts-2.7\ncopying and adjusting scripts/vcf_melt -> build/scripts-2.7\ncopying and adjusting scripts/vcf_filter.py -> build/scripts-2.7\nchanging mode of build/scripts-2.7/vcf_melt from 664 to 775\nchanging mode of build/scripts-2.7/vcf_filter.py from 664 to 775\ncreating build/bdist.linux-x86_64/egg/EGG-INFO/scripts\ncopying build/scripts-2.7/vcf_filter.py -> build/bdist.linux-x86_64/egg/EGG-INFO/scripts\ncopying build/scripts-2.7/vcf_melt -> build/bdist.linux-x86_64/egg/EGG-INFO/scripts\nchanging mode of build/bdist.linux-x86_64/egg/EGG-INFO/scripts/vcf_filter.py to 775\nchanging mode of build/bdist.linux-x86_64/egg/EGG-INFO/scripts/vcf_melt to 775\ncopying PyVCF.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO\ncopying PyVCF.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\ncopying PyVCF.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\ncopying PyVCF.egg-info/entry_points.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\ncopying PyVCF.egg-info/requires.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\ncopying PyVCF.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO\nzip_safe flag not set; analyzing archive contents...\nvcf.test.test_vcf: module references __file__\ncreating dist\ncreating 'dist/PyVCF-0.6.3-py2.7.egg' and adding 'build/bdist.linux-x86_64/egg' to it\nremoving 'build/bdist.linux-x86_64/egg' (and everything under it)\nProcessing PyVCF-0.6.3-py2.7.egg\ncreating /home/eft/pcgc2-env/lib/python2.7/site-packages/PyVCF-0.6.3-py2.7.egg\nExtracting PyVCF-0.6.3-py2.7.egg to /home/eft/pcgc2-env/lib/python2.7/site-packages\nAdding PyVCF 0.6.3 to easy-install.pth file\nInstalling vcf_filter.py script to /home/eft/pcgc2-env/bin\nInstalling vcf_melt script to /home/eft/pcgc2-env/bin\n\nInstalled /home/eft/pcgc2-env/lib/python2.7/site-packages/PyVCF-0.6.3-py2.7.egg\nProcessing dependencies for PyVCF==0.6.3\nSearching for distribute\nReading https://pypi.python.org/simple/distribute/\nReading http://packages.python.org/distribute\nBest match: distribute 0.6.45\nDownloading https://pypi.python.org/packages/source/d/distribute/distribute-0.6.45.tar.gz#md5=8953f2c07e6700dabf2ec150129b8c31\nProcessing distribute-0.6.45.tar.gz\nWriting /tmp/easy_install-uX32Vu/distribute-0.6.45/setup.cfg\nRunning distribute-0.6.45/setup.py -q bdist_egg --dist-dir /tmp/easy_install-uX32Vu/distribute-0.6.45/egg-dist-tmp-lsbB67\nBefore install bootstrap.\nScanning installed packages\nSetuptools installation detected at /home/eft/pcgc2-env/lib/python2.7/site-packages\nNon-egg installation\nMoving elements out of the way...\nRenaming /home/eft/pcgc2-env/lib/python2.7/site-packages/setuptools-0.7.2-py2.7.egg-info to /home/eft/pcgc2-env/lib/python2.7/site-packages/setuptools-0.7.2-py2.7.egg-info.OLD.1371219405.95\nRenaming /home/eft/pcgc2-env/lib/python2.7/site-packages/setuptools to /home/eft/pcgc2-env/lib/python2.7/site-packages/setuptools.OLD.1371219405.95\nRenaming /home/eft/pcgc2-env/lib/python2.7/site-packages/pkg_resources.py to /home/eft/pcgc2-env/lib/python2.7/site-packages/pkg_resources.py.OLD.1371219405.95\nCould not find the /home/eft/pcgc2-env/lib/python2.7/site-packages/site.py element of the Setuptools distribution\nPatching complete.\nRelaunching...\nTraceback (most recent call last):\n  File \"/tmp/easy_install-uX32Vu/distribute-0.6.45/setup.py\", line 45, in <module>\n    exec(init_file.read(), d)\n  File \"<string>\", line 8, in <module>\n  File \"/tmp/easy_install-uX32Vu/distribute-0.6.45/setuptools/__init__.py\", line 2, in <module>\n    from setuptools.extension import Extension, Library\n  File \"/tmp/easy_install-uX32Vu/distribute-0.6.45/setuptools/extension.py\", line 5, in <module>\n    from setuptools.dist import _get_unpatched\n  File \"/tmp/easy_install-uX32Vu/distribute-0.6.45/setuptools/dist.py\", line 6, in <module>\n    from setuptools.command.install import install\n  File \"/tmp/easy_install-uX32Vu/distribute-0.6.45/setuptools/command/__init__.py\", line 8, in <module>\n    from setuptools.command import install_scripts\n  File \"/tmp/easy_install-uX32Vu/distribute-0.6.45/setuptools/command/install_scripts.py\", line 3, in <module>\n    from pkg_resources import Distribution, PathMetadata, ensure_directory\n  File \"/tmp/easy_install-uX32Vu/distribute-0.6.45/pkg_resources.py\", line 2870, in <module>\n    add_activation_listener(lambda dist: dist.activate())\n  File \"/tmp/easy_install-uX32Vu/distribute-0.6.45/pkg_resources.py\", line 710, in subscribe\n    callback(dist)\n  File \"/tmp/easy_install-uX32Vu/distribute-0.6.45/pkg_resources.py\", line 2870, in <lambda>\n    add_activation_listener(lambda dist: dist.activate())\n  File \"/tmp/easy_install-uX32Vu/distribute-0.6.45/pkg_resources.py\", line 2302, in activate\n    self.insert_on(path)\n  File \"/tmp/easy_install-uX32Vu/distribute-0.6.45/pkg_resources.py\", line 2403, in insert_on\n    \"with distribute. Found one at %s\" % str(self.location))\nValueError: A 0.7-series setuptools cannot be installed with distribute. Found one at /home/eft/pcgc2-env/lib/python2.7/site-packages\nerror: Setup script exited with 1\n</pre>\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/104", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/104/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/104/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/104", "id": 14508711, "node_id": "MDU6SXNzdWUxNDUwODcxMQ==", "number": 104, "title": "vcf.Writer problems", "user": {"login": "FrankFeng", "id": 4476144, "node_id": "MDQ6VXNlcjQ0NzYxNDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4476144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FrankFeng", "html_url": "https://github.com/FrankFeng", "followers_url": "https://api.github.com/users/FrankFeng/followers", "following_url": "https://api.github.com/users/FrankFeng/following{/other_user}", "gists_url": "https://api.github.com/users/FrankFeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/FrankFeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FrankFeng/subscriptions", "organizations_url": "https://api.github.com/users/FrankFeng/orgs", "repos_url": "https://api.github.com/users/FrankFeng/repos", "events_url": "https://api.github.com/users/FrankFeng/events{/privacy}", "received_events_url": "https://api.github.com/users/FrankFeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2013-05-20T06:30:22Z", "updated_at": "2013-05-23T16:04:49Z", "closed_at": "2013-05-23T16:04:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "When writing records to a VCF file without FORMAT and samples information available, error occurs:\n\n```\n        File \"/usr/local/lib/python2.7/dist-packages/vcf/parser.py\", line 585, in write_record\n          for sample in record.samples]\n        TypeError: 'NoneType' object is not iterable\n```\n\nThe cause is that vcf.Writer always assumes the existence of a FORMAT field in the output VCF file. Actually, according to the VCF 4.1 format specification (http://www.1000genomes.org/wiki/Analysis/Variant%20Call%20Format/vcf-variant-call-format-version-41), the FORMAT field is not mandatory.\n\nA example of VCF file without FORMAT field from the 1000 Genome project, is shown below. The source of this example is from ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/phase1/analysis_results/integrated_call_sets/ALL.wgs.integrated_phase1_v3.20101123.snps_indels_sv.sites.vcf.gz\n\n```\n##fileformat=VCFv4.1\n##INFO=<ID=LDAF,Number=1,Type=Float,Description=\"MLE Allele Frequency Accounting for LD\">\n##INFO=<ID=AVGPOST,Number=1,Type=Float,Description=\"Average posterior probability from MaCH/Thunder\">\n##INFO=<ID=RSQ,Number=1,Type=Float,Description=\"Genotype imputation quality from MaCH/Thunder\">\n##INFO=<ID=ERATE,Number=1,Type=Float,Description=\"Per-marker Mutation rate from MaCH/Thunder\">\n##INFO=<ID=THETA,Number=1,Type=Float,Description=\"Per-marker Transition rate from MaCH/Thunder\">\n##INFO=<ID=CIEND,Number=2,Type=Integer,Description=\"Confidence interval around END for imprecise variants\">\n##INFO=<ID=CIPOS,Number=2,Type=Integer,Description=\"Confidence interval around POS for imprecise variants\">\n##INFO=<ID=END,Number=1,Type=Integer,Description=\"End position of the variant described in this record\">\n##INFO=<ID=HOMLEN,Number=.,Type=Integer,Description=\"Length of base pair identical micro-homology at event breakpoints\">\n##INFO=<ID=HOMSEQ,Number=.,Type=String,Description=\"Sequence of base pair identical micro-homology at event breakpoints\">\n##INFO=<ID=SVLEN,Number=1,Type=Integer,Description=\"Difference in length between REF and ALT alleles\">\n##INFO=<ID=SVTYPE,Number=1,Type=String,Description=\"Type of structural variant\">\n##INFO=<ID=AC,Number=.,Type=Integer,Description=\"Alternate Allele Count\">\n##INFO=<ID=AN,Number=1,Type=Integer,Description=\"Total Allele Count\">\n##ALT=<ID=DEL,Description=\"Deletion\">\n##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n##FORMAT=<ID=DS,Number=1,Type=Float,Description=\"Genotype dosage from MaCH/Thunder\">\n##FORMAT=<ID=GL,Number=.,Type=Float,Description=\"Genotype Likelihoods\">\n##INFO=<ID=AA,Number=1,Type=String,Description=\"Ancestral Allele, ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/pilot_data/technical/reference/ancestral_alignments/README\">\n##INFO=<ID=AF,Number=1,Type=Float,Description=\"Global Allele Frequency based on AC/AN\">\n##INFO=<ID=AMR_AF,Number=1,Type=Float,Description=\"Allele Frequency for samples from AMR based on AC/AN\">\n##INFO=<ID=ASN_AF,Number=1,Type=Float,Description=\"Allele Frequency for samples from ASN based on AC/AN\">\n##INFO=<ID=AFR_AF,Number=1,Type=Float,Description=\"Allele Frequency for samples from AFR based on AC/AN\">\n##INFO=<ID=EUR_AF,Number=1,Type=Float,Description=\"Allele Frequency for samples from EUR based on AC/AN\">\n##INFO=<ID=VT,Number=1,Type=String,Description=\"indicates what type of variant the line represents\">\n##INFO=<ID=SNPSOURCE,Number=.,Type=String,Description=\"indicates if a snp was called when analysing the low coverage or exome alignment data\">\n##reference=GRCh37\n#CHROM  POS ID  REF ALT QUAL    FILTER  INFO\n1   10583   rs58108140  G   A   100 PASS    AVGPOST=0.7707;RSQ=0.4319;LDAF=0.2327;ERATE=0.0161;AN=2184;VT=SNP;AA=.;THETA=0.0046;AC=314;SNPSOURCE=LOWCOV;AF=0.14;ASN_AF=0.13;AMR_AF=0.17;AFR_AF=0.04;EUR_AF=0.21\n1   10611   rs189107123 C   G   100 PASS    AN=2184;THETA=0.0077;VT=SNP;AA=.;AC=41;ERATE=0.0048;SNPSOURCE=LOWCOV;AVGPOST=0.9330;LDAF=0.0479;RSQ=0.3475;AF=0.02;ASN_AF=0.01;AMR_AF=0.03;AFR_AF=0.01;EUR_AF=0.02\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/103", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/103/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/103/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/103", "id": 13515908, "node_id": "MDU6SXNzdWUxMzUxNTkwOA==", "number": 103, "title": "Issues on using `fetch()`", "user": {"login": "ychen306", "id": 3420769, "node_id": "MDQ6VXNlcjM0MjA3Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/3420769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ychen306", "html_url": "https://github.com/ychen306", "followers_url": "https://api.github.com/users/ychen306/followers", "following_url": "https://api.github.com/users/ychen306/following{/other_user}", "gists_url": "https://api.github.com/users/ychen306/gists{/gist_id}", "starred_url": "https://api.github.com/users/ychen306/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ychen306/subscriptions", "organizations_url": "https://api.github.com/users/ychen306/orgs", "repos_url": "https://api.github.com/users/ychen306/repos", "events_url": "https://api.github.com/users/ychen306/events{/privacy}", "received_events_url": "https://api.github.com/users/ychen306/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-04-23T02:04:04Z", "updated_at": "2013-04-23T11:52:51Z", "closed_at": "2013-04-23T11:52:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi:\nI am having having some problem using the fetch() to access .vcf.tbi files. Whenever I try to open a file such as 'tb.vcf.gz.tbi' and read it with `vcf.Reader(filename='MYDIR/tb.vcf.gz.tbi')`, the error  'index `/MYDIR/tb.vcf.gz.tbi.tbi` is not found' is then shown... How can I fix this? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/100", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/100/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/100/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/100/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/100", "id": 11908158, "node_id": "MDU6SXNzdWUxMTkwODE1OA==", "number": 100, "title": "ID field in VCF file should be an array, not a string", "user": {"login": "laserson", "id": 118141, "node_id": "MDQ6VXNlcjExODE0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/118141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laserson", "html_url": "https://github.com/laserson", "followers_url": "https://api.github.com/users/laserson/followers", "following_url": "https://api.github.com/users/laserson/following{/other_user}", "gists_url": "https://api.github.com/users/laserson/gists{/gist_id}", "starred_url": "https://api.github.com/users/laserson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laserson/subscriptions", "organizations_url": "https://api.github.com/users/laserson/orgs", "repos_url": "https://api.github.com/users/laserson/repos", "events_url": "https://api.github.com/users/laserson/events{/privacy}", "received_events_url": "https://api.github.com/users/laserson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-03-12T03:10:20Z", "updated_at": "2015-01-15T13:52:23Z", "closed_at": "2015-01-15T13:52:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "The VCF spec states that the ID field should be a \"semi-colon separated list of unique identifiers\".\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/99", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/99/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/99/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/99", "id": 11891937, "node_id": "MDU6SXNzdWUxMTg5MTkzNw==", "number": 99, "title": "Using PyVCF with Hadoop Streaming: separate header from the data parsing", "user": {"login": "laserson", "id": 118141, "node_id": "MDQ6VXNlcjExODE0MQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/118141?v=4", "gravatar_id": "", "url": "https://api.github.com/users/laserson", "html_url": "https://github.com/laserson", "followers_url": "https://api.github.com/users/laserson/followers", "following_url": "https://api.github.com/users/laserson/following{/other_user}", "gists_url": "https://api.github.com/users/laserson/gists{/gist_id}", "starred_url": "https://api.github.com/users/laserson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/laserson/subscriptions", "organizations_url": "https://api.github.com/users/laserson/orgs", "repos_url": "https://api.github.com/users/laserson/repos", "events_url": "https://api.github.com/users/laserson/events{/privacy}", "received_events_url": "https://api.github.com/users/laserson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-03-11T18:56:17Z", "updated_at": "2013-03-12T06:31:30Z", "closed_at": "2013-03-12T06:31:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to use PyVCF with Hadoop Streaming.  This means that I may start consuming lines from anywhere in the VCF file.  However, I can get access to the VCF header by reading it first.\n\nWould this be the correct way to initialize the Reader object with one file and consume VCF lines from another?\n\n``` python\n# get VCF filename\ninput_file = os.environ['map_input_file']\n\n# initialize Reader object with VCF file.  The data is being read from stdout of\n# a subprocess that dumps the VCF file\np = subprocess.Popen(\"hadoop fs -cat %s\" % input_file, shell=True, stdout=subprocess.PIPE)\nvcf_reader = vcf.Reader(fsock=p.stdout, strict_whitespace=True)\np.kill()\n\n# the actual data I want to parse comes in on stdin, so point the parser there\nvcf_reader._reader = sys.stdin\nvcf_reader.reader = (line.strip() for line in vcf_reader._reader if line.strip())\n\n# iterate through VCF records\nfor record in vcf_reader:\n    print record\n```\n\nAre there any other things I need to deal with when I change the input source?\n\nThanks!\nUri\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/98", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/98/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/98/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/98", "id": 11469042, "node_id": "MDU6SXNzdWUxMTQ2OTA0Mg==", "number": 98, "title": "accessing remote vcf files with tabix", "user": {"login": "aihardin", "id": 716867, "node_id": "MDQ6VXNlcjcxNjg2Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/716867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aihardin", "html_url": "https://github.com/aihardin", "followers_url": "https://api.github.com/users/aihardin/followers", "following_url": "https://api.github.com/users/aihardin/following{/other_user}", "gists_url": "https://api.github.com/users/aihardin/gists{/gist_id}", "starred_url": "https://api.github.com/users/aihardin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aihardin/subscriptions", "organizations_url": "https://api.github.com/users/aihardin/orgs", "repos_url": "https://api.github.com/users/aihardin/repos", "events_url": "https://api.github.com/users/aihardin/events{/privacy}", "received_events_url": "https://api.github.com/users/aihardin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-02-27T18:52:12Z", "updated_at": "2013-07-15T06:49:26Z", "closed_at": "2013-07-15T06:49:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to use pyvcf to access a remote vcf file?  I tried vcf.Reader(filename='http://foo/bar.vcf.gz') but it complained.\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/96", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/96/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/96/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/96", "id": 11389313, "node_id": "MDU6SXNzdWUxMTM4OTMxMw==", "number": 96, "title": "Improve performance of parse of INFO field", "user": {"login": "bruth", "id": 515142, "node_id": "MDQ6VXNlcjUxNTE0Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/515142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bruth", "html_url": "https://github.com/bruth", "followers_url": "https://api.github.com/users/bruth/followers", "following_url": "https://api.github.com/users/bruth/following{/other_user}", "gists_url": "https://api.github.com/users/bruth/gists{/gist_id}", "starred_url": "https://api.github.com/users/bruth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bruth/subscriptions", "organizations_url": "https://api.github.com/users/bruth/orgs", "repos_url": "https://api.github.com/users/bruth/repos", "events_url": "https://api.github.com/users/bruth/events{/privacy}", "received_events_url": "https://api.github.com/users/bruth/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2013-02-26T01:24:12Z", "updated_at": "2013-11-19T15:52:40Z", "closed_at": "2013-11-19T15:52:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am working with VCF files with 1.5+ million records. A quick benchmark:\n\nStats\n- Mac OS X 10.8.2\n- 2.5 GHz i5\n- Python 2.7.2\n- PyVCF 0.6.3 + built Cython extensions\n\n``` python\n# Baseline iteration\nwith open('/path/to/file.vcf') as source:\n    for line in source:\n        pass\n\n# Iteration with PyVCF\nwith open('/path/to/file.vcf') as source:\n    reader = vcf.Reader(source)\n    for line in reader:\n        pass\n```\n\nFile size: 610 MB\nVariant count: 1,794,055\n\nIteration over flat file (no parsing)\n\nTime: ~80 seconds\nMemory: 0\n\nIteration over VCF parsed file using PyVCF\n\nTime: **~41 minutes** (extrapolated)\nMemory: 246 KB\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/95", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/95/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/95/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/95", "id": 11367122, "node_id": "MDU6SXNzdWUxMTM2NzEyMg==", "number": 95, "title": "VCF files without FORMAT/genotype fields", "user": {"login": "freeseek", "id": 1829330, "node_id": "MDQ6VXNlcjE4MjkzMzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1829330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freeseek", "html_url": "https://github.com/freeseek", "followers_url": "https://api.github.com/users/freeseek/followers", "following_url": "https://api.github.com/users/freeseek/following{/other_user}", "gists_url": "https://api.github.com/users/freeseek/gists{/gist_id}", "starred_url": "https://api.github.com/users/freeseek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freeseek/subscriptions", "organizations_url": "https://api.github.com/users/freeseek/orgs", "repos_url": "https://api.github.com/users/freeseek/repos", "events_url": "https://api.github.com/users/freeseek/events{/privacy}", "received_events_url": "https://api.github.com/users/freeseek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-02-25T16:46:12Z", "updated_at": "2013-03-04T13:58:16Z", "closed_at": "2013-03-04T13:58:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "It is allowed to have VCF files without the FORMAT field and without genotype fields. However, there is no way to generate files like this. There are two issues:\n1) The function vcf.Writer(stream, template) writes the FORMAT field regardless of this being present in the template or not. (minor problem)\n2) The write_record(record) function will append a \"\\t\" at the end of the line even if the FORMAT field is empty. (major problem)\nFor now, I have used the trick of passing the output to \"cut -f1-8\" to remove the undesired empty FORMAT field, so that I can use the output with GATK. But an option to produce VCF files without genotype records would be greatly appreciated.\nAn example of such VCF files can be found here:\n1) ftp://ftp.ncbi.nlm.nih.gov/1000genomes/ftp/phase1/analysis_results/integrated_call_sets/ALL.wgs.integrated_phase1_v3.20101123.snps_indels_sv.sites.vcf.gz\n2) http://evs.gs.washington.edu/evs_bulk_data/ESP6500SI.snps_indels.vcf.tar.gz\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/92", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/92/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/92/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/92", "id": 10645850, "node_id": "MDU6SXNzdWUxMDY0NTg1MA==", "number": 92, "title": "Error parsing Exome Sequencing Project (ESP) VCF using vcf_melt", "user": {"login": "cboustred", "id": 3475795, "node_id": "MDQ6VXNlcjM0NzU3OTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3475795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cboustred", "html_url": "https://github.com/cboustred", "followers_url": "https://api.github.com/users/cboustred/followers", "following_url": "https://api.github.com/users/cboustred/following{/other_user}", "gists_url": "https://api.github.com/users/cboustred/gists{/gist_id}", "starred_url": "https://api.github.com/users/cboustred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cboustred/subscriptions", "organizations_url": "https://api.github.com/users/cboustred/orgs", "repos_url": "https://api.github.com/users/cboustred/repos", "events_url": "https://api.github.com/users/cboustred/events{/privacy}", "received_events_url": "https://api.github.com/users/cboustred/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-02-05T11:11:02Z", "updated_at": "2013-12-03T16:10:31Z", "closed_at": "2013-12-03T16:10:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi James,\n\nI believe I'm using the latest PyVCF version (PyVCF-0.6.3)\n\nI'd like to flatten the ESP VCFs into tab delimited files. The VCFs can be downloaded from here (http://evs.gs.washington.edu/evs_bulk_data/ESP6500SI.snps_indels.vcf.tar.gz)\n\nI have unzipped them and tried running\n\nvcf_melt ESP6500SI.chr1.snps_indels.vcf\n\nAnd get the following output\n\nSAMPLE  FILTER  CHROM   POS REF ALT ID  info.DBSNP  info.EA_AC  info.AA_AC  info.TAC    info.MAF    info.GTS    info.EA_GTC info.AA_GTC info.GTC    info.DP info.FG info.GM info.AA info.AAC    info.PP info.CDP    info.PH info.CP info.CG info.GL info.GS info.CA info.EXOME_CHIP info.GWAS_PUBMED\nTraceback (most recent call last):\n  File \"./vcf_melt\", line 40, in <module>\n    for sample in record.samples:\nTypeError: 'NoneType' object is not iterable\n\nAny advice on how I can fix this would be much appreciated\n\nThanks\n\nChris\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/91", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/91/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/91/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/91", "id": 10619963, "node_id": "MDU6SXNzdWUxMDYxOTk2Mw==", "number": 91, "title": "Error in reading vcf file ", "user": {"login": "janedanes", "id": 3474321, "node_id": "MDQ6VXNlcjM0NzQzMjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/3474321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janedanes", "html_url": "https://github.com/janedanes", "followers_url": "https://api.github.com/users/janedanes/followers", "following_url": "https://api.github.com/users/janedanes/following{/other_user}", "gists_url": "https://api.github.com/users/janedanes/gists{/gist_id}", "starred_url": "https://api.github.com/users/janedanes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janedanes/subscriptions", "organizations_url": "https://api.github.com/users/janedanes/orgs", "repos_url": "https://api.github.com/users/janedanes/repos", "events_url": "https://api.github.com/users/janedanes/events{/privacy}", "received_events_url": "https://api.github.com/users/janedanes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2013-02-04T18:43:22Z", "updated_at": "2014-04-03T15:54:33Z", "closed_at": "2013-02-15T11:35:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm a newbie to python and am having trouble understanding why I can't parse my vcf file.  Any help would greatly be appreciated!!  Thanks so much.\n\nfor record in vcf.Reader(open('all.mergedSNPs.vcf', 'r')):\n    print record\n\nHere is the output:\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Library/Python/2.7/site-packages/PyVCF-0.6.0-py2.7-macosx-10.7-intel.egg/vcf/parser.py\", line 216, in **init**\n    self._parse_metainfo()\n  File \"/Library/Python/2.7/site-packages/PyVCF-0.6.0-py2.7-macosx-10.7-intel.egg/vcf/parser.py\", line 254, in _parse_metainfo\n    key, val = parser.read_meta(line.strip())\n  File \"/Library/Python/2.7/site-packages/PyVCF-0.6.0-py2.7-macosx-10.7-intel.egg/vcf/parser.py\", line 166, in read_meta\n    return self.read_meta_hash(meta_string)\n  File \"/Library/Python/2.7/site-packages/PyVCF-0.6.0-py2.7-macosx-10.7-intel.egg/vcf/parser.py\", line 161, in read_meta_hash\n    val = dict(item.split(\"=\") for item in hashItems)\nValueError: dictionary update sequence element #4 has length 1; 2 is required\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/85", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/85/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/85/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/85", "id": 10015174, "node_id": "MDU6SXNzdWUxMDAxNTE3NA==", "number": 85, "title": "Fix travis build", "user": {"login": "jamescasbon", "id": 97495, "node_id": "MDQ6VXNlcjk3NDk1", "avatar_url": "https://avatars3.githubusercontent.com/u/97495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamescasbon", "html_url": "https://github.com/jamescasbon", "followers_url": "https://api.github.com/users/jamescasbon/followers", "following_url": "https://api.github.com/users/jamescasbon/following{/other_user}", "gists_url": "https://api.github.com/users/jamescasbon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamescasbon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamescasbon/subscriptions", "organizations_url": "https://api.github.com/users/jamescasbon/orgs", "repos_url": "https://api.github.com/users/jamescasbon/repos", "events_url": "https://api.github.com/users/jamescasbon/events{/privacy}", "received_events_url": "https://api.github.com/users/jamescasbon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-01-16T11:44:21Z", "updated_at": "2013-03-17T15:39:38Z", "closed_at": "2013-03-17T15:39:38Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/83", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/83/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/83/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/83", "id": 9827465, "node_id": "MDU6SXNzdWU5ODI3NDY1", "number": 83, "title": "vcf_filter converts reference, sample, and vcfProcessLog fields incorrectly", "user": {"login": "cbare", "id": 170360, "node_id": "MDQ6VXNlcjE3MDM2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/170360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbare", "html_url": "https://github.com/cbare", "followers_url": "https://api.github.com/users/cbare/followers", "following_url": "https://api.github.com/users/cbare/following{/other_user}", "gists_url": "https://api.github.com/users/cbare/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbare/subscriptions", "organizations_url": "https://api.github.com/users/cbare/orgs", "repos_url": "https://api.github.com/users/cbare/repos", "events_url": "https://api.github.com/users/cbare/events{/privacy}", "received_events_url": "https://api.github.com/users/cbare/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2013-01-10T00:45:47Z", "updated_at": "2013-01-14T12:25:11Z", "closed_at": "2013-01-14T12:25:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "When vcf_filter writes the filtered VCF file, it seems to use python style serialization on some of the header fields, rather than the proper VCF style. For example, a ##reference field looked like this in the original file:\n\n```\n##reference=<ID=\"hg36.1 m5:9ebc6df9496613f373e73396d5b3b6b6 sp:homo sapiens\",source=\"http://www.hgsc.bcm.tmc.edu/collaborations/human-reference/hsap36.1-hg18.fasta\">\n```\n\n...ends up looking like this in the output:\n\n```\n##reference={'source': '\"http://www.hgsc.bcm.tmc.edu/collaborations/human-reference/hsap36.1-hg18.fasta\"', 'ID': '\"hg36.1 m5:9ebc6df9496613f373e73396d5b3b6b6 sp:homo sapiens\"'}\n```\n## SAMPLE is similarly affected, as well as the fields ##vcfProcessLog which gets added.\n\nFor reference, the command line I used to call vcf_filter was:\n\n```\nvcf_filter.py examples/example1.vcf dps --depth-per-sample 7 > tmp.vcf\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/78", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/78/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/78/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/78", "id": 8431343, "node_id": "MDU6SXNzdWU4NDMxMzQz", "number": 78, "title": "Error in reading VCF", "user": {"login": "dawe", "id": 121868, "node_id": "MDQ6VXNlcjEyMTg2OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/121868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dawe", "html_url": "https://github.com/dawe", "followers_url": "https://api.github.com/users/dawe/followers", "following_url": "https://api.github.com/users/dawe/following{/other_user}", "gists_url": "https://api.github.com/users/dawe/gists{/gist_id}", "starred_url": "https://api.github.com/users/dawe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dawe/subscriptions", "organizations_url": "https://api.github.com/users/dawe/orgs", "repos_url": "https://api.github.com/users/dawe/repos", "events_url": "https://api.github.com/users/dawe/events{/privacy}", "received_events_url": "https://api.github.com/users/dawe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-11-16T20:44:43Z", "updated_at": "2014-06-12T16:11:36Z", "closed_at": "2012-12-06T13:42:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to parse a VCF (generated by GATK and modified with snpEff and SnpSift). Unfortunately I'm not able to read any record because an unhandled exception:\n\n```\nIn [29]: a = vcf.Reader(open(\"/Users/dawe/Downloads/Tier2.vcf\", 'r'))\n\nIn [30]: for rec in a: print rec\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-30-e05998bcc130> in <module>()\n----> 1 for rec in a: print rec\n\n/Library/Python/2.7/site-packages/PyVCF-0.6.0-py2.7-macosx-10.8-intel.egg/vcf/parser.pyc in next(self)\n    462         if filt == 'PASS':\n    463             filt = None\n--> 464         info = self._parse_info(row[7])\n    465 \n    466         try:\n\n/Library/Python/2.7/site-packages/PyVCF-0.6.0-py2.7-macosx-10.8-intel.egg/vcf/parser.pyc in _parse_info(self, info_str)\n    312             try:\n    313                 if self.infos[ID].num == 1 and entry_type != 'String':\n--> 314                     val = val[0]\n    315             except KeyError:\n    316                 pass\n\nTypeError: 'bool' object is not subscriptable\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/75", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/75/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/75/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/75", "id": 7607852, "node_id": "MDU6SXNzdWU3NjA3ODUy", "number": 75, "title": "Have vcf_melt ignore missing FORMAT fields", "user": {"login": "seandavi", "id": 92435, "node_id": "MDQ6VXNlcjkyNDM1", "avatar_url": "https://avatars1.githubusercontent.com/u/92435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seandavi", "html_url": "https://github.com/seandavi", "followers_url": "https://api.github.com/users/seandavi/followers", "following_url": "https://api.github.com/users/seandavi/following{/other_user}", "gists_url": "https://api.github.com/users/seandavi/gists{/gist_id}", "starred_url": "https://api.github.com/users/seandavi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seandavi/subscriptions", "organizations_url": "https://api.github.com/users/seandavi/orgs", "repos_url": "https://api.github.com/users/seandavi/repos", "events_url": "https://api.github.com/users/seandavi/events{/privacy}", "received_events_url": "https://api.github.com/users/seandavi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-10-15T22:19:42Z", "updated_at": "2012-10-26T12:28:37Z", "closed_at": "2012-10-26T12:28:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Changing getattr(sample.data,x) to getattr(sample.data,x,None) is useful to allow FORMAT fields in the header that are not present in the actual CallData.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/74", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/74/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/74/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/74", "id": 7092235, "node_id": "MDU6SXNzdWU3MDkyMjM1", "number": 74, "title": "contig header lines are malformed and breaks GATK VariantAnnotator", "user": {"login": "ian1roberts", "id": 1122621, "node_id": "MDQ6VXNlcjExMjI2MjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/1122621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ian1roberts", "html_url": "https://github.com/ian1roberts", "followers_url": "https://api.github.com/users/ian1roberts/followers", "following_url": "https://api.github.com/users/ian1roberts/following{/other_user}", "gists_url": "https://api.github.com/users/ian1roberts/gists{/gist_id}", "starred_url": "https://api.github.com/users/ian1roberts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ian1roberts/subscriptions", "organizations_url": "https://api.github.com/users/ian1roberts/orgs", "repos_url": "https://api.github.com/users/ian1roberts/repos", "events_url": "https://api.github.com/users/ian1roberts/events{/privacy}", "received_events_url": "https://api.github.com/users/ian1roberts/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-09-24T13:57:05Z", "updated_at": "2013-01-02T11:14:38Z", "closed_at": "2013-01-02T11:14:38Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Apologies if this issue has already been dealt with in a more recent version ...\n\nWhen trying to add effects generating by snpEff to PyVCF filtered file using GATK VariantAnnotator receive following error\n\n```\n##### ERROR ------------------------------------------------------------------------------------------\n##### ERROR A GATK RUNTIME ERROR has occurred (version 1.6-13-g91f02df):\n##### ERROR\n##### ERROR Please visit the wiki to see if this is a known problem\n##### ERROR If not, please post the error, with stack trace, to the GATK forum\n##### ERROR Visit our wiki for extensive documentation http://www.broadinstitute.org/gsa/wiki\n##### ERROR Visit our forum to view answers to commonly asked questions http://getsatisfaction.com/gsa\n##### ERROR\n##### ERROR MESSAGE: Invalid VCFSimpleHeaderLine: key=contig name=null\n##### ERROR ------------------------------------------------------------------------------------------\n```\n\nIt appears to be the result of improperly written contig header lines\n\nPyVCF writes as a dictionary\n\n```\n (amp)[ir210@beast vars]$ grep 'contig' gatk_run2_vars.vcf\n##contig={'length': '249250621', 'assembly': 'hg19', 'ID': 'chr1'}\n##contig={'length': '135534747', 'assembly': 'hg19', 'ID': 'chr10'}\n##contig={'length': '135006516', 'assembly': 'hg19', 'ID': 'chr11'}\n```\n\nbut they should take the following form :\n\n```\n(amp)[ir210@beast vars]$ grep 'contig' gatk_t1-t2_raw.vcf\n##contig=<ID=chr1,length=249250621,assembly=hg19>\n##contig=<ID=chr10,length=135534747,assembly=hg19>\n##contig=<ID=chr11,length=135006516,assembly=hg19>\n##contig=<ID=chr11_gl000202_random,length=40103,assembly=hg19>\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/71", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/71/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/71/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/71", "id": 6641872, "node_id": "MDU6SXNzdWU2NjQxODcy", "number": 71, "title": "Problem reading vcf file.", "user": {"login": "CanadianGPD", "id": 2279570, "node_id": "MDQ6VXNlcjIyNzk1NzA=", "avatar_url": "https://avatars2.githubusercontent.com/u/2279570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CanadianGPD", "html_url": "https://github.com/CanadianGPD", "followers_url": "https://api.github.com/users/CanadianGPD/followers", "following_url": "https://api.github.com/users/CanadianGPD/following{/other_user}", "gists_url": "https://api.github.com/users/CanadianGPD/gists{/gist_id}", "starred_url": "https://api.github.com/users/CanadianGPD/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CanadianGPD/subscriptions", "organizations_url": "https://api.github.com/users/CanadianGPD/orgs", "repos_url": "https://api.github.com/users/CanadianGPD/repos", "events_url": "https://api.github.com/users/CanadianGPD/events{/privacy}", "received_events_url": "https://api.github.com/users/CanadianGPD/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-09-04T18:13:23Z", "updated_at": "2020-03-19T15:44:40Z", "closed_at": "2012-12-05T16:47:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \n\nI'm having trouble reading my vcf file with PyVCF.    Any help would be useful the file I'm trying to read was created by vcf tools.\n\nHere is the code:\n\nimport vcf\nvcf_reader = vcf.Reader(open('all.mergedSNPs.vcf','r'))\nfor rec in vcf_reader:\n    print rec\n\nBut I get this error\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Library/Python/2.7/site-packages/PyVCF-0.6.0-py2.7-macosx-10.7-intel.egg/vcf/parser.py\", line 443, in next\n    pos = int(row[1])\nIndexError: list index out of range\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/68", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/68/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/68/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/68", "id": 6255605, "node_id": "MDU6SXNzdWU2MjU1NjA1", "number": 68, "title": "vcf.Writer outputs mangled vcf header", "user": {"login": "cooketho", "id": 2160312, "node_id": "MDQ6VXNlcjIxNjAzMTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/2160312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooketho", "html_url": "https://github.com/cooketho", "followers_url": "https://api.github.com/users/cooketho/followers", "following_url": "https://api.github.com/users/cooketho/following{/other_user}", "gists_url": "https://api.github.com/users/cooketho/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooketho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooketho/subscriptions", "organizations_url": "https://api.github.com/users/cooketho/orgs", "repos_url": "https://api.github.com/users/cooketho/repos", "events_url": "https://api.github.com/users/cooketho/events{/privacy}", "received_events_url": "https://api.github.com/users/cooketho/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-08-16T01:59:19Z", "updated_at": "2012-08-22T14:19:31Z", "closed_at": "2012-08-22T14:19:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try out the following code the order of the lines in the original vcf file header is scrambled. The biggest problem with this is that the ##fileformat=VCFv4.1 line gets moved someplace else, and so GATK doesn't automatically recognize the file as a vcf. There may be a workaround by passing an option to GATK specifying the format, but really this is a problem with pyvcf, not GATK. Please update the next version so that the organization of the header is kept intact in the output vcf.\n\nPython code:\n\"\nimport vcf\nreader=vcf.Reader(filename='test.vcf')\nwriter=vcf.Writer(open('test.out.vcf', 'w'), reader)\nfor record in reader:\n    writer.write_record(record)\n\"\n\ninput vcf:\n\"\n## fileformat=VCFv4.1\n## INFO=<ID=LDAF,Number=1,Type=Float,Description=\"MLE Allele Frequency Accounting for LD\">\n## INFO=<ID=AVGPOST,Number=1,Type=Float,Description=\"Average posterior probability from MaCH/Thunder\">\n## INFO=<ID=RSQ,Number=1,Type=Float,Description=\"Genotype imputation quality from MaCH/Thunder\">\n## INFO=<ID=ERATE,Number=1,Type=Float,Description=\"Per-marker Mutation rate from MaCH/Thunder\">\n## INFO=<ID=THETA,Number=1,Type=Float,Description=\"Per-marker Transition rate from MaCH/Thunder\">\n## INFO=<ID=CIEND,Number=2,Type=Integer,Description=\"Confidence interval around END for imprecise variants\">\n## INFO=<ID=CIPOS,Number=2,Type=Integer,Description=\"Confidence interval around POS for imprecise variants\">\n## INFO=<ID=END,Number=1,Type=Integer,Description=\"End position of the variant described in this record\">\n## INFO=<ID=HOMLEN,Number=.,Type=Integer,Description=\"Length of base pair identical micro-homology at event breakpoints\">\n## INFO=<ID=HOMSEQ,Number=.,Type=String,Description=\"Sequence of base pair identical micro-homology at event breakpoints\">\n## INFO=<ID=SVLEN,Number=1,Type=Integer,Description=\"Difference in length between REF and ALT alleles\">\n## INFO=<ID=SVTYPE,Number=1,Type=String,Description=\"Type of structural variant\">\n## INFO=<ID=AC,Number=.,Type=Integer,Description=\"Alternate Allele Count\">\n## INFO=<ID=AN,Number=1,Type=Integer,Description=\"Total Allele Count\">\n## ALT=<ID=DEL,Description=\"Deletion\">\n## FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n## FORMAT=<ID=DS,Number=1,Type=Float,Description=\"Genotype dosage from MaCH/Thunder\">\n## FORMAT=<ID=GL,Number=.,Type=Float,Description=\"Genotype Likelihoods\">\n## INFO=<ID=AA,Number=1,Type=String,Description=\"Ancestral Allele, ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/pilot_data/technical/reference/ancestral_alignments/README\">\n## INFO=<ID=AF,Number=1,Type=Float,Description=\"Global Allele Frequency based on AC/AN\">\n## INFO=<ID=AMR_AF,Number=1,Type=Float,Description=\"Allele Frequency for samples from AMR based on AC/AN\">\n## INFO=<ID=ASN_AF,Number=1,Type=Float,Description=\"Allele Frequency for samples from ASN based on AC/AN\">\n## INFO=<ID=AFR_AF,Number=1,Type=Float,Description=\"Allele Frequency for samples from AFR based on AC/AN\">\n## INFO=<ID=EUR_AF,Number=1,Type=Float,Description=\"Allele Frequency for samples from EUR based on AC/AN\">\n## INFO=<ID=VT,Number=1,Type=String,Description=\"indicates what type of variant the line represents\">\n## INFO=<ID=SNPSOURCE,Number=.,Type=String,Description=\"indicates if a snp was called when analysing the low coverage or exome alignment data\">\n## source_20120714.1=vcf-subset(r731) -c NA18505,NA18508,NA19648,NA19704, downloads/ALL.chr1.phase1_release_v3.20101123.snps_indels_svs.genotypes.vcf.gz\n# CHROM  POS     ID      REF     ALT     QUAL    FILTER  INFO    FORMAT  NA18505 NA18508 NA19648 NA19704\n\n1       10583   rs58108140      G       A       100     PASS    AA=.;AC=0;AF=0.14;AFR_AF=0.04;AMR_AF=0.17;AN=8;ASN_AF=0.13;AVGPOST=0.7707;ERATE=0.0161;EUR_AF=0.21;LDAF=0.2327;RSQ=0.4319;SNPSOURCE=LOWCOV;THETA=0.0046;VT=SNP  GT:DS:GL        0|0:0.000:-0.07,-0.80,-5.00     0|0:0.000:-0.01,-1.68,-5.00     0|0:0.100:-0.03,-1.15,-5.00     0|0:0.150:-0.19,-0.45,-2.42\n\"\n\noutput vcf:\n\"\n## ALT=<ID=DEL,Description=\"Deletion\">\n## fileformat=VCFv4.1\n## source_20120714.1=vcf-subset(r731) -c NA18505,NA18508,NA19648,NA19704, downloads/ALL.chr1.phase1_release_v3.20101123.snps_indels_svs.genotypes.vcf.gz\n## INFO=<ID=ERATE,Number=1,Type=Float,Description=\"Per-marker Mutation rate from MaCH/Thunder\">\n## INFO=<ID=AFR_AF,Number=1,Type=Float,Description=\"Allele Frequency for samples from AFR based on AC/AN\">\n## INFO=<ID=CIEND,Number=2,Type=Integer,Description=\"Confidence interval around END for imprecise variants\">\n## INFO=<ID=SNPSOURCE,Number=.,Type=String,Description=\"indicates if a snp was called when analysing the low coverage or exome alignment data\">\n## INFO=<ID=SVLEN,Number=1,Type=Integer,Description=\"Difference in length between REF and ALT alleles\">\n## INFO=<ID=AVGPOST,Number=1,Type=Float,Description=\"Average posterior probability from MaCH/Thunder\">\n## INFO=<ID=HOMSEQ,Number=.,Type=String,Description=\"Sequence of base pair identical micro-homology at event breakpoints\">\n## INFO=<ID=AA,Number=1,Type=String,Description=\"Ancestral Allele, ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/pilot_data/technical/reference/ancestral_alignments/README\">\n## INFO=<ID=AC,Number=.,Type=Integer,Description=\"Alternate Allele Count\">\n## INFO=<ID=END,Number=1,Type=Integer,Description=\"End position of the variant described in this record\">\n## INFO=<ID=AF,Number=1,Type=Float,Description=\"Global Allele Frequency based on AC/AN\">\n## INFO=<ID=ASN_AF,Number=1,Type=Float,Description=\"Allele Frequency for samples from ASN based on AC/AN\">\n## INFO=<ID=AN,Number=1,Type=Integer,Description=\"Total Allele Count\">\n## INFO=<ID=VT,Number=1,Type=String,Description=\"indicates what type of variant the line represents\">\n## INFO=<ID=THETA,Number=1,Type=Float,Description=\"Per-marker Transition rate from MaCH/Thunder\">\n## INFO=<ID=EUR_AF,Number=1,Type=Float,Description=\"Allele Frequency for samples from EUR based on AC/AN\">\n## INFO=<ID=LDAF,Number=1,Type=Float,Description=\"MLE Allele Frequency Accounting for LD\">\n## INFO=<ID=HOMLEN,Number=.,Type=Integer,Description=\"Length of base pair identical micro-homology at event breakpoints\">\n## INFO=<ID=CIPOS,Number=2,Type=Integer,Description=\"Confidence interval around POS for imprecise variants\">\n## INFO=<ID=AMR_AF,Number=1,Type=Float,Description=\"Allele Frequency for samples from AMR based on AC/AN\">\n## INFO=<ID=SVTYPE,Number=1,Type=String,Description=\"Type of structural variant\">\n## INFO=<ID=RSQ,Number=1,Type=Float,Description=\"Genotype imputation quality from MaCH/Thunder\">\n## FORMAT=<ID=GL,Number=.,Type=Float,Description=\"Genotype Likelihoods\">\n## FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n## FORMAT=<ID=DS,Number=1,Type=Float,Description=\"Genotype dosage from MaCH/Thunder\">\n# CHROM  POS     ID      REF     ALT     QUAL    FILTER  INFO    FORMAT  NA18505 NA18508 NA19648 NA19704\n\n1       10583   rs58108140      G       A       100     .       AA=.;AVGPOST=0.7707;AC=0;AF=0.14;ASN_AF=0.13;AFR_AF=0.04;AMR_AF=0.17;ERATE=0.0161;AN=8;LDAF=0.2327;VT=S;SNPSOURCE=LOWCOV;THETA=0.0046;RSQ=0.4319;EUR_AF=0.21    GT:DS:GL        0|0:0.000:-0.07,-0.8,-5.0       0|0:0.000:-0.01,-1.68,-5.0      0|0:0.100:-0.03,-1.15,-5.0      0|0:0.150:-0.19,-0.45,-2.42\n\"\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/67", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/67/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/67/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/67", "id": 5945524, "node_id": "MDU6SXNzdWU1OTQ1NTI0", "number": 67, "title": "Performance benchmarks", "user": {"login": "superbobry", "id": 185856, "node_id": "MDQ6VXNlcjE4NTg1Ng==", "avatar_url": "https://avatars1.githubusercontent.com/u/185856?v=4", "gravatar_id": "", "url": "https://api.github.com/users/superbobry", "html_url": "https://github.com/superbobry", "followers_url": "https://api.github.com/users/superbobry/followers", "following_url": "https://api.github.com/users/superbobry/following{/other_user}", "gists_url": "https://api.github.com/users/superbobry/gists{/gist_id}", "starred_url": "https://api.github.com/users/superbobry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/superbobry/subscriptions", "organizations_url": "https://api.github.com/users/superbobry/orgs", "repos_url": "https://api.github.com/users/superbobry/repos", "events_url": "https://api.github.com/users/superbobry/events{/privacy}", "received_events_url": "https://api.github.com/users/superbobry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-07-31T15:04:38Z", "updated_at": "2012-08-06T21:12:18Z", "closed_at": "2012-08-06T21:12:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does `PyVCF` have any? I'm trying to parse dbSNP release with the latest version and it basically takes forever. So having some kind of performance metric would be handy for further development.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/63", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/63/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/63/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/63", "id": 5319417, "node_id": "MDU6SXNzdWU1MzE5NDE3", "number": 63, "title": "Remove single ALT assumption ", "user": {"login": "jamescasbon", "id": 97495, "node_id": "MDQ6VXNlcjk3NDk1", "avatar_url": "https://avatars3.githubusercontent.com/u/97495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamescasbon", "html_url": "https://github.com/jamescasbon", "followers_url": "https://api.github.com/users/jamescasbon/followers", "following_url": "https://api.github.com/users/jamescasbon/following{/other_user}", "gists_url": "https://api.github.com/users/jamescasbon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamescasbon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamescasbon/subscriptions", "organizations_url": "https://api.github.com/users/jamescasbon/orgs", "repos_url": "https://api.github.com/users/jamescasbon/repos", "events_url": "https://api.github.com/users/jamescasbon/events{/privacy}", "received_events_url": "https://api.github.com/users/jamescasbon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-06-28T10:21:36Z", "updated_at": "2012-07-02T15:05:44Z", "closed_at": "2012-07-02T15:05:44Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Many methods use the gt_nums property, which is only defined for single ALT calls.  We should try and use other methods where possible, and not return incorrect data when there are multiple ALTs.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/62", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/62/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/62/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/62", "id": 5319237, "node_id": "MDU6SXNzdWU1MzE5MjM3", "number": 62, "title": "Implement _Call.called for samples without a GT", "user": {"login": "jamescasbon", "id": 97495, "node_id": "MDQ6VXNlcjk3NDk1", "avatar_url": "https://avatars3.githubusercontent.com/u/97495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamescasbon", "html_url": "https://github.com/jamescasbon", "followers_url": "https://api.github.com/users/jamescasbon/followers", "following_url": "https://api.github.com/users/jamescasbon/following{/other_user}", "gists_url": "https://api.github.com/users/jamescasbon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamescasbon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamescasbon/subscriptions", "organizations_url": "https://api.github.com/users/jamescasbon/orgs", "repos_url": "https://api.github.com/users/jamescasbon/repos", "events_url": "https://api.github.com/users/jamescasbon/events{/privacy}", "received_events_url": "https://api.github.com/users/jamescasbon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-06-28T10:06:47Z", "updated_at": "2012-07-02T15:17:17Z", "closed_at": "2012-07-02T15:17:17Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/60", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/60/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/60/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/60", "id": 5295943, "node_id": "MDU6SXNzdWU1Mjk1OTQz", "number": 60, "title": "Collect stats while parsing calls", "user": {"login": "jamescasbon", "id": 97495, "node_id": "MDQ6VXNlcjk3NDk1", "avatar_url": "https://avatars3.githubusercontent.com/u/97495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamescasbon", "html_url": "https://github.com/jamescasbon", "followers_url": "https://api.github.com/users/jamescasbon/followers", "following_url": "https://api.github.com/users/jamescasbon/following{/other_user}", "gists_url": "https://api.github.com/users/jamescasbon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamescasbon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamescasbon/subscriptions", "organizations_url": "https://api.github.com/users/jamescasbon/orgs", "repos_url": "https://api.github.com/users/jamescasbon/repos", "events_url": "https://api.github.com/users/jamescasbon/events{/privacy}", "received_events_url": "https://api.github.com/users/jamescasbon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-06-27T12:36:29Z", "updated_at": "2013-07-15T06:52:28Z", "closed_at": "2013-07-15T06:52:28Z", "author_association": "OWNER", "active_lock_reason": null, "body": "In the loop where we parse sample calls, collect aggregate numbers so that we do not need to iterate again to see, eg, call rate.\n\nAttach this to the _Record object.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/56", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/56/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/56/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/56", "id": 5267817, "node_id": "MDU6SXNzdWU1MjY3ODE3", "number": 56, "title": "Fix python 3 support", "user": {"login": "jamescasbon", "id": 97495, "node_id": "MDQ6VXNlcjk3NDk1", "avatar_url": "https://avatars3.githubusercontent.com/u/97495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamescasbon", "html_url": "https://github.com/jamescasbon", "followers_url": "https://api.github.com/users/jamescasbon/followers", "following_url": "https://api.github.com/users/jamescasbon/following{/other_user}", "gists_url": "https://api.github.com/users/jamescasbon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamescasbon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamescasbon/subscriptions", "organizations_url": "https://api.github.com/users/jamescasbon/orgs", "repos_url": "https://api.github.com/users/jamescasbon/repos", "events_url": "https://api.github.com/users/jamescasbon/events{/privacy}", "received_events_url": "https://api.github.com/users/jamescasbon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-06-26T09:05:50Z", "updated_at": "2012-06-27T08:21:08Z", "closed_at": "2012-06-27T08:21:08Z", "author_association": "OWNER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/52", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/52/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/52/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/52", "id": 5155396, "node_id": "MDU6SXNzdWU1MTU1Mzk2", "number": 52, "title": "Multiple metadata fields are overwritten", "user": {"login": "lennax", "id": 952658, "node_id": "MDQ6VXNlcjk1MjY1OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/952658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lennax", "html_url": "https://github.com/lennax", "followers_url": "https://api.github.com/users/lennax/followers", "following_url": "https://api.github.com/users/lennax/following{/other_user}", "gists_url": "https://api.github.com/users/lennax/gists{/gist_id}", "starred_url": "https://api.github.com/users/lennax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lennax/subscriptions", "organizations_url": "https://api.github.com/users/lennax/orgs", "repos_url": "https://api.github.com/users/lennax/repos", "events_url": "https://api.github.com/users/lennax/events{/privacy}", "received_events_url": "https://api.github.com/users/lennax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2012-06-19T20:28:46Z", "updated_at": "2012-06-25T16:01:25Z", "closed_at": "2012-06-25T16:01:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "If multiple metadata lines (other than info, format, or filter) have the same key, only one of them is stored. Example: ##contig lines in test/gatk.vcf\n\nThis is because they are stored in a dict. \n\nPython doesn't have an associative array without a unique constraint so I'm not sure what the best way around this would be. \n\nLenna\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/49", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/49/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/49/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/49", "id": 5084061, "node_id": "MDU6SXNzdWU1MDg0MDYx", "number": 49, "title": "Bug while reading 1000 genomes data", "user": {"login": "iminkin", "id": 1510845, "node_id": "MDQ6VXNlcjE1MTA4NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1510845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iminkin", "html_url": "https://github.com/iminkin", "followers_url": "https://api.github.com/users/iminkin/followers", "following_url": "https://api.github.com/users/iminkin/following{/other_user}", "gists_url": "https://api.github.com/users/iminkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/iminkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iminkin/subscriptions", "organizations_url": "https://api.github.com/users/iminkin/orgs", "repos_url": "https://api.github.com/users/iminkin/repos", "events_url": "https://api.github.com/users/iminkin/events{/privacy}", "received_events_url": "https://api.github.com/users/iminkin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2012-06-14T23:56:31Z", "updated_at": "2014-06-25T20:32:09Z", "closed_at": "2012-06-15T00:01:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that this lib fails to parse file:\nftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/release/20110521/ALL.wgs.phase1_release_v3.20101123.snps_indels_sv.sites.vcf.gz\n\nCode:\n\nimport vcf\nimport sys\n\nvcfReader = vcf.Reader(open(sys.argv[1]))\nfor record in vcfReader:\n    print record\n\nFails with:\n\nTraceback (most recent call last):\n  File \"C:\\Users\\HP\\My Documents\\Aptana Studio 3 Workspace\\ProcSNP\\CalcProb.py\", line 5, in <module>\n    for record in vcfReader:\n  File \"C:\\Program Files\\Python27\\lib\\site-packages\\vcf\\parser.py\", line 872, in next\n    info = self._parse_info(row[7])\n  File \"C:\\Program Files\\Python27\\lib\\site-packages\\vcf\\parser.py\", line 717, in _parse_info\n    val = entry[1]\nIndexError: list index out of range\n\nPython 2.7, Win 7 x64.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/47", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/47/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/47/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/47", "id": 5000740, "node_id": "MDU6SXNzdWU1MDAwNzQw", "number": 47, "title": "Drop pre-compute of bases and phase", "user": {"login": "jamescasbon", "id": 97495, "node_id": "MDQ6VXNlcjk3NDk1", "avatar_url": "https://avatars3.githubusercontent.com/u/97495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamescasbon", "html_url": "https://github.com/jamescasbon", "followers_url": "https://api.github.com/users/jamescasbon/followers", "following_url": "https://api.github.com/users/jamescasbon/following{/other_user}", "gists_url": "https://api.github.com/users/jamescasbon/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamescasbon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamescasbon/subscriptions", "organizations_url": "https://api.github.com/users/jamescasbon/orgs", "repos_url": "https://api.github.com/users/jamescasbon/repos", "events_url": "https://api.github.com/users/jamescasbon/events{/privacy}", "received_events_url": "https://api.github.com/users/jamescasbon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-06-11T10:38:08Z", "updated_at": "2012-06-12T10:55:20Z", "closed_at": "2012-06-12T08:52:34Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Please see branch 'performance'.\n\nI have made a number of tweaks which result in 37% faster parsing of the 1kg VCF (see vcf/test/prof.py).\n\nThe breaking change is that most of the time is spent precomputing these.  @arq5x this was your change, are you bothered if it goes?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/46", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/46/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/46/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/46", "id": 4995997, "node_id": "MDU6SXNzdWU0OTk1OTk3", "number": 46, "title": "Order of INFO fields random", "user": {"login": "freeseek", "id": 1829330, "node_id": "MDQ6VXNlcjE4MjkzMzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1829330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freeseek", "html_url": "https://github.com/freeseek", "followers_url": "https://api.github.com/users/freeseek/followers", "following_url": "https://api.github.com/users/freeseek/following{/other_user}", "gists_url": "https://api.github.com/users/freeseek/gists{/gist_id}", "starred_url": "https://api.github.com/users/freeseek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freeseek/subscriptions", "organizations_url": "https://api.github.com/users/freeseek/orgs", "repos_url": "https://api.github.com/users/freeseek/repos", "events_url": "https://api.github.com/users/freeseek/events{/privacy}", "received_events_url": "https://api.github.com/users/freeseek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-06-11T02:48:58Z", "updated_at": "2013-11-14T20:52:48Z", "closed_at": "2012-06-11T20:43:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am reporting something that is not properly an issue, but I realized that the order of the fields in the INFO column of the VCF file is kind of random. I am obtaining this result since I am using PyVCF to populate some new INFO fields in a given VCF file (PyVCF works great for this purpose) and I realize that these new INFO fields are inserted in random order. The UnifiedGenotyper from GATK seems instead to neatly outputting them in alphabetical order. I suggest two possible options:\n1) The order of the fields in the INFO column respect the order of the INFO fields in the header.\n2) The order of the fields, both in the header and the INFO column be alphabetically sorted.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/45", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/45/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/45/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/45", "id": 4976167, "node_id": "MDU6SXNzdWU0OTc2MTY3", "number": 45, "title": "Order of header lines messed up", "user": {"login": "freeseek", "id": 1829330, "node_id": "MDQ6VXNlcjE4MjkzMzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1829330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freeseek", "html_url": "https://github.com/freeseek", "followers_url": "https://api.github.com/users/freeseek/followers", "following_url": "https://api.github.com/users/freeseek/following{/other_user}", "gists_url": "https://api.github.com/users/freeseek/gists{/gist_id}", "starred_url": "https://api.github.com/users/freeseek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freeseek/subscriptions", "organizations_url": "https://api.github.com/users/freeseek/orgs", "repos_url": "https://api.github.com/users/freeseek/repos", "events_url": "https://api.github.com/users/freeseek/events{/privacy}", "received_events_url": "https://api.github.com/users/freeseek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2012-06-08T18:38:10Z", "updated_at": "2012-06-10T17:18:28Z", "closed_at": "2012-06-10T17:18:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I open a VCF file and I immediately write it back to a different file with code like this:\nvcf_reader = vcf.Reader(infile)\nvcf_writer = vcf.Writer(outfile,vcf_reader)\nI get that the order of things in the headers is now messed up. If at first I am more like:\n## fileformat=VCFv4.1\n## FORMAT=...\n## INFO=...\n## contig=...\n## reference=...\n\nIn the output file things are more like:\n## contig=...\n## reference=...\n## contig=...\n## fileformat=VCFv4.1\n## contig=...\n## INFO=...\n## FORMAT=...\n\nIs this even allowed by the VCF format? Is there a way to control this behavior?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/43", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/43/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/43/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/43", "id": 4964308, "node_id": "MDU6SXNzdWU0OTY0MzA4", "number": 43, "title": "Problem reading the QUAL variable", "user": {"login": "freeseek", "id": 1829330, "node_id": "MDQ6VXNlcjE4MjkzMzA=", "avatar_url": "https://avatars1.githubusercontent.com/u/1829330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freeseek", "html_url": "https://github.com/freeseek", "followers_url": "https://api.github.com/users/freeseek/followers", "following_url": "https://api.github.com/users/freeseek/following{/other_user}", "gists_url": "https://api.github.com/users/freeseek/gists{/gist_id}", "starred_url": "https://api.github.com/users/freeseek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freeseek/subscriptions", "organizations_url": "https://api.github.com/users/freeseek/orgs", "repos_url": "https://api.github.com/users/freeseek/repos", "events_url": "https://api.github.com/users/freeseek/events{/privacy}", "received_events_url": "https://api.github.com/users/freeseek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2012-06-08T04:17:15Z", "updated_at": "2012-06-10T16:45:12Z", "closed_at": "2012-06-10T16:45:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got the following error:\n\nFile \"/usr/local/lib/python2.7/dist-packages/PyVCF-0.4.4-py2.7.egg/vcf/parser.py\", line 745, in next\n    qual = float(row[5]) if '.' in row[5] else int(row[5])\nValueError: invalid literal for int() with base 10: '1e+03'\n\nit is clear what going wrong here. PyVCF thinks the absence of a '.' is enough to exclude the QUAL field from being a float, but this is not the case as '1e+03' is a float and does not contain a '.'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/36", "repository_url": "https://api.github.com/repos/jamescasbon/PyVCF", "labels_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/36/comments", "events_url": "https://api.github.com/repos/jamescasbon/PyVCF/issues/36/events", "html_url": "https://github.com/jamescasbon/PyVCF/issues/36", "id": 3969376, "node_id": "MDU6SXNzdWUzOTY5Mzc2", "number": 36, "title": "example-4.1-sv.vcf appears to be malformed", "user": {"login": "arq5x", "id": 72291, "node_id": "MDQ6VXNlcjcyMjkx", "avatar_url": "https://avatars3.githubusercontent.com/u/72291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arq5x", "html_url": "https://github.com/arq5x", "followers_url": "https://api.github.com/users/arq5x/followers", "following_url": "https://api.github.com/users/arq5x/following{/other_user}", "gists_url": "https://api.github.com/users/arq5x/gists{/gist_id}", "starred_url": "https://api.github.com/users/arq5x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arq5x/subscriptions", "organizations_url": "https://api.github.com/users/arq5x/orgs", "repos_url": "https://api.github.com/users/arq5x/repos", "events_url": "https://api.github.com/users/arq5x/events{/privacy}", "received_events_url": "https://api.github.com/users/arq5x/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2012-04-04T12:00:59Z", "updated_at": "2012-04-05T09:05:17Z", "closed_at": "2012-04-05T09:05:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am currently working on support for SVs in PyVcf.  In testing a simple parsing of the example SV file, I find that it fails at the first record because the GT field is defined as Integer in this file.  \n\n```\n##FORMAT=<ID=GT,Number=1,Type=Integer,Description=\"Genotype\">\n```\n\nThis is in contrast to the typical spec for the GT field (String) that is found in every other VCF file I have ever seen.  I checked the 1000 Genomes website for 4.1 and this file matches what is on their website, but I suspect it's a mistake.  As such, I have emailed the VCF spec mailing list for clarification.\n\nIt may be that we need to update the test file in order to develop SV support.\n\nUPDATE: it appears that this is indeed a mistake on the part of the folks that devised the example:\nhttp://sourceforge.net/mailarchive/message.php?msg_id=29084484\n", "performed_via_github_app": null, "score": 1.0}]}