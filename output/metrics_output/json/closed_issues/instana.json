{"total_count": 26, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/instana/python-sensor/issues/236", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/236/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/236/events", "html_url": "https://github.com/instana/python-sensor/issues/236", "id": 629533198, "node_id": "MDU6SXNzdWU2Mjk1MzMxOTg=", "number": 236, "title": "Infinite Recursion when making request", "user": {"login": "bman7777", "id": 5950980, "node_id": "MDQ6VXNlcjU5NTA5ODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5950980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bman7777", "html_url": "https://github.com/bman7777", "followers_url": "https://api.github.com/users/bman7777/followers", "following_url": "https://api.github.com/users/bman7777/following{/other_user}", "gists_url": "https://api.github.com/users/bman7777/gists{/gist_id}", "starred_url": "https://api.github.com/users/bman7777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bman7777/subscriptions", "organizations_url": "https://api.github.com/users/bman7777/orgs", "repos_url": "https://api.github.com/users/bman7777/repos", "events_url": "https://api.github.com/users/bman7777/events{/privacy}", "received_events_url": "https://api.github.com/users/bman7777/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-02T21:39:19Z", "updated_at": "2020-06-09T14:46:54Z", "closed_at": "2020-06-09T14:46:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am seeing an issue on 1.22.1.  When making a request via a celery worker (which uses gevent) I get an infinite recursion, here is the callstack:\r\n\r\n```\r\nRecursionError: maximum recursion depth exceeded while calling a Python object\r\n[Previous line repeated 457 more times]\r\nsuper(SSLContext, SSLContext).options.__set__(self, value)\r\nFile \"/usr/local/lib/python3.7/ssl.py\", line 518, in options\r\nsuper(SSLContext, SSLContext).options.__set__(self, value)\r\nFile \"/usr/local/lib/python3.7/ssl.py\", line 518, in options\r\nsuper(SSLContext, SSLContext).options.__set__(self, value)\r\nFile \"/usr/local/lib/python3.7/ssl.py\", line 518, in options\r\ncontext.options |= options\r\nFile \"/usr/local/lib/python3.7/site-packages/urllib3/util/ssl_.py\", line 276, in create_urllib3_context\r\ncert_reqs=resolve_cert_reqs(self.cert_reqs),\r\nFile \"/usr/local/lib/python3.7/site-packages/urllib3/connection.py\", line 344, in connect\r\nconn.connect()\r\nFile \"/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 976, in _validate_conn\r\nself._validate_conn(conn)\r\nFile \"/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 381, in _make_request\r\nchunked=chunked,\r\nFile \"/usr/local/lib/python3.7/site-packages/urllib3/connectionpool.py\", line 677, in urlopen\r\nreturn wrapped(*args, **kwargs)\r\n**File \"/usr/local/lib/python3.7/site-packages/instana/instrumentation/urllib3.py\", line 67, in urlopen_with_instana**\r\ntimeout=timeout\r\nFile \"/usr/local/lib/python3.7/site-packages/requests/adapters.py\", line 449, in send\r\n```\r\n\r\nI'm wondering if this has to do with recent changes to add gevent support, I found a similar issue resolved here:\r\n\r\nhttps://github.com/gevent/gevent/issues/1016\r\n\r\nI will try to step back to an older version and see if I can find where it was introduced.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/215", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/215/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/215/events", "html_url": "https://github.com/instana/python-sensor/issues/215", "id": 561973522, "node_id": "MDU6SXNzdWU1NjE5NzM1MjI=", "number": 215, "title": "Syntax warning and deprecation warning in Python 3.8", "user": {"login": "tirkarthi", "id": 3972343, "node_id": "MDQ6VXNlcjM5NzIzNDM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3972343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tirkarthi", "html_url": "https://github.com/tirkarthi", "followers_url": "https://api.github.com/users/tirkarthi/followers", "following_url": "https://api.github.com/users/tirkarthi/following{/other_user}", "gists_url": "https://api.github.com/users/tirkarthi/gists{/gist_id}", "starred_url": "https://api.github.com/users/tirkarthi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tirkarthi/subscriptions", "organizations_url": "https://api.github.com/users/tirkarthi/orgs", "repos_url": "https://api.github.com/users/tirkarthi/repos", "events_url": "https://api.github.com/users/tirkarthi/events{/privacy}", "received_events_url": "https://api.github.com/users/tirkarthi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "andrewslotin", "id": 203793, "node_id": "MDQ6VXNlcjIwMzc5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/203793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewslotin", "html_url": "https://github.com/andrewslotin", "followers_url": "https://api.github.com/users/andrewslotin/followers", "following_url": "https://api.github.com/users/andrewslotin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewslotin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewslotin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewslotin/subscriptions", "organizations_url": "https://api.github.com/users/andrewslotin/orgs", "repos_url": "https://api.github.com/users/andrewslotin/repos", "events_url": "https://api.github.com/users/andrewslotin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewslotin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "andrewslotin", "id": 203793, "node_id": "MDQ6VXNlcjIwMzc5Mw==", "avatar_url": "https://avatars3.githubusercontent.com/u/203793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewslotin", "html_url": "https://github.com/andrewslotin", "followers_url": "https://api.github.com/users/andrewslotin/followers", "following_url": "https://api.github.com/users/andrewslotin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewslotin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewslotin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewslotin/subscriptions", "organizations_url": "https://api.github.com/users/andrewslotin/orgs", "repos_url": "https://api.github.com/users/andrewslotin/repos", "events_url": "https://api.github.com/users/andrewslotin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewslotin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-02-08T05:27:59Z", "updated_at": "2020-02-17T16:19:06Z", "closed_at": "2020-02-17T16:19:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Syntax warning due to comparison of literals using is where == or != should be used. Deprecation warnings are raised due to invalid escape sequences in Python 3.8 . Below is a log of the warnings raised during compiling all the python files. Using raw strings or escaping them will fix this issue. \r\n\r\n```\r\n find . -iname '*.py'  | xargs -P 4 -I{} python -Wall -m py_compile {} \r\n\r\n./instana/util.py:230: DeprecationWarning: invalid escape sequence \\s\r\n  regexp_sql_values = re.compile('(\\'[\\s\\S][^\\']*\\'|\\d*\\.\\d+|\\d+|NULL)')\r\n./instana/util.py:283: DeprecationWarning: invalid escape sequence \\.\r\n  regexp_py = re.compile('\\.py$')\r\n./instana/util.py:19: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if sys.version_info.major is 2:\r\n./instana/util.py:250: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if hip is not None and len(hip) is 8:\r\n./instana/instrumentation/urllib3.py:21: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if args is not None and len(args) is 2:\r\n./instana/instrumentation/urllib3.py:34: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if len(parts) is 2:\r\n./instana/instrumentation/aiohttp/server.py:47: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if ec is 0:\r\n./instana/instrumentation/django/middleware.py:58: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if ec is 0:\r\n./instana/instrumentation/flask/vanilla.py:69: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if ec is 0:\r\n./instana/instrumentation/flask/with_blinker.py:67: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if ec is 0:\r\n./instana/instrumentation/sqlalchemy.py:13: DeprecationWarning: invalid escape sequence \\/\r\n  url_regexp = re.compile('\\/\\/(\\S+@)')\r\n./instana/instrumentation/tornado/server.py:82: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if ec is 0:\r\n./instana/meter.py:191: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if self.agent.machine.fsm.current is \"wait4init\":\r\n./instana/meter.py:194: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?\r\n  if self.agent.machine.fsm.current is not \"good2go\":\r\n./instana/meter.py:219: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if response.status_code is 200 and len(response.content) > 2:\r\n./instana/agent.py:164: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if response.status_code is 200:\r\n./instana/agent.py:178: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if response.status_code is 200:\r\n./instana/agent.py:197: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if response.status_code is 200:\r\n./instana/agent.py:222: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if response.status_code is 200:\r\n./instana/fsm.py:159: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if response and (response.status_code is 200) and (len(response.content) > 2):\r\n./instana/tracer.py:157: DeprecationWarning: invalid escape sequence \\.\r\n  re_tracer_frame = re.compile('/instana/.*\\.py$')\r\n./tests/test_id_management.py:8: SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?\r\n  if sys.version_info.major is 2:\r\n./tests/test_secrets.py:87: DeprecationWarning: invalid escape sequence \\d\r\n  kwlist = ['\\d']\r\n./tests/test_secrets.py:97: DeprecationWarning: invalid escape sequence \\d\r\n  kwlist = ['\\d\\d\\d']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/193", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/193/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/193/events", "html_url": "https://github.com/instana/python-sensor/issues/193", "id": 508485452, "node_id": "MDU6SXNzdWU1MDg0ODU0NTI=", "number": 193, "title": "aiohttp middleware returns None if handler raises", "user": {"login": "ddegirmenci", "id": 3137236, "node_id": "MDQ6VXNlcjMxMzcyMzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/3137236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddegirmenci", "html_url": "https://github.com/ddegirmenci", "followers_url": "https://api.github.com/users/ddegirmenci/followers", "following_url": "https://api.github.com/users/ddegirmenci/following{/other_user}", "gists_url": "https://api.github.com/users/ddegirmenci/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddegirmenci/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddegirmenci/subscriptions", "organizations_url": "https://api.github.com/users/ddegirmenci/orgs", "repos_url": "https://api.github.com/users/ddegirmenci/repos", "events_url": "https://api.github.com/users/ddegirmenci/events{/privacy}", "received_events_url": "https://api.github.com/users/ddegirmenci/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-10-17T13:43:51Z", "updated_at": "2019-12-10T12:54:52Z", "closed_at": "2019-12-10T12:54:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/instana/python-sensor/blob/master/instana/instrumentation/aiohttp/server.py#L40 calling the handler is wrapped in a try-except block, that logs and discards the exception: https://github.com/instana/python-sensor/blob/master/instana/instrumentation/aiohttp/server.py#L56\r\n\r\nThis causes issues with the utility exceptions provided in aiohttp.web_exceptions, and conflicts with the behaviour other middleware can implement based on exceptions a handler would raise.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/192", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/192/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/192/events", "html_url": "https://github.com/instana/python-sensor/issues/192", "id": 508440657, "node_id": "MDU6SXNzdWU1MDg0NDA2NTc=", "number": 192, "title": "Django: Instrumentation can get activated even when django not in use", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-17T12:27:03Z", "updated_at": "2019-12-10T12:05:52Z", "closed_at": "2019-12-10T12:05:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Just having the Django package in sys.modules (but without a running Django app) causes the following cosmetic error:\r\n\r\n```\r\n2019-10-17 12:24:28,705: 1 DEBUG instana: Instrumenting django\r\n2019-10-17 12:24:28,944: 1 DEBUG instana: django.middleware:\r\nTraceback (most recent call last):\r\n  File \"/tmp/instana/python/instana/instrumentation/django/middleware.py\", line 133, in <module>\r\n    wsgiapp = get_internal_wsgi_application()\r\n  File \"/usr/local/lib/python2.7/site-packages/django/core/servers/basehttp.py\", line 42, in get_internal_wsgi_application\r\n    app_path = getattr(settings, 'WSGI_APPLICATION')\r\n  File \"/usr/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 56, in __getattr__\r\n    self._setup(name)\r\n  File \"/usr/local/lib/python2.7/site-packages/django/conf/__init__.py\", line 39, in _setup\r\n    % (desc, ENVIRONMENT_VARIABLE))\r\nImproperlyConfigured: Requested setting WSGI_APPLICATION, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/190", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/190/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/190/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/190/events", "html_url": "https://github.com/instana/python-sensor/issues/190", "id": 503244236, "node_id": "MDU6SXNzdWU1MDMyNDQyMzY=", "number": 190, "title": "Doubt in instana.instrumentation.django.middleware module", "user": {"login": "ankitnayan", "id": 12460410, "node_id": "MDQ6VXNlcjEyNDYwNDEw", "avatar_url": "https://avatars0.githubusercontent.com/u/12460410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ankitnayan", "html_url": "https://github.com/ankitnayan", "followers_url": "https://api.github.com/users/ankitnayan/followers", "following_url": "https://api.github.com/users/ankitnayan/following{/other_user}", "gists_url": "https://api.github.com/users/ankitnayan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ankitnayan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ankitnayan/subscriptions", "organizations_url": "https://api.github.com/users/ankitnayan/orgs", "repos_url": "https://api.github.com/users/ankitnayan/repos", "events_url": "https://api.github.com/users/ankitnayan/events{/privacy}", "received_events_url": "https://api.github.com/users/ankitnayan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-07T05:44:39Z", "updated_at": "2019-10-15T17:53:25Z", "closed_at": "2019-10-15T17:53:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems to use the below command to reload application.\r\n```\r\nfrom django.core.servers.basehttp import get_internal_wsgi_application\r\n            wsgiapp = get_internal_wsgi_application()\r\n            wsgiapp.load_middleware()\r\n```\r\nBelow is from the `get_internal_wsgi_application` function definition from [github](https://github.com/spulec/django/blob/master/django/core/servers/basehttp.py).\r\n\r\n    Load and return the WSGI application as configured by the user in\r\n    ``settings.WSGI_APPLICATION``. With the default ``startproject`` layout,\r\n    this will be the ``application`` object in ``projectname/wsgi.py``.\r\n    This function, and the ``WSGI_APPLICATION`` setting itself, are only useful\r\n    for Django's internal server (runserver); external WSGI servers should just\r\n    be configured to point to the correct application object directly.\r\n    If settings.WSGI_APPLICATION is not set (is ``None``), return\r\n    whatever ``django.core.wsgi.get_wsgi_application`` returns.\r\n\r\n\r\nDoes this sensor work only for runserver in django applications? \r\nAlso, How does this sensor reload running gunicorn processes? I could not find any steps to gracefully shut down gunicorn processes as recommended in this [gunicorn documentation](http://docs.gunicorn.org/en/stable/faq.html)\r\n    ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/188", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/188/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/188/events", "html_url": "https://github.com/instana/python-sensor/issues/188", "id": 499820341, "node_id": "MDU6SXNzdWU0OTk4MjAzNDE=", "number": 188, "title": "I can not get the Python sensor script to work", "user": {"login": "jimidak", "id": 37127167, "node_id": "MDQ6VXNlcjM3MTI3MTY3", "avatar_url": "https://avatars3.githubusercontent.com/u/37127167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jimidak", "html_url": "https://github.com/jimidak", "followers_url": "https://api.github.com/users/jimidak/followers", "following_url": "https://api.github.com/users/jimidak/following{/other_user}", "gists_url": "https://api.github.com/users/jimidak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jimidak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jimidak/subscriptions", "organizations_url": "https://api.github.com/users/jimidak/orgs", "repos_url": "https://api.github.com/users/jimidak/repos", "events_url": "https://api.github.com/users/jimidak/events{/privacy}", "received_events_url": "https://api.github.com/users/jimidak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-28T20:57:41Z", "updated_at": "2019-10-17T12:53:34Z", "closed_at": "2019-10-17T12:53:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are several module imports that fail.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/183", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/183/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/183/events", "html_url": "https://github.com/instana/python-sensor/issues/183", "id": 480024303, "node_id": "MDU6SXNzdWU0ODAwMjQzMDM=", "number": 183, "title": "`hip` referenced before assignment", "user": {"login": "belthaZornv", "id": 9652736, "node_id": "MDQ6VXNlcjk2NTI3MzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9652736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belthaZornv", "html_url": "https://github.com/belthaZornv", "followers_url": "https://api.github.com/users/belthaZornv/followers", "following_url": "https://api.github.com/users/belthaZornv/following{/other_user}", "gists_url": "https://api.github.com/users/belthaZornv/gists{/gist_id}", "starred_url": "https://api.github.com/users/belthaZornv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belthaZornv/subscriptions", "organizations_url": "https://api.github.com/users/belthaZornv/orgs", "repos_url": "https://api.github.com/users/belthaZornv/repos", "events_url": "https://api.github.com/users/belthaZornv/events{/privacy}", "received_events_url": "https://api.github.com/users/belthaZornv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-13T08:25:13Z", "updated_at": "2019-08-21T08:37:47Z", "closed_at": "2019-08-21T08:37:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nTraceback (most recent call last):\r\n File \"/home/julian/PycharmProjects/xxx-xxxx/venv/lib/python3.5/site-packages/instana/util.py\", line 201, in get_default_gateway\r\n   if hip is not None and len(hip) is 8:\r\nUnboundLocalError: local variable 'hip' referenced before assignment\r\n```\r\n\r\nCode:\r\nhttps://github.com/instana/python-sensor/blob/3c81c090cc4dd933c61c733fdb9aec39c873b93a/instana/util.py#L221", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/175", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/175/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/175/events", "html_url": "https://github.com/instana/python-sensor/issues/175", "id": 460305278, "node_id": "MDU6SXNzdWU0NjAzMDUyNzg=", "number": 175, "title": "Custom Tracing: Warn if unsupported values are used for SetTag", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-25T09:14:07Z", "updated_at": "2019-07-08T16:49:01Z", "closed_at": "2019-07-08T16:49:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Our [Custom Tracing Best Practices document](https://docs.instana.io/quick_start/custom_tracing/#tips--best-practices) outlines the formats for common tags but if a user still attempts to set a value of something unsupported, (e.g. a Python object of some sort) we should log a more informational warning.\r\n\r\n```\r\nFile \"/usr/local/lib/python2.7/site-packages/instana/agent.py\", line 91, in extractor\r\n   return {k.lower(): v for k, v in o.__dict__.items() if v is not None}\r\nAttributeError: 'datetime.datetime' object has no attribute '__dict__'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/158", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/158/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/158/events", "html_url": "https://github.com/instana/python-sensor/issues/158", "id": 449242757, "node_id": "MDU6SXNzdWU0NDkyNDI3NTc=", "number": 158, "title": "Instrumented uwsgi on OSX Mojave can crash post fork", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-28T12:33:07Z", "updated_at": "2019-08-21T08:38:56Z", "closed_at": "2019-08-21T08:38:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "OSX Mojave added some threading security features that broke a large number of various projects.  This is likely not a direct Instana issue but we should investigate to know how to remedy.\r\n\r\nhttps://bugs.python.org/issue33725", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/151", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/151/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/151/events", "html_url": "https://github.com/instana/python-sensor/issues/151", "id": 443615852, "node_id": "MDU6SXNzdWU0NDM2MTU4NTI=", "number": 151, "title": "ImportError: No module named 'tornado'", "user": {"login": "jonrossmacmillan", "id": 42475861, "node_id": "MDQ6VXNlcjQyNDc1ODYx", "avatar_url": "https://avatars3.githubusercontent.com/u/42475861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonrossmacmillan", "html_url": "https://github.com/jonrossmacmillan", "followers_url": "https://api.github.com/users/jonrossmacmillan/followers", "following_url": "https://api.github.com/users/jonrossmacmillan/following{/other_user}", "gists_url": "https://api.github.com/users/jonrossmacmillan/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonrossmacmillan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonrossmacmillan/subscriptions", "organizations_url": "https://api.github.com/users/jonrossmacmillan/orgs", "repos_url": "https://api.github.com/users/jonrossmacmillan/repos", "events_url": "https://api.github.com/users/jonrossmacmillan/events{/privacy}", "received_events_url": "https://api.github.com/users/jonrossmacmillan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-13T21:45:29Z", "updated_at": "2019-05-14T14:11:18Z", "closed_at": "2019-05-14T14:11:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "We started getting this error in our CI today, which is configured to get the latest version of the instana package. \r\n  \r\n```  sys.exit(run())\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/gunicorn/app/wsgiapp.py\", line 61, in run\r\n    WSGIApplication(\"%(prog)s [OPTIONS] [APP_MODULE]\").run()\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/gunicorn/app/base.py\", line 223, in run\r\n    super(Application, self).run()\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/gunicorn/app/base.py\", line 72, in run\r\n    Arbiter(self).run()\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/gunicorn/arbiter.py\", line 60, in __init__\r\n    self.setup(app)\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/gunicorn/arbiter.py\", line 95, in setup\r\n    self.log = self.cfg.logger_class(app.cfg)\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/gunicorn/glogging.py\", line 200, in __init__\r\n    self.setup(cfg)\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/gunicorn/glogging.py\", line 256, in setup\r\n    disable_existing_loggers=False)\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/logging/config.py\", line 76, in fileConfig\r\n    formatters = _create_formatters(cp)\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/logging/config.py\", line 123, in _create_formatters\r\n    c = _resolve(class_name)\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/logging/config.py\", line 94, in _resolve\r\n    found = __import__(used)\r\n  File \"/usr/local/pythagoras/pythagoras/__init__.py\", line 1, in <module>\r\n    from flask import Flask\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/wrapt/importer.py\", line 158, in load_module\r\n    notify_module_loaded(module)\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/wrapt/decorators.py\", line 440, in _synchronized\r\n    return wrapped(*args, **kwargs)\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/wrapt/importer.py\", line 136, in notify_module_loaded\r\n    hook(module)\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/wrapt/importer.py\", line 105, in import_hook\r\n    __import__(entrypoint.module_name)\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/instana/__init__.py\", line 90, in <module>\r\n    boot_agent()\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/instana/__init__.py\", line 65, in boot_agent\r\n    import instana.singletons\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/instana/singletons.py\", line 28, in <module>\r\n    from opentracing.scope_managers.tornado import TornadoScopeManager\r\n  File \"/opt/miniconda/envs/.venv/lib/python3.5/site-packages/opentracing/scope_managers/tornado.py\", line 24, in <module>\r\n    import tornado.stack_context\r\nImportError: No module named 'tornado'\r\n\r\n```\r\n\r\nour conda-requirements.yaml file:\r\n\r\n\r\n```\r\nname: .venv\r\nchannels:\r\n  - defaults\r\n  - conda-forge\r\ndependencies:\r\n  - asn1crypto=0.24.0=py35_3\r\n  - ca-certificates=2018.11.29=ha4d7672_0\r\n  - certifi=2018.8.24=py35_1001\r\n  - cffi=1.11.5=py35h5e8e0c9_1\r\n  - chardet=3.0.4=py35_3\r\n  - click=7.0=py_0\r\n  - cryptography=2.3.1=py35hdffb7b8_0\r\n  - cryptography-vectors=2.3.1=py35_0\r\n  - fastcache=1.0.2=py35h470a237_1\r\n  - flask=1.0.2=py_2\r\n  - gevent=1.3.6=py35h470a237_0\r\n  - gmp=6.1.2=hf484d3e_1000\r\n  - gmpy2=2.0.8=py35_0\r\n  - gunicorn=19.9.0=py35_1000\r\n  - idna=2.7=py35_2\r\n  - itsdangerous=1.1.0=py_0\r\n  - jinja2=2.10=py_1\r\n  # - libcxx=7.0.0=h6bb024c_1002\r\n  - libedit\r\n  - libffi=3.2.1=hf484d3e_1005\r\n  - libgcc-ng=7.3.0=hdf63c60_0\r\n  - libstdcxx-ng=7.3.0=hdf63c60_0\r\n  - llvm-meta=7.0.0=0\r\n  - markupsafe=1.0=py35h470a237_1\r\n  - mpc=1.1.0=hb20f59a_1006\r\n  - mpfr=4.0.1=ha14ba45_1000\r\n  - mpmath=1.1.0=py_0\r\n  - ncurses=6.1=hf484d3e_1002\r\n  - openssl=1.0.2p=h14c3975_1002\r\n  - pkg-config=0.29.2=h1bed415_8\r\n  - pip=18.0=py35_1001\r\n  - pycparser=2.19=py_0\r\n  - pyopenssl=18.0.0=py35_0\r\n  - pysocks=1.6.8=py35_2\r\n  - pyyaml=3.13=py35h470a237_1\r\n  - readline=7.0=hf8c457e_1001\r\n  - requests=2.19.1=py35_1\r\n  - setuptools=40.4.3=py35_0\r\n  - six=1.11.0=py35_1\r\n  - sqlite=3.26.0=h67949de_1000\r\n  - structlog=19.1.0=py_0\r\n  - sympy=1.1.1=py35_0\r\n  - tk=8.6.9=h84994c4_1000\r\n  - urllib3=1.23=py35_1\r\n  - werkzeug=0.14.1=py_0\r\n  - wheel=0.32.0=py35_1000\r\n  - xz=5.2.4=h14c3975_1001\r\n  - yaml=0.1.7=h14c3975_1001\r\n  - zlib=1.2.11=h14c3975_1004\r\n  - greenlet=0.4.14=py35h14c3975_0\r\n  - python=3.5.6=hc3d631a_0\r\n  - pip:\r\n    - autowrapt==1.0\r\n    - basictracer==3.0.0\r\n    - fysom==2.1.5\r\n    - instana\r\n    - json-logging-py==0.2\r\n    - opentracing==2.0.0\r\n    - protobuf==3.7.0rc2\r\n    - wrapt==1.11.1\r\nprefix: /opt/miniconda/envs/.venv\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/127", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/127/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/127/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/127/events", "html_url": "https://github.com/instana/python-sensor/issues/127", "id": 406992011, "node_id": "MDU6SXNzdWU0MDY5OTIwMTE=", "number": 127, "title": "asyncio (libs) support", "user": {"login": "arnulfojr", "id": 1023023, "node_id": "MDQ6VXNlcjEwMjMwMjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1023023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arnulfojr", "html_url": "https://github.com/arnulfojr", "followers_url": "https://api.github.com/users/arnulfojr/followers", "following_url": "https://api.github.com/users/arnulfojr/following{/other_user}", "gists_url": "https://api.github.com/users/arnulfojr/gists{/gist_id}", "starred_url": "https://api.github.com/users/arnulfojr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arnulfojr/subscriptions", "organizations_url": "https://api.github.com/users/arnulfojr/orgs", "repos_url": "https://api.github.com/users/arnulfojr/repos", "events_url": "https://api.github.com/users/arnulfojr/events{/privacy}", "received_events_url": "https://api.github.com/users/arnulfojr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-05T21:56:22Z", "updated_at": "2019-03-11T12:42:40Z", "closed_at": "2019-02-15T12:13:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI wanted to ask if you guys have planned to support any asyncio libraries out of the box? e.g., aiohttp (client and server) or sanic.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/125", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/125/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/125/events", "html_url": "https://github.com/instana/python-sensor/issues/125", "id": 401749862, "node_id": "MDU6SXNzdWU0MDE3NDk4NjI=", "number": 125, "title": "use of requests package", "user": {"login": "rosscdh", "id": 397106, "node_id": "MDQ6VXNlcjM5NzEwNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/397106?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rosscdh", "html_url": "https://github.com/rosscdh", "followers_url": "https://api.github.com/users/rosscdh/followers", "following_url": "https://api.github.com/users/rosscdh/following{/other_user}", "gists_url": "https://api.github.com/users/rosscdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/rosscdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rosscdh/subscriptions", "organizations_url": "https://api.github.com/users/rosscdh/orgs", "repos_url": "https://api.github.com/users/rosscdh/repos", "events_url": "https://api.github.com/users/rosscdh/events{/privacy}", "received_events_url": "https://api.github.com/users/rosscdh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 501958733, "node_id": "MDU6TGFiZWw1MDE5NTg3MzM=", "url": "https://api.github.com/repos/instana/python-sensor/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 501958736, "node_id": "MDU6TGFiZWw1MDE5NTg3MzY=", "url": "https://api.github.com/repos/instana/python-sensor/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-01-22T12:50:41Z", "updated_at": "2020-05-15T13:56:53Z", "closed_at": "2020-05-15T13:56:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there as per the documentation here https://docs.instana.io/quick_start/api/#rest-api\r\n\r\n```\r\nfrom instana.api import APIClient\r\nc = APIClient(base_url=\"https://<dashboard-url>\", api_token='MY_API_TOKEN')\r\n\r\n# Or, alternatively if you have the environment variables set\r\n# c = APIClient()\r\n\r\n# Retrieve the current application view\r\nav = c.application_view()\r\nav.json()\r\n```\r\n\r\nwhich currently breaks due to requests not being present in the calls, which make use of urllib3 and NOT the requests package for some reason?\r\n\r\n```\r\nThe API currently uses the requests package to make the REST calls to the API.\r\nAs such, requests response objects are returned from API calls.\r\n```\r\n\r\n~is this intended as such? or is requests simply a dependency that needs to be installed?~ requests seems to be prepackaged but not implemented it seems that `ob._body` is necessary to be called.. \r\n\r\nor do you plan on using raw urllib3? in which case the docs need to be updated?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/123", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/123/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/123/events", "html_url": "https://github.com/instana/python-sensor/issues/123", "id": 399767526, "node_id": "MDU6SXNzdWUzOTk3Njc1MjY=", "number": 123, "title": "Update and version limit wrapt for latest fixes", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-16T11:34:06Z", "updated_at": "2019-03-01T10:28:14Z", "closed_at": "2019-03-01T10:28:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://twitter.com/GrahamDumpleton/status/1085499228212719616", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/118", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/118/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/118/events", "html_url": "https://github.com/instana/python-sensor/issues/118", "id": 393629070, "node_id": "MDU6SXNzdWUzOTM2MjkwNzA=", "number": 118, "title": "Spyne 2.12.15 Breaks Tests", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-22T01:03:54Z", "updated_at": "2019-03-01T10:28:57Z", "closed_at": "2019-03-01T10:28:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Recently released Spyne is causing [these Travis tests](https://travis-ci.org/instana/python-sensor/builds/471220759) to fail:\r\n```\r\nCollecting spyne>=2.9 (from instana==1.8.7->-r requirements-test.txt (line 2))\r\n  Downloading https://files.pythonhosted.org/packages/cb/73/67e489bdfdf8ed9f927001595a1e57891b12e580fcfa9aa64b3c4df16a8a/spyne-2.12.15.tar.gz (439kB)\r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-install-kxoz8746/spyne/setup.py\", line 51, in <module>\r\n        LONG_DESC += u\"\\n\\n\" + open('CHANGELOG.rst', 'r').read().decode('utf8')\r\n    AttributeError: 'str' object has no attribute 'decode'\r\n```\r\nSpyne is used in the test suite and not a general dependency in normal installs.\r\n\r\nLimited the version for the time being.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/88", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/88/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/88/events", "html_url": "https://github.com/instana/python-sensor/issues/88", "id": 339725194, "node_id": "MDU6SXNzdWUzMzk3MjUxOTQ=", "number": 88, "title": "Flask: -m flask run breaks with sensor; `flask run` works", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-10T07:30:52Z", "updated_at": "2019-03-01T10:35:33Z", "closed_at": "2019-03-01T10:35:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\n(DemoFlask) Hughs-MacBook-Pro:DemoFlask hughbrien$ python -m flask run\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py\", line 183, in _run_module_as_main\r\n    mod_name, mod_spec, code = _get_module_details(mod_name, _Error)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/runpy.py\", line 153, in _get_module_details\r\n    code = loader.get_code(mod_name)\r\nAttributeError: '_ImportHookChainedLoader' object has no attribute 'get_code'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/59", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/59/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/59/events", "html_url": "https://github.com/instana/python-sensor/issues/59", "id": 290813631, "node_id": "MDU6SXNzdWUyOTA4MTM2MzE=", "number": 59, "title": "No Urllib3 instrumentation with requests package", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-23T12:10:54Z", "updated_at": "2018-03-15T15:28:06Z", "closed_at": "2018-03-15T15:28:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There are certain use cases where urllib3 calls are not correctly instrumented when using the requests package.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/48", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/48/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/48/events", "html_url": "https://github.com/instana/python-sensor/issues/48", "id": 285747183, "node_id": "MDU6SXNzdWUyODU3NDcxODM=", "number": 48, "title": "Need a way to set app wide service name", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-03T17:00:21Z", "updated_at": "2018-01-04T10:12:55Z", "closed_at": "2018-01-04T10:12:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The sensor currently lacks a way for users to set a global service name for their application.\r\n\r\nIf the user instantiates a tracer themselves, they can then set the service name via `Options` for all traces generated with that tracer but there is no method for default sensor instantiation.\r\n\r\nCurrent idea is to add two separate methods.  One via environment variable and the second via code.\r\n\r\ne.g. `export INSTANA_SERVICE_NAME=myservice` or via code `instana.service_name = \"myservice\"`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/36", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/36/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/36/events", "html_url": "https://github.com/instana/python-sensor/issues/36", "id": 276351816, "node_id": "MDU6SXNzdWUyNzYzNTE4MTY=", "number": 36, "title": "Need a way to access active span of automatic instrumentation", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-23T12:05:46Z", "updated_at": "2017-12-27T16:13:50Z", "closed_at": "2017-12-27T16:13:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "If a user wants to sprinkle in OpenTracing among existing automatic instrumentation, they need a way to access the currently active span to inherit context from.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/33", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/33/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/33/events", "html_url": "https://github.com/instana/python-sensor/issues/33", "id": 272732546, "node_id": "MDU6SXNzdWUyNzI3MzI1NDY=", "number": 33, "title": "Agent host & port should be configurable via environment variables", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 501958735, "node_id": "MDU6TGFiZWw1MDE5NTg3MzU=", "url": "https://api.github.com/repos/instana/python-sensor/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 501958736, "node_id": "MDU6TGFiZWw1MDE5NTg3MzY=", "url": "https://api.github.com/repos/instana/python-sensor/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-09T21:36:40Z", "updated_at": "2017-12-27T16:11:22Z", "closed_at": "2017-12-27T16:11:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Like our other sensors, the Python sensor should be configurable via environment variables.\r\n\r\n`INSTANA_AGENT_IP`\r\n`INSTANA_AGENT_PORT`\r\n\r\nhttps://github.com/instana/python-sensor/blob/master/instana/agent.py#L35-L36", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/32", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/32/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/32/events", "html_url": "https://github.com/instana/python-sensor/issues/32", "id": 272725756, "node_id": "MDU6SXNzdWUyNzI3MjU3NTY=", "number": 32, "title": "Remove /sbin/ip dependency", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 501958735, "node_id": "MDU6TGFiZWw1MDE5NTg3MzU=", "url": "https://api.github.com/repos/instana/python-sensor/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-09T21:12:25Z", "updated_at": "2019-01-28T10:27:12Z", "closed_at": "2019-01-28T10:27:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We should instead read /proc/net/route", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/30", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/30/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/30/events", "html_url": "https://github.com/instana/python-sensor/issues/30", "id": 266038497, "node_id": "MDU6SXNzdWUyNjYwMzg0OTc=", "number": 30, "title": "In certain cases, package version numbers not collected", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-17T08:39:48Z", "updated_at": "2017-12-27T16:15:37Z", "closed_at": "2017-12-27T16:15:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In some cases, more modules than desired fallback to `builtin` when they should really have an actual version.  This example is from an app with Django 1.3.7.  The real version should properly be detected.\r\n\r\n![screen shot 2017-10-17 at 10 20 21](https://user-images.githubusercontent.com/395132/31654764-344693b0-b327-11e7-9719-c163418d81ce.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/23", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/23/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/23/events", "html_url": "https://github.com/instana/python-sensor/issues/23", "id": 258885569, "node_id": "MDU6SXNzdWUyNTg4ODU1Njk=", "number": 23, "title": "Sensor breaks with pyasn1 package", "user": {"login": "elgris", "id": 1905821, "node_id": "MDQ6VXNlcjE5MDU4MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1905821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elgris", "html_url": "https://github.com/elgris", "followers_url": "https://api.github.com/users/elgris/followers", "following_url": "https://api.github.com/users/elgris/following{/other_user}", "gists_url": "https://api.github.com/users/elgris/gists{/gist_id}", "starred_url": "https://api.github.com/users/elgris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elgris/subscriptions", "organizations_url": "https://api.github.com/users/elgris/orgs", "repos_url": "https://api.github.com/users/elgris/repos", "events_url": "https://api.github.com/users/elgris/events{/privacy}", "received_events_url": "https://api.github.com/users/elgris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-19T16:32:40Z", "updated_at": "2017-09-20T09:26:04Z", "closed_at": "2017-09-20T09:26:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Basically, you can find the suspect here:\r\n```python\r\nmeter.py\r\n\r\n...\r\n    def collect_modules(self):\r\n        try:\r\n            m = sys.modules\r\n            r = {}\r\n            for k in m:\r\n                if m[k]:\r\n                    d = m[k].__dict__\r\n                    if \"version\" in d and d[\"version\"]:\r\n                        r[k] = self.jsonable(d[\"version\"])\r\n                    elif \"__version__\" in d and d[\"__version__\"]:\r\n                        r[k] = self.jsonable(d[\"__version__\"])\r\n                    else:\r\n                        r[k] = \"builtin\"\r\n\r\n            return r\r\n        except Exception as e:\r\n            l.error(\"collect_modules: \", str(e))\r\n\r\n            return None\r\n...\r\n```\r\n\r\nFollowing line of code fails if module `pyasn1` is being processed:\r\n```python\r\nif \"version\" in d and d[\"version\"]\r\n```\r\n\r\nexception thrown is `pyasn1.error.PyAsn1Error: Uninitialized ASN.1 value (\"__nonzero__\" attribute looked up)`\r\n\r\nThis problem came from package `pysnmp` which imports `pyasn1`\r\n\r\n## Snippet to reproduce\r\n\r\nYou can reproduce this problem with a small snippet\r\n\r\n```\r\nimport sys\r\nfrom pysnmp.entity.rfc3413.oneliner import cmdgen\r\n\r\nm = sys.modules\r\nr = {}\r\nfor k in m:\r\n    if m[k]:\r\n        d = m[k].__dict__\r\n        if \"version\" in d and d[\"version\"]:\r\n            r[k] = d[\"version\"]\r\n        elif \"__version__\" in d and d[\"__version__\"]:\r\n            r[k] = d[\"__version__\"]\r\n        else:\r\n            r[k] = \"builtin\"\r\nprint(r)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/17", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/17/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/17/events", "html_url": "https://github.com/instana/python-sensor/issues/17", "id": 257345199, "node_id": "MDU6SXNzdWUyNTczNDUxOTk=", "number": 17, "title": "Add documentation for the end to end tracing capabilities", "user": {"login": "michael-krumm", "id": 16559165, "node_id": "MDQ6VXNlcjE2NTU5MTY1", "avatar_url": "https://avatars1.githubusercontent.com/u/16559165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michael-krumm", "html_url": "https://github.com/michael-krumm", "followers_url": "https://api.github.com/users/michael-krumm/followers", "following_url": "https://api.github.com/users/michael-krumm/following{/other_user}", "gists_url": "https://api.github.com/users/michael-krumm/gists{/gist_id}", "starred_url": "https://api.github.com/users/michael-krumm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michael-krumm/subscriptions", "organizations_url": "https://api.github.com/users/michael-krumm/orgs", "repos_url": "https://api.github.com/users/michael-krumm/repos", "events_url": "https://api.github.com/users/michael-krumm/events{/privacy}", "received_events_url": "https://api.github.com/users/michael-krumm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-13T11:21:49Z", "updated_at": "2018-06-05T09:49:13Z", "closed_at": "2018-06-05T09:49:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We are able to correlate end user traces to python backend calls. We should add this to the documentation", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/13", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/13/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/13/events", "html_url": "https://github.com/instana/python-sensor/issues/13", "id": 256749108, "node_id": "MDU6SXNzdWUyNTY3NDkxMDg=", "number": 13, "title": "Add support of TEXT_MAP format for injection/extraction of the span data", "user": {"login": "elgris", "id": 1905821, "node_id": "MDQ6VXNlcjE5MDU4MjE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1905821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elgris", "html_url": "https://github.com/elgris", "followers_url": "https://api.github.com/users/elgris/followers", "following_url": "https://api.github.com/users/elgris/following{/other_user}", "gists_url": "https://api.github.com/users/elgris/gists{/gist_id}", "starred_url": "https://api.github.com/users/elgris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elgris/subscriptions", "organizations_url": "https://api.github.com/users/elgris/orgs", "repos_url": "https://api.github.com/users/elgris/repos", "events_url": "https://api.github.com/users/elgris/events{/privacy}", "received_events_url": "https://api.github.com/users/elgris/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-11T15:42:15Z", "updated_at": "2017-09-27T12:49:05Z", "closed_at": "2017-09-27T12:49:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## User story\r\n\r\nAs an application developer who collects tracing data in a very tricky way\r\nI want Instana tracing library to support `TEXT_MAP` format for injection/extraction of the span data\r\nSo that I don't need to implement this standard way of injection/extraction myself\r\n\r\n## Explanation\r\n\r\nCurrently instana tracer is able to inject/extract span data using `HTTPPropagator` which works fine for tracing HTTP requests. However, in my case it's needed to work with data coming from a queue. And queue messages don't support HTTP headers :)\r\n\r\nAnother reason for adding support of `TEXT_MAP` format is that it's suggested by Opentracing standard: http://opentracing.io/documentation/pages/api/cross-process-tracing.html#required-injectextract-carrier-formats\r\n\r\n## Acceptance criteria\r\n\r\n- [ ] It is possible to extract span data with a following call:\r\n```\r\ntracer.extract(\r\n                    format=Format.TEXT_MAP,\r\n                    carrier=trace,\r\n                )\r\n```\r\n- [ ] The same goes for `tracer.inject` call", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/7", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/7/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/7/events", "html_url": "https://github.com/instana/python-sensor/issues/7", "id": 242710648, "node_id": "MDU6SXNzdWUyNDI3MTA2NDg=", "number": 7, "title": "Report proper Django name in snapshot w/ Installed Apps", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-13T13:58:52Z", "updated_at": "2017-07-28T10:46:34Z", "closed_at": "2017-07-28T10:46:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We should report the proper Django app name with the following:\r\n\r\n```python\r\nimport django.core.handlers.base as base\r\nname = os.path.basename(base.settings.BASE_DIR)\r\nstring.capitalize(name)\r\n```\r\nwhich would reveal the package name that this app is built with.\r\n\r\nThen also report the list of installed apps:\r\n\r\n```python\r\n>>> base.settings.INSTALLED_APPS\r\n['polls.apps.PollsConfig', 'django.contrib.admin', 'django.contrib.auth', \r\n'django.contrib.contenttypes', 'django.contrib.sessions', \r\n'django.contrib.messages', 'django.contrib.staticfiles']\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/instana/python-sensor/issues/5", "repository_url": "https://api.github.com/repos/instana/python-sensor", "labels_url": "https://api.github.com/repos/instana/python-sensor/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/instana/python-sensor/issues/5/comments", "events_url": "https://api.github.com/repos/instana/python-sensor/issues/5/events", "html_url": "https://github.com/instana/python-sensor/issues/5", "id": 242053837, "node_id": "MDU6SXNzdWUyNDIwNTM4Mzc=", "number": 5, "title": "Under Django, snapshot data can be missing (app name shown as Unknown)", "user": {"login": "pglombardo", "id": 395132, "node_id": "MDQ6VXNlcjM5NTEzMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/395132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pglombardo", "html_url": "https://github.com/pglombardo", "followers_url": "https://api.github.com/users/pglombardo/followers", "following_url": "https://api.github.com/users/pglombardo/following{/other_user}", "gists_url": "https://api.github.com/users/pglombardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/pglombardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pglombardo/subscriptions", "organizations_url": "https://api.github.com/users/pglombardo/orgs", "repos_url": "https://api.github.com/users/pglombardo/repos", "events_url": "https://api.github.com/users/pglombardo/events{/privacy}", "received_events_url": "https://api.github.com/users/pglombardo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-11T13:47:33Z", "updated_at": "2017-07-13T20:36:27Z", "closed_at": "2017-07-13T20:36:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Investigate what happened with snapshot data.", "performed_via_github_app": null, "score": 1.0}]}