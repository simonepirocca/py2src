{"total_count": 236, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/jazzband/django-taggit/issues/683", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/683/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/683/events", "html_url": "https://github.com/jazzband/django-taggit/issues/683", "id": 674294447, "node_id": "MDU6SXNzdWU2NzQyOTQ0NDc=", "number": 683, "title": "Could not find a version that satisfies the requirement django-taggit==1.3.0", "user": {"login": "Moulde", "id": 1292921, "node_id": "MDQ6VXNlcjEyOTI5MjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1292921?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Moulde", "html_url": "https://github.com/Moulde", "followers_url": "https://api.github.com/users/Moulde/followers", "following_url": "https://api.github.com/users/Moulde/following{/other_user}", "gists_url": "https://api.github.com/users/Moulde/gists{/gist_id}", "starred_url": "https://api.github.com/users/Moulde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Moulde/subscriptions", "organizations_url": "https://api.github.com/users/Moulde/orgs", "repos_url": "https://api.github.com/users/Moulde/repos", "events_url": "https://api.github.com/users/Moulde/events{/privacy}", "received_events_url": "https://api.github.com/users/Moulde/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-06T12:59:25Z", "updated_at": "2020-08-07T08:40:28Z", "closed_at": "2020-08-07T08:40:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i attempt to install the pip package i get the following error.\r\n\r\n`Could not find a version that satisfies the requirement django-taggit==1.3.0`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/670", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/670/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/670/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/670/events", "html_url": "https://github.com/jazzband/django-taggit/issues/670", "id": 605580027, "node_id": "MDU6SXNzdWU2MDU1ODAwMjc=", "number": 670, "title": "CameraModelFilterSet resolved field 'tags' with 'exact' lookup to an unrecognized field type TaggableManager", "user": {"login": "djjudas21", "id": 604595, "node_id": "MDQ6VXNlcjYwNDU5NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/604595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djjudas21", "html_url": "https://github.com/djjudas21", "followers_url": "https://api.github.com/users/djjudas21/followers", "following_url": "https://api.github.com/users/djjudas21/following{/other_user}", "gists_url": "https://api.github.com/users/djjudas21/gists{/gist_id}", "starred_url": "https://api.github.com/users/djjudas21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djjudas21/subscriptions", "organizations_url": "https://api.github.com/users/djjudas21/orgs", "repos_url": "https://api.github.com/users/djjudas21/repos", "events_url": "https://api.github.com/users/djjudas21/events{/privacy}", "received_events_url": "https://api.github.com/users/djjudas21/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-23T14:20:57Z", "updated_at": "2020-04-28T15:52:50Z", "closed_at": "2020-04-28T15:52:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been using `django-filter` for a while but I just added `django-taggit` to my project with minimal config as in these two commits, basically just adding a `tags` field to the model `CameraModel`:\r\n* https://github.com/djjudas21/camerahub/commit/fd322cb730dc9146cca366ef41dcc01efeabfcc9\r\n* https://github.com/djjudas21/camerahub/commit/9547319e200d4fc8751e54b7d399ae5989a47753\r\n\r\nStraight away I started getting this error about filters:\r\n\r\n```\r\nCameraModelFilterSet resolved field 'tags' with 'exact' lookup to an unrecognized field type TaggableManager. Try adding an override to 'Meta.filter_overrides'. See: https://django-filter.readthedocs.io/en/master/ref/filterset.html#customise-filter-generation-with-filter-overrides\r\n```\r\n\r\nI followed the advice in the URL in the error and specified `filter_overrides` in the pre-existing FilterSet as below, but this hasn't changed the error. Am I missing something? Thanks.\r\n\r\n```py\r\n# models.py\r\nfrom taggit.managers import TaggableManager\r\n\r\nclass CameraModel(models.Model):\r\n    manufacturer = models.ForeignKey(Manufacturer, on_delete=models.CASCADE, help_text='Manufacturer of this camera model')\r\n    model = models.CharField(help_text='The model name of the camera', max_length=45)\r\n    tags = TaggableManager()\r\n```\r\n\r\n```py\r\n# filters.py\r\nfrom django_filters import FilterSet, CharFilter\r\nfrom taggit.managers import TaggableManager\r\n\r\nclass CameraModelFilter(FilterSet):\r\n    class Meta:\r\n        model = CameraModel\r\n        fields = [\r\n            'manufacturer',\r\n            'mount',\r\n            'format',\r\n            'negative_size',\r\n            'body_type',\r\n        ]\r\n        exclude = ['tags']\r\n        filter_overrides = {\r\n            TaggableManager: {\r\n                'filter_class': CharFilter,\r\n            },\r\n        }\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/669", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/669/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/669/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/669/events", "html_url": "https://github.com/jazzband/django-taggit/issues/669", "id": 604941332, "node_id": "MDU6SXNzdWU2MDQ5NDEzMzI=", "number": 669, "title": "ModuleNotFoundError: No module named 'taggit'", "user": {"login": "rajvijay68", "id": 26388709, "node_id": "MDQ6VXNlcjI2Mzg4NzA5", "avatar_url": "https://avatars1.githubusercontent.com/u/26388709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rajvijay68", "html_url": "https://github.com/rajvijay68", "followers_url": "https://api.github.com/users/rajvijay68/followers", "following_url": "https://api.github.com/users/rajvijay68/following{/other_user}", "gists_url": "https://api.github.com/users/rajvijay68/gists{/gist_id}", "starred_url": "https://api.github.com/users/rajvijay68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rajvijay68/subscriptions", "organizations_url": "https://api.github.com/users/rajvijay68/orgs", "repos_url": "https://api.github.com/users/rajvijay68/repos", "events_url": "https://api.github.com/users/rajvijay68/events{/privacy}", "received_events_url": "https://api.github.com/users/rajvijay68/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-04-22T17:39:53Z", "updated_at": "2020-07-06T01:36:16Z", "closed_at": "2020-05-19T15:27:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Python 3.7\r\nDjango 3.0.3\r\n\r\nran `pip install django-taggit`\r\n\r\nInstalled successfully\r\n\r\nAdded 'taggit' to `INSTALLED_APPS` in `settings.py`\r\n\r\nStill getting the error \r\n\r\n`ModuleNotFoundError: No module named 'taggit'`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/664", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/664/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/664/events", "html_url": "https://github.com/jazzband/django-taggit/issues/664", "id": 569483045, "node_id": "MDU6SXNzdWU1Njk0ODMwNDU=", "number": 664, "title": "Fix simple typo: concurrecny -> concurrency", "user": {"login": "timgates42", "id": 47873678, "node_id": "MDQ6VXNlcjQ3ODczNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/47873678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timgates42", "html_url": "https://github.com/timgates42", "followers_url": "https://api.github.com/users/timgates42/followers", "following_url": "https://api.github.com/users/timgates42/following{/other_user}", "gists_url": "https://api.github.com/users/timgates42/gists{/gist_id}", "starred_url": "https://api.github.com/users/timgates42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timgates42/subscriptions", "organizations_url": "https://api.github.com/users/timgates42/orgs", "repos_url": "https://api.github.com/users/timgates42/repos", "events_url": "https://api.github.com/users/timgates42/events{/privacy}", "received_events_url": "https://api.github.com/users/timgates42/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-02-23T11:48:58Z", "updated_at": "2020-02-23T14:24:45Z", "closed_at": "2020-02-23T14:24:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is a small typo in taggit/models.py.\nShould read `concurrency` rather than `concurrecny`.\n\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/661", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/661/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/661/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/661/events", "html_url": "https://github.com/jazzband/django-taggit/issues/661", "id": 534513961, "node_id": "MDU6SXNzdWU1MzQ1MTM5NjE=", "number": 661, "title": "tag cloud not working on Django version 3", "user": {"login": "pythonbest", "id": 30675235, "node_id": "MDQ6VXNlcjMwNjc1MjM1", "avatar_url": "https://avatars1.githubusercontent.com/u/30675235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pythonbest", "html_url": "https://github.com/pythonbest", "followers_url": "https://api.github.com/users/pythonbest/followers", "following_url": "https://api.github.com/users/pythonbest/following{/other_user}", "gists_url": "https://api.github.com/users/pythonbest/gists{/gist_id}", "starred_url": "https://api.github.com/users/pythonbest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pythonbest/subscriptions", "organizations_url": "https://api.github.com/users/pythonbest/orgs", "repos_url": "https://api.github.com/users/pythonbest/repos", "events_url": "https://api.github.com/users/pythonbest/events{/privacy}", "received_events_url": "https://api.github.com/users/pythonbest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-08T09:17:44Z", "updated_at": "2020-05-10T07:33:00Z", "closed_at": "2020-05-10T07:33:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's probably because django-classy-tags has old codes.\r\nHowever django-classy-tags is likely no more maintained.\r\n\r\nWhat can i do for tag cloud function on Django 3 ?\r\nOr, can djago-taggit package solve this problem ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/643", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/643/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/643/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/643/events", "html_url": "https://github.com/jazzband/django-taggit/issues/643", "id": 512805464, "node_id": "MDU6SXNzdWU1MTI4MDU0NjQ=", "number": 643, "title": "method get_queryset()", "user": {"login": "podushka", "id": 37360073, "node_id": "MDQ6VXNlcjM3MzYwMDcz", "avatar_url": "https://avatars2.githubusercontent.com/u/37360073?v=4", "gravatar_id": "", "url": "https://api.github.com/users/podushka", "html_url": "https://github.com/podushka", "followers_url": "https://api.github.com/users/podushka/followers", "following_url": "https://api.github.com/users/podushka/following{/other_user}", "gists_url": "https://api.github.com/users/podushka/gists{/gist_id}", "starred_url": "https://api.github.com/users/podushka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/podushka/subscriptions", "organizations_url": "https://api.github.com/users/podushka/orgs", "repos_url": "https://api.github.com/users/podushka/repos", "events_url": "https://api.github.com/users/podushka/events{/privacy}", "received_events_url": "https://api.github.com/users/podushka/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-26T08:00:24Z", "updated_at": "2019-10-26T13:30:45Z", "closed_at": "2019-10-26T13:30:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I`m using django 2.2.6\r\n\r\nModel_name.tags.add(\"smthng\") return arror cause method \"get_query_set()\" in taggit/managers.py/_TaggableManger named like \"get_queryset()\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/642", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/642/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/642/events", "html_url": "https://github.com/jazzband/django-taggit/issues/642", "id": 509871243, "node_id": "MDU6SXNzdWU1MDk4NzEyNDM=", "number": 642, "title": "AttributeError: 'QuerySet' object has no attribute 'tags'", "user": {"login": "tuda2009", "id": 56377238, "node_id": "MDQ6VXNlcjU2Mzc3MjM4", "avatar_url": "https://avatars2.githubusercontent.com/u/56377238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tuda2009", "html_url": "https://github.com/tuda2009", "followers_url": "https://api.github.com/users/tuda2009/followers", "following_url": "https://api.github.com/users/tuda2009/following{/other_user}", "gists_url": "https://api.github.com/users/tuda2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/tuda2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tuda2009/subscriptions", "organizations_url": "https://api.github.com/users/tuda2009/orgs", "repos_url": "https://api.github.com/users/tuda2009/repos", "events_url": "https://api.github.com/users/tuda2009/events{/privacy}", "received_events_url": "https://api.github.com/users/tuda2009/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-21T10:23:41Z", "updated_at": "2019-10-21T10:30:55Z", "closed_at": "2019-10-21T10:30:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "from django.db import models\r\n\r\nfrom taggit.managers import TaggableManager\r\n\r\nclass Post(models.Model):\r\n    # ... fields here\r\n    tags = TaggableManager()\r\n\r\n$python3  manage.py  shell\r\n$from Post.models import Post\r\n$post=Post(title=\"test\")\r\n$post.save\r\n$post.tags.add(\"test\")\r\n$post.tags.all()\r\n###all is ok\r\n$post2=Post.objects.filter(id=1)\r\n$post2.tags.all()\r\n###then errors is:\r\n$Traceback (most recent call last):\r\n$  File \"<console>\", line 1, in <module>\r\n$AttributeError: 'QuerySet' object has no attribute 'tags'\r\n\r\n\r\npython 3.7.4\r\nDjango 2.2.6\r\ndjango-taggit 1.1.0   \r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/641", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/641/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/641/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/641/events", "html_url": "https://github.com/jazzband/django-taggit/issues/641", "id": 506545280, "node_id": "MDU6SXNzdWU1MDY1NDUyODA=", "number": 641, "title": "DataError when trying to create a tag which with a gt 100 length name ", "user": {"login": "ollie-zhang", "id": 56536125, "node_id": "MDQ6VXNlcjU2NTM2MTI1", "avatar_url": "https://avatars2.githubusercontent.com/u/56536125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie-zhang", "html_url": "https://github.com/ollie-zhang", "followers_url": "https://api.github.com/users/ollie-zhang/followers", "following_url": "https://api.github.com/users/ollie-zhang/following{/other_user}", "gists_url": "https://api.github.com/users/ollie-zhang/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie-zhang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie-zhang/subscriptions", "organizations_url": "https://api.github.com/users/ollie-zhang/orgs", "repos_url": "https://api.github.com/users/ollie-zhang/repos", "events_url": "https://api.github.com/users/ollie-zhang/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie-zhang/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-14T09:40:18Z", "updated_at": "2019-10-30T02:11:29Z", "closed_at": "2019-10-30T02:11:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "It will raise a DataError\uff0cwhen trying to create a tag which with a gt 100 length name . So can you add a check about the length of name or more columns and raise ValidationError.....? (I suggest in the clean method of forms.TagField  )", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/624", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/624/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/624/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/624/events", "html_url": "https://github.com/jazzband/django-taggit/issues/624", "id": 449637467, "node_id": "MDU6SXNzdWU0NDk2Mzc0Njc=", "number": 624, "title": "The Model._meta.virtual_fields attribute is removed in Django 2.0", "user": {"login": "DmytroLitvinov", "id": 16066485, "node_id": "MDQ6VXNlcjE2MDY2NDg1", "avatar_url": "https://avatars3.githubusercontent.com/u/16066485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DmytroLitvinov", "html_url": "https://github.com/DmytroLitvinov", "followers_url": "https://api.github.com/users/DmytroLitvinov/followers", "following_url": "https://api.github.com/users/DmytroLitvinov/following{/other_user}", "gists_url": "https://api.github.com/users/DmytroLitvinov/gists{/gist_id}", "starred_url": "https://api.github.com/users/DmytroLitvinov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DmytroLitvinov/subscriptions", "organizations_url": "https://api.github.com/users/DmytroLitvinov/orgs", "repos_url": "https://api.github.com/users/DmytroLitvinov/repos", "events_url": "https://api.github.com/users/DmytroLitvinov/events{/privacy}", "received_events_url": "https://api.github.com/users/DmytroLitvinov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-29T07:17:03Z", "updated_at": "2019-05-30T05:46:25Z", "closed_at": "2019-05-30T05:46:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`virtual_fields` attribute is removed in [Django 2.0](https://docs.djangoproject.com/en/2.2/releases/2.0/)\r\n\r\nhttps://github.com/jazzband/django-taggit/blob/f06b40c206e599a33b2a128e4091ff90fca8c4d6/taggit/managers.py#L550\r\n\r\nIf you need help with removing it to `private_fields` let me know I will prepare PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/622", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/622/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/622/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/622/events", "html_url": "https://github.com/jazzband/django-taggit/issues/622", "id": 448366303, "node_id": "MDU6SXNzdWU0NDgzNjYzMDM=", "number": 622, "title": "GenericTaggedItem.tags_for() no longer works on proxy models", "user": {"login": "mailbackwards", "id": 1697151, "node_id": "MDQ6VXNlcjE2OTcxNTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1697151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mailbackwards", "html_url": "https://github.com/mailbackwards", "followers_url": "https://api.github.com/users/mailbackwards/followers", "following_url": "https://api.github.com/users/mailbackwards/following{/other_user}", "gists_url": "https://api.github.com/users/mailbackwards/gists{/gist_id}", "starred_url": "https://api.github.com/users/mailbackwards/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mailbackwards/subscriptions", "organizations_url": "https://api.github.com/users/mailbackwards/orgs", "repos_url": "https://api.github.com/users/mailbackwards/repos", "events_url": "https://api.github.com/users/mailbackwards/events{/privacy}", "received_events_url": "https://api.github.com/users/mailbackwards/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-05-24T21:55:01Z", "updated_at": "2019-05-25T23:22:40Z", "closed_at": "2019-05-25T23:22:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "While upgrading taggit from 0.x, I discovered that [this commit](https://github.com/jazzband/django-taggit/commit/5c2d0425221fd15a160cdb5606be67a53128e7e9) changed the syntax for fetching through the TaggableManager in a way that breaks proxy models looking through generic tagged items. For instance, I have an `Article` model that is a proxy subclass of `Page`. When I run `page.tags.all()`, I see all of my tags, but the same page's proxy `article.tags.all()` yields 0 results. It looks like the `ContentType.object.get_for_model`, and especially its `for_concrete_model=True` argument, was crucial in order for proxy models to work.\r\n\r\nFor now I will work around this by writing my own `tags_for` method that reverts to the old behavior, but wanted to file an issue here since I did not see a note about proxy instances in the docs, or a note that this might be a breaking change. Thanks, let me know if I can help with anything more concrete.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/621", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/621/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/621/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/621/events", "html_url": "https://github.com/jazzband/django-taggit/issues/621", "id": 446133298, "node_id": "MDU6SXNzdWU0NDYxMzMyOTg=", "number": 621, "title": "I can't call tags", "user": {"login": "Eliotnand", "id": 44431797, "node_id": "MDQ6VXNlcjQ0NDMxNzk3", "avatar_url": "https://avatars2.githubusercontent.com/u/44431797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eliotnand", "html_url": "https://github.com/Eliotnand", "followers_url": "https://api.github.com/users/Eliotnand/followers", "following_url": "https://api.github.com/users/Eliotnand/following{/other_user}", "gists_url": "https://api.github.com/users/Eliotnand/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eliotnand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eliotnand/subscriptions", "organizations_url": "https://api.github.com/users/Eliotnand/orgs", "repos_url": "https://api.github.com/users/Eliotnand/repos", "events_url": "https://api.github.com/users/Eliotnand/events{/privacy}", "received_events_url": "https://api.github.com/users/Eliotnand/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1247088413, "node_id": "MDU6TGFiZWwxMjQ3MDg4NDEz", "url": "https://api.github.com/repos/jazzband/django-taggit/labels/question", "name": "question", "color": "20eadd", "default": true, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-20T13:58:03Z", "updated_at": "2019-05-22T05:05:26Z", "closed_at": "2019-05-22T05:05:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n#models.py\r\nfrom __future__ import unicode_literals\r\nfrom django.conf import settings\r\nfrom django.db import models\r\nfrom django.utils import timezone\r\nfrom taggit.managers import TaggableManager\r\nfrom martor.models import MartorField\r\nfrom django import forms\r\n\r\nclass Home(models.Model):\r\n    title = models.CharField(max_length=200)\r\n    text = MartorField()\r\n    file = models.FileField(upload_to='home_books/',blank=True,verbose_name=('\u0424\u0430\u0439\u043b'))\r\n    tags = TaggableManager()\r\n    img = models.ImageField(upload_to='home_img/',blank=True,verbose_name=('\u041a\u0430\u0440\u0442\u0438\u043d\u043a\u0430'),  default = 'none-pic/error.svg')\r\n    slug = models.SlugField(max_length=255, blank=False, verbose_name=('\u0421\u043b\u0430\u0433'))\r\n    created_date = models.DateTimeField(default=timezone.now)\r\n    class Meta:\r\n        ordering = ['-created_date']\r\n    def __str__(self):\r\n        return self.title\r\n    \r\n```\r\nIn my html\r\n    `{{posts.tags}}`\r\nHere I'm trying to show tags in html.\r\nHTML showing `home.Home.None`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/615", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/615/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/615/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/615/events", "html_url": "https://github.com/jazzband/django-taggit/issues/615", "id": 428886333, "node_id": "MDU6SXNzdWU0Mjg4ODYzMzM=", "number": 615, "title": "django taggit tag urls problem. please help!", "user": {"login": "Oratoria", "id": 28405556, "node_id": "MDQ6VXNlcjI4NDA1NTU2", "avatar_url": "https://avatars0.githubusercontent.com/u/28405556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Oratoria", "html_url": "https://github.com/Oratoria", "followers_url": "https://api.github.com/users/Oratoria/followers", "following_url": "https://api.github.com/users/Oratoria/following{/other_user}", "gists_url": "https://api.github.com/users/Oratoria/gists{/gist_id}", "starred_url": "https://api.github.com/users/Oratoria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Oratoria/subscriptions", "organizations_url": "https://api.github.com/users/Oratoria/orgs", "repos_url": "https://api.github.com/users/Oratoria/repos", "events_url": "https://api.github.com/users/Oratoria/events{/privacy}", "received_events_url": "https://api.github.com/users/Oratoria/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-03T17:25:33Z", "updated_at": "2019-04-04T01:01:44Z", "closed_at": "2019-04-04T01:01:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a problem. i cant sent a right url when clicked on a tag link. it always show 404 error pages. please help. sorry for my english.\r\n\r\nmy index.html\r\n```\r\n<section>\r\n        <ul>\r\n            <li>Tags:\r\n                {% for menu in menu %}\r\n                    {% for tag in menu.tags.all %}\r\n                       <a href=\"{{ siteUrl }}tags/{{ tag }}\">{{ tag }}</a>\r\n                    {% endfor %}\r\n                {% endfor %}\r\n            </li>\r\n        </ul>\r\n\r\n</section>\r\n```\r\n\r\nwhen i click on a tag, it will link like .../tags/<tag>. but it shown 404 page not found.\r\n\r\nurls.py\r\n```\r\nfrom django.urls import path\r\nfrom . import views\r\nfrom .views import TagListView, FoodListView\r\n\r\nurlpatterns = [\r\n    path('', views.index),\r\n    path(r'^tags/(?P<tag>[-\\w]+)/$', FoodListView.as_view(), name=\"menu_list\"),\r\n    path(r'^tags/(?P<slug>[a-z0-9_-]+)', TagListView.as_view(), name=\"tag-list\",)\r\n]\r\n```\r\n\r\nand views.py\r\n```\r\nfrom django.http import  HttpResponse\r\nfrom django.shortcuts import render\r\nfrom django.views.generic import ListView\r\nfrom .models import Menu\r\nfrom taggit.models import Tag\r\nfrom django.shortcuts import render, get_object_or_404\r\n\r\n\r\ndef index(request):\r\n    menu = Menu.objects.all()\r\n    return render(request, 'index.html', {'menu': menu})\r\n\r\n\r\nclass FoodListView(ListView):\r\n    template_name = \"list.html\"\r\n    context_object_name = \"food\"\r\n\r\n\r\nclass TagListView(ListView):\r\n    template_name = \"list.html\"\r\n\r\n    def get_queryset(self):\r\n        return Menu.objects.filter(tags__slug=self.kwargs.get(\"slug\")).all()\r\n\r\n    def get_context_data(self, **kwargs):\r\n        context = super(TagListView, self).get_context_data(**kwargs)\r\n        context[\"tag\"] = self.kwargs.get(\"slug\")\r\n        return context\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/614", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/614/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/614/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/614/events", "html_url": "https://github.com/jazzband/django-taggit/issues/614", "id": 428521255, "node_id": "MDU6SXNzdWU0Mjg1MjEyNTU=", "number": 614, "title": "Online documentation changelog not up to date", "user": {"login": "KyeRussell", "id": 488182, "node_id": "MDQ6VXNlcjQ4ODE4Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/488182?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KyeRussell", "html_url": "https://github.com/KyeRussell", "followers_url": "https://api.github.com/users/KyeRussell/followers", "following_url": "https://api.github.com/users/KyeRussell/following{/other_user}", "gists_url": "https://api.github.com/users/KyeRussell/gists{/gist_id}", "starred_url": "https://api.github.com/users/KyeRussell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KyeRussell/subscriptions", "organizations_url": "https://api.github.com/users/KyeRussell/orgs", "repos_url": "https://api.github.com/users/KyeRussell/repos", "events_url": "https://api.github.com/users/KyeRussell/events{/privacy}", "received_events_url": "https://api.github.com/users/KyeRussell/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-03T01:38:51Z", "updated_at": "2019-04-23T15:09:21Z", "closed_at": "2019-04-23T15:09:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "The changelog page of the online documentation (https://django-taggit.readthedocs.io/en/latest/changelog.html) appears to be missing notes for all versions released prior to `0.23.0`. Whereas according to PyPI there has been a few releases since them.\r\n\r\nIs there a reason for this, or was it just oversight?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/613", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/613/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/613/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/613/events", "html_url": "https://github.com/jazzband/django-taggit/issues/613", "id": 428041521, "node_id": "MDU6SXNzdWU0MjgwNDE1MjE=", "number": 613, "title": " No module named 'taggit'", "user": {"login": "Oratoria", "id": 28405556, "node_id": "MDQ6VXNlcjI4NDA1NTU2", "avatar_url": "https://avatars0.githubusercontent.com/u/28405556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Oratoria", "html_url": "https://github.com/Oratoria", "followers_url": "https://api.github.com/users/Oratoria/followers", "following_url": "https://api.github.com/users/Oratoria/following{/other_user}", "gists_url": "https://api.github.com/users/Oratoria/gists{/gist_id}", "starred_url": "https://api.github.com/users/Oratoria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Oratoria/subscriptions", "organizations_url": "https://api.github.com/users/Oratoria/orgs", "repos_url": "https://api.github.com/users/Oratoria/repos", "events_url": "https://api.github.com/users/Oratoria/events{/privacy}", "received_events_url": "https://api.github.com/users/Oratoria/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-02T06:13:07Z", "updated_at": "2019-04-02T17:36:36Z", "closed_at": "2019-04-02T17:36:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "I installed Django-taggit by pip. My Django version is 2.1. and my Python version is 3.7.\r\n\r\nWhen i try to put \"taggit\" in installed app in setting.py, I got an error. \r\nModuleNotFoundError: No module named 'taggit'\r\n\r\nplease help, Thank you.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/611", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/611/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/611/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/611/events", "html_url": "https://github.com/jazzband/django-taggit/issues/611", "id": 426429297, "node_id": "MDU6SXNzdWU0MjY0MjkyOTc=", "number": 611, "title": "Update \"latest release\" at GitHub", "user": {"login": "DmytroLitvinov", "id": 16066485, "node_id": "MDQ6VXNlcjE2MDY2NDg1", "avatar_url": "https://avatars3.githubusercontent.com/u/16066485?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DmytroLitvinov", "html_url": "https://github.com/DmytroLitvinov", "followers_url": "https://api.github.com/users/DmytroLitvinov/followers", "following_url": "https://api.github.com/users/DmytroLitvinov/following{/other_user}", "gists_url": "https://api.github.com/users/DmytroLitvinov/gists{/gist_id}", "starred_url": "https://api.github.com/users/DmytroLitvinov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DmytroLitvinov/subscriptions", "organizations_url": "https://api.github.com/users/DmytroLitvinov/orgs", "repos_url": "https://api.github.com/users/DmytroLitvinov/repos", "events_url": "https://api.github.com/users/DmytroLitvinov/events{/privacy}", "received_events_url": "https://api.github.com/users/DmytroLitvinov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-28T11:01:01Z", "updated_at": "2019-03-28T13:36:04Z", "closed_at": "2019-03-28T13:36:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Please, update to latest release 1.1.0 version on GitHub.\r\nhttps://github.com/jazzband/django-taggit/releases", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/600", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/600/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/600/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/600/events", "html_url": "https://github.com/jazzband/django-taggit/issues/600", "id": 421289061, "node_id": "MDU6SXNzdWU0MjEyODkwNjE=", "number": 600, "title": "No matching distribution found for dajngo_taggit", "user": {"login": "mohamed591195", "id": 29418014, "node_id": "MDQ6VXNlcjI5NDE4MDE0", "avatar_url": "https://avatars3.githubusercontent.com/u/29418014?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mohamed591195", "html_url": "https://github.com/mohamed591195", "followers_url": "https://api.github.com/users/mohamed591195/followers", "following_url": "https://api.github.com/users/mohamed591195/following{/other_user}", "gists_url": "https://api.github.com/users/mohamed591195/gists{/gist_id}", "starred_url": "https://api.github.com/users/mohamed591195/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mohamed591195/subscriptions", "organizations_url": "https://api.github.com/users/mohamed591195/orgs", "repos_url": "https://api.github.com/users/mohamed591195/repos", "events_url": "https://api.github.com/users/mohamed591195/events{/privacy}", "received_events_url": "https://api.github.com/users/mohamed591195/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1240410237, "node_id": "MDU6TGFiZWwxMjQwNDEwMjM3", "url": "https://api.github.com/repos/jazzband/django-taggit/labels/needsinfo", "name": "needsinfo", "color": "ce3e0a", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-14T23:28:37Z", "updated_at": "2019-03-17T05:27:12Z", "closed_at": "2019-03-15T12:56:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "this error appears when i am trying to install it via pip \r\n\r\nCould not find a version that satisfies the requirement dajngo_taggit (from versions: )\r\nNo matching distribution found for dajngo_taggit\r\ni don't know the reason \r\n\r\npip 19.0.3\r\npython 3.7\r\nmanjaro linux based on arch --updated for the date of this post\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/596", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/596/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/596/events", "html_url": "https://github.com/jazzband/django-taggit/issues/596", "id": 416348532, "node_id": "MDU6SXNzdWU0MTYzNDg1MzI=", "number": 596, "title": "Admin widget error in Django 2.1", "user": {"login": "ahknight", "id": 101272, "node_id": "MDQ6VXNlcjEwMTI3Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/101272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahknight", "html_url": "https://github.com/ahknight", "followers_url": "https://api.github.com/users/ahknight/followers", "following_url": "https://api.github.com/users/ahknight/following{/other_user}", "gists_url": "https://api.github.com/users/ahknight/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahknight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahknight/subscriptions", "organizations_url": "https://api.github.com/users/ahknight/orgs", "repos_url": "https://api.github.com/users/ahknight/repos", "events_url": "https://api.github.com/users/ahknight/events{/privacy}", "received_events_url": "https://api.github.com/users/ahknight/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1240410237, "node_id": "MDU6TGFiZWwxMjQwNDEwMjM3", "url": "https://api.github.com/repos/jazzband/django-taggit/labels/needsinfo", "name": "needsinfo", "color": "ce3e0a", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2019-03-02T02:52:58Z", "updated_at": "2019-12-04T01:45:37Z", "closed_at": "2019-12-04T01:45:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using the admin widget in Django 2.1 I get the following error:\r\n\r\n`'TypeError: render() got an unexpected keyword argument 'renderer'`\r\n\r\nBy process of elimination, when I remove `tags` from the `fieldset` for my model the admin suddenly works again.\r\n\r\nDjango 2.1 and django-taggit 0.24.0\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/core/handlers/base.py\", line 156, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/core/handlers/base.py\", line 154, in _get_response\r\n    response = response.render()\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/response.py\", line 106, in render\r\n    self.content = self.rendered_content\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/response.py\", line 83, in rendered_content\r\n    content = template.render(context, self._request)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/backends/django.py\", line 61, in render\r\n    return self.template.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 171, in render\r\n    return self._render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 163, in _render\r\n    return self.nodelist.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 937, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 904, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/loader_tags.py\", line 150, in render\r\n    return compiled_parent._render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 163, in _render\r\n    return self.nodelist.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 937, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 904, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/loader_tags.py\", line 150, in render\r\n    return compiled_parent._render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 163, in _render\r\n    return self.nodelist.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 937, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 904, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/loader_tags.py\", line 62, in render\r\n    result = block.nodelist.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 937, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 904, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/loader_tags.py\", line 62, in render\r\n    result = block.nodelist.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 937, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 904, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/defaulttags.py\", line 209, in render\r\n    nodelist.append(node.render_annotated(context))\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 904, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/loader_tags.py\", line 188, in render\r\n    return template.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 173, in render\r\n    return self._render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 163, in _render\r\n    return self.nodelist.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 937, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 904, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/defaulttags.py\", line 209, in render\r\n    nodelist.append(node.render_annotated(context))\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 904, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/defaulttags.py\", line 209, in render\r\n    nodelist.append(node.render_annotated(context))\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 904, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/defaulttags.py\", line 309, in render\r\n    return nodelist.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 937, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 904, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/defaulttags.py\", line 309, in render\r\n    return nodelist.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 937, in render\r\n    bit = node.render_annotated(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 904, in render_annotated\r\n    return self.render(context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 993, in render\r\n    return render_value_in_context(output, context)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/template/base.py\", line 972, in render_value_in_context\r\n    value = str(value)\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/utils/html.py\", line 397, in <lambda>\r\n    klass.__str__ = lambda self: mark_safe(klass_str(self))\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/forms/boundfield.py\", line 33, in __str__\r\n    return self.as_widget()\r\n  File \"/Users/ahknight/.virtualenvs/milton/lib/python3.7/site-packages/Django-2.1.7-py3.7.egg/django/forms/boundfield.py\", line 93, in as_widget\r\n    renderer=self.form.renderer,\r\nTypeError: render() got an unexpected keyword argument 'renderer'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/587", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/587/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/587/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/587/events", "html_url": "https://github.com/jazzband/django-taggit/issues/587", "id": 408898847, "node_id": "MDU6SXNzdWU0MDg4OTg4NDc=", "number": 587, "title": "Release soon please so we can get Django 2.1 support", "user": {"login": "collinanderson", "id": 129234, "node_id": "MDQ6VXNlcjEyOTIzNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/129234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/collinanderson", "html_url": "https://github.com/collinanderson", "followers_url": "https://api.github.com/users/collinanderson/followers", "following_url": "https://api.github.com/users/collinanderson/following{/other_user}", "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}", "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions", "organizations_url": "https://api.github.com/users/collinanderson/orgs", "repos_url": "https://api.github.com/users/collinanderson/repos", "events_url": "https://api.github.com/users/collinanderson/events{/privacy}", "received_events_url": "https://api.github.com/users/collinanderson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-11T17:43:02Z", "updated_at": "2019-02-13T00:27:58Z", "closed_at": "2019-02-13T00:27:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi All,\r\n\r\nCould you please make a new release? I can't upgrade to Django 2.1 until django-taggit releases, and Django 2.2 is almost out which means my Django 2.0 version will be unsupported soon. There are some django 2.1 issues that have been fixed since the latest version 0.22.2 (released in 2017)\r\n\r\nThanks,\r\nCollin\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/576", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/576/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/576/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/576/events", "html_url": "https://github.com/jazzband/django-taggit/issues/576", "id": 399680330, "node_id": "MDU6SXNzdWUzOTk2ODAzMzA=", "number": 576, "title": "TaggableManager has a race condition", "user": {"login": "mixxorz", "id": 3102758, "node_id": "MDQ6VXNlcjMxMDI3NTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3102758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mixxorz", "html_url": "https://github.com/mixxorz", "followers_url": "https://api.github.com/users/mixxorz/followers", "following_url": "https://api.github.com/users/mixxorz/following{/other_user}", "gists_url": "https://api.github.com/users/mixxorz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mixxorz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mixxorz/subscriptions", "organizations_url": "https://api.github.com/users/mixxorz/orgs", "repos_url": "https://api.github.com/users/mixxorz/repos", "events_url": "https://api.github.com/users/mixxorz/events{/privacy}", "received_events_url": "https://api.github.com/users/mixxorz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-16T07:29:30Z", "updated_at": "2019-02-20T02:25:04Z", "closed_at": "2019-02-20T02:25:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Specifically, in the `_to_taggable_model_instances` method.\r\n\r\nhttps://github.com/alex/django-taggit/blob/d4b6f1104de2d9afe6ac4232fccb9546f496f41e/taggit/managers.py#L188-L194\r\n\r\nIf a new tag is added to two TaggedItems at the same time, `.create` will raise an IntegrityError complaining about the uniqueness constraint.\r\n\r\nThe fix is to rewrite this section using `get_or_create` which handles this race condition.\r\n\r\nI will submit a PR shortly.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/574", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/574/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/574/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/574/events", "html_url": "https://github.com/jazzband/django-taggit/issues/574", "id": 392285317, "node_id": "MDU6SXNzdWUzOTIyODUzMTc=", "number": 574, "title": "Changing tagging permissions", "user": {"login": "bbaker6225", "id": 14864970, "node_id": "MDQ6VXNlcjE0ODY0OTcw", "avatar_url": "https://avatars2.githubusercontent.com/u/14864970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bbaker6225", "html_url": "https://github.com/bbaker6225", "followers_url": "https://api.github.com/users/bbaker6225/followers", "following_url": "https://api.github.com/users/bbaker6225/following{/other_user}", "gists_url": "https://api.github.com/users/bbaker6225/gists{/gist_id}", "starred_url": "https://api.github.com/users/bbaker6225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bbaker6225/subscriptions", "organizations_url": "https://api.github.com/users/bbaker6225/orgs", "repos_url": "https://api.github.com/users/bbaker6225/repos", "events_url": "https://api.github.com/users/bbaker6225/events{/privacy}", "received_events_url": "https://api.github.com/users/bbaker6225/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1240410237, "node_id": "MDU6TGFiZWwxMjQwNDEwMjM3", "url": "https://api.github.com/repos/jazzband/django-taggit/labels/needsinfo", "name": "needsinfo", "color": "ce3e0a", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-18T18:43:13Z", "updated_at": "2019-02-21T01:57:23Z", "closed_at": "2019-02-21T01:57:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I see in my admin page that django-taggit supports permissions for adding, changing, and deleting tags as well as tag items. Is there a guide for how to change this on a custom basis? For example, how could I configure this so only certain groups of staff users could add a new tag, but they could add existing tags to a model that supports tagging.\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/550", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/550/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/550/events", "html_url": "https://github.com/jazzband/django-taggit/issues/550", "id": 380000094, "node_id": "MDU6SXNzdWUzODAwMDAwOTQ=", "number": 550, "title": "What was the fix? I am having the same issue right now", "user": {"login": "gnahum12345", "id": 7614179, "node_id": "MDQ6VXNlcjc2MTQxNzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/7614179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnahum12345", "html_url": "https://github.com/gnahum12345", "followers_url": "https://api.github.com/users/gnahum12345/followers", "following_url": "https://api.github.com/users/gnahum12345/following{/other_user}", "gists_url": "https://api.github.com/users/gnahum12345/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnahum12345/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnahum12345/subscriptions", "organizations_url": "https://api.github.com/users/gnahum12345/orgs", "repos_url": "https://api.github.com/users/gnahum12345/repos", "events_url": "https://api.github.com/users/gnahum12345/events{/privacy}", "received_events_url": "https://api.github.com/users/gnahum12345/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-12T23:56:39Z", "updated_at": "2018-11-22T05:43:18Z", "closed_at": "2018-11-22T05:43:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "_Originally posted by @gnahum12345 in https://github.com/alex/django-taggit/issues/484#issuecomment-438075609_", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/546", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/546/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/546/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/546/events", "html_url": "https://github.com/jazzband/django-taggit/issues/546", "id": 366174827, "node_id": "MDU6SXNzdWUzNjYxNzQ4Mjc=", "number": 546, "title": "render() got an unexpected keyword argument 'renderer", "user": {"login": "abdoulmoumouni", "id": 20256821, "node_id": "MDQ6VXNlcjIwMjU2ODIx", "avatar_url": "https://avatars2.githubusercontent.com/u/20256821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abdoulmoumouni", "html_url": "https://github.com/abdoulmoumouni", "followers_url": "https://api.github.com/users/abdoulmoumouni/followers", "following_url": "https://api.github.com/users/abdoulmoumouni/following{/other_user}", "gists_url": "https://api.github.com/users/abdoulmoumouni/gists{/gist_id}", "starred_url": "https://api.github.com/users/abdoulmoumouni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abdoulmoumouni/subscriptions", "organizations_url": "https://api.github.com/users/abdoulmoumouni/orgs", "repos_url": "https://api.github.com/users/abdoulmoumouni/repos", "events_url": "https://api.github.com/users/abdoulmoumouni/events{/privacy}", "received_events_url": "https://api.github.com/users/abdoulmoumouni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-10-03T04:52:41Z", "updated_at": "2019-01-30T14:18:11Z", "closed_at": "2019-01-30T14:18:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n\r\n{% for field in line %}\r\n--\r\n<div{% if not line.fields\\|length_is:'1' %} class=\"fieldBox{% if field.field.name %} field-{{ field.field.name }}{% endif %}{% if not field.is_readonly and field.errors %} errors{% endif %}{% if field.field.is_hidden %} hidden{% endif %}\"{% elif field.is_checkbox %} class=\"checkbox-row\"{% endif %}>\r\n{% if not line.fields\\|length_is:'1' and not field.is_readonly %}{{ field.errors }}{% endif %}\r\n{% if field.is_checkbox %}\r\n{{ field.field }}{{ field.label_tag }}\r\n{% else %}\r\n{{ field.label_tag }}\r\n{% if field.is_readonly %}\r\n<div class=\"readonly\">{{ field.contents }}</div>\r\n{% else %}\r\n{{ field.field }}\r\n{% endif %}\r\n{% endif %}\r\n{% if field.field.help_text %}\r\n<div class=\"help\">{{ field.field.help_text\\|safe }}</div>\r\n{% endif %}\r\n</div>\r\n{% endfor %}\r\n</div>\r\n{% endfor %}\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/545", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/545/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/545/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/545/events", "html_url": "https://github.com/jazzband/django-taggit/issues/545", "id": 362907166, "node_id": "MDU6SXNzdWUzNjI5MDcxNjY=", "number": 545, "title": "Auto delete tag after deleting post", "user": {"login": "saileshkush95", "id": 28560875, "node_id": "MDQ6VXNlcjI4NTYwODc1", "avatar_url": "https://avatars3.githubusercontent.com/u/28560875?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saileshkush95", "html_url": "https://github.com/saileshkush95", "followers_url": "https://api.github.com/users/saileshkush95/followers", "following_url": "https://api.github.com/users/saileshkush95/following{/other_user}", "gists_url": "https://api.github.com/users/saileshkush95/gists{/gist_id}", "starred_url": "https://api.github.com/users/saileshkush95/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saileshkush95/subscriptions", "organizations_url": "https://api.github.com/users/saileshkush95/orgs", "repos_url": "https://api.github.com/users/saileshkush95/repos", "events_url": "https://api.github.com/users/saileshkush95/events{/privacy}", "received_events_url": "https://api.github.com/users/saileshkush95/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-23T02:23:14Z", "updated_at": "2018-09-24T03:02:52Z", "closed_at": "2018-09-24T03:02:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to delete tag automatically if there no any post related to the tags.\r\nPlease help me..", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/535", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/535/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/535/events", "html_url": "https://github.com/jazzband/django-taggit/issues/535", "id": 347286574, "node_id": "MDU6SXNzdWUzNDcyODY1NzQ=", "number": 535, "title": "In django 2.1 TagWidget fails to render due to unexpected keyword argument", "user": {"login": "andrlik", "id": 214065, "node_id": "MDQ6VXNlcjIxNDA2NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/214065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrlik", "html_url": "https://github.com/andrlik", "followers_url": "https://api.github.com/users/andrlik/followers", "following_url": "https://api.github.com/users/andrlik/following{/other_user}", "gists_url": "https://api.github.com/users/andrlik/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrlik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrlik/subscriptions", "organizations_url": "https://api.github.com/users/andrlik/orgs", "repos_url": "https://api.github.com/users/andrlik/repos", "events_url": "https://api.github.com/users/andrlik/events{/privacy}", "received_events_url": "https://api.github.com/users/andrlik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-08-03T07:20:02Z", "updated_at": "2018-08-06T00:37:09Z", "closed_at": "2018-08-06T00:37:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nself = <django.forms.boundfield.BoundField object at 0x10a958f28>, widget = <taggit.forms.TagWidget object at 0x10a958ef0>\r\nattrs = {'id': 'id_tags'}, only_initial = False\r\n\r\n    def as_widget(self, widget=None, attrs=None, only_initial=False):\r\n        \"\"\"\r\n            Render the field by rendering the passed widget, adding any HTML\r\n            attributes passed as attrs. If a widget isn't specified, use the\r\n            field's default widget.\r\n            \"\"\"\r\n        widget = widget or self.field.widget\r\n        if self.field.localize:\r\n            widget.is_localized = True\r\n        attrs = attrs or {}\r\n        attrs = self.build_widget_attrs(attrs, widget)\r\n        if self.auto_id and 'id' not in widget.attrs:\r\n            attrs.setdefault('id', self.html_initial_id if only_initial else self.auto_id)\r\n        return widget.render(\r\n            name=self.html_initial_name if only_initial else self.html_name,\r\n            value=self.value(),\r\n            attrs=attrs,\r\n>           renderer=self.form.renderer,\r\n        )\r\nE       TypeError: render() got an unexpected keyword argument 'renderer'\r\n\r\n.tox/py36-django21/lib/python3.6/site-packages/django/forms/boundfield.py:93: TypeError\r\n\r\n\r\nThe fix is to change widget's render function to accept `renderer` as an argument and then based on Django version, pass that as well to `super()` call.\r\n\r\nThere are multiple valid approaches already submitted that could work with this such as PR #518 , PR #505 , or PR #534. However, there aren't any issues for them, so creating one here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/532", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/532/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/532/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/532/events", "html_url": "https://github.com/jazzband/django-taggit/issues/532", "id": 320034150, "node_id": "MDU6SXNzdWUzMjAwMzQxNTA=", "number": 532, "title": "no such table: django_content_type when starting new project in tags.most_common()", "user": {"login": "AllanNozomu", "id": 8979038, "node_id": "MDQ6VXNlcjg5NzkwMzg=", "avatar_url": "https://avatars1.githubusercontent.com/u/8979038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AllanNozomu", "html_url": "https://github.com/AllanNozomu", "followers_url": "https://api.github.com/users/AllanNozomu/followers", "following_url": "https://api.github.com/users/AllanNozomu/following{/other_user}", "gists_url": "https://api.github.com/users/AllanNozomu/gists{/gist_id}", "starred_url": "https://api.github.com/users/AllanNozomu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AllanNozomu/subscriptions", "organizations_url": "https://api.github.com/users/AllanNozomu/orgs", "repos_url": "https://api.github.com/users/AllanNozomu/repos", "events_url": "https://api.github.com/users/AllanNozomu/events{/privacy}", "received_events_url": "https://api.github.com/users/AllanNozomu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-03T18:39:44Z", "updated_at": "2019-03-16T02:21:27Z", "closed_at": "2019-03-15T12:55:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was working in a project using django_rest_framework and taggit. But I switched computers and I needed to reinstall the database. But, when I tried to run `./manage.py migrate` to install the migrations, this error appeared: \r\n\r\nI am using python 3\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/taggit/managers.py\", line 94, in get_queryset\r\n    return self.instance._prefetched_objects_cache[self.prefetch_cache_name]\r\nAttributeError: 'NoneType' object has no attribute '_prefetched_objects_cache'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/backends/utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/backends/sqlite3/base.py\", line 303, in execute\r\n    return Database.Cursor.execute(self, query, params)\r\nsqlite3.OperationalError: no such table: django_content_type\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"./manage.py\", line 10, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/core/management/__init__.py\", line 371, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/core/management/__init__.py\", line 365, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/core/management/base.py\", line 288, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/core/management/base.py\", line 332, in execute\r\n    self.check()\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/core/management/base.py\", line 364, in check\r\n    include_deployment_checks=include_deployment_checks,\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/core/management/base.py\", line 351, in _run_checks\r\n    return checks.run_checks(**kwargs)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/core/checks/registry.py\", line 73, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/core/checks/urls.py\", line 13, in check_url_config\r\n    return check_resolver(resolver)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/core/checks/urls.py\", line 23, in check_resolver\r\n    return check_method()\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/urls/resolvers.py\", line 397, in check\r\n    for pattern in self.url_patterns:\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/utils/functional.py\", line 36, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/urls/resolvers.py\", line 536, in url_patterns\r\n    patterns = getattr(self.urlconf_module, \"urlpatterns\", self.urlconf_module)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/utils/functional.py\", line 36, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/urls/resolvers.py\", line 529, in urlconf_module\r\n    return import_module(self.urlconf_name)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"/home/allan/Documents/taggit-test/taggit_test/taggit_test/urls.py\", line 19, in <module>\r\n    from products import views\r\n  File \"/home/allan/Documents/taggit-test/taggit_test/products/views.py\", line 6, in <module>\r\n    class TagViewSet(viewsets.ModelViewSet):\r\n  File \"/home/allan/Documents/taggit-test/taggit_test/products/views.py\", line 7, in TagViewSet\r\n    queryset = Product.tags.most_common()\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/taggit/managers.py\", line 317, in most_common\r\n    queryset = self.get_queryset(extra_filters).annotate(\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/taggit/managers.py\", line 97, in get_queryset\r\n    return self.through.tags_for(self.model, self.instance, **kwargs)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/taggit/models.py\", line 177, in tags_for\r\n    ct = ContentType.objects.get_for_model(model)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/contrib/contenttypes/models.py\", line 51, in get_for_model\r\n    ct = self.get(app_label=opts.app_label, model=opts.model_name)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/models/manager.py\", line 82, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/models/query.py\", line 397, in get\r\n    num = len(clone)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/models/query.py\", line 254, in __len__\r\n    self._fetch_all()\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/models/query.py\", line 1179, in _fetch_all\r\n    self._result_cache = list(self._iterable_class(self))\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/models/query.py\", line 53, in __iter__\r\n    results = compiler.execute_sql(chunked_fetch=self.chunked_fetch, chunk_size=self.chunk_size)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/models/sql/compiler.py\", line 1066, in execute_sql\r\n    cursor.execute(sql, params)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/backends/utils.py\", line 100, in execute\r\n    return super().execute(sql, params)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/backends/utils.py\", line 68, in execute\r\n    return self._execute_with_wrappers(sql, params, many=False, executor=self._execute)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/backends/utils.py\", line 77, in _execute_with_wrappers\r\n    return executor(sql, params, many, context)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/backends/utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/utils.py\", line 89, in __exit__\r\n    raise dj_exc_value.with_traceback(traceback) from exc_value\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/backends/utils.py\", line 85, in _execute\r\n    return self.cursor.execute(sql, params)\r\n  File \"/home/allan/Documents/taggit-test/env/lib/python3.5/site-packages/django/db/backends/sqlite3/base.py\", line 303, in execute\r\n    return Database.Cursor.execute(self, query, params)\r\ndjango.db.utils.OperationalError: no such table: django_content_type\r\n```\r\n\r\nWhat I noticed: `Product.tags.most_common()` is causing this problem somehow. I can't even run `./manage.py showmigrations`. \r\n\r\n**WORKAROUND**: If I just change this command by `Products.objects.all()` (just to not use this most_common function), the error disappears and it is now possible to migrate. Then, just change back to most_common function.\r\n\r\n Thanks for considering my request.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/528", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/528/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/528/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/528/events", "html_url": "https://github.com/jazzband/django-taggit/issues/528", "id": 306758579, "node_id": "MDU6SXNzdWUzMDY3NTg1Nzk=", "number": 528, "title": "Form Always Changed", "user": {"login": "realsby", "id": 1173351, "node_id": "MDQ6VXNlcjExNzMzNTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1173351?v=4", "gravatar_id": "", "url": "https://api.github.com/users/realsby", "html_url": "https://github.com/realsby", "followers_url": "https://api.github.com/users/realsby/followers", "following_url": "https://api.github.com/users/realsby/following{/other_user}", "gists_url": "https://api.github.com/users/realsby/gists{/gist_id}", "starred_url": "https://api.github.com/users/realsby/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/realsby/subscriptions", "organizations_url": "https://api.github.com/users/realsby/orgs", "repos_url": "https://api.github.com/users/realsby/repos", "events_url": "https://api.github.com/users/realsby/events{/privacy}", "received_events_url": "https://api.github.com/users/realsby/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-20T07:45:08Z", "updated_at": "2018-08-06T13:43:58Z", "closed_at": "2018-08-06T13:43:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I check a form which have TaggableManager, form.changed_data always return ['tags'] even if not changed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/527", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/527/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/527/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/527/events", "html_url": "https://github.com/jazzband/django-taggit/issues/527", "id": 304049353, "node_id": "MDU6SXNzdWUzMDQwNDkzNTM=", "number": 527, "title": "how to create tags programmatically?", "user": {"login": "technolingo", "id": 11096690, "node_id": "MDQ6VXNlcjExMDk2Njkw", "avatar_url": "https://avatars1.githubusercontent.com/u/11096690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/technolingo", "html_url": "https://github.com/technolingo", "followers_url": "https://api.github.com/users/technolingo/followers", "following_url": "https://api.github.com/users/technolingo/following{/other_user}", "gists_url": "https://api.github.com/users/technolingo/gists{/gist_id}", "starred_url": "https://api.github.com/users/technolingo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/technolingo/subscriptions", "organizations_url": "https://api.github.com/users/technolingo/orgs", "repos_url": "https://api.github.com/users/technolingo/repos", "events_url": "https://api.github.com/users/technolingo/events{/privacy}", "received_events_url": "https://api.github.com/users/technolingo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-10T07:15:40Z", "updated_at": "2018-04-04T04:55:33Z", "closed_at": "2018-04-04T04:55:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to create tags programmatically? For example, in views.\r\n\r\n```\r\ntags_input = \"hello, foo, bar, ok\"\r\ntagset = tag_parser(tags_input) # ['bar', 'foo', 'hello', 'ok']\r\n\r\nobj = Post(title=title, tags=tagset)\r\nobj.save()\r\n```\r\n\r\nThe above snippet doesn't seem to work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/520", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/520/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/520/events", "html_url": "https://github.com/jazzband/django-taggit/issues/520", "id": 284112475, "node_id": "MDU6SXNzdWUyODQxMTI0NzU=", "number": 520, "title": "Release django 2.0, mailing list and maintenance", "user": {"login": "nemesisdesign", "id": 841044, "node_id": "MDQ6VXNlcjg0MTA0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/841044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nemesisdesign", "html_url": "https://github.com/nemesisdesign", "followers_url": "https://api.github.com/users/nemesisdesign/followers", "following_url": "https://api.github.com/users/nemesisdesign/following{/other_user}", "gists_url": "https://api.github.com/users/nemesisdesign/gists{/gist_id}", "starred_url": "https://api.github.com/users/nemesisdesign/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nemesisdesign/subscriptions", "organizations_url": "https://api.github.com/users/nemesisdesign/orgs", "repos_url": "https://api.github.com/users/nemesisdesign/repos", "events_url": "https://api.github.com/users/nemesisdesign/events{/privacy}", "received_events_url": "https://api.github.com/users/nemesisdesign/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-12-22T09:18:23Z", "updated_at": "2019-01-30T14:31:05Z", "closed_at": "2019-01-30T14:31:05Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "To the attention of maintainers @frewsxcv @alex (not aware who else is maintainer).\r\n\r\n- can we release a new version on pypi? I merged some patches that were highly demanded lately\r\n- I sent an email to the mailing list of django-taggit a few days ago to ask this but I believe is held for moderation - I don't think this moderation filter is a good thing if moderators don't have time to review it in a timely manner, I propose to turn it off\r\n- can we make it a bit more clear somewhere regarding to who has github write access and who has pypi write access? This way occasional contributors can ping the right people to ping when they think something should be addressed urgently\r\n\r\nHave a happy winter / Christmas Holiday!\r\n\r\nBest regards\r\nFederico", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/511", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/511/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/511/events", "html_url": "https://github.com/jazzband/django-taggit/issues/511", "id": 281455276, "node_id": "MDU6SXNzdWUyODE0NTUyNzY=", "number": 511, "title": "Django 2.0 and tags__name__in=[\"\"] error", "user": {"login": "TheProrok29", "id": 20223725, "node_id": "MDQ6VXNlcjIwMjIzNzI1", "avatar_url": "https://avatars2.githubusercontent.com/u/20223725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheProrok29", "html_url": "https://github.com/TheProrok29", "followers_url": "https://api.github.com/users/TheProrok29/followers", "following_url": "https://api.github.com/users/TheProrok29/following{/other_user}", "gists_url": "https://api.github.com/users/TheProrok29/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheProrok29/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheProrok29/subscriptions", "organizations_url": "https://api.github.com/users/TheProrok29/orgs", "repos_url": "https://api.github.com/users/TheProrok29/repos", "events_url": "https://api.github.com/users/TheProrok29/events{/privacy}", "received_events_url": "https://api.github.com/users/TheProrok29/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2017-12-12T16:46:02Z", "updated_at": "2017-12-20T12:00:02Z", "closed_at": "2017-12-20T12:00:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Django 2.0, filtering using tags__name__in doesen't work.\r\nWhen try to use this function for example:\r\npublished= Post.published.all() and then\r\npublished.filter(tags__name__in=['music'])\r\n\r\nI have this:\r\nTraceback (most recent call last):\r\n  File \"/home/prorok/Django/Django/lib/python3.6/site-packages/django/core/handlers/exception.py\", line 35, in inner\r\n    response = get_response(request)\r\n  File \"/home/prorok/Django/Django/lib/python3.6/site-packages/django/core/handlers/base.py\", line 128, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/home/prorok/Django/Django/lib/python3.6/site-packages/django/core/handlers/base.py\", line 126, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/home/prorok/Django/mysite/blog/views.py\", line 95, in post_detail\r\n    similar_posts = Post.published.filter(tags__in=post_tags_ids).exclude(id=post.id)\r\n  File \"/home/prorok/Django/Django/lib/python3.6/site-packages/django/db/models/manager.py\", line 82, in manager_method\r\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\r\n  File \"/home/prorok/Django/Django/lib/python3.6/site-packages/django/db/models/query.py\", line 836, in filter\r\n    return self._filter_or_exclude(False, *args, **kwargs)\r\n  File \"/home/prorok/Django/Django/lib/python3.6/site-packages/django/db/models/query.py\", line 854, in _filter_or_exclude\r\n    clone.query.add_q(Q(*args, **kwargs))\r\n  File \"/home/prorok/Django/Django/lib/python3.6/site-packages/django/db/models/sql/query.py\", line 1252, in add_q\r\n    clause, _ = self._add_q(q_object, self.used_aliases)\r\n  File \"/home/prorok/Django/Django/lib/python3.6/site-packages/django/db/models/sql/query.py\", line 1276, in _add_q\r\n    split_subq=split_subq,\r\n  File \"/home/prorok/Django/Django/lib/python3.6/site-packages/django/db/models/sql/query.py\", line 1152, in build_filter\r\n    lookups, parts, reffed_expression = self.solve_lookup_type(arg)\r\n  File \"/home/prorok/Django/Django/lib/python3.6/site-packages/django/db/models/sql/query.py\", line 1015, in solve_lookup_type\r\n    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())\r\n  File \"/home/prorok/Django/Django/lib/python3.6/site-packages/django/db/models/sql/query.py\", line 1390, in names_to_path\r\n    pathinfos = field.get_path_info(filtered_relation)\r\nTypeError: get_path_info() takes 1 positional argument but 2 were given\r\n\r\nI used #509. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/508", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/508/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/508/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/508/events", "html_url": "https://github.com/jazzband/django-taggit/issues/508", "id": 273217898, "node_id": "MDU6SXNzdWUyNzMyMTc4OTg=", "number": 508, "title": "KeyError with `similar_objects()` function", "user": {"login": "DDiran", "id": 24451678, "node_id": "MDQ6VXNlcjI0NDUxNjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/24451678?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DDiran", "html_url": "https://github.com/DDiran", "followers_url": "https://api.github.com/users/DDiran/followers", "following_url": "https://api.github.com/users/DDiran/following{/other_user}", "gists_url": "https://api.github.com/users/DDiran/gists{/gist_id}", "starred_url": "https://api.github.com/users/DDiran/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DDiran/subscriptions", "organizations_url": "https://api.github.com/users/DDiran/orgs", "repos_url": "https://api.github.com/users/DDiran/repos", "events_url": "https://api.github.com/users/DDiran/events{/privacy}", "received_events_url": "https://api.github.com/users/DDiran/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-11-12T10:12:43Z", "updated_at": "2019-03-14T13:36:30Z", "closed_at": "2019-03-14T13:36:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Alex,\r\n\r\nI'm working on a project using `Wagtail-CMS` which incorporates your tagging system. For what I'm working on at the moment the `similar_objects()` function you created is exactly what I need, however I think there might be an issue with the function (unless I'm making some silly mistake in my own code).\r\n\r\nI've written up a detailed post on SO which you can check out [here](https://stackoverflow.com/questions/47240510/getting-related-objects-via-tags-in-django).\r\n\r\nMany thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/499", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/499/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/499/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/499/events", "html_url": "https://github.com/jazzband/django-taggit/issues/499", "id": 259473438, "node_id": "MDU6SXNzdWUyNTk0NzM0Mzg=", "number": 499, "title": "Count uses", "user": {"login": "qari", "id": 1835807, "node_id": "MDQ6VXNlcjE4MzU4MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1835807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qari", "html_url": "https://github.com/qari", "followers_url": "https://api.github.com/users/qari/followers", "following_url": "https://api.github.com/users/qari/following{/other_user}", "gists_url": "https://api.github.com/users/qari/gists{/gist_id}", "starred_url": "https://api.github.com/users/qari/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qari/subscriptions", "organizations_url": "https://api.github.com/users/qari/orgs", "repos_url": "https://api.github.com/users/qari/repos", "events_url": "https://api.github.com/users/qari/events{/privacy}", "received_events_url": "https://api.github.com/users/qari/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-21T12:07:54Z", "updated_at": "2017-09-21T14:30:35Z", "closed_at": "2017-09-21T14:30:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I counting uses tag. For example: 2 questions have tag _tag! I wanna get _tag.uses == 2", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/498", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/498/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/498/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/498/events", "html_url": "https://github.com/jazzband/django-taggit/issues/498", "id": 258555191, "node_id": "MDU6SXNzdWUyNTg1NTUxOTE=", "number": 498, "title": "multiple databases support?", "user": {"login": "enapupe", "id": 291082, "node_id": "MDQ6VXNlcjI5MTA4Mg==", "avatar_url": "https://avatars2.githubusercontent.com/u/291082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/enapupe", "html_url": "https://github.com/enapupe", "followers_url": "https://api.github.com/users/enapupe/followers", "following_url": "https://api.github.com/users/enapupe/following{/other_user}", "gists_url": "https://api.github.com/users/enapupe/gists{/gist_id}", "starred_url": "https://api.github.com/users/enapupe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/enapupe/subscriptions", "organizations_url": "https://api.github.com/users/enapupe/orgs", "repos_url": "https://api.github.com/users/enapupe/repos", "events_url": "https://api.github.com/users/enapupe/events{/privacy}", "received_events_url": "https://api.github.com/users/enapupe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-09-18T17:14:24Z", "updated_at": "2018-04-12T21:10:43Z", "closed_at": "2017-09-18T17:22:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\r\nI currently have a read-replica database where I access some model instances that have taggit. Is there any way to define which database taggit will save to?\r\nI'm looking for something like:\r\n`instance.tags.using('another_db').add(tag_obj)`\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/497", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/497/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/497/events", "html_url": "https://github.com/jazzband/django-taggit/issues/497", "id": 249646340, "node_id": "MDU6SXNzdWUyNDk2NDYzNDA=", "number": 497, "title": "django 2.0 'TaggableRel' object has no attribute 'related_query_name'", "user": {"login": "collinanderson", "id": 129234, "node_id": "MDQ6VXNlcjEyOTIzNA==", "avatar_url": "https://avatars3.githubusercontent.com/u/129234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/collinanderson", "html_url": "https://github.com/collinanderson", "followers_url": "https://api.github.com/users/collinanderson/followers", "following_url": "https://api.github.com/users/collinanderson/following{/other_user}", "gists_url": "https://api.github.com/users/collinanderson/gists{/gist_id}", "starred_url": "https://api.github.com/users/collinanderson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/collinanderson/subscriptions", "organizations_url": "https://api.github.com/users/collinanderson/orgs", "repos_url": "https://api.github.com/users/collinanderson/repos", "events_url": "https://api.github.com/users/collinanderson/events{/privacy}", "received_events_url": "https://api.github.com/users/collinanderson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-08-11T14:06:35Z", "updated_at": "2018-06-09T10:19:49Z", "closed_at": "2017-12-20T12:00:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`./manage.py migrate` seems to crash since https://github.com/django/django/commit/9f4e0fde0a25ae0c21359f5194435aaf5ca341c7\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./manage.py\", line 15, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"django/core/management/__init__.py\", line 354, in execute_from_command_line\r\n    utility.execute()\r\n  File \"django/core/management/__init__.py\", line 348, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"django/core/management/base.py\", line 280, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"django/core/management/base.py\", line 327, in execute\r\n    output = self.handle(*args, **options)\r\n  File \"django/core/management/commands/migrate.py\", line 160, in handle\r\n    pre_migrate_apps = pre_migrate_state.apps\r\n  File \"django/utils/functional.py\", line 36, in __get__\r\n    res = instance.__dict__[self.name] = self.func(instance)\r\n  File \"django/db/migrations/state.py\", line 210, in apps\r\n    return StateApps(self.real_apps, self.models)\r\n  File \"django/db/migrations/state.py\", line 275, in __init__\r\n    self.render_multiple(list(models.values()) + self.real_models)\r\n  File \"django/db/migrations/state.py\", line 310, in render_multiple\r\n    model.render(self)\r\n  File \"django/db/migrations/state.py\", line 572, in render\r\n    body = {name: field.clone() for name, field in self.fields}\r\n  File \"django/db/migrations/state.py\", line 572, in <dictcomp>\r\n    body = {name: field.clone() for name, field in self.fields}\r\n  File \"django/db/models/fields/__init__.py\", line 468, in clone\r\n    name, path, args, kwargs = self.deconstruct()\r\n  File \"taggit/managers.py\", line 410, in deconstruct\r\n    name, path, args, kwargs = super(TaggableManager, self).deconstruct()\r\n  File \"django/db/models/fields/related.py\", line 327, in deconstruct\r\n    if self.remote_field.related_query_name is not None:\r\nAttributeError: 'TaggableRel' object has no attribute 'related_query_name'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/496", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/496/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/496/events", "html_url": "https://github.com/jazzband/django-taggit/issues/496", "id": 243313650, "node_id": "MDU6SXNzdWUyNDMzMTM2NTA=", "number": 496, "title": "crashed in Django 1.11", "user": {"login": "hifour", "id": 16273674, "node_id": "MDQ6VXNlcjE2MjczNjc0", "avatar_url": "https://avatars1.githubusercontent.com/u/16273674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hifour", "html_url": "https://github.com/hifour", "followers_url": "https://api.github.com/users/hifour/followers", "following_url": "https://api.github.com/users/hifour/following{/other_user}", "gists_url": "https://api.github.com/users/hifour/gists{/gist_id}", "starred_url": "https://api.github.com/users/hifour/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hifour/subscriptions", "organizations_url": "https://api.github.com/users/hifour/orgs", "repos_url": "https://api.github.com/users/hifour/repos", "events_url": "https://api.github.com/users/hifour/events{/privacy}", "received_events_url": "https://api.github.com/users/hifour/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-07-17T07:23:40Z", "updated_at": "2017-07-17T07:27:28Z", "closed_at": "2017-07-17T07:27:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "when I installed django-taggit (0.22). I found the package couldn't working on Django 1.11. It didn't been loading my app.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/494", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/494/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/494/events", "html_url": "https://github.com/jazzband/django-taggit/issues/494", "id": 238568977, "node_id": "MDU6SXNzdWUyMzg1Njg5Nzc=", "number": 494, "title": "Reverse Query Name Clash", "user": {"login": "tors10e", "id": 6124798, "node_id": "MDQ6VXNlcjYxMjQ3OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/6124798?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tors10e", "html_url": "https://github.com/tors10e", "followers_url": "https://api.github.com/users/tors10e/followers", "following_url": "https://api.github.com/users/tors10e/following{/other_user}", "gists_url": "https://api.github.com/users/tors10e/gists{/gist_id}", "starred_url": "https://api.github.com/users/tors10e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tors10e/subscriptions", "organizations_url": "https://api.github.com/users/tors10e/orgs", "repos_url": "https://api.github.com/users/tors10e/repos", "events_url": "https://api.github.com/users/tors10e/events{/privacy}", "received_events_url": "https://api.github.com/users/tors10e/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-26T14:52:11Z", "updated_at": "2019-03-15T13:49:01Z", "closed_at": "2019-03-15T13:49:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "With a model class called  Name, taggit returns an error.\r\n\r\nclass example:\r\n```\r\nclass Name(models.Model):\r\n    ... fields\r\n    tags = TaggableManager(related_name=\"a_unique_related_name\")\r\n\r\n```\r\nError:\r\n\r\n>  appname.Name.tags: (fields.E303) Reverse query name for 'Name.tags' clashes with field name' Tag.name'.\r\n> \tHINT: Rename field 'Tag.name', or add/change a related_name argument to the definition for field 'Name.tags'.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/491", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/491/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/491/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/491/events", "html_url": "https://github.com/jazzband/django-taggit/issues/491", "id": 229519153, "node_id": "MDU6SXNzdWUyMjk1MTkxNTM=", "number": 491, "title": "Subclass tag queryset", "user": {"login": "j2kun", "id": 2467754, "node_id": "MDQ6VXNlcjI0Njc3NTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/2467754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j2kun", "html_url": "https://github.com/j2kun", "followers_url": "https://api.github.com/users/j2kun/followers", "following_url": "https://api.github.com/users/j2kun/following{/other_user}", "gists_url": "https://api.github.com/users/j2kun/gists{/gist_id}", "starred_url": "https://api.github.com/users/j2kun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j2kun/subscriptions", "organizations_url": "https://api.github.com/users/j2kun/orgs", "repos_url": "https://api.github.com/users/j2kun/repos", "events_url": "https://api.github.com/users/j2kun/events{/privacy}", "received_events_url": "https://api.github.com/users/j2kun/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-17T23:57:32Z", "updated_at": "2018-11-24T21:55:49Z", "closed_at": "2018-11-24T21:55:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "How would I go about adding functionality to a tag queryset?\r\n\r\nFrom [get_queryset](https://github.com/alex/django-taggit/blob/master/taggit/managers.py#L91) it's not clear how I'd inject my own queryset model. I am not an expert in Django, sadly, so if this is a well known pattern I apologize.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/490", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/490/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/490/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/490/events", "html_url": "https://github.com/jazzband/django-taggit/issues/490", "id": 228520591, "node_id": "MDU6SXNzdWUyMjg1MjA1OTE=", "number": 490, "title": "Bug with prefetch_related", "user": {"login": "Uninen", "id": 43100, "node_id": "MDQ6VXNlcjQzMTAw", "avatar_url": "https://avatars1.githubusercontent.com/u/43100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Uninen", "html_url": "https://github.com/Uninen", "followers_url": "https://api.github.com/users/Uninen/followers", "following_url": "https://api.github.com/users/Uninen/following{/other_user}", "gists_url": "https://api.github.com/users/Uninen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Uninen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Uninen/subscriptions", "organizations_url": "https://api.github.com/users/Uninen/orgs", "repos_url": "https://api.github.com/users/Uninen/repos", "events_url": "https://api.github.com/users/Uninen/events{/privacy}", "received_events_url": "https://api.github.com/users/Uninen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-05-14T05:45:18Z", "updated_at": "2020-02-26T13:42:59Z", "closed_at": "2020-02-26T13:42:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Posted this few weeks ago to the mailinglist, but seems that it's dead so re-posting here. (Maybe it would be a good idea to retire the mailinglist or post a notification there that it's not been actively followed?)\r\n\r\nSo, I have a following model with tags:\r\n\r\n`tags = TaggableManager(through='knuckles.UUIDTaggedItem', blank=True)`\r\n\r\nwhere UUIDTaggedItem is:\r\n\r\n```\r\nclass UUIDTaggedItem(GenericUUIDTaggedItemBase, TaggedItemBase):\r\n\r\n    class Meta:\r\n        verbose_name = \"Tag\"\r\n        verbose_name_plural = \"Tags\"\r\n\r\n```\r\nWhen I query for the tags I get following:\r\n\r\n```\r\nIn [18]: e = LiveEvent.objects.get(slug='dj-tony-004')\r\nIn [19]: e.tags.all()\r\n\r\nOut[19]: <QuerySet [<Tag: 90s>, <Tag: dj tony>, <Tag: house>, <Tag: radioshow>, <Tag: 00's>, <Tag: trance>, <Tag: 90's>, <Tag: eurodance>]>\r\n\r\n\r\nIn [20]: e = LiveEvent.objects.prefetch_related('tags').get(slug='dj-tony-004')\r\nIn [21]: e.tags.all()\r\n\r\nOut[21]: <QuerySet []>\r\n\r\n```\r\nSo when using prefetch_related, I always get empty tags. Not sure if I'm doing something wrong here or if this is a bug?\r\n\r\nI'm using Django version 1.11 and django-taggit version 0.22.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/485", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/485/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/485/events", "html_url": "https://github.com/jazzband/django-taggit/issues/485", "id": 226175895, "node_id": "MDU6SXNzdWUyMjYxNzU4OTU=", "number": 485, "title": "Create \"Related Post\" based on Tags", "user": {"login": "alzearafat", "id": 5145693, "node_id": "MDQ6VXNlcjUxNDU2OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5145693?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alzearafat", "html_url": "https://github.com/alzearafat", "followers_url": "https://api.github.com/users/alzearafat/followers", "following_url": "https://api.github.com/users/alzearafat/following{/other_user}", "gists_url": "https://api.github.com/users/alzearafat/gists{/gist_id}", "starred_url": "https://api.github.com/users/alzearafat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alzearafat/subscriptions", "organizations_url": "https://api.github.com/users/alzearafat/orgs", "repos_url": "https://api.github.com/users/alzearafat/repos", "events_url": "https://api.github.com/users/alzearafat/events{/privacy}", "received_events_url": "https://api.github.com/users/alzearafat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-05-04T04:34:46Z", "updated_at": "2017-05-05T14:33:43Z", "closed_at": "2017-05-05T14:31:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there!\r\n\r\nI'm new in django/python, so please bear with me.\r\n\r\nI want to create some sort of \"Related Post\" in django. How I can do that? I'm following this : [How to fetch related items when using taggit in django?](http://stackoverflow.com/questions/30144220/how-to-fetch-related-items-when-using-taggit-in-django)\r\n\r\nbut dont know how to use/implement it and how to render it in template. This is my view :\r\n\r\n```\r\ndef trip_single(request, slug):\r\n    trip = get_object_or_404(Trip, slug=slug)\r\n    related_trip = Trip.objects.filter(misc_published=True, tags=trip.tags.similar_objects())[:3]\r\n    return render(request, 'app_trip/trip_single.html', {'trip': trip, 'related_trip': related_trip})\r\n```\r\n\r\nI want to make something like this : \r\n```\r\n# Loop a trip, related to the post based on Tags\r\n\r\n{% for trip in related_trip %}\r\n   <h1>{{ trip.title }}</h1>\r\n{% endfor %}\r\n```\r\n\r\nAny help would be greatly appreciated\r\nThank you!\r\n\r\n------- UPDATE [SOLVED] -------\r\n\r\nUsing `model_name.tags.similar_objects()`\r\n\r\nIn views.py :\r\n```\r\ndef trip_single(request, slug):\r\n    trip = get_object_or_404(Trip, slug=slug)\r\n    trip_related = trip.tags.similar_objects() # Where the magic happen\r\n    return render(request, 'app_trip/trip_single.html', {'trip': trip, 'trip_related': trip_related})\r\n```\r\n\r\nIn template :\r\n```\r\n{% for trip in trip_related %}\r\n    <h1>{{ trip.trip_judul }}</h1>\r\n{% endfor %}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/484", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/484/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/484/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/484/events", "html_url": "https://github.com/jazzband/django-taggit/issues/484", "id": 225136737, "node_id": "MDU6SXNzdWUyMjUxMzY3Mzc=", "number": 484, "title": "install/migration issue", "user": {"login": "danieldeiana", "id": 28155823, "node_id": "MDQ6VXNlcjI4MTU1ODIz", "avatar_url": "https://avatars3.githubusercontent.com/u/28155823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danieldeiana", "html_url": "https://github.com/danieldeiana", "followers_url": "https://api.github.com/users/danieldeiana/followers", "following_url": "https://api.github.com/users/danieldeiana/following{/other_user}", "gists_url": "https://api.github.com/users/danieldeiana/gists{/gist_id}", "starred_url": "https://api.github.com/users/danieldeiana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danieldeiana/subscriptions", "organizations_url": "https://api.github.com/users/danieldeiana/orgs", "repos_url": "https://api.github.com/users/danieldeiana/repos", "events_url": "https://api.github.com/users/danieldeiana/events{/privacy}", "received_events_url": "https://api.github.com/users/danieldeiana/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-28T16:53:33Z", "updated_at": "2018-11-12T23:56:04Z", "closed_at": "2017-07-25T15:34:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Good day\r\n\r\nWhen running: \r\n\r\n**python manage.py makemigrations blog**\r\n\r\nI'm getting the following error:\r\n\r\n**ModuleNotFoundError: No module named 'taggit'**\r\n\r\nI have later then Django 1.8 installed:\r\n\r\n**(b) PS C:\\dan_projects\\django_by_example_blog\\mysite> pip freeze\r\nDjango==1.8.6\r\ndjango-taggit==0.22.1\r\npytz==2017.2**\r\n\r\nAnd 'taggit' has been added to my installed_apps:\r\n\r\n**INSTALLED_APPS = (\r\n    'django.contrib.admin',\r\n    'django.contrib.auth',\r\n    'django.contrib.contenttypes',\r\n    'django.contrib.sessions',\r\n    'django.contrib.messages',\r\n    'django.contrib.staticfiles',\r\n    'blog',\r\n    'taggit',\r\n)**\r\n\r\nIn my _models.py_ file I've imported it:\r\n\r\n**from taggit.managers import TaggableManager**\r\n\r\nApologies if I'm doing something silly, I am a novice and any help would be greatly appreciated! \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/479", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/479/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/479/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/479/events", "html_url": "https://github.com/jazzband/django-taggit/issues/479", "id": 222759086, "node_id": "MDU6SXNzdWUyMjI3NTkwODY=", "number": 479, "title": "How to setup a development environment for contributing?", "user": {"login": "nemesisdesign", "id": 841044, "node_id": "MDQ6VXNlcjg0MTA0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/841044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nemesisdesign", "html_url": "https://github.com/nemesisdesign", "followers_url": "https://api.github.com/users/nemesisdesign/followers", "following_url": "https://api.github.com/users/nemesisdesign/following{/other_user}", "gists_url": "https://api.github.com/users/nemesisdesign/gists{/gist_id}", "starred_url": "https://api.github.com/users/nemesisdesign/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nemesisdesign/subscriptions", "organizations_url": "https://api.github.com/users/nemesisdesign/orgs", "repos_url": "https://api.github.com/users/nemesisdesign/repos", "events_url": "https://api.github.com/users/nemesisdesign/events{/privacy}", "received_events_url": "https://api.github.com/users/nemesisdesign/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-19T14:33:48Z", "updated_at": "2017-04-24T21:38:22Z", "closed_at": "2017-04-24T21:38:22Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I'm trying to prepare a patch for #478 but I cannot understand how to create new migrations for the test environment.\r\n\r\nIn general I think there should be some hints on how to get started with contributing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/478", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/478/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/478/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/478/events", "html_url": "https://github.com/jazzband/django-taggit/issues/478", "id": 222753902, "node_id": "MDU6SXNzdWUyMjI3NTM5MDI=", "number": 478, "title": "Automatic slug doesn't work when using UUID primary keys", "user": {"login": "nemesisdesign", "id": 841044, "node_id": "MDQ6VXNlcjg0MTA0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/841044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nemesisdesign", "html_url": "https://github.com/nemesisdesign", "followers_url": "https://api.github.com/users/nemesisdesign/followers", "following_url": "https://api.github.com/users/nemesisdesign/following{/other_user}", "gists_url": "https://api.github.com/users/nemesisdesign/gists{/gist_id}", "starred_url": "https://api.github.com/users/nemesisdesign/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nemesisdesign/subscriptions", "organizations_url": "https://api.github.com/users/nemesisdesign/orgs", "repos_url": "https://api.github.com/users/nemesisdesign/repos", "events_url": "https://api.github.com/users/nemesisdesign/events{/privacy}", "received_events_url": "https://api.github.com/users/nemesisdesign/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-19T14:17:49Z", "updated_at": "2017-04-23T00:03:07Z", "closed_at": "2017-04-23T00:03:07Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "[The check contained in TagBase](https://github.com/alex/django-taggit/blob/825c4b4c402691be3b14e825d609982c4a3e0686/taggit/models.py#L38) doesn't work on custom tag models that set a UUID primary key, that's because the following check:\r\n\r\n```python\r\nif not self.pk and not self.slug:\r\n    # ...\r\n```\r\n\r\nis never triggered since in a UUID based model `self.pk` is never `None`.\r\n\r\nI'm preparing a pull request to address this issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/477", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/477/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/477/events", "html_url": "https://github.com/jazzband/django-taggit/issues/477", "id": 222752658, "node_id": "MDU6SXNzdWUyMjI3NTI2NTg=", "number": 477, "title": "Links to external apps are broken", "user": {"login": "nemesisdesign", "id": 841044, "node_id": "MDQ6VXNlcjg0MTA0NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/841044?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nemesisdesign", "html_url": "https://github.com/nemesisdesign", "followers_url": "https://api.github.com/users/nemesisdesign/followers", "following_url": "https://api.github.com/users/nemesisdesign/following{/other_user}", "gists_url": "https://api.github.com/users/nemesisdesign/gists{/gist_id}", "starred_url": "https://api.github.com/users/nemesisdesign/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nemesisdesign/subscriptions", "organizations_url": "https://api.github.com/users/nemesisdesign/orgs", "repos_url": "https://api.github.com/users/nemesisdesign/repos", "events_url": "https://api.github.com/users/nemesisdesign/events{/privacy}", "received_events_url": "https://api.github.com/users/nemesisdesign/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-04-19T14:14:07Z", "updated_at": "2017-04-20T03:44:59Z", "closed_at": "2017-04-20T03:44:59Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Links to third party apps extending django-taggit are broken, see:\r\nhttps://django-taggit.readthedocs.io/en/latest/external_apps.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/472", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/472/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/472/events", "html_url": "https://github.com/jazzband/django-taggit/issues/472", "id": 209379278, "node_id": "MDU6SXNzdWUyMDkzNzkyNzg=", "number": 472, "title": "Only allow certain tags in a model", "user": {"login": "scientist1642", "id": 2676612, "node_id": "MDQ6VXNlcjI2NzY2MTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2676612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scientist1642", "html_url": "https://github.com/scientist1642", "followers_url": "https://api.github.com/users/scientist1642/followers", "following_url": "https://api.github.com/users/scientist1642/following{/other_user}", "gists_url": "https://api.github.com/users/scientist1642/gists{/gist_id}", "starred_url": "https://api.github.com/users/scientist1642/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scientist1642/subscriptions", "organizations_url": "https://api.github.com/users/scientist1642/orgs", "repos_url": "https://api.github.com/users/scientist1642/repos", "events_url": "https://api.github.com/users/scientist1642/events{/privacy}", "received_events_url": "https://api.github.com/users/scientist1642/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-22T08:03:38Z", "updated_at": "2017-02-22T09:05:11Z", "closed_at": "2017-02-22T09:05:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\nI can't find  in  the documentation, but sometimes I think there is a need that certain models only are allowed to be tagged by certain tags. Something like this\r\n```\r\nclass Fruit(models.Model):\r\n  class Meta:\r\n    allowed_tags=[\"red\", \"green\", \"ripe\"]\r\n```\r\nWon't it make sense to implement it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/471", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/471/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/471/events", "html_url": "https://github.com/jazzband/django-taggit/issues/471", "id": 208538066, "node_id": "MDU6SXNzdWUyMDg1MzgwNjY=", "number": 471, "title": "How to save again the slug", "user": {"login": "CARocha", "id": 168115, "node_id": "MDQ6VXNlcjE2ODExNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/168115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CARocha", "html_url": "https://github.com/CARocha", "followers_url": "https://api.github.com/users/CARocha/followers", "following_url": "https://api.github.com/users/CARocha/following{/other_user}", "gists_url": "https://api.github.com/users/CARocha/gists{/gist_id}", "starred_url": "https://api.github.com/users/CARocha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CARocha/subscriptions", "organizations_url": "https://api.github.com/users/CARocha/orgs", "repos_url": "https://api.github.com/users/CARocha/repos", "events_url": "https://api.github.com/users/CARocha/events{/privacy}", "received_events_url": "https://api.github.com/users/CARocha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-17T19:47:18Z", "updated_at": "2017-03-29T21:13:15Z", "closed_at": "2017-03-29T21:13:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i migrate one database to another projects, the projects have tables tags similar\r\ntaggit, when i migrate many slug come identical this %e2%80%ac-%e2%80%aaboaco\r\nmalformad slug, how to save again for taggit override the slug.\r\nI try this\r\nfor obj in Tag.objects.all():\r\n    obj.save()\r\nbut nothing, not override the slug with the field name :/ any idea\r\n\r\nCheers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/468", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/468/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/468/events", "html_url": "https://github.com/jazzband/django-taggit/issues/468", "id": 205370189, "node_id": "MDU6SXNzdWUyMDUzNzAxODk=", "number": 468, "title": "Add django taggit widget", "user": {"login": "kamilgregorczyk", "id": 9266336, "node_id": "MDQ6VXNlcjkyNjYzMzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9266336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamilgregorczyk", "html_url": "https://github.com/kamilgregorczyk", "followers_url": "https://api.github.com/users/kamilgregorczyk/followers", "following_url": "https://api.github.com/users/kamilgregorczyk/following{/other_user}", "gists_url": "https://api.github.com/users/kamilgregorczyk/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamilgregorczyk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamilgregorczyk/subscriptions", "organizations_url": "https://api.github.com/users/kamilgregorczyk/orgs", "repos_url": "https://api.github.com/users/kamilgregorczyk/repos", "events_url": "https://api.github.com/users/kamilgregorczyk/events{/privacy}", "received_events_url": "https://api.github.com/users/kamilgregorczyk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-04T19:13:31Z", "updated_at": "2017-02-04T19:15:34Z", "closed_at": "2017-02-04T19:15:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Please add atleast some widgets for forms because for now it's a pain in the ass to set it up.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/467", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/467/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/467/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/467/events", "html_url": "https://github.com/jazzband/django-taggit/issues/467", "id": 204896836, "node_id": "MDU6SXNzdWUyMDQ4OTY4MzY=", "number": 467, "title": "django.db.utils.ProgrammingError: (1146, \"Table 'wanote.photo_taggedsubject' doesn't exist\")", "user": {"login": "ryulstory", "id": 24707022, "node_id": "MDQ6VXNlcjI0NzA3MDIy", "avatar_url": "https://avatars2.githubusercontent.com/u/24707022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryulstory", "html_url": "https://github.com/ryulstory", "followers_url": "https://api.github.com/users/ryulstory/followers", "following_url": "https://api.github.com/users/ryulstory/following{/other_user}", "gists_url": "https://api.github.com/users/ryulstory/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryulstory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryulstory/subscriptions", "organizations_url": "https://api.github.com/users/ryulstory/orgs", "repos_url": "https://api.github.com/users/ryulstory/repos", "events_url": "https://api.github.com/users/ryulstory/events{/privacy}", "received_events_url": "https://api.github.com/users/ryulstory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-02T14:56:35Z", "updated_at": "2018-01-04T07:25:37Z", "closed_at": "2017-02-02T15:22:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "[http://stackoverflow.com/questions/42001635/django-taggit-views-dont-find-table](url)\r\n\r\ncould you help me?\r\n\r\nplease go to link and see it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/466", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/466/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/466/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/466/events", "html_url": "https://github.com/jazzband/django-taggit/issues/466", "id": 204596159, "node_id": "MDU6SXNzdWUyMDQ1OTYxNTk=", "number": 466, "title": "I want to make two sort of tags in one picture by using django-taggit", "user": {"login": "ryulstory", "id": 24707022, "node_id": "MDQ6VXNlcjI0NzA3MDIy", "avatar_url": "https://avatars2.githubusercontent.com/u/24707022?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryulstory", "html_url": "https://github.com/ryulstory", "followers_url": "https://api.github.com/users/ryulstory/followers", "following_url": "https://api.github.com/users/ryulstory/following{/other_user}", "gists_url": "https://api.github.com/users/ryulstory/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryulstory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryulstory/subscriptions", "organizations_url": "https://api.github.com/users/ryulstory/orgs", "repos_url": "https://api.github.com/users/ryulstory/repos", "events_url": "https://api.github.com/users/ryulstory/events{/privacy}", "received_events_url": "https://api.github.com/users/ryulstory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-02-01T14:20:41Z", "updated_at": "2017-02-02T10:39:55Z", "closed_at": "2017-02-02T10:39:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear, all.\r\n\r\nI want to make two sort of tags in one picture by using django-taggit I can't understand the document. please help me this is my model.\r\n\r\n```\r\nfrom taggit.managers import TaggableManager\r\nfrom taggit.models import TaggedItemBase\r\n\r\n\r\n\r\nclass Taggedperson(TaggedItemBase):\r\n    content_object= models.ForeignKey('person')\r\n\r\n    class Admin:\r\n        pass\r\n\r\n\r\n\r\nclass Taggedplace(TaggedItemBase):\r\n    content_object= models.ForeignKey('place')\r\n\r\n    class Admin:\r\n        pass\r\n\r\n\r\n\r\n\r\nclass Photo(models.Model):\r\n    user = models.ForeignKey(User)\r\n    image_file = ProcessedImageField(upload_to='static_files/uploaded/%Y', format='JPEG', options={'quality': 100\r\n        })\r\n    person = TaggableManager(through=Taggedperson)\r\n    place = TaggableManager(through=Taggedplace)\r\n    description = models.TextField(max_length=500, blank=True)\r\n    Comments = models.PositiveSmallIntegerField(default=0, null=True)\r\n    posted_on = models.DateTimeField(default=datetime.now)\r\n\r\n    def get_absolute_url(self):\r\n        return reverse_lazy('index')\r\n\r\n    class Admin:\r\n        pass\r\n\r\n    def delete(self, *args, **kwargs):\r\n        self.image_file.delete()\r\n        super(Photo, self).delete(*args, **kwargs)\r\n\r\n    def get_number_of_likes(self):\r\n        return self.like_set.count()\r\n\r\n    def get_number_of_comments(self):\r\n        return self.comment_set.count()\r\ncould you help me how to work it?\r\n\r\nwhat i want to make(picture) please see it\r\n\r\n![kakaotalk_photo_2017-02-01-23-12-47](https://cloud.githubusercontent.com/assets/24707022/22510382/19d567c6-e8d5-11e6-8339-e6cf9f0bf8f4.jpeg)\r\n\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/463", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/463/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/463/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/463/events", "html_url": "https://github.com/jazzband/django-taggit/issues/463", "id": 203183915, "node_id": "MDU6SXNzdWUyMDMxODM5MTU=", "number": 463, "title": "Case-Insensitive tag setting fails with a mix of new and old tag names", "user": {"login": "jwhitlock", "id": 286017, "node_id": "MDQ6VXNlcjI4NjAxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/286017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwhitlock", "html_url": "https://github.com/jwhitlock", "followers_url": "https://api.github.com/users/jwhitlock/followers", "following_url": "https://api.github.com/users/jwhitlock/following{/other_user}", "gists_url": "https://api.github.com/users/jwhitlock/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwhitlock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwhitlock/subscriptions", "organizations_url": "https://api.github.com/users/jwhitlock/orgs", "repos_url": "https://api.github.com/users/jwhitlock/repos", "events_url": "https://api.github.com/users/jwhitlock/events{/privacy}", "received_events_url": "https://api.github.com/users/jwhitlock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-25T18:27:51Z", "updated_at": "2017-01-26T02:09:00Z", "closed_at": "2017-01-26T02:09:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When ``TAGGIT_CASE_INSENSITIVE=True``, and ``obj.tags.set`` is called with a mix of new and existing tags, the new tag is not created.  This is a bug introduced by PR #461 in v0.21.5.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/460", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/460/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/460/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/460/events", "html_url": "https://github.com/jazzband/django-taggit/issues/460", "id": 202169185, "node_id": "MDU6SXNzdWUyMDIxNjkxODU=", "number": 460, "title": "TAGGIT_CASE_INSENSITIVE=True creates duplicate tags", "user": {"login": "jwhitlock", "id": 286017, "node_id": "MDQ6VXNlcjI4NjAxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/286017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwhitlock", "html_url": "https://github.com/jwhitlock", "followers_url": "https://api.github.com/users/jwhitlock/followers", "following_url": "https://api.github.com/users/jwhitlock/following{/other_user}", "gists_url": "https://api.github.com/users/jwhitlock/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwhitlock/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwhitlock/subscriptions", "organizations_url": "https://api.github.com/users/jwhitlock/orgs", "repos_url": "https://api.github.com/users/jwhitlock/repos", "events_url": "https://api.github.com/users/jwhitlock/events{/privacy}", "received_events_url": "https://api.github.com/users/jwhitlock/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-01-20T15:34:07Z", "updated_at": "2017-01-21T15:01:46Z", "closed_at": "2017-01-21T15:01:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "``TAGGIT_CASE_INSENSITIVE=True`` does the expected thing when attempting to add a tag that is case-insensitive equivalent to an existing tag:\r\n\r\n    >>> spain = Tag.objects.create(name=\"Spain\", slug=\"spain\")\r\n    >>> orange = Food.objects.create(name=\"orange\")\r\n    >>> orange.tags.add('spain')\r\n    >>> orange.tags.names()\r\n    ['Spain']\r\n\r\nBut it will allow creating the \"duplicate\" tags if they are new tags:\r\n\r\n    >>> orange.tags.add('Valencia', 'valencia')\r\n    >>> orange.tags.names()\r\n    ['Spain', 'Valencia', 'valencia']\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/458", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/458/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/458/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/458/events", "html_url": "https://github.com/jazzband/django-taggit/issues/458", "id": 201203694, "node_id": "MDU6SXNzdWUyMDEyMDM2OTQ=", "number": 458, "title": "django-taggit-anywhere", "user": {"login": "bashu", "id": 144783, "node_id": "MDQ6VXNlcjE0NDc4Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/144783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bashu", "html_url": "https://github.com/bashu", "followers_url": "https://api.github.com/users/bashu/followers", "following_url": "https://api.github.com/users/bashu/following{/other_user}", "gists_url": "https://api.github.com/users/bashu/gists{/gist_id}", "starred_url": "https://api.github.com/users/bashu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bashu/subscriptions", "organizations_url": "https://api.github.com/users/bashu/orgs", "repos_url": "https://api.github.com/users/bashu/repos", "events_url": "https://api.github.com/users/bashu/events{/privacy}", "received_events_url": "https://api.github.com/users/bashu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-17T08:22:36Z", "updated_at": "2019-03-31T03:11:40Z", "closed_at": "2019-03-31T03:11:40Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey,\r\n\r\nThanks for django-taggit app and here is my small contribution https://github.com/bashu/django-taggit-anywhere\r\n\r\nQ: is it worth mentioning in docs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/457", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/457/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/457/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/457/events", "html_url": "https://github.com/jazzband/django-taggit/issues/457", "id": 200396143, "node_id": "MDU6SXNzdWUyMDAzOTYxNDM=", "number": 457, "title": "AttributeError: can't set attribute", "user": {"login": "marcomalaguti", "id": 23523301, "node_id": "MDQ6VXNlcjIzNTIzMzAx", "avatar_url": "https://avatars2.githubusercontent.com/u/23523301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcomalaguti", "html_url": "https://github.com/marcomalaguti", "followers_url": "https://api.github.com/users/marcomalaguti/followers", "following_url": "https://api.github.com/users/marcomalaguti/following{/other_user}", "gists_url": "https://api.github.com/users/marcomalaguti/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcomalaguti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcomalaguti/subscriptions", "organizations_url": "https://api.github.com/users/marcomalaguti/orgs", "repos_url": "https://api.github.com/users/marcomalaguti/repos", "events_url": "https://api.github.com/users/marcomalaguti/events{/privacy}", "received_events_url": "https://api.github.com/users/marcomalaguti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-12T15:26:29Z", "updated_at": "2017-01-16T19:16:47Z", "closed_at": "2017-01-16T19:16:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nyesterday I installed PostgreSQL as db for the website That I'm developing.\r\nAfter the installation the computer restarted.\r\n\r\nWhat's wrong?\r\nI lost all the environment variables (i'm using windows 10). So I had to re add python to the path.\r\n\r\nAfter That I created the db I replaced the data on settings.py.\r\nI run the website but it gave an error. So I installed the psycopg2 to let postgres work with django.\r\nNo way.\r\n\r\nI Decided to go back to sqlite3 for the moment, so I edited the settings.py and run the website.\r\nthe error Told the there was no application named Taggit. (???) It's not normal. I installed it and everything was working fine. I reinstalled it (version 0.17.1).\r\n\r\nI do not know If These events are connected ... this the reason I tell you everything.\r\nnow:\r\nOn every single projects where I use django Taggit I receive the same error (even on the One That I do not open from months) ...\r\n\r\n`Unhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x00000181AA17DAE8>\r\nTraceback (most recent call last):\r\n  File \"C:\\Python35\\lib\\site-packages\\django\\utils\\autoreload.py\", line 226, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"C:\\Python35\\lib\\site-packages\\django\\core\\management\\commands\\runserver.py\", line 113, in inner_run\r\n    autoreload.raise_last_exception()\r\n  File \"C:\\Python35\\lib\\site-packages\\django\\utils\\autoreload.py\", line 249, in raise_last_exception\r\n    six.reraise(*_exception)\r\n  File \"C:\\Python35\\lib\\site-packages\\django\\utils\\six.py\", line 685, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"C:\\Python35\\lib\\site-packages\\django\\utils\\autoreload.py\", line 226, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"C:\\Python35\\lib\\site-packages\\django\\__init__.py\", line 27, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"C:\\Python35\\lib\\site-packages\\django\\apps\\registry.py\", line 108, in populate\r\n    app_config.import_models(all_models)\r\n  File \"C:\\Python35\\lib\\site-packages\\django\\apps\\config.py\", line 199, in import_models\r\n    self.models_module = import_module(models_module_name)\r\n  File \"C:\\Python35\\lib\\importlib\\__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 986, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 969, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 958, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 673, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 665, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 222, in _call_with_frames_removed\r\n  File \"C:\\Users\\Marco\\Documents\\Progetti\\GiemmeLift\\website\\blog\\models.py\", line 21, in <module>\r\n    class Post(models.Model):\r\n  File \"C:\\Users\\Marco\\Documents\\Progetti\\GiemmeLift\\website\\blog\\models.py\", line 34, in Post\r\n    tags = TaggableManager()\r\n  File \"C:\\Python35\\lib\\site-packages\\taggit\\managers.py\", line 285, in __init__\r\n    rel = TaggableRel(self, related_name, self.through, to=to)\r\n  File \"C:\\Python35\\lib\\site-packages\\taggit\\managers.py\", line 55, in __init__\r\n    self.to = to\r\nAttributeError: can't set attribute`\r\n\r\nI tried to reinstall django-taggit but nothing changed.\r\n\r\nCould you please help me to understand why?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/447", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/447/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/447/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/447/events", "html_url": "https://github.com/jazzband/django-taggit/issues/447", "id": 185088815, "node_id": "MDU6SXNzdWUxODUwODg4MTU=", "number": 447, "title": "taggit not working with Djnago1.9", "user": {"login": "kaligithub", "id": 10153166, "node_id": "MDQ6VXNlcjEwMTUzMTY2", "avatar_url": "https://avatars0.githubusercontent.com/u/10153166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaligithub", "html_url": "https://github.com/kaligithub", "followers_url": "https://api.github.com/users/kaligithub/followers", "following_url": "https://api.github.com/users/kaligithub/following{/other_user}", "gists_url": "https://api.github.com/users/kaligithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaligithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaligithub/subscriptions", "organizations_url": "https://api.github.com/users/kaligithub/orgs", "repos_url": "https://api.github.com/users/kaligithub/repos", "events_url": "https://api.github.com/users/kaligithub/events{/privacy}", "received_events_url": "https://api.github.com/users/kaligithub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-25T11:23:59Z", "updated_at": "2016-11-21T17:57:10Z", "closed_at": "2016-11-21T17:57:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I migrate the DB then below error comes:\n  File \"C:\\Anaconda2\\lib\\site-packages\\taggit\\managers.py\", line 55, in **init**\n    self.to = to\nAttributeError: can't set attribute\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/446", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/446/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/446/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/446/events", "html_url": "https://github.com/jazzband/django-taggit/issues/446", "id": 185007102, "node_id": "MDU6SXNzdWUxODUwMDcxMDI=", "number": 446, "title": "Bug report ", "user": {"login": "HiveMe", "id": 21030176, "node_id": "MDQ6VXNlcjIxMDMwMTc2", "avatar_url": "https://avatars2.githubusercontent.com/u/21030176?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HiveMe", "html_url": "https://github.com/HiveMe", "followers_url": "https://api.github.com/users/HiveMe/followers", "following_url": "https://api.github.com/users/HiveMe/following{/other_user}", "gists_url": "https://api.github.com/users/HiveMe/gists{/gist_id}", "starred_url": "https://api.github.com/users/HiveMe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HiveMe/subscriptions", "organizations_url": "https://api.github.com/users/HiveMe/orgs", "repos_url": "https://api.github.com/users/HiveMe/repos", "events_url": "https://api.github.com/users/HiveMe/events{/privacy}", "received_events_url": "https://api.github.com/users/HiveMe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-25T03:03:45Z", "updated_at": "2018-08-06T15:23:36Z", "closed_at": "2018-08-06T15:23:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello alex:\n   I'm a chinese,when i use taggit in my mother language in  a project, i found the unique id can't auto added ,while it works very well in english.Maybe i will fix it later,but now i just want you know it.\n\nSincerely\u00a0yours\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/445", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/445/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/445/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/445/events", "html_url": "https://github.com/jazzband/django-taggit/issues/445", "id": 184652964, "node_id": "MDU6SXNzdWUxODQ2NTI5NjQ=", "number": 445, "title": "Key (slug)=() already exists in Postgres", "user": {"login": "lockie", "id": 160056, "node_id": "MDQ6VXNlcjE2MDA1Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/160056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lockie", "html_url": "https://github.com/lockie", "followers_url": "https://api.github.com/users/lockie/followers", "following_url": "https://api.github.com/users/lockie/following{/other_user}", "gists_url": "https://api.github.com/users/lockie/gists{/gist_id}", "starred_url": "https://api.github.com/users/lockie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lockie/subscriptions", "organizations_url": "https://api.github.com/users/lockie/orgs", "repos_url": "https://api.github.com/users/lockie/repos", "events_url": "https://api.github.com/users/lockie/events{/privacy}", "received_events_url": "https://api.github.com/users/lockie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-22T20:42:09Z", "updated_at": "2016-10-24T08:36:53Z", "closed_at": "2016-10-24T08:36:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello.\nI'm writing test for my code which uses taggit. The model is straightforward:\n\n```\nclass Post(models.Model):\n    # ...\n    text = models.TextField(blank=False)\n    tags = TaggableManager(blank=True)\n```\n\nIn my tests, I'm creating several models with predefined tags for further testing, like so:\n\n```\ntexts = [\n    'some random text 1',\n    'some random text 2',\n    # ...\n]\n\ntags = [\n    ['randomtag1', 'randomtag2'],\n    ['randomtag1', 'randomtag2', 'randomtag3'],\n    # ...\n]\n\nclass TagsTest(TestCase):\n    def setUp(self):\n        super().setUp()\n        for text, t in zip(texts, tags):\n            post = Post.objects.create(text=text)\n            post.tags.add(*t)\n```\n\nThe tests do not fail, but I can see this in PostgreSQL console:\n\n> postgres_1  | ERROR:  duplicate key value violates unique constraint \"taggit_tag_slug_key\"\n> postgres_1  | DETAIL:  Key (slug)=() already exists.\n> postgres_1  | STATEMENT:  INSERT INTO \"taggit_tag\" (\"name\", \"slug\") VALUES ('randomtag1', '') RETURNING \"taggit_tag\".\"id\"\n> postgres_1  | ERROR:  duplicate key value violates unique constraint \"taggit_tag_slug_key\"\n> postgres_1  | DETAIL:  Key (slug)=() already exists.\n> postgres_1  | STATEMENT:  INSERT INTO \"taggit_tag\" (\"name\", \"slug\") VALUES ('randomtag2', '') RETURNING \"taggit_tag\".\"id\"\n> postgres_1  | ERROR:  duplicate key value violates unique constraint \"taggit_tag_slug_key\"\n> postgres_1  | DETAIL:  Key (slug)=() already exists.\n> postgres_1  | STATEMENT:  INSERT INTO \"taggit_tag\" (\"name\", \"slug\") VALUES ('randomtag3', '') RETURNING \"taggit_tag\".\"id\"\n> postgres_1  | ERROR:  duplicate key value violates unique constraint \"taggit_tag_slug_key\"\n> postgres_1  | DETAIL:  Key (slug)=() already exists.\n> postgres_1  | STATEMENT:  INSERT INTO \"taggit_tag\" (\"name\", \"slug\") VALUES ('randomtag1', '') RETURNING \"taggit_tag\".\"id\"\n\nEven though tests do not fail, this does not seem right. Is this something wrong with my code? How am I supposed to add tags to objects then?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/442", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/442/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/442/events", "html_url": "https://github.com/jazzband/django-taggit/issues/442", "id": 179940445, "node_id": "MDU6SXNzdWUxNzk5NDA0NDU=", "number": 442, "title": "Tag description field", "user": {"login": "meshekhar", "id": 7340685, "node_id": "MDQ6VXNlcjczNDA2ODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/7340685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meshekhar", "html_url": "https://github.com/meshekhar", "followers_url": "https://api.github.com/users/meshekhar/followers", "following_url": "https://api.github.com/users/meshekhar/following{/other_user}", "gists_url": "https://api.github.com/users/meshekhar/gists{/gist_id}", "starred_url": "https://api.github.com/users/meshekhar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meshekhar/subscriptions", "organizations_url": "https://api.github.com/users/meshekhar/orgs", "repos_url": "https://api.github.com/users/meshekhar/repos", "events_url": "https://api.github.com/users/meshekhar/events{/privacy}", "received_events_url": "https://api.github.com/users/meshekhar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-09-29T02:50:33Z", "updated_at": "2016-09-29T14:44:08Z", "closed_at": "2016-09-29T14:31:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to have a Tag description field so that a tag can be described in detail similar to the stackoverflow tag function. How can i add a custom field?\n\nCould it be considered a future enhancement?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/437", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/437/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/437/events", "html_url": "https://github.com/jazzband/django-taggit/issues/437", "id": 173379356, "node_id": "MDU6SXNzdWUxNzMzNzkzNTY=", "number": 437, "title": "Update setup.py classifiers to mention supported python versions", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 350516758, "node_id": "MDU6TGFiZWwzNTA1MTY3NTg=", "url": "https://api.github.com/repos/jazzband/django-taggit/labels/good%20first%20issue", "name": "good first issue", "color": "c2e0c6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-26T06:31:11Z", "updated_at": "2016-08-27T15:55:56Z", "closed_at": "2016-08-27T15:55:56Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Remove 3.2, add 3.5\n\nhttps://github.com/alex/django-taggit/blob/4c2382fc5905a0bc8a4e8e0ecd4939fe95a1e1cc/setup.py#L36-L39\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/432", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/432/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/432/events", "html_url": "https://github.com/jazzband/django-taggit/issues/432", "id": 171829122, "node_id": "MDU6SXNzdWUxNzE4MjkxMjI=", "number": 432, "title": "Test failures with Django 1.10", "user": {"login": "nijel", "id": 212189, "node_id": "MDQ6VXNlcjIxMjE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/212189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nijel", "html_url": "https://github.com/nijel", "followers_url": "https://api.github.com/users/nijel/followers", "following_url": "https://api.github.com/users/nijel/following{/other_user}", "gists_url": "https://api.github.com/users/nijel/gists{/gist_id}", "starred_url": "https://api.github.com/users/nijel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nijel/subscriptions", "organizations_url": "https://api.github.com/users/nijel/orgs", "repos_url": "https://api.github.com/users/nijel/repos", "events_url": "https://api.github.com/users/nijel/events{/privacy}", "received_events_url": "https://api.github.com/users/nijel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-08-18T06:45:31Z", "updated_at": "2016-09-02T12:25:25Z", "closed_at": "2016-09-02T12:25:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When running testsuite on Django 1.10 several tests fail:\n\n```\n======================================================================\nFAIL: test_form (tests.tests.TaggableFormCustomPKTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nijel/work/debian/django-taggit/tests/tests.py\", line 790, in test_form\n    <tr><th><label for=\"id_tags\">Tags:</label></th><td><input type=\"text\" name=\"tags\" value=\"green, red, yummy\" id=\"id_tags\" /><br />%(help_start)sA comma-separated list of tags.%(help_stop)s</td></tr>\"\"\")\n  File \"/home/nijel/work/debian/django-taggit/tests/tests.py\", line 66, in assertFormRenders\n    self.assertHTMLEqual(str(form), self._get_form_str(html))\n  File \"/home/nijel/work/debian/django-taggit/django/test/testcases.py\", line 699, in assertHTMLEqual\n    self.fail(self._formatMessage(msg, standardMsg))\nAssertionError: <tr>\n<th>\n<label for=\"id_name\">\nName:\n</label>\n</th><td>\n<input id=\"id_name\" max [truncated]... != <tr>\n<th>\n<label for=\"id_name\">\nName:\n</label>\n</th><td>\n<input id=\"id_name\" max [truncated]...\n  <tr>\n  <th>\n  <label for=\"id_name\">\n  Name:\n  </label>\n  </th><td>\n- <input id=\"id_name\" maxlength=\"50\" name=\"name\" required type=\"text\" value=\"apple\" />\n?                                                ---------\n\n+ <input id=\"id_name\" maxlength=\"50\" name=\"name\" type=\"text\" value=\"apple\" />\n  </td>\n  </tr><tr>\n  <th>\n  <label for=\"id_tags\">\n  Tags:\n  </label>\n  </th><td>\n- <input id=\"id_tags\" name=\"tags\" required type=\"text\" value=\"green, red, yummy\" /><br /><span class=\"helptext\">\n?                                 ---------\n\n+ <input id=\"id_tags\" name=\"tags\" type=\"text\" value=\"green, red, yummy\" /><br /><span class=\"helptext\">\n  A comma-separated list of tags.\n  </span>\n  </td>\n  </tr>\n\n======================================================================\nFAIL: test_form (tests.tests.TaggableFormDirectCustomPKTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nijel/work/debian/django-taggit/tests/tests.py\", line 790, in test_form\n    <tr><th><label for=\"id_tags\">Tags:</label></th><td><input type=\"text\" name=\"tags\" value=\"green, red, yummy\" id=\"id_tags\" /><br />%(help_start)sA comma-separated list of tags.%(help_stop)s</td></tr>\"\"\")\n  File \"/home/nijel/work/debian/django-taggit/tests/tests.py\", line 66, in assertFormRenders\n    self.assertHTMLEqual(str(form), self._get_form_str(html))\n  File \"/home/nijel/work/debian/django-taggit/django/test/testcases.py\", line 699, in assertHTMLEqual\n    self.fail(self._formatMessage(msg, standardMsg))\nAssertionError: <tr>\n<th>\n<label for=\"id_name\">\nName:\n</label>\n</th><td>\n<input id=\"id_name\" max [truncated]... != <tr>\n<th>\n<label for=\"id_name\">\nName:\n</label>\n</th><td>\n<input id=\"id_name\" max [truncated]...\n  <tr>\n  <th>\n  <label for=\"id_name\">\n  Name:\n  </label>\n  </th><td>\n- <input id=\"id_name\" maxlength=\"50\" name=\"name\" required type=\"text\" value=\"apple\" />\n?                                                ---------\n\n+ <input id=\"id_name\" maxlength=\"50\" name=\"name\" type=\"text\" value=\"apple\" />\n  </td>\n  </tr><tr>\n  <th>\n  <label for=\"id_tags\">\n  Tags:\n  </label>\n  </th><td>\n- <input id=\"id_tags\" name=\"tags\" required type=\"text\" value=\"green, red, yummy\" /><br /><span class=\"helptext\">\n?                                 ---------\n\n+ <input id=\"id_tags\" name=\"tags\" type=\"text\" value=\"green, red, yummy\" /><br /><span class=\"helptext\">\n  A comma-separated list of tags.\n  </span>\n  </td>\n  </tr>\n\n======================================================================\nFAIL: test_form (tests.tests.TaggableFormDirectTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nijel/work/debian/django-taggit/tests/tests.py\", line 790, in test_form\n    <tr><th><label for=\"id_tags\">Tags:</label></th><td><input type=\"text\" name=\"tags\" value=\"green, red, yummy\" id=\"id_tags\" /><br />%(help_start)sA comma-separated list of tags.%(help_stop)s</td></tr>\"\"\")\n  File \"/home/nijel/work/debian/django-taggit/tests/tests.py\", line 66, in assertFormRenders\n    self.assertHTMLEqual(str(form), self._get_form_str(html))\n  File \"/home/nijel/work/debian/django-taggit/django/test/testcases.py\", line 699, in assertHTMLEqual\n    self.fail(self._formatMessage(msg, standardMsg))\nAssertionError: <tr>\n<th>\n<label for=\"id_name\">\nName:\n</label>\n</th><td>\n<input id=\"id_name\" max [truncated]... != <tr>\n<th>\n<label for=\"id_name\">\nName:\n</label>\n</th><td>\n<input id=\"id_name\" max [truncated]...\n  <tr>\n  <th>\n  <label for=\"id_name\">\n  Name:\n  </label>\n  </th><td>\n- <input id=\"id_name\" maxlength=\"50\" name=\"name\" required type=\"text\" value=\"apple\" />\n?                                                ---------\n\n+ <input id=\"id_name\" maxlength=\"50\" name=\"name\" type=\"text\" value=\"apple\" />\n  </td>\n  </tr><tr>\n  <th>\n  <label for=\"id_tags\">\n  Tags:\n  </label>\n  </th><td>\n- <input id=\"id_tags\" name=\"tags\" required type=\"text\" value=\"green, red, yummy\" /><br /><span class=\"helptext\">\n?                                 ---------\n\n+ <input id=\"id_tags\" name=\"tags\" type=\"text\" value=\"green, red, yummy\" /><br /><span class=\"helptext\">\n  A comma-separated list of tags.\n  </span>\n  </td>\n  </tr>\n\n======================================================================\nFAIL: test_form (tests.tests.TaggableFormOfficialTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nijel/work/debian/django-taggit/tests/tests.py\", line 790, in test_form\n    <tr><th><label for=\"id_tags\">Tags:</label></th><td><input type=\"text\" name=\"tags\" value=\"green, red, yummy\" id=\"id_tags\" /><br />%(help_start)sA comma-separated list of tags.%(help_stop)s</td></tr>\"\"\")\n  File \"/home/nijel/work/debian/django-taggit/tests/tests.py\", line 66, in assertFormRenders\n    self.assertHTMLEqual(str(form), self._get_form_str(html))\n  File \"/home/nijel/work/debian/django-taggit/django/test/testcases.py\", line 699, in assertHTMLEqual\n    self.fail(self._formatMessage(msg, standardMsg))\nAssertionError: <tr>\n<th>\n<label for=\"id_name\">\nName:\n</label>\n</th><td>\n<input id=\"id_name\" max [truncated]... != <tr>\n<th>\n<label for=\"id_name\">\nName:\n</label>\n</th><td>\n<input id=\"id_name\" max [truncated]...\n  <tr>\n  <th>\n  <label for=\"id_name\">\n  Name:\n  </label>\n  </th><td>\n- <input id=\"id_name\" maxlength=\"50\" name=\"name\" required type=\"text\" value=\"apple\" />\n?                                                ---------\n\n+ <input id=\"id_name\" maxlength=\"50\" name=\"name\" type=\"text\" value=\"apple\" />\n  </td>\n  </tr><tr>\n  <th>\n  <label for=\"id_tags\">\n  Tags:\n  </label>\n  </th><td>\n- <input id=\"id_tags\" name=\"tags\" required type=\"text\" value=\"green, red, yummy\" /><br /><span class=\"helptext\">\n?                                 ---------\n\n+ <input id=\"id_tags\" name=\"tags\" type=\"text\" value=\"green, red, yummy\" /><br /><span class=\"helptext\">\n  A comma-separated list of tags.\n  </span>\n  </td>\n  </tr>\n\n======================================================================\nFAIL: test_form (tests.tests.TaggableFormTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nijel/work/debian/django-taggit/tests/tests.py\", line 790, in test_form\n    <tr><th><label for=\"id_tags\">Tags:</label></th><td><input type=\"text\" name=\"tags\" value=\"green, red, yummy\" id=\"id_tags\" /><br />%(help_start)sA comma-separated list of tags.%(help_stop)s</td></tr>\"\"\")\n  File \"/home/nijel/work/debian/django-taggit/tests/tests.py\", line 66, in assertFormRenders\n    self.assertHTMLEqual(str(form), self._get_form_str(html))\n  File \"/home/nijel/work/debian/django-taggit/django/test/testcases.py\", line 699, in assertHTMLEqual\n    self.fail(self._formatMessage(msg, standardMsg))\nAssertionError: <tr>\n<th>\n<label for=\"id_name\">\nName:\n</label>\n</th><td>\n<input id=\"id_name\" max [truncated]... != <tr>\n<th>\n<label for=\"id_name\">\nName:\n</label>\n</th><td>\n<input id=\"id_name\" max [truncated]...\n  <tr>\n  <th>\n  <label for=\"id_name\">\n  Name:\n  </label>\n  </th><td>\n- <input id=\"id_name\" maxlength=\"50\" name=\"name\" required type=\"text\" value=\"apple\" />\n?                                                ---------\n\n+ <input id=\"id_name\" maxlength=\"50\" name=\"name\" type=\"text\" value=\"apple\" />\n  </td>\n  </tr><tr>\n  <th>\n  <label for=\"id_tags\">\n  Tags:\n  </label>\n  </th><td>\n- <input id=\"id_tags\" name=\"tags\" required type=\"text\" value=\"green, red, yummy\" /><br /><span class=\"helptext\">\n?                                 ---------\n\n+ <input id=\"id_tags\" name=\"tags\" type=\"text\" value=\"green, red, yummy\" /><br /><span class=\"helptext\">\n  A comma-separated list of tags.\n  </span>\n  </td>\n  </tr>\n\n======================================================================\nFAIL: test_add_tag (tests.tests.TaggableManagerDirectCustomPKTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nijel/work/debian/django-taggit/tests/tests.py\", line 156, in test_add_tag\n    self.assert_tags_equal(self.food_model.tags.all(), ['green'])\n  File \"/home/nijel/work/debian/django-taggit/tests/tests.py\", line 45, in assert_tags_equal\n    self.assertEqual(got, tags)\nAssertionError: Lists differ: [] != [u'green']\n\nSecond list contains 1 additional elements.\nFirst extra element 0:\nu'green'\n\n- []\n+ [u'green']\n\n======================================================================\nFAIL: test_prefetch_related (tests.tests.TaggableManagerDirectCustomPKTestCase)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/nijel/work/debian/django-taggit/tests/tests.py\", line 654, in test_prefetch_related\n    'apple': set(['1', '2'])\nAssertionError: {u'orange': set([]), u'apple': set([])} != {u'orange': set([u'2', u'4']), u'apple': set([u'1', u'2'])}\n- {u'apple': set([]), u'orange': set([])}\n+ {u'apple': set([u'1', u'2']), u'orange': set([u'2', u'4'])}\n?                 ++++++++++                    ++++++++++\n\n```\n\nOriginally spotted at https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=834668\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/431", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/431/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/431/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/431/events", "html_url": "https://github.com/jazzband/django-taggit/issues/431", "id": 169506578, "node_id": "MDU6SXNzdWUxNjk1MDY1Nzg=", "number": 431, "title": "Integer out of range error when using BigInteger Field as id of model", "user": {"login": "TheJimFactor", "id": 5199164, "node_id": "MDQ6VXNlcjUxOTkxNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5199164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheJimFactor", "html_url": "https://github.com/TheJimFactor", "followers_url": "https://api.github.com/users/TheJimFactor/followers", "following_url": "https://api.github.com/users/TheJimFactor/following{/other_user}", "gists_url": "https://api.github.com/users/TheJimFactor/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheJimFactor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheJimFactor/subscriptions", "organizations_url": "https://api.github.com/users/TheJimFactor/orgs", "repos_url": "https://api.github.com/users/TheJimFactor/repos", "events_url": "https://api.github.com/users/TheJimFactor/events{/privacy}", "received_events_url": "https://api.github.com/users/TheJimFactor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-08-05T00:52:19Z", "updated_at": "2016-08-08T23:19:43Z", "closed_at": "2016-08-08T23:19:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "``` python\nclass Product(models.Model):\n    id = models.IntegerField(primary_key=True)\n    title = models.CharField(max_length=250)\n    vendor = models.CharField(max_length=250)\n    created = models.DateTimeField(auto_now_add=True)\n    updated = models.DateTimeField(auto_now=True)\n\n    tags = TaggableManager()\n\n    def __str__(self):\n        return self.title\n```\n\n```\nTraceback (most recent call last):\n  File \"/home/vagrant/.virtualenvs/shopifytags/lib/python3.4/site-packages/django/db/backends/utils.py\", line 64, in execute\n    return self.cursor.execute(sql, params)\npsycopg2.DataError: integer out of rang\n```\n\nWhen the id was 254862517.\n\nIs there a way to make taggit work with a big integerfield?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/430", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/430/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/430/events", "html_url": "https://github.com/jazzband/django-taggit/issues/430", "id": 168761817, "node_id": "MDU6SXNzdWUxNjg3NjE4MTc=", "number": 430, "title": "Django 1.10 throws admin.E013 error", "user": {"login": "nshafer", "id": 3673047, "node_id": "MDQ6VXNlcjM2NzMwNDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/3673047?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nshafer", "html_url": "https://github.com/nshafer", "followers_url": "https://api.github.com/users/nshafer/followers", "following_url": "https://api.github.com/users/nshafer/following{/other_user}", "gists_url": "https://api.github.com/users/nshafer/gists{/gist_id}", "starred_url": "https://api.github.com/users/nshafer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nshafer/subscriptions", "organizations_url": "https://api.github.com/users/nshafer/orgs", "repos_url": "https://api.github.com/users/nshafer/repos", "events_url": "https://api.github.com/users/nshafer/events{/privacy}", "received_events_url": "https://api.github.com/users/nshafer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-08-01T23:01:19Z", "updated_at": "2016-09-02T12:24:50Z", "closed_at": "2016-09-02T12:24:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "With Django 1.10 comes a slight change to how `ModelAdmin`s are validated that will cause an `admin.E013` error if you attempt to include a TaggableManager field, such as 'tags' in a `fields` or `fieldsets` in your admin.\n\nThe error will say something like, \"(admin.E013) The value of 'fieldsets[0][1][\"fields\"]' cannot include the many-to-many field 'tags' because that field manually specifies a relationship model.\"\n\nThis is because, in [the admin system check code](https://github.com/django/django/blob/master/django/contrib/admin/checks.py#L220) the check used to ignore django-taggit's TaggableManager because TaggableManager wasn't a subclass of ManyToManyField, but [now it checks](https://github.com/django/django/commit/983c158da7723eb00a376bd31db76709da4d0260#diff-044a46e68cb93c11c2dc9a7392119915R221) if `many_to_many` is True, which it is for TaggableManager, so this check now pays attention to django-taggit. And now that's it's paying attention to django-taggit, it will prevent Django from starting since our field is defining a custom through relationship, even though there is nothing special about it and it works fine as long as the check passes.\n\nI found a workaround with is to add the `auto_created = True` Meta tag to your [custom through class](https://django-taggit.readthedocs.io/en/latest/custom_tagging.html#custom-foreignkeys):\n\n```\nclass TaggedFood(TaggedItemBase):\n    content_object = models.ForeignKey('Food')\n\n    class Meta:\n         auto_created = True\n```\n\nOr to TaggedItemBase in django-taggit:\n\n```\nclass TaggedItemBase(ItemBase):\n    class Meta:\n        abstract = True\n        auto_created = True\n```\n\nHowever, this seems like a horrible hack just to pass the system check. Any thoughts on how to fix this properly? What all does the `many_to_many = True` setting do?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/425", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/425/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/425/events", "html_url": "https://github.com/jazzband/django-taggit/issues/425", "id": 166393975, "node_id": "MDU6SXNzdWUxNjYzOTM5NzU=", "number": 425, "title": "Add commits from 'develop' branch into 'master'", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-19T17:56:24Z", "updated_at": "2016-07-23T14:16:30Z", "closed_at": "2016-07-23T14:16:30Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "https://github.com/alex/django-taggit/compare/master...develop?expand=1\n\nI just realized that some commits (see link above) were added on `develop` branch, but not `master`. The `develop` branch is no longer being used and should be avoided. The commits above (by @auvipy) should be cherry picked onto `master` so we drop support for those old Django versions.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/413", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/413/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/413/events", "html_url": "https://github.com/jazzband/django-taggit/issues/413", "id": 159195570, "node_id": "MDU6SXNzdWUxNTkxOTU1NzA=", "number": 413, "title": "Loading existing tags within a fixture", "user": {"login": "swdelaney2", "id": 14985261, "node_id": "MDQ6VXNlcjE0OTg1MjYx", "avatar_url": "https://avatars3.githubusercontent.com/u/14985261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swdelaney2", "html_url": "https://github.com/swdelaney2", "followers_url": "https://api.github.com/users/swdelaney2/followers", "following_url": "https://api.github.com/users/swdelaney2/following{/other_user}", "gists_url": "https://api.github.com/users/swdelaney2/gists{/gist_id}", "starred_url": "https://api.github.com/users/swdelaney2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swdelaney2/subscriptions", "organizations_url": "https://api.github.com/users/swdelaney2/orgs", "repos_url": "https://api.github.com/users/swdelaney2/repos", "events_url": "https://api.github.com/users/swdelaney2/events{/privacy}", "received_events_url": "https://api.github.com/users/swdelaney2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-06-08T15:35:54Z", "updated_at": "2016-06-11T14:55:52Z", "closed_at": "2016-06-11T14:55:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to load tags as part of a fixture? And if not, what would be the best way to migrate them?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/407", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/407/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/407/events", "html_url": "https://github.com/jazzband/django-taggit/issues/407", "id": 155775356, "node_id": "MDU6SXNzdWUxNTU3NzUzNTY=", "number": 407, "title": "Contributor guidelines", "user": {"login": "prydie", "id": 244160, "node_id": "MDQ6VXNlcjI0NDE2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/244160?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prydie", "html_url": "https://github.com/prydie", "followers_url": "https://api.github.com/users/prydie/followers", "following_url": "https://api.github.com/users/prydie/following{/other_user}", "gists_url": "https://api.github.com/users/prydie/gists{/gist_id}", "starred_url": "https://api.github.com/users/prydie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prydie/subscriptions", "organizations_url": "https://api.github.com/users/prydie/orgs", "repos_url": "https://api.github.com/users/prydie/repos", "events_url": "https://api.github.com/users/prydie/events{/privacy}", "received_events_url": "https://api.github.com/users/prydie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2016-05-19T16:07:13Z", "updated_at": "2017-04-27T09:20:46Z", "closed_at": "2017-04-27T09:20:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "We should agree on guidelines for contributing to the project. The generally accepted norm is to provide a `CONTRIBUTING` file in the root of the repository with basic instructions on how/what to contribute to the repository.\n\nSome initial suggestions would include:\n- All code should pass linting by `flake8` (configuration provided)\n- Contributors should make every effort not to decrease the test coverage of the project in their submissions\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/406", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/406/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/406/events", "html_url": "https://github.com/jazzband/django-taggit/issues/406", "id": 155378155, "node_id": "MDU6SXNzdWUxNTUzNzgxNTU=", "number": 406, "title": "Can't save with django master", "user": {"login": "jpic", "id": 94636, "node_id": "MDQ6VXNlcjk0NjM2", "avatar_url": "https://avatars3.githubusercontent.com/u/94636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpic", "html_url": "https://github.com/jpic", "followers_url": "https://api.github.com/users/jpic/followers", "following_url": "https://api.github.com/users/jpic/following{/other_user}", "gists_url": "https://api.github.com/users/jpic/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpic/subscriptions", "organizations_url": "https://api.github.com/users/jpic/orgs", "repos_url": "https://api.github.com/users/jpic/repos", "events_url": "https://api.github.com/users/jpic/events{/privacy}", "received_events_url": "https://api.github.com/users/jpic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-05-17T22:33:34Z", "updated_at": "2016-05-17T22:43:05Z", "closed_at": "2016-05-17T22:43:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When trying to save using the [test_taggit](https://github.com/jpic/test_taggit) project:\n\n```\nInternal Server Error: /admin/testapp/food/add/\nTraceback (most recent call last):\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/core/handlers/base.py\", line 149, in get_response\n    response = self.process_exception_by_middleware(e, request)\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/core/handlers/base.py\", line 147, in get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/contrib/admin/options.py\", line 541, in wrapper\n    return self.admin_site.admin_view(view)(*args, **kwargs)\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/utils/decorators.py\", line 149, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/views/decorators/cache.py\", line 57, in _wrapped_view_func\n    response = view_func(request, *args, **kwargs)\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/contrib/admin/sites.py\", line 244, in inner\n    return view(request, *args, **kwargs)\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/contrib/admin/options.py\", line 1437, in add_view\n    return self.changeform_view(request, None, form_url, extra_context)\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/utils/decorators.py\", line 67, in _wrapper\n    return bound_func(*args, **kwargs)\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/utils/decorators.py\", line 149, in _wrapped_view\n    response = view_func(request, *args, **kwargs)\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/utils/decorators.py\", line 63, in bound_func\n    return func.__get__(self, type(self))(*args2, **kwargs2)\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/utils/decorators.py\", line 184, in inner\n    return func(*args, **kwargs)\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/contrib/admin/options.py\", line 1370, in changeform_view\n    if form.is_valid():\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/forms/forms.py\", line 161, in is_valid\n    return self.is_bound and not self.errors\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/forms/forms.py\", line 153, in errors\n    self.full_clean()\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/forms/forms.py\", line 364, in full_clean\n    self._post_clean()\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/forms/models.py\", line 380, in _post_clean\n    self.instance = construct_instance(self, self.instance, opts.fields, exclude)\n  File \"/home/jpic/env/lib/python2.7/site-packages/django/forms/models.py\", line 60, in construct_instance\n    f.save_form_data(instance, cleaned_data[f.name])\n  File \"/home/jpic/env/src/taggit/taggit/managers.py\", line 438, in save_form_data\n    getattr(instance, self.name).set(*value)\nAttributeError: 'NoneType' object has no attribute 'set'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/403", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/403/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/403/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/403/events", "html_url": "https://github.com/jazzband/django-taggit/issues/403", "id": 154181300, "node_id": "MDU6SXNzdWUxNTQxODEzMDA=", "number": 403, "title": "migrating from django 1.2 -> 1.6", "user": {"login": "dPeS", "id": 4797605, "node_id": "MDQ6VXNlcjQ3OTc2MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/4797605?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dPeS", "html_url": "https://github.com/dPeS", "followers_url": "https://api.github.com/users/dPeS/followers", "following_url": "https://api.github.com/users/dPeS/following{/other_user}", "gists_url": "https://api.github.com/users/dPeS/gists{/gist_id}", "starred_url": "https://api.github.com/users/dPeS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dPeS/subscriptions", "organizations_url": "https://api.github.com/users/dPeS/orgs", "repos_url": "https://api.github.com/users/dPeS/repos", "events_url": "https://api.github.com/users/dPeS/events{/privacy}", "received_events_url": "https://api.github.com/users/dPeS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-05-11T07:53:18Z", "updated_at": "2017-03-15T14:25:45Z", "closed_at": "2017-03-15T14:25:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I got this on taggit 0.9.3:\n\nFile \"/home/pepto/.virtualenvs/hdesk/local/lib/python2.7/site-packages/taggit/managers.py\", line 47, in **init**\n    self.unique = False\nAttributeError: can't set attribute\n\nbut I want to preserve ability to set non unique tag names, is there a way?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/398", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/398/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/398/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/398/events", "html_url": "https://github.com/jazzband/django-taggit/issues/398", "id": 153378197, "node_id": "MDU6SXNzdWUxNTMzNzgxOTc=", "number": 398, "title": "Retrieve tags in order they are added...", "user": {"login": "Jreyno40", "id": 7749113, "node_id": "MDQ6VXNlcjc3NDkxMTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/7749113?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jreyno40", "html_url": "https://github.com/Jreyno40", "followers_url": "https://api.github.com/users/Jreyno40/followers", "following_url": "https://api.github.com/users/Jreyno40/following{/other_user}", "gists_url": "https://api.github.com/users/Jreyno40/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jreyno40/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jreyno40/subscriptions", "organizations_url": "https://api.github.com/users/Jreyno40/orgs", "repos_url": "https://api.github.com/users/Jreyno40/repos", "events_url": "https://api.github.com/users/Jreyno40/events{/privacy}", "received_events_url": "https://api.github.com/users/Jreyno40/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-06T04:58:19Z", "updated_at": "2017-02-13T11:19:49Z", "closed_at": "2016-05-06T13:15:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this possible? I really need this feature.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/395", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/395/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/395/events", "html_url": "https://github.com/jazzband/django-taggit/issues/395", "id": 150203386, "node_id": "MDU6SXNzdWUxNTAyMDMzODY=", "number": 395, "title": "Migration fails with InvalidBasesError", "user": {"login": "ealco9", "id": 6990252, "node_id": "MDQ6VXNlcjY5OTAyNTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/6990252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ealco9", "html_url": "https://github.com/ealco9", "followers_url": "https://api.github.com/users/ealco9/followers", "following_url": "https://api.github.com/users/ealco9/following{/other_user}", "gists_url": "https://api.github.com/users/ealco9/gists{/gist_id}", "starred_url": "https://api.github.com/users/ealco9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ealco9/subscriptions", "organizations_url": "https://api.github.com/users/ealco9/orgs", "repos_url": "https://api.github.com/users/ealco9/repos", "events_url": "https://api.github.com/users/ealco9/events{/privacy}", "received_events_url": "https://api.github.com/users/ealco9/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-04-21T22:05:41Z", "updated_at": "2019-01-30T14:33:20Z", "closed_at": "2019-01-30T14:33:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to implement djangocms-blog but when I try to run the migrations the Taggit migration fails like this:\n\n```\nApplying taggit.0001_initial...Traceback (most recent call last):\n  File \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Library/Python/2.7/site-packages/django/core/management/__init__.py\", line 385, in execute_from_command_line\n    utility.execute()\n  File \"/Library/Python/2.7/site-packages/django/core/management/__init__.py\", line 377, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Library/Python/2.7/site-packages/django/core/management/base.py\", line 288, in run_from_argv\n    self.execute(*args, **options.__dict__)\n  File \"/Library/Python/2.7/site-packages/django/core/management/base.py\", line 338, in execute\n    output = self.handle(*args, **options)\n  File \"/Library/Python/2.7/site-packages/django/core/management/commands/migrate.py\", line 161, in handle\n    executor.migrate(targets, plan, fake=options.get(\"fake\", False))\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/executor.py\", line 68, in migrate\n    self.apply_migration(migration, fake=fake)\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/executor.py\", line 96, in apply_migration\n    if self.detect_soft_applied(migration):\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/executor.py\", line 140, in detect_soft_applied\n    apps = project_state.render()\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/state.py\", line 75, in render\n    \"for more\" % new_unrendered_models\ndjango.db.migrations.state.InvalidBasesError: Cannot resolve bases for [<ModelState: 'cms.PageUser'>, <ModelState: 'cms.PageUserGroup'>]\nThis can happen if you are inheriting models from an app with migrations (e.g. contrib.auth)\n in an app with no migrations; see https://docs.djangoproject.com/en/1.7/topics/migrations/#dependencies for more\nFile \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Library/Python/2.7/site-packages/django/core/management/__init__.py\", line 385, in execute_from_command_line\n    utility.execute()\n  File \"/Library/Python/2.7/site-packages/django/core/management/__init__.py\", line 377, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Library/Python/2.7/site-packages/django/core/management/base.py\", line 288, in run_from_argv\n    self.execute(*args, **options.__dict__)\n  File \"/Library/Python/2.7/site-packages/django/core/management/base.py\", line 338, in execute\n    output = self.handle(*args, **options)\n  File \"/Library/Python/2.7/site-packages/django/core/management/commands/migrate.py\", line 161, in handle\n    executor.migrate(targets, plan, fake=options.get(\"fake\", False))\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/executor.py\", line 68, in migrate\n    self.apply_migration(migration, fake=fake)\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/executor.py\", line 96, in apply_migration\n    if self.detect_soft_applied(migration):\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/executor.py\", line 140, in detect_soft_applied\n    apps = project_state.render()\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/state.py\", line 75, in render\n    \"for more\" % new_unrendered_models\ndjango.db.migrations.state.InvalidBasesError: Cannot resolve bases for [<ModelState: 'cms.PageUser'>, <ModelState: 'cms.PageUserGroup'>]\nThis can happen if you are inheriting models from an app with migrations (e.g. contrib.auth)\n in an app with no migrations; see https://docs.djangoproject.com/en/1.7/topics/migrations/#dependencies for more\nFile \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Library/Python/2.7/site-packages/django/core/management/__init__.py\", line 385, in execute_from_command_line\n    utility.execute()\n  File \"/Library/Python/2.7/site-packages/django/core/management/__init__.py\", line 377, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Library/Python/2.7/site-packages/django/core/management/base.py\", line 288, in run_from_argv\n    self.execute(*args, **options.__dict__)\n  File \"/Library/Python/2.7/site-packages/django/core/management/base.py\", line 338, in execute\n    output = self.handle(*args, **options)\n  File \"/Library/Python/2.7/site-packages/django/core/management/commands/migrate.py\", line 161, in handle\n    executor.migrate(targets, plan, fake=options.get(\"fake\", False))\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/executor.py\", line 68, in migrate\n    self.apply_migration(migration, fake=fake)\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/executor.py\", line 96, in apply_migration\n    if self.detect_soft_applied(migration):\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/executor.py\", line 140, in detect_soft_applied\n    apps = project_state.render()\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/state.py\", line 75, in render\n    \"for more\" % new_unrendered_models\ndjango.db.migrations.state.InvalidBasesError: Cannot resolve bases for [<ModelState: 'cms.PageUser'>, <ModelState: 'cms.PageUserGroup'>]\nThis can happen if you are inheriting models from an app with migrations (e.g. contrib.auth)\n in an app with no migrations; see https://docs.djangoproject.com/en/1.7/topics/migrations/#dependencies for more\nFile \"./manage.py\", line 10, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/Library/Python/2.7/site-packages/django/core/management/__init__.py\", line 385, in execute_from_command_line\n    utility.execute()\n  File \"/Library/Python/2.7/site-packages/django/core/management/__init__.py\", line 377, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/Library/Python/2.7/site-packages/django/core/management/base.py\", line 288, in run_from_argv\n    self.execute(*args, **options.__dict__)\n  File \"/Library/Python/2.7/site-packages/django/core/management/base.py\", line 338, in execute\n    output = self.handle(*args, **options)\n  File \"/Library/Python/2.7/site-packages/django/core/management/commands/migrate.py\", line 161, in handle\n    executor.migrate(targets, plan, fake=options.get(\"fake\", False))\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/executor.py\", line 68, in migrate\n    self.apply_migration(migration, fake=fake)\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/executor.py\", line 96, in apply_migration\n    if self.detect_soft_applied(migration):\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/executor.py\", line 140, in detect_soft_applied\n    apps = project_state.render()\n  File \"/Library/Python/2.7/site-packages/django/db/migrations/state.py\", line 75, in render\n    \"for more\" % new_unrendered_models\ndjango.db.migrations.state.InvalidBasesError: Cannot resolve bases for [<ModelState: 'cms.PageUser'>, <ModelState: 'cms.PageUserGroup'>]\nThis can happen if you are inheriting models from an app with migrations (e.g. contrib.auth)\n in an app with no migrations; see https://docs.djangoproject.com/en/1.7/topics/migrations/#dependencies for more\n```\n\nWhat can I do to fix it and get it working?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/388", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/388/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/388/events", "html_url": "https://github.com/jazzband/django-taggit/issues/388", "id": 144888936, "node_id": "MDU6SXNzdWUxNDQ4ODg5MzY=", "number": 388, "title": "Remove check for Django <1.3", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 350516758, "node_id": "MDU6TGFiZWwzNTA1MTY3NTg=", "url": "https://api.github.com/repos/jazzband/django-taggit/labels/good%20first%20issue", "name": "good first issue", "color": "c2e0c6", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-03-31T12:40:57Z", "updated_at": "2016-04-02T18:17:58Z", "closed_at": "2016-04-02T18:17:58Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "https://github.com/alex/django-taggit/blob/58c675dd4b331eda6c9e301a1bbb7a2f7ea51044/tests/tests.py#L47-L56\n\nWe don't support anything less than Django 1.3, so this can be removed.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/384", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/384/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/384/events", "html_url": "https://github.com/jazzband/django-taggit/issues/384", "id": 143097634, "node_id": "MDU6SXNzdWUxNDMwOTc2MzQ=", "number": 384, "title": "Form field doesn't show up in modelforms in django master", "user": {"login": "jpic", "id": 94636, "node_id": "MDQ6VXNlcjk0NjM2", "avatar_url": "https://avatars3.githubusercontent.com/u/94636?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jpic", "html_url": "https://github.com/jpic", "followers_url": "https://api.github.com/users/jpic/followers", "following_url": "https://api.github.com/users/jpic/following{/other_user}", "gists_url": "https://api.github.com/users/jpic/gists{/gist_id}", "starred_url": "https://api.github.com/users/jpic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jpic/subscriptions", "organizations_url": "https://api.github.com/users/jpic/orgs", "repos_url": "https://api.github.com/users/jpic/repos", "events_url": "https://api.github.com/users/jpic/events{/privacy}", "received_events_url": "https://api.github.com/users/jpic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-03-23T22:34:44Z", "updated_at": "2016-05-17T22:32:48Z", "closed_at": "2016-05-17T22:32:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In current django master, taggit's form field doesn't show up anymore.\n\nIn Django 1.9:\n\n![2016-03-23-233110_634x226_scrot](https://cloud.githubusercontent.com/assets/94636/14002944/8f9729d2-f14f-11e5-9aa6-45061fbb3594.png)\n\nIn Django master (14e6823):\n\n![2016-03-23-232846_618x152_scrot](https://cloud.githubusercontent.com/assets/94636/14002919/6bae34de-f14f-11e5-83d4-fca4c2a94100.png)\n\nI've uploaded a test project if you want to experiment with it (admin login: test, admin pass: test1231): https://github.com/jpic/test_taggit\n\nPerhaps Django is applying a design decision that was made a while ago ([django/#16286](https://code.djangoproject.com/ticket/16286)).\n\nIs this expected ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/383", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/383/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/383/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/383/events", "html_url": "https://github.com/jazzband/django-taggit/issues/383", "id": 142086182, "node_id": "MDU6SXNzdWUxNDIwODYxODI=", "number": 383, "title": "Switch to compiler.quote_name_unless_alias", "user": {"login": "orokusaki", "id": 97720, "node_id": "MDQ6VXNlcjk3NzIw", "avatar_url": "https://avatars1.githubusercontent.com/u/97720?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orokusaki", "html_url": "https://github.com/orokusaki", "followers_url": "https://api.github.com/users/orokusaki/followers", "following_url": "https://api.github.com/users/orokusaki/following{/other_user}", "gists_url": "https://api.github.com/users/orokusaki/gists{/gist_id}", "starred_url": "https://api.github.com/users/orokusaki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orokusaki/subscriptions", "organizations_url": "https://api.github.com/users/orokusaki/orgs", "repos_url": "https://api.github.com/users/orokusaki/repos", "events_url": "https://api.github.com/users/orokusaki/events{/privacy}", "received_events_url": "https://api.github.com/users/orokusaki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-03-19T17:54:23Z", "updated_at": "2018-08-06T15:10:06Z", "closed_at": "2018-08-06T15:10:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running:\n\n```\nSpam.objects.aggregate(models.Count('tags'))\n```\n\nProduces this warning:\n\n> [taggit/managers.py:87](https://github.com/alex/django-taggit/blob/develop/taggit/managers.py#L87): RemovedInDjango110Warning: Calling a SQLCompiler directly is deprecated. Call compiler.quote_name_unless_alias instead.\n\nThis isn't an issue yet, but I wanted to log it here, because it will be an issue with Django 1.10.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/381", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/381/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/381/events", "html_url": "https://github.com/jazzband/django-taggit/issues/381", "id": 141159601, "node_id": "MDU6SXNzdWUxNDExNTk2MDE=", "number": 381, "title": "Currently failing in django 1.9", "user": {"login": "tutuca", "id": 70032, "node_id": "MDQ6VXNlcjcwMDMy", "avatar_url": "https://avatars1.githubusercontent.com/u/70032?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tutuca", "html_url": "https://github.com/tutuca", "followers_url": "https://api.github.com/users/tutuca/followers", "following_url": "https://api.github.com/users/tutuca/following{/other_user}", "gists_url": "https://api.github.com/users/tutuca/gists{/gist_id}", "starred_url": "https://api.github.com/users/tutuca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tutuca/subscriptions", "organizations_url": "https://api.github.com/users/tutuca/orgs", "repos_url": "https://api.github.com/users/tutuca/repos", "events_url": "https://api.github.com/users/tutuca/events{/privacy}", "received_events_url": "https://api.github.com/users/tutuca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-16T03:09:55Z", "updated_at": "2016-03-16T03:29:27Z", "closed_at": "2016-03-16T03:28:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\ndjango.template.library.InvalidTemplateLibrary: Invalid template library specified.\nImportError raised when trying to load 'taggit_templatetags.templatetags.taggit_extras': No module named  'django.db.models.loading'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/378", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/378/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/378/events", "html_url": "https://github.com/jazzband/django-taggit/issues/378", "id": 130437726, "node_id": "MDU6SXNzdWUxMzA0Mzc3MjY=", "number": 378, "title": "TaggedItem' object has no attribute '+'", "user": {"login": "alexsilva", "id": 2024086, "node_id": "MDQ6VXNlcjIwMjQwODY=", "avatar_url": "https://avatars3.githubusercontent.com/u/2024086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexsilva", "html_url": "https://github.com/alexsilva", "followers_url": "https://api.github.com/users/alexsilva/followers", "following_url": "https://api.github.com/users/alexsilva/following{/other_user}", "gists_url": "https://api.github.com/users/alexsilva/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexsilva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexsilva/subscriptions", "organizations_url": "https://api.github.com/users/alexsilva/orgs", "repos_url": "https://api.github.com/users/alexsilva/repos", "events_url": "https://api.github.com/users/alexsilva/events{/privacy}", "received_events_url": "https://api.github.com/users/alexsilva/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-02-01T18:08:46Z", "updated_at": "2016-02-01T20:25:50Z", "closed_at": "2016-02-01T20:25:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "AttributeError at /xadmin/auth/group/\n'TaggedItem' object has no attribute '+'\n\ntaggit 1.80.0\n\nDjango 1.7\nxadmin (branch django1.7)\npython2.7\n\nWhen trying to delete groups containing tags the error occurs.\nThis was marked as resolved but it seems not.\n\nhttps://github.com/alex/django-taggit/issues/172\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/375", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/375/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/375/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/375/events", "html_url": "https://github.com/jazzband/django-taggit/issues/375", "id": 127889292, "node_id": "MDU6SXNzdWUxMjc4ODkyOTI=", "number": 375, "title": "Duplicate entry error during \"add\"", "user": {"login": "gluwa", "id": 1251062, "node_id": "MDEyOk9yZ2FuaXphdGlvbjEyNTEwNjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1251062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gluwa", "html_url": "https://github.com/gluwa", "followers_url": "https://api.github.com/users/gluwa/followers", "following_url": "https://api.github.com/users/gluwa/following{/other_user}", "gists_url": "https://api.github.com/users/gluwa/gists{/gist_id}", "starred_url": "https://api.github.com/users/gluwa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gluwa/subscriptions", "organizations_url": "https://api.github.com/users/gluwa/orgs", "repos_url": "https://api.github.com/users/gluwa/repos", "events_url": "https://api.github.com/users/gluwa/events{/privacy}", "received_events_url": "https://api.github.com/users/gluwa/received_events", "type": "Organization", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-01-21T10:12:31Z", "updated_at": "2016-02-03T14:01:10Z", "closed_at": "2016-02-03T14:01:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was getting\n\n```\nIntegrityError: (1062, \"Duplicate entry 'foobar' for key 'name'\")\n```\n\na lot and investigated the issue.\nWhile `_TaggableManager.add()` is running, some existing tags ended up in `tags_to_create` and caused the error above.\n\nI'm not sure why this is happening yet but it might have to do with the fact that I have changed `TAGGIT_CASE_INSENSITIVE` from `False` to `True`, and my `slugify` method.\n\nI had to change \n\n```\nfor new_tag in tags_to_create:\n    tag_objs.add(self.through.tag_model().objects.create(name=new_tag))\n```\n\ninto\n\n```\nfor new_tag in tags_to_create:\n    new_tag_obj, created = self.through.tag_model().objects.get_or_create(name=new_tag)\n    tag_objs.add(new_tag_obj)\n```\n\nto avoid this problem.\nDid any of you encountered the same problem before? I will update when I find the exact cause and solution.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/369", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/369/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/369/events", "html_url": "https://github.com/jazzband/django-taggit/issues/369", "id": 123781823, "node_id": "MDU6SXNzdWUxMjM3ODE4MjM=", "number": 369, "title": "drop support of all versions less then 1.8", "user": {"login": "auvipy", "id": 6212603, "node_id": "MDQ6VXNlcjYyMTI2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/auvipy", "html_url": "https://github.com/auvipy", "followers_url": "https://api.github.com/users/auvipy/followers", "following_url": "https://api.github.com/users/auvipy/following{/other_user}", "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}", "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions", "organizations_url": "https://api.github.com/users/auvipy/orgs", "repos_url": "https://api.github.com/users/auvipy/repos", "events_url": "https://api.github.com/users/auvipy/events{/privacy}", "received_events_url": "https://api.github.com/users/auvipy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-12-24T09:39:11Z", "updated_at": "2016-08-26T06:17:01Z", "closed_at": "2016-08-26T06:17:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "i will be happy to send pr\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/367", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/367/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/367/events", "html_url": "https://github.com/jazzband/django-taggit/issues/367", "id": 123651250, "node_id": "MDU6SXNzdWUxMjM2NTEyNTA=", "number": 367, "title": "How to get a list of tags which are attached to a specific model?", "user": {"login": "extremewaysback", "id": 13831728, "node_id": "MDQ6VXNlcjEzODMxNzI4", "avatar_url": "https://avatars1.githubusercontent.com/u/13831728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/extremewaysback", "html_url": "https://github.com/extremewaysback", "followers_url": "https://api.github.com/users/extremewaysback/followers", "following_url": "https://api.github.com/users/extremewaysback/following{/other_user}", "gists_url": "https://api.github.com/users/extremewaysback/gists{/gist_id}", "starred_url": "https://api.github.com/users/extremewaysback/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/extremewaysback/subscriptions", "organizations_url": "https://api.github.com/users/extremewaysback/orgs", "repos_url": "https://api.github.com/users/extremewaysback/repos", "events_url": "https://api.github.com/users/extremewaysback/events{/privacy}", "received_events_url": "https://api.github.com/users/extremewaysback/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-12-23T12:25:31Z", "updated_at": "2016-02-20T11:10:19Z", "closed_at": "2016-02-20T11:10:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to get a list of tag objects which are attached to a specific model?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/360", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/360/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/360/events", "html_url": "https://github.com/jazzband/django-taggit/issues/360", "id": 118667100, "node_id": "MDU6SXNzdWUxMTg2NjcxMDA=", "number": 360, "title": "Django commit c049c43 landing in 1.9 breaks TaggableManager", "user": {"login": "nealtodd", "id": 298652, "node_id": "MDQ6VXNlcjI5ODY1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/298652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nealtodd", "html_url": "https://github.com/nealtodd", "followers_url": "https://api.github.com/users/nealtodd/followers", "following_url": "https://api.github.com/users/nealtodd/following{/other_user}", "gists_url": "https://api.github.com/users/nealtodd/gists{/gist_id}", "starred_url": "https://api.github.com/users/nealtodd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nealtodd/subscriptions", "organizations_url": "https://api.github.com/users/nealtodd/orgs", "repos_url": "https://api.github.com/users/nealtodd/repos", "events_url": "https://api.github.com/users/nealtodd/events{/privacy}", "received_events_url": "https://api.github.com/users/nealtodd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-11-24T17:49:06Z", "updated_at": "2017-01-09T16:03:18Z", "closed_at": "2015-11-27T15:48:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The https://github.com/django/django/commit/c049c43e28a3e46eaed13bb8e018b221250a0145 commit on Django 1.9.x stable (backported from master) and part of 1.9rc1 breaks TaggableManager during system checks, preventing an application from starting up:\n\n```\nPerforming system checks...\n\nUnhandled exception in thread started by <function wrapper at 0xb569579c>\nTraceback (most recent call last):\n  File \"/django/utils/autoreload.py\", line 226, in wrapper\n    fn(*args, **kwargs)\n  File \"/django/core/management/commands/runserver.py\", line 116, in inner_run\n    self.check(display_num_errors=True)\n  File \"/django/core/management/base.py\", line 426, in check\n    include_deployment_checks=include_deployment_checks,\n  File \"/django/core/checks/registry.py\", line 75, in run_checks\n    new_errors = check(app_configs=app_configs)\n  File \"/django/core/checks/model_checks.py\", line 28, in check_all_models\n    errors.extend(model.check(**kwargs))\n  File \"/django/db/models/base.py\", line 1170, in check\n    errors.extend(cls._check_fields(**kwargs))\n  File \"/django/db/models/base.py\", line 1249, in _check_fields\n    errors.extend(field.check(from_model=cls, **kwargs))\n  File \"/django/db/models/fields/related.py\", line 118, in check\n    errors.extend(self._check_relation_model_exists())\n  File \"/django/db/models/fields/related.py\", line 152, in _check_relation_model_exists\n    rel_is_missing = self.remote_field.model not in self.opts.apps.get_models()\nAttributeError: 'TaggableManager' object has no attribute 'opts'\n```\n\nI haven't figured out yet where `self.opts` gets set on a `Field` or `RelatedField` class (which `TaggableManager` subclasses) during app config. ~~I presume that because `TaggableManager` is slightly unusual in being a `django.db.models.Manager` as well as subclassing `RelatedField` and `Field` it might not be getting `self.opts` set in the way a model field would.~~ (edit: misread code, it's not a Manager, it's a field using _TaggableManager)\n\n(Aside: why does `TaggableManager` subclass `RelatedField` and `Field` when `RelatedField` itself subclasses  `Field`?)\n\nI'll do some more digging but I thought I'd report the issue now ahead of the scheduled Django 1.9 release in a few days (1st Dec). \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/357", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/357/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/357/events", "html_url": "https://github.com/jazzband/django-taggit/issues/357", "id": 117504046, "node_id": "MDU6SXNzdWUxMTc1MDQwNDY=", "number": 357, "title": "django-taggit in django1.8", "user": {"login": "lanzhiheng", "id": 8858472, "node_id": "MDQ6VXNlcjg4NTg0NzI=", "avatar_url": "https://avatars3.githubusercontent.com/u/8858472?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lanzhiheng", "html_url": "https://github.com/lanzhiheng", "followers_url": "https://api.github.com/users/lanzhiheng/followers", "following_url": "https://api.github.com/users/lanzhiheng/following{/other_user}", "gists_url": "https://api.github.com/users/lanzhiheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/lanzhiheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lanzhiheng/subscriptions", "organizations_url": "https://api.github.com/users/lanzhiheng/orgs", "repos_url": "https://api.github.com/users/lanzhiheng/repos", "events_url": "https://api.github.com/users/lanzhiheng/events{/privacy}", "received_events_url": "https://api.github.com/users/lanzhiheng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-11-18T03:16:02Z", "updated_at": "2015-11-18T03:23:26Z", "closed_at": "2015-11-18T03:23:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I follow your doc with django1.8 and then I get this Error\n\n`\n  File \"/home/lan/tag/env/lib/python2.7/site-packages/django/**init**.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \"/home/lan/tag/env/lib/python2.7/site-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \"/home/lan/tag/env/lib/python2.7/site-packages/django/apps/config.py\", line 198, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/usr/lib64/python2.7/importlib/**init**.py\", line 37, in import_module\n    **import**(name)\n  File \"/home/lan/tag/tag/tag/mytag/models.py\", line 4, in <module>\n    from taggit.managers import TaggableManager\n  File \"/home/lan/tag/env/lib/python2.7/site-packages/taggit/managers.py\", line 13, in <module>\n    from django.db.models.related import RelatedObject\nImportError: No module named related\n\n`\nBut When I run it with Django1.6 It's OK \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/356", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/356/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/356/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/356/events", "html_url": "https://github.com/jazzband/django-taggit/issues/356", "id": 116160949, "node_id": "MDU6SXNzdWUxMTYxNjA5NDk=", "number": 356, "title": "Unicode Slugs for Unicode Tags", "user": {"login": "avorio", "id": 649020, "node_id": "MDQ6VXNlcjY0OTAyMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/649020?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avorio", "html_url": "https://github.com/avorio", "followers_url": "https://api.github.com/users/avorio/followers", "following_url": "https://api.github.com/users/avorio/following{/other_user}", "gists_url": "https://api.github.com/users/avorio/gists{/gist_id}", "starred_url": "https://api.github.com/users/avorio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avorio/subscriptions", "organizations_url": "https://api.github.com/users/avorio/orgs", "repos_url": "https://api.github.com/users/avorio/repos", "events_url": "https://api.github.com/users/avorio/events{/privacy}", "received_events_url": "https://api.github.com/users/avorio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-10T17:39:27Z", "updated_at": "2016-02-15T21:45:39Z", "closed_at": "2016-02-15T21:45:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have encountered so many problems using unicode tags and slugs.\n\nSee, for example, _Different unicode but same slug exception error_ #340.\n\nI just came across [django-uuslug](https://github.com/un33k/django-uuslug) and wondered whether we could incorporate it for unicode slugs for unicode tags. Or is this not the right scope?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/351", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/351/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/351/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/351/events", "html_url": "https://github.com/jazzband/django-taggit/issues/351", "id": 113169870, "node_id": "MDU6SXNzdWUxMTMxNjk4NzA=", "number": 351, "title": "AttributeError: can't set attribute with Django 1.9 and Py3", "user": {"login": "jdufresne", "id": 347634, "node_id": "MDQ6VXNlcjM0NzYzNA==", "avatar_url": "https://avatars1.githubusercontent.com/u/347634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jdufresne", "html_url": "https://github.com/jdufresne", "followers_url": "https://api.github.com/users/jdufresne/followers", "following_url": "https://api.github.com/users/jdufresne/following{/other_user}", "gists_url": "https://api.github.com/users/jdufresne/gists{/gist_id}", "starred_url": "https://api.github.com/users/jdufresne/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jdufresne/subscriptions", "organizations_url": "https://api.github.com/users/jdufresne/orgs", "repos_url": "https://api.github.com/users/jdufresne/repos", "events_url": "https://api.github.com/users/jdufresne/events{/privacy}", "received_events_url": "https://api.github.com/users/jdufresne/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-10-24T16:20:39Z", "updated_at": "2015-10-25T21:52:58Z", "closed_at": "2015-10-25T21:52:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have a model using taggit like: `tags = taggit.managers.TaggableManager()`\n\nDuring `django.setup()` the following error occurs in taggit:\n\n```\n$ venv/bin/python manage.py collectstatic --noinput\nTraceback (most recent call last):\n  File \"manage.py\", line 9, in <module>\n    execute_from_command_line(sys.argv)\n  File \".../venv/lib64/python3.4/site-packages/django/core/management/__init__.py\", line 350, in execute_from_command_line\n    utility.execute()\n  File \".../venv/lib64/python3.4/site-packages/django/core/management/__init__.py\", line 324, in execute\n    django.setup()\n  File \".../venv/lib64/python3.4/site-packages/django/__init__.py\", line 18, in setup\n    apps.populate(settings.INSTALLED_APPS)\n  File \".../venv/lib64/python3.4/site-packages/django/apps/registry.py\", line 108, in populate\n    app_config.import_models(all_models)\n  File \".../venv/lib64/python3.4/site-packages/django/apps/config.py\", line 202, in import_models\n    self.models_module = import_module(models_module_name)\n  File \"/usr/lib64/python3.4/importlib/__init__.py\", line 109, in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n  File \"<frozen importlib._bootstrap>\", line 2254, in _gcd_import\n  File \"<frozen importlib._bootstrap>\", line 2237, in _find_and_load\n  File \"<frozen importlib._bootstrap>\", line 2226, in _find_and_load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1200, in _load_unlocked\n  File \"<frozen importlib._bootstrap>\", line 1129, in _exec\n  File \"<frozen importlib._bootstrap>\", line 1471, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 321, in _call_with_frames_removed\n  ...\n  File \".../app/models.py\"\n    tags = taggit.managers.TaggableManager()\n  File \".../venv/lib64/python3.4/site-packages/taggit/managers.py\", line 285, in __init__\n    rel = TaggableRel(self, related_name, self.through, to=to)\n  File \".../venv/lib64/python3.4/site-packages/taggit/managers.py\", line 55, in __init__\n    self.to = to\nAttributeError: can't set attribute\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/350", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/350/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/350/events", "html_url": "https://github.com/jazzband/django-taggit/issues/350", "id": 112859526, "node_id": "MDU6SXNzdWUxMTI4NTk1MjY=", "number": 350, "title": "Flipstogram headers don't have '?' next to heading", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-10-22T18:12:55Z", "updated_at": "2015-10-22T18:13:16Z", "closed_at": "2015-10-22T18:13:03Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "\"User Power\", \"Top Hashtags\", \"Top Sites\" don't have the '?' next to the heading on staging, but they do on production\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/349", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/349/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/349/events", "html_url": "https://github.com/jazzband/django-taggit/issues/349", "id": 112245684, "node_id": "MDU6SXNzdWUxMTIyNDU2ODQ=", "number": 349, "title": "Race condition with get_or_create on TaggedItem", "user": {"login": "mythmon", "id": 305049, "node_id": "MDQ6VXNlcjMwNTA0OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/305049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mythmon", "html_url": "https://github.com/mythmon", "followers_url": "https://api.github.com/users/mythmon/followers", "following_url": "https://api.github.com/users/mythmon/following{/other_user}", "gists_url": "https://api.github.com/users/mythmon/gists{/gist_id}", "starred_url": "https://api.github.com/users/mythmon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mythmon/subscriptions", "organizations_url": "https://api.github.com/users/mythmon/orgs", "repos_url": "https://api.github.com/users/mythmon/repos", "events_url": "https://api.github.com/users/mythmon/events{/privacy}", "received_events_url": "https://api.github.com/users/mythmon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-19T22:26:03Z", "updated_at": "2019-02-25T00:15:47Z", "closed_at": "2019-02-25T00:15:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When adding tags to items, the `TaggedItem` model is used for the intermediate table. In particular, `get_or_create` is used. There are no unique restrictions on this table, so [`get_or_create` is vulnerable to race conditions](https://docs.djangoproject.com/en/dev/ref/models/querysets/#get-or-create) if two threads/processes/servers try and add a tag to one item at the same time.\n\nTo fix this, I think it would work to add a unique_together contrainst on `(tag, content_type, object_id)` on the TaggedItem model. That way, the second creation will not happen (and `get_or_create` will recover correctly).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/347", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/347/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/347/events", "html_url": "https://github.com/jazzband/django-taggit/issues/347", "id": 110695789, "node_id": "MDU6SXNzdWUxMTA2OTU3ODk=", "number": 347, "title": "Some unicode tags return empty slug", "user": {"login": "tpeaton", "id": 4640983, "node_id": "MDQ6VXNlcjQ2NDA5ODM=", "avatar_url": "https://avatars0.githubusercontent.com/u/4640983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tpeaton", "html_url": "https://github.com/tpeaton", "followers_url": "https://api.github.com/users/tpeaton/followers", "following_url": "https://api.github.com/users/tpeaton/following{/other_user}", "gists_url": "https://api.github.com/users/tpeaton/gists{/gist_id}", "starred_url": "https://api.github.com/users/tpeaton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tpeaton/subscriptions", "organizations_url": "https://api.github.com/users/tpeaton/orgs", "repos_url": "https://api.github.com/users/tpeaton/repos", "events_url": "https://api.github.com/users/tpeaton/events{/privacy}", "received_events_url": "https://api.github.com/users/tpeaton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-10-09T16:42:09Z", "updated_at": "2015-10-09T16:49:37Z", "closed_at": "2015-10-09T16:49:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Certain unicode doesn't yield a usable slug. \n\n```\n>>> obj.tags.add('(\u0e07\u2019\u0300\u2019\u0301)\u0e07')\n>>> obj.tags.all()\n[<Tag: \u0e07\u2019\u0300\u2019\u0301)\u0e07>]\n>>> obj.tags.all()[0].slug\nu''\n```\n\nWe've solved this internally by doing this:\n\n```\nfrom shortuuid import uuid\n\nname = data['name'].encode('ascii', 'ignore').decode('utf-8')\nif not taggit_slugify(name):\n    data['slug'] = 'tag-{}'.format(uuid())\n```\n\nSeem reasonable?  If so, I can add it to [this method](https://github.com/alex/django-taggit/blob/develop/taggit/models.py#L89-L93) and create a PR.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/346", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/346/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/346/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/346/events", "html_url": "https://github.com/jazzband/django-taggit/issues/346", "id": 110049779, "node_id": "MDU6SXNzdWUxMTAwNDk3Nzk=", "number": 346, "title": "Expected <class 'django.db.models.base.ModelBase'> or str.", "user": {"login": "letoss", "id": 4682820, "node_id": "MDQ6VXNlcjQ2ODI4MjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4682820?v=4", "gravatar_id": "", "url": "https://api.github.com/users/letoss", "html_url": "https://github.com/letoss", "followers_url": "https://api.github.com/users/letoss/followers", "following_url": "https://api.github.com/users/letoss/following{/other_user}", "gists_url": "https://api.github.com/users/letoss/gists{/gist_id}", "starred_url": "https://api.github.com/users/letoss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/letoss/subscriptions", "organizations_url": "https://api.github.com/users/letoss/orgs", "repos_url": "https://api.github.com/users/letoss/repos", "events_url": "https://api.github.com/users/letoss/events{/privacy}", "received_events_url": "https://api.github.com/users/letoss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-10-06T16:38:20Z", "updated_at": "2015-10-06T17:00:24Z", "closed_at": "2015-10-06T17:00:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to add a tag using a model?\n\nsomething like this:\n\nmymodel.tags.add(myOtherModel)\n\nAppreciate your answer.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/336", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/336/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/336/events", "html_url": "https://github.com/jazzband/django-taggit/issues/336", "id": 100837211, "node_id": "MDU6SXNzdWUxMDA4MzcyMTE=", "number": 336, "title": "Does django-taggit work without the use of models?", "user": {"login": "JellisHeRo", "id": 9903923, "node_id": "MDQ6VXNlcjk5MDM5MjM=", "avatar_url": "https://avatars3.githubusercontent.com/u/9903923?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JellisHeRo", "html_url": "https://github.com/JellisHeRo", "followers_url": "https://api.github.com/users/JellisHeRo/followers", "following_url": "https://api.github.com/users/JellisHeRo/following{/other_user}", "gists_url": "https://api.github.com/users/JellisHeRo/gists{/gist_id}", "starred_url": "https://api.github.com/users/JellisHeRo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JellisHeRo/subscriptions", "organizations_url": "https://api.github.com/users/JellisHeRo/orgs", "repos_url": "https://api.github.com/users/JellisHeRo/repos", "events_url": "https://api.github.com/users/JellisHeRo/events{/privacy}", "received_events_url": "https://api.github.com/users/JellisHeRo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-08-13T18:31:04Z", "updated_at": "2017-03-15T14:25:14Z", "closed_at": "2017-03-15T14:25:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im considering using this app for tagging but I want to know if this is useful for apps without the use of models, like if I were to create a class object rather than rely on models and a database?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/333", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/333/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/333/events", "html_url": "https://github.com/jazzband/django-taggit/issues/333", "id": 99509325, "node_id": "MDU6SXNzdWU5OTUwOTMyNQ==", "number": 333, "title": "django.db.utils.IntegrityError with custom TagBase classes", "user": {"login": "groovecoder", "id": 71928, "node_id": "MDQ6VXNlcjcxOTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/71928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/groovecoder", "html_url": "https://github.com/groovecoder", "followers_url": "https://api.github.com/users/groovecoder/followers", "following_url": "https://api.github.com/users/groovecoder/following{/other_user}", "gists_url": "https://api.github.com/users/groovecoder/gists{/gist_id}", "starred_url": "https://api.github.com/users/groovecoder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/groovecoder/subscriptions", "organizations_url": "https://api.github.com/users/groovecoder/orgs", "repos_url": "https://api.github.com/users/groovecoder/repos", "events_url": "https://api.github.com/users/groovecoder/events{/privacy}", "received_events_url": "https://api.github.com/users/groovecoder/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-08-06T19:40:24Z", "updated_at": "2015-08-08T14:31:33Z", "closed_at": "2015-08-08T14:31:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As mentioned in https://github.com/alex/django-taggit/commit/b32c6cbeb37d40d00d687948ccc4854205b59b7c#commitcomment-12569645, the hard-coding of `Tag.objects` during the existence check of `TagBase.save()` means that other child classes of `TagBase` will not find existant duplicate tags while saving.\n\nIn apps with `TagBase` child classes, this can cause `django.db.utils.IntegrityError`s.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/332", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/332/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/332/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/332/events", "html_url": "https://github.com/jazzband/django-taggit/issues/332", "id": 97945267, "node_id": "MDU6SXNzdWU5Nzk0NTI2Nw==", "number": 332, "title": "Saving tags on models who have UUID as a primary key throw error", "user": {"login": "austinhuminski", "id": 1431405, "node_id": "MDQ6VXNlcjE0MzE0MDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1431405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/austinhuminski", "html_url": "https://github.com/austinhuminski", "followers_url": "https://api.github.com/users/austinhuminski/followers", "following_url": "https://api.github.com/users/austinhuminski/following{/other_user}", "gists_url": "https://api.github.com/users/austinhuminski/gists{/gist_id}", "starred_url": "https://api.github.com/users/austinhuminski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/austinhuminski/subscriptions", "organizations_url": "https://api.github.com/users/austinhuminski/orgs", "repos_url": "https://api.github.com/users/austinhuminski/repos", "events_url": "https://api.github.com/users/austinhuminski/events{/privacy}", "received_events_url": "https://api.github.com/users/austinhuminski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-07-29T14:12:30Z", "updated_at": "2017-04-19T13:52:30Z", "closed_at": "2017-04-19T13:52:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "For models that uses UUID as its PK\n\n```\nclass Foo(models.Model):        \n    foo_id = models.UUIDField(  \n        primary_key=True,             \n        default=uuid.uuid4,           \n        editable=False                \n    )  \n    tags = TaggableManager()        \n```\n\nWhen I go and try to add a new tag\n\n```\nf = Foo.objects.latest('pk')\nf.tags.add(\"testing\")\n```\n\nI get `DataError: integer out of range`\n\nWhen I import pdb on the cursor to view the SQL going in I see this.\n\n```\n(Pdb) params                                                                                                              \n(1, 287082253891563438098836942573405313042, 9)                                                                           \n(Pdb) sql                                                                                                                 \n'INSERT INTO \"taggit_taggeditem\" (\"tag_id\", \"object_id\", \"content_type_id\") VALUES (%s, %s, %s) RETURNING \"taggit_taggedit\nm\".\"id\"'    \n```\n\nThat long integer (287082253891563438098836942573405313042) trying to be insterted is obvsiouly the cause for the error. This number is the int of the `UUID` for foo_id\n\n```\nIn [6]: foo.foo_id.int                      \nOut[6]: 287082253891563438098836942573405313042  \n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/321", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/321/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/321/events", "html_url": "https://github.com/jazzband/django-taggit/issues/321", "id": 90710412, "node_id": "MDU6SXNzdWU5MDcxMDQxMg==", "number": 321, "title": "'TaggableRel' object has no attribute 'through_fields' in Django 1.8.2", "user": {"login": "pacahon", "id": 460489, "node_id": "MDQ6VXNlcjQ2MDQ4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/460489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pacahon", "html_url": "https://github.com/pacahon", "followers_url": "https://api.github.com/users/pacahon/followers", "following_url": "https://api.github.com/users/pacahon/following{/other_user}", "gists_url": "https://api.github.com/users/pacahon/gists{/gist_id}", "starred_url": "https://api.github.com/users/pacahon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pacahon/subscriptions", "organizations_url": "https://api.github.com/users/pacahon/orgs", "repos_url": "https://api.github.com/users/pacahon/repos", "events_url": "https://api.github.com/users/pacahon/events{/privacy}", "received_events_url": "https://api.github.com/users/pacahon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-24T15:30:19Z", "updated_at": "2015-07-13T13:34:20Z", "closed_at": "2015-07-13T13:28:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to open admin page, it crashes with `TaggableRel' object has no attribute 'through_fields'`.\nI can add this attribute to TaggableRel class to fix this error, but to be honest I have no idea is it ok to do it in that way.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/320", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/320/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/320/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/320/events", "html_url": "https://github.com/jazzband/django-taggit/issues/320", "id": 90468158, "node_id": "MDU6SXNzdWU5MDQ2ODE1OA==", "number": 320, "title": "Duplicate entry 'TEST' for key 'name'", "user": {"login": "KarDer", "id": 4932822, "node_id": "MDQ6VXNlcjQ5MzI4MjI=", "avatar_url": "https://avatars3.githubusercontent.com/u/4932822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KarDer", "html_url": "https://github.com/KarDer", "followers_url": "https://api.github.com/users/KarDer/followers", "following_url": "https://api.github.com/users/KarDer/following{/other_user}", "gists_url": "https://api.github.com/users/KarDer/gists{/gist_id}", "starred_url": "https://api.github.com/users/KarDer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KarDer/subscriptions", "organizations_url": "https://api.github.com/users/KarDer/orgs", "repos_url": "https://api.github.com/users/KarDer/repos", "events_url": "https://api.github.com/users/KarDer/events{/privacy}", "received_events_url": "https://api.github.com/users/KarDer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-23T19:13:33Z", "updated_at": "2016-02-03T14:01:25Z", "closed_at": "2016-02-03T14:01:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you enter a tag \"test\"\nThen enter the \"TEST\"\n\nYou will see an error: **Duplicate entry 'TEST' for key name**\nIt would be good not to pay attention to the upper case\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/318", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/318/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/318/events", "html_url": "https://github.com/jazzband/django-taggit/issues/318", "id": 88785060, "node_id": "MDU6SXNzdWU4ODc4NTA2MA==", "number": 318, "title": "Required composit index for \"taggit_taggeditem\" table!", "user": {"login": "pahaz", "id": 1394025, "node_id": "MDQ6VXNlcjEzOTQwMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1394025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pahaz", "html_url": "https://github.com/pahaz", "followers_url": "https://api.github.com/users/pahaz/followers", "following_url": "https://api.github.com/users/pahaz/following{/other_user}", "gists_url": "https://api.github.com/users/pahaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pahaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pahaz/subscriptions", "organizations_url": "https://api.github.com/users/pahaz/orgs", "repos_url": "https://api.github.com/users/pahaz/repos", "events_url": "https://api.github.com/users/pahaz/events{/privacy}", "received_events_url": "https://api.github.com/users/pahaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-16T17:09:44Z", "updated_at": "2015-08-14T15:27:13Z", "closed_at": "2015-08-14T15:27:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For improving query performance, required to add a composite index like so:\n\n```\nCREATE INDEX \"taggit_taggeditem_faster\" ON \"taggit_taggeditem\" (\"object_id\", \"content_type_id\");\n```\n\nSQLite test:\n\n```\nFood.objects.filter(tags__name__in=['t2']).exclude(tags__name__in=['f2'])  # time: 0.386 (without index)\nFood.objects.filter(tags__name__in=['t2']).exclude(tags__name__in=['f2'])  # time: 0.001 (with index)\n# count(Food) = ~ 400 000, count(Tag) = ~ 200, count(TaggedItem) = ~ 2 000 000\n# ~ 5 tags per Food item\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/317", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/317/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/317/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/317/events", "html_url": "https://github.com/jazzband/django-taggit/issues/317", "id": 88721749, "node_id": "MDU6SXNzdWU4ODcyMTc0OQ==", "number": 317, "title": "RemovedInDjango19Warning", "user": {"login": "jonathanng", "id": 2832171, "node_id": "MDQ6VXNlcjI4MzIxNzE=", "avatar_url": "https://avatars2.githubusercontent.com/u/2832171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathanng", "html_url": "https://github.com/jonathanng", "followers_url": "https://api.github.com/users/jonathanng/followers", "following_url": "https://api.github.com/users/jonathanng/following{/other_user}", "gists_url": "https://api.github.com/users/jonathanng/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathanng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathanng/subscriptions", "organizations_url": "https://api.github.com/users/jonathanng/orgs", "repos_url": "https://api.github.com/users/jonathanng/repos", "events_url": "https://api.github.com/users/jonathanng/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathanng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-16T13:01:57Z", "updated_at": "2016-04-02T18:00:40Z", "closed_at": "2016-04-02T18:00:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Would be great if we could remove these warnings:\n\n```\nC:\\Anaconda\\lib\\site-packages\\taggit\\models.py:87: RemovedInDjango19Warning: Model class taggit.models.Tag doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n      class Tag(TagBase):\n\nWARN:py.warnings:C:\\Anaconda\\lib\\site-packages\\taggit\\models.py:87: RemovedInDjango19Warning: Model class taggit.models.Tag doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n      class Tag(TagBase):\n\nC:\\Anaconda\\lib\\site-packages\\taggit\\models.py:192: RemovedInDjango19Warning: Model class taggit.models.TaggedItem doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n      class TaggedItem(GenericTaggedItemBase, TaggedItemBase):\n\nWARN:py.warnings:C:\\Anaconda\\lib\\site-packages\\taggit\\models.py:192: RemovedInDjango19Warning: Model class taggit.models.TaggedItem doesn't declare an explicit app_label and either isn't in an application in INSTALLED_APPS or else was imported before its application was loaded. This will no longer be supported in Django 1.9.\n      class TaggedItem(GenericTaggedItemBase, TaggedItemBase):\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/312", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/312/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/312/events", "html_url": "https://github.com/jazzband/django-taggit/issues/312", "id": 86882084, "node_id": "MDU6SXNzdWU4Njg4MjA4NA==", "number": 312, "title": "ZeroDivisionError", "user": {"login": "loimu", "id": 3060785, "node_id": "MDQ6VXNlcjMwNjA3ODU=", "avatar_url": "https://avatars3.githubusercontent.com/u/3060785?v=4", "gravatar_id": "", "url": "https://api.github.com/users/loimu", "html_url": "https://github.com/loimu", "followers_url": "https://api.github.com/users/loimu/followers", "following_url": "https://api.github.com/users/loimu/following{/other_user}", "gists_url": "https://api.github.com/users/loimu/gists{/gist_id}", "starred_url": "https://api.github.com/users/loimu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/loimu/subscriptions", "organizations_url": "https://api.github.com/users/loimu/orgs", "repos_url": "https://api.github.com/users/loimu/repos", "events_url": "https://api.github.com/users/loimu/events{/privacy}", "received_events_url": "https://api.github.com/users/loimu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-10T08:05:46Z", "updated_at": "2018-08-06T00:58:10Z", "closed_at": "2018-08-06T00:58:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When there's only one tag or only one tagged item the following line throws an error\n\n```\n  File \"/home/xxx/.local/lib/python3.4/site-packages/taggit_templatetags/templatetags/taggit_extras.py\", line 45, in weight_fun\n    mult_fac = float(t_max-t_min)/float(f_max-f_min)\nZeroDivisionError: float division by zero\n```\n\ntested on django-taggit v0.11.2 and newer\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/307", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/307/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/307/events", "html_url": "https://github.com/jazzband/django-taggit/issues/307", "id": 71009829, "node_id": "MDU6SXNzdWU3MTAwOTgyOQ==", "number": 307, "title": "Template Tags and Filters don't work (i.e. join & last)", "user": {"login": "wagnerbenh", "id": 1786494, "node_id": "MDQ6VXNlcjE3ODY0OTQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1786494?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wagnerbenh", "html_url": "https://github.com/wagnerbenh", "followers_url": "https://api.github.com/users/wagnerbenh/followers", "following_url": "https://api.github.com/users/wagnerbenh/following{/other_user}", "gists_url": "https://api.github.com/users/wagnerbenh/gists{/gist_id}", "starred_url": "https://api.github.com/users/wagnerbenh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wagnerbenh/subscriptions", "organizations_url": "https://api.github.com/users/wagnerbenh/orgs", "repos_url": "https://api.github.com/users/wagnerbenh/repos", "events_url": "https://api.github.com/users/wagnerbenh/events{/privacy}", "received_events_url": "https://api.github.com/users/wagnerbenh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-26T04:38:27Z", "updated_at": "2015-04-26T14:53:46Z", "closed_at": "2015-04-26T14:53:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, it seems as though the built in template tags and filters, such as join, last, etc. do not work with the tags.\n\nFor example:\n\n{{ tag.name|last }} displays the last letter of each tag, rather than the last tag\nor \n{{ tag.name|join:\", \" }} displays each letter of the name seperated by a comma, rather than the each \n\nThank you in advance.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/301", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/301/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/301/events", "html_url": "https://github.com/jazzband/django-taggit/issues/301", "id": 63184862, "node_id": "MDU6SXNzdWU2MzE4NDg2Mg==", "number": 301, "title": "support from_queryset of django 1.7+ ?", "user": {"login": "pcompassion", "id": 84749, "node_id": "MDQ6VXNlcjg0NzQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/84749?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcompassion", "html_url": "https://github.com/pcompassion", "followers_url": "https://api.github.com/users/pcompassion/followers", "following_url": "https://api.github.com/users/pcompassion/following{/other_user}", "gists_url": "https://api.github.com/users/pcompassion/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcompassion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcompassion/subscriptions", "organizations_url": "https://api.github.com/users/pcompassion/orgs", "repos_url": "https://api.github.com/users/pcompassion/repos", "events_url": "https://api.github.com/users/pcompassion/events{/privacy}", "received_events_url": "https://api.github.com/users/pcompassion/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-03-20T08:14:03Z", "updated_at": "2015-03-20T10:36:40Z", "closed_at": "2015-03-20T10:36:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm not sure, but it seems not possible to use from_queryset of django 1.7+  for Custom Tag model.\n\nhttps://docs.djangoproject.com/en/1.7/topics/db/managers/#from-queryset\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/296", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/296/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/296/events", "html_url": "https://github.com/jazzband/django-taggit/issues/296", "id": 61737693, "node_id": "MDU6SXNzdWU2MTczNzY5Mw==", "number": 296, "title": "Any workaround for the lookup error in Django 1.7.6?", "user": {"login": "chawk", "id": 5013958, "node_id": "MDQ6VXNlcjUwMTM5NTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/5013958?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chawk", "html_url": "https://github.com/chawk", "followers_url": "https://api.github.com/users/chawk/followers", "following_url": "https://api.github.com/users/chawk/following{/other_user}", "gists_url": "https://api.github.com/users/chawk/gists{/gist_id}", "starred_url": "https://api.github.com/users/chawk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chawk/subscriptions", "organizations_url": "https://api.github.com/users/chawk/orgs", "repos_url": "https://api.github.com/users/chawk/repos", "events_url": "https://api.github.com/users/chawk/events{/privacy}", "received_events_url": "https://api.github.com/users/chawk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-15T03:28:54Z", "updated_at": "2018-08-06T14:35:15Z", "closed_at": "2018-08-06T14:35:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've tried to upgrade to the latest version of Django.  django-taggit cannot be migrated and throws this error. \n\n/local/lib/python2.7/site-packages/django/db/migrations/state.py\", line 94, in render\n    raise ValueError(msg.format(field=operations[0][1], model=lookup_model))\nValueError: Lookup failed for model referenced by field article.Article.tags: taggit.Tag\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/295", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/295/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/295/events", "html_url": "https://github.com/jazzband/django-taggit/issues/295", "id": 60650603, "node_id": "MDU6SXNzdWU2MDY1MDYwMw==", "number": 295, "title": "Can't get tags for a model object", "user": {"login": "davemutton", "id": 7837565, "node_id": "MDQ6VXNlcjc4Mzc1NjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/7837565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davemutton", "html_url": "https://github.com/davemutton", "followers_url": "https://api.github.com/users/davemutton/followers", "following_url": "https://api.github.com/users/davemutton/following{/other_user}", "gists_url": "https://api.github.com/users/davemutton/gists{/gist_id}", "starred_url": "https://api.github.com/users/davemutton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davemutton/subscriptions", "organizations_url": "https://api.github.com/users/davemutton/orgs", "repos_url": "https://api.github.com/users/davemutton/repos", "events_url": "https://api.github.com/users/davemutton/events{/privacy}", "received_events_url": "https://api.github.com/users/davemutton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-11T12:25:02Z", "updated_at": "2015-03-23T12:24:46Z", "closed_at": "2015-03-23T12:24:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "My understanding is that I should be able to get a list of all tags on an object using the format \nobject.tags.name() Everytime I try get this list in the view I end up with an empty list.\n\nHere a representation of my model.\n\n```\nclass DefaultResource(models.Model):\n    title = models.CharField(max_length=100)\n    tags = TaggableManager()\n    score = models.DecimalField(max_digits=20,decimal_places=4,default=0,blank=True)\n    def __unicode__ (self): \n    return self.title\n```\n\nAnd my view where you can see my various attempts to print tags to the terminal. No matter what I do I end up with an empty list from objects.tags.all() even though I have objects in the database and I can see the tags in the admin\n\n```\ndef index(request):\n    context = RequestContext(request)\n    default_resource_list = DefaultResource.objects.order_by('-score')\n    for objects in default_resource_list:\n    print objects\n    print objects.tags.all()\n    for each in objects.tags.all():\n        print objects\n        print objects.tags.all()\n        print each\n        print each.name\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/292", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/292/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/292/events", "html_url": "https://github.com/jazzband/django-taggit/issues/292", "id": 59750990, "node_id": "MDU6SXNzdWU1OTc1MDk5MA==", "number": 292, "title": "Make sure to update taggit.__init__.__VERSION__ in the next version", "user": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-04T05:09:02Z", "updated_at": "2015-04-03T04:34:13Z", "closed_at": "2015-04-03T04:34:13Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "I didn't realize that variable existed before I published this last release. It'd be nice if the `setup.py` version kwarg was generated from that variable so we would only need to update it in one place.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/290", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/290/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/290/events", "html_url": "https://github.com/jazzband/django-taggit/issues/290", "id": 57156103, "node_id": "MDU6SXNzdWU1NzE1NjEwMw==", "number": 290, "title": "Not created tags column", "user": {"login": "skhalymon", "id": 1163493, "node_id": "MDQ6VXNlcjExNjM0OTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1163493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skhalymon", "html_url": "https://github.com/skhalymon", "followers_url": "https://api.github.com/users/skhalymon/followers", "following_url": "https://api.github.com/users/skhalymon/following{/other_user}", "gists_url": "https://api.github.com/users/skhalymon/gists{/gist_id}", "starred_url": "https://api.github.com/users/skhalymon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skhalymon/subscriptions", "organizations_url": "https://api.github.com/users/skhalymon/orgs", "repos_url": "https://api.github.com/users/skhalymon/repos", "events_url": "https://api.github.com/users/skhalymon/events{/privacy}", "received_events_url": "https://api.github.com/users/skhalymon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-10T10:28:33Z", "updated_at": "2015-02-10T13:24:13Z", "closed_at": "2015-02-10T13:24:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys!\n\nI have a problem with creation tags field with next code: `tags = TaggableManager()` \nAll other fields from model are created. But tags don't :( \nI tried with Django1.7.1 and 1.7.2, also with db's sqLite and MySql. \n\nIn migrations is created `('tags', taggit.managers.TaggableManager(to='taggit.Tag', through='taggit.TaggedItem', help_text='A comma-separated list of tags.', verbose_name='Tags'))`\nbut why it doesnt apply... I don't know. Somebody has a idea?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/287", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/287/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/287/events", "html_url": "https://github.com/jazzband/django-taggit/issues/287", "id": 54704175, "node_id": "MDU6SXNzdWU1NDcwNDE3NQ==", "number": 287, "title": "Missing git tag for 0.12.2", "user": {"login": "blueyed", "id": 9766, "node_id": "MDQ6VXNlcjk3NjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/9766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blueyed", "html_url": "https://github.com/blueyed", "followers_url": "https://api.github.com/users/blueyed/followers", "following_url": "https://api.github.com/users/blueyed/following{/other_user}", "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}", "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions", "organizations_url": "https://api.github.com/users/blueyed/orgs", "repos_url": "https://api.github.com/users/blueyed/repos", "events_url": "https://api.github.com/users/blueyed/events{/privacy}", "received_events_url": "https://api.github.com/users/blueyed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-01-18T17:58:25Z", "updated_at": "2015-03-03T17:34:08Z", "closed_at": "2015-03-03T17:34:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There appears to be no Git tag for the current/lastest release, which should be probably: ed8af524482cc56f4a5034ec7f43d2566266028f (current master).\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/285", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/285/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/285/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/285/events", "html_url": "https://github.com/jazzband/django-taggit/issues/285", "id": 53507517, "node_id": "MDU6SXNzdWU1MzUwNzUxNw==", "number": 285, "title": "Migration failure with Django 1.7.2 and sqlite database when using a through model.", "user": {"login": "lpomfrey", "id": 1630717, "node_id": "MDQ6VXNlcjE2MzA3MTc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1630717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lpomfrey", "html_url": "https://github.com/lpomfrey", "followers_url": "https://api.github.com/users/lpomfrey/followers", "following_url": "https://api.github.com/users/lpomfrey/following{/other_user}", "gists_url": "https://api.github.com/users/lpomfrey/gists{/gist_id}", "starred_url": "https://api.github.com/users/lpomfrey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lpomfrey/subscriptions", "organizations_url": "https://api.github.com/users/lpomfrey/orgs", "repos_url": "https://api.github.com/users/lpomfrey/repos", "events_url": "https://api.github.com/users/lpomfrey/events{/privacy}", "received_events_url": "https://api.github.com/users/lpomfrey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2015-01-06T11:51:20Z", "updated_at": "2015-03-04T11:02:24Z", "closed_at": "2015-03-04T11:02:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not entirely sure whether this is an issue with taggit or Django itself, but since I can only reproduce it with taggit I'm reporting it here. Feel free to close as a Django issue if you think this isn't anything to do with taggit.\n\nWhen using a through model with taggit and Django 1.7.2, migrations always fail with an OperationalError. This only occurs (as far as I know) with the sqlite backend, PostgreSQL, at least, is fine.\n\n**To reproduce**\n\nCreate a simple project with an app with the following `models.py`\n\n```\nfrom django.db import models\nfrom taggit.managers import TaggableManager\nfrom taggit.models import TaggedItemBase\n\n\nclass BugTag(TaggedItemBase):\n\n    content_object = models.ForeignKey('Bug')\n    note = models.CharField(max_length=50)\n\n\nclass Bug(models.Model):\n\n    name = models.CharField(max_length=100)\n    tags = TaggableManager(through=BugTag)\n```\n\nMake your initial migrations with `manage.py makemigrations <appname>` then run with `manage.py migrate`.\n\nThe `migrate` command will fail with an exception like:\n\n```\n    Operations to perform:\n  Apply all migrations: sessions, admin, auth, contenttypes, taggit, bug\nRunning migrations:\n  Applying bug.0001_initial...Traceback (most recent call last):\n  File \"./manage.py\", line 7, in <module>\n    execute_from_command_line(sys.argv)\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 385, in execute_from_command_line\n    utility.execute()\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/core/management/__init__.py\", line 377, in execute\n    self.fetch_command(subcommand).run_from_argv(self.argv)\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/core/management/base.py\", line 288, in run_from_argv\n    self.execute(*args, **options.__dict__)\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/core/management/base.py\", line 338, in execute\n    output = self.handle(*args, **options)\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/core/management/commands/migrate.py\", line 161, in handle\n    executor.migrate(targets, plan, fake=options.get(\"fake\", False))\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 68, in migrate\n    self.apply_migration(migration, fake=fake)\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/db/migrations/executor.py\", line 102, in apply_migration\n    migration.apply(project_state, schema_editor)\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/db/migrations/migration.py\", line 108, in apply\n    operation.database_forwards(self.app_label, schema_editor, project_state, new_state)\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/db/migrations/operations/fields.py\", line 37, in database_forwards\n    field,\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/db/backends/sqlite3/schema.py\", line 177, in add_field\n    self._remake_table(model, create_fields=[field])\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/db/backends/sqlite3/schema.py\", line 145, in _remake_table\n    self.quote_name(model._meta.db_table),\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/db/backends/schema.py\", line 103, in execute\n    cursor.execute(sql, params)\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 81, in execute\n    return super(CursorDebugWrapper, self).execute(sql, params)\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 65, in execute\n    return self.cursor.execute(sql, params)\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/db/utils.py\", line 94, in __exit__\n    six.reraise(dj_exc_type, dj_exc_value, traceback)\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/db/backends/utils.py\", line 65, in execute\n    return self.cursor.execute(sql, params)\n  File \"/home/username/.virtualenvs/sqlitebug/local/lib/python2.7/site-packages/django/db/backends/sqlite3/base.py\", line 485, in execute\n    return Database.Cursor.execute(self, query, params)\ndjango.db.utils.OperationalError: table bug_bug__new has no column named tags\n```\n\nThe SQL causing the issue is:\n\n```\nSELECT name FROM sqlite_master\n    WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'\n    ORDER BY name\nBEGIN\nCREATE TABLE \"bug_bug\" (\"id\" integer NOT NULL PRIMARY KEY AUTOINCREMENT, \"name\" varchar(100) NOT NULL)\nCREATE TABLE \"bug_bugtag\" (\"id\" integer NOT NULL PRIMARY KEY AUTOINCREMENT, \"note\" varchar(50) NOT NULL, \"content_object_id\" integer NOT NULL REFERENCES \"bug_bug\" (\"id\"), \"tag_id\" integer NOT NULL REFERENCES \"taggit_tag\" (\"id\"))\nCREATE TABLE \"bug_bug__new\" (\"id\" integer NOT NULL PRIMARY KEY AUTOINCREMENT, \"name\" varchar(100) NOT NULL)\nINSERT INTO \"bug_bug__new\" (\"tags\", \"id\", \"name\") SELECT NULL, \"id\", \"name\" FROM \"bug_bug\"\n```\n\nDjango 1.7.1 doesn't exhibit the issue, and it's present in both the develop branch of taggit and the latest, 0.12.2, release.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/284", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/284/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/284/events", "html_url": "https://github.com/jazzband/django-taggit/issues/284", "id": 53118814, "node_id": "MDU6SXNzdWU1MzExODgxNA==", "number": 284, "title": "related.py gone in 1.8", "user": {"login": "phoebebright", "id": 132747, "node_id": "MDQ6VXNlcjEzMjc0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/132747?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phoebebright", "html_url": "https://github.com/phoebebright", "followers_url": "https://api.github.com/users/phoebebright/followers", "following_url": "https://api.github.com/users/phoebebright/following{/other_user}", "gists_url": "https://api.github.com/users/phoebebright/gists{/gist_id}", "starred_url": "https://api.github.com/users/phoebebright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phoebebright/subscriptions", "organizations_url": "https://api.github.com/users/phoebebright/orgs", "repos_url": "https://api.github.com/users/phoebebright/repos", "events_url": "https://api.github.com/users/phoebebright/events{/privacy}", "received_events_url": "https://api.github.com/users/phoebebright/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-12-30T14:28:00Z", "updated_at": "2016-10-04T12:09:58Z", "closed_at": "2015-04-03T06:21:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "See this ticket: https://code.djangoproject.com/ticket/21414\n\nCurrently failing when running dev version of 1.8 with error:\n\nNo module named related\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/jazzband/django-taggit/issues/282", "repository_url": "https://api.github.com/repos/jazzband/django-taggit", "labels_url": "https://api.github.com/repos/jazzband/django-taggit/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/jazzband/django-taggit/issues/282/comments", "events_url": "https://api.github.com/repos/jazzband/django-taggit/issues/282/events", "html_url": "https://github.com/jazzband/django-taggit/issues/282", "id": 52815519, "node_id": "MDU6SXNzdWU1MjgxNTUxOQ==", "number": 282, "title": "Bad JOIN collumn on tagging Inerited models", "user": {"login": "martende", "id": 1508729, "node_id": "MDQ6VXNlcjE1MDg3Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1508729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martende", "html_url": "https://github.com/martende", "followers_url": "https://api.github.com/users/martende/followers", "following_url": "https://api.github.com/users/martende/following{/other_user}", "gists_url": "https://api.github.com/users/martende/gists{/gist_id}", "starred_url": "https://api.github.com/users/martende/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martende/subscriptions", "organizations_url": "https://api.github.com/users/martende/orgs", "repos_url": "https://api.github.com/users/martende/repos", "events_url": "https://api.github.com/users/martende/events{/privacy}", "received_events_url": "https://api.github.com/users/martende/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-24T12:08:21Z", "updated_at": "2015-07-08T20:14:53Z", "closed_at": "2015-07-08T20:09:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have some simple inherited model\n\n```\nclass Page(models.Model):\n....\nclass Game(Page):\n....\n    tags = TaggableManager()\n```\n\ni I try to make \n\n```\ngames = Game.objects.filter(tags__name__in = [tagname])\n```\n\nI receive\nOperationalError: (1054, \"Unknown column 'game.id' in 'on clause'\")\n", "performed_via_github_app": null, "score": 1.0}]}