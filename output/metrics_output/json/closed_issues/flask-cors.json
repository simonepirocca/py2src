{"total_count": 89, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/269", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/269/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/269/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/269/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/269", "id": 628105898, "node_id": "MDU6SXNzdWU2MjgxMDU4OTg=", "number": 269, "title": "Barebones setup doesn't work", "user": {"login": "kunalketanshah", "id": 10396271, "node_id": "MDQ6VXNlcjEwMzk2Mjcx", "avatar_url": "https://avatars1.githubusercontent.com/u/10396271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kunalketanshah", "html_url": "https://github.com/kunalketanshah", "followers_url": "https://api.github.com/users/kunalketanshah/followers", "following_url": "https://api.github.com/users/kunalketanshah/following{/other_user}", "gists_url": "https://api.github.com/users/kunalketanshah/gists{/gist_id}", "starred_url": "https://api.github.com/users/kunalketanshah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kunalketanshah/subscriptions", "organizations_url": "https://api.github.com/users/kunalketanshah/orgs", "repos_url": "https://api.github.com/users/kunalketanshah/repos", "events_url": "https://api.github.com/users/kunalketanshah/events{/privacy}", "received_events_url": "https://api.github.com/users/kunalketanshah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-01T02:22:07Z", "updated_at": "2020-06-06T07:11:09Z", "closed_at": "2020-06-06T07:10:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "My server code looks like (running on `localhost:5000`):\r\n\r\n```\r\nimport os\r\n\r\nfrom flask import Flask\r\nfrom flask_graphql import GraphQLView\r\nfrom flask_cors import CORS\r\n\r\nfrom .graphql import schema\r\n\r\napp = Flask(__name__)\r\nCORS(app)\r\n\r\n@app.route(\"/\")\r\ndef home():\r\n    return \"Hello World\"\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(debug=True)\r\n```\r\n\r\nI'm making the follow request from my client (running on `localhost:3000`):\r\n```\r\nfetch(\"http://localhost:5000/\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n    body: JSON.stringify({\r\n      query: operation.text,\r\n      variables,\r\n    }),\r\n  }).then((response) => {\r\n    return response.json();\r\n  });\r\n```\r\n\r\nI get the following error in the dev console on Chrome:\r\n\r\n```\r\nPOST http://localhost:5000/ 405 (METHOD NOT ALLOWED)\r\n```\r\n\r\nIs the `/options` route something that I need to implement for my Flask app? Looks like the browser makes a preflight request:\r\n\r\n[https://ibb.co/vsqB23x](Preflight request)\r\n[https://ibb.co/j60Kb3f](Post request)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/265", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/265/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/265/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/265", "id": 603631627, "node_id": "MDU6SXNzdWU2MDM2MzE2Mjc=", "number": 265, "title": "Exposed headers cannot be accessed in Angular", "user": {"login": "tsaatey", "id": 20556181, "node_id": "MDQ6VXNlcjIwNTU2MTgx", "avatar_url": "https://avatars2.githubusercontent.com/u/20556181?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tsaatey", "html_url": "https://github.com/tsaatey", "followers_url": "https://api.github.com/users/tsaatey/followers", "following_url": "https://api.github.com/users/tsaatey/following{/other_user}", "gists_url": "https://api.github.com/users/tsaatey/gists{/gist_id}", "starred_url": "https://api.github.com/users/tsaatey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tsaatey/subscriptions", "organizations_url": "https://api.github.com/users/tsaatey/orgs", "repos_url": "https://api.github.com/users/tsaatey/repos", "events_url": "https://api.github.com/users/tsaatey/events{/privacy}", "received_events_url": "https://api.github.com/users/tsaatey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-21T01:09:13Z", "updated_at": "2020-04-21T01:23:56Z", "closed_at": "2020-04-21T01:23:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have a flask-restful backend that is serving my Angular frontend. I have installed flask-cors to handle CORS issues, however, I am not able to get my headers with typescript code.\r\nE.g. ```response.headers // returns undefined.```\r\nBelow is my configuration in the Flask app\r\n```CORS(app, resources={r\"/application/*\": {\"origins\": \"http://localhost:4200\"}},\r\n    expose_headers = ['tm-auth-token', 'refresh_token'])```.\r\nWhen I check the network tab of Chrome's dev tools, I can see the headers present but they are not attached to the response.\r\n\r\nKindly help me figure this out. Thank you!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/256", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/256/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/256/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/256", "id": 530366501, "node_id": "MDU6SXNzdWU1MzAzNjY1MDE=", "number": 256, "title": "Wildcard origin pattern is too generic - matches incorrectly on more complicated patterns", "user": {"login": "sfilipov", "id": 2607726, "node_id": "MDQ6VXNlcjI2MDc3MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/2607726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfilipov", "html_url": "https://github.com/sfilipov", "followers_url": "https://api.github.com/users/sfilipov/followers", "following_url": "https://api.github.com/users/sfilipov/following{/other_user}", "gists_url": "https://api.github.com/users/sfilipov/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfilipov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfilipov/subscriptions", "organizations_url": "https://api.github.com/users/sfilipov/orgs", "repos_url": "https://api.github.com/users/sfilipov/repos", "events_url": "https://api.github.com/users/sfilipov/events{/privacy}", "received_events_url": "https://api.github.com/users/sfilipov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-29T14:12:55Z", "updated_at": "2019-12-03T04:47:52Z", "closed_at": "2019-11-29T14:44:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Inside [get_cors_origins](https://github.com/corydolphin/flask-cors/blob/8a4e6e7057924d124a39ec08f446345bc19e4c5b/flask_cors/core.py#L113) the variable `wildcard` is defined as `r'.*' in origins`. This is too generic because it matches for example in patterns like `r'^https://app\\.(.*?\\.)example\\.com$`\r\n`r'.*'` is present in that pattern.\r\n\r\nThis can cause issues later on with `if wildcard and options.get('send_wildcard'):` which considers `wildcard` True, thus `origins` must be `.*` - but it is not. It is a more complicated pattern that happens to contain `.*` inside of it.\r\n\r\nI think the correct way to do it would be `wildcard = r'.*' == origins` rather than `wildcard = r'.*' in origins` but I am not completely familiar with the code and I might be wrong.\r\n\r\nI hope I'm not wasting your time by not completely understanding the code.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/252", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/252/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/252/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/252", "id": 501068750, "node_id": "MDU6SXNzdWU1MDEwNjg3NTA=", "number": 252, "title": "has been blocked by CORS policy: Request header field content-type is not allowed by Access-Control-Allow-Headers in preflight response.", "user": {"login": "piyushpriyam", "id": 20427208, "node_id": "MDQ6VXNlcjIwNDI3MjA4", "avatar_url": "https://avatars2.githubusercontent.com/u/20427208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/piyushpriyam", "html_url": "https://github.com/piyushpriyam", "followers_url": "https://api.github.com/users/piyushpriyam/followers", "following_url": "https://api.github.com/users/piyushpriyam/following{/other_user}", "gists_url": "https://api.github.com/users/piyushpriyam/gists{/gist_id}", "starred_url": "https://api.github.com/users/piyushpriyam/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/piyushpriyam/subscriptions", "organizations_url": "https://api.github.com/users/piyushpriyam/orgs", "repos_url": "https://api.github.com/users/piyushpriyam/repos", "events_url": "https://api.github.com/users/piyushpriyam/events{/privacy}", "received_events_url": "https://api.github.com/users/piyushpriyam/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-01T18:28:03Z", "updated_at": "2020-01-20T07:28:36Z", "closed_at": "2019-10-02T06:32:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "CORS(app, resources='/apk', allow_headers='content_type',\r\n     origins='*')\r\n\r\nI am trying to integrate Angular with the python services.\r\nI have check all related issues.\r\nIt didn't help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/250", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/250/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/250/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/250", "id": 491869400, "node_id": "MDU6SXNzdWU0OTE4Njk0MDA=", "number": 250, "title": "Cors is allowing all incoming requests", "user": {"login": "Shamim56", "id": 15659316, "node_id": "MDQ6VXNlcjE1NjU5MzE2", "avatar_url": "https://avatars2.githubusercontent.com/u/15659316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shamim56", "html_url": "https://github.com/Shamim56", "followers_url": "https://api.github.com/users/Shamim56/followers", "following_url": "https://api.github.com/users/Shamim56/following{/other_user}", "gists_url": "https://api.github.com/users/Shamim56/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shamim56/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shamim56/subscriptions", "organizations_url": "https://api.github.com/users/Shamim56/orgs", "repos_url": "https://api.github.com/users/Shamim56/repos", "events_url": "https://api.github.com/users/Shamim56/events{/privacy}", "received_events_url": "https://api.github.com/users/Shamim56/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-10T20:01:44Z", "updated_at": "2019-09-10T20:19:21Z", "closed_at": "2019-09-10T20:19:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI setup a simple flask application. I specified certain origins that i only want requests from. However, I can still access the resources from other hosts that are not inside this origins array\r\n\r\n```python \r\nfrom flask import Flask\r\nfrom flask_cors import CORS\r\nfrom flask_limiter import Limiter\r\nfrom flask_limiter.util import get_remote_address\r\n\r\n# Network Information\r\nHOST = '0.0.0.0'\r\nPORT = 7000\r\n\r\n# Setup Flask Web Application\r\napp = Flask(__name__)\r\napp.config['SECRET_KEY'] = 'helloewresfd'\r\napp.config['CORS_HEADERS'] = 'Content-Type'\r\ncors = CORS(app, resources={r\"/foo\": {\"origins\": [\"http://localhost:8000\", \"http://mywebsite.example.com\"]\r\n}})\r\n\r\n# Limit requests per Remote IP\r\nlimiter = Limiter(\r\n    app,\r\n    key_func=get_remote_address,\r\n    default_limits=[\"200 per day\", \"50 per hour\"]\r\n)\r\n\r\n@app.route('/api/home', methods=['GET'])\r\ndef home():\r\n\treturn ('Test Request')\r\n\r\nif __name__ == '__main__':\r\n\tapp.run(host=HOST, port=PORT)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/249", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/249/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/249/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/249", "id": 483521881, "node_id": "MDU6SXNzdWU0ODM1MjE4ODE=", "number": 249, "title": "flask-cors + flask-login + vuejs", "user": {"login": "julivert82", "id": 20343319, "node_id": "MDQ6VXNlcjIwMzQzMzE5", "avatar_url": "https://avatars2.githubusercontent.com/u/20343319?v=4", "gravatar_id": "", "url": "https://api.github.com/users/julivert82", "html_url": "https://github.com/julivert82", "followers_url": "https://api.github.com/users/julivert82/followers", "following_url": "https://api.github.com/users/julivert82/following{/other_user}", "gists_url": "https://api.github.com/users/julivert82/gists{/gist_id}", "starred_url": "https://api.github.com/users/julivert82/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/julivert82/subscriptions", "organizations_url": "https://api.github.com/users/julivert82/orgs", "repos_url": "https://api.github.com/users/julivert82/repos", "events_url": "https://api.github.com/users/julivert82/events{/privacy}", "received_events_url": "https://api.github.com/users/julivert82/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-21T16:21:44Z", "updated_at": "2019-08-22T08:29:55Z", "closed_at": "2019-08-22T08:29:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI'm trying to use this stack to build an application up, but unable to mix them up properly.\r\n\r\nWhen requesting the login directly to the backend it works quite fine (despite of some extra cookies being set), but when adding CORS due the call from the VueJS application, the drama starts. \r\nCORS is configured like this:\r\n\r\nCORS(app, supports_credentials=True, resources={r'/*': {'origins': 'http://localhost:8080'}})\r\nbeing http://localhost:8080 the vuejs application.\r\n\r\nI do call the login view from vuejs like this:\r\nlogin(payload) {\r\n      const path = 'http://localhost:9123/login';\r\n      axios.post(path, querystring.stringify(payload), { headers: { 'Content-type': 'application/x-www-form-urlencoded' } })\r\n        .then((res) => {\r\n          this.map = res.data;\r\n        })\r\n        .catch((error) => {\r\n          this.console.log(error);\r\n        });\r\n    },\r\n\r\nbeing localhost:9123 the flask application. the backend is catching it right here:\r\n@app.route('/login', methods=['GET', 'POST'])\r\n@cross_origin()\r\ndef login():\r\n    for k in request.form.keys():\r\n        print(\"Key {0}\".format(k))\r\n\r\n    global _db\r\n    if request.method == 'GET':\r\n        return render_template('login.html')\r\n    data = request.form\r\n    name = data['name']\r\n    uid = _db.getUserByName(name)\r\n    if data['password'] == _db.getUserPassword(uid):\r\n        user = User()\r\n        user.id = name\r\n        user.uid = uid\r\n        flask_login.login_user(user)\r\n        return redirect(url_for('getMap'))\r\n    return 'Bad login request'\r\n\r\nIt does work because it performs the redirection to \"getMap\", but then is when the weird thing happens, instead of calling the flask-login.user_loader it does call the request_loader instead with an empty request (the parameters are not passed thru, but still figuring out why it's not using the user_loader once the user is actually logged in).\r\n\r\nI've been checking header back and forth and I saw the Cookie is not included when CORS requests happen. Being totally honest, I don't know whether the problem is in flask-cors and the Allow-Credentials, in vuejs not storing the cookie or so.\r\n\r\nAny idea is appreciated ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/245", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/245/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/245/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/245", "id": 454311444, "node_id": "MDU6SXNzdWU0NTQzMTE0NDQ=", "number": 245, "title": "Deprecation Warning for CORS import", "user": {"login": "zkagin", "id": 733851, "node_id": "MDQ6VXNlcjczMzg1MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/733851?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zkagin", "html_url": "https://github.com/zkagin", "followers_url": "https://api.github.com/users/zkagin/followers", "following_url": "https://api.github.com/users/zkagin/following{/other_user}", "gists_url": "https://api.github.com/users/zkagin/gists{/gist_id}", "starred_url": "https://api.github.com/users/zkagin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zkagin/subscriptions", "organizations_url": "https://api.github.com/users/zkagin/orgs", "repos_url": "https://api.github.com/users/zkagin/repos", "events_url": "https://api.github.com/users/zkagin/events{/privacy}", "received_events_url": "https://api.github.com/users/zkagin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-06-10T18:41:06Z", "updated_at": "2019-06-11T20:55:22Z", "closed_at": "2019-06-11T20:48:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using flask_cors and running tests I get the following warning:\r\n```\r\n.../python3.7/site-packages/flask_cors/core.py:322: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n  and isinstance(obj, collections.Iterable)):\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/242", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/242/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/242/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/242", "id": 437979586, "node_id": "MDU6SXNzdWU0Mzc5Nzk1ODY=", "number": 242, "title": "When Used before_request Decorator in the main file , it raises origin policy error", "user": {"login": "shivamguys", "id": 25263989, "node_id": "MDQ6VXNlcjI1MjYzOTg5", "avatar_url": "https://avatars2.githubusercontent.com/u/25263989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shivamguys", "html_url": "https://github.com/shivamguys", "followers_url": "https://api.github.com/users/shivamguys/followers", "following_url": "https://api.github.com/users/shivamguys/following{/other_user}", "gists_url": "https://api.github.com/users/shivamguys/gists{/gist_id}", "starred_url": "https://api.github.com/users/shivamguys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shivamguys/subscriptions", "organizations_url": "https://api.github.com/users/shivamguys/orgs", "repos_url": "https://api.github.com/users/shivamguys/repos", "events_url": "https://api.github.com/users/shivamguys/events{/privacy}", "received_events_url": "https://api.github.com/users/shivamguys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-27T20:10:23Z", "updated_at": "2019-04-27T21:33:00Z", "closed_at": "2019-04-27T21:33:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "![Screenshot from 2019-04-28 01-36-22](https://user-images.githubusercontent.com/25263989/56854572-5c690080-6956-11e9-930c-988ac8597612.png)\r\n![Screenshot from 2019-04-28 01-34-19](https://user-images.githubusercontent.com/25263989/56854573-5d019700-6956-11e9-82a4-c0e261150120.png)\r\n![Screenshot from 2019-04-28 01-33-46](https://user-images.githubusercontent.com/25263989/56854574-5e32c400-6956-11e9-9b0a-97e973823b76.png)\r\n\r\n\r\n\r\nWhen I am using the decorator in the main file it raises me an error while everything works fine without using that.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/239", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/239/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/239/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/239", "id": 423356521, "node_id": "MDU6SXNzdWU0MjMzNTY1MjE=", "number": 239, "title": "importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated", "user": {"login": "osallou", "id": 1024098, "node_id": "MDQ6VXNlcjEwMjQwOTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/1024098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osallou", "html_url": "https://github.com/osallou", "followers_url": "https://api.github.com/users/osallou/followers", "following_url": "https://api.github.com/users/osallou/following{/other_user}", "gists_url": "https://api.github.com/users/osallou/gists{/gist_id}", "starred_url": "https://api.github.com/users/osallou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osallou/subscriptions", "organizations_url": "https://api.github.com/users/osallou/orgs", "repos_url": "https://api.github.com/users/osallou/repos", "events_url": "https://api.github.com/users/osallou/events{/privacy}", "received_events_url": "https://api.github.com/users/osallou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-20T16:39:49Z", "updated_at": "2019-06-08T02:23:37Z", "closed_at": "2019-06-08T02:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI get this warning relative to deprecation and future python support removal (got it in many other libs too...)\r\nI am using version 3.0.7\r\n\r\n    .../venv/lib64/python3.7/site-packages/flask_cors/core.py:322: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\r\n  and isinstance(obj, collections.Iterable)):\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/237", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/237/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/237/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/237/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/237", "id": 402790778, "node_id": "MDU6SXNzdWU0MDI3OTA3Nzg=", "number": 237, "title": "Access-Control-Allow-Origin returns incorrect value", "user": {"login": "Tonkonozhenko", "id": 1307646, "node_id": "MDQ6VXNlcjEzMDc2NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1307646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tonkonozhenko", "html_url": "https://github.com/Tonkonozhenko", "followers_url": "https://api.github.com/users/Tonkonozhenko/followers", "following_url": "https://api.github.com/users/Tonkonozhenko/following{/other_user}", "gists_url": "https://api.github.com/users/Tonkonozhenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tonkonozhenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tonkonozhenko/subscriptions", "organizations_url": "https://api.github.com/users/Tonkonozhenko/orgs", "repos_url": "https://api.github.com/users/Tonkonozhenko/repos", "events_url": "https://api.github.com/users/Tonkonozhenko/events{/privacy}", "received_events_url": "https://api.github.com/users/Tonkonozhenko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-24T16:30:29Z", "updated_at": "2019-07-10T16:10:23Z", "closed_at": "2019-07-10T16:10:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\n\r\nWe have a high-load service with like ~50rps on each container. In the app I have next endpoint:\r\n\r\n```python\r\nempty_response = Response(response=content, content_type=content_type, headers={\r\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\r\n        'Pragma': 'no-cache',\r\n        'Expires': '0',\r\n    })\r\n\r\n@app.route(\"/hello\", strict_slashes=False, methods=['GET', 'POST'])\r\n@cross_origin()\r\ndef hello():\r\n    ...\r\n    return empty_response\r\n```\r\n\r\nI run the app in env with `GUNICORN_CMD_ARGS=\"-b 0.0.0.0:80 --workers 2 --threads 10\"`.\r\n\r\nIt looks like result of `Access-Control-Allow-Origin` is incorrect and it relates to the previous or other concurrent request.\r\n\r\nWhile writing the issue I realized that probably it's because of building Response outside of the action. WDYT about this?\r\n\r\nThanks,\r\nAlex", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/236", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/236/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/236/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/236", "id": 394665754, "node_id": "MDU6SXNzdWUzOTQ2NjU3NTQ=", "number": 236, "title": "\"Origin header does not match any of allowed origins\" despite having origins as '.*'", "user": {"login": "huberrom", "id": 19253772, "node_id": "MDQ6VXNlcjE5MjUzNzcy", "avatar_url": "https://avatars1.githubusercontent.com/u/19253772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huberrom", "html_url": "https://github.com/huberrom", "followers_url": "https://api.github.com/users/huberrom/followers", "following_url": "https://api.github.com/users/huberrom/following{/other_user}", "gists_url": "https://api.github.com/users/huberrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/huberrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huberrom/subscriptions", "organizations_url": "https://api.github.com/users/huberrom/orgs", "repos_url": "https://api.github.com/users/huberrom/repos", "events_url": "https://api.github.com/users/huberrom/events{/privacy}", "received_events_url": "https://api.github.com/users/huberrom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-12-28T15:54:32Z", "updated_at": "2018-12-28T17:36:18Z", "closed_at": "2018-12-28T17:36:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I have the following stack trace when using flask cors :\r\n\r\n```\r\nrasa_core_1      | 2018-12-28 15:42:23 DEBUG    flask_cors.core  - CORS request received with 'Origin' http://localhost:8080\r\nrasa_core_1      | 2018-12-28 15:42:23 DEBUG    flask_cors.core  - The request's Origin header does not match any of allowed origins.\r\nrasa_core_1      | 2018-12-28 15:42:23 DEBUG    flask_cors.core  - Settings CORS headers: MultiDict([])\r\nrasa_core_1      | 2018-12-28 15:42:23 DEBUG    flask_cors.extension  - Request to '/conversations/15bfb095-604a-47a1-ad53-87235593ca61/tracker/events' matches CORS resource '/*'. Using options: {'origins': ['.*'], 'methods': 'DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT', 'allow_headers': ['.*'], 'expose_headers': None, 'supports_credentials': False, 'max_age': None, 'send_wildcard': False, 'automatic_options': True, 'vary_header': True, 'resources': {'/*': {'origins': '*'}}, 'intercept_exceptions': True, 'always_send': True}\r\n```\r\n\r\nAnd I don't understand the second line, since the fourth one shows that the accepted origins are '.*' (which means everything right ?)\r\n\r\nMy code look like that:\r\n\r\n``` python\r\ncustom_webhook = Blueprint(\r\n            'custom_webhook_{}'.format(type(self).__name__),\r\n            inspect.getmodule(self).__name__)\r\n        CORS(custom_webhook)\r\n\r\n@custom_webhook.route(\"/1.0.0/conversations/<sender_id>/tracker/events\", methods=['POST'])\r\n        def append_event(sender_id):\r\n```\r\n\r\nI'm using flask_cors 3.0.4 and the request looks like this :\r\n![image](https://user-images.githubusercontent.com/19253772/50520654-d6c96700-0ac1-11e9-856f-5f0d724ef6a6.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/233", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/233/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/233/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/233/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/233", "id": 367523018, "node_id": "MDU6SXNzdWUzNjc1MjMwMTg=", "number": 233, "title": "Use logging.warning instead of logging.warn", "user": {"login": "Vaibhav", "id": 10902969, "node_id": "MDQ6VXNlcjEwOTAyOTY5", "avatar_url": "https://avatars3.githubusercontent.com/u/10902969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vaibhav", "html_url": "https://github.com/Vaibhav", "followers_url": "https://api.github.com/users/Vaibhav/followers", "following_url": "https://api.github.com/users/Vaibhav/following{/other_user}", "gists_url": "https://api.github.com/users/Vaibhav/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vaibhav/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vaibhav/subscriptions", "organizations_url": "https://api.github.com/users/Vaibhav/orgs", "repos_url": "https://api.github.com/users/Vaibhav/repos", "events_url": "https://api.github.com/users/Vaibhav/events{/privacy}", "received_events_url": "https://api.github.com/users/Vaibhav/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-10-07T05:29:33Z", "updated_at": "2018-10-10T03:15:19Z", "closed_at": "2018-10-10T03:15:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am getting the following deprecation warning: \r\n```\r\nDeprecationWarning: The 'warn' method is deprecated, use 'warning' instead LOG.warn(\"Unknown option passed to Flask-CORS: %s\", key)\r\n```\r\n\r\nLook [here](https://stackoverflow.com/questions/15539937/whats-the-difference-between-logging-warn-and-logging-warning-in-python-or-are) for more info.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/227", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/227/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/227/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/227", "id": 333472938, "node_id": "MDU6SXNzdWUzMzM0NzI5Mzg=", "number": 227, "title": "Can't get Authorization headers to work", "user": {"login": "jamalmoir", "id": 5795359, "node_id": "MDQ6VXNlcjU3OTUzNTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/5795359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamalmoir", "html_url": "https://github.com/jamalmoir", "followers_url": "https://api.github.com/users/jamalmoir/followers", "following_url": "https://api.github.com/users/jamalmoir/following{/other_user}", "gists_url": "https://api.github.com/users/jamalmoir/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamalmoir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamalmoir/subscriptions", "organizations_url": "https://api.github.com/users/jamalmoir/orgs", "repos_url": "https://api.github.com/users/jamalmoir/repos", "events_url": "https://api.github.com/users/jamalmoir/events{/privacy}", "received_events_url": "https://api.github.com/users/jamalmoir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-18T23:49:34Z", "updated_at": "2018-06-28T23:50:12Z", "closed_at": "2018-06-28T23:50:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have an app with a few blueprints and have just `CORS(app)`'d the whole thing.\r\n\r\nEverything works until Authorization is involved.\r\n\r\nAfter looking around many solutions and trying them all I still can't seem to get it to work. It fails anytime I pass an `Authorization: BEARER <token>` header with `Failed to load http://localhost:5000/xxx: Response for preflight is invalid (redirect)`.\r\n\r\nApp:\r\n```\r\napp = FlaskAPI(__name__, instance_relative_config=True)\r\nCORS(app, supports_credentials=True, headers=['Content-Type', 'Authorization'])\r\n```\r\n\r\nExample view:\r\n```\r\njournal_blueprint = Blueprint('journal', __name__, url_prefix='/journal')\r\n\r\n@journal_blueprint.route('/', methods=['GET'])\r\ndef get_all_journals():\r\n    user = get_authed_user()\r\n    journals = get_journals(user)\r\n\r\n    response = model_objects_to_json(journals)\r\n    response.status_code = 200\r\n\r\n    return response\r\n```\r\n\r\nVersions:\r\n```\r\nFlask==1.0.2\r\nFlask-Cors==3.0.6\r\n```\r\n\r\nI'm sure I am missing something here and have done something stupid - so I apologise in advance - but please and thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/226", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/226/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/226/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/226", "id": 333098644, "node_id": "MDU6SXNzdWUzMzMwOTg2NDQ=", "number": 226, "title": "Can't get @cross_origin to work with create_app", "user": {"login": "fenekku", "id": 1932651, "node_id": "MDQ6VXNlcjE5MzI2NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1932651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fenekku", "html_url": "https://github.com/fenekku", "followers_url": "https://api.github.com/users/fenekku/followers", "following_url": "https://api.github.com/users/fenekku/following{/other_user}", "gists_url": "https://api.github.com/users/fenekku/gists{/gist_id}", "starred_url": "https://api.github.com/users/fenekku/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fenekku/subscriptions", "organizations_url": "https://api.github.com/users/fenekku/orgs", "repos_url": "https://api.github.com/users/fenekku/repos", "events_url": "https://api.github.com/users/fenekku/events{/privacy}", "received_events_url": "https://api.github.com/users/fenekku/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-17T22:37:46Z", "updated_at": "2018-06-21T01:29:03Z", "closed_at": "2018-06-21T01:29:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI must be doing something wrong here. I have a very simple app using `@cross_origin` on a view but CORS headers are not sent back or respected on tests with cURL:\r\n\r\n```python\r\n# __init__.py\r\nfrom flask import Flask\r\nfrom flask_cors import cross_origin\r\n\r\ndef create_app(test_config=None):\r\n    app = Flask(__name__, instance_relative_config=True)\r\n        # ensure the instance folder exists\r\n    try:\r\n        os.makedirs(app.instance_path)\r\n    except OSError:\r\n        pass\r\n\r\n    @app.route('/lat/<latitude>/long/<longitude>')\r\n    @cross_origin(origins='http://example.com')\r\n    def weather(longitude, latitude):\r\n        return 'content'\r\n```\r\n\r\nI am expecting the call below to fail since only `http://example.com` is allowed and the `Origin` header is being spoofed to `http://example123.com`. This is what I get however:\r\n \r\n```shell\r\ncurl -H \"Origin: http://example123.com\" --verbose http://127.0.0.1:5000/lat/42.3601/long/-71.0589\r\n*   Trying 127.0.0.1...\r\n* Connected to 127.0.0.1 (127.0.0.1) port 5000 (#0)\r\n> GET /lat/42.3601/long/-71.0589 HTTP/1.1\r\n> Host: 127.0.0.1:5000\r\n> User-Agent: curl/7.47.0\r\n> Accept: */*\r\n> Origin: http://example123.com\r\n>\r\n* HTTP 1.0, assume close after body\r\n< HTTP/1.0 200 OK\r\n< Content-Type: text/html; charset=utf-8\r\n< Content-Length: 7\r\n< Server: Werkzeug/0.14.1 Python/2.7.12\r\n< Date: Sun, 17 Jun 2018 22:24:27 GMT\r\n<\r\n* Closing connection 0\r\ncontent\u23ce             \r\n```\r\nwith Python 3.6.5 I get the same result. I am expecting `Access-Control-Allow-Origin: http://example.com` to be returned from the server but it is not.\r\n\r\nWhat is missing? Is this a bug?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/220", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/220/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/220/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/220", "id": 320568334, "node_id": "MDU6SXNzdWUzMjA1NjgzMzQ=", "number": 220, "title": "flask-cors authenticated requests with current_user", "user": {"login": "jodiwaljay", "id": 17160296, "node_id": "MDQ6VXNlcjE3MTYwMjk2", "avatar_url": "https://avatars1.githubusercontent.com/u/17160296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jodiwaljay", "html_url": "https://github.com/jodiwaljay", "followers_url": "https://api.github.com/users/jodiwaljay/followers", "following_url": "https://api.github.com/users/jodiwaljay/following{/other_user}", "gists_url": "https://api.github.com/users/jodiwaljay/gists{/gist_id}", "starred_url": "https://api.github.com/users/jodiwaljay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jodiwaljay/subscriptions", "organizations_url": "https://api.github.com/users/jodiwaljay/orgs", "repos_url": "https://api.github.com/users/jodiwaljay/repos", "events_url": "https://api.github.com/users/jodiwaljay/events{/privacy}", "received_events_url": "https://api.github.com/users/jodiwaljay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-06T07:00:16Z", "updated_at": "2018-05-07T11:32:00Z", "closed_at": "2018-05-07T11:09:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have added after creating flask app instance\r\n`CORS(app, supports_credentials=True)`\r\n\r\nfor login and checking authentication I am using\r\n```\r\n@app.route('/check_auth', methods=['GET'])\r\ndef check_auth():\r\n    if current_user.is_authenticated:\r\n        return success({ \"message\": 'Logged in', \"user\": current_user.obj_to_dict() })\r\n    return error('Not logged in', status_code=403)\r\n\r\n\r\n@app.route('/login', methods=['POST'])\r\ndef login():\r\n    \"\"\"Login Form\"\"\"\r\n    username = request.json['username']\r\n    password = request.json['password']\r\n    data = User.query.filter_by(username=username).first()\r\n    if data and bcrypt.check_password_hash(data.password, password.encode('utf-8')):\r\n        login_user(data)\r\n        dataDict = data.obj_to_dict(skip_columns=['password'])\r\n        return success({ \"message\": 'successful', \"data\": dataDict })\r\n    else:\r\n        return error('Wrong username or password', status_code=403)\r\n```\r\n\r\ncurrent_user.is_authenticated results false. But works perfectly fine in postman. Also if I remove CORS and try current_user.is_authenticated it works. So I'm sure issue is related with CORS.\r\n\r\nMany similar issues are already present. Looking through them suggests that session problem is solved by using `supports_credentials=True` but current_user returns anonymous for me even after setting this argument", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/217", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/217/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/217/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/217", "id": 317767221, "node_id": "MDU6SXNzdWUzMTc3NjcyMjE=", "number": 217, "title": "cors_after_request dies if the request has headers=None ", "user": {"login": "dusktreader", "id": 713676, "node_id": "MDQ6VXNlcjcxMzY3Ng==", "avatar_url": "https://avatars0.githubusercontent.com/u/713676?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dusktreader", "html_url": "https://github.com/dusktreader", "followers_url": "https://api.github.com/users/dusktreader/followers", "following_url": "https://api.github.com/users/dusktreader/following{/other_user}", "gists_url": "https://api.github.com/users/dusktreader/gists{/gist_id}", "starred_url": "https://api.github.com/users/dusktreader/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dusktreader/subscriptions", "organizations_url": "https://api.github.com/users/dusktreader/orgs", "repos_url": "https://api.github.com/users/dusktreader/repos", "events_url": "https://api.github.com/users/dusktreader/events{/privacy}", "received_events_url": "https://api.github.com/users/dusktreader/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-25T19:42:36Z", "updated_at": "2020-06-19T04:26:11Z", "closed_at": "2018-04-26T16:32:14Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "None is the default value of headers. If none are set, the following exception is raised:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/tbeck/.virtualenvs/praetorian/lib/python3.6/site-packages/flask/app.py\", line 1997, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/Users/tbeck/.virtualenvs/praetorian/lib/python3.6/site-packages/flask/app.py\", line 1985, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/Users/tbeck/.virtualenvs/praetorian/lib/python3.6/site-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File \"/Users/tbeck/.virtualenvs/praetorian/lib/python3.6/site-packages/flask/app.py\", line 1540, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/tbeck/.virtualenvs/praetorian/lib/python3.6/site-packages/flask/_compat.py\", line 33, in reraise\r\n    raise value\r\n  File \"/Users/tbeck/.virtualenvs/praetorian/lib/python3.6/site-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/Users/tbeck/.virtualenvs/praetorian/lib/python3.6/site-packages/flask/app.py\", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/Users/tbeck/.virtualenvs/praetorian/lib/python3.6/site-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File \"/Users/tbeck/.virtualenvs/praetorian/lib/python3.6/site-packages/flask_cors/extension.py\", line 173, in cors_after_request\r\n    if resp.headers.get(ACL_ORIGIN):\r\n```\r\n\r\nThis can happen with unhandled exceptions which cause a 500 error, or any response that does not set headers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/216", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/216/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/216/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/216", "id": 308098889, "node_id": "MDU6SXNzdWUzMDgwOTg4ODk=", "number": 216, "title": "Flask cors not working updated in Google Chrome", "user": {"login": "salaimani18", "id": 23719264, "node_id": "MDQ6VXNlcjIzNzE5MjY0", "avatar_url": "https://avatars3.githubusercontent.com/u/23719264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/salaimani18", "html_url": "https://github.com/salaimani18", "followers_url": "https://api.github.com/users/salaimani18/followers", "following_url": "https://api.github.com/users/salaimani18/following{/other_user}", "gists_url": "https://api.github.com/users/salaimani18/gists{/gist_id}", "starred_url": "https://api.github.com/users/salaimani18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/salaimani18/subscriptions", "organizations_url": "https://api.github.com/users/salaimani18/orgs", "repos_url": "https://api.github.com/users/salaimani18/repos", "events_url": "https://api.github.com/users/salaimani18/events{/privacy}", "received_events_url": "https://api.github.com/users/salaimani18/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-03-23T16:32:49Z", "updated_at": "2018-04-26T16:32:58Z", "closed_at": "2018-04-26T16:32:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Cors  not working in updated Google Chrome  version 69.XXX .It showing cross domain error in python Flask.In lower version working properly.check and solve it  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/215", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/215/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/215/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/215/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/215", "id": 305080016, "node_id": "MDU6SXNzdWUzMDUwODAwMTY=", "number": 215, "title": "same domain added twice", "user": {"login": "wahello", "id": 3362049, "node_id": "MDQ6VXNlcjMzNjIwNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/3362049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wahello", "html_url": "https://github.com/wahello", "followers_url": "https://api.github.com/users/wahello/followers", "following_url": "https://api.github.com/users/wahello/following{/other_user}", "gists_url": "https://api.github.com/users/wahello/gists{/gist_id}", "starred_url": "https://api.github.com/users/wahello/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wahello/subscriptions", "organizations_url": "https://api.github.com/users/wahello/orgs", "repos_url": "https://api.github.com/users/wahello/repos", "events_url": "https://api.github.com/users/wahello/events{/privacy}", "received_events_url": "https://api.github.com/users/wahello/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-03-14T09:26:40Z", "updated_at": "2018-04-09T01:41:20Z", "closed_at": "2018-04-09T01:41:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use Nginx for reverse web  proxy, and the configuration for api as following:\r\n\r\n    location /api/ {\r\n                set $cors '';\r\n                if ($http_origin ~ '^http?://(localhost|zz56\\.s1\\.natapp\\.cc|logierp\\.zz56\\.s1\\.natapp\\.cc)') {\r\n                        set $cors 'true';\r\n                }\r\n\r\n                if ($cors = 'true') {\r\n\r\n                        #add_header Access-Control-Allow-Origin \"$http_origin\" ;\r\n                        #add_header 'Access-Control-Allow-Origin' '*' always;\r\n                        add_header 'Access-Control-Allow-Credentials' 'true' always;\r\n                        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;\r\n                        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;\r\n                        # required to be able to read Authorization header in frontend\r\n                        #add_header 'Access-Control-Expose-Headers' 'Authorization' always;\r\n                }\r\n\r\n                if ($request_method = 'OPTIONS') {\r\n                        add_header Access-Control-Allow-Origin \"$http_origin\";\r\n                        #add_header 'Access-Control-Allow-Origin' '*';\r\n                        #add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, HEAD';\r\n                        #add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;\r\n                        add_header 'Access-Control-Max-Age' 1728000;\r\n                        add_header 'Content-Type' 'text/plain charset=UTF-8';\r\n                        add_header 'Content-Length' 0;\r\n                        #return 204;\r\n                }\r\n         }\r\n\r\n **and  browser  console error is following:** \r\n  _Response to preflight request doesn't pass access control check: The 'Access-Control-Allow-Origin' header contains multiple values 'http://logierp.zz56.s1.natapp.cc, http://logierp.zz56.s1.natapp.cc', but only one is allowed. Origin 'http://logierp.zz56.s1.natapp.cc' is therefore not allowed access._\r\n\r\n **It seems that Access-Control-Allow-Origin add the same origin twice.**\r\n\r\nAny Idea to fix it? \r\n**Help!!!!!**\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/212", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/212/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/212/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/212", "id": 277963753, "node_id": "MDU6SXNzdWUyNzc5NjM3NTM=", "number": 212, "title": "How to specify the list of origins?", "user": {"login": "igorvishnevskiy", "id": 19984347, "node_id": "MDQ6VXNlcjE5OTg0MzQ3", "avatar_url": "https://avatars1.githubusercontent.com/u/19984347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/igorvishnevskiy", "html_url": "https://github.com/igorvishnevskiy", "followers_url": "https://api.github.com/users/igorvishnevskiy/followers", "following_url": "https://api.github.com/users/igorvishnevskiy/following{/other_user}", "gists_url": "https://api.github.com/users/igorvishnevskiy/gists{/gist_id}", "starred_url": "https://api.github.com/users/igorvishnevskiy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/igorvishnevskiy/subscriptions", "organizations_url": "https://api.github.com/users/igorvishnevskiy/orgs", "repos_url": "https://api.github.com/users/igorvishnevskiy/repos", "events_url": "https://api.github.com/users/igorvishnevskiy/events{/privacy}", "received_events_url": "https://api.github.com/users/igorvishnevskiy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-11-30T01:07:53Z", "updated_at": "2018-11-29T20:43:02Z", "closed_at": "2018-05-22T03:40:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "**I need to limit access to calls coming from 2 domain names as well as localhost.**\r\n\r\n**I tried following:**\r\n```\r\napp = Flask(__name__)\r\nCORS(app, resources={r\"/*\": {\"origins\": \"*.domain-one.com, intranet.domain-two.com, 127.0.0.1\"}})\r\n```\r\n\r\n**And I tried the following:**\r\n```\r\napp = Flask(__name__)\r\nCORS(app, resources={r\"/*\": {\"origins\": [\"*.domain-one.com\", \"intranet.domain-two.com\", \"127.0.0.1\"]}})\r\n```\r\n\r\n**Receiving exception in both cases:**\r\n```\r\n[2017-11-29 17:01:54,271] ERROR in app: Exception on /myapi/ [POST]\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/flask/app.py\", line 1615, in full_dispatch_request\r\n    return self.finalize_request(rv)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/flask/app.py\", line 1632, in finalize_request\r\n    response = self.process_response(response)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/flask/app.py\", line 1856, in process_response\r\n    response = handler(response)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/flask_cors/extension.py\", line 181, in cors_after_request\r\n    set_cors_headers(resp, res_options)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/flask_cors/core.py\", line 236, in set_cors_headers\r\n    headers_to_set = get_cors_headers(options, request.headers, request.method)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/flask_cors/core.py\", line 168, in get_cors_headers\r\n    origins_to_set = get_cors_origins(options, request_headers.get('Origin'))\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/flask_cors/core.py\", line 123, in get_cors_origins\r\n    elif try_match_any(request_origin, origins):\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/flask_cors/core.py\", line 263, in try_match_any\r\n    return any(try_match(inst, pattern) for pattern in patterns)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/flask_cors/core.py\", line 263, in <genexpr>\r\n    return any(try_match(inst, pattern) for pattern in patterns)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/flask_cors/core.py\", line 271, in try_match\r\n    return re.match(maybe_regex, request_origin, flags=re.IGNORECASE)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/re.py\", line 137, in match\r\n    return _compile(pattern, flags).match(string)\r\n  File \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/re.py\", line 244, in _compile\r\n    raise error, v # invalid expression\r\nerror: nothing to repeat\r\n```\r\n\r\n**API works when I allow all CORS:**\r\n```\r\napp = Flask(__name__)\r\nCORS(app)\r\n```\r\n**But I need to limit access to calls coming from 2 domain names as well as localhost.**\r\n\r\nThank you for your help.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/211", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/211/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/211/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/211/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/211", "id": 275249005, "node_id": "MDU6SXNzdWUyNzUyNDkwMDU=", "number": 211, "title": "Issue with setting up origins", "user": {"login": "shgam2", "id": 18296050, "node_id": "MDQ6VXNlcjE4Mjk2MDUw", "avatar_url": "https://avatars0.githubusercontent.com/u/18296050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shgam2", "html_url": "https://github.com/shgam2", "followers_url": "https://api.github.com/users/shgam2/followers", "following_url": "https://api.github.com/users/shgam2/following{/other_user}", "gists_url": "https://api.github.com/users/shgam2/gists{/gist_id}", "starred_url": "https://api.github.com/users/shgam2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shgam2/subscriptions", "organizations_url": "https://api.github.com/users/shgam2/orgs", "repos_url": "https://api.github.com/users/shgam2/repos", "events_url": "https://api.github.com/users/shgam2/events{/privacy}", "received_events_url": "https://api.github.com/users/shgam2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-20T06:25:15Z", "updated_at": "2018-04-26T16:33:07Z", "closed_at": "2018-04-26T16:33:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there,\r\n\r\nI've been struggling to set up the CORS correctly for a couple of days now.\r\nMy intent is to only allow certain URLs to access the server that I've built, but it's not working as I expected.\r\nSo I created a new python server on the local with the code provided in the link:\r\n(https://github.com/corydolphin/flask-cors/blob/master/examples/app_based_example.py)\r\nand changed the line 32 to this:\r\nCORS(app, resources={r\"/api/*\": {\"origins\": \"https://www.example.com\"}})\r\nJust to see if I actually get \"blocked\" when I try to access my local server (those pages that meet the resource requirements) on my browser.\r\n\r\nAm I doing something wrong?\r\nI'm not sure if this is a place where I can ask questions but I really wish I can get some answer here..\r\nRunning (flask_cors 3.0.3)\r\n\r\nThanks,\r\nBrian\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/210", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/210/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/210/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/210/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/210", "id": 269263000, "node_id": "MDU6SXNzdWUyNjkyNjMwMDA=", "number": 210, "title": "No CORS on error pages", "user": {"login": "fgblomqvist", "id": 649260, "node_id": "MDQ6VXNlcjY0OTI2MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/649260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fgblomqvist", "html_url": "https://github.com/fgblomqvist", "followers_url": "https://api.github.com/users/fgblomqvist/followers", "following_url": "https://api.github.com/users/fgblomqvist/following{/other_user}", "gists_url": "https://api.github.com/users/fgblomqvist/gists{/gist_id}", "starred_url": "https://api.github.com/users/fgblomqvist/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fgblomqvist/subscriptions", "organizations_url": "https://api.github.com/users/fgblomqvist/orgs", "repos_url": "https://api.github.com/users/fgblomqvist/repos", "events_url": "https://api.github.com/users/fgblomqvist/events{/privacy}", "received_events_url": "https://api.github.com/users/fgblomqvist/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 49725208, "node_id": "MDU6TGFiZWw0OTcyNTIwOA==", "url": "https://api.github.com/repos/corydolphin/flask-cors/labels/duplicate", "name": "duplicate", "color": "cccccc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2017-10-27T23:28:31Z", "updated_at": "2019-07-10T16:05:15Z", "closed_at": "2019-07-10T16:05:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using the middleware in my blueprinted flask app:\r\n```\r\nfrom flask_cors import CORS\r\nCORS(app)\r\n```\r\nThe correct CORS headers are not set on the error pages, which results in a CORS error on the front-end every time the server throws an error. Am I doing something wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/208", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/208/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/208/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/208", "id": 255055784, "node_id": "MDU6SXNzdWUyNTUwNTU3ODQ=", "number": 208, "title": "support all subdomain of a domain when supports_credentials=True", "user": {"login": "wobeng", "id": 11966846, "node_id": "MDQ6VXNlcjExOTY2ODQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/11966846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wobeng", "html_url": "https://github.com/wobeng", "followers_url": "https://api.github.com/users/wobeng/followers", "following_url": "https://api.github.com/users/wobeng/following{/other_user}", "gists_url": "https://api.github.com/users/wobeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/wobeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wobeng/subscriptions", "organizations_url": "https://api.github.com/users/wobeng/orgs", "repos_url": "https://api.github.com/users/wobeng/repos", "events_url": "https://api.github.com/users/wobeng/events{/privacy}", "received_events_url": "https://api.github.com/users/wobeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-04T14:19:35Z", "updated_at": "2017-10-02T20:25:26Z", "closed_at": "2017-10-02T20:25:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "sorry for reopening. Just to confirm, I can add\r\n\r\nhttps://..app.domain.com and https://..app.domain.com\r\n\r\nin the origins list and it should work?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/206", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/206/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/206/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/206", "id": 247099718, "node_id": "MDU6SXNzdWUyNDcwOTk3MTg=", "number": 206, "title": "support all subdomain of a domain when supports_credentials=True", "user": {"login": "wobeng", "id": 11966846, "node_id": "MDQ6VXNlcjExOTY2ODQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/11966846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wobeng", "html_url": "https://github.com/wobeng", "followers_url": "https://api.github.com/users/wobeng/followers", "following_url": "https://api.github.com/users/wobeng/following{/other_user}", "gists_url": "https://api.github.com/users/wobeng/gists{/gist_id}", "starred_url": "https://api.github.com/users/wobeng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wobeng/subscriptions", "organizations_url": "https://api.github.com/users/wobeng/orgs", "repos_url": "https://api.github.com/users/wobeng/repos", "events_url": "https://api.github.com/users/wobeng/events{/privacy}", "received_events_url": "https://api.github.com/users/wobeng/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-08-01T15:01:57Z", "updated_at": "2017-09-04T14:18:47Z", "closed_at": "2017-08-16T17:04:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm using supports_credentials=True. With support_credentials Access-Control-Allow-Origin can't be *.\r\nI want to support all subdomain of .app.domain.com. Is it possible to allow https://*.app.domain.com", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/205", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/205/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/205/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/205", "id": 241659808, "node_id": "MDU6SXNzdWUyNDE2NTk4MDg=", "number": 205, "title": "POST is working but DELETE is blocked", "user": {"login": "rustanacexd", "id": 4982729, "node_id": "MDQ6VXNlcjQ5ODI3Mjk=", "avatar_url": "https://avatars2.githubusercontent.com/u/4982729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rustanacexd", "html_url": "https://github.com/rustanacexd", "followers_url": "https://api.github.com/users/rustanacexd/followers", "following_url": "https://api.github.com/users/rustanacexd/following{/other_user}", "gists_url": "https://api.github.com/users/rustanacexd/gists{/gist_id}", "starred_url": "https://api.github.com/users/rustanacexd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rustanacexd/subscriptions", "organizations_url": "https://api.github.com/users/rustanacexd/orgs", "repos_url": "https://api.github.com/users/rustanacexd/repos", "events_url": "https://api.github.com/users/rustanacexd/events{/privacy}", "received_events_url": "https://api.github.com/users/rustanacexd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-07-10T09:57:11Z", "updated_at": "2017-07-10T16:52:26Z", "closed_at": "2017-07-10T16:52:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "POST is working but DELETE is blocked\r\n\r\nI don't use a decorator only this - `CORS(app)`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/202", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/202/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/202/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/202/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/202", "id": 237994663, "node_id": "MDU6SXNzdWUyMzc5OTQ2NjM=", "number": 202, "title": "Wildcard origin sent despite supports_credentials=True", "user": {"login": "gsakkis", "id": 291289, "node_id": "MDQ6VXNlcjI5MTI4OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/291289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gsakkis", "html_url": "https://github.com/gsakkis", "followers_url": "https://api.github.com/users/gsakkis/followers", "following_url": "https://api.github.com/users/gsakkis/following{/other_user}", "gists_url": "https://api.github.com/users/gsakkis/gists{/gist_id}", "starred_url": "https://api.github.com/users/gsakkis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gsakkis/subscriptions", "organizations_url": "https://api.github.com/users/gsakkis/orgs", "repos_url": "https://api.github.com/users/gsakkis/repos", "events_url": "https://api.github.com/users/gsakkis/events{/privacy}", "received_events_url": "https://api.github.com/users/gsakkis/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-06-22T22:45:01Z", "updated_at": "2017-07-11T01:01:58Z", "closed_at": "2017-07-11T01:01:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "`CORS(app, supports_credentials=True)` causes the server to return `Access-Control-Allow-Credentials: true` and `Access-Control-Allow-Origin: *`, which afaict is invalid. The cause is the `always_send=True` default option; making it `False` doesn't trigger the bug.\r\n\r\nProbable fix:\r\n```\r\ndiff --git a/flask_cors/core.py b/flask_cors/core.py\r\nindex 0ef2b1e..f30fd33 100644\r\n--- a/flask_cors/core.py\r\n+++ b/flask_cors/core.py\r\n@@ -134,15 +134,15 @@ def get_cors_origins(options, request_origin):\r\n     elif options.get('always_send'):\r\n         if wildcard:\r\n             # If wildcard is in the origins, even if 'send_wildcard' is False,\r\n             # simply send the wildcard. It is the most-likely to be correct\r\n             # thing to do (the only other option is to return nothing, which)\r\n             # pretty is probably not whawt you want if you specify origins as\r\n             # '*'\r\n-            return ['*']\r\n+            return ['*'] if not options['supports_credentials'] else None\r\n         else:\r\n             # Return all origins that are not regexes.\r\n             return sorted([o for o in origins if not probably_regex(o)])\r\n \r\n     # Terminate these steps, return the original request untouched.\r\n     else:\r\n         LOG.debug(\"The request did not contain an 'Origin' header. This means the browser or client did not request CORS, ensure the Origin Header is set.\")\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/201", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/201/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/201/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/201/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/201", "id": 220765867, "node_id": "MDU6SXNzdWUyMjA3NjU4Njc=", "number": 201, "title": "Using flask-cors with flask-restful and @before_request decorator for jwt auth", "user": {"login": "gwvt", "id": 17604801, "node_id": "MDQ6VXNlcjE3NjA0ODAx", "avatar_url": "https://avatars2.githubusercontent.com/u/17604801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gwvt", "html_url": "https://github.com/gwvt", "followers_url": "https://api.github.com/users/gwvt/followers", "following_url": "https://api.github.com/users/gwvt/following{/other_user}", "gists_url": "https://api.github.com/users/gwvt/gists{/gist_id}", "starred_url": "https://api.github.com/users/gwvt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gwvt/subscriptions", "organizations_url": "https://api.github.com/users/gwvt/orgs", "repos_url": "https://api.github.com/users/gwvt/repos", "events_url": "https://api.github.com/users/gwvt/events{/privacy}", "received_events_url": "https://api.github.com/users/gwvt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2017-04-10T20:47:51Z", "updated_at": "2018-07-25T12:56:24Z", "closed_at": "2017-04-22T20:50:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use flask-cors for the development configuration for a flask-restful api, simplified below:\r\n\r\n```\r\nimport config\r\n\r\nfrom flask import Flask, request\r\nfrom flask_restful import Api, Resource\r\nfrom flask_cors import CORS\r\n\r\napp = Flask(__name__)\r\napp.config.from_object('config.DevelopmentConfig')\r\napi = Api(app)\r\nif app.config['CORS_ENABLED'] is True:\r\n    CORS(app, origins=\"http://127.0.0.1:8080\", allow_headers=[\r\n        \"Content-Type\", \"Authorization\", \"Access-Control-Allow-Credentials\"],\r\n        supports_credentials=True)\r\n\r\n\r\n@app.before_request\r\ndef authorize_token():\r\n    if request.endpoint != 'token':\r\n        try:\r\n            authorize_jwt(request)\r\n        except Exception as e:\r\n            return \"401 Unauthorized\\n{}\\n\\n\".format(e), 401\r\n\r\n\r\nclass GetToken(Resource):\r\n    def post(self):\r\n        token = generate_jwt()\r\n        return token       # token sent to client to return in subsequent requests in Authorization header\r\n\r\n\r\n# requires authentication through before_request decorator\r\nclass Test(Resource):\r\n    def get(self):\r\n        return {\"test\": \"testing\"}\r\n\r\n\r\napi.add_resource(GetToken, '/token', endpoint='token')\r\napi.add_resource(Test, '/test', endpoint='test')\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n```\r\n\r\nBut whatever I try I always get the error 'Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.'\r\n\r\nWithout the JWT auth piece, everything else works fine. (And the JWT auth works fine without flask-cors.) Seems like the hangup is something with using flask-cors with the before_request decorator (?).\r\n\r\nAny suggestions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/200", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/200/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/200/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/200", "id": 218787817, "node_id": "MDU6SXNzdWUyMTg3ODc4MTc=", "number": 200, "title": "Response to preflight request doesn't pass access control check: The value of the 'Access-Control-Allow-Credentials' header in the response is '' which must be 'true' when the request's credentials mode is 'include'", "user": {"login": "Syntaf", "id": 1827631, "node_id": "MDQ6VXNlcjE4Mjc2MzE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1827631?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Syntaf", "html_url": "https://github.com/Syntaf", "followers_url": "https://api.github.com/users/Syntaf/followers", "following_url": "https://api.github.com/users/Syntaf/following{/other_user}", "gists_url": "https://api.github.com/users/Syntaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/Syntaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Syntaf/subscriptions", "organizations_url": "https://api.github.com/users/Syntaf/orgs", "repos_url": "https://api.github.com/users/Syntaf/repos", "events_url": "https://api.github.com/users/Syntaf/events{/privacy}", "received_events_url": "https://api.github.com/users/Syntaf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-04-02T19:38:28Z", "updated_at": "2020-07-17T04:17:04Z", "closed_at": "2017-05-07T20:42:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure why I'm getting this error when trying to allow CORS on my flask app. Here's my server:\r\n\r\n```\r\n#library imports\r\nfrom flask import Flask\r\nfrom flask_cors import CORS, cross_origin\r\n\r\napp = Flask(__name__)\r\nCORS(app, resources={r\"/*\": {\"origins\": \"*\"}})\r\napp.config['CORS_HEADERS'] = 'Content-Type'\r\n\r\n@app.route('/img', methods=['POST'])\r\ndef image_upload():\r\n    if not request.json:\r\n        abort(400)\r\n    print(request.json)\r\n    return jsonify('working')\r\n\r\nif __name__ == \"__main__\":\r\n    app.run(host= \"0.0.0.0\", debug=True, port = 5000, threaded=True)\r\n    print(\"Running dev server on port 5000\")\r\n```\r\n\r\nNow on my frontend, when I attempt to make a POST request to `/img`, I get the error in the title. The full error is:\r\n\r\n> XMLHttpRequest cannot load http://0.0.0.0:5000/img. Response to preflight request doesn't pass access control check: The value of the 'Access-Control-Allow-Credentials' header in the response is '' which must be 'true' when the request's credentials mode is 'include'. Origin 'http://localhost:8080' is therefore not allowed access. The credentials mode of requests initiated by the XMLHttpRequest is controlled by the withCredentials attribute.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/199", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/199/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/199/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/199", "id": 216012528, "node_id": "MDU6SXNzdWUyMTYwMTI1Mjg=", "number": 199, "title": "Request header field Content-Type is not allowed by Access-Control-Allow-Headers in preflight response. in Google-Chrome", "user": {"login": "b3g00d", "id": 12056204, "node_id": "MDQ6VXNlcjEyMDU2MjA0", "avatar_url": "https://avatars3.githubusercontent.com/u/12056204?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b3g00d", "html_url": "https://github.com/b3g00d", "followers_url": "https://api.github.com/users/b3g00d/followers", "following_url": "https://api.github.com/users/b3g00d/following{/other_user}", "gists_url": "https://api.github.com/users/b3g00d/gists{/gist_id}", "starred_url": "https://api.github.com/users/b3g00d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b3g00d/subscriptions", "organizations_url": "https://api.github.com/users/b3g00d/orgs", "repos_url": "https://api.github.com/users/b3g00d/repos", "events_url": "https://api.github.com/users/b3g00d/events{/privacy}", "received_events_url": "https://api.github.com/users/b3g00d/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-03-22T10:17:41Z", "updated_at": "2020-03-16T12:35:00Z", "closed_at": "2017-03-22T17:24:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI'm using lastest version of ```flask-CORS```:\r\nThis is my example code:\r\n```\r\nendpoints = Blueprint('api', __name__)\r\napi = Api(endpoints)\r\nCORS(endpoints, resources='/login', allow_headers='*',\r\n     origins='*', methods='*', expose_headers='Authorization')\r\napi.add_resource(Login, '/login')\r\n```\r\nOf cource I already read your lastest docs and knew `allow_headers` default is `'*'`. But when I send a request `OPTIONS` like this:\r\n\r\n```\r\nhttp OPTIONS :5000/login Access-Control-Request-Headers:Content-Type\r\n\r\nHTTP/1.0 200 OK\r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Expose-Headers: Authorization\r\nAllow: POST, OPTIONS\r\nContent-Length: 0\r\nContent-Type: text/html; charset=utf-8\r\nDate: Wed, 22 Mar 2017 10:14:56 GMT\r\nServer: Werkzeug/0.12.1 Python/2.7.12\r\n```\r\n\r\nI don't have `Access-Control-Allow-Headers` in response. and Google-Chrome return a error `Request header field Content-Type is not allowed by Access-Control-Allow-Headers in preflight response.`.\r\nI already change to a list, string but not working at all.\r\nNOTE: I already read this [issue #145](https://github.com/corydolphin/flask-cors/issues/145)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/198", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/198/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/198/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/198", "id": 214790492, "node_id": "MDU6SXNzdWUyMTQ3OTA0OTI=", "number": 198, "title": "CORS headers are not sent with decorator when there is an exception in view function", "user": {"login": "cenkalti", "id": 661618, "node_id": "MDQ6VXNlcjY2MTYxOA==", "avatar_url": "https://avatars2.githubusercontent.com/u/661618?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cenkalti", "html_url": "https://github.com/cenkalti", "followers_url": "https://api.github.com/users/cenkalti/followers", "following_url": "https://api.github.com/users/cenkalti/following{/other_user}", "gists_url": "https://api.github.com/users/cenkalti/gists{/gist_id}", "starred_url": "https://api.github.com/users/cenkalti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cenkalti/subscriptions", "organizations_url": "https://api.github.com/users/cenkalti/orgs", "repos_url": "https://api.github.com/users/cenkalti/repos", "events_url": "https://api.github.com/users/cenkalti/events{/privacy}", "received_events_url": "https://api.github.com/users/cenkalti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-16T18:02:09Z", "updated_at": "2018-05-29T03:39:58Z", "closed_at": "2018-05-29T03:39:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "In other words, `intercept_exceptions` option is not implemented in the decorator.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/197", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/197/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/197/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/197", "id": 213444526, "node_id": "MDU6SXNzdWUyMTM0NDQ1MjY=", "number": 197, "title": "`support_credentials=True` doesn't set `Access-Control-Allow-Credentials` header", "user": {"login": "frnsys", "id": 1059947, "node_id": "MDQ6VXNlcjEwNTk5NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1059947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frnsys", "html_url": "https://github.com/frnsys", "followers_url": "https://api.github.com/users/frnsys/followers", "following_url": "https://api.github.com/users/frnsys/following{/other_user}", "gists_url": "https://api.github.com/users/frnsys/gists{/gist_id}", "starred_url": "https://api.github.com/users/frnsys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frnsys/subscriptions", "organizations_url": "https://api.github.com/users/frnsys/orgs", "repos_url": "https://api.github.com/users/frnsys/repos", "events_url": "https://api.github.com/users/frnsys/events{/privacy}", "received_events_url": "https://api.github.com/users/frnsys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-10T20:31:03Z", "updated_at": "2017-04-29T03:44:17Z", "closed_at": "2017-04-29T03:44:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm initializing my app like this:\r\n\r\n    CORS(app, support_credentials=True)\r\n\r\nbut the  `Access-Control-Allow-Credentials` header is never set.\r\n\r\nSetting it manually works:\r\n\r\n```\r\n@app.after_request\r\ndef creds(response):\r\n    response.headers['Access-Control-Allow-Credentials'] = 'true'\r\n    return response\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/196", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/196/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/196/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/196/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/196", "id": 213246554, "node_id": "MDU6SXNzdWUyMTMyNDY1NTQ=", "number": 196, "title": "Why flask_cors didn't return response directly (before Decorator @before_request) when get a OPTIONS request?", "user": {"login": "gasxia", "id": 9269304, "node_id": "MDQ6VXNlcjkyNjkzMDQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/9269304?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gasxia", "html_url": "https://github.com/gasxia", "followers_url": "https://api.github.com/users/gasxia/followers", "following_url": "https://api.github.com/users/gasxia/following{/other_user}", "gists_url": "https://api.github.com/users/gasxia/gists{/gist_id}", "starred_url": "https://api.github.com/users/gasxia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gasxia/subscriptions", "organizations_url": "https://api.github.com/users/gasxia/orgs", "repos_url": "https://api.github.com/users/gasxia/repos", "events_url": "https://api.github.com/users/gasxia/events{/privacy}", "received_events_url": "https://api.github.com/users/gasxia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-03-10T05:14:42Z", "updated_at": "2019-02-10T13:57:25Z", "closed_at": "2017-05-07T20:47:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\ndef create_app(config_name):\r\n    app = Flask(__name__)\r\n    logging.getLogger('flask_cors').level = logging.DEBUG\r\n    CORS(app)\r\n    app.config.from_object(config[config_name])\r\n    config[config_name].init_app(app)\r\n\r\n    db.init_app(app)\r\n\r\n    # \u6ce8\u518capi\u84dd\u672c\r\n    from .api import api as api_blueprint\r\n    app.register_blueprint(api_blueprint, url_prefix='/api')\r\n    # todo: \u5904\u7406\u8def\u7531\u4e0e\u9519\u8bef\u9875\u9762\r\n\r\n    return app\r\n```\r\nError In before_request\r\n`api/auth.py`\r\n```\r\nfrom flask import g, request\r\nfrom flask.ext.httpauth import HTTPBasicAuth\r\nfrom .errors import forbidden\r\nfrom flask_cors import cross_origin\r\nfrom . import api\r\nfrom ..models import User\r\n\r\nauth = HTTPBasicAuth()\r\n\r\n@auth.verify_password\r\ndef verify_password(username, password):\r\n    user = User.query.filter_by(username = username).first()\r\n    if not user:\r\n        return False\r\n    g.current_user = user\r\n    return user.verify_password(password)\r\n\r\n\r\n@api.before_request\r\n# @cross_origin()\r\n@auth.login_required\r\ndef before_request():\r\n    # pass\r\n    if not g.current_user: # request.method != 'OPTIONS' and not g.current_user:\r\n        return forbidden('Unconfirmed account')\r\n```\r\nWhen I send a auth fetch. I'm getting the error.\r\n```\r\n127.0.0.1 - - [10/Mar/2017 12:35:25] \"OPTIONS /api/posts/ HTTP/1.1\" 500 -\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1994, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1985, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File \"/usr/local/lib/python2.7/site-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1540, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/usr/local/lib/python2.7/site-packages/flask_cors/extension.py\", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1517, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1610, in full_dispatch_request\r\n    rv = self.preprocess_request()\r\n  File \"/usr/local/lib/python2.7/site-packages/flask/app.py\", line 1831, in preprocess_request\r\n    rv = func()\r\n  File \"/usr/local/lib/python2.7/site-packages/flask_httpauth.py\", line 93, in decorated\r\n    return f(*args, **kwargs)\r\n  File \"/Users/jinrunsen/Dev/Projects/learn-flask/user-api/app/api/auth.py\", line 24, in before_request\r\n    if not g.current_user:# request.method != 'OPTIONS' and not g.current_user:\r\n  File \"/usr/local/lib/python2.7/site-packages/werkzeug/local.py\", line 343, in __getattr__\r\n    return getattr(self._get_current_object(), name)\r\nAttributeError: '_AppCtxGlobals' object has no attribute 'current_user'\r\n```\r\nWhy flask_cors didn't return response directly (before Decorator `@before_request`) when get a `OPTIONS` request?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/195", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/195/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/195/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/195", "id": 211262553, "node_id": "MDU6SXNzdWUyMTEyNjI1NTM=", "number": 195, "title": "Allow at-runtime origin validation - or some tips on usage?", "user": {"login": "estein-de", "id": 25042643, "node_id": "MDQ6VXNlcjI1MDQyNjQz", "avatar_url": "https://avatars0.githubusercontent.com/u/25042643?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estein-de", "html_url": "https://github.com/estein-de", "followers_url": "https://api.github.com/users/estein-de/followers", "following_url": "https://api.github.com/users/estein-de/following{/other_user}", "gists_url": "https://api.github.com/users/estein-de/gists{/gist_id}", "starred_url": "https://api.github.com/users/estein-de/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estein-de/subscriptions", "organizations_url": "https://api.github.com/users/estein-de/orgs", "repos_url": "https://api.github.com/users/estein-de/repos", "events_url": "https://api.github.com/users/estein-de/events{/privacy}", "received_events_url": "https://api.github.com/users/estein-de/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 49725209, "node_id": "MDU6TGFiZWw0OTcyNTIwOQ==", "url": "https://api.github.com/repos/corydolphin/flask-cors/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-02T01:31:43Z", "updated_at": "2017-08-16T17:05:01Z", "closed_at": "2017-08-16T17:05:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the documentation at http://flask-cors.corydolphin.com/en/latest/api.html#decorator there is no way to make it so that the allowed origins are determined other than at the time the decorator function is applied (which would be, in most situations, the moment when the module is imported).\r\n\r\nI want to set my allowed origins in my flask config, but flask config is only accessible once current_app is accessible... and my controllers get imported before current_app is accessible. Currently I'm working around this by applying the decorator later using lazy evaluation but I would really rather not do that. Can you suggest something?\r\n\r\nAm I missing a really obvious way to do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/194", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/194/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/194/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/194", "id": 208650711, "node_id": "MDU6SXNzdWUyMDg2NTA3MTE=", "number": 194, "title": "ImportError: No module named 'flask_cors'", "user": {"login": "GijsGoudzwaard", "id": 5947260, "node_id": "MDQ6VXNlcjU5NDcyNjA=", "avatar_url": "https://avatars2.githubusercontent.com/u/5947260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GijsGoudzwaard", "html_url": "https://github.com/GijsGoudzwaard", "followers_url": "https://api.github.com/users/GijsGoudzwaard/followers", "following_url": "https://api.github.com/users/GijsGoudzwaard/following{/other_user}", "gists_url": "https://api.github.com/users/GijsGoudzwaard/gists{/gist_id}", "starred_url": "https://api.github.com/users/GijsGoudzwaard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GijsGoudzwaard/subscriptions", "organizations_url": "https://api.github.com/users/GijsGoudzwaard/orgs", "repos_url": "https://api.github.com/users/GijsGoudzwaard/repos", "events_url": "https://api.github.com/users/GijsGoudzwaard/events{/privacy}", "received_events_url": "https://api.github.com/users/GijsGoudzwaard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-18T16:07:08Z", "updated_at": "2017-02-19T22:08:24Z", "closed_at": "2017-02-19T22:08:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have installed flask_cors like so:\r\n`pip3 install -U flask-cors` also tried `pip install -U flask-cors`\r\n\r\nThis is my code:\r\n```\r\nfrom flask import Flask\r\nfrom flask_cors import CORS, cross_origin\r\n\r\napp = Flask(__name__)\r\nCORS(app)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/193", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/193/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/193/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/193", "id": 207976811, "node_id": "MDU6SXNzdWUyMDc5NzY4MTE=", "number": 193, "title": "Can't specify allowed origin of a given port", "user": {"login": "TheJimFactor", "id": 5199164, "node_id": "MDQ6VXNlcjUxOTkxNjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5199164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheJimFactor", "html_url": "https://github.com/TheJimFactor", "followers_url": "https://api.github.com/users/TheJimFactor/followers", "following_url": "https://api.github.com/users/TheJimFactor/following{/other_user}", "gists_url": "https://api.github.com/users/TheJimFactor/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheJimFactor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheJimFactor/subscriptions", "organizations_url": "https://api.github.com/users/TheJimFactor/orgs", "repos_url": "https://api.github.com/users/TheJimFactor/repos", "events_url": "https://api.github.com/users/TheJimFactor/events{/privacy}", "received_events_url": "https://api.github.com/users/TheJimFactor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-16T00:41:02Z", "updated_at": "2017-02-16T00:42:15Z", "closed_at": "2017-02-16T00:41:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thanks for making this module.\r\n\r\nI'm having trouble with the following `origins` setting:\r\n```\r\nCORS(application, origins=[\"http://192.168.33.121:4021\"])\r\n```\r\n\r\nTo allow:\r\n```\r\nXMLHttpRequest cannot load http://192.168.33.10:8080/api/new. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://192.168.33.10:4201' is therefore not allowed access.\r\n```\r\n\r\nIf I simply do a broad CORS it works, so I can use that for now, but would like to narrow it down, thanks!\r\n\r\n```\r\nCORS(application)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/192", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/192/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/192/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/192", "id": 207349081, "node_id": "MDU6SXNzdWUyMDczNDkwODE=", "number": 192, "title": "Certain error codes not having all header information", "user": {"login": "suederade", "id": 5377515, "node_id": "MDQ6VXNlcjUzNzc1MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5377515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suederade", "html_url": "https://github.com/suederade", "followers_url": "https://api.github.com/users/suederade/followers", "following_url": "https://api.github.com/users/suederade/following{/other_user}", "gists_url": "https://api.github.com/users/suederade/gists{/gist_id}", "starred_url": "https://api.github.com/users/suederade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suederade/subscriptions", "organizations_url": "https://api.github.com/users/suederade/orgs", "repos_url": "https://api.github.com/users/suederade/repos", "events_url": "https://api.github.com/users/suederade/events{/privacy}", "received_events_url": "https://api.github.com/users/suederade/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 49725211, "node_id": "MDU6TGFiZWw0OTcyNTIxMQ==", "url": "https://api.github.com/repos/corydolphin/flask-cors/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-02-13T21:47:20Z", "updated_at": "2017-10-02T20:25:15Z", "closed_at": "2017-10-02T20:25:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "The error responses that are being received on the front end are missing `Access-Control-Allow-Credentials` header on 400, 401, and 403.\r\n\r\n The status codes also come back as `0` in the XHR response.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/191", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/191/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/191/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/191/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/191", "id": 195050415, "node_id": "MDU6SXNzdWUxOTUwNTA0MTU=", "number": 191, "title": "Does not work with Flask-Security login", "user": {"login": "suederade", "id": 5377515, "node_id": "MDQ6VXNlcjUzNzc1MTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5377515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/suederade", "html_url": "https://github.com/suederade", "followers_url": "https://api.github.com/users/suederade/followers", "following_url": "https://api.github.com/users/suederade/following{/other_user}", "gists_url": "https://api.github.com/users/suederade/gists{/gist_id}", "starred_url": "https://api.github.com/users/suederade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/suederade/subscriptions", "organizations_url": "https://api.github.com/users/suederade/orgs", "repos_url": "https://api.github.com/users/suederade/repos", "events_url": "https://api.github.com/users/suederade/events{/privacy}", "received_events_url": "https://api.github.com/users/suederade/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-12-12T18:33:47Z", "updated_at": "2017-01-30T05:32:00Z", "closed_at": "2017-01-30T05:32:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "As the title says, this is not working to allow the Flask-Security login POST to work.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/187", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/187/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/187/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/187", "id": 175250584, "node_id": "MDU6SXNzdWUxNzUyNTA1ODQ=", "number": 187, "title": "Why is \"allow_headers\" now a case-sensitive match?", "user": {"login": "satterly", "id": 615057, "node_id": "MDQ6VXNlcjYxNTA1Nw==", "avatar_url": "https://avatars0.githubusercontent.com/u/615057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/satterly", "html_url": "https://github.com/satterly", "followers_url": "https://api.github.com/users/satterly/followers", "following_url": "https://api.github.com/users/satterly/following{/other_user}", "gists_url": "https://api.github.com/users/satterly/gists{/gist_id}", "starred_url": "https://api.github.com/users/satterly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/satterly/subscriptions", "organizations_url": "https://api.github.com/users/satterly/orgs", "repos_url": "https://api.github.com/users/satterly/repos", "events_url": "https://api.github.com/users/satterly/events{/privacy}", "received_events_url": "https://api.github.com/users/satterly/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-06T13:43:36Z", "updated_at": "2016-09-09T09:06:58Z", "closed_at": "2016-09-08T05:37:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "With version 3.x the list of headers returned by `Access-Control-Allow-Headers` is now a case-sensitive match against the list of headers defined in the `CORS_ALLOW_HEADERS` setting.\n\nFor example, with version 2.1.3 if the setting for \"allow_headers\" was ...\n\n```\nCORS_ALLOW_HEADERS = ['Content-Type', 'Authorization']\n```\n\n... then the following works ...\n\n```\n$ http OPTIONS :5000 Origin:http://localhost:5001 Access-Control-Request-Headers:'authorization, Content-type' Access-Control-Request-Method:GET\nOPTIONS / HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nAccess-Control-Request-Headers: authorization, Content-type\nAccess-Control-Request-Method: GET\nConnection: keep-alive\nContent-Length: 0\nHost: localhost:5000\nOrigin: http://localhost:5001\nUser-Agent: HTTPie/0.9.3\n\nHTTP/1.0 200 OK\nAccess-Control-Allow-Headers: Content-type, authorization\nAccess-Control-Allow-Methods: DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT\nAccess-Control-Allow-Origin: http://localhost:5001\nAllow: HEAD, GET, POST, OPTIONS\nContent-Length: 0\nContent-Type: text/html; charset=utf-8\nDate: Tue, 06 Sep 2016 13:36:22 GMT\nServer: Werkzeug/0.11.11 Python/2.7.9\n```\n\nHowever, with version 3.x it does not return the `Access-Control-Allow-Headers` header because there was no **case-sensitive** match.\n\n```\n$ http OPTIONS :5000 Origin:http://localhost:5001 Access-Control-Request-Headers:'authorization, Content-type' Access-Control-Request-Method:GET\nOPTIONS / HTTP/1.1\nAccept: */*\nAccept-Encoding: gzip, deflate\nAccess-Control-Request-Headers: authorization, Content-type\nAccess-Control-Request-Method: GET\nConnection: keep-alive\nContent-Length: 0\nHost: localhost:5000\nOrigin: http://localhost:5001\nUser-Agent: HTTPie/0.9.3\n\nHTTP/1.0 200 OK\nAccess-Control-Allow-Methods: DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT\nAccess-Control-Allow-Origin: http://localhost:5001\nAllow: HEAD, GET, POST, OPTIONS\nContent-Length: 0\nContent-Type: text/html; charset=utf-8\nDate: Tue, 06 Sep 2016 13:39:34 GMT\nServer: Werkzeug/0.11.11 Python/2.7.9\n```\n\nThis breaks CORS on most browsers including Chrome and Firefox. However, not on IE apparently.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/183", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/183/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/183/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/183", "id": 174312370, "node_id": "MDU6SXNzdWUxNzQzMTIzNzA=", "number": 183, "title": "Origins as raw strings regression", "user": {"login": "di", "id": 294415, "node_id": "MDQ6VXNlcjI5NDQxNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/294415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/di", "html_url": "https://github.com/di", "followers_url": "https://api.github.com/users/di/followers", "following_url": "https://api.github.com/users/di/following{/other_user}", "gists_url": "https://api.github.com/users/di/gists{/gist_id}", "starred_url": "https://api.github.com/users/di/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/di/subscriptions", "organizations_url": "https://api.github.com/users/di/orgs", "repos_url": "https://api.github.com/users/di/repos", "events_url": "https://api.github.com/users/di/events{/privacy}", "received_events_url": "https://api.github.com/users/di/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-08-31T16:00:31Z", "updated_at": "2016-08-31T21:07:42Z", "closed_at": "2016-08-31T21:07:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I am seeing a regression in `3.0.0` that I don't see mentioned in the changelog or documentation.\n\nUsing the following test:\n\n``` python\nfrom flask import Flask\nfrom flask_cors import CORS\nimport pytest\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n    return 'Success'\n\nCORS(app, origins=[r\"https?://example.com\"])\n\n@pytest.mark.parametrize('origin, expected', [\n    ('http://example.com', True),\n    ('https://example.com', True),\n    ('http://failure.com', False),\n])\ndef test_regex_origin(origin, expected):\n\n    with app.test_client() as client:\n        response = client.get('/', headers={'origin': origin})\n\n    assert ('Access-Control-Allow-Origin' in response.headers) == expected\n```\n\nUsing `2.1.2`:\n\n``` console\n$ pip freeze\nclick==6.6\nFlask==0.11.1\nFlask-Cors==2.1.2\nitsdangerous==0.24\nJinja2==2.8\nMarkupSafe==0.23\npy==1.4.31\npytest==3.0.1\nsix==1.10.0\nWerkzeug==0.11.11\n\n$  py.test test.py\n============================= test session starts ==============================\nplatform darwin -- Python 2.7.12, pytest-3.0.1, py-1.4.31, pluggy-0.3.1\nrootdir: /private/tmp, inifile:\ncollected 3 items\n\ntest.py ...\n\n=========================== 3 passed in 0.10 seconds ===========================\n```\n\nUpgrading to `3.0.0`:\n\n``` console\n$  pip install flask-cors==3.0.0\nCollecting flask-cors==3.0.0\n  Using cached Flask_Cors-3.0.0-py2.py3-none-any.whl\nRequirement already satisfied (use --upgrade to upgrade): Six in ./env-old/lib/python2.7/site-packages (from flask-cors==3.0.0)\nRequirement already satisfied (use --upgrade to upgrade): Flask>=0.9 in ./env-old/lib/python2.7/site-packages (from flask-cors==3.0.0)\nRequirement already satisfied (use --upgrade to upgrade): click>=2.0 in ./env-old/lib/python2.7/site-packages (from Flask>=0.9->flask-cors==3.0.0)\nRequirement already satisfied (use --upgrade to upgrade): Jinja2>=2.4 in ./env-old/lib/python2.7/site-packages (from Flask>=0.9->flask-cors==3.0.0)\nRequirement already satisfied (use --upgrade to upgrade): Werkzeug>=0.7 in ./env-old/lib/python2.7/site-packages (from Flask>=0.9->flask-cors==3.0.0)\nRequirement already satisfied (use --upgrade to upgrade): itsdangerous>=0.21 in ./env-old/lib/python2.7/site-packages (from Flask>=0.9->flask-cors==3.0.0)\nRequirement already satisfied (use --upgrade to upgrade): MarkupSafe in ./env-old/lib/python2.7/site-packages (from Jinja2>=2.4->Flask>=0.9->flask-cors==3.0.0)\nInstalling collected packages: flask-cors\n  Found existing installation: Flask-Cors 2.1.2\n    Uninstalling Flask-Cors-2.1.2:\n      Successfully uninstalled Flask-Cors-2.1.2\nSuccessfully installed flask-cors-3.0.0\n\n$ pip freeze\nclick==6.6\nFlask==0.11.1\nFlask-Cors==3.0.0\nitsdangerous==0.24\nJinja2==2.8\nMarkupSafe==0.23\npy==1.4.31\npytest==3.0.1\nsix==1.10.0\nWerkzeug==0.11.11\n\n$  py.test test.py\n============================= test session starts ==============================\nplatform darwin -- Python 2.7.12, pytest-3.0.1, py-1.4.31, pluggy-0.3.1\nrootdir: /private/tmp, inifile:\ncollected 3 items\n\ntest.py FF.\n\n=================================== FAILURES ===================================\n__________________ test_regex_origin[http://example.com-True] __________________\n\norigin = 'http://example.com', expected = True\n\n    @pytest.mark.parametrize('origin, expected', [\n        ('http://example.com', True),\n        ('https://example.com', True),\n        ('http://failure.com', False),\n    ])\n    def test_regex_origin(origin, expected):\n\n        with app.test_client() as client:\n            response = client.get('/', headers={'origin': origin})\n\n>       assert ('Access-Control-Allow-Origin' in response.headers) == expected\nE       assert ('Access-Control-Allow-Origin' in Headers([('Content-Type', 'text/html; charset=utf-8'), ('Content-Length', '7')])) == True\nE        +  where Headers([('Content-Type', 'text/html; charset=utf-8'), ('Content-Length', '7')]) = <Response streamed [200 OK]>.headers\n\ntest.py:23: AssertionError\n_________________ test_regex_origin[https://example.com-True] __________________\n\norigin = 'https://example.com', expected = True\n\n    @pytest.mark.parametrize('origin, expected', [\n        ('http://example.com', True),\n        ('https://example.com', True),\n        ('http://failure.com', False),\n    ])\n    def test_regex_origin(origin, expected):\n\n        with app.test_client() as client:\n            response = client.get('/', headers={'origin': origin})\n\n>       assert ('Access-Control-Allow-Origin' in response.headers) == expected\nE       assert ('Access-Control-Allow-Origin' in Headers([('Content-Type', 'text/html; charset=utf-8'), ('Content-Length', '7')])) == True\nE        +  where Headers([('Content-Type', 'text/html; charset=utf-8'), ('Content-Length', '7')]) = <Response streamed [200 OK]>.headers\n\ntest.py:23: AssertionError\n====================== 2 failed, 1 passed in 0.14 seconds ======================\n```\n\nHowever, if I change the `origins` parameter to include both HTTP and HTTPS origins as regular strings:\n\n``` diff\n11c11\n< CORS(app, origins=[r\"https?://example.com\"])\n\n---\n> CORS(app, origins=[\"http://example.com\", \"https://example.com\"])\n```\n\nThe tests pass:\n\n``` console\n$ py.test test.py\n============================= test session starts ==============================\nplatform darwin -- Python 2.7.12, pytest-3.0.1, py-1.4.31, pluggy-0.3.1\nrootdir: /private/tmp, inifile:\ncollected 3 items\n\ntest.py ...\n\n=========================== 3 passed in 0.10 seconds ===========================\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/176", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/176/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/176/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/176", "id": 171937562, "node_id": "MDU6SXNzdWUxNzE5Mzc1NjI=", "number": 176, "title": "`always_send` should default to `False`", "user": {"login": "joshfriend", "id": 885137, "node_id": "MDQ6VXNlcjg4NTEzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/885137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshfriend", "html_url": "https://github.com/joshfriend", "followers_url": "https://api.github.com/users/joshfriend/followers", "following_url": "https://api.github.com/users/joshfriend/following{/other_user}", "gists_url": "https://api.github.com/users/joshfriend/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshfriend/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshfriend/subscriptions", "organizations_url": "https://api.github.com/users/joshfriend/orgs", "repos_url": "https://api.github.com/users/joshfriend/repos", "events_url": "https://api.github.com/users/joshfriend/events{/privacy}", "received_events_url": "https://api.github.com/users/joshfriend/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-18T15:59:41Z", "updated_at": "2016-10-10T23:03:13Z", "closed_at": "2016-10-10T17:17:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The [W3 spec](https://www.w3.org/TR/cors/#resource-preflight-requests) says:\n\n> If the `Origin` header is not present terminate this set of steps. The request is outside the scope of this specification.\n\nSo the `always_send` option should probably be `False`, at least if `app.debug` is `False`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/173", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/173/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/173/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/173", "id": 171750026, "node_id": "MDU6SXNzdWUxNzE3NTAwMjY=", "number": 173, "title": "2.1.3 is not on PyPI", "user": {"login": "joshfriend", "id": 885137, "node_id": "MDQ6VXNlcjg4NTEzNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/885137?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshfriend", "html_url": "https://github.com/joshfriend", "followers_url": "https://api.github.com/users/joshfriend/followers", "following_url": "https://api.github.com/users/joshfriend/following{/other_user}", "gists_url": "https://api.github.com/users/joshfriend/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshfriend/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshfriend/subscriptions", "organizations_url": "https://api.github.com/users/joshfriend/orgs", "repos_url": "https://api.github.com/users/joshfriend/repos", "events_url": "https://api.github.com/users/joshfriend/events{/privacy}", "received_events_url": "https://api.github.com/users/joshfriend/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-08-17T20:16:19Z", "updated_at": "2016-08-18T14:37:59Z", "closed_at": "2016-08-18T14:37:59Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A `2.1.3` tag exists: https://github.com/corydolphin/flask-cors/tree/2.1.3\n\nbut there is not corresponding release on PyPI\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/171", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/171/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/171/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/171", "id": 171477318, "node_id": "MDU6SXNzdWUxNzE0NzczMTg=", "number": 171, "title": "Issue setting CORS headers", "user": {"login": "BillBrower", "id": 1717845, "node_id": "MDQ6VXNlcjE3MTc4NDU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1717845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BillBrower", "html_url": "https://github.com/BillBrower", "followers_url": "https://api.github.com/users/BillBrower/followers", "following_url": "https://api.github.com/users/BillBrower/following{/other_user}", "gists_url": "https://api.github.com/users/BillBrower/gists{/gist_id}", "starred_url": "https://api.github.com/users/BillBrower/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BillBrower/subscriptions", "organizations_url": "https://api.github.com/users/BillBrower/orgs", "repos_url": "https://api.github.com/users/BillBrower/repos", "events_url": "https://api.github.com/users/BillBrower/events{/privacy}", "received_events_url": "https://api.github.com/users/BillBrower/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-08-16T17:51:30Z", "updated_at": "2016-08-16T19:31:33Z", "closed_at": "2016-08-16T18:45:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey y'all, I've setup version 2.1.2 of the Flask-Cors extension, with version 0.11.1 of Flask and version of 0.9.2 of Flask-OAuthlib, like so:\n\n```\nfrom flask import Flask\nfrom flask_cors import CORS\nfrom flask_oauthlib.provider import OAuth2Provider\n\napp = Flask(__name__)\n\noauth = OAuth2Provider(app)\noauth.init_app(app)\n\nCORS(app, supports_credentials=True)\n```\n\nAnd it supports pre-flight OPTIONS requests just fine, but for some reason, it is hitting some hangups when it attempts to setup CORS headers on actual requests:\n\n```\n127.0.0.1 - - [16/Aug/2016 13:44:45] \"OPTIONS /api/oauth/token HTTP/1.1\" 200 -\n127.0.0.1 - - [16/Aug/2016 13:44:47] \"POST /api/oauth/token HTTP/1.1\" 500 -\nTraceback (most recent call last):\n  File \"/Applications/MAMP/htdocs/truesouth/lib/python3.4/site-packages/flask/app.py\", line 2000, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/Applications/MAMP/htdocs/truesouth/lib/python3.4/site-packages/flask/app.py\", line 1991, in wsgi_app\n    response = self.make_response(self.handle_exception(e))\n  File \"/Applications/MAMP/htdocs/truesouth/lib/python3.4/site-packages/flask_cors/extension.py\", line 188, in wrapped_function\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\n  File \"/Applications/MAMP/htdocs/truesouth/lib/python3.4/site-packages/flask/app.py\", line 1567, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/Applications/MAMP/htdocs/truesouth/lib/python3.4/site-packages/flask/_compat.py\", line 33, in reraise\n    raise value\n  File \"/Applications/MAMP/htdocs/truesouth/lib/python3.4/site-packages/flask/app.py\", line 1988, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/Applications/MAMP/htdocs/truesouth/lib/python3.4/site-packages/flask/app.py\", line 1643, in full_dispatch_request\n    response = self.process_response(response)\n  File \"/Applications/MAMP/htdocs/truesouth/lib/python3.4/site-packages/flask/app.py\", line 1862, in process_response\n    response = handler(response)\n  File \"/Applications/MAMP/htdocs/truesouth/lib/python3.4/site-packages/flask_cors/extension.py\", line 175, in cors_after_request\n    set_cors_headers(resp, res_options)\n  File \"/Applications/MAMP/htdocs/truesouth/lib/python3.4/site-packages/flask_cors/core.py\", line 217, in set_cors_headers\n    resp.headers.add(k, v)\nAttributeError: 'dict' object has no attribute 'add'\n```\n\nHere is the actual resp.headers object referenced in the last line of the stack trace:\n\n```\n{'Cache-Control': 'no-store', 'Content-Type': 'application/json', 'Pragma': 'no-cache'}\n```\n\nAny idea what could be causing this? It seems like maybe Flask-OAuthlib is using a `dict` for the headers object and Flask-Cors is expecting a `set`.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/170", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/170/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/170/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/170", "id": 167600826, "node_id": "MDU6SXNzdWUxNjc2MDA4MjY=", "number": 170, "title": "preflighted OPTIONS request return non-200 ", "user": {"login": "georgexsh", "id": 32751, "node_id": "MDQ6VXNlcjMyNzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/32751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgexsh", "html_url": "https://github.com/georgexsh", "followers_url": "https://api.github.com/users/georgexsh/followers", "following_url": "https://api.github.com/users/georgexsh/following{/other_user}", "gists_url": "https://api.github.com/users/georgexsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgexsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgexsh/subscriptions", "organizations_url": "https://api.github.com/users/georgexsh/orgs", "repos_url": "https://api.github.com/users/georgexsh/repos", "events_url": "https://api.github.com/users/georgexsh/events{/privacy}", "received_events_url": "https://api.github.com/users/georgexsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-26T12:59:00Z", "updated_at": "2016-08-19T03:30:57Z", "closed_at": "2016-08-19T03:28:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "If my app has a `before_request` hook returns `401` to client:\n\n```\n@app.before_request\ndef require_login():\n    flask.abort(401)\n```\n\nthan the preflighted `OPTIONS` request always yield `401` too, as extra auth headers rely on the response of preflighted request ...\nShouldn't it alway return `200`?\n\nusing flask-cors==2.1.2\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/169", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/169/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/169/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/169", "id": 167572016, "node_id": "MDU6SXNzdWUxNjc1NzIwMTY=", "number": 169, "title": "CORS with blueprint ", "user": {"login": "georgexsh", "id": 32751, "node_id": "MDQ6VXNlcjMyNzUx", "avatar_url": "https://avatars3.githubusercontent.com/u/32751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/georgexsh", "html_url": "https://github.com/georgexsh", "followers_url": "https://api.github.com/users/georgexsh/followers", "following_url": "https://api.github.com/users/georgexsh/following{/other_user}", "gists_url": "https://api.github.com/users/georgexsh/gists{/gist_id}", "starred_url": "https://api.github.com/users/georgexsh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/georgexsh/subscriptions", "organizations_url": "https://api.github.com/users/georgexsh/orgs", "repos_url": "https://api.github.com/users/georgexsh/repos", "events_url": "https://api.github.com/users/georgexsh/events{/privacy}", "received_events_url": "https://api.github.com/users/georgexsh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-07-26T10:16:03Z", "updated_at": "2016-08-19T03:25:38Z", "closed_at": "2016-08-16T17:57:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "with code:\n\n```\nbp = flask.Blueprint('api', __name__, url_prefix='/api')\nbp = flask_cors.CORS(bp, max_age=30*86400)\n\n@bp.before_request\ndef load_user():\n    ...\n```\n\nwill yield:\n\n```\nE   AttributeError: 'CORS' object has no attribute 'before_request'\n```\n\nmy usage is wrong or a bug?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/168", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/168/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/168/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/168", "id": 167210256, "node_id": "MDU6SXNzdWUxNjcyMTAyNTY=", "number": 168, "title": "Can't intercept Flask error handlers", "user": {"login": "mr-rodgers", "id": 554780, "node_id": "MDQ6VXNlcjU1NDc4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/554780?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mr-rodgers", "html_url": "https://github.com/mr-rodgers", "followers_url": "https://api.github.com/users/mr-rodgers/followers", "following_url": "https://api.github.com/users/mr-rodgers/following{/other_user}", "gists_url": "https://api.github.com/users/mr-rodgers/gists{/gist_id}", "starred_url": "https://api.github.com/users/mr-rodgers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mr-rodgers/subscriptions", "organizations_url": "https://api.github.com/users/mr-rodgers/orgs", "repos_url": "https://api.github.com/users/mr-rodgers/repos", "events_url": "https://api.github.com/users/mr-rodgers/events{/privacy}", "received_events_url": "https://api.github.com/users/mr-rodgers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-07-24T00:22:12Z", "updated_at": "2016-07-24T00:53:12Z", "closed_at": "2016-07-24T00:53:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "This doesn't currently add headers to responses created from a Flask error handler, making the error response body unreadable in some browsers.\n\nAn example of such an error handler:\n\n``` python\n@app.errorhandler(ApplicationError)\ndef handle_error(err):\n    return err.as_response()\n```\n\nThe resources will still send CORS headers if an error response is returned directly from the route, but not raised and handled through an error handler as shown above.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/159", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/159/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/159/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/159/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/159", "id": 158998976, "node_id": "MDU6SXNzdWUxNTg5OTg5NzY=", "number": 159, "title": "Version 3.0.0 Release?", "user": {"login": "drcoll", "id": 12188644, "node_id": "MDQ6VXNlcjEyMTg4NjQ0", "avatar_url": "https://avatars1.githubusercontent.com/u/12188644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drcoll", "html_url": "https://github.com/drcoll", "followers_url": "https://api.github.com/users/drcoll/followers", "following_url": "https://api.github.com/users/drcoll/following{/other_user}", "gists_url": "https://api.github.com/users/drcoll/gists{/gist_id}", "starred_url": "https://api.github.com/users/drcoll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drcoll/subscriptions", "organizations_url": "https://api.github.com/users/drcoll/orgs", "repos_url": "https://api.github.com/users/drcoll/repos", "events_url": "https://api.github.com/users/drcoll/events{/privacy}", "received_events_url": "https://api.github.com/users/drcoll/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-06-07T19:00:34Z", "updated_at": "2016-08-20T18:01:06Z", "closed_at": "2016-08-20T18:01:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just wanted to check in and see if there was a time frame for when version `3.0.0` will be released?\n\nI noticed some changes to the code within the past month, specifically `send_always`, that appears to resolve an issue I am experiencing.\n\nThanks!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/155", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/155/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/155/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/155", "id": 155465816, "node_id": "MDU6SXNzdWUxNTU0NjU4MTY=", "number": 155, "title": "Docs: Explain where `cross_origin` should be coming from", "user": {"login": "marians", "id": 273727, "node_id": "MDQ6VXNlcjI3MzcyNw==", "avatar_url": "https://avatars1.githubusercontent.com/u/273727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marians", "html_url": "https://github.com/marians", "followers_url": "https://api.github.com/users/marians/followers", "following_url": "https://api.github.com/users/marians/following{/other_user}", "gists_url": "https://api.github.com/users/marians/gists{/gist_id}", "starred_url": "https://api.github.com/users/marians/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marians/subscriptions", "organizations_url": "https://api.github.com/users/marians/orgs", "repos_url": "https://api.github.com/users/marians/repos", "events_url": "https://api.github.com/users/marians/events{/privacy}", "received_events_url": "https://api.github.com/users/marians/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-18T10:18:57Z", "updated_at": "2016-06-17T03:49:01Z", "closed_at": "2016-06-17T03:48:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the code examples in README (and perhaps in docs) the decodator `@cross_origin()` is used, but not imported. This leads to the error\n\n```\nNameError: name 'cross_origin' is not defined\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/154", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/154/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/154/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/154", "id": 155402366, "node_id": "MDU6SXNzdWUxNTU0MDIzNjY=", "number": 154, "title": "\u201cNo 'Access-Control-Allow-Origin' header\u201d error in POST with OPTIONS Pre-flight", "user": {"login": "andrewheekin", "id": 4684591, "node_id": "MDQ6VXNlcjQ2ODQ1OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4684591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewheekin", "html_url": "https://github.com/andrewheekin", "followers_url": "https://api.github.com/users/andrewheekin/followers", "following_url": "https://api.github.com/users/andrewheekin/following{/other_user}", "gists_url": "https://api.github.com/users/andrewheekin/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewheekin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewheekin/subscriptions", "organizations_url": "https://api.github.com/users/andrewheekin/orgs", "repos_url": "https://api.github.com/users/andrewheekin/repos", "events_url": "https://api.github.com/users/andrewheekin/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewheekin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-05-18T02:12:40Z", "updated_at": "2016-05-20T01:49:00Z", "closed_at": "2016-05-19T19:59:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting a \u201cNo 'Access-Control-Allow-Origin' header\u201d error on my POST request following a 200 ok OPTIONS request. I have the line `cors = CORS(app)` in my flask (0.10.1) app.\n\nOPTIONS response headers\n\n```\nHTTP/1.0 200 OK\nContent-Type: text/html; charset=utf-8\nAllow: POST, OPTIONS\nAccess-Control-Allow-Origin: http://localhost:7000\nAccess-Control-Allow-Headers: accept, content-type\nAccess-Control-Allow-Methods: DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT\nContent-Length: 0\nServer: Werkzeug/0.11.3 Python/2.7.11\nDate: Wed, 18 May 2016 01:08:25 GMT\n\n```\n\nOPTIONS request headers\n\n```\nOPTIONS /testPost HTTP/1.1\nHost: localhost:5000\nConnection: keep-alive\nCache-Control: max-age=0\nAccess-Control-Request-Method: POST\nOrigin: http://localhost:7000\nAccess-Control-Request-Headers: accept, content-type\nAccept: */*\nReferer: http://localhost:7000/\nAccept-Encoding: gzip, deflate, sdch\nAccept-Language: en-US,en;q=0.8\n```\n\nPOST response headers\n\n```\nHTTP/1.0 500 INTERNAL SERVER ERROR\nContent-Type: text/html; charset=utf-8\nX-XSS-Protection: 0\nConnection: close\nServer: Werkzeug/0.11.3 Python/2.7.11\nDate: Wed, 18 May 2016 01:08:25 GMT\n```\n\nPOST request headers\n\n```\nPOST /testPost HTTP/1.1\nHost: localhost:5000\nConnection: keep-alive\nContent-Length: 22\nAccept: application/json, text/plain, */*\nOrigin: http://localhost:7000\nContent-Type: application/json;charset=UTF-8\nReferer: http://localhost:7000/\nAccept-Encoding: gzip, deflate\nAccept-Language: en-US,en;q=0.8\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/153", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/153/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/153/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/153", "id": 152994485, "node_id": "MDU6SXNzdWUxNTI5OTQ0ODU=", "number": 153, "title": "How can we give the allowed methods name, max age etc ?", "user": {"login": "dhirajforyou", "id": 5603117, "node_id": "MDQ6VXNlcjU2MDMxMTc=", "avatar_url": "https://avatars0.githubusercontent.com/u/5603117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhirajforyou", "html_url": "https://github.com/dhirajforyou", "followers_url": "https://api.github.com/users/dhirajforyou/followers", "following_url": "https://api.github.com/users/dhirajforyou/following{/other_user}", "gists_url": "https://api.github.com/users/dhirajforyou/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhirajforyou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhirajforyou/subscriptions", "organizations_url": "https://api.github.com/users/dhirajforyou/orgs", "repos_url": "https://api.github.com/users/dhirajforyou/repos", "events_url": "https://api.github.com/users/dhirajforyou/events{/privacy}", "received_events_url": "https://api.github.com/users/dhirajforyou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-05-04T12:01:15Z", "updated_at": "2016-05-04T17:17:15Z", "closed_at": "2016-05-04T12:42:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "CORS(app, resources={r\"/_\": {\"origins\": \"_\"}}, allow_headers='Content-Type', send_wildcard=True, max_age=86400, methods=['GET', 'HEAD', 'POST', 'OPTIONS', 'PUT', 'PATCH', 'DELETE'])\n\nBut at the browser, I am able to see only below fields -\nAccess-Control-Allow-Origin:*\nConnection:keep-alive\nContent-Length:15\nContent-Type:application/json\nDate:Wed, 04 May 2016 11:57:27 GMT\n\nI am expecting  as below- \nAccess-Control-Allow-Headers: Content-Type\nAccess-Control-Allow-Methods:GET,POST,OPTIONS\nAccess-Control-Allow-Origin:*\nAccess-Control-Max-Age:86400\nConnection:keep-alive\nContent-Type:application/json\n\nAm I missing something in the CORS parameters ?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/148", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/148/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/148/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/148/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/148", "id": 147750222, "node_id": "MDU6SXNzdWUxNDc3NTAyMjI=", "number": 148, "title": "Using regex still requires two origins for Vary", "user": {"login": "ctolsen", "id": 46642, "node_id": "MDQ6VXNlcjQ2NjQy", "avatar_url": "https://avatars1.githubusercontent.com/u/46642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctolsen", "html_url": "https://github.com/ctolsen", "followers_url": "https://api.github.com/users/ctolsen/followers", "following_url": "https://api.github.com/users/ctolsen/following{/other_user}", "gists_url": "https://api.github.com/users/ctolsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctolsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctolsen/subscriptions", "organizations_url": "https://api.github.com/users/ctolsen/orgs", "repos_url": "https://api.github.com/users/ctolsen/repos", "events_url": "https://api.github.com/users/ctolsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ctolsen/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-04-12T13:24:45Z", "updated_at": "2016-06-08T17:58:54Z", "closed_at": "2016-06-08T17:58:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a configuration like `[r'https://.*\\.domain']`, the `Vary: Origin` header will never be emitted.\n\nI think it makes sense for a regex to be treated as a list \u2013 or, indeed, just emit the header when using a list even if it's just one item long.\n\n(also, because of certain browser bugs I'd love to have an option to always use the header for any request at any time, but that's separate.)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/147", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/147/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/147/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/147/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/147", "id": 145613292, "node_id": "MDU6SXNzdWUxNDU2MTMyOTI=", "number": 147, "title": "Long time responding", "user": {"login": "serkandaglioglu", "id": 1669906, "node_id": "MDQ6VXNlcjE2Njk5MDY=", "avatar_url": "https://avatars2.githubusercontent.com/u/1669906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/serkandaglioglu", "html_url": "https://github.com/serkandaglioglu", "followers_url": "https://api.github.com/users/serkandaglioglu/followers", "following_url": "https://api.github.com/users/serkandaglioglu/following{/other_user}", "gists_url": "https://api.github.com/users/serkandaglioglu/gists{/gist_id}", "starred_url": "https://api.github.com/users/serkandaglioglu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/serkandaglioglu/subscriptions", "organizations_url": "https://api.github.com/users/serkandaglioglu/orgs", "repos_url": "https://api.github.com/users/serkandaglioglu/repos", "events_url": "https://api.github.com/users/serkandaglioglu/events{/privacy}", "received_events_url": "https://api.github.com/users/serkandaglioglu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 28, "created_at": "2016-04-04T08:03:59Z", "updated_at": "2018-04-02T22:06:34Z", "closed_at": "2017-03-05T20:05:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "On ajax cross domain request flask respond after a long time . For example 10 seconds.\nIf I call url from browser it respond fastly, but with cors and on ajax request flask wait a long time.\nI'm working on localhost.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/146", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/146/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/146/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/146", "id": 141398104, "node_id": "MDU6SXNzdWUxNDEzOTgxMDQ=", "number": 146, "title": "headers not being set or set to nonsense", "user": {"login": "crookedstorm", "id": 10637669, "node_id": "MDQ6VXNlcjEwNjM3NjY5", "avatar_url": "https://avatars2.githubusercontent.com/u/10637669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crookedstorm", "html_url": "https://github.com/crookedstorm", "followers_url": "https://api.github.com/users/crookedstorm/followers", "following_url": "https://api.github.com/users/crookedstorm/following{/other_user}", "gists_url": "https://api.github.com/users/crookedstorm/gists{/gist_id}", "starred_url": "https://api.github.com/users/crookedstorm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crookedstorm/subscriptions", "organizations_url": "https://api.github.com/users/crookedstorm/orgs", "repos_url": "https://api.github.com/users/crookedstorm/repos", "events_url": "https://api.github.com/users/crookedstorm/events{/privacy}", "received_events_url": "https://api.github.com/users/crookedstorm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-03-16T20:48:05Z", "updated_at": "2016-04-12T20:24:02Z", "closed_at": "2016-04-12T20:24:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am working with blueprints and importing my views after settings CORS(blueprint).\nI have tried using just defaults and settings options.  Both are just like this, though, I often don't even get the Access-Control-Allow-Origin header if I set any options at all.\nNo matter how I slice it, I seem to get a response of either this from httpie:\nHTTP/1.0 200 OK\nAllow: POST, HEAD, OPTIONS, GET\nContent-Length: 0\nContent-Type: text/html; charset=utf-8\nDate: Wed, 16 Mar 2016 20:42:15 GMT\nServer: Werkzeug/0.11.2 Python/2.7.10\n\nWhich doesn't have any of the headers.\nor from Postman:\nAccess-Control-Allow-Origin \u2192file://\nAllow \u2192POST, HEAD, OPTIONS, GET\nContent-Length \u21920\nContent-Type \u2192text/html; charset=utf-8\nDate \u2192Wed, 16 Mar 2016 20:42:24 GMT\nServer \u2192Werkzeug/0.11.2 Python/2.7.10\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/145", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/145/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/145/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/145", "id": 137592223, "node_id": "MDU6SXNzdWUxMzc1OTIyMjM=", "number": 145, "title": "Access-Control-Allow-Headers not working", "user": {"login": "andresr19", "id": 8209827, "node_id": "MDQ6VXNlcjgyMDk4Mjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/8209827?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andresr19", "html_url": "https://github.com/andresr19", "followers_url": "https://api.github.com/users/andresr19/followers", "following_url": "https://api.github.com/users/andresr19/following{/other_user}", "gists_url": "https://api.github.com/users/andresr19/gists{/gist_id}", "starred_url": "https://api.github.com/users/andresr19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andresr19/subscriptions", "organizations_url": "https://api.github.com/users/andresr19/orgs", "repos_url": "https://api.github.com/users/andresr19/repos", "events_url": "https://api.github.com/users/andresr19/events{/privacy}", "received_events_url": "https://api.github.com/users/andresr19/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-01T14:44:53Z", "updated_at": "2016-03-08T22:43:25Z", "closed_at": "2016-03-08T22:43:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello there,\n\nIm glad i found this lib but im facing an issue, it seems like Access-Control-Allow-Headers are not being set or something.\n\nthis is my setup:\n\n`CORS(app, resources=r'/*', allow_headers='Origin, Content-Type, Accept, Authorization, X-Request-With', supports_credentials=True)`\n\nBut chrome's console keeps telling me \n\n> Request header field Authorization is not allowed by Access-Control-Allow-Headers in preflight response.\n\nAm i missing something?\n\nIm using the 2.1.2 version btw.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/144", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/144/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/144/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/144", "id": 127401783, "node_id": "MDU6SXNzdWUxMjc0MDE3ODM=", "number": 144, "title": "How to allow credentialed requests", "user": {"login": "mmautner", "id": 1419652, "node_id": "MDQ6VXNlcjE0MTk2NTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1419652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmautner", "html_url": "https://github.com/mmautner", "followers_url": "https://api.github.com/users/mmautner/followers", "following_url": "https://api.github.com/users/mmautner/following{/other_user}", "gists_url": "https://api.github.com/users/mmautner/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmautner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmautner/subscriptions", "organizations_url": "https://api.github.com/users/mmautner/orgs", "repos_url": "https://api.github.com/users/mmautner/repos", "events_url": "https://api.github.com/users/mmautner/events{/privacy}", "received_events_url": "https://api.github.com/users/mmautner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-01-19T09:25:29Z", "updated_at": "2016-01-19T17:59:50Z", "closed_at": "2016-01-19T09:28:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs mention in the first paragraph:\n\n> please see the documentation for how to enable credential'ed requests\n\nHowever this is never explained\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/143", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/143/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/143/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/143", "id": 123956362, "node_id": "MDU6SXNzdWUxMjM5NTYzNjI=", "number": 143, "title": "Setting comma separated `Access-Control-Allow-Origin` values is not supported by FireFox.", "user": {"login": "Taiiwo", "id": 2117603, "node_id": "MDQ6VXNlcjIxMTc2MDM=", "avatar_url": "https://avatars0.githubusercontent.com/u/2117603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Taiiwo", "html_url": "https://github.com/Taiiwo", "followers_url": "https://api.github.com/users/Taiiwo/followers", "following_url": "https://api.github.com/users/Taiiwo/following{/other_user}", "gists_url": "https://api.github.com/users/Taiiwo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Taiiwo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Taiiwo/subscriptions", "organizations_url": "https://api.github.com/users/Taiiwo/orgs", "repos_url": "https://api.github.com/users/Taiiwo/repos", "events_url": "https://api.github.com/users/Taiiwo/events{/privacy}", "received_events_url": "https://api.github.com/users/Taiiwo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-12-27T01:55:27Z", "updated_at": "2016-02-18T20:56:33Z", "closed_at": "2016-02-18T20:56:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using version 2.1.2, initialising using:\n\n``` python\n....\nfrom flask.ext.cors import CORS\napp = Flask(__name__)\nCORS(app)\n....\n```\n\nWhen making an AJAX request from a local machine on a non-standard port to an external server serving the above code running Flask 0.10.1 on Apache with mod_wsgi, the server responds with `Access-Control-Allow-Origin: \"http://localhost:8080, *\"`. Such comma separated lists are not supported by FireFox, and gives the following error in the JavaScript debugging console: `Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at http://hostna.me/app/route. (Reason: CORS header 'Access-Control-Allow-Origin' does not match 'http://localhost:8080, *').`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/142", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/142/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/142/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/142", "id": 116548049, "node_id": "MDU6SXNzdWUxMTY1NDgwNDk=", "number": 142, "title": "Support Python 3.5", "user": {"login": "hfar", "id": 11161787, "node_id": "MDQ6VXNlcjExMTYxNzg3", "avatar_url": "https://avatars2.githubusercontent.com/u/11161787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hfar", "html_url": "https://github.com/hfar", "followers_url": "https://api.github.com/users/hfar/followers", "following_url": "https://api.github.com/users/hfar/following{/other_user}", "gists_url": "https://api.github.com/users/hfar/gists{/gist_id}", "starred_url": "https://api.github.com/users/hfar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hfar/subscriptions", "organizations_url": "https://api.github.com/users/hfar/orgs", "repos_url": "https://api.github.com/users/hfar/repos", "events_url": "https://api.github.com/users/hfar/events{/privacy}", "received_events_url": "https://api.github.com/users/hfar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-12T13:24:32Z", "updated_at": "2015-11-15T15:13:17Z", "closed_at": "2015-11-15T08:03:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can we use this in Python 3.5?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/138", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/138/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/138/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/138", "id": 115719087, "node_id": "MDU6SXNzdWUxMTU3MTkwODc=", "number": 138, "title": "setup.py error: requirements.txt not exists", "user": {"login": "guyskk", "id": 6367792, "node_id": "MDQ6VXNlcjYzNjc3OTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6367792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guyskk", "html_url": "https://github.com/guyskk", "followers_url": "https://api.github.com/users/guyskk/followers", "following_url": "https://api.github.com/users/guyskk/following{/other_user}", "gists_url": "https://api.github.com/users/guyskk/gists{/gist_id}", "starred_url": "https://api.github.com/users/guyskk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guyskk/subscriptions", "organizations_url": "https://api.github.com/users/guyskk/orgs", "repos_url": "https://api.github.com/users/guyskk/repos", "events_url": "https://api.github.com/users/guyskk/events{/privacy}", "received_events_url": "https://api.github.com/users/guyskk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-11-08T09:21:14Z", "updated_at": "2015-11-09T01:16:11Z", "closed_at": "2015-11-09T01:16:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n File \"/tmp/pip_build_root/flask-cors/setup.py\", line 18, in <module>\n\n    with open (join(dirname(__file__), 'requirements.txt'), 'r') as f:\n\nIOError: [Errno 2] No such file or directory: '/tmp/pip_build_root/flask-cors/requirements.txt'\n```\n\nIt seems requirements.txt not exists on dist, I try to download it from PYPI, and requirements.txt not exists\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/134", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/134/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/134/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/134", "id": 114581950, "node_id": "MDU6SXNzdWUxMTQ1ODE5NTA=", "number": 134, "title": "Disable logging", "user": {"login": "romaincointepas", "id": 797899, "node_id": "MDQ6VXNlcjc5Nzg5OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/797899?v=4", "gravatar_id": "", "url": "https://api.github.com/users/romaincointepas", "html_url": "https://github.com/romaincointepas", "followers_url": "https://api.github.com/users/romaincointepas/followers", "following_url": "https://api.github.com/users/romaincointepas/following{/other_user}", "gists_url": "https://api.github.com/users/romaincointepas/gists{/gist_id}", "starred_url": "https://api.github.com/users/romaincointepas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/romaincointepas/subscriptions", "organizations_url": "https://api.github.com/users/romaincointepas/orgs", "repos_url": "https://api.github.com/users/romaincointepas/repos", "events_url": "https://api.github.com/users/romaincointepas/events{/privacy}", "received_events_url": "https://api.github.com/users/romaincointepas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-11-02T12:08:38Z", "updated_at": "2015-11-08T20:53:13Z", "closed_at": "2015-11-08T20:53:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to disable flask-cors logging? Logging is good for testing but it becomes noise when the app is up and running.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/133", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/133/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/133/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/133", "id": 111844169, "node_id": "MDU6SXNzdWUxMTE4NDQxNjk=", "number": 133, "title": "Need 'Access-Control-Allow-Credentials' header", "user": {"login": "guyskk", "id": 6367792, "node_id": "MDQ6VXNlcjYzNjc3OTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6367792?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guyskk", "html_url": "https://github.com/guyskk", "followers_url": "https://api.github.com/users/guyskk/followers", "following_url": "https://api.github.com/users/guyskk/following{/other_user}", "gists_url": "https://api.github.com/users/guyskk/gists{/gist_id}", "starred_url": "https://api.github.com/users/guyskk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guyskk/subscriptions", "organizations_url": "https://api.github.com/users/guyskk/orgs", "repos_url": "https://api.github.com/users/guyskk/repos", "events_url": "https://api.github.com/users/guyskk/events{/privacy}", "received_events_url": "https://api.github.com/users/guyskk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-16T14:32:29Z", "updated_at": "2015-11-08T04:30:16Z", "closed_at": "2015-11-08T04:30:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is my case:\n\nClient post username and password to server, after authentication, \nServer send header \"Authorization\"  with auth token to client, then client save the token.\nClient and server is not in the same domain, so I need CORS.\n\nserver code:\n\n```\n    from flask.ext.cors import CORS\n    CORS(app)\n```\n\nBut it cause 'Refused to get unsafe header \"Authorization\"'\n\n```\n    // xhr is response object\n    xhr = XMLHttpRequest {}, key = \"Authorization\"\n    xhr.getResponseHeader(key); // error\n```\n\nThen I set:\n\n```\n    req.withCredentials=true\n```\n\nThen error:\n\n```\n    XMLHttpRequest cannot load http://www.xxxx.cn/api/user/login. Credentials flag is 'true',        but the 'Access-Control-Allow-Credentials' header is ''. It must be 'true' to allow credentials. Origin   'http://127.0.0.1:5000' is therefore not allowed access.\n```\n\nI find a clue on http://stackoverflow.com/questions/24687313/what-exactly-does-the-access-control-allow-credentials-header-do\n\nSo, it need 'Access-Control-Allow-Credentials' header\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/132", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/132/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/132/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/132", "id": 107669596, "node_id": "MDU6SXNzdWUxMDc2Njk1OTY=", "number": 132, "title": "problem when use CORS(app)", "user": {"login": "hqtc123", "id": 2255751, "node_id": "MDQ6VXNlcjIyNTU3NTE=", "avatar_url": "https://avatars1.githubusercontent.com/u/2255751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hqtc123", "html_url": "https://github.com/hqtc123", "followers_url": "https://api.github.com/users/hqtc123/followers", "following_url": "https://api.github.com/users/hqtc123/following{/other_user}", "gists_url": "https://api.github.com/users/hqtc123/gists{/gist_id}", "starred_url": "https://api.github.com/users/hqtc123/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hqtc123/subscriptions", "organizations_url": "https://api.github.com/users/hqtc123/orgs", "repos_url": "https://api.github.com/users/hqtc123/repos", "events_url": "https://api.github.com/users/hqtc123/events{/privacy}", "received_events_url": "https://api.github.com/users/hqtc123/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-09-22T08:47:26Z", "updated_at": "2015-10-09T08:51:55Z", "closed_at": "2015-10-02T00:55:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am sorry but when I use CORS(app) I found error \"Credentials flag is 'true', but the 'Access-Control-Allow-Credentials' header is ''. It must be 'true' to allow credentials.\";\n\npython version is 3.4.3 and flask 0.10.1;\n\nThanks for help.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/128", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/128/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/128/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/128", "id": 96467251, "node_id": "MDU6SXNzdWU5NjQ2NzI1MQ==", "number": 128, "title": "Passing a Flask blueprint to CORS constructor fails", "user": {"login": "Bob131", "id": 4337852, "node_id": "MDQ6VXNlcjQzMzc4NTI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4337852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bob131", "html_url": "https://github.com/Bob131", "followers_url": "https://api.github.com/users/Bob131/followers", "following_url": "https://api.github.com/users/Bob131/following{/other_user}", "gists_url": "https://api.github.com/users/Bob131/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bob131/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bob131/subscriptions", "organizations_url": "https://api.github.com/users/Bob131/orgs", "repos_url": "https://api.github.com/users/Bob131/repos", "events_url": "https://api.github.com/users/Bob131/events{/privacy}", "received_events_url": "https://api.github.com/users/Bob131/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-07-22T03:31:32Z", "updated_at": "2016-03-18T16:59:27Z", "closed_at": "2015-08-05T00:59:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Attempting to pass a blueprint object to the flask.ext.cors.CORS results in the following traceback\n\n```\n  File \"/usr/lib/python3.4/site-packages/flask_cors/extension.py\", line 59, in __init__\n    self.init_app(app, **kwargs)\n  File \"/usr/lib/python3.4/site-packages/flask_cors/extension.py\", line 64, in init_app\n    options = get_cors_options(app, self._options, kwargs)\n  File \"/usr/lib/python3.4/site-packages/flask_cors/core.py\", line 263, in get_cors_options\n    options.update(get_app_kwarg_dict(appInstance))\n  File \"/usr/lib/python3.4/site-packages/flask_cors/core.py\", line 278, in get_app_kwarg_dict\n    for k in CONFIG_OPTIONS\n  File \"/usr/lib/python3.4/site-packages/flask_cors/core.py\", line 279, in <genexpr>\n    if app.config.get(k) is not None\nAttributeError: 'Blueprint' object has no attribute 'config'\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/126", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/126/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/126/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/126/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/126", "id": 79445711, "node_id": "MDU6SXNzdWU3OTQ0NTcxMQ==", "number": 126, "title": "Using flask-cors with flask-security/flask-login", "user": {"login": "bnmnetp", "id": 51115, "node_id": "MDQ6VXNlcjUxMTE1", "avatar_url": "https://avatars2.githubusercontent.com/u/51115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bnmnetp", "html_url": "https://github.com/bnmnetp", "followers_url": "https://api.github.com/users/bnmnetp/followers", "following_url": "https://api.github.com/users/bnmnetp/following{/other_user}", "gists_url": "https://api.github.com/users/bnmnetp/gists{/gist_id}", "starred_url": "https://api.github.com/users/bnmnetp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bnmnetp/subscriptions", "organizations_url": "https://api.github.com/users/bnmnetp/orgs", "repos_url": "https://api.github.com/users/bnmnetp/repos", "events_url": "https://api.github.com/users/bnmnetp/events{/privacy}", "received_events_url": "https://api.github.com/users/bnmnetp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-05-22T12:56:32Z", "updated_at": "2015-08-05T00:57:48Z", "closed_at": "2015-08-05T00:57:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm trying to get this work so that when I login I issue an `'Access-Control-Allow-Credentials', 'true'` header.  So that I can have authenticated cross-domain ajax calls.  I've got a simple prototype working, but now I'm trying to get this all to work in a larger flask application using the flask-security extension.\n\nHere's what I've tried for setting up CORS.  I've also tried using `@cross_origin(supports_credentials=True)` on a view that also requires a login.\n\n```\ncors = CORS(app, resources={r\"/api/*\": {\"origins\": \"*\"}, r\"/login\": {\"supports_credentials\": True}})\n```\n\nI don't get any of the CORS headers.   Here's what I see in the debug output.\n\n```\nDEBUG:flask.ext.cors:Enabling <function home at 0x1039e2b70> for cross_origin using options:{'supports_credentials': True}\nDEBUG:runestone.cors:Request to '/login' matches CORS resource '/login'. Using options: {'origins': ['.*'], 'supports_credentials': True, 'methods': 'DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT', 'intercept_exceptions': True, 'automatic_options': True, 'send_wildcard': False, 'vary_header': True, 'allow_headers': ['.*'], 'resources': {'/api/*': {'origins': '*'}, '/login': {'supports_credentials': True}}}\nDEBUG:runestone.cors:'Origin' header was not set, which means CORS was not requested, skipping\nDEBUG:runestone.cors:Settings CORS headers: MultiDict([])\nINFO:werkzeug:127.0.0.1 - - [22/May/2015 14:44:59] \"GET /login HTTP/1.1\" 302 -\nDEBUG:runestone.cors:No CORS rule matches\n```\n\nI don't know if it matters but I have the auth stuff in a blueprint of its own.\n\nAny ideas on where I might be going wrong?  The debug output is confusing to me because it seems to recognize that I want CORS on the login, request, but then later says that CORS was not requested.\n\nThanks,\n\nBrad\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/122", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/122/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/122/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/122", "id": 73335760, "node_id": "MDU6SXNzdWU3MzMzNTc2MA==", "number": 122, "title": "Drops multiple headers, like Set-Cookie", "user": {"login": "adomasven", "id": 5899315, "node_id": "MDQ6VXNlcjU4OTkzMTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/5899315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adomasven", "html_url": "https://github.com/adomasven", "followers_url": "https://api.github.com/users/adomasven/followers", "following_url": "https://api.github.com/users/adomasven/following{/other_user}", "gists_url": "https://api.github.com/users/adomasven/gists{/gist_id}", "starred_url": "https://api.github.com/users/adomasven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adomasven/subscriptions", "organizations_url": "https://api.github.com/users/adomasven/orgs", "repos_url": "https://api.github.com/users/adomasven/repos", "events_url": "https://api.github.com/users/adomasven/events{/privacy}", "received_events_url": "https://api.github.com/users/adomasven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-05T14:48:36Z", "updated_at": "2015-05-08T12:54:10Z", "closed_at": "2015-05-08T12:37:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. I'm using this plugin and have discovered a problem. It seems that whatever it does, to modify the headers, it truncates headers with the same name. \n\nI am using flask's [set cookie](http://flask.pocoo.org/docs/0.10/api/#flask.Response.set_cookie) function, which creates multiple entries for _Set-Cookie_ header. However, if I apply the `@cross_origin` operator on a route method, it drops all but one of _Set-Cookie_ headers.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/120", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/120/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/120/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/120", "id": 66447943, "node_id": "MDU6SXNzdWU2NjQ0Nzk0Mw==", "number": 120, "title": "Custom exception handlers", "user": {"login": "d1manson", "id": 4244876, "node_id": "MDQ6VXNlcjQyNDQ4NzY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d1manson", "html_url": "https://github.com/d1manson", "followers_url": "https://api.github.com/users/d1manson/followers", "following_url": "https://api.github.com/users/d1manson/following{/other_user}", "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}", "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions", "organizations_url": "https://api.github.com/users/d1manson/orgs", "repos_url": "https://api.github.com/users/d1manson/repos", "events_url": "https://api.github.com/users/d1manson/events{/privacy}", "received_events_url": "https://api.github.com/users/d1manson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-04-05T15:08:11Z", "updated_at": "2016-04-19T09:36:53Z", "closed_at": "2015-04-19T17:38:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose I have:\n\n``` python\n@app.route('/doit')\n@cross_origin(origins='<somewhere>')\ndef doit():\n   raise CustomException(\"owch!\")\n\n@app.errorhandler(CustomException)\ndef handle_custom(err):\n   return str(err)\n```\n\nSurely the expected output should be the error page with cors headers?  But this is not what I find: I get an empty response with the 4xx error code and nothing else (and no stacktrace on the server).\n\nIf this is intended behavior it should be made much clearer somewhere in the docs as it confused me for a _long_ time (though admittedly I am completely new to flask cors and http error handling).  Ideally though, the expected behavior should be implemented, i.e. the error handler should check the route function to see what cors it had intended to supply and then provide them on the error response.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/119", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/119/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/119/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/119/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/119", "id": 64377328, "node_id": "MDU6SXNzdWU2NDM3NzMyOA==", "number": 119, "title": "My Unit Tests are Broken in v2", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-03-25T21:28:39Z", "updated_at": "2015-03-25T21:58:37Z", "closed_at": "2015-03-25T21:58:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "My app:\n\n```\napp = Flask(__name__)\ncors = CORS(app)\n```\n\ntests:\n\n``` python\n    self.app = qp.app.test_client()\n\n    def test_options_root(self):\n        rv = self.app.options(\n            '/',\n            headers={\n                'Access-Control-Request-Headers': 'x-amz-user-agent, x-amz-date, authorization, content-type',\n                'Access-Control-Request-Method': 'POST'})\n        print rv.headers\n```\n\nin (patched v1 and in actual v2):\n\n```\nContent-Type: text/html; charset=utf-8\nAllow: HEAD, POST, OPTIONS, GET\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Methods: DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT\nAccess-Control-Allow-Headers: x-amz-user-agent, x-amz-date, authorization, content-type\nContent-Length: 0\n```\n\nin v2 tests:\n\n```\nContent-Type: text/html; charset=utf-8\nAllow: HEAD, POST, OPTIONS, GET\nContent-Length: 0\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/118", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/118/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/118/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/118", "id": 64322953, "node_id": "MDU6SXNzdWU2NDMyMjk1Mw==", "number": 118, "title": "Add a changelog", "user": {"login": "gtaylor", "id": 75556, "node_id": "MDQ6VXNlcjc1NTU2", "avatar_url": "https://avatars3.githubusercontent.com/u/75556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gtaylor", "html_url": "https://github.com/gtaylor", "followers_url": "https://api.github.com/users/gtaylor/followers", "following_url": "https://api.github.com/users/gtaylor/following{/other_user}", "gists_url": "https://api.github.com/users/gtaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/gtaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gtaylor/subscriptions", "organizations_url": "https://api.github.com/users/gtaylor/orgs", "repos_url": "https://api.github.com/users/gtaylor/repos", "events_url": "https://api.github.com/users/gtaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/gtaylor/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-03-25T17:12:51Z", "updated_at": "2015-04-14T01:48:54Z", "closed_at": "2015-04-10T03:15:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "It becomes very difficult to decide whether to upgrade without a changelog of any kind. This would definitely help us with this process.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/115", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/115/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/115/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/115", "id": 63847206, "node_id": "MDU6SXNzdWU2Mzg0NzIwNg==", "number": 115, "title": "supports_credentials=False on cross_origin decorator gets interpreted incorrectly", "user": {"login": "eastein", "id": 2115, "node_id": "MDQ6VXNlcjIxMTU=", "avatar_url": "https://avatars1.githubusercontent.com/u/2115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eastein", "html_url": "https://github.com/eastein", "followers_url": "https://api.github.com/users/eastein/followers", "following_url": "https://api.github.com/users/eastein/following{/other_user}", "gists_url": "https://api.github.com/users/eastein/gists{/gist_id}", "starred_url": "https://api.github.com/users/eastein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eastein/subscriptions", "organizations_url": "https://api.github.com/users/eastein/orgs", "repos_url": "https://api.github.com/users/eastein/repos", "events_url": "https://api.github.com/users/eastein/events{/privacy}", "received_events_url": "https://api.github.com/users/eastein/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-23T22:18:35Z", "updated_at": "2015-03-24T04:13:35Z", "closed_at": "2015-03-24T04:13:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version: 1.10.3\n\n```\nmyapp: INFO: attempting cors test\nmyapp: DEBUG: actually applying the decorator now... deca=(), deckw={'automatic_options': True, 'supports_credentials': False, 'allow_headers': ['Content-Type']}, a=(), kw={}\nmyapp: DEBUG: Hey there... request method is OPTIONS\nFlask-Cors: DEBUG: Request to '/corstests/test3' is enabled for CORS with options:{'origins': ['^(?i)https://.*\\\\.REDACTED.com$'], 'vary_header': True, 'methods': 'DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT', 'send_wildcard': True, 'supports_credentials': 'False', 'allow_headers': 'Content-Type', 'automatic_options': True, 'origins_str': '', 'always_send': True}\nFlask-Cors: DEBUG: CORS request received with 'Origin' https://app.local.REDACTED.com\nFlask-Cors: DEBUG: Given origin matches set of allowed origins\nFlask-Cors: INFO: CORS request from Origin:https://app.local.REDACTED.com, setting Access-Control-Allow-Origin:https://app.local.REDACTED.com\nFlask-Cors: DEBUG: Settings CORS headers: {'Access-Control-Allow-Methods': 'DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT', 'Vary': 'Origin', 'Allow': u'POST, OPTIONS', 'Access-Control-Allow-Credentials': 'true', 'Access-Control-Allow-Origin': u'https://app.local.REDACTED.com', 'Access-Control-Allow-Headers': 'Content-Type', 'Content-Type': u'text/html; charset=utf-8'}\n```\n\nExplanation of debug log: I am not applying the decorator at start up time but at call time. I don't think this is the issue.  I am sending supports_credentials=False kwarg to the cross_origin decorator and the above log is what happens when I make an OPTIONS preflight request in my unit tests. I think the root cause is _serialize_option function stringifying the boolean value which then becomes 'False' which is treated as a true value when used in a boolean context to determine what behaviour to use.\n\nI have not tested if this works properly in 2.x.  \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/114", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/114/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/114/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/114", "id": 62102215, "node_id": "MDU6SXNzdWU2MjEwMjIxNQ==", "number": 114, "title": "Upgrading via pip not working ", "user": {"login": "lhausmann", "id": 513573, "node_id": "MDQ6VXNlcjUxMzU3Mw==", "avatar_url": "https://avatars0.githubusercontent.com/u/513573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lhausmann", "html_url": "https://github.com/lhausmann", "followers_url": "https://api.github.com/users/lhausmann/followers", "following_url": "https://api.github.com/users/lhausmann/following{/other_user}", "gists_url": "https://api.github.com/users/lhausmann/gists{/gist_id}", "starred_url": "https://api.github.com/users/lhausmann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lhausmann/subscriptions", "organizations_url": "https://api.github.com/users/lhausmann/orgs", "repos_url": "https://api.github.com/users/lhausmann/repos", "events_url": "https://api.github.com/users/lhausmann/events{/privacy}", "received_events_url": "https://api.github.com/users/lhausmann/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-03-16T14:45:39Z", "updated_at": "2015-04-10T03:15:21Z", "closed_at": "2015-04-10T03:15:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Upgrading via pip from 1.10.3 to 2.0RC1 just re-installs 1.10.3\n\nOS: MacOS 10.10.2\nPython: 2.7.6\nsetuptools 14.3\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/110", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/110/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/110/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/110/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/110", "id": 59842175, "node_id": "MDU6SXNzdWU1OTg0MjE3NQ==", "number": 110, "title": "Access-Control-Request-Headers not Copied to Access-Control-Allow-Headers", "user": {"login": "cancan101", "id": 51059, "node_id": "MDQ6VXNlcjUxMDU5", "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cancan101", "html_url": "https://github.com/cancan101", "followers_url": "https://api.github.com/users/cancan101/followers", "following_url": "https://api.github.com/users/cancan101/following{/other_user}", "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}", "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions", "organizations_url": "https://api.github.com/users/cancan101/orgs", "repos_url": "https://api.github.com/users/cancan101/repos", "events_url": "https://api.github.com/users/cancan101/events{/privacy}", "received_events_url": "https://api.github.com/users/cancan101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-03-04T18:47:42Z", "updated_at": "2015-03-24T04:09:24Z", "closed_at": "2015-03-24T04:09:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "See how `ACL_REQUEST_HEADERS` is never used.\n\nSomething like this seems missing: https://github.com/cancan101/flask-cors/commit/4f9364414772be7df1a1de5dfc12f1ae79725d76\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/98", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/98/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/98/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/98", "id": 54085337, "node_id": "MDU6SXNzdWU1NDA4NTMzNw==", "number": 98, "title": "Access-Control-Allow-Methods not sent", "user": {"login": "tvaughan", "id": 54061, "node_id": "MDQ6VXNlcjU0MDYx", "avatar_url": "https://avatars2.githubusercontent.com/u/54061?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tvaughan", "html_url": "https://github.com/tvaughan", "followers_url": "https://api.github.com/users/tvaughan/followers", "following_url": "https://api.github.com/users/tvaughan/following{/other_user}", "gists_url": "https://api.github.com/users/tvaughan/gists{/gist_id}", "starred_url": "https://api.github.com/users/tvaughan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tvaughan/subscriptions", "organizations_url": "https://api.github.com/users/tvaughan/orgs", "repos_url": "https://api.github.com/users/tvaughan/repos", "events_url": "https://api.github.com/users/tvaughan/events{/privacy}", "received_events_url": "https://api.github.com/users/tvaughan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-01-12T17:57:45Z", "updated_at": "2015-02-09T23:10:50Z", "closed_at": "2015-02-09T23:10:50Z", "author_association": "NONE", "active_lock_reason": null, "body": " I just updated from 1.9.0 to 1.10.2 and `Access-Control-Allow-Methods` is not being sent anymore. For example, the test script in [this comment](https://github.com/CoryDolphin/flask-cors/issues/78#issuecomment-60867342) seems to be broken now. What I see is:\n\n```\n$ pip3 show flask-cors\n\n---\nName: Flask-Cors\nVersion: 1.10.2\nLocation: /usr/local/lib/python3.4/dist-packages\nRequires: Six, Flask\n\n$ cat flask-cors-test \nfrom flask.ext.cors import CORS\nfrom flask import Flask\n\n\napp = Flask(__name__)\ncors = CORS(app, headers=\"X-CSRFToken, Content-Type\")\n\n@app.route(\"/\")\ndef example():\n    return \"Hello World!\"\n\nif __name__ == '__main__':\n    with app.test_client() as c:\n        for verb in ('get','options'):\n            print( \"Headers for %s /:\\n%s\" % (\n                verb.upper(),\n                getattr(c, verb)().headers\n            ) )\n\n$ python3.4 ./flask-cors-test \nHeaders for GET /:\nContent-Type: text/html; charset=utf-8\nContent-Length: 12\nAccess-Control-Allow-Origin: *\n\n\nHeaders for OPTIONS /:\nContent-Type: text/html; charset=utf-8\nAllow: HEAD, GET, OPTIONS\nAccess-Control-Allow-Origin: *\nContent-Length: 0\n\n\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/97", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/97/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/97/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/97", "id": 53606514, "node_id": "MDU6SXNzdWU1MzYwNjUxNA==", "number": 97, "title": "Allow headers doesn't works", "user": {"login": "thetlk", "id": 2060873, "node_id": "MDQ6VXNlcjIwNjA4NzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/2060873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thetlk", "html_url": "https://github.com/thetlk", "followers_url": "https://api.github.com/users/thetlk/followers", "following_url": "https://api.github.com/users/thetlk/following{/other_user}", "gists_url": "https://api.github.com/users/thetlk/gists{/gist_id}", "starred_url": "https://api.github.com/users/thetlk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thetlk/subscriptions", "organizations_url": "https://api.github.com/users/thetlk/orgs", "repos_url": "https://api.github.com/users/thetlk/repos", "events_url": "https://api.github.com/users/thetlk/events{/privacy}", "received_events_url": "https://api.github.com/users/thetlk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-01-07T07:49:45Z", "updated_at": "2015-01-11T18:18:40Z", "closed_at": "2015-01-11T18:18:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've created this small rest api application \n\n``` python\nfrom flask import Flask\nfrom flask.ext.cors import CORS\nfrom flask.ext.restful import Resource, Api\nimport json\napp = Flask(__name__)\nCORS(app, resources=r'/api/*', allow_headers='Content-Type')\napi = Api(app)\n\nworkplaces = [\n    {\"id\":1, \"name\":\"zob\", \"location\":{\"latitude\": 47.099, \"longitude\": 2.438}}\n]\n\n\nclass WorkplaceList(Resource):\n    def get(self):\n        return workplaces\n\nclass Index(Resource):\n    def get(self):\n        return \"ok\"\n\napi.add_resource(Index, '/')\napi.add_resource(WorkplaceList, '/api/workplace')\n\nif __name__ == \"__main__\":\n    app.run(host='0.0.0.0', debug=True)\n```\n\nWhen I send request to this small sever, there is no `Access-Control-Allow-Header` HTTP header :\n\n```\n[tlk:~/Dev/TmpRestAPI]$ curl -X GET http://localhost:5000/api/workplace -i\nHTTP/1.0 200 OK\nContent-Type: application/json\nContent-Length: 154\nAccess-Control-Allow-Origin: *\nServer: Werkzeug/0.9.6 Python/2.7.9\nDate: Wed, 07 Jan 2015 07:44:51 GMT\n\n[\n    {\n        \"id\": 1, \n        \"location\": {\n            \"latitude\": 47.099, \n            \"longitude\": 2.438\n        }, \n        \"name\": \"zob\"\n    }\n]\n[tlk:~/Dev/TmpRestAPI]$ curl -X OPTIONS http://localhost:5000/api/workplace -i\nHTTP/1.0 200 OK\nContent-Type: text/html; charset=utf-8\nAllow: HEAD, OPTIONS, GET\nAccess-Control-Allow-Origin: *\nContent-Length: 0\nServer: Werkzeug/0.9.6 Python/2.7.9\nDate: Wed, 07 Jan 2015 07:45:11 GMT\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/95", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/95/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/95/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/95/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/95", "id": 52973947, "node_id": "MDU6SXNzdWU1Mjk3Mzk0Nw==", "number": 95, "title": "Cross Origin Issue in Flask in spite of using flask", "user": {"login": "noorbakerally", "id": 1171706, "node_id": "MDQ6VXNlcjExNzE3MDY=", "avatar_url": "https://avatars0.githubusercontent.com/u/1171706?v=4", "gravatar_id": "", "url": "https://api.github.com/users/noorbakerally", "html_url": "https://github.com/noorbakerally", "followers_url": "https://api.github.com/users/noorbakerally/followers", "following_url": "https://api.github.com/users/noorbakerally/following{/other_user}", "gists_url": "https://api.github.com/users/noorbakerally/gists{/gist_id}", "starred_url": "https://api.github.com/users/noorbakerally/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/noorbakerally/subscriptions", "organizations_url": "https://api.github.com/users/noorbakerally/orgs", "repos_url": "https://api.github.com/users/noorbakerally/repos", "events_url": "https://api.github.com/users/noorbakerally/events{/privacy}", "received_events_url": "https://api.github.com/users/noorbakerally/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-28T06:20:46Z", "updated_at": "2014-12-28T21:48:30Z", "closed_at": "2014-12-28T21:48:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting Cross Origin issue in flask inspite of using CORS, here is the small webservice:\n\nfrom flask import Flask,request\nimport json\nfrom flask.ext.cors import CORS\napp = Flask(**name**)\nCORS(app, resources='*', allow_headers='Content-Type')\ncars = [{'color': 'red', 'brand': 'BMW', 'plateNumber': '567hghh', 'id': 1}, {'color': 'blue', 'brand': 'Ford', 'plateNumber': '6776hhgd', 'id': 2}, {'color': 'red', 'brand': 'BMW', 'plateNumber': '6887hhgd', 'id': 3}]\n@app.route(\"/cars\",methods=['POST','OPTIONS'])\ndef POST_cars():\n        args = json.loads(request.data)\n        newCar = {}\n        newCar['color'] = args['color']\n        newCar['brand'] = args['brand']\n        newCar['plateNumber'] =  args['plateNumber']\n        newCar['id'] = len(cars)\n        return_obj = {}\n        return_obj['car'] = newCar\n        cars.append(newCar)\n        return str(json.dumps(return_obj))\n\nI'm getting the error with the following call:\n\n$.post( \"http://127.0.0.1:5000/cars\", {\n    \"color\": \"red\",\n    \"brand\": \"BMW\",\n    \"plateNumber\": \"567hghh\"\n} );\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/84", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/84/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/84/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/84", "id": 51853285, "node_id": "MDU6SXNzdWU1MTg1MzI4NQ==", "number": 84, "title": "1.10 not compatible with example app", "user": {"login": "diiq", "id": 150973, "node_id": "MDQ6VXNlcjE1MDk3Mw==", "avatar_url": "https://avatars1.githubusercontent.com/u/150973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diiq", "html_url": "https://github.com/diiq", "followers_url": "https://api.github.com/users/diiq/followers", "following_url": "https://api.github.com/users/diiq/following{/other_user}", "gists_url": "https://api.github.com/users/diiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/diiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diiq/subscriptions", "organizations_url": "https://api.github.com/users/diiq/orgs", "repos_url": "https://api.github.com/users/diiq/repos", "events_url": "https://api.github.com/users/diiq/events{/privacy}", "received_events_url": "https://api.github.com/users/diiq/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-12-12T21:09:50Z", "updated_at": "2014-12-13T15:49:49Z", "closed_at": "2014-12-13T02:45:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Your example app suggests I can do something like this:\n\n```\nflask_app.config['CORS_RESOURCES'] = {\n    r\"/api/*\": {\n        \"origins\": [\"http://blah.com/*\", \"http://foo.bar/*\"]\n    }\n}\n```\n\nAnd indeed, in 1.9.0, I could, and life was peachy.\n\nUpgrading to 1.10 results in origins being \"*\" regardless of the contents of this configuration, even when the credentials flag is set to true. As my browser immediately informed me, \n\n```\nA wildcard '*' cannot be used in the 'Access-Control-Allow-Origin' header when the credentials flag is true.\n```\n\nIf there's another way I should configure origins, what is it (and can you update the example app)?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/83", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/83/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/83/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/83", "id": 51782003, "node_id": "MDU6SXNzdWU1MTc4MjAwMw==", "number": 83, "title": "Issue with functools.partial in 1.10.0 using Python 2.7.9", "user": {"login": "joonathan", "id": 3045, "node_id": "MDQ6VXNlcjMwNDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joonathan", "html_url": "https://github.com/joonathan", "followers_url": "https://api.github.com/users/joonathan/followers", "following_url": "https://api.github.com/users/joonathan/following{/other_user}", "gists_url": "https://api.github.com/users/joonathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/joonathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joonathan/subscriptions", "organizations_url": "https://api.github.com/users/joonathan/orgs", "repos_url": "https://api.github.com/users/joonathan/repos", "events_url": "https://api.github.com/users/joonathan/events{/privacy}", "received_events_url": "https://api.github.com/users/joonathan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-12T08:35:04Z", "updated_at": "2014-12-13T02:45:11Z", "closed_at": "2014-12-13T02:45:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "When upgrading to 1.10.0 in environment with Python 2.7.0 following exception is thrown:\n\n  File \"/Users/joonathan/Development/App/application/app.py\", line 61, in create_app\n    configure_extensions(app)\n  File \"/Users/joonathan/Development/App/application/app.py\", line 98, in configure_extensions\n    cors.init_app(app)\n  File \"/Users/joonathan/.virtualenvs/App/lib/python2.7/site-packages/flask_cors.py\", line 274, in init_app\n    app.handle_exception)\n  File \"/Users/joonathan/.virtualenvs/App/lib/python2.7/site-packages/flask_cors.py\", line 267, in _after_request_decorator\n    @wraps(f)\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/functools.py\", line 33, in update_wrapper\n    setattr(wrapper, attr, getattr(wrapped, attr))\nAttributeError: 'functools.partial' object has no attribute '__module__'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/78", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/78/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/78/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/78", "id": 47045309, "node_id": "MDU6SXNzdWU0NzA0NTMwOQ==", "number": 78, "title": "X-CSRFToken not send in Access-Control-Allow-Headers", "user": {"login": "olmar", "id": 3625483, "node_id": "MDQ6VXNlcjM2MjU0ODM=", "avatar_url": "https://avatars1.githubusercontent.com/u/3625483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olmar", "html_url": "https://github.com/olmar", "followers_url": "https://api.github.com/users/olmar/followers", "following_url": "https://api.github.com/users/olmar/following{/other_user}", "gists_url": "https://api.github.com/users/olmar/gists{/gist_id}", "starred_url": "https://api.github.com/users/olmar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olmar/subscriptions", "organizations_url": "https://api.github.com/users/olmar/orgs", "repos_url": "https://api.github.com/users/olmar/repos", "events_url": "https://api.github.com/users/olmar/events{/privacy}", "received_events_url": "https://api.github.com/users/olmar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-10-28T16:07:27Z", "updated_at": "2014-10-30T02:33:16Z", "closed_at": "2014-10-30T02:33:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "X-CSRFToken not sent in Access-Control-Allow-Headers when added as following:\n`cors = CORS(app, headers=\"X-CSRFToken, Content-Type\")`\n\nThe solution was to add `resp.headers[ACL_HEADERS] = options.get('headers')` here https://github.com/wcdolphin/flask-cors/blob/master/flask_cors.py#L251\n\nThe question is this a bug or CORS is somehow not properly configured?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/67", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/67/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/67/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/67", "id": 42070869, "node_id": "MDU6SXNzdWU0MjA3MDg2OQ==", "number": 67, "title": "CORS Headers not added with uncaught exception", "user": {"login": "robertfw", "id": 814818, "node_id": "MDQ6VXNlcjgxNDgxOA==", "avatar_url": "https://avatars1.githubusercontent.com/u/814818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robertfw", "html_url": "https://github.com/robertfw", "followers_url": "https://api.github.com/users/robertfw/followers", "following_url": "https://api.github.com/users/robertfw/following{/other_user}", "gists_url": "https://api.github.com/users/robertfw/gists{/gist_id}", "starred_url": "https://api.github.com/users/robertfw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robertfw/subscriptions", "organizations_url": "https://api.github.com/users/robertfw/orgs", "repos_url": "https://api.github.com/users/robertfw/repos", "events_url": "https://api.github.com/users/robertfw/events{/privacy}", "received_events_url": "https://api.github.com/users/robertfw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2014-09-05T17:38:28Z", "updated_at": "2015-12-06T19:19:14Z", "closed_at": "2014-12-11T05:18:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was having this issue with my own simple CORS handling, and found flask-cors, only to find it has the same problem.\n\nThe docs for after_request point out that the function may not be called if there is an unhandled exception: http://flask.pocoo.org/docs/0.10/api/#flask.Flask.after_request\n\nThe result is that the client ends up getting a no-cors header error instead of a 500 server error\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/66", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/66/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/66/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/66", "id": 41316444, "node_id": "MDU6SXNzdWU0MTMxNjQ0NA==", "number": 66, "title": "Secure defaults", "user": {"login": "corydolphin", "id": 446889, "node_id": "MDQ6VXNlcjQ0Njg4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/446889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/corydolphin", "html_url": "https://github.com/corydolphin", "followers_url": "https://api.github.com/users/corydolphin/followers", "following_url": "https://api.github.com/users/corydolphin/following{/other_user}", "gists_url": "https://api.github.com/users/corydolphin/gists{/gist_id}", "starred_url": "https://api.github.com/users/corydolphin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/corydolphin/subscriptions", "organizations_url": "https://api.github.com/users/corydolphin/orgs", "repos_url": "https://api.github.com/users/corydolphin/repos", "events_url": "https://api.github.com/users/corydolphin/events{/privacy}", "received_events_url": "https://api.github.com/users/corydolphin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-08-27T18:41:07Z", "updated_at": "2015-03-24T03:57:48Z", "closed_at": "2015-03-24T03:57:48Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Let's be secure by default.\n- Don't send headers if Origin not in request\n- Default to only allowing idempotent verbs\n- Tell people that CSRF is a thing\n- Release v2.0.0 as it will change defaults and is not backwards compatible. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/65", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/65/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/65/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/65", "id": 40887165, "node_id": "MDU6SXNzdWU0MDg4NzE2NQ==", "number": 65, "title": "Add Authorization to 'Gotchas'/Pitfalls", "user": {"login": "corydolphin", "id": 446889, "node_id": "MDQ6VXNlcjQ0Njg4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/446889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/corydolphin", "html_url": "https://github.com/corydolphin", "followers_url": "https://api.github.com/users/corydolphin/followers", "following_url": "https://api.github.com/users/corydolphin/following{/other_user}", "gists_url": "https://api.github.com/users/corydolphin/gists{/gist_id}", "starred_url": "https://api.github.com/users/corydolphin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/corydolphin/subscriptions", "organizations_url": "https://api.github.com/users/corydolphin/orgs", "repos_url": "https://api.github.com/users/corydolphin/repos", "events_url": "https://api.github.com/users/corydolphin/events{/privacy}", "received_events_url": "https://api.github.com/users/corydolphin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-22T08:06:18Z", "updated_at": "2015-03-24T03:58:34Z", "closed_at": "2015-03-24T03:58:34Z", "author_association": "OWNER", "active_lock_reason": null, "body": "It would be great to document common use cases r.e. authorization so people don't have to spend too much time figuring it out.\n\nhttp://stackoverflow.com/questions/24827857/flask-cors-wrapper-not-working-when-jwt-auth-wrapper-is-applied \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/59", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/59/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/59/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/59", "id": 40736243, "node_id": "MDU6SXNzdWU0MDczNjI0Mw==", "number": 59, "title": "CORS headers returned when origin requests mismatch", "user": {"login": "corydolphin", "id": 446889, "node_id": "MDQ6VXNlcjQ0Njg4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/446889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/corydolphin", "html_url": "https://github.com/corydolphin", "followers_url": "https://api.github.com/users/corydolphin/followers", "following_url": "https://api.github.com/users/corydolphin/following{/other_user}", "gists_url": "https://api.github.com/users/corydolphin/gists{/gist_id}", "starred_url": "https://api.github.com/users/corydolphin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/corydolphin/subscriptions", "organizations_url": "https://api.github.com/users/corydolphin/orgs", "repos_url": "https://api.github.com/users/corydolphin/repos", "events_url": "https://api.github.com/users/corydolphin/events{/privacy}", "received_events_url": "https://api.github.com/users/corydolphin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-20T19:36:15Z", "updated_at": "2014-08-20T19:37:12Z", "closed_at": "2014-08-20T19:36:48Z", "author_association": "OWNER", "active_lock_reason": null, "body": "https://github.com/wcdolphin/flask-cors/commit/22c6ff46f135afdefbc044554b9b90d75cc85508 documents and verifies this misbehavior. \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/56", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/56/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/56/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/56", "id": 40536275, "node_id": "MDU6SXNzdWU0MDUzNjI3NQ==", "number": 56, "title": "cannot import name CORS", "user": {"login": "maruina", "id": 4821896, "node_id": "MDQ6VXNlcjQ4MjE4OTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/4821896?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maruina", "html_url": "https://github.com/maruina", "followers_url": "https://api.github.com/users/maruina/followers", "following_url": "https://api.github.com/users/maruina/following{/other_user}", "gists_url": "https://api.github.com/users/maruina/gists{/gist_id}", "starred_url": "https://api.github.com/users/maruina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maruina/subscriptions", "organizations_url": "https://api.github.com/users/maruina/orgs", "repos_url": "https://api.github.com/users/maruina/repos", "events_url": "https://api.github.com/users/maruina/events{/privacy}", "received_events_url": "https://api.github.com/users/maruina/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-18T21:53:05Z", "updated_at": "2014-08-19T05:16:29Z", "closed_at": "2014-08-19T05:16:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\nI'm having some trouble with the import. When I try\n`from flask.ext.cors import CORS`\nI have the error \n`ImportError: cannot import name CORS`\n\nDo you have any idea? I installed the package with the command\n`pip install flask-cors`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/54", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/54/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/54/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/54", "id": 40356434, "node_id": "MDU6SXNzdWU0MDM1NjQzNA==", "number": 54, "title": "Regular expression or wildcard origins", "user": {"login": "marcoqu", "id": 972205, "node_id": "MDQ6VXNlcjk3MjIwNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/972205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcoqu", "html_url": "https://github.com/marcoqu", "followers_url": "https://api.github.com/users/marcoqu/followers", "following_url": "https://api.github.com/users/marcoqu/following{/other_user}", "gists_url": "https://api.github.com/users/marcoqu/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcoqu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcoqu/subscriptions", "organizations_url": "https://api.github.com/users/marcoqu/orgs", "repos_url": "https://api.github.com/users/marcoqu/repos", "events_url": "https://api.github.com/users/marcoqu/events{/privacy}", "received_events_url": "https://api.github.com/users/marcoqu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-08-15T15:22:32Z", "updated_at": "2014-08-22T04:30:19Z", "closed_at": "2014-08-22T04:30:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to specify origins in a regular expression, so that urls matching the pattern are allowed? Eg: all subdomains from a given domain.. `r\"https?://\\w*\\.?example\\.com:?\\d*/?.*\"`\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/42", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/42/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/42/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/42", "id": 39486194, "node_id": "MDU6SXNzdWUzOTQ4NjE5NA==", "number": 42, "title": "Can't get OPTIONS pre-flight to work", "user": {"login": "erdillon", "id": 4235560, "node_id": "MDQ6VXNlcjQyMzU1NjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4235560?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erdillon", "html_url": "https://github.com/erdillon", "followers_url": "https://api.github.com/users/erdillon/followers", "following_url": "https://api.github.com/users/erdillon/following{/other_user}", "gists_url": "https://api.github.com/users/erdillon/gists{/gist_id}", "starred_url": "https://api.github.com/users/erdillon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erdillon/subscriptions", "organizations_url": "https://api.github.com/users/erdillon/orgs", "repos_url": "https://api.github.com/users/erdillon/repos", "events_url": "https://api.github.com/users/erdillon/events{/privacy}", "received_events_url": "https://api.github.com/users/erdillon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-05T05:19:11Z", "updated_at": "2014-08-05T06:01:53Z", "closed_at": "2014-08-05T06:01:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\n\nI'm getting a OPTIONS request from the browser as expected, but Flask returns 404 immediately.\nI've got the \"@cross_origin' decoration on my route.\nI've got:\napp.config['CORS_ORIGINS'] = ['http://localhost:9000']\napp.config['CORS_HEADERS'] = ['Content-Type', 'Authorization']\napp.config['CORS_AUTOMATIC_OPTIONS'] = True\n\nWhat am I doing wrong?\n\nThanks,\nEric\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/39", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/39/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/39/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/39", "id": 39169051, "node_id": "MDU6SXNzdWUzOTE2OTA1MQ==", "number": 39, "title": " CORS_MAX_AGE option is forgotten", "user": {"login": "odk211", "id": 1321120, "node_id": "MDQ6VXNlcjEzMjExMjA=", "avatar_url": "https://avatars3.githubusercontent.com/u/1321120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odk211", "html_url": "https://github.com/odk211", "followers_url": "https://api.github.com/users/odk211/followers", "following_url": "https://api.github.com/users/odk211/following{/other_user}", "gists_url": "https://api.github.com/users/odk211/gists{/gist_id}", "starred_url": "https://api.github.com/users/odk211/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odk211/subscriptions", "organizations_url": "https://api.github.com/users/odk211/orgs", "repos_url": "https://api.github.com/users/odk211/repos", "events_url": "https://api.github.com/users/odk211/events{/privacy}", "received_events_url": "https://api.github.com/users/odk211/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-07-31T07:22:42Z", "updated_at": "2014-08-01T04:08:43Z", "closed_at": "2014-07-31T19:15:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "flask_cors.py line 29 CONFIG_OPTIONS does not have CORS_MAX_AGE option.\nis it collect?\nthanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/38", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/38/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/38/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/38", "id": 39152538, "node_id": "MDU6SXNzdWUzOTE1MjUzOA==", "number": 38, "title": "Cannot load CORS content", "user": {"login": "Resisty", "id": 5331616, "node_id": "MDQ6VXNlcjUzMzE2MTY=", "avatar_url": "https://avatars2.githubusercontent.com/u/5331616?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Resisty", "html_url": "https://github.com/Resisty", "followers_url": "https://api.github.com/users/Resisty/followers", "following_url": "https://api.github.com/users/Resisty/following{/other_user}", "gists_url": "https://api.github.com/users/Resisty/gists{/gist_id}", "starred_url": "https://api.github.com/users/Resisty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Resisty/subscriptions", "organizations_url": "https://api.github.com/users/Resisty/orgs", "repos_url": "https://api.github.com/users/Resisty/repos", "events_url": "https://api.github.com/users/Resisty/events{/privacy}", "received_events_url": "https://api.github.com/users/Resisty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-07-31T00:41:42Z", "updated_at": "2014-07-31T05:03:08Z", "closed_at": "2014-07-31T05:03:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I happened across your project after banging my head against trying to make an XMLHttpRequest in my javascript against my flask code (running on the same server, ports 8000 and 5000, respectively). No matter what I try, nothing gets past the \"No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:8000' is therefore not allowed access.\" error. From flask:\n\n 8 from flask.ext.cors import cross_origin\n... <decorators and helper functions>\n 39 @app.route('/character_scrape', methods=['GET', 'POST'])\n 40 @cross_origin(headers=['Content-Type'])\n 41 @on_subnet\n 42 def scrape_char():\n\nThanks for your time!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/28", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/28/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/28/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/28", "id": 37276205, "node_id": "MDU6SXNzdWUzNzI3NjIwNQ==", "number": 28, "title": "Can you put the decorator on a @before_request function?", "user": {"login": "Siecje", "id": 4069476, "node_id": "MDQ6VXNlcjQwNjk0NzY=", "avatar_url": "https://avatars3.githubusercontent.com/u/4069476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Siecje", "html_url": "https://github.com/Siecje", "followers_url": "https://api.github.com/users/Siecje/followers", "following_url": "https://api.github.com/users/Siecje/following{/other_user}", "gists_url": "https://api.github.com/users/Siecje/gists{/gist_id}", "starred_url": "https://api.github.com/users/Siecje/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Siecje/subscriptions", "organizations_url": "https://api.github.com/users/Siecje/orgs", "repos_url": "https://api.github.com/users/Siecje/repos", "events_url": "https://api.github.com/users/Siecje/events{/privacy}", "received_events_url": "https://api.github.com/users/Siecje/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-07T14:56:10Z", "updated_at": "2014-07-09T17:37:23Z", "closed_at": "2014-07-09T17:37:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you put the decorator on a @before_request function?\nI'm using Flask-HTTPAuth and serving JSON.\n\nWhen I do I get the error \"ValueError: View function did not return a response\"\n\nHere is how I am using it. \nhttps://github.com/Siecje/flasky/blob/master/app/api_1_0/authentication.py\nIf you run the tests in the repo (python manage.py test) you will see the error message.\n\n``` python\nTraceback (most recent call last):\n  File \"/home/siecje/Desktop/wr-ccafe/venv/lib/python2.7/site-packages/flask/app.py\", line 1836, in __call__\n    return self.wsgi_app(environ, start_response)\n  File \"/home/siecje/Desktop/wr-ccafe/venv/lib/python2.7/site-packages/flask/app.py\", line 1820, in wsgi_app\n    response = self.make_response(self.handle_exception(e))\n  File \"/home/siecje/Desktop/wr-ccafe/venv/lib/python2.7/site-packages/flask/app.py\", line 1403, in handle_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/home/siecje/Desktop/wr-ccafe/venv/lib/python2.7/site-packages/flask/app.py\", line 1817, in wsgi_app\n    response = self.full_dispatch_request()\n  File \"/home/siecje/Desktop/wr-ccafe/venv/lib/python2.7/site-packages/flask/app.py\", line 1477, in full_dispatch_request\n    rv = self.handle_user_exception(e)\n  File \"/home/siecje/Desktop/wr-ccafe/venv/lib/python2.7/site-packages/flask/app.py\", line 1381, in handle_user_exception\n    reraise(exc_type, exc_value, tb)\n  File \"/home/siecje/Desktop/wr-ccafe/venv/lib/python2.7/site-packages/flask/app.py\", line 1473, in full_dispatch_request\n    rv = self.preprocess_request()\n  File \"/home/siecje/Desktop/wr-ccafe/venv/lib/python2.7/site-packages/flask/app.py\", line 1666, in preprocess_request\n    rv = func()\n  File \"/home/siecje/Desktop/wr-ccafe/venv/lib/python2.7/site-packages/flask_httpauth.py\", line 53, in decorated\n    return f(*args, **kwargs)\n  File \"/home/siecje/Desktop/wr-ccafe/venv/lib/python2.7/site-packages/flask_cors.py\", line 119, in wrapped_function\n    resp = make_response(f(*args, **kwargs))\n  File \"/home/siecje/Desktop/wr-ccafe/venv/lib/python2.7/site-packages/flask/helpers.py\", line 183, in make_response\n    return current_app.make_response(args)\n  File \"/home/siecje/Desktop/wr-ccafe/venv/lib/python2.7/site-packages/flask/app.py\", line 1566, in make_response\n    raise ValueError('View function did not return a response')\nValueError: View function did not return a response\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/27", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/27/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/27/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/27", "id": 35452166, "node_id": "MDU6SXNzdWUzNTQ1MjE2Ng==", "number": 27, "title": "Support `Access-Control-Expose-Headers`", "user": {"login": "Ceasar", "id": 625822, "node_id": "MDQ6VXNlcjYyNTgyMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/625822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ceasar", "html_url": "https://github.com/Ceasar", "followers_url": "https://api.github.com/users/Ceasar/followers", "following_url": "https://api.github.com/users/Ceasar/following{/other_user}", "gists_url": "https://api.github.com/users/Ceasar/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ceasar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ceasar/subscriptions", "organizations_url": "https://api.github.com/users/Ceasar/orgs", "repos_url": "https://api.github.com/users/Ceasar/repos", "events_url": "https://api.github.com/users/Ceasar/events{/privacy}", "received_events_url": "https://api.github.com/users/Ceasar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-06-11T05:13:42Z", "updated_at": "2014-12-18T19:31:40Z", "closed_at": "2014-12-18T19:31:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently there is no way to expose these except by manually setting them on the request. Yet, they are helpful for exposing custom response headers, especially when developing a client and server in parallel.\n\nSee https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS#Access-Control-Expose-Headers for more information.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/19", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/19/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/19/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/19", "id": 31395719, "node_id": "MDU6SXNzdWUzMTM5NTcxOQ==", "number": 19, "title": "Support calls of abort() inside of cross_origin annotated", "user": {"login": "vsapronov", "id": 886198, "node_id": "MDQ6VXNlcjg4NjE5OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/886198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsapronov", "html_url": "https://github.com/vsapronov", "followers_url": "https://api.github.com/users/vsapronov/followers", "following_url": "https://api.github.com/users/vsapronov/following{/other_user}", "gists_url": "https://api.github.com/users/vsapronov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsapronov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsapronov/subscriptions", "organizations_url": "https://api.github.com/users/vsapronov/orgs", "repos_url": "https://api.github.com/users/vsapronov/repos", "events_url": "https://api.github.com/users/vsapronov/events{/privacy}", "received_events_url": "https://api.github.com/users/vsapronov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-04-13T02:21:35Z", "updated_at": "2014-04-25T16:30:25Z", "closed_at": "2014-04-25T16:25:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have cross_origin annotated Flask method and call abort() then CORS headers are not added to response. Not calling abort() from my methods is OK. Though some Flask plugins are using abort() function. For example Flask-Login does abort() calls.  \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/17", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/17/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/17/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/17", "id": 30344829, "node_id": "MDU6SXNzdWUzMDM0NDgyOQ==", "number": 17, "title": "Support default configuration for all parameters", "user": {"login": "corydolphin", "id": 446889, "node_id": "MDQ6VXNlcjQ0Njg4OQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/446889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/corydolphin", "html_url": "https://github.com/corydolphin", "followers_url": "https://api.github.com/users/corydolphin/followers", "following_url": "https://api.github.com/users/corydolphin/following{/other_user}", "gists_url": "https://api.github.com/users/corydolphin/gists{/gist_id}", "starred_url": "https://api.github.com/users/corydolphin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/corydolphin/subscriptions", "organizations_url": "https://api.github.com/users/corydolphin/orgs", "repos_url": "https://api.github.com/users/corydolphin/repos", "events_url": "https://api.github.com/users/corydolphin/events{/privacy}", "received_events_url": "https://api.github.com/users/corydolphin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-03-27T21:40:47Z", "updated_at": "2014-07-30T07:03:54Z", "closed_at": "2014-07-30T07:03:54Z", "author_association": "OWNER", "active_lock_reason": null, "body": "Would anyone else find it useful to allow configuration of default parameters for all options?\n\nCurrently, CORS_ORIGINS is supported as a flask configuration option, would adding the other params be useful for others, or just add cruft? \n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/12", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/12/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/12/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/12", "id": 27634396, "node_id": "MDU6SXNzdWUyNzYzNDM5Ng==", "number": 12, "title": "Unable to Implement 'Content-Type' Header.", "user": {"login": "richardraseley", "id": 1807191, "node_id": "MDQ6VXNlcjE4MDcxOTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1807191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardraseley", "html_url": "https://github.com/richardraseley", "followers_url": "https://api.github.com/users/richardraseley/followers", "following_url": "https://api.github.com/users/richardraseley/following{/other_user}", "gists_url": "https://api.github.com/users/richardraseley/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardraseley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardraseley/subscriptions", "organizations_url": "https://api.github.com/users/richardraseley/orgs", "repos_url": "https://api.github.com/users/richardraseley/repos", "events_url": "https://api.github.com/users/richardraseley/events{/privacy}", "received_events_url": "https://api.github.com/users/richardraseley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-02-14T23:03:39Z", "updated_at": "2014-02-20T19:15:13Z", "closed_at": "2014-02-15T00:45:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using flask-cors 1.1.1 installed via pip, adding `@cross_origin(headers='Content-Type')` to a particular app route does not result in `Content-Type` being returned as part of `Access-Control-Allow-Headers`.\n\nResponse headers solely consist of the following:\n\n```\nHTTP/1.0 200 OK\nContent-Type: application/json\nContent-Length: 671\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Methods: GET, HEAD, OPTIONS, POST, PUT\nServer: Werkzeug/0.9.4 Python/2.6.6\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/corydolphin/flask-cors/issues/11", "repository_url": "https://api.github.com/repos/corydolphin/flask-cors", "labels_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/11/comments", "events_url": "https://api.github.com/repos/corydolphin/flask-cors/issues/11/events", "html_url": "https://github.com/corydolphin/flask-cors/issues/11", "id": 27628932, "node_id": "MDU6SXNzdWUyNzYyODkzMg==", "number": 11, "title": "Withdrawn", "user": {"login": "richardraseley", "id": 1807191, "node_id": "MDQ6VXNlcjE4MDcxOTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1807191?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardraseley", "html_url": "https://github.com/richardraseley", "followers_url": "https://api.github.com/users/richardraseley/followers", "following_url": "https://api.github.com/users/richardraseley/following{/other_user}", "gists_url": "https://api.github.com/users/richardraseley/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardraseley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardraseley/subscriptions", "organizations_url": "https://api.github.com/users/richardraseley/orgs", "repos_url": "https://api.github.com/users/richardraseley/repos", "events_url": "https://api.github.com/users/richardraseley/events{/privacy}", "received_events_url": "https://api.github.com/users/richardraseley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-02-14T22:10:49Z", "updated_at": "2014-02-14T23:44:51Z", "closed_at": "2014-02-14T22:18:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Withdrawn\n", "performed_via_github_app": null, "score": 1.0}]}