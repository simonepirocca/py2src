{"total_count": 7, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/googleapis/python-monitoring/issues/29", "repository_url": "https://api.github.com/repos/googleapis/python-monitoring", "labels_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/29/comments", "events_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/29/events", "html_url": "https://github.com/googleapis/python-monitoring/issues/29", "id": 621249032, "node_id": "MDU6SXNzdWU2MjEyNDkwMzI=", "number": 29, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814805347, "node_id": "MDU6TGFiZWwxODE0ODA1MzQ3", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/api:%20monitoring", "name": "api: monitoring", "color": "89948c", "default": false, "description": "Issues related to the Stackdriver Monitoring API."}, {"id": 1814805660, "node_id": "MDU6TGFiZWwxODE0ODA1NjYw", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-19T20:02:42Z", "updated_at": "2020-08-12T04:20:53Z", "closed_at": "2020-08-12T04:20:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #23 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-monitoring/issues/26", "repository_url": "https://api.github.com/repos/googleapis/python-monitoring", "labels_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/26/comments", "events_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/26/events", "html_url": "https://github.com/googleapis/python-monitoring/issues/26", "id": 620598330, "node_id": "MDU6SXNzdWU2MjA1OTgzMzA=", "number": 26, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814805347, "node_id": "MDU6TGFiZWwxODE0ODA1MzQ3", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/api:%20monitoring", "name": "api: monitoring", "color": "89948c", "default": false, "description": "Issues related to the Stackdriver Monitoring API."}, {"id": 1814805660, "node_id": "MDU6TGFiZWwxODE0ODA1NjYw", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-19T01:02:32Z", "updated_at": "2020-05-19T19:07:43Z", "closed_at": "2020-05-19T19:07:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #23 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-monitoring/issues/25", "repository_url": "https://api.github.com/repos/googleapis/python-monitoring", "labels_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/25/comments", "events_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/25/events", "html_url": "https://github.com/googleapis/python-monitoring/issues/25", "id": 617610623, "node_id": "MDU6SXNzdWU2MTc2MTA2MjM=", "number": 25, "title": "Warning: a recent release failed", "user": {"login": "failure-checker[bot]", "id": 58094317, "node_id": "MDM6Qm90NTgwOTQzMTc=", "avatar_url": "https://avatars2.githubusercontent.com/in/47470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/failure-checker%5Bbot%5D", "html_url": "https://github.com/apps/failure-checker", "followers_url": "https://api.github.com/users/failure-checker%5Bbot%5D/followers", "following_url": "https://api.github.com/users/failure-checker%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/failure-checker%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/failure-checker%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/failure-checker%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/failure-checker%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/failure-checker%5Bbot%5D/repos", "events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/failure-checker%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "labels": [{"id": 1814805347, "node_id": "MDU6TGFiZWwxODE0ODA1MzQ3", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/api:%20monitoring", "name": "api: monitoring", "color": "89948c", "default": false, "description": "Issues related to the Stackdriver Monitoring API."}, {"id": 1814805660, "node_id": "MDU6TGFiZWwxODE0ODA1NjYw", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/type:%20process", "name": "type: process", "color": "c5def5", "default": false, "description": "A process-releated concern. May include testing, release, or the like."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-13T17:02:45Z", "updated_at": "2020-05-19T00:32:40Z", "closed_at": "2020-05-19T00:32:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "The release PR #23 is still in a pending state after several hours", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-monitoring/issues/13", "repository_url": "https://api.github.com/repos/googleapis/python-monitoring", "labels_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/13/comments", "events_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/13/events", "html_url": "https://github.com/googleapis/python-monitoring/issues/13", "id": 603302691, "node_id": "MDU6SXNzdWU2MDMzMDI2OTE=", "number": 13, "title": "Error when using paging to read timeseries", "user": {"login": "ocervell", "id": 9629314, "node_id": "MDQ6VXNlcjk2MjkzMTQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/9629314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ocervell", "html_url": "https://github.com/ocervell", "followers_url": "https://api.github.com/users/ocervell/followers", "following_url": "https://api.github.com/users/ocervell/following{/other_user}", "gists_url": "https://api.github.com/users/ocervell/gists{/gist_id}", "starred_url": "https://api.github.com/users/ocervell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ocervell/subscriptions", "organizations_url": "https://api.github.com/users/ocervell/orgs", "repos_url": "https://api.github.com/users/ocervell/repos", "events_url": "https://api.github.com/users/ocervell/events{/privacy}", "received_events_url": "https://api.github.com/users/ocervell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814805347, "node_id": "MDU6TGFiZWwxODE0ODA1MzQ3", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/api:%20monitoring", "name": "api: monitoring", "color": "89948c", "default": false, "description": "Issues related to the Stackdriver Monitoring API."}, {"id": 1814805698, "node_id": "MDU6TGFiZWwxODE0ODA1Njk4", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814805617, "node_id": "MDU6TGFiZWwxODE0ODA1NjE3", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-20T14:56:16Z", "updated_at": "2020-04-21T21:02:06Z", "closed_at": "2020-04-21T21:02:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting the following error when using `list(timeseries_response)` to iterate over the pages in the response. The error happens only on big timeseries response containing lots of data.\r\n\r\nThe code I'm using is:\r\n```\r\nresponse = client.list_time_series(parent, filter, measurement_window, monitoring_v3.enums.ListTimeSeriesRequest.TimeSeriesView.FULL, aggregation)\r\ngood_ts = list(good_ts)\r\n```\r\n\r\nTraceback:\r\n```\r\n  File \"/usr/local/lib/python3.7/site-packages/slo_generator/backends/stackdriver.py\", line 68, in good_bad_ratio\r\n    good_ts = list(good_ts)\r\n  File \"/usr/local/lib/python3.7/site-packages/google/api_core/page_iterator.py\", line 212, in _items_iter\r\n    for page in self._page_iter(increment=False):\r\n  File \"/usr/local/lib/python3.7/site-packages/google/api_core/page_iterator.py\", line 243, in _page_iter\r\n    page = self._next_page()\r\n  File \"/usr/local/lib/python3.7/site-packages/google/api_core/page_iterator.py\", line 534, in _next_page\r\n    response = self._method(self._request)\r\n  File \"/usr/local/lib/python3.7/site-packages/google/api_core/gapic_v1/method.py\", line 143, in __call__\r\n    return wrapped_func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/google/api_core/retry.py\", line 286, in retry_wrapped_func\r\n    on_error=on_error,\r\n  File \"/usr/local/lib/python3.7/site-packages/google/api_core/retry.py\", line 206, in retry_target\r\n    last_exc,\r\n  File \"<string>\", line 3, in raise_from\r\ngoogle.api_core.exceptions.RetryError: Deadline of 600.0s exceeded while calling functools.partial(<function _wrap_unary_errors.<locals>.error_remapped_callable at 0x106da29e0>, filter: \"project=\\\"<ANONYMIZED>\\\" AND resource.type=\\\"generic_task\\\" AND metric.name=\\\"logging.googleapis.com/user/job_execution_completed\\\"\"\r\ninterval {\r\n  start_time {\r\n    seconds: 1586785806\r\n    nanos: 266461849\r\n  }\r\n  end_time {\r\n    seconds: 1587390606\r\n    nanos: 266461849\r\n  }\r\n}\r\naggregation {\r\n  alignment_period {\r\n    seconds: 604800\r\n  }\r\n  per_series_aligner: ALIGN_SUM\r\n  cross_series_reducer: REDUCE_SUM\r\n}\r\nname: \"projects/<ANONYMIZED>\"\r\n, metadata=[('x-goog-request-params', 'name=projects/<ANONYMIZED>'), ('x-goog-api-client', 'gl-python/3.7.5 grpc/1.27.2 gax/1.16.0 gapic/0.34.0')]), last exception: 504 Deadline Exceeded\r\nM100214:measure-slo-achievement 20011381$ \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-monitoring/issues/10", "repository_url": "https://api.github.com/repos/googleapis/python-monitoring", "labels_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/10/comments", "events_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/10/events", "html_url": "https://github.com/googleapis/python-monitoring/issues/10", "id": 599015564, "node_id": "MDU6SXNzdWU1OTkwMTU1NjQ=", "number": 10, "title": "Add \"not equal\" support to the query filter.", "user": {"login": "qingling128", "id": 5287526, "node_id": "MDQ6VXNlcjUyODc1MjY=", "avatar_url": "https://avatars1.githubusercontent.com/u/5287526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qingling128", "html_url": "https://github.com/qingling128", "followers_url": "https://api.github.com/users/qingling128/followers", "following_url": "https://api.github.com/users/qingling128/following{/other_user}", "gists_url": "https://api.github.com/users/qingling128/gists{/gist_id}", "starred_url": "https://api.github.com/users/qingling128/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qingling128/subscriptions", "organizations_url": "https://api.github.com/users/qingling128/orgs", "repos_url": "https://api.github.com/users/qingling128/repos", "events_url": "https://api.github.com/users/qingling128/events{/privacy}", "received_events_url": "https://api.github.com/users/qingling128/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814805347, "node_id": "MDU6TGFiZWwxODE0ODA1MzQ3", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/api:%20monitoring", "name": "api: monitoring", "color": "89948c", "default": false, "description": "Issues related to the Stackdriver Monitoring API."}, {"id": 1814805654, "node_id": "MDU6TGFiZWwxODE0ODA1NjU0", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/type:%20feature%20request", "name": "type: feature request", "color": "c5def5", "default": false, "description": "\u2018Nice-to-have\u2019 improvement, new feature or different behavior or design."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-13T17:20:23Z", "updated_at": "2020-08-20T01:02:55Z", "closed_at": "2020-08-20T01:02:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": " **Is your feature request related to a problem? Please describe.**\r\nRight now we can not filter query by something like `metric.label.response_code != 200`\r\n\r\n**Describe the solution you'd like**\r\nAdd \"not equal\" support to the query filter.\r\n\r\n**Describe alternatives you've considered**\r\nI can't find alternative to this.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-monitoring/issues/7", "repository_url": "https://api.github.com/repos/googleapis/python-monitoring", "labels_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/7/comments", "events_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/7/events", "html_url": "https://github.com/googleapis/python-monitoring/issues/7", "id": 579544431, "node_id": "MDU6SXNzdWU1Nzk1NDQ0MzE=", "number": 7, "title": "stackdriver 500 error when exporting timeseries to it", "user": {"login": "benm-stm", "id": 10233550, "node_id": "MDQ6VXNlcjEwMjMzNTUw", "avatar_url": "https://avatars0.githubusercontent.com/u/10233550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benm-stm", "html_url": "https://github.com/benm-stm", "followers_url": "https://api.github.com/users/benm-stm/followers", "following_url": "https://api.github.com/users/benm-stm/following{/other_user}", "gists_url": "https://api.github.com/users/benm-stm/gists{/gist_id}", "starred_url": "https://api.github.com/users/benm-stm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benm-stm/subscriptions", "organizations_url": "https://api.github.com/users/benm-stm/orgs", "repos_url": "https://api.github.com/users/benm-stm/repos", "events_url": "https://api.github.com/users/benm-stm/events{/privacy}", "received_events_url": "https://api.github.com/users/benm-stm/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814805347, "node_id": "MDU6TGFiZWwxODE0ODA1MzQ3", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/api:%20monitoring", "name": "api: monitoring", "color": "89948c", "default": false, "description": "Issues related to the Stackdriver Monitoring API."}, {"id": 1814806050, "node_id": "MDU6TGFiZWwxODE0ODA2MDUw", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/external", "name": "external", "color": "800080", "default": false, "description": "This issue is blocked on a bug with the actual product."}, {"id": 1814805698, "node_id": "MDU6TGFiZWwxODE0ODA1Njk4", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/priority:%20p2", "name": "priority: p2", "color": "fef2c0", "default": false, "description": "Lowest priority. Fix may not be included in next release."}, {"id": 1814805617, "node_id": "MDU6TGFiZWwxODE0ODA1NjE3", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": {"login": "busunkim96", "id": 8822365, "node_id": "MDQ6VXNlcjg4MjIzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8822365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/busunkim96", "html_url": "https://github.com/busunkim96", "followers_url": "https://api.github.com/users/busunkim96/followers", "following_url": "https://api.github.com/users/busunkim96/following{/other_user}", "gists_url": "https://api.github.com/users/busunkim96/gists{/gist_id}", "starred_url": "https://api.github.com/users/busunkim96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/busunkim96/subscriptions", "organizations_url": "https://api.github.com/users/busunkim96/orgs", "repos_url": "https://api.github.com/users/busunkim96/repos", "events_url": "https://api.github.com/users/busunkim96/events{/privacy}", "received_events_url": "https://api.github.com/users/busunkim96/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "busunkim96", "id": 8822365, "node_id": "MDQ6VXNlcjg4MjIzNjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/8822365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/busunkim96", "html_url": "https://github.com/busunkim96", "followers_url": "https://api.github.com/users/busunkim96/followers", "following_url": "https://api.github.com/users/busunkim96/following{/other_user}", "gists_url": "https://api.github.com/users/busunkim96/gists{/gist_id}", "starred_url": "https://api.github.com/users/busunkim96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/busunkim96/subscriptions", "organizations_url": "https://api.github.com/users/busunkim96/orgs", "repos_url": "https://api.github.com/users/busunkim96/repos", "events_url": "https://api.github.com/users/busunkim96/events{/privacy}", "received_events_url": "https://api.github.com/users/busunkim96/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-03-11T10:07:43Z", "updated_at": "2020-05-14T13:13:09Z", "closed_at": "2020-04-28T03:55:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "i'm using a python 3.7 cloud function to read entries from a pub/sub and stream metrics to stackdriver\r\n\r\ni use the lib google-cloud-monitoring 0.34.0  to export metrics to stackdriver\r\n\r\n#### Steps to reproduce\r\n\r\nsend metrics to exporters (in my case bigquery and stackdriver)\r\n\r\n```python\r\nimport logging\r\nimport time\r\nfrom google.cloud import monitoring_v3\r\nfrom exporters.base import Exporter\r\n\r\nLOGGER = logging.getLogger(__name__)\r\nDEFAULT_METRIC_TYPE = \"custom.googleapis.com/test/error_budget_burn_rate\"\r\nDEFAULT_METRIC_DESCRIPTION = (\"Speed at which the error budget for a given\"\r\n                              \"aggregation window is consumed\")\r\n\r\n\r\nclass StackdriverExporter(Exporter):\r\n    \"\"\"Stackdriver Monitoring exporter class.\"\"\"\r\n\r\n    def __init__(self):\r\n        self.client = monitoring_v3.MetricServiceClient()\r\n\r\n    def export(self, data, **config):\r\n        \"\"\"Export data to Stackdriver Monitoring.\r\n\r\n        Args:\r\n            data (dict): Data to send to Stackdriver Monitoring.\r\n            config (dict): Stackdriver Monitoring metric config.\r\n                project_id (str): Stackdriver host project id.\r\n                custom_metric_type (str): Custom metric type.\r\n                custom_metric_unit (str): Custom metric unit.\r\n\r\n        Returns:\r\n            object: Stackdriver Monitoring API result.\r\n        \"\"\"\r\n        self.create_metric_descriptor(data, **config)\r\n        self.create_timeseries(data, **config)\r\n\r\n    def create_timeseries(self, data, **config):\r\n        \"\"\"Create Stackdriver Monitoring timeseries.\r\n\r\n        Args:\r\n            data (dict): Data to send to Stackdriver Monitoring.\r\n            config (dict): Metric config.\r\n\r\n        Returns:\r\n            object: Metric descriptor.\r\n        \"\"\"\r\n        metric_type = DEFAULT_METRIC_TYPE\r\n        series = monitoring_v3.types.TimeSeries()\r\n        series.metric.type = config.get('metric_type', metric_type)\r\n\r\n        # Write timeseries metric labels.\r\n        series.metric.labels['timestamp_human'] = str(data['timestamp_human'])\r\n        series.metric.labels['error_budget_policy_step_name'] = str(\r\n            data['error_budget_policy_step_name'])\r\n        series.metric.labels['measurement_window_seconds'] = str(data['measurement_window_seconds'])\r\n        series.metric.labels['cluster_name'] = str(data['cluster_name'])\r\n        series.metric.labels['msg_vpn_name'] = str(data['msg_vpn_name'])\r\n        series.metric.labels['service_name'] = str(data['service_name'])\r\n        series.metric.labels['feature_name'] = str(data['feature_name'])\r\n        series.metric.labels['slo_name'] = str(data['slo_name'])\r\n        series.metric.labels['alerting_burn_rate_threshold'] = str(\r\n            data['alerting_burn_rate_threshold'])\r\n\r\n        # Use the generic resource 'global'.\r\n        series.resource.type = 'global'\r\n        series.resource.labels['project_id'] = str(config['project_id'])\r\n\r\n        # Create a new data point.\r\n        point = series.points.add()\r\n\r\n        # Define end point timestamp. (changed by CF timestamp to ingest all datas)\r\n        timestamp = time.time()\r\n        point.interval.end_time.seconds = int(timestamp)\r\n        point.interval.end_time.nanos = int(\r\n            (timestamp - point.interval.end_time.seconds) * 10**9)\r\n\r\n        # Set the metric value.\r\n        point.value.double_value = data['error_budget_burn_rate']\r\n\r\n        # Record the timeseries to Stackdriver Monitoring.\r\n        project = self.client.project_path(config['project_id'])\r\n        result = self.client.create_time_series(project, [series])\r\n        labels = series.metric.labels\r\n        LOGGER.debug(\r\n            f\"timestamp: {timestamp} burnrate: {point.value.double_value}\"\\\r\n            f\"{labels['service_name']}-{labels['feature_name']}-\"\\\r\n            f\"{labels['slo_name']}-{labels['error_budget_policy_step_name']}\")\r\n        return result\r\n\r\n    def create_metric_descriptor(self, data, **config):\r\n        \"\"\"Create Stackdriver Monitoring metric descriptor.\r\n\r\n        Args:\r\n            config (dict): Metric config.\r\n\r\n        Returns:\r\n            object: Metric descriptor.\r\n        \"\"\"\r\n        metric_type = DEFAULT_METRIC_TYPE\r\n        project = self.client.project_path(config['project_id'])\r\n        descriptor = monitoring_v3.types.MetricDescriptor()\r\n        descriptor.type = config.get('metric_type', metric_type)\r\n        descriptor.metric_kind = (\r\n            monitoring_v3.enums.MetricDescriptor.MetricKind.GAUGE)\r\n        descriptor.value_type = (\r\n            monitoring_v3.enums.MetricDescriptor.ValueType.DOUBLE)\r\n        descriptor.description = config.get('metric_description',\r\n                                            DEFAULT_METRIC_DESCRIPTION)\r\n        self.client.create_metric_descriptor(project, descriptor)\r\n        return descriptor\r\n\r\n```\r\n\r\n#### Stack trace\r\n```\r\nTraceback (most recent call last): File \"/env/local/lib/python3.7/site-packages/google/api_core/grpc_helpers.py\", line 57, in error_remapped_callable return callable_(*args, **kwargs) File \"/env/local/lib/python3.7/site-packages/grpc/_channel.py\", line 826, in __call__ return _end_unary_response_blocking(state, call, False, None) File \"/env/local/lib/python3.7/site-packages/grpc/_channel.py\", line 729, in _end_unary_response_blocking raise _InactiveRpcError(state) grpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with: status = StatusCode.INTERNAL details = \"One or more TimeSeries could not be written: An internal error occurred.: timeSeries[0]\" debug_error_string = \"{\"created\":\"@1583919882.548713353\",\"description\":\"Error received from peer ipv4:173.194.76.95:443\",\"file\":\"src/core/lib/surface/call.cc\",\"file_line\":1056,\"grpc_message\":\"One or more TimeSeries could not be written: An internal error occurred.: timeSeries[0]\",\"grpc_status\":13}\" > The above exception was the direct cause of the following exception: Traceback (most recent call last): File \"/env/local/lib/python3.7/site-packages/google/cloud/functions/worker.py\", line 383, in run_background_function _function_handler.invoke_user_function(event_object) File \"/env/local/lib/python3.7/site-packages/google/cloud/functions/worker.py\", line 217, in invoke_user_function return call_user_function(request_or_event) File \"/env/local/lib/python3.7/site-packages/google/cloud/functions/worker.py\", line 214, in call_user_function event_context.Context(**request_or_event.context)) File \"/user_code/main.py\", line 35, in main streamer(json.loads(base64.b64decode(event['data']).decode('utf-8')), slo_config) File \"/user_code/streamer.py\", line 29, in streamer export(data, exporters) File \"/user_code/streamer.py\", line 55, in export ret = exporter.export(data, **config) File \"/user_code/exporters/stackdriver.py\", line 49, in export self.create_timeseries(data, **config) File \"/user_code/exporters/stackdriver.py\", line 96, in create_timeseries result = self.client.create_time_series(project, [series]) File \"/env/local/lib/python3.7/site-packages/google/cloud/monitoring_v3/gapic/metric_service_client.py\", line 1039, in create_time_series request, retry=retry, timeout=timeout, metadata=metadata File \"/env/local/lib/python3.7/site-packages/google/api_core/gapic_v1/method.py\", line 143, in __call__ return wrapped_func(*args, **kwargs) File \"/env/local/lib/python3.7/site-packages/google/api_core/retry.py\", line 286, in retry_wrapped_func on_error=on_error, File \"/env/local/lib/python3.7/site-packages/google/api_core/retry.py\", line 184, in retry_target return target() File \"/env/local/lib/python3.7/site-packages/google/api_core/timeout.py\", line 214, in func_with_timeout return func(*args, **kwargs) File \"/env/local/lib/python3.7/site-packages/google/api_core/grpc_helpers.py\", line 59, in error_remapped_callable six.raise_from(exceptions.from_grpc_error(exc), exc) File \"<string>\", line 3, in raise_from google.api_core.exceptions.InternalServerError: 500 One or more TimeSeries could not be written: An internal error occurred.: timeSeries[0]\r\n```\r\n\r\nAfter various tests, removing the descriptor creation, seems to correct the issue !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/googleapis/python-monitoring/issues/5", "repository_url": "https://api.github.com/repos/googleapis/python-monitoring", "labels_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/5/comments", "events_url": "https://api.github.com/repos/googleapis/python-monitoring/issues/5/events", "html_url": "https://github.com/googleapis/python-monitoring/issues/5", "id": 568302887, "node_id": "MDU6SXNzdWU1NjgzMDI4ODc=", "number": 5, "title": "Synthesis failed for python-monitoring", "user": {"login": "yoshi-automation", "id": 44816363, "node_id": "MDQ6VXNlcjQ0ODE2MzYz", "avatar_url": "https://avatars1.githubusercontent.com/u/44816363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshi-automation", "html_url": "https://github.com/yoshi-automation", "followers_url": "https://api.github.com/users/yoshi-automation/followers", "following_url": "https://api.github.com/users/yoshi-automation/following{/other_user}", "gists_url": "https://api.github.com/users/yoshi-automation/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshi-automation/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshi-automation/subscriptions", "organizations_url": "https://api.github.com/users/yoshi-automation/orgs", "repos_url": "https://api.github.com/users/yoshi-automation/repos", "events_url": "https://api.github.com/users/yoshi-automation/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshi-automation/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1814805898, "node_id": "MDU6TGFiZWwxODE0ODA1ODk4", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/:rotating_light:", "name": ":rotating_light:", "color": "FFFFFF", "default": false, "description": "This issue needs some love."}, {"id": 1814805347, "node_id": "MDU6TGFiZWwxODE0ODA1MzQ3", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/api:%20monitoring", "name": "api: monitoring", "color": "89948c", "default": false, "description": "Issues related to the Stackdriver Monitoring API."}, {"id": 1859983748, "node_id": "MDU6TGFiZWwxODU5OTgzNzQ4", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/autosynth%20failure", "name": "autosynth failure", "color": "ededed", "default": false, "description": null}, {"id": 1814805741, "node_id": "MDU6TGFiZWwxODE0ODA1NzQx", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/priority:%20p1", "name": "priority: p1", "color": "ffa03e", "default": false, "description": "Medium priority. Will be fixed prior to next release."}, {"id": 1814805617, "node_id": "MDU6TGFiZWwxODE0ODA1NjE3", "url": "https://api.github.com/repos/googleapis/python-monitoring/labels/type:%20bug", "name": "type: bug", "color": "db4437", "default": false, "description": "Error or flaw in code with unintended results or allowing sub-optimal usage patterns."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-20T13:34:14Z", "updated_at": "2020-04-06T17:51:20Z", "closed_at": "2020-02-20T23:24:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello! Autosynth couldn't regenerate python-monitoring. :broken_heart:\n\nHere's the output from running `synth.py`:\n\n```\nCloning into 'working_repo'...\nSwitched to branch 'autosynth'\nRunning synthtool\n['/tmpfs/src/git/autosynth/env/bin/python3', '-m', 'synthtool', 'synth.py', '--']\nsynthtool > Executing /tmpfs/src/git/autosynth/working_repo/synth.py.\nOn branch autosynth\nnothing to commit, working tree clean\nHEAD detached at FETCH_HEAD\nnothing to commit, working tree clean\nsynthtool > Ensuring dependencies.\nsynthtool > Pulling artman image.\nlatest: Pulling from googleapis/artman\nDigest: sha256:6aec9c34db0e4be221cdaf6faba27bdc07cfea846808b3d3b964dfce3a9a0f9b\nStatus: Image is up to date for googleapis/artman:latest\nsynthtool > Cloning googleapis.\nsynthtool > Running generator for google/monitoring/artman_monitoring.yaml.\nsynthtool > Generated code into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3.\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/group_service.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/group_service.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/metric.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/metric.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/alert_service.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/alert_service.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/dropped_labels.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/dropped_labels.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/group.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/group.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/common.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/common.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/notification.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/notification.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/metric_service.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/metric_service.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/service.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/service.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/service_service.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/service_service.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/alert.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/alert.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/uptime_service.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/uptime_service.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/mutation_record.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/mutation_record.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/uptime.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/uptime.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/span_context.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/span_context.proto\nsynthtool > Copy: /home/kbuilder/.cache/synthtool/googleapis/google/monitoring/v3/notification_service.proto to /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto/notification_service.proto\nsynthtool > Placed proto files into /home/kbuilder/.cache/synthtool/googleapis/artman-genfiles/python/monitoring-v3/google/cloud/monitoring_v3/proto.\nsynthtool > Replaced 'def .*\\\\(([^\\\\)]+)\\n.*metadata=None\\\\):\\n\\\\s+\"\"\"(.*\\n)*?\\\\s+\"\"\"\\n' in google/cloud/monitoring_v3/gapic/metric_service_client.py.\nsynthtool > Replaced 'def .*\\\\(([^\\\\)]+)\\n.*metadata=None\\\\):\\n\\\\s+\"\"\"(.*\\n)*?\\\\s+\"\"\"\\n' in google/cloud/monitoring_v3/gapic/group_service_client.py.\nsynthtool > Replaced 'def .*\\\\(([^\\\\)]+)\\n.*metadata=None\\\\):\\n\\\\s+\"\"\"(.*\\n)*?\\\\s+\"\"\"\\n' in google/cloud/monitoring_v3/gapic/alert_policy_service_client.py.\nsynthtool > Replaced 'def .*\\\\(([^\\\\)]+)\\n.*metadata=None\\\\):\\n\\\\s+\"\"\"(.*\\n)*?\\\\s+\"\"\"\\n' in google/cloud/monitoring_v3/gapic/service_monitoring_service_client.py.\nsynthtool > Replaced 'def .*\\\\(([^\\\\)]+)\\n.*metadata=None\\\\):\\n\\\\s+\"\"\"(.*\\n)*?\\\\s+\"\"\"\\n' in google/cloud/monitoring_v3/gapic/notification_channel_service_client.py.\nsynthtool > Replaced 'def .*\\\\(([^\\\\)]+)\\n.*metadata=None\\\\):\\n\\\\s+\"\"\"(.*\\n)*?\\\\s+\"\"\"\\n' in google/cloud/monitoring_v3/gapic/uptime_check_service_client.py.\nsynthtool > Replaced '(^.*$\\\\n)*' in google/cloud/monitoring_v3/proto/common_pb2.py.\nsynthtool > No replacements made in google/cloud/monitoring_v3/gapic/alert_policy_service_client.py for pattern then a new `\\[CONDITION_ID\\]` is created.\n, maybe replacement is not longer needed?\nsynthtool > Replaced '                ::\\n\\n' in google/cloud/monitoring_v3/gapic/alert_policy_service_client.py.\nsynthtool > No replacements made in google/cloud/monitoring_v3/proto/metric_service_pb2.py for pattern ^(\\s+)have an ``id`` label:  ::      resource.type =\n.*, maybe replacement is not longer needed?\nsynthtool > Replaced 'from google.cloud.monitoring_v3.gapic import notification_channel_service_client\\n' in google/cloud/monitoring_v3/__init__.py.\nsynthtool > Replaced 'notification_channel_service_client.NotificationChannelServiceClient' in google/cloud/monitoring_v3/__init__.py.\n.coveragerc\n.flake8\n.github/CONTRIBUTING.md\n.github/ISSUE_TEMPLATE/bug_report.md\n.github/ISSUE_TEMPLATE/feature_request.md\n.github/ISSUE_TEMPLATE/support_request.md\n.github/PULL_REQUEST_TEMPLATE.md\n.github/release-please.yml\n.gitignore\n.kokoro/build.sh\n.kokoro/continuous/common.cfg\n.kokoro/continuous/continuous.cfg\n.kokoro/docs/common.cfg\n.kokoro/docs/docs.cfg\n.kokoro/presubmit/common.cfg\n.kokoro/presubmit/presubmit.cfg\n.kokoro/publish-docs.sh\n.kokoro/release.sh\n.kokoro/release/common.cfg\n.kokoro/release/release.cfg\n.kokoro/trampoline.sh\nCODE_OF_CONDUCT.md\nCONTRIBUTING.rst\nLICENSE\nMANIFEST.in\ndocs/_static/custom.css\ndocs/_templates/layout.html\ndocs/conf.py.j2\nnoxfile.py.j2\nrenovate.json\nsetup.cfg\nRunning session blacken\nCreating virtual environment (virtualenv) using python3.6 in .nox/blacken\npip install black==19.3b0\nError: pip is not installed into the virtualenv, it is located at /tmpfs/src/git/autosynth/env/bin/pip. Pass external=True into run() to explicitly allow this.\nSession blacken failed.\nsynthtool > Failed executing nox -s blacken:\n\nNone\nsynthtool > Wrote metadata to synth.metadata.\nTraceback (most recent call last):\n  File \"/home/kbuilder/.pyenv/versions/3.6.1/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/home/kbuilder/.pyenv/versions/3.6.1/lib/python3.6/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/synthtool/__main__.py\", line 102, in <module>\n    main()\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/click/core.py\", line 764, in __call__\n    return self.main(*args, **kwargs)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/click/core.py\", line 717, in main\n    rv = self.invoke(ctx)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/click/core.py\", line 956, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/click/core.py\", line 555, in invoke\n    return callback(*args, **kwargs)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/synthtool/__main__.py\", line 94, in main\n    spec.loader.exec_module(synth_module)  # type: ignore\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 205, in _call_with_frames_removed\n  File \"/tmpfs/src/git/autosynth/working_repo/synth.py\", line 99, in <module>\n    s.shell.run([\"nox\", \"-s\", \"blacken\"], hide_output=False)\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/synthtool/shell.py\", line 39, in run\n    raise exc\n  File \"/tmpfs/src/git/autosynth/env/lib/python3.6/site-packages/synthtool/shell.py\", line 33, in run\n    encoding=\"utf-8\",\n  File \"/home/kbuilder/.pyenv/versions/3.6.1/lib/python3.6/subprocess.py\", line 418, in run\n    output=stdout, stderr=stderr)\nsubprocess.CalledProcessError: Command '['nox', '-s', 'blacken']' returned non-zero exit status 1.\n\nSynthesis failed\n\n```\n\nGoogle internal developers can see the full log [here](https://sponge/bc296324-7867-4eae-a113-8090e6bcc834).\n", "performed_via_github_app": null, "score": 1.0}]}