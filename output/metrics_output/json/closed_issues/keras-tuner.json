{"total_count": 123, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/378", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/378/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/378/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/378", "id": 676767932, "node_id": "MDU6SXNzdWU2NzY3Njc5MzI=", "number": 378, "title": "best_hyperparameters output confusing -- a bug?", "user": {"login": "amjass12", "id": 33659783, "node_id": "MDQ6VXNlcjMzNjU5Nzgz", "avatar_url": "https://avatars1.githubusercontent.com/u/33659783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amjass12", "html_url": "https://github.com/amjass12", "followers_url": "https://api.github.com/users/amjass12/followers", "following_url": "https://api.github.com/users/amjass12/following{/other_user}", "gists_url": "https://api.github.com/users/amjass12/gists{/gist_id}", "starred_url": "https://api.github.com/users/amjass12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amjass12/subscriptions", "organizations_url": "https://api.github.com/users/amjass12/orgs", "repos_url": "https://api.github.com/users/amjass12/repos", "events_url": "https://api.github.com/users/amjass12/events{/privacy}", "received_events_url": "https://api.github.com/users/amjass12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-11T10:35:41Z", "updated_at": "2020-08-17T15:24:16Z", "closed_at": "2020-08-17T15:09:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all, \r\n\r\nI have a question regarding the `tuner.get_best_hyperparameters `output that is slightly confusing. I am using this output to carry out an independent training on the same parameters to do a 10 fold cross_val. After calling tuner.search as follows:\r\n\r\n```\r\ntuner.search(X_train.values, y_train,\r\n             epochs=200,\r\n             validation_split=0.1,\r\n             callbacks=[EarlyStopping(monitor='val_loss', patience=5)], shuffle=True)\r\n\r\n```\r\nI save the best model but also the corresponding best_parameters as follows:\r\n```\r\n\r\ntuner.results_summary()\r\nbest_model = tuner.get_best_models(1)[0]\r\n\r\nbest_hyperparameters = tuner.get_best_hyperparameters(1)[0]\r\nbestConfig=best_hyperparameters.get_config()\r\n\r\n```\r\nI then save the bestConfig as a text file.. this works fine, however, the optimal model contains extra information (layers?).. the summary for the best_model is:\r\n```\r\n\r\nModel: \"sequential\"\r\n_________________________________________________________________\r\nLayer (type)                 Output Shape              Param #   \r\n=================================================================\r\ndense (Dense)                (None, 832)               17278976  \r\n_________________________________________________________________\r\ndense_1 (Dense)              (None, 976)               813008    \r\n_________________________________________________________________\r\ndense_2 (Dense)              (None, 880)               859760    \r\n_________________________________________________________________\r\ndense_3 (Dense)              (None, 944)               831664    \r\n_________________________________________________________________\r\ndense_4 (Dense)              (None, 19)                17955     \r\n=================================================================\r\nTotal params: 19,801,363\r\nTrainable params: 19,801,363\r\nNon-trainable params: 0\r\n```\r\nThe output (part of) of the best parameters is as follows:\r\n\r\nvalues,{**'num_layers': 4, 'units_0': 832, 'units_1': 976, 'learning_rate': 0.0001, 'units_2': 880, 'units_3': 944, 'units_4': 864**, 'units_5': 352, 'units_6': 592, 'units_7': 432, 'units_8': 112, 'units_9': 320, 'units_10': 752, 'units_11': 496, 'units_12': 352, 'units_13': 528, 'units_14': 352, 'units_15': 800, 'units_16': 896, 'units_17': 656, 'units_18': 960}\r\n\r\nAs you can see the first units (0-3) are correct according to the best_model summary, and I am guessing that the learning rate is correct (the learning rate used in the model was 0.0001?)\r\n\r\nWhat I am unsure of is, what are the units after units_3? It is as if there were an additional set of layers in the model?\r\n\r\nI am sorry if i have missed something very obvious!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/373", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/373/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/373/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/373", "id": 673533279, "node_id": "MDU6SXNzdWU2NzM1MzMyNzk=", "number": 373, "title": "Using pretrained embeddings", "user": {"login": "fabero", "id": 4805823, "node_id": "MDQ6VXNlcjQ4MDU4MjM=", "avatar_url": "https://avatars1.githubusercontent.com/u/4805823?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabero", "html_url": "https://github.com/fabero", "followers_url": "https://api.github.com/users/fabero/followers", "following_url": "https://api.github.com/users/fabero/following{/other_user}", "gists_url": "https://api.github.com/users/fabero/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabero/subscriptions", "organizations_url": "https://api.github.com/users/fabero/orgs", "repos_url": "https://api.github.com/users/fabero/repos", "events_url": "https://api.github.com/users/fabero/events{/privacy}", "received_events_url": "https://api.github.com/users/fabero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-05T13:18:51Z", "updated_at": "2020-08-16T19:32:51Z", "closed_at": "2020-08-16T19:32:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI can't seem to find any method of passing pretrained embeddings to a model built using keras-tuner.\r\n\r\nIn original models that are built like this:\r\n\r\n```\r\ndef combined_models(vocab_size, embedding_dim, embedding_matrix, input_shape, output_shape):\r\n embedding_layer = Embedding(vocab_size, embedding_dim, weights=[embedding_matrix], input_length=input_shape, trainable=False)\r\n\r\n    sequence_input = Input(shape=(input_shape,), dtype='int32')\r\n    embedded_sequences = embedding_layer(sequence_input)\r\n    x = Conv1D(256, 2, activation='relu')(embedded_sequences)\r\n    x = Dropout(0.2)(x)\r\n    x = MaxPooling1D(2)(x)\r\n    x = Conv1D(256, 5, activation='relu')(x)\r\n    x = BatchNormalization()(x)\r\n    x = Dropout(0.5)(x)\r\n    x = Conv1D(128, 5, activation='relu')(x)\r\n    x = GlobalMaxPooling1D()(x)\r\n    x = Dense(128, activation='relu')(x)\r\n```\r\n\r\nHow would one pass the embedding_matrix through keras-tuner?\r\n\r\nI have looked into custom Tuners and Model classes, but havent been able to find a way to achieve this.\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/367", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/367/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/367/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/367/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/367", "id": 667030005, "node_id": "MDU6SXNzdWU2NjcwMzAwMDU=", "number": 367, "title": "Bayesian tuner can throw a \"ValueError: Input contains NaN, infinity or a value too large for dtype('float64').\" if previous trials went awry", "user": {"login": "ag-tcm", "id": 66845101, "node_id": "MDQ6VXNlcjY2ODQ1MTAx", "avatar_url": "https://avatars3.githubusercontent.com/u/66845101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ag-tcm", "html_url": "https://github.com/ag-tcm", "followers_url": "https://api.github.com/users/ag-tcm/followers", "following_url": "https://api.github.com/users/ag-tcm/following{/other_user}", "gists_url": "https://api.github.com/users/ag-tcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ag-tcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ag-tcm/subscriptions", "organizations_url": "https://api.github.com/users/ag-tcm/orgs", "repos_url": "https://api.github.com/users/ag-tcm/repos", "events_url": "https://api.github.com/users/ag-tcm/events{/privacy}", "received_events_url": "https://api.github.com/users/ag-tcm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-28T12:23:08Z", "updated_at": "2020-07-28T12:34:00Z", "closed_at": "2020-07-28T12:34:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "In some cases a trial might be searched which has \"really bad\" hyper parameters such that it produces an objective value that is non-finite. When the bayesian tuner attempts to fit gpr on a set of trials that includes this \"bad\" one, it will throw an error like so:\r\n```\r\n2020-07-28 03:03:25 [19684:19288] grpc._server._call_behavior(_server.py:445) ERROR: Exception calling application: Input contains NaN, infinity or a\r\nvalue too large for dtype('float64').\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\grpc\\_server.py\", line 435, in _call_behavior\r\n    response_or_iterator = behavior(argument, context)\r\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\kerastuner\\distribute\\oracle_chief.py\", line 44, in CreateTrial\r\n    trial = self.oracle.create_trial(request.tuner_id)\r\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\kerastuner\\engine\\oracle.py\", line 165, in create_trial\r\n    response = self._populate_space(trial_id)\r\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\kerastuner\\tuners\\bayesian.py\", line 112, in _populate_space\r\n    raise e\r\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\kerastuner\\tuners\\bayesian.py\", line 105, in _populate_space\r\n    self.gpr.fit(x, y)\r\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\sklearn\\gaussian_process\\_gpr.py\", line 190, in fit\r\n    ensure_2d=True, dtype=\"numeric\")\r\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\sklearn\\base.py\", line 432, in _validate_data\r\n    X, y = check_X_y(X, y, **check_params)\r\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\sklearn\\utils\\validation.py\", line 73, in inner_f\r\n    return f(**kwargs)\r\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\sklearn\\utils\\validation.py\", line 806, in check_X_y\r\n    ensure_2d=False, dtype=None)\r\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\sklearn\\utils\\validation.py\", line 73, in inner_f\r\n    return f(**kwargs)\r\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\sklearn\\utils\\validation.py\", line 646, in check_array\r\n    allow_nan=force_all_finite == 'allow-nan')\r\n  File \"C:\\Users\\User\\AppData\\Local\\Programs\\Python\\Python37\\lib\\site-packages\\sklearn\\utils\\validation.py\", line 100, in _assert_all_finite\r\n    msg_dtype if msg_dtype is not None else X.dtype)\r\nValueError: Input contains NaN, infinity or a value too large for dtype('float64').\r\n```\r\n\r\nThe fix is to remove any non-finite values from the trials before calling fit on gpr.\r\n\r\nbayesian.py (around line 103)\r\n```\r\n# Fit a GPR to the completed trials and return the predicted optimum values.\r\nx, y = self._vectorize_trials()\r\n\r\n#Remove trials with nan outcomes\r\nx = x[np.isfinite(y)]\r\ny = y[np.isfinite(y)]\r\n\r\ntry:\r\n\tself.gpr.fit(x, y)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/347", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/347/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/347/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/347/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/347", "id": 651926337, "node_id": "MDU6SXNzdWU2NTE5MjYzMzc=", "number": 347, "title": "BayesianOptimization does not allow for custom alpha & beta values", "user": {"login": "MariaPoliti", "id": 40510252, "node_id": "MDQ6VXNlcjQwNTEwMjUy", "avatar_url": "https://avatars2.githubusercontent.com/u/40510252?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MariaPoliti", "html_url": "https://github.com/MariaPoliti", "followers_url": "https://api.github.com/users/MariaPoliti/followers", "following_url": "https://api.github.com/users/MariaPoliti/following{/other_user}", "gists_url": "https://api.github.com/users/MariaPoliti/gists{/gist_id}", "starred_url": "https://api.github.com/users/MariaPoliti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MariaPoliti/subscriptions", "organizations_url": "https://api.github.com/users/MariaPoliti/orgs", "repos_url": "https://api.github.com/users/MariaPoliti/repos", "events_url": "https://api.github.com/users/MariaPoliti/events{/privacy}", "received_events_url": "https://api.github.com/users/MariaPoliti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-07T01:44:46Z", "updated_at": "2020-08-12T18:10:34Z", "closed_at": "2020-08-12T18:10:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying to use the `BayesianOptimization` search function and wanted to use user-defined values for alpha and beta. \r\nHowever, when values were passed as keyword arguments, the `multi_execution_tuner` produces error of \"__init__ got an unexpected keyword argument _'alpha'_ \"\r\n\r\nUpon analysis of the code, we found that the `BayesianOptimization` function passes all its argument but _alpha_ or _beta_ to the `multi_execution_tuner` function. \r\n\r\n[ Check build # 380 on the 'kt_issue' branch of the [repo] (https://github.com/EISy-as-Py/hardy/tree/kt_issue) ]\r\n\r\nThank you in advance for the help!  \r\n  ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/338", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/338/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/338/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/338", "id": 646636534, "node_id": "MDU6SXNzdWU2NDY2MzY1MzQ=", "number": 338, "title": "CV and training times - exponential growth ", "user": {"login": "deakkon", "id": 2361473, "node_id": "MDQ6VXNlcjIzNjE0NzM=", "avatar_url": "https://avatars2.githubusercontent.com/u/2361473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/deakkon", "html_url": "https://github.com/deakkon", "followers_url": "https://api.github.com/users/deakkon/followers", "following_url": "https://api.github.com/users/deakkon/following{/other_user}", "gists_url": "https://api.github.com/users/deakkon/gists{/gist_id}", "starred_url": "https://api.github.com/users/deakkon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/deakkon/subscriptions", "organizations_url": "https://api.github.com/users/deakkon/orgs", "repos_url": "https://api.github.com/users/deakkon/repos", "events_url": "https://api.github.com/users/deakkon/events{/privacy}", "received_events_url": "https://api.github.com/users/deakkon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-27T08:19:40Z", "updated_at": "2020-06-28T15:00:02Z", "closed_at": "2020-06-28T15:00:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\ngreat work and thank you for releasing this to the public. It elevates a lot of issues with manual fiddling with the model. \r\n\r\nI have an issue with training times when using it in a for loop, over CV folds. The training times over the first folds are approx. 1 hour (on a CPU; the times differ but the behavior I describe next is the same on a GPU). \r\n\r\nWhen it comes to the second (and any subsequent) fold, the training times increase dramatically. Its been almost an hour since the training on the 2nd fold was started and I still do not have the first trial summary. It does what it does eventually, but as you can imagine training over e.g. 10 folds is rather lengthy. Especially as I do not see any logical reason fur such behavior. I feel this has more to do with the for loop than what I iterate over? \r\n\r\nI have tried to debug it myself but alas to no avail. Could you suggest anything I could try/look at to mitigate this? It is odd behavior. I am usingTF2.1 (via tf.keras) and the latest version of the tuner. \r\n\r\nAny suggestions would be appreciated. \r\n\r\nHere are the relevant snippets in my code:\r\n\r\n        for split_index, split in self.get_splits(splits):\r\n            logger.info(\"Training on split {}/{}\".format(split_index + 1, len(splits)))\r\n            neural_model = self.build_neural_model()\r\n\r\n            # TRAIN DATA WRANGLING\r\n\r\n            #    TRAIN MODEL     #\r\n            tuner = RandomSearch(\r\n                hypermodel=neural_model.get_model,\r\n                objective=kerastuner.Objective(\"f1\", direction=\"max\"),\r\n                max_trials=self.training_parameters.max_trails,\r\n                executions_per_trial=self.training_parameters.executions_per_trail,\r\n                directory=\"reports/profiling/{}/{}/{}\".format(\r\n                    self.training_parameters.model_name,\r\n                    self.get_date_string(),\r\n                    rand_uuid\r\n                ),\r\n                project_name=\"split_{}\".format(split_index),\r\n                overwrite=True,\r\n                seed=42\r\n            )\r\n\r\n            tuner.search(\r\n                train_data,\r\n                train_targets,\r\n                batch_size=self.training_parameters.batch_size,\r\n                epochs=self.training_parameters.epochs,\r\n                verbose=0,\r\n                callbacks=neural_model.get_model_callbacks(\r\n                    model_name=self.training_parameters.model_name,\r\n                    optimization_value=\"f1\",\r\n                    validation_data=(\r\n                        test_data,\r\n                        test_targets,\r\n                    ),\r\n                    digits=None,\r\n                    verbose=0\r\n                ),\r\n                shuffle=True\r\n            )\r\n            # tuner.results_summary()\r\n            best_model = tuner.get_best_models()[0]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/336", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/336/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/336/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/336/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/336", "id": 644857323, "node_id": "MDU6SXNzdWU2NDQ4NTczMjM=", "number": 336, "title": "Unable to upgrade keras tuner to 1.0.2", "user": {"login": "robert-hoyt", "id": 45010139, "node_id": "MDQ6VXNlcjQ1MDEwMTM5", "avatar_url": "https://avatars1.githubusercontent.com/u/45010139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robert-hoyt", "html_url": "https://github.com/robert-hoyt", "followers_url": "https://api.github.com/users/robert-hoyt/followers", "following_url": "https://api.github.com/users/robert-hoyt/following{/other_user}", "gists_url": "https://api.github.com/users/robert-hoyt/gists{/gist_id}", "starred_url": "https://api.github.com/users/robert-hoyt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robert-hoyt/subscriptions", "organizations_url": "https://api.github.com/users/robert-hoyt/orgs", "repos_url": "https://api.github.com/users/robert-hoyt/repos", "events_url": "https://api.github.com/users/robert-hoyt/events{/privacy}", "received_events_url": "https://api.github.com/users/robert-hoyt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-24T19:12:27Z", "updated_at": "2020-06-24T20:13:41Z", "closed_at": "2020-06-24T20:13:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am attempting to try AutoKeras. I have it and TensorFlow installed, using a Jupyter Lab on my Mac. First, it told me keras tuner was not installed. I installed it successfully with pip install keras-tuner (version 1.0.1). When I run this code import autokeras as ak\r\nmodel = ak.ImageClassifier(max_trial = 100) it says I don't have the most recent version of keras tuner so directs me to\r\nthe command pip install git+https://github.com/keras-team/keras-tuner.git@1.0.2rc0#egg=keras-tuner-1.0.2rc0. This begins the install but then says requirement already satisfied so I can not proceed. Error message below\r\n\r\nCollecting keras-tuner-1.0.2rc0 from git+https://github.com/keras-team/keras-tuner.git@1.0.2rc0#egg=keras-tuner-1.0.2rc0\r\n  Cloning https://github.com/keras-team/keras-tuner.git (to revision 1.0.2rc0) to /private/var/folders/4c/zjb0c1753g70dgrrsb3xy6c80000gn/T/pip-install-0_kh3j9a/keras-tuner-1.0.2rc0\r\n  Running command git clone -q https://github.com/keras-team/keras-tuner.git /private/var/folders/4c/zjb0c1753g70dgrrsb3xy6c80000gn/T/pip-install-0_kh3j9a/keras-tuner-1.0.2rc0\r\n  Running command git checkout -q 5d16a5a9cd883fe6366d523a5e59b72cfefb7f77\r\n  WARNING: Generating metadata for package keras-tuner-1.0.2rc0 produced metadata for project name keras-tuner. Fix your #egg=keras-tuner-1.0.2rc0 fragments.\r\nRequirement already satisfied (use --upgrade to upgrade): keras-tuner from git+https://github.com/keras-team/keras-tuner.git@1.0.2rc0#egg=keras-tuner-1.0.2rc0 in /Applications/anaconda3/lib/python3.7/site-packages\r\nRequirement already satisfied: packaging in /Applications/anaconda3/lib/python3.7/site-packages (from keras-tuner) (19.2)\r\nRequirement already satisfied: future in /Applications/anaconda3/lib/python3.7/site-packages (from keras-tuner) (0.17.1)\r\nRequirement already satisfied: numpy in /Applications/anaconda3/lib/python3.7/site-packages (from keras-tuner) (1.17.2)\r\nRequirement already satisfied: tabulate in /Applications/anaconda3/lib/python3.7/site-packages (from keras-tuner) (0.8.7)\r\nRequirement already satisfied: terminaltables in /Applications/anaconda3/lib/python3.7/site-packages (from keras-tuner) (3.1.0)\r\nRequirement already satisfied: colorama in /Applications/anaconda3/lib/python3.7/site-packages (from keras-tuner) (0.4.1)\r\nRequirement already satisfied: tqdm in /Applications/anaconda3/lib/python3.7/site-packages (from keras-tuner) (4.36.1)\r\nRequirement already satisfied: requests in /Applications/anaconda3/lib/python3.7/site-packages (from keras-tuner) (2.22.0)\r\nRequirement already satisfied: scipy in /Applications/anaconda3/lib/python3.7/site-packages (from keras-tuner) (1.4.1)\r\nRequirement already satisfied: scikit-learn in /Applications/anaconda3/lib/python3.7/site-packages (from keras-tuner) (0.22)\r\nRequirement already satisfied: six in /Applications/anaconda3/lib/python3.7/site-packages (from packaging->keras-tuner) (1.12.0)\r\nRequirement already satisfied: pyparsing>=2.0.2 in /Applications/anaconda3/lib/python3.7/site-packages (from packaging->keras-tuner) (2.4.2)\r\nRequirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /Applications/anaconda3/lib/python3.7/site-packages (from requests->keras-tuner) (1.24.2)\r\nRequirement already satisfied: chardet<3.1.0,>=3.0.2 in /Applications/anaconda3/lib/python3.7/site-packages (from requests->keras-tuner) (3.0.4)\r\nRequirement already satisfied: certifi>=2017.4.17 in /Applications/anaconda3/lib/python3.7/site-packages (from requests->keras-tuner) (2019.9.11)\r\nRequirement already satisfied: idna<2.9,>=2.5 in /Applications/anaconda3/lib/python3.7/site-packages (from requests->keras-tuner) (2.8)\r\nRequirement already satisfied: joblib>=0.11 in /Applications/anaconda3/lib/python3.7/site-packages (from scikit-learn->keras-tuner) (0.13.2)\r\nBuilding wheels for collected packages: keras-tuner, keras-tuner\r\n  Building wheel for keras-tuner (setup.py) ... done\r\n  Created wheel for keras-tuner: filename=keras_tuner-1.0.2rc0-cp37-none-any.whl size=89059 sha256=1339bf79aec5df16acb5e0762b7ff3aa1b834c0d4021c5b0d4cc1f5aa79b7de4\r\n  Stored in directory: /private/var/folders/4c/zjb0c1753g70dgrrsb3xy6c80000gn/T/pip-ephem-wheel-cache-ujgjaue3/wheels/ab/97/20/917008aafbd47b823fb0bc43989739b1195c682036641a49d7\r\n  Building wheel for keras-tuner (setup.py) ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /Applications/anaconda3/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/private/var/folders/4c/zjb0c1753g70dgrrsb3xy6c80000gn/T/pip-install-0_kh3j9a/keras-tuner/setup.py'\"'\"'; __file__='\"'\"'/private/var/folders/4c/zjb0c1753g70dgrrsb3xy6c80000gn/T/pip-install-0_kh3j9a/keras-tuner/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' bdist_wheel -d /private/var/folders/4c/zjb0c1753g70dgrrsb3xy6c80000gn/T/pip-wheel-1ty5n8w6 --python-tag cp37\r\n       cwd: /private/var/folders/4c/zjb0c1753g70dgrrsb3xy6c80000gn/T/pip-install-0_kh3j9a/keras-tuner/\r\n  Complete output (5 lines):\r\n  Traceback (most recent call last):\r\n    File \"<string>\", line 1, in <module>\r\n    File \"/Applications/anaconda3/lib/python3.7/tokenize.py\", line 447, in open\r\n      buffer = _builtin_open(filename, 'rb')\r\n  FileNotFoundError: [Errno 2] No such file or directory: '/private/var/folders/4c/zjb0c1753g70dgrrsb3xy6c80000gn/T/pip-install-0_kh3j9a/keras-tuner/setup.py'\r\n  ----------------------------------------\r\n  ERROR: Failed building wheel for keras-tuner\r\n  Running setup.py clean for keras-tuner\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /Applications/anaconda3/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/private/var/folders/4c/zjb0c1753g70dgrrsb3xy6c80000gn/T/pip-install-0_kh3j9a/keras-tuner/setup.py'\"'\"'; __file__='\"'\"'/private/var/folders/4c/zjb0c1753g70dgrrsb3xy6c80000gn/T/pip-install-0_kh3j9a/keras-tuner/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' clean --all\r\n       cwd: /private/var/folders/4c/zjb0c1753g70dgrrsb3xy6c80000gn/T/pip-install-0_kh3j9a/keras-tuner\r\n  Complete output (5 lines):\r\n  Traceback (most recent call last):\r\n    File \"<string>\", line 1, in <module>\r\n    File \"/Applications/anaconda3/lib/python3.7/tokenize.py\", line 447, in open\r\n      buffer = _builtin_open(filename, 'rb')\r\n  FileNotFoundError: [Errno 2] No such file or directory: '/private/var/folders/4c/zjb0c1753g70dgrrsb3xy6c80000gn/T/pip-install-0_kh3j9a/keras-tuner/setup.py'\r\n  ----------------------------------------\r\n  ERROR: Failed cleaning build dir for keras-tuner\r\nSuccessfully built keras-tuner\r\nFailed to build keras-tuner\r\nNote: you may need to restart the kernel to use updated packages.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/335", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/335/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/335/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/335", "id": 644646508, "node_id": "MDU6SXNzdWU2NDQ2NDY1MDg=", "number": 335, "title": "Hyperparameter in Data?", "user": {"login": "dgrahn", "id": 394709, "node_id": "MDQ6VXNlcjM5NDcwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/394709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dgrahn", "html_url": "https://github.com/dgrahn", "followers_url": "https://api.github.com/users/dgrahn/followers", "following_url": "https://api.github.com/users/dgrahn/following{/other_user}", "gists_url": "https://api.github.com/users/dgrahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dgrahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dgrahn/subscriptions", "organizations_url": "https://api.github.com/users/dgrahn/orgs", "repos_url": "https://api.github.com/users/dgrahn/repos", "events_url": "https://api.github.com/users/dgrahn/events{/privacy}", "received_events_url": "https://api.github.com/users/dgrahn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-24T14:09:51Z", "updated_at": "2020-06-24T16:53:51Z", "closed_at": "2020-06-24T16:53:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "All,\r\n\r\nIt does not appear that keras-tuner support hyperparameters outside of the model. For instance, adjusting image augmentation hyperparams.\r\n\r\nIs this correct?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/333", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/333/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/333/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/333", "id": 643994891, "node_id": "MDU6SXNzdWU2NDM5OTQ4OTE=", "number": 333, "title": "HyperResNet compilation failure during tuner.search()", "user": {"login": "rroy09", "id": 42096686, "node_id": "MDQ6VXNlcjQyMDk2Njg2", "avatar_url": "https://avatars1.githubusercontent.com/u/42096686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rroy09", "html_url": "https://github.com/rroy09", "followers_url": "https://api.github.com/users/rroy09/followers", "following_url": "https://api.github.com/users/rroy09/following{/other_user}", "gists_url": "https://api.github.com/users/rroy09/gists{/gist_id}", "starred_url": "https://api.github.com/users/rroy09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rroy09/subscriptions", "organizations_url": "https://api.github.com/users/rroy09/orgs", "repos_url": "https://api.github.com/users/rroy09/repos", "events_url": "https://api.github.com/users/rroy09/events{/privacy}", "received_events_url": "https://api.github.com/users/rroy09/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-23T16:51:29Z", "updated_at": "2020-06-24T03:46:58Z", "closed_at": "2020-06-24T03:46:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/42096686/85431905-d0755780-b59f-11ea-9971-588bdc69cb95.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/330", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/330/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/330/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/330", "id": 643000822, "node_id": "MDU6SXNzdWU2NDMwMDA4MjI=", "number": 330, "title": "An example of Boolean hyperparameter for adding BatchNormalization()", "user": {"login": "rroy09", "id": 42096686, "node_id": "MDQ6VXNlcjQyMDk2Njg2", "avatar_url": "https://avatars1.githubusercontent.com/u/42096686?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rroy09", "html_url": "https://github.com/rroy09", "followers_url": "https://api.github.com/users/rroy09/followers", "following_url": "https://api.github.com/users/rroy09/following{/other_user}", "gists_url": "https://api.github.com/users/rroy09/gists{/gist_id}", "starred_url": "https://api.github.com/users/rroy09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rroy09/subscriptions", "organizations_url": "https://api.github.com/users/rroy09/orgs", "repos_url": "https://api.github.com/users/rroy09/repos", "events_url": "https://api.github.com/users/rroy09/events{/privacy}", "received_events_url": "https://api.github.com/users/rroy09/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-22T11:46:43Z", "updated_at": "2020-07-15T08:25:32Z", "closed_at": "2020-07-15T08:25:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can you share an example that can help to understand the use of hp.Boolean for adding or leaving BatchNormalization()? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/326", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/326/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/326/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/326/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/326", "id": 639930574, "node_id": "MDU6SXNzdWU2Mzk5MzA1NzQ=", "number": 326, "title": "Behavior of bayesian tuner when initial points have same score", "user": {"login": "yixingfu", "id": 19963109, "node_id": "MDQ6VXNlcjE5OTYzMTA5", "avatar_url": "https://avatars0.githubusercontent.com/u/19963109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yixingfu", "html_url": "https://github.com/yixingfu", "followers_url": "https://api.github.com/users/yixingfu/followers", "following_url": "https://api.github.com/users/yixingfu/following{/other_user}", "gists_url": "https://api.github.com/users/yixingfu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yixingfu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yixingfu/subscriptions", "organizations_url": "https://api.github.com/users/yixingfu/orgs", "repos_url": "https://api.github.com/users/yixingfu/repos", "events_url": "https://api.github.com/users/yixingfu/events{/privacy}", "received_events_url": "https://api.github.com/users/yixingfu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-16T19:49:48Z", "updated_at": "2020-08-11T18:26:45Z", "closed_at": "2020-08-11T18:26:45Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This test case `test_bayesian_oracle_with_zero_y` (https://github.com/keras-team/keras-tuner/blob/master/tests/kerastuner/tuners/bayesian_test.py#L51) fails not necessarily with y=0; but whenever the randomly chosen initial points have the same score. Having identical `y` makes normalization of `y` vector singular and produce NaN. \r\n\r\nThis should be a simple fix.  But what behavior should we expect when such situation happens? I can think of a few possibilities:\r\n1. Do one more random trial until the Gaussian regression works;\r\n2. Not normalizing y, either (a) for all cases or (b) whenever the singular situation happens;\r\n3. Perturb score slightly for the initial points to avoid identical scores. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/321", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/321/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/321/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/321", "id": 638073432, "node_id": "MDU6SXNzdWU2MzgwNzM0MzI=", "number": 321, "title": "Summary is showing inactive hyperparameters", "user": {"login": "yixingfu", "id": 19963109, "node_id": "MDQ6VXNlcjE5OTYzMTA5", "avatar_url": "https://avatars0.githubusercontent.com/u/19963109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yixingfu", "html_url": "https://github.com/yixingfu", "followers_url": "https://api.github.com/users/yixingfu/followers", "following_url": "https://api.github.com/users/yixingfu/following{/other_user}", "gists_url": "https://api.github.com/users/yixingfu/gists{/gist_id}", "starred_url": "https://api.github.com/users/yixingfu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yixingfu/subscriptions", "organizations_url": "https://api.github.com/users/yixingfu/orgs", "repos_url": "https://api.github.com/users/yixingfu/repos", "events_url": "https://api.github.com/users/yixingfu/events{/privacy}", "received_events_url": "https://api.github.com/users/yixingfu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-13T01:40:35Z", "updated_at": "2020-07-26T14:05:28Z", "closed_at": "2020-06-26T18:06:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Consider following example modified from base case in helloworld.py. By specifying conditional scope explicitly such that the hyperparameter is used iff it is active, I would expect the summary to correctly print out only relevant `units` hyperparameters.\r\n\r\n```\r\ndef build_model(hp):                                                                                                                                                                       \r\n    model = keras.Sequential()                                                                                                                                                             \r\n    model.add(layers.Flatten(input_shape=(28, 28)))                                                                                                                                        \r\n    min_layers = 2                                                                                                                                                                         \r\n    max_layers = 5                                                                                                                                                                         \r\n    for i in range(hp.Int('num_layers', min_layers, max_layers)):                                                                                                                          \r\n        with hp.conditional_scope('num_layers', list(range(i + 1, max_layers + 1))):                                                                                                       \r\n            model.add(layers.Dense(units=hp.Int('units_' + str(i), 32, 256, 32),                                                                                                           \r\n                                   activation='relu'))                                                                                                                                   \r\n    model.add(layers.Dense(10, activation='softmax'))                                                                                                                                      \r\n    model.compile(                                                                                                                                                                         \r\n        optimizer=keras.optimizers.Adam(1e-4),                                                                                                                                             \r\n        loss='sparse_categorical_crossentropy',                                                                                                                                            \r\n        metrics=['accuracy'])                                                                                                                                                              \r\n    return model                                                                                                                                                                           \r\n                                                                                                                                                                                           \r\n                                                                                                                                                                                           \r\ntuner = RandomSearch(                                                                                                                                                                      \r\n    build_model,                                                                                                                                                                           \r\n    objective='val_accuracy',                                                                                                                                                              \r\n    max_trials=10,                                                                                                                                                                         \r\n    executions_per_trial=3,                                                                                                                                                                \r\n    directory='test_dir')                                                                                                                                                                  \r\n                                                                                                                                                                                           \r\ntuner.search_space_summary()                                                                                                                                                               \r\n                                                                                                                                                                                           \r\ntuner.search(x=x,                                                                                                                                                                          \r\n             y=y,                                                                                                                                                                          \r\n             epochs=3,                                                                                                                                                                     \r\n             validation_data=(val_x, val_y))                                                                                                                                               \r\n                                                                                                                                                                                           \r\ntuner.results_summary()\r\n```\r\n\r\nHowever, I still get all hyperparameters created along the search on the summary. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/307", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/307/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/307/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/307/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/307", "id": 627345590, "node_id": "MDU6SXNzdWU2MjczNDU1OTA=", "number": 307, "title": "imbalanced dataset", "user": {"login": "misbahch6", "id": 22659356, "node_id": "MDQ6VXNlcjIyNjU5MzU2", "avatar_url": "https://avatars3.githubusercontent.com/u/22659356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/misbahch6", "html_url": "https://github.com/misbahch6", "followers_url": "https://api.github.com/users/misbahch6/followers", "following_url": "https://api.github.com/users/misbahch6/following{/other_user}", "gists_url": "https://api.github.com/users/misbahch6/gists{/gist_id}", "starred_url": "https://api.github.com/users/misbahch6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/misbahch6/subscriptions", "organizations_url": "https://api.github.com/users/misbahch6/orgs", "repos_url": "https://api.github.com/users/misbahch6/repos", "events_url": "https://api.github.com/users/misbahch6/events{/privacy}", "received_events_url": "https://api.github.com/users/misbahch6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-29T15:18:54Z", "updated_at": "2020-05-29T15:29:10Z", "closed_at": "2020-05-29T15:29:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "can i specify class weights in fit model when using tuner search for parameter optimizations ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/305", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/305/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/305/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/305", "id": 626795562, "node_id": "MDU6SXNzdWU2MjY3OTU1NjI=", "number": 305, "title": "Fixed hyperparameter treats True/False as 0/1", "user": {"login": "blakey22", "id": 12512422, "node_id": "MDQ6VXNlcjEyNTEyNDIy", "avatar_url": "https://avatars0.githubusercontent.com/u/12512422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blakey22", "html_url": "https://github.com/blakey22", "followers_url": "https://api.github.com/users/blakey22/followers", "following_url": "https://api.github.com/users/blakey22/following{/other_user}", "gists_url": "https://api.github.com/users/blakey22/gists{/gist_id}", "starred_url": "https://api.github.com/users/blakey22/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blakey22/subscriptions", "organizations_url": "https://api.github.com/users/blakey22/orgs", "repos_url": "https://api.github.com/users/blakey22/repos", "events_url": "https://api.github.com/users/blakey22/events{/privacy}", "received_events_url": "https://api.github.com/users/blakey22/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-28T20:32:25Z", "updated_at": "2020-06-25T23:34:50Z", "closed_at": "2020-06-25T23:34:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I found `Fixed` hyperparameter always converts a boolean value to an integer. It also happens while accessing `.values` fields.\r\n\r\n```python\r\nimport kerastuner as kt\r\n\r\nhp = kt.HyperParameters()\r\nfixed = hp.Fixed('fixed', True)\r\n\r\nassert fixed is True\r\nassert hp.values['fixed'] is True\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/300", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/300/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/300/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/300/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/300", "id": 620236735, "node_id": "MDU6SXNzdWU2MjAyMzY3MzU=", "number": 300, "title": "How can I manually load a model from a checkpoint?", "user": {"login": "phiwei", "id": 22448372, "node_id": "MDQ6VXNlcjIyNDQ4Mzcy", "avatar_url": "https://avatars0.githubusercontent.com/u/22448372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phiwei", "html_url": "https://github.com/phiwei", "followers_url": "https://api.github.com/users/phiwei/followers", "following_url": "https://api.github.com/users/phiwei/following{/other_user}", "gists_url": "https://api.github.com/users/phiwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/phiwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phiwei/subscriptions", "organizations_url": "https://api.github.com/users/phiwei/orgs", "repos_url": "https://api.github.com/users/phiwei/repos", "events_url": "https://api.github.com/users/phiwei/events{/privacy}", "received_events_url": "https://api.github.com/users/phiwei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-18T14:03:30Z", "updated_at": "2020-06-15T14:00:05Z", "closed_at": "2020-05-22T11:50:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "My checkpoint directories contain the following files:\r\n- checkpoint\r\n- checkpoint.data-00000-of-00002\r\n- checkpoint.data-00001-of-00002\r\n- checkpoint.index\r\n\r\nHow can I use these files to manually load the best-step-model?\r\n\r\nThanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/297", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/297/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/297/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/297/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/297", "id": 617970566, "node_id": "MDU6SXNzdWU2MTc5NzA1NjY=", "number": 297, "title": "Class weights not being implemented in tuner search", "user": {"login": "rmw362", "id": 65331476, "node_id": "MDQ6VXNlcjY1MzMxNDc2", "avatar_url": "https://avatars1.githubusercontent.com/u/65331476?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmw362", "html_url": "https://github.com/rmw362", "followers_url": "https://api.github.com/users/rmw362/followers", "following_url": "https://api.github.com/users/rmw362/following{/other_user}", "gists_url": "https://api.github.com/users/rmw362/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmw362/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmw362/subscriptions", "organizations_url": "https://api.github.com/users/rmw362/orgs", "repos_url": "https://api.github.com/users/rmw362/repos", "events_url": "https://api.github.com/users/rmw362/events{/privacy}", "received_events_url": "https://api.github.com/users/rmw362/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-14T06:49:00Z", "updated_at": "2020-05-18T07:44:35Z", "closed_at": "2020-05-18T07:44:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nThe search method for tuners does not appear to be respecting the class_weight argument. I have an imbalanced data set, which trains well when class_weights are passed as an argument using the fit method for Keras, but when using keras-tuner the model seems to converge quickly on predicting the negative class for all inputs (~71% of the input data is from the negative class).\r\n\r\nExample of my code is below. I confirmed that this behavior is equivalent to the class_weight argument being absent in Keras's fit method. \r\n\r\nI am running on tensorflow 2.0 backend (for CUDA compatibility issues on my workstation) if this is potentially the issue. \r\n\r\n```\r\nimport tensorflow as tf\r\nfrom tensorflow import keras\r\nimport vis\r\nimport cv2\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport os, shutil\r\nfrom tensorflow.keras import models\r\nfrom tensorflow.keras.models import Model\r\nfrom tensorflow.keras import layers\r\nfrom tensorflow.keras import optimizers\r\nfrom tensorflow.keras import callbacks\r\nfrom tensorflow.keras import backend as K\r\nfrom tensorflow.keras.applications import DenseNet121\r\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\r\nfrom tensorflow.keras.preprocessing import image\r\nfrom tensorflow.keras import regularizers\r\nfrom kerastuner.tuners import RandomSearch\r\n\r\nimagenet_mean = np.array([0.485, 0.456, 0.406])\r\nimagenet_std = np.array([0.229, 0.224, 0.225])\r\n\r\ndef preprocess (img):\r\n    img /= 255\r\n    centered = np.subtract(img, imagenet_mean)\r\n    standardized = np.divide(centered, imagenet_std)\r\n    return standardized \r\n    return img    \r\n\r\ntrain_datagen = ImageDataGenerator(\r\n                                   preprocessing_function=preprocess,\r\n                                   brightness_range=[0.9,1.1],\r\n                                   horizontal_flip=True\r\n                                                                            )\r\ntest_datagen = ImageDataGenerator(\r\n                                  preprocessing_function=preprocess\r\n                                                                            )\r\ntrain_generator = train_datagen.flow_from_directory('/My_dir_train/', \r\n                                                    target_size=(224, 224), \r\n                                                    class_mode= 'binary', \r\n                                                    color_mode='rgb', \r\n                                                    batch_size=50,\r\n                                                    interpolation ='lanczos'\r\n                                                    )\r\nvalidation_generator = test_datagen.flow_from_directory('/My_dir_val/', \r\n                                                        target_size=(224, 224), \r\n                                                        class_mode= 'binary',\r\n                                                        color_mode='rgb', \r\n                                                        batch_size=50,\r\n                                                        interpolation ='lanczos'\r\n                                                        )\r\n\r\ndef build_model(hp):\r\n    base_model = DenseNet121(weights=None, include_top=False, input_shape = (224,224,3))\r\n    x = base_model.output\r\n    x = layers.GlobalAveragePooling2D()(x)\r\n    predictions = layers.Dense(1, activation='sigmoid', name='last')(x)\r\n    model = Model(inputs=base_model.input, outputs=predictions)\r\n    optimizer = tf.keras.optimizers.SGD(\r\n            lr = hp.Choice('learning_rate', \r\n                           values=[1e-1, 1e-2, 1e-3, 1e-4]),\r\n            momentum = hp.Float('momentum',\r\n                      min_value=0.0, \r\n                      max_value=0.9,\r\n                                step=0.1),\r\n            nesterov = hp.Boolean('nesterov'),\r\n            decay = hp.Choice('decay',\r\n                             values=[1e-3,1e-4,1e-5,1e-6,1e-7]))\r\n    model.compile(\r\n        optimizer,\r\n        loss='binary_crossentropy',\r\n        metrics=['accuracy'])\r\n    return model\r\n\r\ntuner = RandomSearch(\r\n    build_model,\r\n    objective='val_loss',\r\n    max_trials=20,\r\n    executions_per_trial=3,\r\n    directory='/My_dir',\r\n    project_name='Tuner')\r\n\r\nclass_weights = {0: (5656/4030)/2,\r\n                1: (5656/1626)/2}\r\n\r\ntuner.search(train_generator,\r\n             epochs=10,\r\n             validation_data=validation_generator,\r\n            class_weight = class_weights) \r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/296", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/296/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/296/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/296", "id": 616923025, "node_id": "MDU6SXNzdWU2MTY5MjMwMjU=", "number": 296, "title": "Continuing tuning after invalid model created", "user": {"login": "danielfranklingithub", "id": 59347456, "node_id": "MDQ6VXNlcjU5MzQ3NDU2", "avatar_url": "https://avatars3.githubusercontent.com/u/59347456?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielfranklingithub", "html_url": "https://github.com/danielfranklingithub", "followers_url": "https://api.github.com/users/danielfranklingithub/followers", "following_url": "https://api.github.com/users/danielfranklingithub/following{/other_user}", "gists_url": "https://api.github.com/users/danielfranklingithub/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielfranklingithub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielfranklingithub/subscriptions", "organizations_url": "https://api.github.com/users/danielfranklingithub/orgs", "repos_url": "https://api.github.com/users/danielfranklingithub/repos", "events_url": "https://api.github.com/users/danielfranklingithub/events{/privacy}", "received_events_url": "https://api.github.com/users/danielfranklingithub/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T20:02:11Z", "updated_at": "2020-05-17T03:05:12Z", "closed_at": "2020-05-17T03:05:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nIs there a way to have keras-tuner continue a search halfway through if an invalid model was created? I'd like to search a hyperparameter space for a CNN with many convolutional layers that may or may not have pooling afterwards. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/282", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/282/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/282/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/282", "id": 610441950, "node_id": "MDU6SXNzdWU2MTA0NDE5NTA=", "number": 282, "title": "TypeError: Cannot convert 1.0 to EagerTensor of dtype int64", "user": {"login": "Palashio", "id": 35114859, "node_id": "MDQ6VXNlcjM1MTE0ODU5", "avatar_url": "https://avatars0.githubusercontent.com/u/35114859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Palashio", "html_url": "https://github.com/Palashio", "followers_url": "https://api.github.com/users/Palashio/followers", "following_url": "https://api.github.com/users/Palashio/following{/other_user}", "gists_url": "https://api.github.com/users/Palashio/gists{/gist_id}", "starred_url": "https://api.github.com/users/Palashio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Palashio/subscriptions", "organizations_url": "https://api.github.com/users/Palashio/orgs", "repos_url": "https://api.github.com/users/Palashio/repos", "events_url": "https://api.github.com/users/Palashio/events{/privacy}", "received_events_url": "https://api.github.com/users/Palashio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-30T22:55:28Z", "updated_at": "2020-05-01T05:13:48Z", "closed_at": "2020-05-01T05:13:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "Can't seem to feed my data to keras-tuner provided CNN model. This is the exact code provided from your cifar file in the examples directory. Please help me resolve this ASAP. \r\n\r\nCode to recreate:\r\n\r\n`    def build_model(hp):\r\n        inputs = tf.keras.Input(shape=(224, 224, 3))\r\n        x = inputs\r\n        for i in range(hp.Int('conv_blocks', 3, 5, default=3)):\r\n            filters = hp.Int('filters_' + str(i), 32, 256, step=32)\r\n            for _ in range(2):\r\n                x = tf.keras.layers.Convolution2D(\r\n                filters, kernel_size=(3, 3), padding='same')(x)\r\n                x = tf.keras.layers.BatchNormalization()(x)\r\n                x = tf.keras.layers.ReLU()(x)\r\n            if hp.Choice('pooling_' + str(i), ['avg', 'max']) == 'max':\r\n                x = tf.keras.layers.MaxPool2D()(x)\r\n            else:\r\n                x = tf.keras.layers.AvgPool2D()(x)\r\n        x = tf.keras.layers.GlobalAvgPool2D()(x)\r\n        x = tf.keras.layers.Dense(\r\n        hp.Int('hidden_size', 30, 100, step=10, default=50),\r\n        activation='relu')(x)\r\n        x = tf.keras.layers.Dropout(\r\n        hp.Float('dropout', 0, 0.5, step=0.1, default=0.5))(x)\r\n        outputs = tf.keras.layers.Dense(num_classes, activation='softmax')(x)\r\n        model = tf.keras.Model(inputs, outputs)\r\n        model.compile(\r\n        optimizer=tf.keras.optimizers.Adam(\r\n            hp.Float('learning_rate', 1e-4, 1e-2, sampling='log')),\r\n        loss='categorical_crossentropy',\r\n        metrics=['accuracy'])\r\n\r\n        return model\r\n\r\n    tuner = kt.Hyperband(\r\n        build_model,\r\n        objective='loss',\r\n        max_epochs=30,\r\n        hyperband_iterations=2)\r\n\r\n    print(X_train.shape)\r\n    print(y_train.shape)\r\n    tuner.search(X_train, y_train)`\r\n\r\nThe shapes for X_train and y_train are: \r\n\r\nX_train: (68, 224, 224, 3)\r\ny_train: (68, 2)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/281", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/281/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/281/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/281/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/281", "id": 608826159, "node_id": "MDU6SXNzdWU2MDg4MjYxNTk=", "number": 281, "title": "keras tuner for keras functional models", "user": {"login": "amirzlq5", "id": 38051970, "node_id": "MDQ6VXNlcjM4MDUxOTcw", "avatar_url": "https://avatars3.githubusercontent.com/u/38051970?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amirzlq5", "html_url": "https://github.com/amirzlq5", "followers_url": "https://api.github.com/users/amirzlq5/followers", "following_url": "https://api.github.com/users/amirzlq5/following{/other_user}", "gists_url": "https://api.github.com/users/amirzlq5/gists{/gist_id}", "starred_url": "https://api.github.com/users/amirzlq5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amirzlq5/subscriptions", "organizations_url": "https://api.github.com/users/amirzlq5/orgs", "repos_url": "https://api.github.com/users/amirzlq5/repos", "events_url": "https://api.github.com/users/amirzlq5/events{/privacy}", "received_events_url": "https://api.github.com/users/amirzlq5/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-29T07:03:23Z", "updated_at": "2020-05-28T16:42:10Z", "closed_at": "2020-05-28T16:42:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to use keras tuner in keras functional models?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/280", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/280/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/280/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/280", "id": 606908368, "node_id": "MDU6SXNzdWU2MDY5MDgzNjg=", "number": 280, "title": "Dynamic number of Layers", "user": {"login": "acegilz", "id": 4284362, "node_id": "MDQ6VXNlcjQyODQzNjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/4284362?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acegilz", "html_url": "https://github.com/acegilz", "followers_url": "https://api.github.com/users/acegilz/followers", "following_url": "https://api.github.com/users/acegilz/following{/other_user}", "gists_url": "https://api.github.com/users/acegilz/gists{/gist_id}", "starred_url": "https://api.github.com/users/acegilz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acegilz/subscriptions", "organizations_url": "https://api.github.com/users/acegilz/orgs", "repos_url": "https://api.github.com/users/acegilz/repos", "events_url": "https://api.github.com/users/acegilz/events{/privacy}", "received_events_url": "https://api.github.com/users/acegilz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-26T03:29:56Z", "updated_at": "2020-04-28T22:26:09Z", "closed_at": "2020-04-28T22:26:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to optimise a network composed by multiple LSTM layers, using the following code:\r\n\r\n```python\r\ndef build_model(hp):\r\n    model = Sequential()\r\n\r\n    layers = hp.Int(\"n_layers\",0,3)\r\n       \r\n    if layers == 0:\r\n        model.add(LSTM(hp.Int(f\"layer_first\",32,256,32), input_shape=(train_x.shape[1:])))\r\n    else:\r\n        model.add(LSTM(hp.Int(f\"layer_first\",32,256,32), input_shape=(train_x.shape[1:]), return_sequences=True))\r\n        \r\n    model.add(Dropout(hp.Float('dropout_first',0,0.5,0.1)))\r\n    model.add(BatchNormalization())\r\n\r\n    for i in range(layers):\r\n\r\n        if len(range(layers)) > i+1:\r\n            model.add(LSTM(hp.Int(f\"layer_{i}\",32,256,32), return_sequences=True))\r\n        else:\r\n            model.add(LSTM(hp.Int(f\"layer_{i}\",32,256,32)))\r\n                      \r\n        model.add(Dropout(hp.Float(f\"dropout_{i}\",0,0.5,0.1)))\r\n        model.add(BatchNormalization())\r\n        \r\n \r\n\r\n    model.add(Dense(hp.Int(f\"relu_neurons\",32,256,32), activation='relu'))\r\n    model.add(Dropout(hp.Float('relu_dropout',0,0.5,0.1)))\r\n\r\n    model.add(Dense(2, activation='softmax'))\r\n\r\n    opt = tf.keras.optimizers.Adam(lr=hp.Float('learning_rate', 1e-4, 1e-2, sampling='log'), decay=1e-6)\r\n\r\n    # Compile model\r\n    model.compile(\r\n        loss='sparse_categorical_crossentropy',\r\n        optimizer=opt,\r\n        metrics=['accuracy']\r\n    )\r\n\r\n    return model\r\n```\r\n\r\nOutput:\r\n<img width=\"334\" alt=\"Screenshot 2020-04-26 04 16 53\" src=\"https://user-images.githubusercontent.com/4284362/80296773-a78a3f00-8775-11ea-9d4f-0525ca008b4a.png\">\r\n\r\n\r\nThe problem I have is that it is only defining the weights for layer_0 and layer_1, when there are more layers (n_layers=3 in case of attached summary).\r\n\r\nI was expecting layer_2, and layer_3 to also be defined and displayed on the summary results. What values did it assume for those in this trial?? \r\n\r\nThe same layer_0 and layer_1 are displayed on trials where no additional lstm layers exist (n_layers = 0).\r\n\r\nAnother question I have is, is this the more optimised way of handling lstm layers (return_sequences=True)? \r\nI find this approach very messy (checking the dimension of layers), but was the only way I found to put this working.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/275", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/275/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/275/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/275", "id": 598047229, "node_id": "MDU6SXNzdWU1OTgwNDcyMjk=", "number": 275, "title": "how to insantiate `hp` in keras tuner", "user": {"login": "ramtruststamp", "id": 62289794, "node_id": "MDQ6VXNlcjYyMjg5Nzk0", "avatar_url": "https://avatars1.githubusercontent.com/u/62289794?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ramtruststamp", "html_url": "https://github.com/ramtruststamp", "followers_url": "https://api.github.com/users/ramtruststamp/followers", "following_url": "https://api.github.com/users/ramtruststamp/following{/other_user}", "gists_url": "https://api.github.com/users/ramtruststamp/gists{/gist_id}", "starred_url": "https://api.github.com/users/ramtruststamp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ramtruststamp/subscriptions", "organizations_url": "https://api.github.com/users/ramtruststamp/orgs", "repos_url": "https://api.github.com/users/ramtruststamp/repos", "events_url": "https://api.github.com/users/ramtruststamp/events{/privacy}", "received_events_url": "https://api.github.com/users/ramtruststamp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-10T19:08:12Z", "updated_at": "2020-04-10T19:11:38Z", "closed_at": "2020-04-10T19:10:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/274", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/274/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/274/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/274", "id": 597527962, "node_id": "MDU6SXNzdWU1OTc1Mjc5NjI=", "number": 274, "title": "Tuning input data pipeline built with tf.data", "user": {"login": "haifeng-jin", "id": 5476582, "node_id": "MDQ6VXNlcjU0NzY1ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5476582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haifeng-jin", "html_url": "https://github.com/haifeng-jin", "followers_url": "https://api.github.com/users/haifeng-jin/followers", "following_url": "https://api.github.com/users/haifeng-jin/following{/other_user}", "gists_url": "https://api.github.com/users/haifeng-jin/gists{/gist_id}", "starred_url": "https://api.github.com/users/haifeng-jin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haifeng-jin/subscriptions", "organizations_url": "https://api.github.com/users/haifeng-jin/orgs", "repos_url": "https://api.github.com/users/haifeng-jin/repos", "events_url": "https://api.github.com/users/haifeng-jin/events{/privacy}", "received_events_url": "https://api.github.com/users/haifeng-jin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-09T20:17:12Z", "updated_at": "2020-06-26T01:03:16Z", "closed_at": "2020-04-10T00:04:06Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "To support searching the tf.data input pipeline,\r\nI propose a workflow as shown in the following code.\r\n\r\n```python\r\nclass MyDataPipeline(HyperPipeline):\r\n  def build(self, hp, x, y=None, validation_data=None):\r\n    if isinstance(x, np.array):\r\n      x = tf.data.Dataset.from_tensor_slices(x)\r\n    x = x.map(func1)\r\n    x = x.map(func2)\r\n    return x\r\n\r\ntuner = RandomSearch(hypermodel=MyHyperModel, hyperpipeline=MyDataPipeline, ...)\r\n```\r\n\r\nOne use case of this feature would be people want to search how to slice the timeseries data before feeding into the neural network, which cannot be done with Keras preprocessing layers since it changes the number of instances in the dataset.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/271", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/271/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/271/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/271/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/271", "id": 593683150, "node_id": "MDU6SXNzdWU1OTM2ODMxNTA=", "number": 271, "title": "What is the best way to accomplish: historys = tuner.search() just like history = model.fit()", "user": {"login": "ryq99", "id": 29682534, "node_id": "MDQ6VXNlcjI5NjgyNTM0", "avatar_url": "https://avatars1.githubusercontent.com/u/29682534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryq99", "html_url": "https://github.com/ryq99", "followers_url": "https://api.github.com/users/ryq99/followers", "following_url": "https://api.github.com/users/ryq99/following{/other_user}", "gists_url": "https://api.github.com/users/ryq99/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryq99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryq99/subscriptions", "organizations_url": "https://api.github.com/users/ryq99/orgs", "repos_url": "https://api.github.com/users/ryq99/repos", "events_url": "https://api.github.com/users/ryq99/events{/privacy}", "received_events_url": "https://api.github.com/users/ryq99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-03T23:01:39Z", "updated_at": "2020-04-20T15:30:56Z", "closed_at": "2020-04-20T15:30:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's a follow up from issue #120, Extracting history from best trained model and viewing progress. \r\n\r\nI want to get the history for each model so that I can create epochs vs. train/val loss plots. In Keras Tuner document, it says as follows:\r\n![image](https://user-images.githubusercontent.com/29682534/78411437-7ed2b780-75c4-11ea-8119-182f39d4aa1e.png)\r\nI'm wondering how can I get them?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/267", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/267/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/267/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/267/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/267", "id": 591923797, "node_id": "MDU6SXNzdWU1OTE5MjM3OTc=", "number": 267, "title": "Is 'validation_split' implemented", "user": {"login": "amjass12", "id": 33659783, "node_id": "MDQ6VXNlcjMzNjU5Nzgz", "avatar_url": "https://avatars1.githubusercontent.com/u/33659783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amjass12", "html_url": "https://github.com/amjass12", "followers_url": "https://api.github.com/users/amjass12/followers", "following_url": "https://api.github.com/users/amjass12/following{/other_user}", "gists_url": "https://api.github.com/users/amjass12/gists{/gist_id}", "starred_url": "https://api.github.com/users/amjass12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amjass12/subscriptions", "organizations_url": "https://api.github.com/users/amjass12/orgs", "repos_url": "https://api.github.com/users/amjass12/repos", "events_url": "https://api.github.com/users/amjass12/events{/privacy}", "received_events_url": "https://api.github.com/users/amjass12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-01T13:38:11Z", "updated_at": "2020-04-03T08:57:43Z", "closed_at": "2020-04-03T08:57:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all, \r\n\r\nI am just about to run a HP for a couple models i am building. I just want to confirm as I haven't found this anywhere, either on the tutorial page or other documentation present if the'validation_split' argument is present in the tuner.search function for fitting a model? or if X_val and y_val explicitly have to be implemented?\r\n\r\nthe code for tuner.search I am using is as follows::\r\n\r\n```\r\n\r\ntuner.search(X_train.values, y_train,\r\n             epochs=200,\r\n             validation_split=0.1,\r\n             callbacks=[EarlyStopping(monitor='val_loss', patience=5)], shuffle=True)\r\n\r\n```\r\nSo the question is, does validation split automatically split the x and y_train data into a validation by 10%?\r\n\r\nrunning this code suggests that it does indeed as validation loss and val_acc are present during training but just want to confirm as I havent see this documented anywere. \r\n\r\nmany thanks!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/261", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/261/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/261/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/261", "id": 586337449, "node_id": "MDU6SXNzdWU1ODYzMzc0NDk=", "number": 261, "title": "Trial summary: Best step always zero - impact on checkpoints?", "user": {"login": "phiwei", "id": 22448372, "node_id": "MDQ6VXNlcjIyNDQ4Mzcy", "avatar_url": "https://avatars0.githubusercontent.com/u/22448372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phiwei", "html_url": "https://github.com/phiwei", "followers_url": "https://api.github.com/users/phiwei/followers", "following_url": "https://api.github.com/users/phiwei/following{/other_user}", "gists_url": "https://api.github.com/users/phiwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/phiwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phiwei/subscriptions", "organizations_url": "https://api.github.com/users/phiwei/orgs", "repos_url": "https://api.github.com/users/phiwei/repos", "events_url": "https://api.github.com/users/phiwei/events{/privacy}", "received_events_url": "https://api.github.com/users/phiwei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-23T16:24:39Z", "updated_at": "2020-04-17T14:42:00Z", "closed_at": "2020-04-17T14:42:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI noticed that in the trial summary, the \"Best step\" is always 0. This happens both for my own code as well as if I run any case from the Hello world example (https://keras-team.github.io/keras-tuner/examples/helloworld/)\r\n\r\nYou mention that this is expected behaviour in this issue: #164 \r\n\r\nWhat implications does this have regarding checkpoints? I noticed that only a checkpoint folder called \"epoch_0\" is created, independent of the number of epochs that the models run through and independent of whether there is better objective scores in a later epoch. Does that mean that only a checkpoint for the first epoch is saved? Or is the checkpoint of the best model saved in the epoch_0 folder?\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/258", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/258/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/258/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/258", "id": 585654157, "node_id": "MDU6SXNzdWU1ODU2NTQxNTc=", "number": 258, "title": "UnicodeDecodeError for hello-world example of keras-tuner", "user": {"login": "tinyxuyan", "id": 44150841, "node_id": "MDQ6VXNlcjQ0MTUwODQx", "avatar_url": "https://avatars1.githubusercontent.com/u/44150841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinyxuyan", "html_url": "https://github.com/tinyxuyan", "followers_url": "https://api.github.com/users/tinyxuyan/followers", "following_url": "https://api.github.com/users/tinyxuyan/following{/other_user}", "gists_url": "https://api.github.com/users/tinyxuyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinyxuyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinyxuyan/subscriptions", "organizations_url": "https://api.github.com/users/tinyxuyan/orgs", "repos_url": "https://api.github.com/users/tinyxuyan/repos", "events_url": "https://api.github.com/users/tinyxuyan/events{/privacy}", "received_events_url": "https://api.github.com/users/tinyxuyan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-22T06:16:30Z", "updated_at": "2020-05-25T14:46:59Z", "closed_at": "2020-05-25T14:46:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I copy the hello-world example of keras-tuner and run in the env (tensorflow2.1.0 and python 3.7) directly in jupyter notebook, I get the following error: \r\n```\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xd5 in position 246: invalid continuation byte\r\n```\r\nDoes it mean there  is some issues about decoding mnist dataset ? I am not sure what to do next.\r\n\r\nThe detailed output of error is:\r\n```\r\nSearch space summary\r\n|-Default search space size: 4\r\nnum_layers (Int)\r\n|-default: None\r\n|-max_value: 20\r\n|-min_value: 2\r\n|-sampling: None\r\n|-step: 1\r\nunits_0 (Int)\r\n|-default: None\r\n|-max_value: 512\r\n|-min_value: 32\r\n|-sampling: None\r\n|-step: 32\r\nunits_1 (Int)\r\n|-default: None\r\n|-max_value: 512\r\n|-min_value: 32\r\n|-sampling: None\r\n|-step: 32\r\nlearning_rate (Choice)\r\n|-default: 0.01\r\n|-ordered: True\r\n|-values: [0.01, 0.001, 0.0001]\r\nTrain on 10000 samples, validate on 10000 samples\r\nEpoch 1/3\r\n 9728/10000 [============================>.] - ETA: 6:52 - loss: 2.3025 - accuracy: 0.06 - ETA: 41s - loss: 2.3024 - accuracy: 0.1063 - ETA: 20s - loss: 2.3023 - accuracy: 0.123 - ETA: 13s - loss: 2.3022 - accuracy: 0.120 - ETA: 10s - loss: 2.3020 - accuracy: 0.118 - ETA: 8s - loss: 2.3016 - accuracy: 0.116 - ETA: 7s - loss: 2.3010 - accuracy: 0.13 - ETA: 5s - loss: 2.2998 - accuracy: 0.14 - ETA: 5s - loss: 2.2990 - accuracy: 0.15 - ETA: 4s - loss: 2.2973 - accuracy: 0.16 - ETA: 4s - loss: 2.2948 - accuracy: 0.17 - ETA: 3s - loss: 2.2912 - accuracy: 0.17 - ETA: 3s - loss: 2.2857 - accuracy: 0.17 - ETA: 3s - loss: 2.2786 - accuracy: 0.17 - ETA: 2s - loss: 2.2694 - accuracy: 0.18 - ETA: 2s - loss: 2.2569 - accuracy: 0.18 - ETA: 2s - loss: 2.2410 - accuracy: 0.18 - ETA: 2s - loss: 2.2215 - accuracy: 0.18 - ETA: 2s - loss: 2.2035 - accuracy: 0.19 - ETA: 1s - loss: 2.1845 - accuracy: 0.20 - ETA: 1s - loss: 2.1661 - accuracy: 0.20 - ETA: 1s - loss: 2.1501 - accuracy: 0.21 - ETA: 1s - loss: 2.1369 - accuracy: 0.21 - ETA: 1s - loss: 2.1220 - accuracy: 0.21 - ETA: 1s - loss: 2.1086 - accuracy: 0.21 - ETA: 0s - loss: 2.0918 - accuracy: 0.22 - ETA: 0s - loss: 2.0780 - accuracy: 0.22 - ETA: 0s - loss: 2.0627 - accuracy: 0.23 - ETA: 0s - loss: 2.0492 - accuracy: 0.23 - ETA: 0s - loss: 2.0354 - accuracy: 0.24 - ETA: 0s - loss: 2.0236 - accuracy: 0.24 - ETA: 0s - loss: 2.0121 - accuracy: 0.24 - ETA: 0s - loss: 2.0014 - accuracy: 0.2521\r\n---------------------------------------------------------------------------\r\n_FallbackException                        Traceback (most recent call last)\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\ops\\gen_io_ops.py in save_v2(prefix, tensor_names, shape_and_slices, tensors, name)\r\n   1700         _ctx._context_handle, tld.device_name, \"SaveV2\", name,\r\n-> 1701         tld.op_callbacks, prefix, tensor_names, shape_and_slices, tensors)\r\n   1702       return _result\r\n\r\n_FallbackException: This function does not handle the case of the path where all inputs are not already EagerTensors.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nUnicodeDecodeError                        Traceback (most recent call last)\r\n<ipython-input-3-cd4a152dd45c> in <module>\r\n     33              y=y,\r\n     34              epochs=3,\r\n---> 35              validation_data=(val_x, val_y))\r\n     36 \r\n     37 tuner.results_summary()\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\kerastuner\\engine\\base_tuner.py in search(self, *fit_args, **fit_kwargs)\r\n    128 \r\n    129             self.on_trial_begin(trial)\r\n--> 130             self.run_trial(trial, *fit_args, **fit_kwargs)\r\n    131             self.on_trial_end(trial)\r\n    132         self.on_search_end()\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\kerastuner\\engine\\multi_execution_tuner.py in run_trial(self, trial, *fit_args, **fit_kwargs)\r\n     94 \r\n     95             model = self.hypermodel.build(trial.hyperparameters)\r\n---> 96             history = model.fit(*fit_args, **copied_fit_kwargs)\r\n     97             for metric, epoch_values in history.history.items():\r\n     98                 if self.oracle.objective.direction == 'min':\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_freq, max_queue_size, workers, use_multiprocessing, **kwargs)\r\n    817         max_queue_size=max_queue_size,\r\n    818         workers=workers,\r\n--> 819         use_multiprocessing=use_multiprocessing)\r\n    820 \r\n    821   def evaluate(self,\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training_v2.py in fit(self, model, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_freq, max_queue_size, workers, use_multiprocessing, **kwargs)\r\n    395                       total_epochs=1)\r\n    396                   cbks.make_logs(model, epoch_logs, eval_result, ModeKeys.TEST,\r\n--> 397                                  prefix='val_')\r\n    398 \r\n    399     return model.history\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\contextlib.py in __exit__(self, type, value, traceback)\r\n    117         if type is None:\r\n    118             try:\r\n--> 119                 next(self.gen)\r\n    120             except StopIteration:\r\n    121                 return False\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\training_v2.py in on_epoch(self, epoch, mode)\r\n    769       if mode == ModeKeys.TRAIN:\r\n    770         # Epochs only apply to `fit`.\r\n--> 771         self.callbacks.on_epoch_end(epoch, epoch_logs)\r\n    772       self.progbar.on_epoch_end(epoch, epoch_logs)\r\n    773 \r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\keras\\callbacks.py in on_epoch_end(self, epoch, logs)\r\n    300     logs = logs or {}\r\n    301     for callback in self.callbacks:\r\n--> 302       callback.on_epoch_end(epoch, logs)\r\n    303 \r\n    304   def on_train_batch_begin(self, batch, logs=None):\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\keras\\callbacks.py in on_epoch_end(self, epoch, logs)\r\n    990           self._save_model(epoch=epoch, logs=logs)\r\n    991       else:\r\n--> 992         self._save_model(epoch=epoch, logs=logs)\r\n    993     if self.model._in_multi_worker_mode():\r\n    994       # For multi-worker training, back up the weights and current training\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\keras\\callbacks.py in _save_model(self, epoch, logs)\r\n   1025               self.best = current\r\n   1026               if self.save_weights_only:\r\n-> 1027                 self.model.save_weights(filepath, overwrite=True)\r\n   1028               else:\r\n   1029                 self.model.save(filepath, overwrite=True)\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\keras\\engine\\network.py in save_weights(self, filepath, overwrite, save_format)\r\n   1121              'saved.\\n\\nConsider using a TensorFlow optimizer from `tf.train`.')\r\n   1122             % (optimizer,))\r\n-> 1123       self._trackable_saver.save(filepath, session=session)\r\n   1124       # Record this checkpoint so it's visible from tf.train.latest_checkpoint.\r\n   1125       checkpoint_management.update_checkpoint_state_internal(\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\training\\tracking\\util.py in save(self, file_prefix, checkpoint_number, session)\r\n   1166     file_io.recursive_create_dir(os.path.dirname(file_prefix))\r\n   1167     save_path, new_feed_additions = self._save_cached_when_graph_building(\r\n-> 1168         file_prefix=file_prefix_tensor, object_graph_tensor=object_graph_tensor)\r\n   1169     if new_feed_additions:\r\n   1170       feed_dict.update(new_feed_additions)\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\training\\tracking\\util.py in _save_cached_when_graph_building(self, file_prefix, object_graph_tensor)\r\n   1114         or context.executing_eagerly() or ops.inside_function()):\r\n   1115       saver = functional_saver.MultiDeviceSaver(named_saveable_objects)\r\n-> 1116       save_op = saver.save(file_prefix)\r\n   1117       with ops.device(\"/cpu:0\"):\r\n   1118         with ops.control_dependencies([save_op]):\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\training\\saving\\functional_saver.py in save(self, file_prefix)\r\n    228         # _SingleDeviceSaver will use the CPU device when necessary, but initial\r\n    229         # read operations should be placed on the SaveableObject's device.\r\n--> 230         sharded_saves.append(saver.save(shard_prefix))\r\n    231 \r\n    232     with ops.control_dependencies(sharded_saves):\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\training\\saving\\functional_saver.py in save(self, file_prefix)\r\n     70         tensor_slices.append(spec.slice_spec)\r\n     71     with ops.device(\"cpu:0\"):\r\n---> 72       return io_ops.save_v2(file_prefix, tensor_names, tensor_slices, tensors)\r\n     73 \r\n     74   def restore(self, file_prefix):\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\ops\\gen_io_ops.py in save_v2(prefix, tensor_names, shape_and_slices, tensors, name)\r\n   1705         return save_v2_eager_fallback(\r\n   1706             prefix, tensor_names, shape_and_slices, tensors, name=name,\r\n-> 1707             ctx=_ctx)\r\n   1708       except _core._SymbolicException:\r\n   1709         pass  # Add nodes to the TensorFlow graph.\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\ops\\gen_io_ops.py in save_v2_eager_fallback(prefix, tensor_names, shape_and_slices, tensors, name, ctx)\r\n   1727   _attrs = (\"dtypes\", _attr_dtypes)\r\n   1728   _result = _execute.execute(b\"SaveV2\", 0, inputs=_inputs_flat, attrs=_attrs,\r\n-> 1729                              ctx=ctx, name=name)\r\n   1730   _result = None\r\n   1731   return _result\r\n\r\nC:\\WWW\\anaconda3\\envs\\tf2\\lib\\site-packages\\tensorflow_core\\python\\eager\\execute.py in quick_execute(op_name, num_outputs, inputs, attrs, ctx, name)\r\n     59     tensors = pywrap_tensorflow.TFE_Py_Execute(ctx._handle, device_name,\r\n     60                                                op_name, inputs, attrs,\r\n---> 61                                                num_outputs)\r\n     62   except core._NotOkStatusException as e:\r\n     63     if name is not None:\r\n\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xd5 in position 246: invalid continuation byte\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/257", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/257/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/257/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/257", "id": 585417384, "node_id": "MDU6SXNzdWU1ODU0MTczODQ=", "number": 257, "title": "keras-tuner compatibility requirements with other tensorflow and python version", "user": {"login": "tinyxuyan", "id": 44150841, "node_id": "MDQ6VXNlcjQ0MTUwODQx", "avatar_url": "https://avatars1.githubusercontent.com/u/44150841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tinyxuyan", "html_url": "https://github.com/tinyxuyan", "followers_url": "https://api.github.com/users/tinyxuyan/followers", "following_url": "https://api.github.com/users/tinyxuyan/following{/other_user}", "gists_url": "https://api.github.com/users/tinyxuyan/gists{/gist_id}", "starred_url": "https://api.github.com/users/tinyxuyan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tinyxuyan/subscriptions", "organizations_url": "https://api.github.com/users/tinyxuyan/orgs", "repos_url": "https://api.github.com/users/tinyxuyan/repos", "events_url": "https://api.github.com/users/tinyxuyan/events{/privacy}", "received_events_url": "https://api.github.com/users/tinyxuyan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-21T03:06:22Z", "updated_at": "2020-07-04T00:21:38Z", "closed_at": "2020-07-04T00:21:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "The requirement only lists TensorFlow 2.0 and python 3.6. My env is using TensorFlow 2.1.0 and python 3.7. Is the env still compatible with keras-tuner?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/256", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/256/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/256/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/256/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/256", "id": 585203916, "node_id": "MDU6SXNzdWU1ODUyMDM5MTY=", "number": 256, "title": "Distributed hyperband tuner runs continuously", "user": {"login": "durrantmm", "id": 10098419, "node_id": "MDQ6VXNlcjEwMDk4NDE5", "avatar_url": "https://avatars2.githubusercontent.com/u/10098419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durrantmm", "html_url": "https://github.com/durrantmm", "followers_url": "https://api.github.com/users/durrantmm/followers", "following_url": "https://api.github.com/users/durrantmm/following{/other_user}", "gists_url": "https://api.github.com/users/durrantmm/gists{/gist_id}", "starred_url": "https://api.github.com/users/durrantmm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durrantmm/subscriptions", "organizations_url": "https://api.github.com/users/durrantmm/orgs", "repos_url": "https://api.github.com/users/durrantmm/repos", "events_url": "https://api.github.com/users/durrantmm/events{/privacy}", "received_events_url": "https://api.github.com/users/durrantmm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-20T16:57:05Z", "updated_at": "2020-08-17T17:18:47Z", "closed_at": "2020-08-17T17:18:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI ran the distributed tuner tutorial on google cloud virtual machines with a shared filesystem. One chief instance with no GPU, multiple worker instances with a single GPU. When I run the tutorial with a single worker and for one complete hyperband iteration, it runs successfully. When I run it with two workers, it looks like the workers share the workload initially, but then one exits, and the other worker keeps going and starts running through earlier brackets of the hyperband algorithm.\r\n\r\nHas anybody seen anything like this? Is there something I am missing?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/244", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/244/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/244/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/244", "id": 577327105, "node_id": "MDU6SXNzdWU1NzczMjcxMDU=", "number": 244, "title": "Custom Keras optimizers aren't accepted", "user": {"login": "rlh1994", "id": 8260415, "node_id": "MDQ6VXNlcjgyNjA0MTU=", "avatar_url": "https://avatars3.githubusercontent.com/u/8260415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rlh1994", "html_url": "https://github.com/rlh1994", "followers_url": "https://api.github.com/users/rlh1994/followers", "following_url": "https://api.github.com/users/rlh1994/following{/other_user}", "gists_url": "https://api.github.com/users/rlh1994/gists{/gist_id}", "starred_url": "https://api.github.com/users/rlh1994/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rlh1994/subscriptions", "organizations_url": "https://api.github.com/users/rlh1994/orgs", "repos_url": "https://api.github.com/users/rlh1994/repos", "events_url": "https://api.github.com/users/rlh1994/events{/privacy}", "received_events_url": "https://api.github.com/users/rlh1994/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648499, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDk5", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": "This will not be worked on"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-03-07T12:20:34Z", "updated_at": "2020-03-08T21:21:06Z", "closed_at": "2020-03-08T21:20:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "When creating and using a custom keras optimizer the tuner fails to run due to expecting the methods required by the tensorflow optimizer_v2 instead. This makes it very difficult to use this to tune on custom optimizers as you first have to rewrite the keras implementation into the tensorflow implementation instead.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/235", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/235/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/235/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/235", "id": 569339274, "node_id": "MDU6SXNzdWU1NjkzMzkyNzQ=", "number": 235, "title": "Boolean hyperparameter is 0/1 instead of False/True in hp.values dict", "user": {"login": "letmaik", "id": 530988, "node_id": "MDQ6VXNlcjUzMDk4OA==", "avatar_url": "https://avatars1.githubusercontent.com/u/530988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/letmaik", "html_url": "https://github.com/letmaik", "followers_url": "https://api.github.com/users/letmaik/followers", "following_url": "https://api.github.com/users/letmaik/following{/other_user}", "gists_url": "https://api.github.com/users/letmaik/gists{/gist_id}", "starred_url": "https://api.github.com/users/letmaik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/letmaik/subscriptions", "organizations_url": "https://api.github.com/users/letmaik/orgs", "repos_url": "https://api.github.com/users/letmaik/repos", "events_url": "https://api.github.com/users/letmaik/events{/privacy}", "received_events_url": "https://api.github.com/users/letmaik/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648496, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDk2", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-02-22T14:06:31Z", "updated_at": "2020-07-25T20:02:32Z", "closed_at": "2020-03-08T21:24:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to dump the values of all hyperparameters, and for that I'm accessing them as a dictionary using the `.values` field: https://github.com/keras-team/keras-tuner/blob/b7a5a1cd454429c4e0166ca3bea4241897e5e922/kerastuner/engine/hyperparameters.py#L464-L470\r\n\r\nThis works fine, however for boolean parameters, the value is 0 instead of False. Could this be made more consistent and return a bool?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/234", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/234/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/234/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/234", "id": 564161274, "node_id": "MDU6SXNzdWU1NjQxNjEyNzQ=", "number": 234, "title": "Continue after one training iteration", "user": {"login": "michaelmior", "id": 82501, "node_id": "MDQ6VXNlcjgyNTAx", "avatar_url": "https://avatars0.githubusercontent.com/u/82501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelmior", "html_url": "https://github.com/michaelmior", "followers_url": "https://api.github.com/users/michaelmior/followers", "following_url": "https://api.github.com/users/michaelmior/following{/other_user}", "gists_url": "https://api.github.com/users/michaelmior/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelmior/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelmior/subscriptions", "organizations_url": "https://api.github.com/users/michaelmior/orgs", "repos_url": "https://api.github.com/users/michaelmior/repos", "events_url": "https://api.github.com/users/michaelmior/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelmior/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-12T17:43:32Z", "updated_at": "2020-02-12T18:13:33Z", "closed_at": "2020-02-12T18:13:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I performed optimization using Hyperband and I'd like to continue optimizations for more iterations. I tried just changing the value of `hyperband_iterations` and running again, but the `search` method just returns immediately. Is there any way to make use of previous results without starting over?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/232", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/232/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/232/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/232", "id": 562025582, "node_id": "MDU6SXNzdWU1NjIwMjU1ODI=", "number": 232, "title": "Mixed input networks with combined X_trains", "user": {"login": "csepreghy", "id": 16719461, "node_id": "MDQ6VXNlcjE2NzE5NDYx", "avatar_url": "https://avatars3.githubusercontent.com/u/16719461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csepreghy", "html_url": "https://github.com/csepreghy", "followers_url": "https://api.github.com/users/csepreghy/followers", "following_url": "https://api.github.com/users/csepreghy/following{/other_user}", "gists_url": "https://api.github.com/users/csepreghy/gists{/gist_id}", "starred_url": "https://api.github.com/users/csepreghy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csepreghy/subscriptions", "organizations_url": "https://api.github.com/users/csepreghy/orgs", "repos_url": "https://api.github.com/users/csepreghy/repos", "events_url": "https://api.github.com/users/csepreghy/events{/privacy}", "received_events_url": "https://api.github.com/users/csepreghy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648496, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDk2", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-02-08T14:24:58Z", "updated_at": "2020-03-08T21:24:54Z", "closed_at": "2020-03-08T21:24:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey, I'm trying to implement keras-tuner in my mixed input network. It has a CNN and a MLP which is combines into a final dense layer. In the original implementation I'm passing a list of inputs: \r\n```\r\nhistory = model.fit(x=[X_train_cnn, X_train_mlp],\r\n                                 y=y_train,\r\n                                 validation_data=([X_test_cnn, X_test_mlp], y_test),\r\n                                 epochs=10,\r\n                                 callbacks=callbacks)\r\n```\r\nWhen trying to run `tuner.search()` I get an error saying that \"Expected to see 2 array(s), but instead got the following list of 1 arrays\"\r\n\r\nIs there a current workaround or this is something that's not yet supported?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/231", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/231/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/231/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/231", "id": 560114120, "node_id": "MDU6SXNzdWU1NjAxMTQxMjA=", "number": 231, "title": "ValueError on first run", "user": {"login": "rish-16", "id": 20137995, "node_id": "MDQ6VXNlcjIwMTM3OTk1", "avatar_url": "https://avatars2.githubusercontent.com/u/20137995?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rish-16", "html_url": "https://github.com/rish-16", "followers_url": "https://api.github.com/users/rish-16/followers", "following_url": "https://api.github.com/users/rish-16/following{/other_user}", "gists_url": "https://api.github.com/users/rish-16/gists{/gist_id}", "starred_url": "https://api.github.com/users/rish-16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rish-16/subscriptions", "organizations_url": "https://api.github.com/users/rish-16/orgs", "repos_url": "https://api.github.com/users/rish-16/repos", "events_url": "https://api.github.com/users/rish-16/events{/privacy}", "received_events_url": "https://api.github.com/users/rish-16/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-02-05T03:15:24Z", "updated_at": "2020-03-14T20:16:00Z", "closed_at": "2020-02-18T10:00:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey there,\r\n\r\nI was following the README code snippet and ran into a bit of trouble. My code is word-for-word is being run on MNIST.\r\n\r\n```python\r\nimport tensorflow as tf\r\nfrom tensorflow.keras.datasets import mnist\r\nfrom tensorflow.keras.layers import Dense, Input\r\nfrom tensorflow.keras.optimizers import Adam\r\nfrom kerastuner.tuners import RandomSearch\r\n\r\n(xtrain, ytrain), (xtest, ytest) = mnist.load_data()\r\nxtrain = xtrain.reshape([-1, 784, 1]) / 255\r\nxtest = xtest.reshape([-1, 784, 1]) / 255\r\n\r\nytrain = tf.keras.utils.to_categorical(ytrain, 10)\r\nytest = tf.keras.utils.to_categorical(ytest, 10)\r\n\r\nprint (xtrain.shape, ytrain.shape)\r\n\r\ndef build(hp):\r\n\tmodel = tf.keras.models.Sequential()\r\n\tmodel.add(Dense(units=hp.Int('units', min_value=32, max_value=512, step=32), activation=\"relu\"))\r\n\tmodel.add(Dense(10, activation=\"softmax\"))\r\n\r\n\tmodel.compile(loss=\"sparse_categorical_crossentropy\", optimizer=Adam(hp.Choice(\"learning_rate\", values=[1e-2, 1e-3, 1e-4])), metrics=[\"accuracy\"])\r\n\r\n\treturn model\r\n\r\ntuner = RandomSearch(build, objective='val_accuracy', max_trials=5, executions_per_trial=3, directory=\"bin\", project_name=\"tuner_test\")\r\n\r\ntuner.search_space_summary()\r\ntuner.search(xtrain, ytrain, epochs=10, validation_data=(xtest, ytest))\r\nmodel = tuner.get_best_models(num_models=5)\r\ntuner.results_summary()\r\n```\r\n\r\nI keep getting this error, causing my build to fail.\r\n```bash\r\nValueError: Shape mismatch: The shape of labels (received (32, 10)) should equal the shape of logits except for the last dimension (received (32, 784, 10)).\r\n```\r\n\r\nAny help would be greatly appreciated :)\r\n\r\nCheers!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/227", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/227/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/227/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/227", "id": 558178337, "node_id": "MDU6SXNzdWU1NTgxNzgzMzc=", "number": 227, "title": "Only random trials are collision aware, Bayesian tuning will test the same config multiple times?", "user": {"login": "ben-arnao", "id": 8053809, "node_id": "MDQ6VXNlcjgwNTM4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8053809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben-arnao", "html_url": "https://github.com/ben-arnao", "followers_url": "https://api.github.com/users/ben-arnao/followers", "following_url": "https://api.github.com/users/ben-arnao/following{/other_user}", "gists_url": "https://api.github.com/users/ben-arnao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben-arnao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben-arnao/subscriptions", "organizations_url": "https://api.github.com/users/ben-arnao/orgs", "repos_url": "https://api.github.com/users/ben-arnao/repos", "events_url": "https://api.github.com/users/ben-arnao/events{/privacy}", "received_events_url": "https://api.github.com/users/ben-arnao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-31T14:52:26Z", "updated_at": "2020-02-19T16:46:11Z", "closed_at": "2020-02-19T16:45:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I don't think we ever want to be testing the same config more than once right? Is there a way to give Bayesian tuning the same awareness of previously tested configs so we don't waste an iteration on an already tested config?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/226", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/226/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/226/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/226/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/226", "id": 558063427, "node_id": "MDU6SXNzdWU1NTgwNjM0Mjc=", "number": 226, "title": "How to optimize learning rate and optimizer in Keras Tuner? ", "user": {"login": "selihadji", "id": 36450301, "node_id": "MDQ6VXNlcjM2NDUwMzAx", "avatar_url": "https://avatars3.githubusercontent.com/u/36450301?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selihadji", "html_url": "https://github.com/selihadji", "followers_url": "https://api.github.com/users/selihadji/followers", "following_url": "https://api.github.com/users/selihadji/following{/other_user}", "gists_url": "https://api.github.com/users/selihadji/gists{/gist_id}", "starred_url": "https://api.github.com/users/selihadji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selihadji/subscriptions", "organizations_url": "https://api.github.com/users/selihadji/orgs", "repos_url": "https://api.github.com/users/selihadji/repos", "events_url": "https://api.github.com/users/selihadji/events{/privacy}", "received_events_url": "https://api.github.com/users/selihadji/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-31T11:02:15Z", "updated_at": "2020-01-31T14:06:51Z", "closed_at": "2020-01-31T14:06:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to optimize learning rate AND the optimizer?\r\n\r\nGiven that the optimizer can be selected as follows:   \r\n```\r\noptimizer = hp.Choice('optimizer', ['adam', 'sgd'])    \r\nmodel.compile(optimizer=optimizer, \r\n                        loss='sparse_categorical_crossentropy', \r\n                        metrics=['accuracy'])\r\n```\r\nand the learning rate as follows:\r\n```\r\nmodel.compile(optimizer=tf.keras.optimizers.Adam(\r\n                        hp.Float('learning_rate', 1e-4, 1e-2, sampling='log')),\r\n                        loss='sparse_categorical_crossentropy', metrics=['accuracy'])\r\n```\r\nI tried to include in the model definition the following:\r\n```\r\nlr = hp.Choice('lr', values=[0.08, 0.1, 0.11, 0.14, 0.18])\r\noptimizer = hp.Choice('optimizer', \r\n     values=[tensorflow.keras.optimizers.Adam(learning_rate=lr),\r\n                  tensorflow.keras.optimizers.RMSprop(learning_rate=lr),\r\n                  tensorflow.keras.optimizers.SGD(learning_rate=lr)])\r\n```\r\nbut I got this error:\r\n\r\n> TypeError: A `Choice` can contain only one type of value", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/224", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/224/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/224/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/224/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/224", "id": 557590666, "node_id": "MDU6SXNzdWU1NTc1OTA2NjY=", "number": 224, "title": "GPR for Bayesian Opt initializes with Matern kernel but loads a different one?", "user": {"login": "ben-arnao", "id": 8053809, "node_id": "MDQ6VXNlcjgwNTM4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8053809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben-arnao", "html_url": "https://github.com/ben-arnao", "followers_url": "https://api.github.com/users/ben-arnao/followers", "following_url": "https://api.github.com/users/ben-arnao/following{/other_user}", "gists_url": "https://api.github.com/users/ben-arnao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben-arnao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben-arnao/subscriptions", "organizations_url": "https://api.github.com/users/ben-arnao/orgs", "repos_url": "https://api.github.com/users/ben-arnao/repos", "events_url": "https://api.github.com/users/ben-arnao/events{/privacy}", "received_events_url": "https://api.github.com/users/ben-arnao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648486, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg2", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "ben-arnao", "id": 8053809, "node_id": "MDQ6VXNlcjgwNTM4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8053809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben-arnao", "html_url": "https://github.com/ben-arnao", "followers_url": "https://api.github.com/users/ben-arnao/followers", "following_url": "https://api.github.com/users/ben-arnao/following{/other_user}", "gists_url": "https://api.github.com/users/ben-arnao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben-arnao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben-arnao/subscriptions", "organizations_url": "https://api.github.com/users/ben-arnao/orgs", "repos_url": "https://api.github.com/users/ben-arnao/repos", "events_url": "https://api.github.com/users/ben-arnao/events{/privacy}", "received_events_url": "https://api.github.com/users/ben-arnao/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ben-arnao", "id": 8053809, "node_id": "MDQ6VXNlcjgwNTM4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8053809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben-arnao", "html_url": "https://github.com/ben-arnao", "followers_url": "https://api.github.com/users/ben-arnao/followers", "following_url": "https://api.github.com/users/ben-arnao/following{/other_user}", "gists_url": "https://api.github.com/users/ben-arnao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben-arnao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben-arnao/subscriptions", "organizations_url": "https://api.github.com/users/ben-arnao/orgs", "repos_url": "https://api.github.com/users/ben-arnao/repos", "events_url": "https://api.github.com/users/ben-arnao/events{/privacy}", "received_events_url": "https://api.github.com/users/ben-arnao/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-01-30T16:01:28Z", "updated_at": "2020-03-08T21:23:42Z", "closed_at": "2020-03-08T21:23:42Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Looks like the Bayesian Oracle is initialized with the following kernel for GPR\r\n\r\n`kernel=gaussian_process.kernels.Matern(nu=2.5)`\r\n\r\nBut then if we load back up the Oracle the a different kernel is loaded\r\n\r\n`kernel=gaussian_process.kernels.ConstantKernel(1.0)`\r\n\r\nIs there a reason for this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/223", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/223/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/223/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/223", "id": 556823406, "node_id": "MDU6SXNzdWU1NTY4MjM0MDY=", "number": 223, "title": "Is it possible to use ImageDataGenerator within Keras Tuner?", "user": {"login": "egorfolley", "id": 23129993, "node_id": "MDQ6VXNlcjIzMTI5OTkz", "avatar_url": "https://avatars2.githubusercontent.com/u/23129993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/egorfolley", "html_url": "https://github.com/egorfolley", "followers_url": "https://api.github.com/users/egorfolley/followers", "following_url": "https://api.github.com/users/egorfolley/following{/other_user}", "gists_url": "https://api.github.com/users/egorfolley/gists{/gist_id}", "starred_url": "https://api.github.com/users/egorfolley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egorfolley/subscriptions", "organizations_url": "https://api.github.com/users/egorfolley/orgs", "repos_url": "https://api.github.com/users/egorfolley/repos", "events_url": "https://api.github.com/users/egorfolley/events{/privacy}", "received_events_url": "https://api.github.com/users/egorfolley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-29T12:13:56Z", "updated_at": "2020-02-02T16:00:40Z", "closed_at": "2020-01-30T04:51:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using `from tensorflow.keras.preprocessing.image import ImageDataGenerator`\r\nHere is the code :\r\n```\r\n(x_train, y_train), (x_test, y_test) = cifar10.load_data()\r\nx_train, x_test = x_train.astype('float32') / 255, x_test.astype('float32') / 255\r\ny_train, y_test = to_categorical(y_train), to_categorical(y_test)\r\n\r\nimg_gen = ImageDataGenerator(\r\n    rotation_range=10,\r\n    width_shift_range=.1,\r\n    height_shift_range=.1,\r\n    horizontal_flip=True,\r\n    vertical_flip=True,\r\n    fill_mode=\"nearest\"\r\n)\r\n\r\nimg_gen_train = img_gen.flow(x_train, y_train, batch_size=128, shuffle=True)\r\n\r\nrand_tuner = RandomSearch(hypermodel=hypermodel,\r\n                          objective='val_acc',\r\n                          max_trials=max_trials,\r\n                          project_name='cifar10')\r\n```\r\n\r\nthen I am building a model using keras tuner HyperModel:\r\n```\r\ndef hypermodel(hp):\r\n    units_choice = hp.Int('units', min_value=32, max_value=512, step=32, default=128)\r\n    lr_choice = hp.Float('learning_rate', 1e-5, 1e-2, sampling='LOG', default=1e-3)\r\n    dropout_rate_choice = hp.Float('rate', 0, .5, step=.1, default=.2)\r\n    filters_choice = hp.Choice('num_filters', values=[32, 64], default=64)\r\n\r\n    model = Sequential()\r\n    model.add(Conv2D(filters=16, kernel_size=3, \r\n                            activation='relu', input_shape=input_shape))\r\n    model.add(Dropout(rate=dropout_rate_choice))\r\n    model.add(Flatten())\r\n    model.add(Dense(units=units_choice, activation='relu'))\r\n    model.add(Dense(num_labels, activation='softmax'))\r\n    model.compile(loss='sparse_categorical_crossentropy',\r\n                optimizer=Adam(lr_choice),\r\n                metrics=['accuracy'])\r\n\r\n    return model\r\n```\r\n\r\nAfter that, in an attempt to search best got an error : \r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/YlVDr.png\r\n\r\n\r\n**How to deal with it?**", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/222", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/222/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/222/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/222", "id": 554895921, "node_id": "MDU6SXNzdWU1NTQ4OTU5MjE=", "number": 222, "title": "Hypermodel from hyperparameter config dictionary using deserialize", "user": {"login": "sibyjackgrove", "id": 25213730, "node_id": "MDQ6VXNlcjI1MjEzNzMw", "avatar_url": "https://avatars0.githubusercontent.com/u/25213730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sibyjackgrove", "html_url": "https://github.com/sibyjackgrove", "followers_url": "https://api.github.com/users/sibyjackgrove/followers", "following_url": "https://api.github.com/users/sibyjackgrove/following{/other_user}", "gists_url": "https://api.github.com/users/sibyjackgrove/gists{/gist_id}", "starred_url": "https://api.github.com/users/sibyjackgrove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sibyjackgrove/subscriptions", "organizations_url": "https://api.github.com/users/sibyjackgrove/orgs", "repos_url": "https://api.github.com/users/sibyjackgrove/repos", "events_url": "https://api.github.com/users/sibyjackgrove/events{/privacy}", "received_events_url": "https://api.github.com/users/sibyjackgrove/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648487, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg3", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-01-24T18:48:38Z", "updated_at": "2020-01-30T16:42:25Z", "closed_at": "2020-01-28T20:01:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I saw that you can use `kt.engine.hyperparameters.deserialize` to create hyperparameter objects.\r\nFor e.g. I can build an Int hyperparameter object as shown below:\r\n`hp_int = kt.engine.hyperparameters.deserialize({'class_name': 'Int', 'config': {'name': 'layers','min_value': 20,'max_value': 30,'step': 1}})`\r\n\r\nHowever, when I include the object in my build hypermodel method, I get an invalid model error as shown below.\r\n```\r\ndef build_model(hp):\r\n     ....     \r\n     model.add(layers.Dense(units=hp_int , activation='relu'))\r\n     ....\r\n\r\ntuner = RandomSearch(build_model,....)\r\n```\r\n\r\n> TypeError: int() argument must be a string, a bytes-like object or a number, not 'Int'\r\n> [Warning] Invalid model 0/5\r\n\r\nIs there any way to build a hyper model from a config dictionary similar to how we can do it for layers in Keras?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/220", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/220/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/220/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/220", "id": 551422240, "node_id": "MDU6SXNzdWU1NTE0MjIyNDA=", "number": 220, "title": "Parallelize on one machine", "user": {"login": "phiwei", "id": 22448372, "node_id": "MDQ6VXNlcjIyNDQ4Mzcy", "avatar_url": "https://avatars0.githubusercontent.com/u/22448372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phiwei", "html_url": "https://github.com/phiwei", "followers_url": "https://api.github.com/users/phiwei/followers", "following_url": "https://api.github.com/users/phiwei/following{/other_user}", "gists_url": "https://api.github.com/users/phiwei/gists{/gist_id}", "starred_url": "https://api.github.com/users/phiwei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phiwei/subscriptions", "organizations_url": "https://api.github.com/users/phiwei/orgs", "repos_url": "https://api.github.com/users/phiwei/repos", "events_url": "https://api.github.com/users/phiwei/events{/privacy}", "received_events_url": "https://api.github.com/users/phiwei/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648487, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg3", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-01-17T13:42:09Z", "updated_at": "2020-01-23T19:15:51Z", "closed_at": "2020-01-23T19:15:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nif I have one machine with 4 gpus, can I run the tuner such that it will optimize 4 hyperparameter combinations in parallel, one using each gpu? If so, how?\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/219", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/219/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/219/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/219", "id": 551332353, "node_id": "MDU6SXNzdWU1NTEzMzIzNTM=", "number": 219, "title": "Does fine tune is compatible with kerastuner?", "user": {"login": "RomainCendre", "id": 18599849, "node_id": "MDQ6VXNlcjE4NTk5ODQ5", "avatar_url": "https://avatars2.githubusercontent.com/u/18599849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RomainCendre", "html_url": "https://github.com/RomainCendre", "followers_url": "https://api.github.com/users/RomainCendre/followers", "following_url": "https://api.github.com/users/RomainCendre/following{/other_user}", "gists_url": "https://api.github.com/users/RomainCendre/gists{/gist_id}", "starred_url": "https://api.github.com/users/RomainCendre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RomainCendre/subscriptions", "organizations_url": "https://api.github.com/users/RomainCendre/orgs", "repos_url": "https://api.github.com/users/RomainCendre/repos", "events_url": "https://api.github.com/users/RomainCendre/events{/privacy}", "received_events_url": "https://api.github.com/users/RomainCendre/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648487, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg3", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-17T10:28:37Z", "updated_at": "2020-01-23T19:25:26Z", "closed_at": "2020-01-23T19:25:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone,\r\n\r\nI was wondering if Fine tune was something that can work with this tool.\r\n\r\nSo I made somthing in this way:\r\n\r\n```\r\nfrom keras.applications import InceptionResNetV2, VGG16\r\nfrom tensorflow.keras import Sequential, Model\r\nfrom tensorflow.keras.layers import Dense, Flatten\r\nimport kerastuner\r\nfrom kerastuner.tuners import RandomSearch\r\nfrom kerastuner.engine.hypermodel import HyperModel\r\nfrom kerastuner.engine.hyperparameters import HyperParameters\r\nfrom toolbox.classification.common import Folds, IO, Tools\r\nfrom toolbox.classification.parameters import Dermatology\r\nfrom toolbox.models.generators import ResourcesGenerator\r\nfrom toolbox.transforms.labels import OrderedEncoder\r\n\r\ntrain = inputs[0:2000]\r\ntest = inputs[2001:]\r\n\r\ngen_train = ResourcesGenerator()\r\ngen_train.flow_from_paths(train['Datum'].values, train['LabelEncode'])\r\n\r\ngen_test = ResourcesGenerator()\r\ngen_test.flow_from_paths(test['Datum'].values, test['LabelEncode'])\r\n\r\n\r\ndef model_test(hp):\r\n    base_model = VGG16(weights='imagenet', pooling='avg', include_top=False)\r\n    x = base_model.output\r\n    for i in range(hp.Int('num_layers', 2, 20)):\r\n        x = Dense(units=hp.Int('units_' + str(i), 32, 512, 32), activation='relu')(x)\r\n    x = Dense(2, activation='softmax')(x) \r\n    model = Model(inputs=base_model.inputs, outputs=x)\r\n    model.compile(optimizer=keras.optimizers.Adam(hp.Choice('learning_rate', [1e-2, 1e-3, 1e-4])),\r\n                  loss='sparse_categorical_crossentropy',\r\n                  metrics=['accuracy'])\r\n    return model\r\n\r\ntuner = RandomSearch(\r\n    model_test,\r\n    objective=kerastuner.Objective(\"val_accuracy\", direction=\"min\"),\r\n    max_trials=5,\r\n    executions_per_trial=3,\r\n    directory='test_dir')\r\n\r\ntuner.search_space_summary()\r\ntuner.search(gen_train, validation_data=gen_test)\r\n```\r\n\r\nBut it endup with: \r\n`Traceback (most recent call last):\r\n  File \"/home/rcendre/anaconda3/envs/PythonGPU/lib/python3.7/site-packages/kerastuner/engine/hypermodel.py\", line 105, in build\r\n    model = self.hypermodel.build(hp)\r\n  File \"<ipython-input-23-b1f68933ee1f>\", line 27, in model_test\r\n    x = Dense(units=hp.Int('units_' + str(i), 32, 512, 32), activation='relu')(x)\r\n  File \"/home/rcendre/anaconda3/envs/PythonGPU/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py\", line 874, in __call__\r\n    inputs, outputs, args, kwargs)\r\n  File \"/home/rcendre/anaconda3/envs/PythonGPU/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py\", line 2038, in _set_connectivity_metadata_\r\n    input_tensors=inputs, output_tensors=outputs, arguments=arguments)\r\n  File \"/home/rcendre/anaconda3/envs/PythonGPU/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py\", line 2054, in _add_inbound_node\r\n    input_tensors)\r\n  File \"/home/rcendre/anaconda3/envs/PythonGPU/lib/python3.7/site-packages/tensorflow_core/python/util/nest.py\", line 535, in map_structure\r\n    structure[0], [func(*x) for x in entries],\r\n  File \"/home/rcendre/anaconda3/envs/PythonGPU/lib/python3.7/site-packages/tensorflow_core/python/util/nest.py\", line 535, in <listcomp>\r\n    structure[0], [func(*x) for x in entries],\r\n  File \"/home/rcendre/anaconda3/envs/PythonGPU/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/base_layer.py\", line 2053, in <lambda>\r\n    inbound_layers = nest.map_structure(lambda t: t._keras_history.layer,\r\nAttributeError: 'tuple' object has no attribute 'layer'`\r\n\r\nAny ideas on best pratices using existing models?\r\nBest regards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/218", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/218/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/218/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/218", "id": 549750350, "node_id": "MDU6SXNzdWU1NDk3NTAzNTA=", "number": 218, "title": "Associate id with hyperparameter object", "user": {"login": "WesleyYue", "id": 5280818, "node_id": "MDQ6VXNlcjUyODA4MTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/5280818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WesleyYue", "html_url": "https://github.com/WesleyYue", "followers_url": "https://api.github.com/users/WesleyYue/followers", "following_url": "https://api.github.com/users/WesleyYue/following{/other_user}", "gists_url": "https://api.github.com/users/WesleyYue/gists{/gist_id}", "starred_url": "https://api.github.com/users/WesleyYue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WesleyYue/subscriptions", "organizations_url": "https://api.github.com/users/WesleyYue/orgs", "repos_url": "https://api.github.com/users/WesleyYue/repos", "events_url": "https://api.github.com/users/WesleyYue/events{/privacy}", "received_events_url": "https://api.github.com/users/WesleyYue/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-14T18:46:41Z", "updated_at": "2020-01-23T19:30:38Z", "closed_at": "2020-01-23T19:30:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm interested in using keras tuner with an external experiment tracking tool like comet.ml. However, in order for comet to capture the experiments correctly in hyperband, I need a way for the HyperParameter object that's passed to my custom build_model function to contain a unique ID for each experiment and have that same ID when the experiment is further exploited in later rounds. Does keras-tuner pass along any experiment ID I could just use? Otherwise, my current idea is to keep a record of my own hashset based on the hyperparameters that are coming through, and assume the experiments are associative when all the hyperparameters are the same. Is there a better approach that you would recommend?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/213", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/213/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/213/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/213", "id": 548402644, "node_id": "MDU6SXNzdWU1NDg0MDI2NDQ=", "number": 213, "title": "Index out of range for Choice hyper param", "user": {"login": "ben-arnao", "id": 8053809, "node_id": "MDQ6VXNlcjgwNTM4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8053809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben-arnao", "html_url": "https://github.com/ben-arnao", "followers_url": "https://api.github.com/users/ben-arnao/followers", "following_url": "https://api.github.com/users/ben-arnao/following{/other_user}", "gists_url": "https://api.github.com/users/ben-arnao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben-arnao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben-arnao/subscriptions", "organizations_url": "https://api.github.com/users/ben-arnao/orgs", "repos_url": "https://api.github.com/users/ben-arnao/repos", "events_url": "https://api.github.com/users/ben-arnao/events{/privacy}", "received_events_url": "https://api.github.com/users/ben-arnao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-11T08:47:37Z", "updated_at": "2020-01-28T20:16:23Z", "closed_at": "2020-01-28T20:16:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the hyperparameters.py module there is an error\r\n\r\n```\r\ndef cumulative_prob_to_value(prob, hp):\r\n    if isinstance(hp, Fixed):\r\n        return hp.value\r\n    elif isinstance(hp, Boolean):\r\n        return bool(prob >= 0.5)\r\n    elif isinstance(hp, Choice):\r\n        ele_prob = 1 / len(hp.values)\r\n        index = math.floor(prob / ele_prob)\r\n        #at this line of code it is possible that the index is greater than the length of hp.values - 1 throwing an index of out bounds error\r\n        return hp.values[index]\r\n```\r\n\r\nI'm not sure how to create a min reproducible scenario.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/208", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/208/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/208/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/208", "id": 547843246, "node_id": "MDU6SXNzdWU1NDc4NDMyNDY=", "number": 208, "title": "where do i need to suppress tensorflow logs?", "user": {"login": "ben-arnao", "id": 8053809, "node_id": "MDQ6VXNlcjgwNTM4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8053809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben-arnao", "html_url": "https://github.com/ben-arnao", "followers_url": "https://api.github.com/users/ben-arnao/followers", "following_url": "https://api.github.com/users/ben-arnao/following{/other_user}", "gists_url": "https://api.github.com/users/ben-arnao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben-arnao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben-arnao/subscriptions", "organizations_url": "https://api.github.com/users/ben-arnao/orgs", "repos_url": "https://api.github.com/users/ben-arnao/repos", "events_url": "https://api.github.com/users/ben-arnao/events{/privacy}", "received_events_url": "https://api.github.com/users/ben-arnao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-10T03:26:22Z", "updated_at": "2020-01-16T14:36:08Z", "closed_at": "2020-01-16T14:34:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is tensorflow debugging information for every trial. I tried setting environment variables manually but i still get these logs. Is there a specific class that does the tensorflow stuff where i can try to suppress logs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/206", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/206/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/206/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/206", "id": 547122499, "node_id": "MDU6SXNzdWU1NDcxMjI0OTk=", "number": 206, "title": "EarlyStopping seems to be ignored with BayesianOptimization", "user": {"login": "henrypinkard", "id": 7969470, "node_id": "MDQ6VXNlcjc5Njk0NzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/7969470?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henrypinkard", "html_url": "https://github.com/henrypinkard", "followers_url": "https://api.github.com/users/henrypinkard/followers", "following_url": "https://api.github.com/users/henrypinkard/following{/other_user}", "gists_url": "https://api.github.com/users/henrypinkard/gists{/gist_id}", "starred_url": "https://api.github.com/users/henrypinkard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henrypinkard/subscriptions", "organizations_url": "https://api.github.com/users/henrypinkard/orgs", "repos_url": "https://api.github.com/users/henrypinkard/repos", "events_url": "https://api.github.com/users/henrypinkard/events{/privacy}", "received_events_url": "https://api.github.com/users/henrypinkard/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-01-08T21:50:27Z", "updated_at": "2020-01-30T04:32:14Z", "closed_at": "2020-01-30T04:32:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use `tuners.BayesianOptimization` to run a hyperparameter search. \r\n\r\nDuring the training of the first model with random hyperparameters, the validation loss blows up, but training doesn't terminate early as expected. Relevant parts of the code below:\r\n\r\n```\r\ntuner = BayesianOptimization(build_hypermodel, 'val_loss', max_trials=100, \r\n                         num_initial_points=1, executions_per_trial=5)\r\n\r\n\r\ntuner.search(train_dataset, validation_data=val_dataset, epochs=max_epochs,\r\n             callbacks=[keras.callbacks.EarlyStopping(monitor='val_loss',  \r\n              patience=overshoot_epochs)], verbose=2, steps_per_epoch=100, \r\n               validation_steps = 200)\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/205", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/205/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/205/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/205", "id": 546304751, "node_id": "MDU6SXNzdWU1NDYzMDQ3NTE=", "number": 205, "title": "How to work with parameters supplied at train time?", "user": {"login": "ben-arnao", "id": 8053809, "node_id": "MDQ6VXNlcjgwNTM4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8053809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben-arnao", "html_url": "https://github.com/ben-arnao", "followers_url": "https://api.github.com/users/ben-arnao/followers", "following_url": "https://api.github.com/users/ben-arnao/following{/other_user}", "gists_url": "https://api.github.com/users/ben-arnao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben-arnao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben-arnao/subscriptions", "organizations_url": "https://api.github.com/users/ben-arnao/orgs", "repos_url": "https://api.github.com/users/ben-arnao/repos", "events_url": "https://api.github.com/users/ben-arnao/events{/privacy}", "received_events_url": "https://api.github.com/users/ben-arnao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-01-07T14:10:42Z", "updated_at": "2020-01-07T18:49:44Z", "closed_at": "2020-01-07T18:49:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Ie. batch size or Callback params. I see that the design is based on a build model function. Is there any support for training params as well?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/203", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/203/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/203/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/203", "id": 545357118, "node_id": "MDU6SXNzdWU1NDUzNTcxMTg=", "number": 203, "title": "Dynamic number of layers always uses max", "user": {"login": "kyleskom", "id": 15850656, "node_id": "MDQ6VXNlcjE1ODUwNjU2", "avatar_url": "https://avatars3.githubusercontent.com/u/15850656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyleskom", "html_url": "https://github.com/kyleskom", "followers_url": "https://api.github.com/users/kyleskom/followers", "following_url": "https://api.github.com/users/kyleskom/following{/other_user}", "gists_url": "https://api.github.com/users/kyleskom/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyleskom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyleskom/subscriptions", "organizations_url": "https://api.github.com/users/kyleskom/orgs", "repos_url": "https://api.github.com/users/kyleskom/repos", "events_url": "https://api.github.com/users/kyleskom/events{/privacy}", "received_events_url": "https://api.github.com/users/kyleskom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-01-05T02:10:44Z", "updated_at": "2020-01-07T20:59:08Z", "closed_at": "2020-01-07T20:59:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "`    for i in range(hp.Int('n_hidden_layers', min_value=1, max_value=3, step=1)):`\r\n\r\nWill always use 3 for hidden layers.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/200", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/200/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/200/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/200/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/200", "id": 542602953, "node_id": "MDU6SXNzdWU1NDI2MDI5NTM=", "number": 200, "title": "problem with list representation of keras model and applying keras tuner", "user": {"login": "Tonytony123474", "id": 57537783, "node_id": "MDQ6VXNlcjU3NTM3Nzgz", "avatar_url": "https://avatars0.githubusercontent.com/u/57537783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Tonytony123474", "html_url": "https://github.com/Tonytony123474", "followers_url": "https://api.github.com/users/Tonytony123474/followers", "following_url": "https://api.github.com/users/Tonytony123474/following{/other_user}", "gists_url": "https://api.github.com/users/Tonytony123474/gists{/gist_id}", "starred_url": "https://api.github.com/users/Tonytony123474/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Tonytony123474/subscriptions", "organizations_url": "https://api.github.com/users/Tonytony123474/orgs", "repos_url": "https://api.github.com/users/Tonytony123474/repos", "events_url": "https://api.github.com/users/Tonytony123474/events{/privacy}", "received_events_url": "https://api.github.com/users/Tonytony123474/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-12-26T16:47:15Z", "updated_at": "2020-03-04T18:41:55Z", "closed_at": "2020-01-06T18:24:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to save 2 different models of a single supermodel... encoder , encoder+classifier separately.. \r\nBut I have some issues with using from kerastuner.engine import hyperparameters as hp\r\n\r\nModel script:-\r\n\r\ndef build_model2_tuner(hp):\r\n\r\n    enc_block1 = [\r\n        Conv2D(hp.Int(\"input_units\",min_value=32,max_value=356,step=32), kernel_size=(3, 3), activation='relu', padding='same', name='c_input1', input_shape=(256,256,1)),\r\n        MaxPooling2D(pool_size=(2,2), name = \"max_pool_input1\"),\r\n        BatchNormalization(name=\"bn_input1\")\r\n    ]\r\n\r\n     # for number of layers hidden varies from 1 to 6\r\n    enc_block2 = [ ]\r\n    for i in range(hp.Int(\"n_layers\",1,6)):\r\n        enc_block2.extend([\r\n            Conv2D(hp.Int(f\"hidden_{i}_units\",min_value=32,max_value=356,step=32), kernel_size=(3, 3), activation='relu', padding='same', name=f\"conv_hidden_layer_{i}\"),\r\n            MaxPooling2D(pool_size=(2,2), name = f\"max_pool_hidden_{i}\"),\r\n            BatchNormalization(name= f\"bn_hidden_{i}\") \r\n        ])\r\n\r\n    enc_block3 =  [\r\n        Dropout(0.2),\r\n        Flatten(name='f')\r\n    ]\r\n\r\n    classifier_layers = [\r\n        Dense(256, activation='relu', name='dense_1'),\r\n        Dropout(0.2),\r\n        Dense(128, activation='relu', name='dense_2'),\r\n        Dense( 2, activation='sigmoid')\r\n    ]\r\n    \r\n    enc = enc_block1 + enc_block2 + enc_block3\r\n    encoder = Sequential(enc)\r\n    classifier = Sequential(enc + classifier_layers)\r\n    encoder.summary()\r\n    classifier.summary()\r\n    encoder.compile(optimizer='Adam', loss=losses.binary_crossentropy, metrics=['accuracy',])\r\n    classifier.compile(optimizer='Adam', loss=losses.binary_crossentropy, metrics=['accuracy',])\r\n    return encoder, classifier\r\ntuner = RandomSearch( build_model2_tuner,\r\n                      objective= \"val_accuracy\", # target validation accuracy\r\n                      max_trials= 1,\r\n                      executions_per_trial= 1,\r\n                      directory=LOG_DIR_tune)\r\ntuner.search( \r\n              x=x_train, \r\n              y=y_train,\r\n              epochs=2,\r\n              validation_data =(x_test, y_test))\r\n\r\n\r\n\r\nWhile running this I get this error...\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-83-4a30c5ac3528> in <module>\r\n      4                       max_trials= 1,\r\n      5                       executions_per_trial= 1,\r\n----> 6                       directory=LOG_DIR_tune)\r\n      7 tuner.search( \r\n      8               x=x_train,\r\n\r\n~\\Anaconda3\\lib\\site-packages\\kerastuner\\tuners\\randomsearch.py in __init__(self, hypermodel, objective, max_trials, seed, hyperparameters, tune_new_entries, allow_new_entries, **kwargs)\r\n    173             oracle,\r\n    174             hypermodel,\r\n--> 175             **kwargs)\r\n-------------------------------------------------------------------------\r\nRuntimeError: Model-building function did not return a valid Keras Model instance, found (<tensorflow.python.keras.engine.sequential.Sequential object at 0x0000022394F769B0>, <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002224AA00748>)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/199", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/199/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/199/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/199/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/199", "id": 542558194, "node_id": "MDU6SXNzdWU1NDI1NTgxOTQ=", "number": 199, "title": "Question:Overriding run_trial() method", "user": {"login": "shakib221b", "id": 59255444, "node_id": "MDQ6VXNlcjU5MjU1NDQ0", "avatar_url": "https://avatars2.githubusercontent.com/u/59255444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shakib221b", "html_url": "https://github.com/shakib221b", "followers_url": "https://api.github.com/users/shakib221b/followers", "following_url": "https://api.github.com/users/shakib221b/following{/other_user}", "gists_url": "https://api.github.com/users/shakib221b/gists{/gist_id}", "starred_url": "https://api.github.com/users/shakib221b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shakib221b/subscriptions", "organizations_url": "https://api.github.com/users/shakib221b/orgs", "repos_url": "https://api.github.com/users/shakib221b/repos", "events_url": "https://api.github.com/users/shakib221b/events{/privacy}", "received_events_url": "https://api.github.com/users/shakib221b/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-12-26T13:36:50Z", "updated_at": "2020-01-07T11:46:16Z", "closed_at": "2020-01-06T18:23:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Sorry if I am asking very trivial question, I am not good at OOP or programming in general. I wanted to add hyperparameters during data augmentation. So I tried to override run_trial() method to do hypertuning(as shown in the tutorial) and was successful. But my code doesn't need any custom training or validation loop. A model.fit() would probably suffice. Is there any way I can write my run_trial() method more efficiently? Here's a code snippet:\r\n\r\n`def get_data(hp, X_train, X_valid):\r\n\r\n    \"\"\"\r\n    Gets data from train and valid dataframe\r\n    and performs various augmentations\r\n    \"\"\"\r\n    train_gen = ImageDataGenerator(\r\n        rotation_range=hp.Int('rotation', 0, 30, step=5, default=10),\r\n        width_shift_range=hp.Float('w_shift', 0.0, 0.4, step=0.1, default=0.0),\r\n        height_shift_range=hp.Float('h_shift', 0.0, 0.4, default=0.0),\r\n        shear_range=hp.Float('shear', 0.0, 30.0, default=0),\r\n        zoom_range=hp.Float('zoom', 0.0, 0.5, default=0.0),\r\n        fill_mode='nearest',\r\n        horizontal_flip=hp.Choice('h_flip', [True, False], default=True),\r\n        rescale=1./255.)\r\n\r\n    valid_gen = ImageDataGenerator(rescale=1./255.)\r\n\r\n    train_data = train_gen.flow_from_dataframe(\r\n            dataframe=X_train,\r\n            x_col='filename',\r\n            y_col='class',\r\n            class_mode=\"categorical\",\r\n            target_size=(224, 224),\r\n            batch_size=hp.Int('batch_size', 32, 128, step=32, default=64))\r\n\r\n    valid_data = valid_gen.flow_from_dataframe(\r\n            dataframe=X_valid,\r\n            x_col='filename',\r\n            y_col='class',\r\n            class_mode=\"categorical\",\r\n            target_size=(224, 224),\r\n            batch_size=32)\r\n\r\n    print('Creating datagenerator...')\r\n\r\n    return train_data, valid_data\r\n\r\nclass MyTuner(kt.Tuner):\r\n\r\n    def run_trial(self, trial, X_train, X_valid, epochs=10):\r\n        hp = trial.hyperparameters\r\n\r\n        # Hyperparameters can be added anywhere inside `run_trial`.\r\n        # When the first trial is run, they will take on their default values.\r\n        # Afterwards, they will be tuned by the `Oracle`.\r\n\r\n        cnt = 0\r\n        check = 0\r\n        train_data, valid_data = get_data(hp, X_train, X_valid)\r\n        train_batches = train_data.n//train_data.batch_size\r\n        valid_batches = valid_data.n//valid_data.batch_size\r\n\r\n        model = self.hypermodel.build(trial.hyperparameters)\r\n\r\n        if hp['optimizer'] == 'adam':\r\n            optimizer = keras.optimizers.Adam(\r\n                learning_rate=hp.Float(\r\n                    'lr_adam', 1e-4, 1e-3, sampling='log', default=1e-3))\r\n        else:\r\n            optimizer = keras.optimizers.SGD(\r\n                learning_rate=hp.Float(\r\n                    'lr_SGD', 0.001, 0.01, sampling='log', default=0.01),\r\n                momentum=hp.Float('lr_SGD_m', 0.0, 0.4, default=0.0))\r\n\r\n        train_loss_metric = tf.keras.metrics.Mean()\r\n        valid_loss_metric = tf.keras.metrics.Mean()\r\n\r\n        train_acc_metric = keras.metrics.CategoricalAccuracy()\r\n        valid_acc_metric = keras.metrics.CategoricalAccuracy()\r\n\r\n        @tf.function\r\n        def run_train_step(images, labels):\r\n            with tf.GradientTape() as tape:\r\n                pred = model(images)\r\n                loss = tf.keras.losses.categorical_crossentropy(\r\n                    labels, pred)\r\n                gradients = tape.gradient(loss, model.trainable_variables)\r\n            optimizer.apply_gradients(\r\n                zip(gradients, model.trainable_variables))\r\n\r\n            train_loss_metric.update_state(loss)\r\n            train_acc_metric.update_state(labels, pred)\r\n            return loss\r\n\r\n        @tf.function\r\n        def run_valid_step(images, labels):\r\n            pred = model(images)\r\n            loss = tf.keras.losses.categorical_crossentropy(\r\n                labels, pred)\r\n\r\n            valid_loss_metric.update_state(loss)\r\n            valid_acc_metric.update_state(labels, pred)\r\n            return loss\r\n\r\n        # `self.on_epoch_end` reports results to the `Oracle` and saves the\r\n        # current state of the Model.\r\n        # The other hooks called here only log values for display\r\n        # but can also be overridden.\r\n        # For use cases where there is no natural concept of epoch,\r\n        # you do not have to call any of these hooks.\r\n        # In this case you should instead call `self.oracle.update_trial` and\r\n        # `self.oracle.save_model` manually.\r\n\r\n        for epoch in range(10):\r\n            print('Epoch: {} of {}'.format(epoch+1, epochs))\r\n\r\n            self.on_epoch_begin(trial, model, epoch, logs={})\r\n\r\n            # train Loop\r\n            for batch, (images, labels) in enumerate(train_data):\r\n                self.on_batch_begin(trial, model, batch, logs={})\r\n                batch_loss = run_train_step(images, labels)\r\n                self.on_batch_end(\r\n                    trial, model, batch, logs={'train_loss': batch_loss})\r\n\r\n                if batch == train_batches-1:\r\n                    loss = train_loss_metric.result().numpy()\r\n                    acc = train_acc_metric.result().numpy()\r\n                    print(\r\n                        'Train Batches: {}, Avg Loss: {}, Avg Acc: {}'.format(\r\n                            batch, loss, acc))\r\n                    break\r\n\r\n            # validation loop\r\n            for batch, (images, labels) in enumerate(valid_data):\r\n                self.on_batch_begin(trial, model, batch, logs={})\r\n                batch_loss = run_valid_step(images, labels)\r\n                self.on_batch_end(\r\n                    trial, model, batch, logs={'valid_loss': batch_loss})\r\n\r\n                if batch == valid_batches-1:\r\n                    loss = valid_loss_metric.result().numpy()\r\n                    acc = valid_acc_metric.result().numpy()\r\n                    print(\r\n                        'Valid Batches: {}, Loss: {}, Accuracy: {}'.format(\r\n                            batch, loss, acc))\r\n                    break\r\n\r\n            valid_acc = valid_acc_metric.result().numpy()\r\n            if check <= valid_acc:\r\n                check = valid_acc\r\n                cnt = 0\r\n            else:\r\n                cnt += 1\r\n            self.on_epoch_end(\r\n                trial, model, epoch, logs={'valid_acc': valid_acc})\r\n\r\n            train_loss_metric.reset_states()\r\n            valid_loss_metric.reset_states()\r\n            train_acc_metric.reset_states()\r\n            valid_acc_metric.reset_states()\r\n            if cnt == 4:\r\n                print(\"Validation accuracy didn't improve for 5 epochs\")\r\n                break\r\n        print(\"Ending trial\")`\r\n\r\n`tuner = MyTuner(\r\n        oracle=kt.oracles.BayesianOptimization(\r\n            objective=kt.Objective('valid_acc', 'max'),\r\n            max_trials=mx_trial),\r\n        hypermodel=MyHyperModel(base_model),\r\n        directory='../tuning',\r\n        project_name=base_model)`\r\n`tuner.search(X_train, X_valid, epochs=epochs)\r\n`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/198", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/198/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/198/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/198", "id": 542268140, "node_id": "MDU6SXNzdWU1NDIyNjgxNDA=", "number": 198, "title": "tuner.search does not work in Windows", "user": {"login": "Bill-Fujimoto", "id": 40809714, "node_id": "MDQ6VXNlcjQwODA5NzE0", "avatar_url": "https://avatars3.githubusercontent.com/u/40809714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bill-Fujimoto", "html_url": "https://github.com/Bill-Fujimoto", "followers_url": "https://api.github.com/users/Bill-Fujimoto/followers", "following_url": "https://api.github.com/users/Bill-Fujimoto/following{/other_user}", "gists_url": "https://api.github.com/users/Bill-Fujimoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bill-Fujimoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bill-Fujimoto/subscriptions", "organizations_url": "https://api.github.com/users/Bill-Fujimoto/orgs", "repos_url": "https://api.github.com/users/Bill-Fujimoto/repos", "events_url": "https://api.github.com/users/Bill-Fujimoto/events{/privacy}", "received_events_url": "https://api.github.com/users/Bill-Fujimoto/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2019-12-25T06:27:51Z", "updated_at": "2020-04-02T06:51:06Z", "closed_at": "2020-01-06T18:16:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I didn't see any comments in the documentation re: Windows installation, but tuner.search function appears to not work in windows, it throws a complex error..  I then tested the same script in Linux and the problem was not there.  Please clarify in the documentation if in fact Windows is not compatible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/197", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/197/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/197/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/197/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/197", "id": 541986296, "node_id": "MDU6SXNzdWU1NDE5ODYyOTY=", "number": 197, "title": "Code to import results from keras-tuner", "user": {"login": "Bigf-sha", "id": 59189119, "node_id": "MDQ6VXNlcjU5MTg5MTE5", "avatar_url": "https://avatars0.githubusercontent.com/u/59189119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bigf-sha", "html_url": "https://github.com/Bigf-sha", "followers_url": "https://api.github.com/users/Bigf-sha/followers", "following_url": "https://api.github.com/users/Bigf-sha/following{/other_user}", "gists_url": "https://api.github.com/users/Bigf-sha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bigf-sha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bigf-sha/subscriptions", "organizations_url": "https://api.github.com/users/Bigf-sha/orgs", "repos_url": "https://api.github.com/users/Bigf-sha/repos", "events_url": "https://api.github.com/users/Bigf-sha/events{/privacy}", "received_events_url": "https://api.github.com/users/Bigf-sha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2019-12-24T04:35:32Z", "updated_at": "2020-05-22T21:13:00Z", "closed_at": "2020-01-06T18:19:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "_Originally posted by @ppurwar in https://github.com/keras-team/keras-tuner/issues/41#issuecomment-517650571_\r\n\r\nI was able to comeup with a workaround.  Use the attached code to import results in another script \r\n`\r\n\r\n    import os\r\n    import json\r\n    import kerastuner.engine.hyperparameters as hp_module\r\n    import kerastuner.engine.trial as trial_module\r\n    import kerastuner.engine.metrics_tracking as metrics_tracking\r\n    from kerastuner.abstractions.tensorflow import TENSORFLOW_UTILS as tf_utils\r\n    import tensorflow as tf\r\n    from tensorflow.keras.models import model_from_json\r\n\r\n    class SearchResults(object):\r\n        def __init__(self, directory, project_name, objective):\r\n            self.directory = directory\r\n            self.project_name = project_name\r\n            self.objective = objective\r\n            \r\n        def reload(self):\r\n            \"\"\"Populate `self.trials` and `self.oracle` state.\"\"\"\r\n            fname = os.path.join(self.directory, self.project_name, 'tuner.json')\r\n            state_data = tf_utils.read_file(fname)\r\n            state = json.loads(state_data)\r\n\r\n            self.hyperparameters = hp_module.HyperParameters.from_config(\r\n                state['hyperparameters'])\r\n            self.best_metrics = metrics_tracking.MetricsTracker.from_config(\r\n                state['best_metrics'])\r\n            self.trials = [trial_module.Trial.load(f) for f in state['trials']]\r\n            self.start_time = state['start_time']\r\n        \r\n        def _get_best_trials(self, num_trials=1):\r\n            if not self.best_metrics.exists(self.objective):\r\n                return []\r\n            trials = []\r\n            for x in self.trials:\r\n                if x.score is not None:\r\n                    trials.append(x)\r\n            if not trials:\r\n                return []\r\n            direction = self.best_metrics.directions[self.objective]\r\n            sorted_trials = sorted(trials,\r\n                                   key=lambda x: x.score,\r\n                                   reverse=direction == 'max')\r\n            return sorted_trials[:num_trials]\r\n        \r\n        def get_best_models(self, num_models = 1):\r\n            best_trials = self._get_best_trials(num_models)\r\n            models = []\r\n            for trial in best_trials:\r\n                hp = trial.hyperparameters.copy()\r\n                # Get best execution.\r\n                direction = self.best_metrics.directions[self.objective]\r\n                executions = sorted(\r\n                    trial.executions,\r\n                    key=lambda x: x.per_epoch_metrics.get_best_value(\r\n                        self.objective),\r\n                    reverse=direction == 'max')\r\n                \r\n                # Reload best checkpoint.\r\n                ckpt = executions[0].best_checkpoint\r\n                model_graph = ckpt + '-config.json'\r\n                model_wts = ckpt + '-weights.h5'\r\n                with open(model_graph, 'r') as f:\r\n                    model = model_from_json(f.read())\r\n                model.load_weights(model_wts)\r\n                models.append(model)\r\n            return models\r\n`\r\n#### example usage:\r\n        res = SearchResults(directory='./multiclass_classifier/training',\r\n                        project_name='search_bs2000',\r\n                        objective='val_accuracy'                    \r\n                       )\r\n        res.reload()\r\n        model = res.get_best_models()[0]\r\n\r\n_Originally posted by @ppurwar in https://github.com/keras-team/keras-tuner/issues/41#issuecomment-517650571_\r\n\r\nThere is someone that can guess why I have an error in the code? \r\nLine of code that fail:\r\n from kerastuner.abstractions.tensorflow import TENSORFLOW_UTILS as tf_utils\r\nError:\r\n ModuleNotFoundError: No module named 'kerastuner.abstractions.tensorflow'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/195", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/195/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/195/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/195", "id": 541816282, "node_id": "MDU6SXNzdWU1NDE4MTYyODI=", "number": 195, "title": "HyperResNet and HyperXception has wrong variable names on documentation", "user": {"login": "sriharshakonuru", "id": 21089800, "node_id": "MDQ6VXNlcjIxMDg5ODAw", "avatar_url": "https://avatars3.githubusercontent.com/u/21089800?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sriharshakonuru", "html_url": "https://github.com/sriharshakonuru", "followers_url": "https://api.github.com/users/sriharshakonuru/followers", "following_url": "https://api.github.com/users/sriharshakonuru/following{/other_user}", "gists_url": "https://api.github.com/users/sriharshakonuru/gists{/gist_id}", "starred_url": "https://api.github.com/users/sriharshakonuru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sriharshakonuru/subscriptions", "organizations_url": "https://api.github.com/users/sriharshakonuru/orgs", "repos_url": "https://api.github.com/users/sriharshakonuru/repos", "events_url": "https://api.github.com/users/sriharshakonuru/events{/privacy}", "received_events_url": "https://api.github.com/users/sriharshakonuru/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648487, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg3", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-12-23T16:14:07Z", "updated_at": "2020-01-07T21:00:57Z", "closed_at": "2020-01-07T21:00:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/194", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/194/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/194/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/194/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/194", "id": 541502013, "node_id": "MDU6SXNzdWU1NDE1MDIwMTM=", "number": 194, "title": "pip install keras-tuner modifies underlying tensorflow version, breaks default AWS EC2 GPU instance", "user": {"login": "spencerfrei", "id": 8077465, "node_id": "MDQ6VXNlcjgwNzc0NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/8077465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spencerfrei", "html_url": "https://github.com/spencerfrei", "followers_url": "https://api.github.com/users/spencerfrei/followers", "following_url": "https://api.github.com/users/spencerfrei/following{/other_user}", "gists_url": "https://api.github.com/users/spencerfrei/gists{/gist_id}", "starred_url": "https://api.github.com/users/spencerfrei/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spencerfrei/subscriptions", "organizations_url": "https://api.github.com/users/spencerfrei/orgs", "repos_url": "https://api.github.com/users/spencerfrei/repos", "events_url": "https://api.github.com/users/spencerfrei/events{/privacy}", "received_events_url": "https://api.github.com/users/spencerfrei/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-12-22T21:17:02Z", "updated_at": "2020-01-07T19:30:12Z", "closed_at": "2020-01-07T19:30:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like to user Keras Tuner to optimize hyperparameters on a model using a GPU EC2 (p2) instance on AWS.  The Ubuntu Deep Learning AMI on AWS (Ubuntu 16.04 Version 26.0 - ami-07728e9e2742b0662) comes with a conda environment that has TF 2.0.0 installed.  And from my understanding, keras tuner should work for any TF version >= 2.0.0.  However, when trying to use pip to install keras tuner, the installation re-installs TF 2.1.0-rc1, which is not desirable behavior.  In fact, something ends up breaking (one gets the error \"Failed to get convolution algorithm. This is probably because cuDNN failed to initialize...\") which I believe is due to the new installation not correctly setting up the CUDA + TF + GPU communication pathways.\r\n\r\nPer the suggested steps [in the other issue that might be related to this](https://github.com/keras-team/keras-tuner/issues/168#issuecomment-554044407), I have tried various sequences of in/uninstalling keras-tuner, in/uninstalling tensorflow, and in any sequence of installation and uninstallation of each option it results in the same breaking.  Regardless, I think it is undesirable behavior for keras tuner to change the TF version upon installation, especially given that this behavior prevents the ability to use keras tuner out of the box on the default AWS GPU EC2 instance.\r\n\r\nIs there a way to ensure that the installation of keras tuner via pip does not modify the TF version?  As far as I can tell, this is not spelled out in any of the documentation.\r\n\r\n# Steps to reproduce the error:\r\n    # open up a p2.large instance on AWS\r\n    source activate tensorflow2_p36\r\n    python -c 'import tensorflow as tf; print(tf.__version__)' \r\n    # returns 2.0.0\r\n    pip install keras-tuner\r\n    python -c 'import tensorflow as tf; print(tf.__version__)'\r\n    # returns 2.1.0-rc1\r\n\r\nSurprisingly, I have tried this on my local machine, and the above does not occur.  Namely, if I do:\r\n\r\n    pip install tensorflow --user\r\n    python -c 'import tensorflow as tf; print(tf.__version__)' \r\n    # returns 2.0.0\r\n    pip install keras-tuner\r\n    python -c 'import tensorflow as tf; print(tf.__version__)'\r\n    # returns 2.0.0\r\n\r\nI'm confused as to what is going on.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/193", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/193/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/193/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/193/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/193", "id": 541041377, "node_id": "MDU6SXNzdWU1NDEwNDEzNzc=", "number": 193, "title": "View hyperparameters for top trials", "user": {"login": "geohitt", "id": 59092415, "node_id": "MDQ6VXNlcjU5MDkyNDE1", "avatar_url": "https://avatars1.githubusercontent.com/u/59092415?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geohitt", "html_url": "https://github.com/geohitt", "followers_url": "https://api.github.com/users/geohitt/followers", "following_url": "https://api.github.com/users/geohitt/following{/other_user}", "gists_url": "https://api.github.com/users/geohitt/gists{/gist_id}", "starred_url": "https://api.github.com/users/geohitt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geohitt/subscriptions", "organizations_url": "https://api.github.com/users/geohitt/orgs", "repos_url": "https://api.github.com/users/geohitt/repos", "events_url": "https://api.github.com/users/geohitt/events{/privacy}", "received_events_url": "https://api.github.com/users/geohitt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-20T15:07:36Z", "updated_at": "2020-01-07T19:19:05Z", "closed_at": "2019-12-30T19:35:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "After completing a round of trial/epoch optimization I would like to view the best hyperparameters, architecture, etc. from the 5 or 10 best trials.  \r\n\r\nFrom reading previous threads get_best_hyperparameters was exposed to pull the best hp's from get_best_model.  However if i try to expand this to pull hp's s from the ten best models/trials the function returns an error.  From what i can tell the get_best_hyperparmaters only returns a list from the top model and there is no argument to specify grabbing from x # of models.  In my example I am running a couple thousand trials with 10 or so epochs per. \r\n\r\nHow can i view a results summary at the end of my search for my specified best hp's from the top 10 models. \r\n\r\nb_tuner.results_summary()\r\n#Retrieve the best model and display its architecture\r\nbest_model = b_tuner.get_best_models()[0]\r\nbest_model.summary()\r\n\r\n#tuner.get_best_hyperparameters(num_trials=1)\r\nhps = b_tuner.oracle.get_best_trials(num_trials=1)[0].hyperparameters.values\r\nprint('HyperParameters: {}'.format(hps))", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/192", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/192/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/192/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/192", "id": 540084993, "node_id": "MDU6SXNzdWU1NDAwODQ5OTM=", "number": 192, "title": "Question: RandomSearch will try max_trials times?", "user": {"login": "zoezhou1999", "id": 40137626, "node_id": "MDQ6VXNlcjQwMTM3NjI2", "avatar_url": "https://avatars0.githubusercontent.com/u/40137626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zoezhou1999", "html_url": "https://github.com/zoezhou1999", "followers_url": "https://api.github.com/users/zoezhou1999/followers", "following_url": "https://api.github.com/users/zoezhou1999/following{/other_user}", "gists_url": "https://api.github.com/users/zoezhou1999/gists{/gist_id}", "starred_url": "https://api.github.com/users/zoezhou1999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zoezhou1999/subscriptions", "organizations_url": "https://api.github.com/users/zoezhou1999/orgs", "repos_url": "https://api.github.com/users/zoezhou1999/repos", "events_url": "https://api.github.com/users/zoezhou1999/events{/privacy}", "received_events_url": "https://api.github.com/users/zoezhou1999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-12-19T05:21:52Z", "updated_at": "2020-01-06T18:27:17Z", "closed_at": "2020-01-06T18:27:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nIf I set the max_trials to the value that is larger than the actual times where the search can run or that a combination of different parameters can lead to, then will the search stop before the max trial is reached? Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/188", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/188/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/188/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/188", "id": 538900883, "node_id": "MDU6SXNzdWU1Mzg5MDA4ODM=", "number": 188, "title": "tuner.search to use self-implemented yield data generator which can be used by fit_generator?", "user": {"login": "zoezhou1999", "id": 40137626, "node_id": "MDQ6VXNlcjQwMTM3NjI2", "avatar_url": "https://avatars0.githubusercontent.com/u/40137626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zoezhou1999", "html_url": "https://github.com/zoezhou1999", "followers_url": "https://api.github.com/users/zoezhou1999/followers", "following_url": "https://api.github.com/users/zoezhou1999/following{/other_user}", "gists_url": "https://api.github.com/users/zoezhou1999/gists{/gist_id}", "starred_url": "https://api.github.com/users/zoezhou1999/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zoezhou1999/subscriptions", "organizations_url": "https://api.github.com/users/zoezhou1999/orgs", "repos_url": "https://api.github.com/users/zoezhou1999/repos", "events_url": "https://api.github.com/users/zoezhou1999/events{/privacy}", "received_events_url": "https://api.github.com/users/zoezhou1999/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2019-12-17T08:00:07Z", "updated_at": "2020-01-17T12:33:41Z", "closed_at": "2019-12-17T22:53:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI am trying to use tuner.search to use my own data generator which is implemented by yield.\r\nbut I got the following error.\r\n\r\n`\r\n\r\nTraceback (most recent call last):\r\n  File \"hp_tunning.py\", line 297, in <module>\r\n    tunning()\r\n  File \"hp_tunning.py\", line 206, in tunning\r\n    train_weight=train_weight)\r\n  File \"/home/i/i0000013/EmoPain2020-FinalVersion/train_tunning.py\", line 96, in train_tunning\r\n    class_weight=class_weight)\r\n  File \"/home/i/i0000013/miniconda3/envs/emopain-tf2/lib/python3.7/site-packages/kerastuner/engine/base_tuner.py\", line 122, in search\r\n    self.run_trial(trial, *fit_args, **fit_kwargs)\r\n  File \"/home/i/i0000013/miniconda3/envs/emopain-tf2/lib/python3.7/site-packages/kerastuner/engine/multi_execution_tuner.py\", line 95, in run_trial\r\n    history = model.fit(*fit_args, **fit_kwargs, callbacks=callbacks)\r\n  File \"/home/i/i0000013/miniconda3/envs/emopain-tf2/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training.py\", line 795, in fit\r\n    raise TypeError('Unrecognized keyword arguments: ' + str(kwargs))\r\nTypeError: Unrecognized keyword arguments: {'generator': <generator object DataHandler.prepare_feature_generator at 0x7fc073c7c1d0>}\r\n \r\n`\r\nDataHandler.prepare_feature_generator is a function that returns train_generator, val_generator...\r\nThank you so much~\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/185", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/185/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/185/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/185", "id": 537970254, "node_id": "MDU6SXNzdWU1Mzc5NzAyNTQ=", "number": 185, "title": "RandomSearch tuner uses the best score across epochs for each set of hyperparameters", "user": {"login": "pedro-ponte", "id": 51299451, "node_id": "MDQ6VXNlcjUxMjk5NDUx", "avatar_url": "https://avatars1.githubusercontent.com/u/51299451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pedro-ponte", "html_url": "https://github.com/pedro-ponte", "followers_url": "https://api.github.com/users/pedro-ponte/followers", "following_url": "https://api.github.com/users/pedro-ponte/following{/other_user}", "gists_url": "https://api.github.com/users/pedro-ponte/gists{/gist_id}", "starred_url": "https://api.github.com/users/pedro-ponte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pedro-ponte/subscriptions", "organizations_url": "https://api.github.com/users/pedro-ponte/orgs", "repos_url": "https://api.github.com/users/pedro-ponte/repos", "events_url": "https://api.github.com/users/pedro-ponte/events{/privacy}", "received_events_url": "https://api.github.com/users/pedro-ponte/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-12-14T21:52:51Z", "updated_at": "2020-01-06T18:33:58Z", "closed_at": "2019-12-17T22:56:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is this behaviour expected? It would make more sense to me to use the score after the last epoch.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/184", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/184/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/184/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/184", "id": 537223617, "node_id": "MDU6SXNzdWU1MzcyMjM2MTc=", "number": 184, "title": "Is there a way to perform multiple fit()'s per trial?", "user": {"login": "ben-arnao", "id": 8053809, "node_id": "MDQ6VXNlcjgwNTM4MDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/8053809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben-arnao", "html_url": "https://github.com/ben-arnao", "followers_url": "https://api.github.com/users/ben-arnao/followers", "following_url": "https://api.github.com/users/ben-arnao/following{/other_user}", "gists_url": "https://api.github.com/users/ben-arnao/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben-arnao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben-arnao/subscriptions", "organizations_url": "https://api.github.com/users/ben-arnao/orgs", "repos_url": "https://api.github.com/users/ben-arnao/repos", "events_url": "https://api.github.com/users/ben-arnao/events{/privacy}", "received_events_url": "https://api.github.com/users/ben-arnao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-12-12T21:29:38Z", "updated_at": "2020-01-06T18:36:27Z", "closed_at": "2020-01-06T18:36:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For a single model test i would like to perform multiple runs, and the score for this model should be the worst loss of these runs to mitigate randomness in training and try to get a more stable number to represent a particular model's score.\r\n\r\nAlso is there any function to provide a get_score() method so we can define how many trials should be ran for a particular model, also this will give us a way to optimize on training params as well.\r\n\r\nIs there an easy way to do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/183", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/183/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/183/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/183", "id": 536687453, "node_id": "MDU6SXNzdWU1MzY2ODc0NTM=", "number": 183, "title": "Please document how to fetch available measurements", "user": {"login": "LanceNorskog", "id": 166777, "node_id": "MDQ6VXNlcjE2Njc3Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/166777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LanceNorskog", "html_url": "https://github.com/LanceNorskog", "followers_url": "https://api.github.com/users/LanceNorskog/followers", "following_url": "https://api.github.com/users/LanceNorskog/following{/other_user}", "gists_url": "https://api.github.com/users/LanceNorskog/gists{/gist_id}", "starred_url": "https://api.github.com/users/LanceNorskog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LanceNorskog/subscriptions", "organizations_url": "https://api.github.com/users/LanceNorskog/orgs", "repos_url": "https://api.github.com/users/LanceNorskog/repos", "events_url": "https://api.github.com/users/LanceNorskog/events{/privacy}", "received_events_url": "https://api.github.com/users/LanceNorskog/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-12-12T00:25:42Z", "updated_at": "2020-01-06T18:51:28Z", "closed_at": "2020-01-06T18:51:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do you fetch a sparse dataframe of measurements out of a finished tuning run?\r\nMy use case is to run keras-tuner on Colab, fetch the numbers into a dataframe, upload the dataframe to Google Sheet, and examine them there.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/182", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/182/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/182/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/182/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/182", "id": 535478637, "node_id": "MDU6SXNzdWU1MzU0Nzg2Mzc=", "number": 182, "title": "How can keras-tuner work together with TensorFlow canned estimators?", "user": {"login": "shendiaomo", "id": 4180295, "node_id": "MDQ6VXNlcjQxODAyOTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/4180295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shendiaomo", "html_url": "https://github.com/shendiaomo", "followers_url": "https://api.github.com/users/shendiaomo/followers", "following_url": "https://api.github.com/users/shendiaomo/following{/other_user}", "gists_url": "https://api.github.com/users/shendiaomo/gists{/gist_id}", "starred_url": "https://api.github.com/users/shendiaomo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shendiaomo/subscriptions", "organizations_url": "https://api.github.com/users/shendiaomo/orgs", "repos_url": "https://api.github.com/users/shendiaomo/repos", "events_url": "https://api.github.com/users/shendiaomo/events{/privacy}", "received_events_url": "https://api.github.com/users/shendiaomo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-12-10T04:04:13Z", "updated_at": "2020-01-07T19:43:03Z", "closed_at": "2019-12-12T00:03:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "The canned estimators are widely used by many people who want just an out-of-the-box machine learning tool. If `keras-tuner` works for these people, both estimators and `keras-tuner` will be more widely used.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/181", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/181/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/181/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/181", "id": 535432498, "node_id": "MDU6SXNzdWU1MzU0MzI0OTg=", "number": 181, "title": "how to print and save best model?", "user": {"login": "croshong", "id": 7292758, "node_id": "MDQ6VXNlcjcyOTI3NTg=", "avatar_url": "https://avatars3.githubusercontent.com/u/7292758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/croshong", "html_url": "https://github.com/croshong", "followers_url": "https://api.github.com/users/croshong/followers", "following_url": "https://api.github.com/users/croshong/following{/other_user}", "gists_url": "https://api.github.com/users/croshong/gists{/gist_id}", "starred_url": "https://api.github.com/users/croshong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/croshong/subscriptions", "organizations_url": "https://api.github.com/users/croshong/orgs", "repos_url": "https://api.github.com/users/croshong/repos", "events_url": "https://api.github.com/users/croshong/events{/privacy}", "received_events_url": "https://api.github.com/users/croshong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-12-10T01:18:40Z", "updated_at": "2019-12-11T04:21:18Z", "closed_at": "2019-12-11T04:21:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi \r\n\r\nI'm using Keras tuner to tune the hyperparameter in my model.\r\n\r\nIt seems to work. but I want to see the detail about the model which is selected by tuner.get_best_models\r\n\r\nIn model generation without Keras tuner, I could see the detail about model with model.summary()\r\n\r\nand save model with model.save().\r\n\r\nBut it doesn't work in keras tuner.\r\n\r\nHow can I see the model detail or hyperparameter of selected best model ?\r\n\r\nThanks \r\n\r\nregards", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/180", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/180/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/180/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/180/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/180", "id": 535377002, "node_id": "MDU6SXNzdWU1MzUzNzcwMDI=", "number": 180, "title": "hp.Int out of min max value", "user": {"login": "bensdm", "id": 29406515, "node_id": "MDQ6VXNlcjI5NDA2NTE1", "avatar_url": "https://avatars1.githubusercontent.com/u/29406515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bensdm", "html_url": "https://github.com/bensdm", "followers_url": "https://api.github.com/users/bensdm/followers", "following_url": "https://api.github.com/users/bensdm/following{/other_user}", "gists_url": "https://api.github.com/users/bensdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/bensdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bensdm/subscriptions", "organizations_url": "https://api.github.com/users/bensdm/orgs", "repos_url": "https://api.github.com/users/bensdm/repos", "events_url": "https://api.github.com/users/bensdm/events{/privacy}", "received_events_url": "https://api.github.com/users/bensdm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-12-09T22:30:03Z", "updated_at": "2020-01-06T18:55:51Z", "closed_at": "2020-01-06T18:55:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to use the library to find the best architecture for my infoVAE. But it seem's that there is an issue with hp.Int as the value is sometimes not between min_value and max_value. This sometimes leads to an error from\r\n https://github.com/keras-team/keras-tuner/blob/master/kerastuner/engine/hyperparameters.py\r\n\r\n`closest_index = np.abs(values - value).argmin()`as values - value is empty\r\n\r\nOr am i doing smething wrong\r\n\r\ncode to reproduce:\r\n\r\n```\r\nDATASET_SIZE, input_shape = data.shape\r\n\r\ndef compute_kernel(x, y, name):\r\n    x_size = tf.shape(x)[0]\r\n    y_size = tf.shape(y)[0]\r\n    dim = tf.shape(x)[1]\r\n    tiled_x = tf.tile(tf.reshape(x, tf.stack(\r\n        [x_size, 1, dim], name=name + 's1')), tf.stack([1, y_size, 1], name=name + 's2'))\r\n    tiled_y = tf.tile(tf.reshape(y, tf.stack(\r\n        [1, y_size, dim], name=name + 's3')), tf.stack([x_size, 1, 1], name=name + 's4'))\r\n    return tf.exp(-tf.reduce_mean(tf.square(tiled_x - tiled_y),\r\n                                  axis=2) / tf.cast(dim, tf.float32))\r\n\r\ndef compute_mmd(x, y, name):\r\n    x_kernel = compute_kernel(x, x, name+'x')\r\n    y_kernel = compute_kernel(y, y, name+'y')\r\n    xy_kernel = compute_kernel(x, y, name+'xy')\r\n    return tf.reduce_mean(x_kernel) + tf.reduce_mean(y_kernel) - \\\r\n        2 * tf.reduce_mean(xy_kernel)\r\n\r\n\r\ndef cust_loss(encoder_input_, encoder_output_, decoder_output_, latent_dim):\r\n    true_samples = tf.random.normal(tf.stack([batch_size, latent_dim]))\r\n    loss_mmd = compute_mmd(true_samples, encoder_output_,'1')\r\n    loss_nll = tf.reduce_mean(tf.square(encoder_input_ - decoder_output_))\r\n    loss = tf.reduce_mean(loss_nll + loss_mmd, name='loss')\r\n    return loss\r\n\r\nclass MyHyperModel(kerastuner.HyperModel):\r\n\r\n    def build(self, hp):\r\n        LATENT_DIM = hp.Int('latent_dim', min_value=2, max_value=12)\r\n        GAUSSIAN_NOISE = hp.Float(\r\n            'gaussian_noise',  min_value=0.001, max_value=0.1, sampling='log')\r\n        N_LAYERS = hp.Int('n_layers', min_value=2, max_value=5)\r\n        # ACTIVATION = hp.Choice('activation',['linear','tanh'])\r\n        hidden_dims = []\r\n        for i in range(N_LAYERS):\r\n            hidden_dims.append(hp.Int('units_layer_'+str(i), min_value=LATENT_DIM+N_LAYERS-i, \r\n                                                             max_value=128 if i==0 else hidden_dims[-1]))\r\n\r\n        encoder_input = tf.keras.Input(shape=(input_shape,), name='enc_input')\r\n        encoder_input_noisy = tf.keras.layers.GaussianNoise(\r\n            GAUSSIAN_NOISE, name=\"encoder_input_added_noise\")(encoder_input)\r\n\r\n        x = tf.keras.layers.Dense(\r\n            hidden_dims[0],\r\n            activation='relu')(encoder_input_noisy)\r\n        for d in hidden_dims[1:]:\r\n            x = tf.keras.layers.Dense(d)(x)\r\n            x = tf.keras.layers.BatchNormalization()(x)\r\n            x = tf.keras.layers.Activation('relu')(x)\r\n            x = tf.keras.layers.Dropout(0.5)(x)\r\n\r\n        encoder_output = tf.keras.layers.Dense(LATENT_DIM)(x)\r\n\r\n        encoder = tf.keras.Model(encoder_input, encoder_output, name='encoder')\r\n\r\n        x = tf.keras.layers.Dense(\r\n            hidden_dims[-1], activation='relu')(encoder_output)\r\n        for d in hidden_dims[-2::-1]:\r\n            x = tf.keras.layers.Dense(d)(x)\r\n            x = tf.keras.layers.BatchNormalization()(x)\r\n            x = tf.keras.layers.Activation('relu')(x)\r\n            x = tf.keras.layers.Dropout(0.5)(x)\r\n        decoder_output = tf.keras.layers.Dense(input_shape, activation='relu')(x)\r\n        autoencoder = tf.keras.Model(\r\n            encoder_input, decoder_output, name='autoencoder')\r\n\r\n        autoencoder.add_loss(\r\n            cust_loss(encoder_input, encoder_output, decoder_output, LATENT_DIM))\r\n\r\n        autoencoder.compile(optimizer='adam')\r\n        return autoencoder\r\n\r\nhypermodel = MyHyperModel()\r\ntuner = kerastuner.tuners.hyperband.Hyperband(\r\n    hypermodel,\r\n    # tune_new_entries=False,\r\n    # allow_new_entries=False,\r\n    objective='val_loss',\r\n    max_epochs=max_epochs,\r\n    directory='keras-tuner',\r\n    \r\n    project_name='infoVAE_'+datetime.datetime.now().strftime(\"%Y%m%d-%H%M\"))\r\n\r\ntuner.search(data.values,\r\n            epochs = max_epochs,\r\n            validation_split=0.2,\r\n     \r\n```       batch_size = batch_size)\r\n\r\n\r\n\r\n`[Trial complete]\r\n[Trial summary]\r\n > Hp values:\r\n |-gaussian_noise: 0.05666365603069349\r\n |-latent_dim: 8\r\n |-n_layers: 3\r\n |-tuner/bracket: 2\r\n |-tuner/epochs: 2\r\n |-tuner/initial_epoch: 0\r\n |-tuner/round: 0\r\n |-units_layer_0: 29\r\n |-units_layer_1: 4\r\n |-units_layer_2: 9\r\n |-Score: 0.08588689330775859\r\n |-Best step: 0\r\nTraceback (most recent call last):\r\n  File \"c:/Users/BMenthiere/Documents/TT/v2/infoVAE.py\", line 119, in <module>\r\n    batch_size = batch_size)\r\n  File \"C:\\Users\\BMenthiere\\AppData\\Local\\Continuum\\anaconda3\\envs\\TT\\lib\\site-packages\\kerastuner\\engine\\base_tuner.py\", line 112, in search\r\n    trial = self.oracle.create_trial(self.tuner_id)\r\n  File \"C:\\Users\\BMenthiere\\AppData\\Local\\Continuum\\anaconda3\\envs\\TT\\lib\\site-packages\\kerastuner\\engine\\oracle.py\", line 149, in create_trial\r\n    response = self._populate_space(trial_id)\r\n  File \"C:\\Users\\BMenthiere\\AppData\\Local\\Continuum\\anaconda3\\envs\\TT\\lib\\site-packages\\kerastuner\\tuners\\hyperband.py\", line 134, in _populate_space\r\n    return self._random_trial(trial_id, bracket)\r\n  File \"C:\\Users\\BMenthiere\\AppData\\Local\\Continuum\\anaconda3\\envs\\TT\\lib\\site-packages\\kerastuner\\tuners\\hyperband.py\", line 215, in _random_trial\r\n    values = self._random_values()\r\n  File \"C:\\Users\\BMenthiere\\AppData\\Local\\Continuum\\anaconda3\\envs\\TT\\lib\\site-packages\\kerastuner\\tuners\\hyperband.py\", line 266, in _random_values\r\n    values[p.name] = p.random_sample(self._seed_state)\r\n  File \"C:\\Users\\BMenthiere\\AppData\\Local\\Continuum\\anaconda3\\envs\\TT\\lib\\site-packages\\kerastuner\\engine\\hyperparameters.py\", line 241, in random_sample\r\n    return cumulative_prob_to_value(prob, self)\r\n  File \"C:\\Users\\BMenthiere\\AppData\\Local\\Continuum\\anaconda3\\envs\\TT\\lib\\site-packages\\kerastuner\\engine\\hyperparameters.py\", line 859, in cumulative_prob_to_value\r\n    closest_index = np.abs(values - value).argmin()\r\nValueError: attempt to get argmin of an empty sequence`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/173", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/173/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/173/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/173", "id": 528466675, "node_id": "MDU6SXNzdWU1Mjg0NjY2NzU=", "number": 173, "title": "Unexpected hp.int behavior", "user": {"login": "DavidBSauer", "id": 40378905, "node_id": "MDQ6VXNlcjQwMzc4OTA1", "avatar_url": "https://avatars3.githubusercontent.com/u/40378905?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DavidBSauer", "html_url": "https://github.com/DavidBSauer", "followers_url": "https://api.github.com/users/DavidBSauer/followers", "following_url": "https://api.github.com/users/DavidBSauer/following{/other_user}", "gists_url": "https://api.github.com/users/DavidBSauer/gists{/gist_id}", "starred_url": "https://api.github.com/users/DavidBSauer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DavidBSauer/subscriptions", "organizations_url": "https://api.github.com/users/DavidBSauer/orgs", "repos_url": "https://api.github.com/users/DavidBSauer/repos", "events_url": "https://api.github.com/users/DavidBSauer/events{/privacy}", "received_events_url": "https://api.github.com/users/DavidBSauer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-26T03:37:07Z", "updated_at": "2019-12-03T18:30:08Z", "closed_at": "2019-12-03T18:30:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\nI am trying out keras-tuner and am seeing some unexpected behavior. The selected hyperparameter values is selecting values beyond the given range. Here is some dummy code to recreate the issue. \r\n\r\n```\r\ndef modelbuilder(hp):\r\n    model = keras.Sequential()\r\n    for y in range(1,5,1):\r\n        max_width = random.randint(2,50)\r\n        print('Max width: '+str(max_width))\r\n        width = hp.Int('width_layer_'+str(y),2,max_width,step=1,sampling='linear')\r\n        print('Width: '+str(width))\r\n    model.add(keras.layers.Dense(width,activation='linear',name='Dense_'+str(y)))\r\n    model.add(keras.layers.Dense(1,activation='linear',name='output'))\r\n    optimizer = keras.optimizers.Adam(lr=0.01,beta_1=0.9,beta_2=0.999,epsilon= 1e-8)\r\n    model.compile(loss='mse',optimizer=optimizer,metrics=['mse'])\r\n    print(model.summary)\r\n    return model\r\n```\r\n\r\nWhich gives the output:\r\n\r\n> Max width: 8\r\nWidth: 3\r\nMax width: 24\r\nWidth: 25\r\nMax width: 2\r\nWidth: 12\r\nMax width: 12\r\nWidth: 40\r\n<bound method Network.summary of <tensorflow.python.keras.engine.sequential.Sequential object at 0x7f6cb973e240>>\r\n[Trial complete]\r\n[Trial summary]\r\n > Hp values:\r\n |-width_layer_1: 3\r\n |-width_layer_2: 25\r\n |-width_layer_3: 12\r\n |-width_layer_4: 40\r\n |-Score: 0.0873036989569664\r\n |-Best step: 0\r\n\r\n>\r\nAny advice would be greatly appreciated. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/170", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/170/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/170/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/170/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/170", "id": 524870825, "node_id": "MDU6SXNzdWU1MjQ4NzA4MjU=", "number": 170, "title": "Callbacks in the tuner", "user": {"login": "TreeKat71", "id": 15715848, "node_id": "MDQ6VXNlcjE1NzE1ODQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/15715848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TreeKat71", "html_url": "https://github.com/TreeKat71", "followers_url": "https://api.github.com/users/TreeKat71/followers", "following_url": "https://api.github.com/users/TreeKat71/following{/other_user}", "gists_url": "https://api.github.com/users/TreeKat71/gists{/gist_id}", "starred_url": "https://api.github.com/users/TreeKat71/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TreeKat71/subscriptions", "organizations_url": "https://api.github.com/users/TreeKat71/orgs", "repos_url": "https://api.github.com/users/TreeKat71/repos", "events_url": "https://api.github.com/users/TreeKat71/events{/privacy}", "received_events_url": "https://api.github.com/users/TreeKat71/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-11-19T09:10:04Z", "updated_at": "2019-12-10T08:58:13Z", "closed_at": "2019-12-10T08:58:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use keras callbacks with keras-tuner, I am not sure if it is the right way\r\n\r\n```\r\ntensorboard = TensorBoard( ... )\r\n\r\nearly_stop = EarlyStopping( ... )\r\n\r\ntuner = RandomSearch( ..., executions_per_trial=2)\r\n\r\ntuner.search( ..., callbacks=[early_stop, tensorboard])\r\n```\r\n\r\nThe results above turn out, callbacks only work on the first execution (each trial).\r\n\r\nIs it the correct way to use it? and does the behavior act like maintainers think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/169", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/169/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/169/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/169/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/169", "id": 522731709, "node_id": "MDU6SXNzdWU1MjI3MzE3MDk=", "number": 169, "title": "Questions: choice between tensorboard plugins and keras-tuner", "user": {"login": "TreeKat71", "id": 15715848, "node_id": "MDQ6VXNlcjE1NzE1ODQ4", "avatar_url": "https://avatars3.githubusercontent.com/u/15715848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TreeKat71", "html_url": "https://github.com/TreeKat71", "followers_url": "https://api.github.com/users/TreeKat71/followers", "following_url": "https://api.github.com/users/TreeKat71/following{/other_user}", "gists_url": "https://api.github.com/users/TreeKat71/gists{/gist_id}", "starred_url": "https://api.github.com/users/TreeKat71/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TreeKat71/subscriptions", "organizations_url": "https://api.github.com/users/TreeKat71/orgs", "repos_url": "https://api.github.com/users/TreeKat71/repos", "events_url": "https://api.github.com/users/TreeKat71/events{/privacy}", "received_events_url": "https://api.github.com/users/TreeKat71/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-14T09:32:36Z", "updated_at": "2019-11-18T20:07:04Z", "closed_at": "2019-11-18T20:07:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\nI want to know the difference between tensorboard plugins and keras-tuner.\r\nI read both documents, and I think the syntax is quite similar.\r\nCurrently I use keras with tf2, is it better to use keras-tuner?\r\nNeed some advice, thanks !\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/168", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/168/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/168/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/168/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/168", "id": 521436575, "node_id": "MDU6SXNzdWU1MjE0MzY1NzU=", "number": 168, "title": "pip install keras-tuner ignores tensorflow-gpu and installs unwanted tensorflow (cpu version) instead", "user": {"login": "svdHero", "id": 24250824, "node_id": "MDQ6VXNlcjI0MjUwODI0", "avatar_url": "https://avatars3.githubusercontent.com/u/24250824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/svdHero", "html_url": "https://github.com/svdHero", "followers_url": "https://api.github.com/users/svdHero/followers", "following_url": "https://api.github.com/users/svdHero/following{/other_user}", "gists_url": "https://api.github.com/users/svdHero/gists{/gist_id}", "starred_url": "https://api.github.com/users/svdHero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/svdHero/subscriptions", "organizations_url": "https://api.github.com/users/svdHero/orgs", "repos_url": "https://api.github.com/users/svdHero/repos", "events_url": "https://api.github.com/users/svdHero/events{/privacy}", "received_events_url": "https://api.github.com/users/svdHero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-11-12T09:42:14Z", "updated_at": "2020-01-07T19:42:08Z", "closed_at": "2020-01-07T19:42:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "# Poblem description\r\nI am using Tensorflow on an Nvidia GPU by means of the PyPi-package \"tensorflow-gpu\" on Ubuntu 18.04.\r\n\r\nWhen I install keras-tuner, the PyPi-package \"tensorflow\" is unnecessarily pulled in. As a result, my machine learning scripts are not executed on the GPU anymore, but on the CPU instead.\r\n\r\n# Steps to reproduce\r\n```\r\nmkdir my_test\r\ncd my_test\r\npython3 -m venv my_env\r\nsource my_env/bin/activate\r\npip install -U pip setuptools wheel\r\npip install tensorflow-gpu\r\npip install keras-tuner\r\npython -c \"import tensorflow as tf; print(tf.__version__); print(tf.reduce_sum(tf.random.normal((1000, 1000))))\"\r\n```\r\n\r\n# Expected behaviour\r\nGPU-version of Tensorflow is used.\r\n\r\n# Actual behaviour\r\nCPU-version of Tensorflow is used.\r\n\r\n# Workaround\r\nAfter installation, execute\r\n```\r\npip uninstall -y tensorflow\r\npip install -U --ignore-installed tensorflow-gpu\r\n```\r\nThis results in the error message\r\n```\r\nERROR: keras-tuner 1.0.0 requires tensorflow>=2.0.0-beta1, which is not installed.\r\n```\r\nwhich (hopefully) can be ignored, since tensorflow-gpu is installed. In fact,\r\n```\r\npython -c \"import tensorflow as tf; print(tf.__version__); print(tf.reduce_sum(tf.random.normal((1000, 1000))))\"\r\n```\r\nis executed on the GPU successfully now.\r\n\r\n# Questions\r\n- Is this a bug?\r\n- Can the error message for the above workaround be ignored safely?\r\n- Is it possible to remove the need for the above workaround?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/167", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/167/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/167/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/167", "id": 521415510, "node_id": "MDU6SXNzdWU1MjE0MTU1MTA=", "number": 167, "title": "val_accuracy is low", "user": {"login": "chaos1992", "id": 45687715, "node_id": "MDQ6VXNlcjQ1Njg3NzE1", "avatar_url": "https://avatars0.githubusercontent.com/u/45687715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaos1992", "html_url": "https://github.com/chaos1992", "followers_url": "https://api.github.com/users/chaos1992/followers", "following_url": "https://api.github.com/users/chaos1992/following{/other_user}", "gists_url": "https://api.github.com/users/chaos1992/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaos1992/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaos1992/subscriptions", "organizations_url": "https://api.github.com/users/chaos1992/orgs", "repos_url": "https://api.github.com/users/chaos1992/repos", "events_url": "https://api.github.com/users/chaos1992/events{/privacy}", "received_events_url": "https://api.github.com/users/chaos1992/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-11-12T09:02:36Z", "updated_at": "2020-01-07T19:43:15Z", "closed_at": "2019-11-19T19:57:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I run the tunabel_resnet_cifar10.py, the log show that the accuracy is high (about 0.98), but the val_accuracy is low (about 0.6). \r\n\r\nEpoch 50/50\r\n45000/45000 [==========================] - 449s 10ms/samplr - loss: 0.0350  - accuracy: 0.9882 - val_loss: 2.6765 - val_accuracy: 0.5934\r\n\r\nIs it a normal performance?\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/166", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/166/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/166/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/166/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/166", "id": 521180805, "node_id": "MDU6SXNzdWU1MjExODA4MDU=", "number": 166, "title": "Multi-GPU Support", "user": {"login": "ibabbar", "id": 19336465, "node_id": "MDQ6VXNlcjE5MzM2NDY1", "avatar_url": "https://avatars1.githubusercontent.com/u/19336465?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibabbar", "html_url": "https://github.com/ibabbar", "followers_url": "https://api.github.com/users/ibabbar/followers", "following_url": "https://api.github.com/users/ibabbar/following{/other_user}", "gists_url": "https://api.github.com/users/ibabbar/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibabbar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibabbar/subscriptions", "organizations_url": "https://api.github.com/users/ibabbar/orgs", "repos_url": "https://api.github.com/users/ibabbar/repos", "events_url": "https://api.github.com/users/ibabbar/events{/privacy}", "received_events_url": "https://api.github.com/users/ibabbar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-11-11T20:51:58Z", "updated_at": "2020-01-07T19:42:19Z", "closed_at": "2020-01-07T19:42:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there a way to utilize all available GPUs for this hyperparameter optimisation process?\r\n\r\nFor example, keras.utils has a multi_gpu_model that can allow multithreading for training purposes. Is there an equivalent tool that we can use? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/164", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/164/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/164/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/164", "id": 520973997, "node_id": "MDU6SXNzdWU1MjA5NzM5OTc=", "number": 164, "title": "meaning of \"best_step\"", "user": {"login": "srozov", "id": 26570977, "node_id": "MDQ6VXNlcjI2NTcwOTc3", "avatar_url": "https://avatars2.githubusercontent.com/u/26570977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srozov", "html_url": "https://github.com/srozov", "followers_url": "https://api.github.com/users/srozov/followers", "following_url": "https://api.github.com/users/srozov/following{/other_user}", "gists_url": "https://api.github.com/users/srozov/gists{/gist_id}", "starred_url": "https://api.github.com/users/srozov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srozov/subscriptions", "organizations_url": "https://api.github.com/users/srozov/orgs", "repos_url": "https://api.github.com/users/srozov/repos", "events_url": "https://api.github.com/users/srozov/events{/privacy}", "received_events_url": "https://api.github.com/users/srozov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648487, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg3", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-11-11T13:48:48Z", "updated_at": "2020-01-07T19:43:31Z", "closed_at": "2019-11-18T20:07:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "What is the meaning of `best_step` displayed in the trial summary and why is it 0 ? Is it somehow related to `executions_per_trial` ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/160", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/160/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/160/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/160/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/160", "id": 519970223, "node_id": "MDU6SXNzdWU1MTk5NzAyMjM=", "number": 160, "title": "New features about parallel processing for tuner?", "user": {"login": "Davidsirui", "id": 33369174, "node_id": "MDQ6VXNlcjMzMzY5MTc0", "avatar_url": "https://avatars3.githubusercontent.com/u/33369174?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Davidsirui", "html_url": "https://github.com/Davidsirui", "followers_url": "https://api.github.com/users/Davidsirui/followers", "following_url": "https://api.github.com/users/Davidsirui/following{/other_user}", "gists_url": "https://api.github.com/users/Davidsirui/gists{/gist_id}", "starred_url": "https://api.github.com/users/Davidsirui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Davidsirui/subscriptions", "organizations_url": "https://api.github.com/users/Davidsirui/orgs", "repos_url": "https://api.github.com/users/Davidsirui/repos", "events_url": "https://api.github.com/users/Davidsirui/events{/privacy}", "received_events_url": "https://api.github.com/users/Davidsirui/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648487, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg3", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-11-08T11:43:35Z", "updated_at": "2020-01-07T19:43:52Z", "closed_at": "2019-11-08T20:43:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear KerasTuner team:\r\nDo you have a plan for making the tuner parallel run on distribution machine? I think many people may need this feature? If you don't, can I implement a a version and pull a request? \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/154", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/154/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/154/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/154", "id": 517772624, "node_id": "MDU6SXNzdWU1MTc3NzI2MjQ=", "number": 154, "title": "search_generator function does not exist", "user": {"login": "TrifonT", "id": 12198624, "node_id": "MDQ6VXNlcjEyMTk4NjI0", "avatar_url": "https://avatars3.githubusercontent.com/u/12198624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TrifonT", "html_url": "https://github.com/TrifonT", "followers_url": "https://api.github.com/users/TrifonT/followers", "following_url": "https://api.github.com/users/TrifonT/following{/other_user}", "gists_url": "https://api.github.com/users/TrifonT/gists{/gist_id}", "starred_url": "https://api.github.com/users/TrifonT/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TrifonT/subscriptions", "organizations_url": "https://api.github.com/users/TrifonT/orgs", "repos_url": "https://api.github.com/users/TrifonT/repos", "events_url": "https://api.github.com/users/TrifonT/events{/privacy}", "received_events_url": "https://api.github.com/users/TrifonT/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648487, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg3", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2019-11-05T13:28:10Z", "updated_at": "2020-01-07T19:44:21Z", "closed_at": "2019-11-08T20:45:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "This function is mentioned as a V0.5 feature but it does not exist. I have searched in the source code as well and I couldn't find anything related to it. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/153", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/153/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/153/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/153/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/153", "id": 517735820, "node_id": "MDU6SXNzdWU1MTc3MzU4MjA=", "number": 153, "title": "Data augmentation", "user": {"login": "bhack", "id": 1710528, "node_id": "MDQ6VXNlcjE3MTA1Mjg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1710528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bhack", "html_url": "https://github.com/bhack", "followers_url": "https://api.github.com/users/bhack/followers", "following_url": "https://api.github.com/users/bhack/following{/other_user}", "gists_url": "https://api.github.com/users/bhack/gists{/gist_id}", "starred_url": "https://api.github.com/users/bhack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bhack/subscriptions", "organizations_url": "https://api.github.com/users/bhack/orgs", "repos_url": "https://api.github.com/users/bhack/repos", "events_url": "https://api.github.com/users/bhack/events{/privacy}", "received_events_url": "https://api.github.com/users/bhack/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648487, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg3", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-11-05T12:12:35Z", "updated_at": "2019-11-19T14:52:37Z", "closed_at": "2019-11-08T20:47:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Do you plan to support/document/colab Keras tuner use in augmentation pipelines?\r\n\r\nhttps://blog.insightdatascience.com/automl-for-data-augmentation-e87cf692c366\r\n\r\nhttps://arxiv.org/abs/1905.07373", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/151", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/151/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/151/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/151/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/151", "id": 517039986, "node_id": "MDU6SXNzdWU1MTcwMzk5ODY=", "number": 151, "title": "IndexError: list index out of range when using BayesianOptimization ", "user": {"login": "PyDataBlog", "id": 29863388, "node_id": "MDQ6VXNlcjI5ODYzMzg4", "avatar_url": "https://avatars2.githubusercontent.com/u/29863388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PyDataBlog", "html_url": "https://github.com/PyDataBlog", "followers_url": "https://api.github.com/users/PyDataBlog/followers", "following_url": "https://api.github.com/users/PyDataBlog/following{/other_user}", "gists_url": "https://api.github.com/users/PyDataBlog/gists{/gist_id}", "starred_url": "https://api.github.com/users/PyDataBlog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PyDataBlog/subscriptions", "organizations_url": "https://api.github.com/users/PyDataBlog/orgs", "repos_url": "https://api.github.com/users/PyDataBlog/repos", "events_url": "https://api.github.com/users/PyDataBlog/events{/privacy}", "received_events_url": "https://api.github.com/users/PyDataBlog/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648486, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg2", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-11-04T09:41:17Z", "updated_at": "2019-11-04T21:00:56Z", "closed_at": "2019-11-04T20:15:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently having issues trying to `BayesianOptimization` for the tuning process for a binary classifier. This issue doesn't appear with `RandomSearch` and `Hyperband`. Here's how the hyper model is constructed:\r\n\r\n\r\n```py\r\nclass MyHyperModel(HyperModel):\r\n\r\n    def __init__(self, num_classes):\r\n        self.num_classes = num_classes\r\n\r\n    def build(self, hp):\r\n\r\n        model = keras.Sequential()\r\n\r\n        \r\n        for i in range(hp.Int('num_layers', 2, 20)):\r\n\r\n            model.add(keras.layers.Dense(units=hp.Int('units_' + str(i),\r\n                                                min_value=32,\r\n                                                max_value=512, \r\n                                                step=32),\r\n                                   activation='relu'))\r\n\r\n        model.add(keras.layers.Dense(self.num_classes, activation='sigmoid'))\r\n\r\n        model.compile(\r\n            optimizer=keras.optimizers.Adam(\r\n                hp.Choice('learning_rate',\r\n                          values=[1e-2, 1e-3, 1e-4])),\r\n            loss='binary_crossentropy',\r\n            metrics=['accuracy'])\r\n\r\n        return model\r\n\r\n\r\nhypermodel = MyHyperModel(num_classes=1)\r\n\r\ntuner = BayesianOptimization(\r\n    hypermodel,\r\n    objective='accuracy',\r\n    max_trials=10,\r\n    project_name='test')\r\n\r\ntuner.search(X_train.values, y_train.values.flatten(),\r\n             epochs=10,\r\n             validation_data=(X_test.values, y_test.values.flatten()))\r\n\r\n```\r\n\r\nThe search works well for a while and crashes sometimes with this traceback error. It is worthwhile mentioning that the search even completes without this error but most of the time it crashes to this.\r\n\r\n```py\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-21-d78d7772b203> in <module>()\r\n      1 tuner.search(X_train.values, y_train.values.flatten(),\r\n      2              epochs=10,\r\n----> 3              validation_data=(X_test.values, y_test.values.flatten()))\r\n\r\n4 frames\r\n/usr/local/lib/python3.6/dist-packages/kerastuner/engine/hyperparameters.py in cumulative_prob_to_value(prob, hp)\r\n    842         ele_prob = 1 / len(hp.values)\r\n    843         index = math.floor(prob / ele_prob)\r\n--> 844         return hp.values[index]\r\n    845     elif isinstance(hp, (Int, Float)):\r\n    846         sampling = hp.sampling or 'linear'\r\n\r\nIndexError: list index out of range\r\n```\r\n\r\nAm I doing something wrong? If yes, how can I correct this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/150", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/150/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/150/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/150", "id": 516764823, "node_id": "MDU6SXNzdWU1MTY3NjQ4MjM=", "number": 150, "title": "Tune  ReduceLROnPlateau Callback?", "user": {"login": "hollowgalaxy", "id": 52365584, "node_id": "MDQ6VXNlcjUyMzY1NTg0", "avatar_url": "https://avatars2.githubusercontent.com/u/52365584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hollowgalaxy", "html_url": "https://github.com/hollowgalaxy", "followers_url": "https://api.github.com/users/hollowgalaxy/followers", "following_url": "https://api.github.com/users/hollowgalaxy/following{/other_user}", "gists_url": "https://api.github.com/users/hollowgalaxy/gists{/gist_id}", "starred_url": "https://api.github.com/users/hollowgalaxy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hollowgalaxy/subscriptions", "organizations_url": "https://api.github.com/users/hollowgalaxy/orgs", "repos_url": "https://api.github.com/users/hollowgalaxy/repos", "events_url": "https://api.github.com/users/hollowgalaxy/events{/privacy}", "received_events_url": "https://api.github.com/users/hollowgalaxy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-03T00:51:24Z", "updated_at": "2019-11-04T21:16:05Z", "closed_at": "2019-11-04T21:16:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Noticed that currently the callbacks get copied.\r\nhttps://github.com/keras-team/keras-tuner/blob/4e48da162ec97fc70d5bf880eedf2d73d1be8a2c/kerastuner/engine/tuner.py#L126\r\n\r\n\r\n Primarily, I wanted to use this to tune ReduceLROnPlateau for both patience and delta. \r\n\r\nNot sure what the best solution for this, perhaps a build_callbacks function\r\nsuch as\r\n```\r\nif self.build_callbacks is None:\r\n    callbacks = fit_kwargs.pop('callbacks', [])\r\n    callbacks = self._deepcopy_callbacks(callbacks)\r\nelse:\r\n   callbacks = self.build_callbacks(trial.hyperparameters)\r\n\r\ncallbacks.append(tuner_utils.TunerCallback(self, trial))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/149", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/149/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/149/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/149", "id": 516726013, "node_id": "MDU6SXNzdWU1MTY3MjYwMTM=", "number": 149, "title": "How to change hyperparameters in subsequent runs?", "user": {"login": "hollowgalaxy", "id": 52365584, "node_id": "MDQ6VXNlcjUyMzY1NTg0", "avatar_url": "https://avatars2.githubusercontent.com/u/52365584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hollowgalaxy", "html_url": "https://github.com/hollowgalaxy", "followers_url": "https://api.github.com/users/hollowgalaxy/followers", "following_url": "https://api.github.com/users/hollowgalaxy/following{/other_user}", "gists_url": "https://api.github.com/users/hollowgalaxy/gists{/gist_id}", "starred_url": "https://api.github.com/users/hollowgalaxy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hollowgalaxy/subscriptions", "organizations_url": "https://api.github.com/users/hollowgalaxy/orgs", "repos_url": "https://api.github.com/users/hollowgalaxy/repos", "events_url": "https://api.github.com/users/hollowgalaxy/events{/privacy}", "received_events_url": "https://api.github.com/users/hollowgalaxy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-02T21:24:24Z", "updated_at": "2019-11-08T19:30:54Z", "closed_at": "2019-11-08T19:30:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Given a starting code that looks something like this...\r\n```\r\nhp = HyperParameters()\r\nhp.Choice('learning_rate', values=[1., 1e-1, 1e-2, 1e-3])\r\ntuner = BayesianOptimization(build_model, objective='val_loss', hyperparameters=hp, tune_new_entries=True, max_trials=10, ...)\r\ntuner.search(...)\r\n```\r\nBut after running it, I realized I wanted to include two more values `1e-4` and `1e-5`. \r\nI increase the number of max trials to 12 include these in the search space. Should I do.\r\n```\r\nhp.Choice('learning_rate', values=[1e-4, 1e-5])\r\n```\r\nAlthough, this didn't work, the old hp values were used for any new trials.\r\n\r\n**OR** is this the better approach\r\n```\r\nhp.Choice('learning_rate', values=[1., 1e-1, 1e-2, 1e-3, 1e-4, 1e-5])\r\n```\r\nAlso not sure if this worked, the old hp values were used for new trials, and bayasian may have excluded them on purpose.\r\n\r\n\r\n**Just tested**: after acquiring the `tuner`, `tuner.search_space_summary()` returned the old values for both approaches.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/146", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/146/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/146/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/146/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/146", "id": 516200479, "node_id": "MDU6SXNzdWU1MTYyMDA0Nzk=", "number": 146, "title": "RL Example", "user": {"login": "signalprime", "id": 15487280, "node_id": "MDQ6VXNlcjE1NDg3Mjgw", "avatar_url": "https://avatars2.githubusercontent.com/u/15487280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/signalprime", "html_url": "https://github.com/signalprime", "followers_url": "https://api.github.com/users/signalprime/followers", "following_url": "https://api.github.com/users/signalprime/following{/other_user}", "gists_url": "https://api.github.com/users/signalprime/gists{/gist_id}", "starred_url": "https://api.github.com/users/signalprime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/signalprime/subscriptions", "organizations_url": "https://api.github.com/users/signalprime/orgs", "repos_url": "https://api.github.com/users/signalprime/repos", "events_url": "https://api.github.com/users/signalprime/events{/privacy}", "received_events_url": "https://api.github.com/users/signalprime/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648487, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg3", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-11-01T15:59:31Z", "updated_at": "2019-11-01T20:04:27Z", "closed_at": "2019-11-01T20:04:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi everyone,\r\n\r\nFirst, my compliments to everyone working on the project and congratulations on the release.\r\n\r\nStudying the documentation, I'm trying to adapt the end-to-end example to fit a simple CartPole-v1 example, [for example this one](https://github.com/keon/deep-q-learning/blob/master/dqn.py) . The end-to-end example defines a **build_model(hp)** function, and a **MyTuner(kt.Tuner)** class with a **run_trial(self, trial, train_ds)** function.\r\n\r\nI'm struggling for how to convert [this example](https://github.com/keon/deep-q-learning/blob/master/dqn.py) to use the beautiful magic of keras-tuner.  Should I try to combine the agent class with the tuner class?  Or should the tuner class call the agent?  All input is very welcome, thanks!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/143", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/143/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/143/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/143", "id": 515723523, "node_id": "MDU6SXNzdWU1MTU3MjM1MjM=", "number": 143, "title": "Better error message when reloading fails", "user": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-10-31T20:28:48Z", "updated_at": "2019-10-31T21:07:51Z", "closed_at": "2019-10-31T21:07:51Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "The error should note that you may wish to set `overwrite=True`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/142", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/142/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/142/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/142/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/142", "id": 515714526, "node_id": "MDU6SXNzdWU1MTU3MTQ1MjY=", "number": 142, "title": "Feature Request: Using tensorboard hparams.", "user": {"login": "hollowgalaxy", "id": 52365584, "node_id": "MDQ6VXNlcjUyMzY1NTg0", "avatar_url": "https://avatars2.githubusercontent.com/u/52365584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hollowgalaxy", "html_url": "https://github.com/hollowgalaxy", "followers_url": "https://api.github.com/users/hollowgalaxy/followers", "following_url": "https://api.github.com/users/hollowgalaxy/following{/other_user}", "gists_url": "https://api.github.com/users/hollowgalaxy/gists{/gist_id}", "starred_url": "https://api.github.com/users/hollowgalaxy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hollowgalaxy/subscriptions", "organizations_url": "https://api.github.com/users/hollowgalaxy/orgs", "repos_url": "https://api.github.com/users/hollowgalaxy/repos", "events_url": "https://api.github.com/users/hollowgalaxy/events{/privacy}", "received_events_url": "https://api.github.com/users/hollowgalaxy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648489, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg5", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2019-10-31T20:13:57Z", "updated_at": "2020-06-01T10:49:21Z", "closed_at": "2019-10-31T20:51:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Curently I didn't see a good way to save and load the hyperparameters to files.\r\nAdditionally, there is already an HParams thing in tensorflow see [here](https://www.tensorflow.org/tensorboard/hyperparameter_tuning_with_hparams)\r\n\r\nWould be nice if both were integrated or a function to convert between both. \r\nI would post some coding examples, but the link above speaks in volumes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/141", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/141/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/141/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/141", "id": 515443731, "node_id": "MDU6SXNzdWU1MTU0NDM3MzE=", "number": 141, "title": "RuntimeError: Model-building function did not return a valid Keras Model instance", "user": {"login": "Vaunorage", "id": 10731763, "node_id": "MDQ6VXNlcjEwNzMxNzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/10731763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vaunorage", "html_url": "https://github.com/Vaunorage", "followers_url": "https://api.github.com/users/Vaunorage/followers", "following_url": "https://api.github.com/users/Vaunorage/following{/other_user}", "gists_url": "https://api.github.com/users/Vaunorage/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vaunorage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vaunorage/subscriptions", "organizations_url": "https://api.github.com/users/Vaunorage/orgs", "repos_url": "https://api.github.com/users/Vaunorage/repos", "events_url": "https://api.github.com/users/Vaunorage/events{/privacy}", "received_events_url": "https://api.github.com/users/Vaunorage/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2019-10-31T13:42:06Z", "updated_at": "2020-05-18T00:40:18Z", "closed_at": "2019-10-31T13:48:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI followed exactly the tutorial and I got this error ...\r\n\r\nInput :\r\n```\r\nimport keras\r\nfrom keras import layers\r\nfrom kerastuner.tuners import RandomSearch\r\n\r\ndef build_model(hp):\r\n    model = keras.Sequential()\r\n    model.add(layers.Dense(units=hp.Int('units',\r\n                                        min_value=32,\r\n                                        max_value=512,\r\n                                        step=32),\r\n                           activation='relu'))\r\n    model.add(layers.Dense(10, activation='softmax'))\r\n    model.compile(\r\n        optimizer=keras.optimizers.Adam(\r\n            hp.Choice('learning_rate',\r\n                      values=[1e-2, 1e-3, 1e-4])),\r\n        loss='sparse_categorical_crossentropy',\r\n        metrics=['accuracy'])\r\n    return model\r\n\r\ntuner = RandomSearch(\r\n    build_model,\r\n    objective='val_accuracy',\r\n    max_trials=5,\r\n    executions_per_trial=3,\r\n    directory='my_dir',\r\n    project_name='helloworld')\r\n```\r\nOutput : \r\n\r\n```\r\nRuntimeError: Model-building function did not return a valid Keras Model instance, found <keras.engine.sequential.Sequential object at 0x7f7209a72950>\r\n\r\n```\r\n\r\nHelp please ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/132", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/132/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/132/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/132/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/132", "id": 512020049, "node_id": "MDU6SXNzdWU1MTIwMjAwNDk=", "number": 132, "title": "tf < 2.0 compatibility", "user": {"login": "srozov", "id": 26570977, "node_id": "MDQ6VXNlcjI2NTcwOTc3", "avatar_url": "https://avatars2.githubusercontent.com/u/26570977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/srozov", "html_url": "https://github.com/srozov", "followers_url": "https://api.github.com/users/srozov/followers", "following_url": "https://api.github.com/users/srozov/following{/other_user}", "gists_url": "https://api.github.com/users/srozov/gists{/gist_id}", "starred_url": "https://api.github.com/users/srozov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/srozov/subscriptions", "organizations_url": "https://api.github.com/users/srozov/orgs", "repos_url": "https://api.github.com/users/srozov/repos", "events_url": "https://api.github.com/users/srozov/events{/privacy}", "received_events_url": "https://api.github.com/users/srozov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-24T15:28:10Z", "updated_at": "2019-10-24T17:12:28Z", "closed_at": "2019-10-24T17:12:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Are there any specific issues with keras-tuner on tf < 2.0 ?\r\nI previously used it with the latest tf but had to downgrade due to many compatibility issues...\r\nIt seems to be working on tf 1.14, would it be safe to continue using it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/128", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/128/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/128/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/128", "id": 510993389, "node_id": "MDU6SXNzdWU1MTA5OTMzODk=", "number": 128, "title": "Choice is limited to int, float, str, or bool", "user": {"login": "hollowgalaxy", "id": 52365584, "node_id": "MDQ6VXNlcjUyMzY1NTg0", "avatar_url": "https://avatars2.githubusercontent.com/u/52365584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hollowgalaxy", "html_url": "https://github.com/hollowgalaxy", "followers_url": "https://api.github.com/users/hollowgalaxy/followers", "following_url": "https://api.github.com/users/hollowgalaxy/following{/other_user}", "gists_url": "https://api.github.com/users/hollowgalaxy/gists{/gist_id}", "starred_url": "https://api.github.com/users/hollowgalaxy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hollowgalaxy/subscriptions", "organizations_url": "https://api.github.com/users/hollowgalaxy/orgs", "repos_url": "https://api.github.com/users/hollowgalaxy/repos", "events_url": "https://api.github.com/users/hollowgalaxy/events{/privacy}", "received_events_url": "https://api.github.com/users/hollowgalaxy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648489, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg5", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-22T23:59:53Z", "updated_at": "2019-11-08T20:51:00Z", "closed_at": "2019-11-08T20:51:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "```TypeError: A `Choice` can contain only `int`, `float`, `str`, or `bool`, found values: [None]with types: {<class 'NoneType'>}```\r\n\r\nI wish I could use other types, for example I may have a list for choice like `[None, Path(model_path), Path(model_path2)]`.\r\nor another case where `[{},{},{}]`\r\nIs there a reason for restricting to these specific types?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/123", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/123/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/123/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/123/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/123", "id": 510247619, "node_id": "MDU6SXNzdWU1MTAyNDc2MTk=", "number": 123, "title": "Implement HyperModel.tunable=False", "user": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648489, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg5", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2019-10-21T19:53:55Z", "updated_at": "2019-10-28T21:44:35Z", "closed_at": "2019-10-28T21:44:35Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/122", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/122/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/122/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/122/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/122", "id": 510112828, "node_id": "MDU6SXNzdWU1MTAxMTI4Mjg=", "number": 122, "title": "How to tune the number of epochs and batch_size?", "user": {"login": "ogreyesp", "id": 17004570, "node_id": "MDQ6VXNlcjE3MDA0NTcw", "avatar_url": "https://avatars1.githubusercontent.com/u/17004570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogreyesp", "html_url": "https://github.com/ogreyesp", "followers_url": "https://api.github.com/users/ogreyesp/followers", "following_url": "https://api.github.com/users/ogreyesp/following{/other_user}", "gists_url": "https://api.github.com/users/ogreyesp/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogreyesp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogreyesp/subscriptions", "organizations_url": "https://api.github.com/users/ogreyesp/orgs", "repos_url": "https://api.github.com/users/ogreyesp/repos", "events_url": "https://api.github.com/users/ogreyesp/events{/privacy}", "received_events_url": "https://api.github.com/users/ogreyesp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648487, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg3", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/documentation", "name": "documentation", "color": "0075ca", "default": true, "description": "Improvements or additions to documentation"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2019-10-21T16:48:44Z", "updated_at": "2020-05-02T09:16:35Z", "closed_at": "2019-10-28T21:46:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nHow I can tune the number of epochs and batch size?\r\n\r\nThe provided examples always assume fixed values for these two hyperparameters.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/121", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/121/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/121/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/121/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/121", "id": 509504239, "node_id": "MDU6SXNzdWU1MDk1MDQyMzk=", "number": 121, "title": "results_summary() not showing hyperparameter values", "user": {"login": "curiousily", "id": 150327, "node_id": "MDQ6VXNlcjE1MDMyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/150327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/curiousily", "html_url": "https://github.com/curiousily", "followers_url": "https://api.github.com/users/curiousily/followers", "following_url": "https://api.github.com/users/curiousily/following{/other_user}", "gists_url": "https://api.github.com/users/curiousily/gists{/gist_id}", "starred_url": "https://api.github.com/users/curiousily/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/curiousily/subscriptions", "organizations_url": "https://api.github.com/users/curiousily/orgs", "repos_url": "https://api.github.com/users/curiousily/repos", "events_url": "https://api.github.com/users/curiousily/events{/privacy}", "received_events_url": "https://api.github.com/users/curiousily/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648486, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg2", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-10-19T20:13:44Z", "updated_at": "2019-11-01T05:36:29Z", "closed_at": "2019-11-01T05:36:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI am using keras-tuner at commit [7f6b00f45c6e0b0debaf183fa5f9dcef824fb02f](https://github.com/keras-team/keras-tuner/commit/7f6b00f45c6e0b0debaf183fa5f9dcef824fb02f). \r\n\r\nI run RandomSearch tuner in Google Colab Notebook. Calling `results_summary()` gives me the following output:\r\n\r\n```bash\r\n|-Results in test_dir/tune_nn\r\n|-Showing 10 best trials\r\n|-Objective: Objective(name='val_accuracy', direction='max') Score: 0.8007448315620422\r\n|-Objective: Objective(name='val_accuracy', direction='max') Score: 0.7988826632499695\r\n|-Objective: Objective(name='val_accuracy', direction='max') Score: 0.774674117565155\r\n|-Objective: Objective(name='val_accuracy', direction='max') Score: 0.77094966173172\r\n|-Objective: Objective(name='val_accuracy', direction='max') Score: 0.5977653861045837\r\n```\r\n\r\n[This comment](https://github.com/keras-team/keras-tuner/blob/master/tutorials/helloworld/helloworld.py#L94) suggests that this should also display the hyperparameters along with their values. Is this expected?\r\n\r\nCurrently, I have to extract the hyperparameters and their values with:\r\n\r\n```py\r\ntuner.oracle.get_best_trials(num_trials=1)[0].hyperparameters.values\r\n```\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/120", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/120/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/120/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/120", "id": 508704656, "node_id": "MDU6SXNzdWU1MDg3MDQ2NTY=", "number": 120, "title": "Extracting history from best trained model and viewing progress", "user": {"login": "amjass12", "id": 33659783, "node_id": "MDQ6VXNlcjMzNjU5Nzgz", "avatar_url": "https://avatars1.githubusercontent.com/u/33659783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amjass12", "html_url": "https://github.com/amjass12", "followers_url": "https://api.github.com/users/amjass12/followers", "following_url": "https://api.github.com/users/amjass12/following{/other_user}", "gists_url": "https://api.github.com/users/amjass12/gists{/gist_id}", "starred_url": "https://api.github.com/users/amjass12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amjass12/subscriptions", "organizations_url": "https://api.github.com/users/amjass12/orgs", "repos_url": "https://api.github.com/users/amjass12/repos", "events_url": "https://api.github.com/users/amjass12/events{/privacy}", "received_events_url": "https://api.github.com/users/amjass12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-10-17T20:30:02Z", "updated_at": "2019-11-12T10:24:34Z", "closed_at": "2019-10-18T17:20:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all, \r\n\r\nI was just wondering if there is a way of viewing the history of the best model and using this to plot loss and accuracy and metrics so we can visualise exactly how the model has progressed when selecting the best model?\r\n\r\nI want to be sure that the model is not overfitting so visualising this would be very helpful. \r\n\r\nMany thanks!\r\n\r\nAmir", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/104", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/104/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/104/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/104", "id": 503194766, "node_id": "MDU6SXNzdWU1MDMxOTQ3NjY=", "number": 104, "title": "tuner.search with model.fit_generator", "user": {"login": "luvwinnie", "id": 13714992, "node_id": "MDQ6VXNlcjEzNzE0OTky", "avatar_url": "https://avatars1.githubusercontent.com/u/13714992?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luvwinnie", "html_url": "https://github.com/luvwinnie", "followers_url": "https://api.github.com/users/luvwinnie/followers", "following_url": "https://api.github.com/users/luvwinnie/following{/other_user}", "gists_url": "https://api.github.com/users/luvwinnie/gists{/gist_id}", "starred_url": "https://api.github.com/users/luvwinnie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luvwinnie/subscriptions", "organizations_url": "https://api.github.com/users/luvwinnie/orgs", "repos_url": "https://api.github.com/users/luvwinnie/repos", "events_url": "https://api.github.com/users/luvwinnie/events{/privacy}", "received_events_url": "https://api.github.com/users/luvwinnie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-07T01:40:50Z", "updated_at": "2020-05-31T13:33:46Z", "closed_at": "2019-10-09T23:04:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "In tensorflow we often use tf.data pipeline to generate some data, i hope that we can use the model.fit_generator to fit the model with provided steps_per_epoch. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/90", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/90/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/90/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/90", "id": 499104187, "node_id": "MDU6SXNzdWU0OTkxMDQxODc=", "number": 90, "title": "Factor Tuner into a BaseTuner and Tuner", "user": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-09-26T20:37:54Z", "updated_at": "2019-10-01T20:39:19Z", "closed_at": "2019-10-01T20:39:19Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/89", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/89/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/89/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/89", "id": 499101743, "node_id": "MDU6SXNzdWU0OTkxMDE3NDM=", "number": 89, "title": "Allow multiple values per step in MetricsTracking", "user": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648489, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg5", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2019-09-26T20:32:26Z", "updated_at": "2019-10-01T20:39:58Z", "closed_at": "2019-10-01T20:39:58Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/88", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/88/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/88/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/88", "id": 497235886, "node_id": "MDU6SXNzdWU0OTcyMzU4ODY=", "number": 88, "title": "TypeError: 'HTML' object is not subscriptable", "user": {"login": "alireza-a-hashemi", "id": 11944699, "node_id": "MDQ6VXNlcjExOTQ0Njk5", "avatar_url": "https://avatars0.githubusercontent.com/u/11944699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alireza-a-hashemi", "html_url": "https://github.com/alireza-a-hashemi", "followers_url": "https://api.github.com/users/alireza-a-hashemi/followers", "following_url": "https://api.github.com/users/alireza-a-hashemi/following{/other_user}", "gists_url": "https://api.github.com/users/alireza-a-hashemi/gists{/gist_id}", "starred_url": "https://api.github.com/users/alireza-a-hashemi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alireza-a-hashemi/subscriptions", "organizations_url": "https://api.github.com/users/alireza-a-hashemi/orgs", "repos_url": "https://api.github.com/users/alireza-a-hashemi/repos", "events_url": "https://api.github.com/users/alireza-a-hashemi/events{/privacy}", "received_events_url": "https://api.github.com/users/alireza-a-hashemi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-23T17:43:01Z", "updated_at": "2019-10-01T20:41:13Z", "closed_at": "2019-10-01T20:41:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "When i run the MNIST example  get this error after tuner.search:\r\n\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-26-d5f10f001cae> in <module>\r\n      4              y=y,\r\n      5              epochs=3,\r\n----> 6              validation_data=(val_x, val_y))\r\n      7 \r\n\r\n~\\Anaconda3\\lib\\site-packages\\kerastuner\\engine\\tuner.py in search(self, *fit_args, **fit_kwargs)\r\n    222             self.on_trial_begin(trial)\r\n    223             self.run_trial(trial, hp, fit_args, fit_kwargs)\r\n--> 224             self.on_trial_end(trial)\r\n    225         self.on_search_end()\r\n    226 \r\n\r\n~\\Anaconda3\\lib\\site-packages\\kerastuner\\engine\\tuner.py in on_trial_end(self, trial)\r\n    375             objective=self.objective,\r\n    376             remaining_trials=self.remaining_trials,\r\n--> 377             max_trials=self.max_trials)\r\n    378 \r\n    379     def on_search_end(self):\r\n\r\n~\\Anaconda3\\lib\\site-packages\\kerastuner\\engine\\tuner_utils.py in on_trial_end(self, averaged_metrics, best_metrics, objective, remaining_trials, max_trials)\r\n    137                     row = display.colorize_row(row, 'red')\r\n    138             rows.append(row)\r\n--> 139         display.display_table(rows)\r\n    140 \r\n    141         # Tuning budget exhausted\r\n\r\n~\\Anaconda3\\lib\\site-packages\\kerastuner\\abstractions\\display.py in display_table(rows, title, indent)\r\n    372             out.append(indent + line)\r\n    373         table = \"\\n\".join(out)\r\n--> 374     display(table)\r\n    375 \r\n    376 \r\n\r\n~\\Anaconda3\\lib\\site-packages\\IPython\\core\\display.py in __init__(self, data, url, filename, metadata)\r\n    691             return prefix.startswith(\"<iframe \") and suffix.endswith(\"</iframe>\")\r\n    692 \r\n--> 693         if warn():\r\n    694             warnings.warn(\"Consider using IPython.display.IFrame instead\")\r\n    695         super(HTML, self).__init__(data=data, url=url, filename=filename, metadata=metadata)\r\n\r\n~\\Anaconda3\\lib\\site-packages\\IPython\\core\\display.py in warn()\r\n    687             # long string and we're only interested in its beginning and end.\r\n    688             #\r\n--> 689             prefix = data[:10].lower()\r\n    690             suffix = data[-10:].lower()\r\n    691             return prefix.startswith(\"<iframe \") and suffix.endswith(\"</iframe>\")\r\n\r\nTypeError: 'HTML' object is not subscriptable", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/86", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/86/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/86/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/86", "id": 495630914, "node_id": "MDU6SXNzdWU0OTU2MzA5MTQ=", "number": 86, "title": "Bug in MetricsTracker", "user": {"login": "coolmaksat", "id": 1517572, "node_id": "MDQ6VXNlcjE1MTc1NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1517572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/coolmaksat", "html_url": "https://github.com/coolmaksat", "followers_url": "https://api.github.com/users/coolmaksat/followers", "following_url": "https://api.github.com/users/coolmaksat/following{/other_user}", "gists_url": "https://api.github.com/users/coolmaksat/gists{/gist_id}", "starred_url": "https://api.github.com/users/coolmaksat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/coolmaksat/subscriptions", "organizations_url": "https://api.github.com/users/coolmaksat/orgs", "repos_url": "https://api.github.com/users/coolmaksat/repos", "events_url": "https://api.github.com/users/coolmaksat/events{/privacy}", "received_events_url": "https://api.github.com/users/coolmaksat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-19T07:47:15Z", "updated_at": "2019-09-27T21:51:54Z", "closed_at": "2019-09-27T21:51:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://github.com/keras-team/keras-tuner/blob/0f785bce3d7c7a517c980efc6a8cfeb332f07581/kerastuner/engine/metrics_tracking.py#L67\r\n\r\nHi, I found a bug here in MetricsTracker's update function. The validation loss\r\nof the best model returned by tuner.get_best_model with the best validation loss in\r\ntuner.results_summary() was different. The reason is that the update function\r\nreturns true if the current value is <= than the max value in history. This should be\r\n<= than the min value in history.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/84", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/84/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/84/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/84", "id": 493694375, "node_id": "MDU6SXNzdWU0OTM2OTQzNzU=", "number": 84, "title": "\u793a\u4f8b\u6559\u7a0b\u62a5\u9519\u4e86", "user": {"login": "1044197988", "id": 44575234, "node_id": "MDQ6VXNlcjQ0NTc1MjM0", "avatar_url": "https://avatars3.githubusercontent.com/u/44575234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1044197988", "html_url": "https://github.com/1044197988", "followers_url": "https://api.github.com/users/1044197988/followers", "following_url": "https://api.github.com/users/1044197988/following{/other_user}", "gists_url": "https://api.github.com/users/1044197988/gists{/gist_id}", "starred_url": "https://api.github.com/users/1044197988/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1044197988/subscriptions", "organizations_url": "https://api.github.com/users/1044197988/orgs", "repos_url": "https://api.github.com/users/1044197988/repos", "events_url": "https://api.github.com/users/1044197988/events{/privacy}", "received_events_url": "https://api.github.com/users/1044197988/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-15T04:37:21Z", "updated_at": "2019-10-02T03:09:07Z", "closed_at": "2019-10-01T20:43:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "(x_train, y_train), (x_test, y_test) = load_data()\r\n\r\nimport autokeras as ak\r\nimport tensorflow as tf\r\nx_train = x_train.reshape(x_train.shape + (1,))\r\nx_test = x_test.reshape(x_test.shape + (1,))\r\n#x_train = tf.cast(x_train.reshape(x_train.shape + (1,)),tf.float64)\r\n#x_test = tf.cast(x_test.reshape(x_test.shape + (1,)),tf.float64)\r\n\r\nclf = ak.ImageClassifier(max_trials=100)\r\nclf.fit(x_train, y_train)\r\ny = clf.predict(x_test, y_test)\r\n\r\n  File \"C:\\Users\\Admin\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\autokeras\\auto_model.py\", line 146, in prepare_data\r\n    x_val, y_val = validation_data\r\nTypeError: 'NoneType' object is not iterable\r\n\r\n\u6dfb\u52a0\u4e0a\u8fd9\u4e00\u53e5validation_split=0.05  \u62a5\u9519\u9700\u8981tf.float64\r\n\r\n\u8f6c\u6362\u4e3afloat64\u540e\r\n#x_train = tf.cast(x_train.reshape(x_train.shape + (1,)),tf.float64)\r\n#x_test = tf.cast(x_test.reshape(x_test.shape + (1,)),tf.float64)\r\n\uff1a\r\n\r\ntensorflow.python.framework.errors_impl.InvalidArgumentError: Length for attr 'output_types' of 0 must be at least minimum 1\r\n\t; NodeDef: {{node ZipDataset}}; Op<name=ZipDataset; signature=input_datasets:N*variant -> handle:variant; attr=output_types:list(type),min=1; attr=output_shapes:list(shape),min=1; attr=N:int,min=1> [Op:ZipDataset]\r\n\r\n\r\n\u73af\u5883tensorflow2.0.0rc1\r\nwin10\r\npy3.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/83", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/83/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/83/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/83", "id": 493533424, "node_id": "MDU6SXNzdWU0OTM1MzM0MjQ=", "number": 83, "title": "Cleanup how metric and objective direction are handled", "user": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648489, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg5", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-09-13T22:01:47Z", "updated_at": "2019-10-01T20:41:30Z", "closed_at": "2019-10-01T20:41:30Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Maybe use global constants or a class", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/75", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/75/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/75/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/75", "id": 491935098, "node_id": "MDU6SXNzdWU0OTE5MzUwOTg=", "number": 75, "title": "Sequential models may cause issues with get_best_models()", "user": {"login": "jamlong", "id": 4838414, "node_id": "MDQ6VXNlcjQ4Mzg0MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4838414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamlong", "html_url": "https://github.com/jamlong", "followers_url": "https://api.github.com/users/jamlong/followers", "following_url": "https://api.github.com/users/jamlong/following{/other_user}", "gists_url": "https://api.github.com/users/jamlong/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamlong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamlong/subscriptions", "organizations_url": "https://api.github.com/users/jamlong/orgs", "repos_url": "https://api.github.com/users/jamlong/repos", "events_url": "https://api.github.com/users/jamlong/events{/privacy}", "received_events_url": "https://api.github.com/users/jamlong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2019-09-10T22:51:33Z", "updated_at": "2020-05-31T14:01:46Z", "closed_at": "2019-10-17T19:01:53Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "tuner.get_best_models() fails with Sequential models, with the following exception\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"test_issue_74.py\", line 85, in <module>\r\n    # For \r\n  File \"test_issue_74.py\", line 70, in test_issue_74_reproduction\r\n    _ = tuner.get_best_models()\r\n  File \"/usr/local/google/home/jamlong/git/keras-tuner/kerastuner/engine/tuner.py\", line 413, in get_best_models\r\n    model.load_weights(best_checkpoint)\r\n  File \"/usr/local/google/home/jamlong/envs/py36_tfnightly/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training.py\", line 182, in load_weights\r\n    return super(Model, self).load_weights(filepath, by_name)\r\n  File \"/usr/local/google/home/jamlong/envs/py36_tfnightly/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/network.py\", line 1364, in load_weights\r\n    self._assert_weights_created()\r\n  File \"/usr/local/google/home/jamlong/envs/py36_tfnightly/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/network.py\", line 1617, in _assert_weights_created\r\n    self.name)\r\nValueError: Weights for model sequential_1 have not yet been created. Weights are created when the Model is first called on inputs or `build()` is called with an `input_shape`.\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/74", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/74/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/74/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/74", "id": 490234927, "node_id": "MDU6SXNzdWU0OTAyMzQ5Mjc=", "number": 74, "title": "Confusing (and incorrect) results_summary and error for weight initilisation", "user": {"login": "amjass12", "id": 33659783, "node_id": "MDQ6VXNlcjMzNjU5Nzgz", "avatar_url": "https://avatars1.githubusercontent.com/u/33659783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amjass12", "html_url": "https://github.com/amjass12", "followers_url": "https://api.github.com/users/amjass12/followers", "following_url": "https://api.github.com/users/amjass12/following{/other_user}", "gists_url": "https://api.github.com/users/amjass12/gists{/gist_id}", "starred_url": "https://api.github.com/users/amjass12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amjass12/subscriptions", "organizations_url": "https://api.github.com/users/amjass12/orgs", "repos_url": "https://api.github.com/users/amjass12/repos", "events_url": "https://api.github.com/users/amjass12/events{/privacy}", "received_events_url": "https://api.github.com/users/amjass12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jamlong", "id": 4838414, "node_id": "MDQ6VXNlcjQ4Mzg0MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4838414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamlong", "html_url": "https://github.com/jamlong", "followers_url": "https://api.github.com/users/jamlong/followers", "following_url": "https://api.github.com/users/jamlong/following{/other_user}", "gists_url": "https://api.github.com/users/jamlong/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamlong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamlong/subscriptions", "organizations_url": "https://api.github.com/users/jamlong/orgs", "repos_url": "https://api.github.com/users/jamlong/repos", "events_url": "https://api.github.com/users/jamlong/events{/privacy}", "received_events_url": "https://api.github.com/users/jamlong/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jamlong", "id": 4838414, "node_id": "MDQ6VXNlcjQ4Mzg0MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4838414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamlong", "html_url": "https://github.com/jamlong", "followers_url": "https://api.github.com/users/jamlong/followers", "following_url": "https://api.github.com/users/jamlong/following{/other_user}", "gists_url": "https://api.github.com/users/jamlong/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamlong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamlong/subscriptions", "organizations_url": "https://api.github.com/users/jamlong/orgs", "repos_url": "https://api.github.com/users/jamlong/repos", "events_url": "https://api.github.com/users/jamlong/events{/privacy}", "received_events_url": "https://api.github.com/users/jamlong/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2019-09-06T09:47:15Z", "updated_at": "2019-10-10T22:06:04Z", "closed_at": "2019-10-10T22:06:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all, \r\n\r\nI was wondering if someone could clarify a few things for me, i would be very greatful! :)\r\n\r\nI have run keras tuner with the following code in order to optimise a model by unit number and layer number: \r\n\r\n```\r\ndef build_model(hp):\r\n    model = keras.Sequential()\r\n    for i in range(hp.Int('num_layers', 2, 20)):\r\n        model.add(layers.Dense(units=hp.Int('units_' + str(i),\r\n                                            min_value=32,\r\n                                            max_value=512,\r\n                                            step=32),\r\n                               activation='relu'))\r\n    model.add(layers.Dense(24, activation='sigmoid'))\r\n    model.compile(\r\n        optimizer=keras.optimizers.Adam(\r\n            hp.Choice('learning_rate', [1e-2, 1e-3, 1e-4])),\r\n        loss='binary_crossentropy',\r\n        metrics=['accuracy'])\r\n    return model\r\n\r\ntuner = RandomSearch(\r\n    build_model,\r\n    objective='val_accuracy',\r\n    max_trials=5,\r\n    executions_per_trial=5,\r\n    directory='/Users/blablabla/Desktop/',\r\n    project_name='Optimal model')\r\n\r\ntuner.search_space_summary()\r\n\r\ntuner.search(X_train.values, y_train,\r\n             epochs=50,\r\n             validation_data=(X_test.values, y_test),\r\n             shuffle=True\r\n             )\r\n```\r\n\r\nThis code runs **without** any issue! however.. when calling `tuner.results_summary()`\r\n\r\nThe results summary are completely of the actual training results (both during hyperparameter training but also if i just train the model without the hyperparamater (normal keras))\r\n\r\n```\r\ntuner.results_summary=\r\n[Results summary]\r\n |-Results in /Users/jassim01/Desktop/CRUK Cambridge/R/Amir/Optimal model\r\n |-Ran 5 trials\r\n |-Ran 25 executions (5 per trial)\r\n |-Best val_accuracy: **0.5650**\r\n```\r\n\r\nthe best val_acc is 0.56 and this is completely wrong according to the best performance i can achieve when running keras alone, or during the hyperparameter training. during hyperparameter training I am achieving (according to hyperparameter tuning progress report in excess of 90%[see one line as example]) \r\n\r\nis this is a bug or am i misintepreting something?\r\n\r\n[CPU: 43%]Epoch 28/50: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00<00:00, 61.46steps/s, loss=0.09, accuracy=0.969, val_loss=0.184, val_accuracy=0.913\r\n\r\nSecondly, when calling best_model:\r\n\r\nbest_model = tuner.get_best_models(num_models=1)[0]\r\n\r\nI get the error: ValueError: Weights for model sequential_2 have not yet been created. Weights are created when the Model is first called on inputs or `build()` \r\n\r\nI understand this error, however none of the tutorials call model.build argument at the end of the for loop in the examples. Since the model is actually able to train, is this a bug? \r\n\r\nif not.. is it ok to add an **input_dim** inside the for loop as follows? \r\n\r\nmodel.add(layers.Dense(**input_dim=5078**, units=hp.Int('units_' + str(i),\r\n                                            min_value=32,\r\n                                            max_value=512,\r\n                                            step=32),.. etc\r\n\r\nIf i do this, tuner.results_summary()\r\nshows a best val_acc of 0.90... and get_bestmodel also works.... \r\n\r\njust want to confirm this is correct.. \r\n\r\nThanks for your help!!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/72", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/72/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/72/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/72", "id": 489279840, "node_id": "MDU6SXNzdWU0ODkyNzk4NDA=", "number": 72, "title": "hyperband doesn't work as intended", "user": {"login": "ebursztein", "id": 1989373, "node_id": "MDQ6VXNlcjE5ODkzNzM=", "avatar_url": "https://avatars3.githubusercontent.com/u/1989373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebursztein", "html_url": "https://github.com/ebursztein", "followers_url": "https://api.github.com/users/ebursztein/followers", "following_url": "https://api.github.com/users/ebursztein/following{/other_user}", "gists_url": "https://api.github.com/users/ebursztein/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebursztein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebursztein/subscriptions", "organizations_url": "https://api.github.com/users/ebursztein/orgs", "repos_url": "https://api.github.com/users/ebursztein/repos", "events_url": "https://api.github.com/users/ebursztein/events{/privacy}", "received_events_url": "https://api.github.com/users/ebursztein/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648486, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDg2", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "jamlong", "id": 4838414, "node_id": "MDQ6VXNlcjQ4Mzg0MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4838414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamlong", "html_url": "https://github.com/jamlong", "followers_url": "https://api.github.com/users/jamlong/followers", "following_url": "https://api.github.com/users/jamlong/following{/other_user}", "gists_url": "https://api.github.com/users/jamlong/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamlong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamlong/subscriptions", "organizations_url": "https://api.github.com/users/jamlong/orgs", "repos_url": "https://api.github.com/users/jamlong/repos", "events_url": "https://api.github.com/users/jamlong/events{/privacy}", "received_events_url": "https://api.github.com/users/jamlong/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jamlong", "id": 4838414, "node_id": "MDQ6VXNlcjQ4Mzg0MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4838414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamlong", "html_url": "https://github.com/jamlong", "followers_url": "https://api.github.com/users/jamlong/followers", "following_url": "https://api.github.com/users/jamlong/following{/other_user}", "gists_url": "https://api.github.com/users/jamlong/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamlong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamlong/subscriptions", "organizations_url": "https://api.github.com/users/jamlong/orgs", "repos_url": "https://api.github.com/users/jamlong/repos", "events_url": "https://api.github.com/users/jamlong/events{/privacy}", "received_events_url": "https://api.github.com/users/jamlong/received_events", "type": "User", "site_admin": false}, {"login": "haifeng-jin", "id": 5476582, "node_id": "MDQ6VXNlcjU0NzY1ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5476582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haifeng-jin", "html_url": "https://github.com/haifeng-jin", "followers_url": "https://api.github.com/users/haifeng-jin/followers", "following_url": "https://api.github.com/users/haifeng-jin/following{/other_user}", "gists_url": "https://api.github.com/users/haifeng-jin/gists{/gist_id}", "starred_url": "https://api.github.com/users/haifeng-jin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haifeng-jin/subscriptions", "organizations_url": "https://api.github.com/users/haifeng-jin/orgs", "repos_url": "https://api.github.com/users/haifeng-jin/repos", "events_url": "https://api.github.com/users/haifeng-jin/events{/privacy}", "received_events_url": "https://api.github.com/users/haifeng-jin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2019-09-04T16:58:06Z", "updated_at": "2019-10-16T20:13:42Z", "closed_at": "2019-10-16T20:13:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There sorting of the trial is incorrect for at least two reasons:\r\n1. line: 130 the values are not initialized so the comparison fail in line 136\r\n2. The sort in 136: sort in ascending order so the one with the lowest score are always picked up in line 139\r\n\r\nSo the init/sort should take into account the metric direction\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/71", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/71/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/71/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/71", "id": 487108169, "node_id": "MDU6SXNzdWU0ODcxMDgxNjk=", "number": 71, "title": "HTML expects text", "user": {"login": "pers1307", "id": 15194486, "node_id": "MDQ6VXNlcjE1MTk0NDg2", "avatar_url": "https://avatars0.githubusercontent.com/u/15194486?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pers1307", "html_url": "https://github.com/pers1307", "followers_url": "https://api.github.com/users/pers1307/followers", "following_url": "https://api.github.com/users/pers1307/following{/other_user}", "gists_url": "https://api.github.com/users/pers1307/gists{/gist_id}", "starred_url": "https://api.github.com/users/pers1307/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pers1307/subscriptions", "organizations_url": "https://api.github.com/users/pers1307/orgs", "repos_url": "https://api.github.com/users/pers1307/repos", "events_url": "https://api.github.com/users/pers1307/events{/privacy}", "received_events_url": "https://api.github.com/users/pers1307/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "jamlong", "id": 4838414, "node_id": "MDQ6VXNlcjQ4Mzg0MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4838414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamlong", "html_url": "https://github.com/jamlong", "followers_url": "https://api.github.com/users/jamlong/followers", "following_url": "https://api.github.com/users/jamlong/following{/other_user}", "gists_url": "https://api.github.com/users/jamlong/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamlong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamlong/subscriptions", "organizations_url": "https://api.github.com/users/jamlong/orgs", "repos_url": "https://api.github.com/users/jamlong/repos", "events_url": "https://api.github.com/users/jamlong/events{/privacy}", "received_events_url": "https://api.github.com/users/jamlong/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "jamlong", "id": 4838414, "node_id": "MDQ6VXNlcjQ4Mzg0MTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4838414?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamlong", "html_url": "https://github.com/jamlong", "followers_url": "https://api.github.com/users/jamlong/followers", "following_url": "https://api.github.com/users/jamlong/following{/other_user}", "gists_url": "https://api.github.com/users/jamlong/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamlong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamlong/subscriptions", "organizations_url": "https://api.github.com/users/jamlong/orgs", "repos_url": "https://api.github.com/users/jamlong/repos", "events_url": "https://api.github.com/users/jamlong/events{/privacy}", "received_events_url": "https://api.github.com/users/jamlong/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-08-29T18:21:56Z", "updated_at": "2019-09-30T20:59:24Z", "closed_at": "2019-09-30T20:59:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "strange error\r\n\r\nWhen I execute:\r\ntuner.search(x_train,                  # \u0414\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f\r\n             y_train,                  # \u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0435 \u043e\u0442\u0432\u0435\u0442\u044b\r\n             batch_size=256,           # \u0420\u0430\u0437\u043c\u0435\u0440 \u043c\u0438\u043d\u0438-\u0432\u044b\u0431\u043e\u0440\u043a\u0438\r\n             epochs=5,                # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044d\u043f\u043e\u0445 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \r\n             validation_split=0.2,     # \u0427\u0430\u0441\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438\r\n             verbose=0\r\n             )\r\n\r\nLink on colab with example:\r\nhttps://colab.research.google.com/drive/1nd3aA4BdFbncb4U2zVzwJ0Npqcc14-hA", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/69", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/69/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/69/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/69", "id": 486589093, "node_id": "MDU6SXNzdWU0ODY1ODkwOTM=", "number": 69, "title": "PermissionError in tuner.search() (when consulting usage of partitions)", "user": {"login": "franchesoni", "id": 24411007, "node_id": "MDQ6VXNlcjI0NDExMDA3", "avatar_url": "https://avatars2.githubusercontent.com/u/24411007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/franchesoni", "html_url": "https://github.com/franchesoni", "followers_url": "https://api.github.com/users/franchesoni/followers", "following_url": "https://api.github.com/users/franchesoni/following{/other_user}", "gists_url": "https://api.github.com/users/franchesoni/gists{/gist_id}", "starred_url": "https://api.github.com/users/franchesoni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/franchesoni/subscriptions", "organizations_url": "https://api.github.com/users/franchesoni/orgs", "repos_url": "https://api.github.com/users/franchesoni/repos", "events_url": "https://api.github.com/users/franchesoni/events{/privacy}", "received_events_url": "https://api.github.com/users/franchesoni/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-28T20:20:37Z", "updated_at": "2019-10-01T20:44:37Z", "closed_at": "2019-10-01T20:44:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "At some place, ```tuner.search``` gets the usage information for different partitions.\r\nI get a ```PermissionError``` in one of the iterations.\r\n\r\nMy workaround was a try-except, assigning arbitrary memory values (assuming an usage of 100%). It is not elegant at all.\r\nTraceback below\r\n\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"mlp_1_search.py\", line 135, in <module>\r\n    tuner.search(train_gen, validation_data=test_gen)\r\n  File \"lib/python3.6/site-packages/kerastuner/engine/tuner.py\", line 223, in search\r\n    self.run_trial(trial, hp, fit_args, fit_kwargs)\r\n  File \"lib/python3.6/site-packages/kerastuner/tuners/hyperband.py\", line 326, in run_trial\r\n    super(Hyperband, self).run_trial(trial, hp, fit_args, fit_kwargs)\r\n  File \"lib/python3.6/site-packages/kerastuner/engine/tuner.py\", line 261, in run_trial\r\n    model.fit(*fit_args, **fit_kwargs)\r\n  File \"lib/python3.6/site-packages/tensorflow/python/keras/engine/training.py\", line 643, in fit\r\n    use_multiprocessing=use_multiprocessing)\r\n  File \"lib/python3.6/site-packages/tensorflow/python/keras/engine/training_generator.py\", line 604, in fit\r\n    steps_name='steps_per_epoch')\r\n  File \"lib/python3.6/site-packages/tensorflow/python/keras/engine/training_generator.py\", line 293, in model_iteration\r\n    callbacks._call_batch_hook(mode, 'end', step, batch_logs)\r\n  File \"lib/python3.6/site-packages/tensorflow/python/keras/callbacks.py\", line 232, in _call_batch_hook\r\n    batch_hook(batch, logs)\r\n  File \"lib/python3.6/site-packages/tensorflow/python/keras/callbacks.py\", line 515, in on_train_batch_end\r\n    self.on_batch_end(batch, logs=logs)\r\n  File \"lib/python3.6/site-packages/kerastuner/engine/tuner_utils.py\", line 91, in on_batch_end\r\n    self.tuner.on_batch_end(self.execution, self.model, batch, logs)\r\n  File \"lib/python3.6/site-packages/kerastuner/engine/tuner.py\", line 293, in on_batch_end\r\n    self._display.on_batch_end(execution, model, batch, logs=logs)\r\n  File \"lib/python3.6/site-packages/kerastuner/engine/tuner_utils.py\", line 184, in on_batch_end\r\n    host_status = self.host.get_status()\r\n  File \"lib/python3.6/site-packages/kerastuner/abstractions/host.py\", line 93, in get_status\r\n    status['disk'] = self._get_disk_usage()\r\n  File \"lib/python3.6/site-packages/kerastuner/abstractions/host.py\", line 198, in _get_disk_usage\r\n    usage = psutil.disk_usage(name)\r\n  File \"lib/python3.6/site-packages/psutil/__init__.py\", line 2121, in disk_usage\r\n    return _psplatform.disk_usage(path)\r\n  File \"lib/python3.6/site-packages/psutil/_psposix.py\", line 131, in disk_usage\r\n    st = os.statvfs(path)\r\nPermissionError: [Errno 13] Permission denied: '/media/javier/cordon'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/66", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/66/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/66/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/66", "id": 485364140, "node_id": "MDU6SXNzdWU0ODUzNjQxNDA=", "number": 66, "title": "Conditional hyperparameter tuning bug", "user": {"login": "rcmagic1", "id": 54383260, "node_id": "MDQ6VXNlcjU0MzgzMjYw", "avatar_url": "https://avatars2.githubusercontent.com/u/54383260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcmagic1", "html_url": "https://github.com/rcmagic1", "followers_url": "https://api.github.com/users/rcmagic1/followers", "following_url": "https://api.github.com/users/rcmagic1/following{/other_user}", "gists_url": "https://api.github.com/users/rcmagic1/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcmagic1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcmagic1/subscriptions", "organizations_url": "https://api.github.com/users/rcmagic1/orgs", "repos_url": "https://api.github.com/users/rcmagic1/repos", "events_url": "https://api.github.com/users/rcmagic1/events{/privacy}", "received_events_url": "https://api.github.com/users/rcmagic1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-08-26T18:01:56Z", "updated_at": "2019-10-14T18:44:48Z", "closed_at": "2019-10-14T18:44:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using Keras-Tuner to run trials on a multi-layer NN with variable number of layer and units within each layer, similar to the example in the README:\r\n\r\n```\r\nfor i in range(hp.Int('num_layers', 2, 20)):\r\n        model.add(layers.Dense(units=hp.Int('units_' + str(i),\r\n                                            min_value=32,\r\n                                            max_value=512,\r\n                                            step=32),\r\n                               activation='relu'))\r\n```\r\n\r\nThe \"units_#\" hyperpameter should be conditional upon \"num_layer\" hyperparameter.  E.g.if \"num_layers=2\" then I should see \"units_0\" and \"units_1\".  However **in my testing I'm not seeing proper correlation (num_layers doesn't match the number of units_# hyperparameter values set).**  Instead I see something like the following:\r\n\r\n[Trial summary]\r\n > Hp values:\r\n |-num_fc_layers: 2\r\n |-num_units_0: ...\r\n |-num_units_1: ...\r\n |-num_units_2: ...\r\n |-num_units_3: ...\r\n |-num_units_4: ..\r\n\r\nor \r\n\r\n[Trial summary]\r\n > Hp values:\r\n |-num_fc_layers: 5\r\n |-num_units_0: ...\r\n |-num_units_1: ...\r\n |-num_units_2: ...\r\n\r\nThis effectively makes the summary of hyperparameters used in a trial useless.\r\nI did some debugging of the code but haven't found the culprit yet.\r\nI'm using \"randomsearch\" tuner and wrapped my model build in HyperModel class (rather than function method).\r\n\r\nCould someone please take a look?  Thank you.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/62", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/62/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/62/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/62", "id": 484319283, "node_id": "MDU6SXNzdWU0ODQzMTkyODM=", "number": 62, "title": "Can't create an HP inside of a Layer's `call`", "user": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-23T04:06:51Z", "updated_at": "2019-08-26T19:30:40Z", "closed_at": "2019-08-26T19:30:40Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "This gives an error in deserialize_keras_object about not recognizing `Float` (likely something to do with how `module_objects` are being picked up):\r\n\r\n```python\r\nfrom tensorflow import keras\r\nimport kerastuner\r\nimport numpy as np\r\n\r\ndef build_model(hp):\r\n    class Bias(keras.layers.Layer):\r\n        def call(self, x):\r\n            return x + hp.Float('bias', 0, 2, step=0.5)\r\n\r\n    layer = Bias(input_shape=(1,))\r\n    model = keras.Sequential([layer])\r\n    model.compile('sgd', 'mse', metrics=['accuracy'])\r\n    return model\r\n\r\nx = np.zeros((10, 1))\r\ny = np.ones((10, 1))\r\n\r\nrs = kerastuner.tuners.RandomSearch(build_model, 'val_accuracy', 10)\r\nrs.search(x, y, epochs=1, validation_data=(x, y))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/61", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/61/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/61/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/61", "id": 484318738, "node_id": "MDU6SXNzdWU0ODQzMTg3Mzg=", "number": 61, "title": "Bayesian and Hyperband Oracles ignore `step` for Float", "user": {"login": "omalleyt12", "id": 29100818, "node_id": "MDQ6VXNlcjI5MTAwODE4", "avatar_url": "https://avatars3.githubusercontent.com/u/29100818?v=4", "gravatar_id": "", "url": "https://api.github.com/users/omalleyt12", "html_url": "https://github.com/omalleyt12", "followers_url": "https://api.github.com/users/omalleyt12/followers", "following_url": "https://api.github.com/users/omalleyt12/following{/other_user}", "gists_url": "https://api.github.com/users/omalleyt12/gists{/gist_id}", "starred_url": "https://api.github.com/users/omalleyt12/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/omalleyt12/subscriptions", "organizations_url": "https://api.github.com/users/omalleyt12/orgs", "repos_url": "https://api.github.com/users/omalleyt12/repos", "events_url": "https://api.github.com/users/omalleyt12/events{/privacy}", "received_events_url": "https://api.github.com/users/omalleyt12/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "haifeng-jin", "id": 5476582, "node_id": "MDQ6VXNlcjU0NzY1ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5476582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haifeng-jin", "html_url": "https://github.com/haifeng-jin", "followers_url": "https://api.github.com/users/haifeng-jin/followers", "following_url": "https://api.github.com/users/haifeng-jin/following{/other_user}", "gists_url": "https://api.github.com/users/haifeng-jin/gists{/gist_id}", "starred_url": "https://api.github.com/users/haifeng-jin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haifeng-jin/subscriptions", "organizations_url": "https://api.github.com/users/haifeng-jin/orgs", "repos_url": "https://api.github.com/users/haifeng-jin/repos", "events_url": "https://api.github.com/users/haifeng-jin/events{/privacy}", "received_events_url": "https://api.github.com/users/haifeng-jin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "haifeng-jin", "id": 5476582, "node_id": "MDQ6VXNlcjU0NzY1ODI=", "avatar_url": "https://avatars3.githubusercontent.com/u/5476582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/haifeng-jin", "html_url": "https://github.com/haifeng-jin", "followers_url": "https://api.github.com/users/haifeng-jin/followers", "following_url": "https://api.github.com/users/haifeng-jin/following{/other_user}", "gists_url": "https://api.github.com/users/haifeng-jin/gists{/gist_id}", "starred_url": "https://api.github.com/users/haifeng-jin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/haifeng-jin/subscriptions", "organizations_url": "https://api.github.com/users/haifeng-jin/orgs", "repos_url": "https://api.github.com/users/haifeng-jin/repos", "events_url": "https://api.github.com/users/haifeng-jin/events{/privacy}", "received_events_url": "https://api.github.com/users/haifeng-jin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2019-08-23T04:04:22Z", "updated_at": "2019-10-16T20:14:31Z", "closed_at": "2019-10-16T20:14:31Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\r\nfrom tensorflow import keras\r\nimport kerastuner\r\nimport numpy as np\r\n\r\ndef build_model(hp):\r\n    bias = hp.Float('bias', 0, 2, step=0.5)\r\n    if bias not in {0, 0.5, 1, 1.5, 2}:\r\n        raise ValueError('Found bias: ' + str(bias))\r\n\r\n    class Bias(keras.layers.Layer):\r\n        def call(self, x):\r\n            return x + bias\r\n\r\n    layer = Bias(input_shape=(1,))\r\n    model = keras.Sequential([layer])\r\n    model.compile('sgd', 'mse', metrics=['accuracy'])\r\n    return model\r\n\r\nx = np.zeros((10, 1))\r\ny = np.ones((10, 1))\r\n\r\n# Random search runs fine.\r\nrs = kerastuner.tuners.RandomSearch(build_model, 'val_accuracy', 10)\r\nrs.search(x, y, epochs=1, validation_data=(x, y))\r\n# Bayesian returns floats w/o bucketizing, errors out.\r\nb = kerastuner.tuners.BayesianOptimization(build_model, 'val_accuracy', 10)\r\nb.search(x, y, epochs=1, validation_data=(x, y))\r\n# So does hyperband.\r\nhb = kerastuner.tuners.BayesianOptimization(build_model, 'val_accuracy', 10)\r\nhb.search(x, y, epochs=1, validation_data=(x, y))\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/59", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/59/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/59/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/59", "id": 483722546, "node_id": "MDU6SXNzdWU0ODM3MjI1NDY=", "number": 59, "title": "hp.Int \"max_value\" not working as expected", "user": {"login": "rcmagic1", "id": 54383260, "node_id": "MDQ6VXNlcjU0MzgzMjYw", "avatar_url": "https://avatars2.githubusercontent.com/u/54383260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcmagic1", "html_url": "https://github.com/rcmagic1", "followers_url": "https://api.github.com/users/rcmagic1/followers", "following_url": "https://api.github.com/users/rcmagic1/following{/other_user}", "gists_url": "https://api.github.com/users/rcmagic1/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcmagic1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcmagic1/subscriptions", "organizations_url": "https://api.github.com/users/rcmagic1/orgs", "repos_url": "https://api.github.com/users/rcmagic1/repos", "events_url": "https://api.github.com/users/rcmagic1/events{/privacy}", "received_events_url": "https://api.github.com/users/rcmagic1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394648492, "node_id": "MDU6TGFiZWwxMzk0NjQ4NDky", "url": "https://api.github.com/repos/keras-team/keras-tuner/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": "Good for newcomers"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-08-22T01:28:07Z", "updated_at": "2019-10-17T21:53:29Z", "closed_at": "2019-10-17T21:53:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "While using keras-tuner, the hp.Int \"max_value\" does not appear to be reached.  \r\nE.g. I have the following but 'num_units' maxes-out at 96, not 128 as expected.\r\n`    hp.Int('num_units',min_value=32,max_value=128,step=32)`\r\nIf I change to the following I can reach 128:\r\n`        hp.Int('num_units',min_value=32,max_value=128+1,step=32)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/keras-team/keras-tuner/issues/54", "repository_url": "https://api.github.com/repos/keras-team/keras-tuner", "labels_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/54/comments", "events_url": "https://api.github.com/repos/keras-team/keras-tuner/issues/54/events", "html_url": "https://github.com/keras-team/keras-tuner/issues/54", "id": 480101339, "node_id": "MDU6SXNzdWU0ODAxMDEzMzk=", "number": 54, "title": "Weights for model sequential have not yet been created error", "user": {"login": "daviddexter", "id": 16095054, "node_id": "MDQ6VXNlcjE2MDk1MDU0", "avatar_url": "https://avatars0.githubusercontent.com/u/16095054?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daviddexter", "html_url": "https://github.com/daviddexter", "followers_url": "https://api.github.com/users/daviddexter/followers", "following_url": "https://api.github.com/users/daviddexter/following{/other_user}", "gists_url": "https://api.github.com/users/daviddexter/gists{/gist_id}", "starred_url": "https://api.github.com/users/daviddexter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daviddexter/subscriptions", "organizations_url": "https://api.github.com/users/daviddexter/orgs", "repos_url": "https://api.github.com/users/daviddexter/repos", "events_url": "https://api.github.com/users/daviddexter/events{/privacy}", "received_events_url": "https://api.github.com/users/daviddexter/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-08-13T11:20:28Z", "updated_at": "2019-08-30T14:45:56Z", "closed_at": "2019-08-26T19:45:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm getting a weights error when run a simple tuner.\r\n\r\n- ENV : tf version 22.0.0-beta1\r\n         keras 2.2.4-tf\r\n\r\n- RUNNING on Kaggle GPU powered\r\n\r\n\r\n```py\r\nclass FBPDHyperModel(HyperModel):\r\n    def __init__(self,features):\r\n        self.features_layers = features # DenseFeatures Layer         \r\n\r\n    def build(self, hp):\r\n        model = tf.keras.Sequential()\r\n        model.add(self.features_layers)\r\n        model.add(layers.Dense(units=hp.Range('units',32, 512, 32),activation='relu'))\r\n        model.add(layers.Dense(3, activation='softmax'))\r\n        model.compile(optimizer=tf.keras.optimizers.Adam(),loss='sparse_categorical_crossentropy',metrics=['accuracy'])\r\n        return model  \r\n\r\ntuner = RandomSearch(\r\n    FBPDHyperModel(features=features_layer),\r\n    objective='val_accuracy',\r\n    max_trials=5,\r\n    directory='tuner_dir')\r\n```\r\n\r\nOn running, I get this error\r\n\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-49-720dad76188f> in <module>\r\n      3     objective='val_accuracy',\r\n      4     max_trials=5,\r\n----> 5     directory='tuner_dir')\r\n\r\n/opt/conda/lib/python3.6/site-packages/kerastuner/tuners/randomsearch.py in __init__(self, hypermodel, objective, max_trials, seed, **kwargs)\r\n    120             objective,\r\n    121             max_trials,\r\n--> 122             **kwargs)\r\n\r\n/opt/conda/lib/python3.6/site-packages/kerastuner/engine/tuner.py in __init__(self, oracle, hypermodel, objective, max_trials, executions_per_trial, max_model_size, optimizer, loss, metrics, hyperparameters, tune_new_entries, allow_new_entries, distribution_strategy, directory, project_name)\r\n    200         # Populate initial search space\r\n    201         if not self.hyperparameters.space and self.tune_new_entries:\r\n--> 202             self._build_model(self.hyperparameters)\r\n    203 \r\n    204     def search(self, *fit_args, **fit_kwargs):\r\n\r\n/opt/conda/lib/python3.6/site-packages/kerastuner/engine/tuner.py in _build_model(self, hp)\r\n    599 \r\n    600             # Check model size.\r\n--> 601             size = utils.compute_model_size(model)\r\n    602             if self.max_model_size and size > self.max_model_size:\r\n    603                 oversized_streak += 1\r\n\r\n/opt/conda/lib/python3.6/site-packages/kerastuner/utils.py in compute_model_size(model)\r\n     21 def compute_model_size(model):\r\n     22     \"comput the size of a given model\"\r\n---> 23     params = [K.count_params(p) for p in set(model.trainable_weights)]\r\n     24     return int(np.sum(params))\r\n     25 \r\n\r\n/opt/conda/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py in trainable_weights(self)\r\n    578   @property\r\n    579   def trainable_weights(self):\r\n--> 580     self._assert_weights_created()\r\n    581     return trackable_layer_utils.gather_trainable_weights(\r\n    582         trainable=self.trainable,\r\n\r\n/opt/conda/lib/python3.6/site-packages/tensorflow/python/keras/engine/network.py in _assert_weights_created(self)\r\n   1662                        'Weights are created when the Model is first called on '\r\n   1663                        'inputs or `build()` is called with an `input_shape`.' %\r\n-> 1664                        self.name)\r\n   1665 \r\n   1666   @property\r\n\r\nValueError: Weights for model sequential have not yet been created. Weights are created when the Model is first called on inputs or `build()` is called with an `input_shape`.\r\n", "performed_via_github_app": null, "score": 1.0}]}