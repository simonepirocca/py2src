{"total_count": 6, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/kata198/func_timeout/issues/15", "repository_url": "https://api.github.com/repos/kata198/func_timeout", "labels_url": "https://api.github.com/repos/kata198/func_timeout/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/kata198/func_timeout/issues/15/comments", "events_url": "https://api.github.com/repos/kata198/func_timeout/issues/15/events", "html_url": "https://github.com/kata198/func_timeout/issues/15", "id": 662678737, "node_id": "MDU6SXNzdWU2NjI2Nzg3Mzc=", "number": 15, "title": "Using func_timeout with long running SQL", "user": {"login": "quangvnm", "id": 12547840, "node_id": "MDQ6VXNlcjEyNTQ3ODQw", "avatar_url": "https://avatars2.githubusercontent.com/u/12547840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quangvnm", "html_url": "https://github.com/quangvnm", "followers_url": "https://api.github.com/users/quangvnm/followers", "following_url": "https://api.github.com/users/quangvnm/following{/other_user}", "gists_url": "https://api.github.com/users/quangvnm/gists{/gist_id}", "starred_url": "https://api.github.com/users/quangvnm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quangvnm/subscriptions", "organizations_url": "https://api.github.com/users/quangvnm/orgs", "repos_url": "https://api.github.com/users/quangvnm/repos", "events_url": "https://api.github.com/users/quangvnm/events{/privacy}", "received_events_url": "https://api.github.com/users/quangvnm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-21T07:11:23Z", "updated_at": "2020-08-01T07:43:47Z", "closed_at": "2020-08-01T07:43:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nFirst of all, thank you for this library, we like it very much it works great for most of my use case in AWS Lambda where we need to cleanly stop the Lambda function before it times out.\r\n\r\n___\r\n\r\n**TL,DR**: have you used this library to terminate a function with long running querries?\r\n\r\n___\r\n\r\nI am currently trying to combine this library with SQLAlchemy/psycopg to stop long running PostgreSQL transaction, but it doesn't work out of the box without some tweak.\r\n\r\nFirst of all, func_timeout raise exception FuncTimeOut in both main thread and spawn thread. But SQLAlchemy/psycopg doesn't stop the transaction immediately (it seems that during transaction, SQLAlchemy silently handle any kind of exception raised except SQL exceptions), it waits for that transaction to be finished, and it could be very long. Most of the long running SQL in our cases ( several minutes) are bugged/race conditions or extreme case in rare condition and they affect other operations so they need to be killed.\r\n\r\nSo I derived something like this to stop long running transaction\r\n\r\n```python\r\n# initialize the sqlalchemy session, to be used in func_with_long_sql\r\nsql_session = ... \r\ntry:\r\n    ...\r\n    response = func_timeout(timeout, func_with_long_sql, args, kwargs)\r\n    ...\r\nexcept FunctionTimedOut:\r\n    # low level (psycopg), this uses PGCancel to abort the execution on PostgreSQL side\r\n    sql_session.connection().connection.cancel()\r\n    sql_session.rollback()\r\n...\r\n```\r\n\r\nThere is one problem with this solution is that there will be two exceptions inside spawn thread (FuncTimeOut exception and one SQL exception due to aborted query), and SQLAlchemy doesn't like it, it will say that one exception raises while handling another exception, the SQL connection/session will become stale.\r\n\r\nAs I need to use PGCancel to stop transaction, so I have to stop sending the other exception to spawn thread, and it works great so far.\r\n\r\nMy question is: should this solution (cancel an execution/rollback + disable of FuncTimeOut exception inside spawn thread) is the use case of func_timeout for SQL, or is there another way? I haven't found much on the net about this, maybe there is another better way?\r\n\r\nWe need to set timeout for each kind of operation, (and value in statement_timeout in PostgreSQL is set at big value for operation that really need long running queries)\r\n\r\nThank you,", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kata198/func_timeout/issues/6", "repository_url": "https://api.github.com/repos/kata198/func_timeout", "labels_url": "https://api.github.com/repos/kata198/func_timeout/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/kata198/func_timeout/issues/6/comments", "events_url": "https://api.github.com/repos/kata198/func_timeout/issues/6/events", "html_url": "https://github.com/kata198/func_timeout/issues/6", "id": 467621346, "node_id": "MDU6SXNzdWU0Njc2MjEzNDY=", "number": 6, "title": "FunctionTimedOut exception cannot be raised with zero arguments", "user": {"login": "BrianHVB", "id": 17414903, "node_id": "MDQ6VXNlcjE3NDE0OTAz", "avatar_url": "https://avatars0.githubusercontent.com/u/17414903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrianHVB", "html_url": "https://github.com/BrianHVB", "followers_url": "https://api.github.com/users/BrianHVB/followers", "following_url": "https://api.github.com/users/BrianHVB/following{/other_user}", "gists_url": "https://api.github.com/users/BrianHVB/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrianHVB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrianHVB/subscriptions", "organizations_url": "https://api.github.com/users/BrianHVB/orgs", "repos_url": "https://api.github.com/users/BrianHVB/repos", "events_url": "https://api.github.com/users/BrianHVB/events{/privacy}", "received_events_url": "https://api.github.com/users/BrianHVB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-07-12T22:19:47Z", "updated_at": "2019-08-20T15:02:11Z", "closed_at": "2019-08-20T15:02:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "The function signature for `func_timeout.exceptions.FunctionTimedOut` is \r\n\r\n```python\r\ndef __init__(self, msg='', timedOutAfter=None, timedOutFunction=None, timedOutArgs=None, timedOutKwargs=None):\r\n```\r\nIndicating that all parameters are optional.\r\n\r\nHowever, creating or throwing the exception with zero parameters raises an `AttributeError` exception\r\n\r\nMinimal example\r\n\r\n```python\r\n\r\ndef throw_timeout_with_message():\r\n    raise FunctionTimedOut('foo')\r\n\r\ndef throw_blank_timeout():\r\n    raise FunctionTimedOut()\r\n\r\nif __name__ == '__main__':\r\n    # works correctly\r\n    try:\r\n        throw_timeout_with_message()\r\n    except FunctionTimedOut as e:\r\n        assert(isinstance(e, FunctionTimedOut))\r\n        print('handled')\r\n\r\n    # raises an uncaught error\r\n    try:\r\n        throw_blank_timeout()\r\n    except FunctionTimedOut as e:\r\n        assert(isinstance(e, FunctionTimedOut))\r\n        print('handled')\r\n\r\n```\r\n\r\n#### Expected result of the second try/catch block:\r\n`> handled`\r\n\r\n\r\n#### Actual result of the second try/catch block:\r\n```\r\nTraceback (most recent call last):\r\n  File \".../scratch_3.py\", line 40, in <module>\r\n    throw_blank_timeout()\r\n  File \".../scratch_3.py\", line 8, in throw_blank_timeout\r\n    raise FunctionTimedOut()\r\n  File \"...\\Python27\\lib\\site-packages\\func_timeout\\exceptions.py\", line 36, in __init__\r\n    msg = self.getMsg()\r\n  File \"...\\Python27\\lib\\site-packages\\func_timeout\\exceptions.py\", line 49, in getMsg\r\n    return 'Function %s (args=%s) (kwargs=%s) timed out after %f seconds.\\n' %(self.timedOutFunction.__name__, repr(self.timedOutArgs), repr(self.timedOutKwargs), self.timedOutAfter)\r\nAttributeError: 'NoneType' object has no attribute '__name__'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kata198/func_timeout/issues/5", "repository_url": "https://api.github.com/repos/kata198/func_timeout", "labels_url": "https://api.github.com/repos/kata198/func_timeout/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/kata198/func_timeout/issues/5/comments", "events_url": "https://api.github.com/repos/kata198/func_timeout/issues/5/events", "html_url": "https://github.com/kata198/func_timeout/issues/5", "id": 467618391, "node_id": "MDU6SXNzdWU0Njc2MTgzOTE=", "number": 5, "title": "FunctionTimedOut Exception cannot be caught with Exception", "user": {"login": "BrianHVB", "id": 17414903, "node_id": "MDQ6VXNlcjE3NDE0OTAz", "avatar_url": "https://avatars0.githubusercontent.com/u/17414903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BrianHVB", "html_url": "https://github.com/BrianHVB", "followers_url": "https://api.github.com/users/BrianHVB/followers", "following_url": "https://api.github.com/users/BrianHVB/following{/other_user}", "gists_url": "https://api.github.com/users/BrianHVB/gists{/gist_id}", "starred_url": "https://api.github.com/users/BrianHVB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BrianHVB/subscriptions", "organizations_url": "https://api.github.com/users/BrianHVB/orgs", "repos_url": "https://api.github.com/users/BrianHVB/repos", "events_url": "https://api.github.com/users/BrianHVB/events{/privacy}", "received_events_url": "https://api.github.com/users/BrianHVB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-07-12T22:07:38Z", "updated_at": "2019-07-20T07:32:15Z", "closed_at": "2019-07-20T06:27:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "func_timeout.exceptions.FunctionTimedOut does not inherit from `Exception`, making it impossible to catch in general purpose try/except blocks.\r\n\r\nPython Version: 2.7\r\nWindows 10\r\n\r\n#### Minimal Example:\r\n```python\r\ndef catch_specific():\r\n    try:\r\n        raise FunctionTimedOut('foo')\r\n    except FunctionTimedOut as e:\r\n        print('handled ' + str(e))\r\n\r\ndef catch_general():\r\n    try:\r\n        raise FunctionTimedOut('bar')\r\n    except Exception as e:\r\n        print('handled ' + str(e))\r\n\r\nif __name__ == '__main__':\r\n    print(issubclass(FunctionTimedOut, Exception))\r\n    catch_specific()\r\n    catch_general()\r\n```\r\n\r\n#### Expected output when calling `catch_general()`\r\n`> handled bar`\r\n\r\n#### Actual output when calling `catch_general()`\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:/Users/...\", line 31, in <module>\r\n    catch_general()\r\n  File \"C:/Users/.../scratch_3.py\", line 21, in catch_general\r\n    raise FunctionTimedOut('bar')\r\nfunc_timeout.exceptions.FunctionTimedOut: bar\r\n```\r\n\r\n#### Why does this matter\r\nWhile `except Exception` is generally a bad practice, there are various scenarios where it is the correct choice. The difference between `except Exception:`, and a naked `except:` or `except BaseException:` is that the latter two catch SystemExit, KeyboardInterrupt and a few other exceptions that should always be re-raised. Where `except Exception` is used for things like loggers, web servers, remote terminals, etc, where you want to log the exception and resume program execution.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kata198/func_timeout/issues/4", "repository_url": "https://api.github.com/repos/kata198/func_timeout", "labels_url": "https://api.github.com/repos/kata198/func_timeout/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/kata198/func_timeout/issues/4/comments", "events_url": "https://api.github.com/repos/kata198/func_timeout/issues/4/events", "html_url": "https://github.com/kata198/func_timeout/issues/4", "id": 349863157, "node_id": "MDU6SXNzdWUzNDk4NjMxNTc=", "number": 4, "title": "\"func_timeout() got multiple values for argument args\"", "user": {"login": "pouu69", "id": 8802261, "node_id": "MDQ6VXNlcjg4MDIyNjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/8802261?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pouu69", "html_url": "https://github.com/pouu69", "followers_url": "https://api.github.com/users/pouu69/followers", "following_url": "https://api.github.com/users/pouu69/following{/other_user}", "gists_url": "https://api.github.com/users/pouu69/gists{/gist_id}", "starred_url": "https://api.github.com/users/pouu69/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pouu69/subscriptions", "organizations_url": "https://api.github.com/users/pouu69/orgs", "repos_url": "https://api.github.com/users/pouu69/repos", "events_url": "https://api.github.com/users/pouu69/events{/privacy}", "received_events_url": "https://api.github.com/users/pouu69/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-13T01:38:01Z", "updated_at": "2018-08-13T02:03:50Z", "closed_at": "2018-08-13T02:03:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\n````\r\ndef fn():\r\n    func_timeout(timeout=total_timer, func=cb ,args=(ordno,))\r\n\r\nError :\"func_timeout() got multiple values for argument args\"\r\n````\r\n\r\nwhy?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kata198/func_timeout/issues/2", "repository_url": "https://api.github.com/repos/kata198/func_timeout", "labels_url": "https://api.github.com/repos/kata198/func_timeout/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/kata198/func_timeout/issues/2/comments", "events_url": "https://api.github.com/repos/kata198/func_timeout/issues/2/events", "html_url": "https://github.com/kata198/func_timeout/issues/2", "id": 248897544, "node_id": "MDU6SXNzdWUyNDg4OTc1NDQ=", "number": 2, "title": "filter does not use functools.wraps", "user": {"login": "belongwqz", "id": 6919651, "node_id": "MDQ6VXNlcjY5MTk2NTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/6919651?v=4", "gravatar_id": "", "url": "https://api.github.com/users/belongwqz", "html_url": "https://github.com/belongwqz", "followers_url": "https://api.github.com/users/belongwqz/followers", "following_url": "https://api.github.com/users/belongwqz/following{/other_user}", "gists_url": "https://api.github.com/users/belongwqz/gists{/gist_id}", "starred_url": "https://api.github.com/users/belongwqz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/belongwqz/subscriptions", "organizations_url": "https://api.github.com/users/belongwqz/orgs", "repos_url": "https://api.github.com/users/belongwqz/repos", "events_url": "https://api.github.com/users/belongwqz/events{/privacy}", "received_events_url": "https://api.github.com/users/belongwqz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-08-09T02:14:53Z", "updated_at": "2017-08-11T00:06:37Z", "closed_at": "2017-08-10T23:02:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ndef a():\r\n    pass\r\n\r\n@func_set_timeout(xx)\r\ndef b():\r\n    pass\r\n\r\nprint(a.__name__, b.__name__)\r\n\"a, <lambda>\" # wrong, it should be \"a, b\"\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/kata198/func_timeout/issues/1", "repository_url": "https://api.github.com/repos/kata198/func_timeout", "labels_url": "https://api.github.com/repos/kata198/func_timeout/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/kata198/func_timeout/issues/1/comments", "events_url": "https://api.github.com/repos/kata198/func_timeout/issues/1/events", "html_url": "https://github.com/kata198/func_timeout/issues/1", "id": 198711393, "node_id": "MDU6SXNzdWUxOTg3MTEzOTM=", "number": 1, "title": "No such file or directory: '/dev/null'", "user": {"login": "geo-petrini", "id": 3972551, "node_id": "MDQ6VXNlcjM5NzI1NTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3972551?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geo-petrini", "html_url": "https://github.com/geo-petrini", "followers_url": "https://api.github.com/users/geo-petrini/followers", "following_url": "https://api.github.com/users/geo-petrini/following{/other_user}", "gists_url": "https://api.github.com/users/geo-petrini/gists{/gist_id}", "starred_url": "https://api.github.com/users/geo-petrini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geo-petrini/subscriptions", "organizations_url": "https://api.github.com/users/geo-petrini/orgs", "repos_url": "https://api.github.com/users/geo-petrini/repos", "events_url": "https://api.github.com/users/geo-petrini/events{/privacy}", "received_events_url": "https://api.github.com/users/geo-petrini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-04T13:49:41Z", "updated_at": "2017-01-04T22:11:26Z", "closed_at": "2017-01-04T22:11:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "In Windows there is no '/dev/null' so when a timeout is reached the code throws this exception\r\n\r\nfunc_timeout\\StoppableThread.py\", line 24, in _stopThread\r\n    self._stderr = open('/dev/null', 'w')\r\nIOError: [Errno 2] No such file or directory: '/dev/null'", "performed_via_github_app": null, "score": 1.0}]}