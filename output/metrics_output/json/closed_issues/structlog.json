{"total_count": 795, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/psf/black/issues/1614", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1614/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1614/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1614/events", "html_url": "https://github.com/psf/black/issues/1614", "id": 683435718, "node_id": "MDU6SXNzdWU2ODM0MzU3MTg=", "number": 1614, "title": "Rf", "user": {"login": "Devesh044", "id": 67075696, "node_id": "MDQ6VXNlcjY3MDc1Njk2", "avatar_url": "https://avatars0.githubusercontent.com/u/67075696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Devesh044", "html_url": "https://github.com/Devesh044", "followers_url": "https://api.github.com/users/Devesh044/followers", "following_url": "https://api.github.com/users/Devesh044/following{/other_user}", "gists_url": "https://api.github.com/users/Devesh044/gists{/gist_id}", "starred_url": "https://api.github.com/users/Devesh044/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Devesh044/subscriptions", "organizations_url": "https://api.github.com/users/Devesh044/orgs", "repos_url": "https://api.github.com/users/Devesh044/repos", "events_url": "https://api.github.com/users/Devesh044/events{/privacy}", "received_events_url": "https://api.github.com/users/Devesh044/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-08-21T09:42:05Z", "updated_at": "2020-08-21T11:25:26Z", "closed_at": "2020-08-21T11:25:08Z", "author_association": "NONE", "active_lock_reason": "spam", "body": "Xcode CFC", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1607", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1607/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1607/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1607/events", "html_url": "https://github.com/psf/black/issues/1607", "id": 680243363, "node_id": "MDU6SXNzdWU2ODAyNDMzNjM=", "number": 1607, "title": "black throws an error when formatting string", "user": {"login": "dkuku", "id": 904179, "node_id": "MDQ6VXNlcjkwNDE3OQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/904179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkuku", "html_url": "https://github.com/dkuku", "followers_url": "https://api.github.com/users/dkuku/followers", "following_url": "https://api.github.com/users/dkuku/following{/other_user}", "gists_url": "https://api.github.com/users/dkuku/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkuku/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkuku/subscriptions", "organizations_url": "https://api.github.com/users/dkuku/orgs", "repos_url": "https://api.github.com/users/dkuku/repos", "events_url": "https://api.github.com/users/dkuku/events{/privacy}", "received_events_url": "https://api.github.com/users/dkuku/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-17T13:38:22Z", "updated_at": "2020-08-17T14:31:27Z", "closed_at": "2020-08-17T14:31:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** A clear and concise description of what the bug is.\r\nblack throws an error on my comment - \r\n**To Reproduce** Steps to reproduce the behavior:\r\n```\r\nclass CITNowEvent(Resource):\r\n    def post(self):\r\n        \"\"\"\r\n        \"event\": \"EVENTVIDEOPAGESERVED\",  \r\n        \"server\": \"https://video.citnow.com\",  \r\n        \"lid\": \"idev\",  \r\n        \"lid_type\": \"service\",  \r\n        \"dealername\": \"iDevices Test Site - DEALERSHIP NAME\",  \r\n        \"dealerpostcode\": \"RG412PQ\",  \r\n        \"timestamp\": 1454508578 \r\n        possible fields - the ones that we are interested\r\n        _____________________________________\r\n        | request | int    | Request | ID   |\r\n        | video   | object | Video   | data |\r\n        | vhc     | object | VHC     | data |\r\n        \"\"\"\r\n```\r\nthats the diff I get:\r\n```\r\n--- src\r\n+++ dst\r\n@@ -994,11 +994,11 @@\r\n           body=\r\n             Expr(\r\n               value=\r\n                 Constant(\r\n                   value=\r\n-                    '\\n \"event\": \"EVENTVIDEOPAGESERVED\",  \\n \"server\": \"https://video.citnow.com\",  \\n \"lid\": \"idev\",  \\n \"lid_type\": \"service\",  \\n \"dealername\": \"iDevices Test Site - DEALERSHIP NAME\",  \\n \"dealerpostcode\": \"RG412PQ\",  \\n \"timestamp\": 1454508578 \\n possible fields - the ones that we are interested\\n _____________________________________\\n | request | int    | Request | ID   |\\n | video   | object | Video   | data |\\n | vhc     | object | VHC     | data |\\n ',  # str\r\n+                    '\\n \"event\": \"EVENTVIDEOPAGESERVED\",\\n \"server\": \"https://video.citnow.com\",\\n \"lid\": \"idev\",\\n \"lid_type\": \"service\",\\n \"dealername\": \"iDevices Test Site - DEALERSHIP NAME\",\\n \"dealerpostcode\": \"RG412PQ\",\\n \"timestamp\": 1454508578\\n possible fields - the ones that we are interested\\n _____________________________________\\n | request | int    | Request | ID   |\\n | video   | object | Video   | data |\\n | vhc     | object | VHC     | data |\\n ',  # str\r\n                 )  # /Constant\r\n             )  # /Expr\r\n             Return(\r\n               value=\r\n                 Call(\r\n\r\n```\r\nAfter I remove it I can fromat the file, also it should not remove whitespaces from this string", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1606", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1606/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1606/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1606/events", "html_url": "https://github.com/psf/black/issues/1606", "id": 679677965, "node_id": "MDU6SXNzdWU2Nzk2Nzc5NjU=", "number": 1606, "title": "Fix indentation", "user": {"login": "Yukti-09", "id": 44090430, "node_id": "MDQ6VXNlcjQ0MDkwNDMw", "avatar_url": "https://avatars3.githubusercontent.com/u/44090430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yukti-09", "html_url": "https://github.com/Yukti-09", "followers_url": "https://api.github.com/users/Yukti-09/followers", "following_url": "https://api.github.com/users/Yukti-09/following{/other_user}", "gists_url": "https://api.github.com/users/Yukti-09/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yukti-09/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yukti-09/subscriptions", "organizations_url": "https://api.github.com/users/Yukti-09/orgs", "repos_url": "https://api.github.com/users/Yukti-09/repos", "events_url": "https://api.github.com/users/Yukti-09/events{/privacy}", "received_events_url": "https://api.github.com/users/Yukti-09/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-16T03:00:41Z", "updated_at": "2020-08-16T12:20:59Z", "closed_at": "2020-08-16T12:15:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Code:\r\n```\r\ndef func:\r\nreturn('hello')\r\n```\r\nBlack cannot fix the indentation and it returns  \r\n```\r\n1 file failed to reformat.\r\n```\r\nWe could add an enhancement to fix the indentation.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1605", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1605/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1605/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1605/events", "html_url": "https://github.com/psf/black/issues/1605", "id": 679327549, "node_id": "MDU6SXNzdWU2NzkzMjc1NDk=", "number": 1605, "title": "error: cannot format Tests/test_file_libtiff.py: (-1, 8)", "user": {"login": "hugovk", "id": 1324225, "node_id": "MDQ6VXNlcjEzMjQyMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1324225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugovk", "html_url": "https://github.com/hugovk", "followers_url": "https://api.github.com/users/hugovk/followers", "following_url": "https://api.github.com/users/hugovk/following{/other_user}", "gists_url": "https://api.github.com/users/hugovk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugovk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugovk/subscriptions", "organizations_url": "https://api.github.com/users/hugovk/orgs", "repos_url": "https://api.github.com/users/hugovk/repos", "events_url": "https://api.github.com/users/hugovk/events{/privacy}", "received_events_url": "https://api.github.com/users/hugovk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 2272618118, "node_id": "MDU6TGFiZWwyMjcyNjE4MTE4", "url": "https://api.github.com/repos/psf/black/labels/crash", "name": "crash", "color": "e99695", "default": false, "description": "Black is crashing"}, {"id": 867432794, "node_id": "MDU6TGFiZWw4Njc0MzI3OTQ=", "url": "https://api.github.com/repos/psf/black/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-08-14T18:19:26Z", "updated_at": "2020-08-14T21:29:16Z", "closed_at": "2020-08-14T19:58:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug** A clear and concise description of what the bug is.\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\n1. Take this file https://github.com/python-pillow/Pillow/blob/e54909b97c213278accc8176f1c52e403f8afcb6/Tests/test_file_libtiff.py\r\n2. Run _Black_ on it with these arguments `--check Tests/test_file_libtiff.py`\r\n3. See error\r\n\r\n```console\r\n$ black --version\r\nblack, version 19.10b1.dev141+g820f387\r\n$ black --check Tests/test_file_libtiff.py\r\nerror: cannot format Tests/test_file_libtiff.py: (-1, 8)\r\nOh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\r\n1 file would fail to reformat.\r\n```\r\n\r\n**Expected behavior** A clear and concise description of what you expected to happen.\r\n\r\nFile formats.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: master\r\n- OS and Python version: macOS/Python 3.8.3\r\n\r\n**Does this bug also happen on master?** To answer this, you have two options:\r\n\r\nYes, see above.\r\n\r\nWorks with last release (the codebase is already formatted with that version):\r\n\r\n```console\r\n$ black --version\r\nblack, version 19.10b0\r\n$ black --check Tests/test_file_libtiff.py\r\nAll done! \u2728 \ud83c\udf70 \u2728\r\n1 file would be left unchanged.\r\n```\r\n\r\n**Additional context** Add any other context about the problem here.\r\n\r\nLooks like it's this part:\r\n\r\n```python\r\n                            assert (\r\n                                c_float(val[0][0] / val[0][1]).value\r\n                                == c_float(value[0][0] / value[0][1]).value\r\n                            ), (\"%s didn't roundtrip\" % tag)\r\n```\r\n\r\nhttps://github.com/python-pillow/Pillow/blob/e54909b97c213278accc8176f1c52e403f8afcb6/Tests/test_file_libtiff.py#L171-L174\r\n\r\n(We're about to drop Python 3.5 and adopt f-strings, it's replacement is handled fine:\r\n\r\n```python\r\n                            assert (\r\n                                c_float(val[0][0] / val[0][1]).value\r\n                                == c_float(value[0][0] / value[0][1]).value\r\n                            ), f\"{tag} didn't roundtrip\"\r\n```\r\n)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1602", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1602/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1602/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1602/events", "html_url": "https://github.com/psf/black/issues/1602", "id": 679184539, "node_id": "MDU6SXNzdWU2NzkxODQ1Mzk=", "number": 1602, "title": "could not find contributing_to_black.md on github action", "user": {"login": "krux02", "id": 929961, "node_id": "MDQ6VXNlcjkyOTk2MQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/929961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krux02", "html_url": "https://github.com/krux02", "followers_url": "https://api.github.com/users/krux02/followers", "following_url": "https://api.github.com/users/krux02/following{/other_user}", "gists_url": "https://api.github.com/users/krux02/gists{/gist_id}", "starred_url": "https://api.github.com/users/krux02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krux02/subscriptions", "organizations_url": "https://api.github.com/users/krux02/orgs", "repos_url": "https://api.github.com/users/krux02/repos", "events_url": "https://api.github.com/users/krux02/events{/privacy}", "received_events_url": "https://api.github.com/users/krux02/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 867432794, "node_id": "MDU6TGFiZWw4Njc0MzI3OTQ=", "url": "https://api.github.com/repos/psf/black/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}, {"id": 1348564996, "node_id": "MDU6TGFiZWwxMzQ4NTY0OTk2", "url": "https://api.github.com/repos/psf/black/labels/integrations", "name": "integrations", "color": "c5def5", "default": false, "description": "Editor plugins and other integrations"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-14T14:11:54Z", "updated_at": "2020-08-14T14:32:02Z", "closed_at": "2020-08-14T14:17:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I used the github action from the readme and copy pasted into our project. The pull requests fails with the following error message [here](https://github.com/protontypes/openselery/pull/97/checks?check_run_id=985114640):\r\n\r\n```\r\n Set up job2s\r\n##[error]Could not find file '/home/runner/work/_actions/_temp_969739ad-9b09-42e5-b290-ab56cbb44a6d/_staging/psf-black-6bedb5c/docs/contributing_to_black.md'.\r\nCurrent runner version: '2.272.0'\r\nOperating System\r\nVirtual Environment\r\nPrepare workflow directory\r\nPrepare all required actions\r\nDownload action repository 'actions/checkout@v2'\r\nDownload action repository 'actions/setup-python@v2'\r\nDownload action repository 'psf/black@stable'\r\n##[error]Could not find file '/home/runner/work/_actions/_temp_969739ad-9b09-42e5-b290-ab56cbb44a6d/_staging/psf-black-6bedb5c/docs/contributing_to_black.md'.\r\n```\r\n**Expected behavior**\r\n\r\nSome error message about linting or on what I did wrong to configure black itself. I cannot do anything with the error message ablove\r\n\r\n**Environment (please complete the following information):**\r\n\r\nHere is the PR that should introduce black: \r\n\r\nhttps://github.com/protontypes/openselery/pull/97\r\n\r\n**Does this bug also happen on master?** I replaced stable with master in black.yml and now I get useful error messages. So no it does not happen on master.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1586", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1586/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1586/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1586/events", "html_url": "https://github.com/psf/black/issues/1586", "id": 677054582, "node_id": "MDU6SXNzdWU2NzcwNTQ1ODI=", "number": 1586, "title": "Can't use with GitHub actions", "user": {"login": "Destaq", "id": 61620873, "node_id": "MDQ6VXNlcjYxNjIwODcz", "avatar_url": "https://avatars2.githubusercontent.com/u/61620873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Destaq", "html_url": "https://github.com/Destaq", "followers_url": "https://api.github.com/users/Destaq/followers", "following_url": "https://api.github.com/users/Destaq/following{/other_user}", "gists_url": "https://api.github.com/users/Destaq/gists{/gist_id}", "starred_url": "https://api.github.com/users/Destaq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Destaq/subscriptions", "organizations_url": "https://api.github.com/users/Destaq/orgs", "repos_url": "https://api.github.com/users/Destaq/repos", "events_url": "https://api.github.com/users/Destaq/events{/privacy}", "received_events_url": "https://api.github.com/users/Destaq/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 867432794, "node_id": "MDU6TGFiZWw4Njc0MzI3OTQ=", "url": "https://api.github.com/repos/psf/black/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}, {"id": 1348564996, "node_id": "MDU6TGFiZWwxMzQ4NTY0OTk2", "url": "https://api.github.com/repos/psf/black/labels/integrations", "name": "integrations", "color": "c5def5", "default": false, "description": "Editor plugins and other integrations"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T17:22:18Z", "updated_at": "2020-08-11T17:43:42Z", "closed_at": "2020-08-11T17:42:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "I followed the instructions in the README and generated a file named `black.yml` under `.github/workflows/`. However, when I pushed to master, an error occurred:\r\n\r\n```\r\nCould not find file '/home/runner/work/_actions/_temp_5819819e-a4d4-412a-8e33-e24210fc984b/_staging/psf-black-6bedb5c/docs/contributing_to_black.md'.\r\n```\r\nThis means I am unable to use `black` for GitHub CI. Is there any solution to this?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1585", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1585/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1585/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1585/events", "html_url": "https://github.com/psf/black/issues/1585", "id": 677005547, "node_id": "MDU6SXNzdWU2NzcwMDU1NDc=", "number": 1585, "title": "Crash on docstring with misindented character", "user": {"login": "JelleZijlstra", "id": 906600, "node_id": "MDQ6VXNlcjkwNjYwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/906600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JelleZijlstra", "html_url": "https://github.com/JelleZijlstra", "followers_url": "https://api.github.com/users/JelleZijlstra/followers", "following_url": "https://api.github.com/users/JelleZijlstra/following{/other_user}", "gists_url": "https://api.github.com/users/JelleZijlstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/JelleZijlstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JelleZijlstra/subscriptions", "organizations_url": "https://api.github.com/users/JelleZijlstra/orgs", "repos_url": "https://api.github.com/users/JelleZijlstra/repos", "events_url": "https://api.github.com/users/JelleZijlstra/events{/privacy}", "received_events_url": "https://api.github.com/users/JelleZijlstra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 867438288, "node_id": "MDU6TGFiZWw4Njc0MzgyODg=", "url": "https://api.github.com/repos/psf/black/labels/invalid%20code", "name": "invalid code", "color": "ff0000", "default": false, "description": "Black destroyed a valid Python file"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-11T16:09:19Z", "updated_at": "2020-08-18T01:18:39Z", "closed_at": "2020-08-18T01:18:39Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "```\r\n$ cat web/lib/webhelpers/html/blackbug.py \r\ndef checkbox():\r\n    \"\"\"Create a check box.  Pass the empty string (\"\") to suppress the\r\n    ID attribute entirely.\r\n\r\nd\r\n    The following HTML attributes may be set by keyword argument:\r\n    \"\"\"\r\n$ ~/repos/black/.venv/bin/black  web/lib/webhelpers/html/blackbug.py \r\nerror: cannot format web/lib/webhelpers/html/blackbug.py: INTERNAL ERROR: Black produced code that is not equivalent to the source.  Please report a bug on https://github.com/psf/black/issues.  This diff might be helpful: /tmp/blk_azbg7n69.log\r\nOh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\r\n1 file failed to reformat.\r\n$ ~/repos/black/.venv/bin/black --version\r\nblack, version 19.10b1.dev134+gb59a524.d20200811\r\n$ cat /tmp/blk_azbg7n69.log\r\n--- src\r\n+++ dst\r\n@@ -15,11 +15,11 @@\r\n       body=\r\n         Expr(\r\n           value=\r\n             Constant(\r\n               value=\r\n-                'Create a check box.  Pass the empty string (\"\") to suppress the\\n ID attribute entirely.\\n\\nd\\n The following HTML attributes may be set by keyword argument:',  # str\r\n+                'Create a check box.  Pass the empty string (\"\") to suppress the\\n ID attribute entirely.\\n\\n d\\n The following HTML attributes may be set by keyword argument:',  # str\r\n             )  # /Constant\r\n         )  # /Expr\r\n       decorator_list=\r\n       name=\r\n         'checkbox',  # str\r\n```\r\n\r\nI don't know why that random \"d\" was there but it shouldn't crash Black.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1578", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1578/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1578/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1578/events", "html_url": "https://github.com/psf/black/issues/1578", "id": 676179440, "node_id": "MDU6SXNzdWU2NzYxNzk0NDA=", "number": 1578, "title": "fmt: on/off ignores comments unless code also present", "user": {"login": "djlondon", "id": 25865081, "node_id": "MDQ6VXNlcjI1ODY1MDgx", "avatar_url": "https://avatars2.githubusercontent.com/u/25865081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djlondon", "html_url": "https://github.com/djlondon", "followers_url": "https://api.github.com/users/djlondon/followers", "following_url": "https://api.github.com/users/djlondon/following{/other_user}", "gists_url": "https://api.github.com/users/djlondon/gists{/gist_id}", "starred_url": "https://api.github.com/users/djlondon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djlondon/subscriptions", "organizations_url": "https://api.github.com/users/djlondon/orgs", "repos_url": "https://api.github.com/users/djlondon/repos", "events_url": "https://api.github.com/users/djlondon/events{/privacy}", "received_events_url": "https://api.github.com/users/djlondon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 867432794, "node_id": "MDU6TGFiZWw4Njc0MzI3OTQ=", "url": "https://api.github.com/repos/psf/black/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-10T14:27:21Z", "updated_at": "2020-08-10T15:39:48Z", "closed_at": "2020-08-10T15:39:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "`fmt: off/on` doesn't disable black formatting for comments unless code is also present.\r\n\r\nThe following:\r\n```\r\n# fmt: off\r\n#setup: device 3423\r\n# fmt: on\r\n```\r\nYields:\r\n```\r\n# setup: device 3423\r\n```\r\n\r\nBut, add some code:\r\n```\r\n# fmt: off\r\n#setup: device 3423\r\nblack = 'test'\r\n# fmt: on\r\n```\r\nand the comment is also ignored (as desired).\r\n\r\n- Version: Lastest (19.10b0)\r\n- OS and Python version: macOS 10.15.5/Python 3.8.2\r\n\r\nAlso happens on master.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1575", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1575/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1575/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1575/events", "html_url": "https://github.com/psf/black/issues/1575", "id": 674789081, "node_id": "MDU6SXNzdWU2NzQ3ODkwODE=", "number": 1575, "title": "Slicing of bracketed expressions is broken by removal of the brackets", "user": {"login": "michael-sayapin", "id": 64451115, "node_id": "MDQ6VXNlcjY0NDUxMTE1", "avatar_url": "https://avatars0.githubusercontent.com/u/64451115?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michael-sayapin", "html_url": "https://github.com/michael-sayapin", "followers_url": "https://api.github.com/users/michael-sayapin/followers", "following_url": "https://api.github.com/users/michael-sayapin/following{/other_user}", "gists_url": "https://api.github.com/users/michael-sayapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/michael-sayapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michael-sayapin/subscriptions", "organizations_url": "https://api.github.com/users/michael-sayapin/orgs", "repos_url": "https://api.github.com/users/michael-sayapin/repos", "events_url": "https://api.github.com/users/michael-sayapin/events{/privacy}", "received_events_url": "https://api.github.com/users/michael-sayapin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-08-07T06:20:44Z", "updated_at": "2020-08-14T16:18:12Z", "closed_at": "2020-08-14T16:18:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nSlicing of bracketed expressions is broken by too eager removal of the brackets.\r\n\r\n**To Reproduce**\r\n\r\n1. Try to reformat a file containing `return ('%x' % value)[-12:]`\r\n2. The resulting expression is not producing equivalent result: `return '%x' % mac[-12:]`\r\n\r\n**Expected behavior**\r\n\r\nExpected to not remove the brackets in this case.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: master\r\n- OS and Python version: Linux, Python 3.7.4\r\n\r\n**Does this bug also happen on master?** To answer this, you have two options:\r\n\r\nYes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1573", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1573/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1573/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1573/events", "html_url": "https://github.com/psf/black/issues/1573", "id": 674781039, "node_id": "MDU6SXNzdWU2NzQ3ODEwMzk=", "number": 1573, "title": "GitHub actions error prior stable release of lint.yml", "user": {"login": "scratchmex", "id": 4014888, "node_id": "MDQ6VXNlcjQwMTQ4ODg=", "avatar_url": "https://avatars3.githubusercontent.com/u/4014888?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scratchmex", "html_url": "https://github.com/scratchmex", "followers_url": "https://api.github.com/users/scratchmex/followers", "following_url": "https://api.github.com/users/scratchmex/following{/other_user}", "gists_url": "https://api.github.com/users/scratchmex/gists{/gist_id}", "starred_url": "https://api.github.com/users/scratchmex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scratchmex/subscriptions", "organizations_url": "https://api.github.com/users/scratchmex/orgs", "repos_url": "https://api.github.com/users/scratchmex/repos", "events_url": "https://api.github.com/users/scratchmex/events{/privacy}", "received_events_url": "https://api.github.com/users/scratchmex/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 867432794, "node_id": "MDU6TGFiZWw4Njc0MzI3OTQ=", "url": "https://api.github.com/repos/psf/black/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}, {"id": 1348564996, "node_id": "MDU6TGFiZWwxMzQ4NTY0OTk2", "url": "https://api.github.com/repos/psf/black/labels/integrations", "name": "integrations", "color": "c5def5", "default": false, "description": "Editor plugins and other integrations"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-08-07T06:01:07Z", "updated_at": "2020-08-07T15:10:58Z", "closed_at": "2020-08-07T15:10:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I get the following error when using GitHub Actions with black:\r\n\r\n```\r\nCurrent runner version: '2.263.0'\r\nOperating System\r\nVirtual Environment\r\nPrepare workflow directory\r\nPrepare all required actions\r\nDownload action repository 'actions/checkout@v2'\r\nDownload action repository 'actions/setup-python@v2'\r\nDownload action repository 'psf/black@stable'\r\n##[error]Could not find file '/home/runner/work/_actions/_temp_e6a60df6-7298-4553-9c69-9049a1c24037/_staging/psf-black-6bedb5c/docs/editor_integration.md'.\r\n```\r\n\r\nThe .yml file is the one suggested in the README as follows:\r\n\r\n```\r\nname: Lint\r\n\r\non: [push, pull_request]\r\n\r\njobs:\r\n  lint:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v2\r\n      - uses: actions/setup-python@v2\r\n      - uses: psf/black@stable\r\n```\r\n\r\n_Originally posted by @Ayrx in https://github.com/psf/black/pull/1421#issuecomment-638182443_\r\n\r\nFixed by using `psf/black@master`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1572", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1572/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1572/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1572/events", "html_url": "https://github.com/psf/black/issues/1572", "id": 674699989, "node_id": "MDU6SXNzdWU2NzQ2OTk5ODk=", "number": 1572, "title": "File excluded even if explicitly passed via the command line when specified via --exclude ", "user": {"login": "ichard26", "id": 63936253, "node_id": "MDQ6VXNlcjYzOTM2MjUz", "avatar_url": "https://avatars3.githubusercontent.com/u/63936253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ichard26", "html_url": "https://github.com/ichard26", "followers_url": "https://api.github.com/users/ichard26/followers", "following_url": "https://api.github.com/users/ichard26/following{/other_user}", "gists_url": "https://api.github.com/users/ichard26/gists{/gist_id}", "starred_url": "https://api.github.com/users/ichard26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ichard26/subscriptions", "organizations_url": "https://api.github.com/users/ichard26/orgs", "repos_url": "https://api.github.com/users/ichard26/repos", "events_url": "https://api.github.com/users/ichard26/events{/privacy}", "received_events_url": "https://api.github.com/users/ichard26/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 1348567694, "node_id": "MDU6TGFiZWwxMzQ4NTY3Njk0", "url": "https://api.github.com/repos/psf/black/labels/command%20line", "name": "command line", "color": "f2b3db", "default": false, "description": "The Black CLI and configuration options"}], "state": "closed", "locked": false, "assignee": {"login": "ichard26", "id": 63936253, "node_id": "MDQ6VXNlcjYzOTM2MjUz", "avatar_url": "https://avatars3.githubusercontent.com/u/63936253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ichard26", "html_url": "https://github.com/ichard26", "followers_url": "https://api.github.com/users/ichard26/followers", "following_url": "https://api.github.com/users/ichard26/following{/other_user}", "gists_url": "https://api.github.com/users/ichard26/gists{/gist_id}", "starred_url": "https://api.github.com/users/ichard26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ichard26/subscriptions", "organizations_url": "https://api.github.com/users/ichard26/orgs", "repos_url": "https://api.github.com/users/ichard26/repos", "events_url": "https://api.github.com/users/ichard26/events{/privacy}", "received_events_url": "https://api.github.com/users/ichard26/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "ichard26", "id": 63936253, "node_id": "MDQ6VXNlcjYzOTM2MjUz", "avatar_url": "https://avatars3.githubusercontent.com/u/63936253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ichard26", "html_url": "https://github.com/ichard26", "followers_url": "https://api.github.com/users/ichard26/followers", "following_url": "https://api.github.com/users/ichard26/following{/other_user}", "gists_url": "https://api.github.com/users/ichard26/gists{/gist_id}", "starred_url": "https://api.github.com/users/ichard26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ichard26/subscriptions", "organizations_url": "https://api.github.com/users/ichard26/orgs", "repos_url": "https://api.github.com/users/ichard26/repos", "events_url": "https://api.github.com/users/ichard26/events{/privacy}", "received_events_url": "https://api.github.com/users/ichard26/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-08-07T01:52:28Z", "updated_at": "2020-08-13T03:07:20Z", "closed_at": "2020-08-13T03:07:20Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\n`--exclude` is supposed to only apply to the recursive discovery of files. Not files explicitly passed to Black through the command line. This is a regression since #1032 was merged.\r\n\r\n**To Reproduce** \r\n\r\n1. Create a directory for testing\r\n2. Create and activate a virtual enviroment\r\n3. Install Black on master using `pip install git+git://github.com/psf/black`\r\n4. Create two empty files:\r\n4.1. `pyproject.toml` so Black doesn't find a different configuration file up your directory structure\r\n4.2. `test.py` - this will be our test file\r\n5. Run `black -v --exclude=test.py test.py`\r\n6. Install Black 19.10b0 using `pip install black==19.10b0`\r\n7. Run `black -v --exclude=test.py test.py`\r\n8. Observe that on master the file was excluded and on stable the file was formatted.\r\n\r\n**Expected behavior**\r\n\r\nBlack formats `test.py` since it was explicitly passed through the command line and `--exclude` should not touch such files like it.  \r\n\r\n**Environment**\r\n\r\n- Version: master (b59a5246577346e6da2cc2802015f08524abf545) and stable (`19.10b0`)\r\n- OS and Python version: `Ubuntu 18.04.04 LTS` and `Python 3.8.1`\r\n\r\n**Does this bug also happen on master?**\r\n\r\n*Yes and also N/A - This is a regression*\r\n\r\n**Additional context**\r\n\r\nI haven't looked into this bug that much, but the problem seems to be related to how even files passed via the command line are given to the recursive `gen_python_files` function as single Path object lists in `get_sources`.\r\nhttps://github.com/psf/black/blob/b59a5246577346e6da2cc2802015f08524abf545/src/black/__init__.py#L605-L610", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1563", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1563/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1563/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1563/events", "html_url": "https://github.com/psf/black/issues/1563", "id": 666339467, "node_id": "MDU6SXNzdWU2NjYzMzk0Njc=", "number": 1563, "title": "Inconsistent slicing formatting", "user": {"login": "elanmart", "id": 10772830, "node_id": "MDQ6VXNlcjEwNzcyODMw", "avatar_url": "https://avatars3.githubusercontent.com/u/10772830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elanmart", "html_url": "https://github.com/elanmart", "followers_url": "https://api.github.com/users/elanmart/followers", "following_url": "https://api.github.com/users/elanmart/following{/other_user}", "gists_url": "https://api.github.com/users/elanmart/gists{/gist_id}", "starred_url": "https://api.github.com/users/elanmart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elanmart/subscriptions", "organizations_url": "https://api.github.com/users/elanmart/orgs", "repos_url": "https://api.github.com/users/elanmart/repos", "events_url": "https://api.github.com/users/elanmart/events{/privacy}", "received_events_url": "https://api.github.com/users/elanmart/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 869135448, "node_id": "MDU6TGFiZWw4NjkxMzU0NDg=", "url": "https://api.github.com/repos/psf/black/labels/design", "name": "design", "color": "0052cc", "default": false, "description": "What do we want Black to be?"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-27T14:28:36Z", "updated_at": "2020-07-28T11:33:10Z", "closed_at": "2020-07-28T00:35:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the style change** \r\nAlways add whitespace around the slicing operator.\r\n\r\n**Examples in the current _Black_ style** \r\n```python\r\na = x[i:]\r\nb = x[i:j]\r\nc = x[i&j]\r\nd = x[i+0:j+1]\r\n```\r\n\r\ntranslates to\r\n\r\n```python\r\na = x[i:]\r\nb = x[i:j]\r\nc = x[i & j]\r\nd = x[i + 0 : j + 1]\r\n```\r\n\r\n**Desired style** \r\n\r\nfor both `a` and `b` I would expect the whitespace to be added as well, following the logic from the black docs: `PEP 8 recommends to treat : in slices as a binary operator with the lowest priority, and to leave an equal amount of space on either side`. \r\n\r\n```python\r\na = x[i :]\r\nb = x[i : j]\r\nc = x[i & j]\r\nd = x[i + 0 : j + 1]\r\n```\r\n\r\n**Additional context** \r\n```\r\n$ black --version \r\nblack, version 19.10b0 \r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1562", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1562/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1562/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1562/events", "html_url": "https://github.com/psf/black/issues/1562", "id": 665857092, "node_id": "MDU6SXNzdWU2NjU4NTcwOTI=", "number": 1562, "title": "Failing to Format with an Ignored Matrix Matrix", "user": {"login": "Queuecumber", "id": 5865387, "node_id": "MDQ6VXNlcjU4NjUzODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/5865387?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Queuecumber", "html_url": "https://github.com/Queuecumber", "followers_url": "https://api.github.com/users/Queuecumber/followers", "following_url": "https://api.github.com/users/Queuecumber/following{/other_user}", "gists_url": "https://api.github.com/users/Queuecumber/gists{/gist_id}", "starred_url": "https://api.github.com/users/Queuecumber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Queuecumber/subscriptions", "organizations_url": "https://api.github.com/users/Queuecumber/orgs", "repos_url": "https://api.github.com/users/Queuecumber/repos", "events_url": "https://api.github.com/users/Queuecumber/events{/privacy}", "received_events_url": "https://api.github.com/users/Queuecumber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-26T20:46:06Z", "updated_at": "2020-07-26T21:29:11Z", "closed_at": "2020-07-26T21:29:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** \r\n\r\nI get `INTERNAL ERROR: Black produced code that is not equivalent to the source` when I try to format my code which contains a matrix that I have manually formatted and told black to ignore using `# fmt: off`, the full source code is:\r\n\r\n```python\r\nimport torch\r\nfrom torch import Tensor\r\n\r\ndef to_ycbcr(x: Tensor) -> Tensor:\r\n    r\"\"\"\r\n    Converts a Tensor from RGB color space to YCbCr color space\r\n\r\n    Parameters\r\n    ----------\r\n    x : Tensor\r\n        The input Tensor holding an RGB image in [0, 255]. Can be in :math:`(N, C, H ,W)` or :math:`(C, H, W)` format.\r\n\r\n    Returns\r\n    -------\r\n    Tensor\r\n        The YCbCr result in [0, 255] of the same shape as the input.\r\n\r\n    Note\r\n    -----\r\n    This function implements the \"full range\" conversion used by JPEG, e.g. it does **not** implement the ITU-R BT.601 standard which \r\n    many libraries (excluding PIL) use as the default definition of YCbCr. This conversion is given by:\r\n\r\n    .. math::\r\n        \\begin{aligned}\r\n        Y&=&0&+(0.299&\\cdot R)&+(0.587&\\cdot G)&+(0.114&\\cdot B) \\\\\r\n        C_{B}&=&128&-(0.168736&\\cdot R)&-(0.331264&\\cdot G)&+(0.5&\\cdot B) \\\\\r\n        C_{R}&=&128&+(0.5&\\cdot R)&-(0.418688&\\cdot G)&-(0.081312&\\cdot B)\r\n        \\end{aligned}\r\n    \r\n    \"\"\"\r\n    # fmt: off\r\n    ycbcr_from_rgb = torch.Tensor([\r\n        0.29900, 0.58700, 0.11400,\r\n        -0.168735892, -0.331264108, 0.50000,\r\n        0.50000, -0.418687589, -0.081312411\r\n    ]).view(3, 3).transpose(0, 1)\r\n\r\n    b = torch.Tensor([0, 128, 128]).view(1, 3, 1, 1)\r\n\r\n    if x.is_cuda:\r\n        ycbcr_from_rgb = ycbcr_from_rgb.cuda()\r\n        b = b.cuda()\r\n\r\n    x = torch.einsum('cv,bcxy->bvxy', [ycbcr_from_rgb, x])\r\n    x += b\r\n\r\n    return x.contiguous()\r\n\r\n\r\ndef to_rgb(x: Tensor) -> Tensor:\r\n    r\"\"\"\r\n    Converts a Tensor from YCbCr color space to RGB color space\r\n\r\n    Parameters\r\n    ----------\r\n    x : Tensor\r\n        The input Tensor holding a YCbCr image in [0, 255]. Can be in :math:`(N, C, H ,W)` or :math:`(C, H, W)` format.\r\n\r\n    Returns\r\n    -------\r\n    Tensor\r\n        The RGB result in [0, 255] of the same shape as the input.\r\n\r\n    Note\r\n    -----\r\n    This function expects the input to be \"full range\" conversion used by JPEG, e.g. it does **not** implement the ITU-R BT.601 standard which \r\n    many libraries (excluding PIL) use as the default definition of YCbCr. If the input came from this library or from PIL it should be fine.\r\n    The conversion is given by:\r\n\r\n    .. math::\r\n        \\begin{aligned}\r\n        R&=&Y&&&+1.402&\\cdot (C_{R}-128) \\\\\r\n        G&=&Y&-0.344136&\\cdot (C_{B}-128)&-0.714136&\\cdot (C_{R}-128 ) \\\\\r\n        B&=&Y&+1.772&\\cdot (C_{B}-128)&\r\n        \\end{aligned}\r\n    \r\n    \"\"\"\r\n    # fmt: off\r\n    rgb_from_ycbcr = torch.Tensor([\r\n        1, 0, 1.40200,\r\n        1, -0.344136286, -0.714136286,\r\n        1, 1.77200, 0\r\n    ]).view(3, 3).transpose(0, 1)\r\n\r\n    b = torch.Tensor([0, 128, 128]).view(1, 3, 1, 1)\r\n\r\n    if x.is_cuda:\r\n        rgb_from_ycbcr = rgb_from_ycbcr.cuda()\r\n        b = b.cuda()\r\n\r\n    x -= b\r\n    x = torch.einsum('cv,bcxy->bvxy', [rgb_from_ycbcr, x])\r\n\r\n    return x.contiguous()\r\n```\r\n\r\nThe two matrices `ycbcr_from_rgb` and `rgb_from_ycbcr` seem to be causing the problem, if I remove `# fmt: off` then it runs to completion but of course destroys the formatting on the matrices.\r\n\r\nWhen I do this on the black playground, which seems to still have an issue but without a visible error message (e.g. it just gives back incorrect code) I get a weird extra indentation on the second function, almost like black is interpreting it to be part of the first function. I think this can [link](https://black.now.sh/?version=master&state=_Td6WFoAAATm1rRGAgAhARYAAAB0L-Wj4AubA7NdAD2IimZxl1N_WlwxRhR7MSgFVbqeuSYtzQ5CQyBqD0Fqm1jLITsf1FZRbqbbMkT7jrrOrdBzkzLFIbdv6yuYHLu5zZ6PnlPoa-7GRYN3Gf1MRFGLbSFtPSAXXNeEvA35-mXR08jk6-3BOpAIoz8oAb_x04ax4d0KNGNvacBn1k9GqGxn70b-Ts17VV31sETs7ZdxeEAaWADtgt765hQ8aTlzT0pu4_sn9hd_4FnS6PVy77p_PF5qNPM7roG7iGBxTPKHjHze8r4pt0x2xkspzO72lbsvtBTEfuuO15D5Lgmds25YNr2Cb5n5UxiC9BpLst02OzcxPm-BPA4nzUBqWg_okXLeAhuB5LdBqw-vzjdHXX3gB6yvZ0hX9IDnoMcPtrMhzq26u8idvy2_QrPmcpoSahHpygyid2U7CVdMkVxP0GbkkfWB0rtiQv1vyADLF_Y8qHQiNUH9RY_zGk42ycWLWs0lfps2wT2kDrpBw5LQTvQHdkT1MIuT0ttK_-ywaQS5xHArXlPAo4zfgDaeBy64LJegYNm24qjd_SbHaS-3cymGJXAfQCc3VAAMwk28hbNiNz-M1w6-u73tuyTrPzqzTln7_eTil9VTUhP6AAwcOBNhtbahFef5QlnvcOYdKGD8yz1PXbTXCNXFnKHgOZ3wkrOWxUGT9HLz0cdIpAE9vuPOcLE73nkwtIihXVkZCiZSJnhMg0VxSQEZBJ1TCm4_lpIzFeOBS8A3eriq--IX13odCXdtGamkjls32vEwfBTd81lIxmhGbPy13ZGvl0_OcKolxnlVzPwJaFa77decZV6c_ziDiKTJkA-xhEWB7NPd-ZSGIWbwInBLMcEOllwxC-K6ec2RSK0mFPVHsyiGkdkqCJfHf9D898FJcGJOhM67S7Dy_Yt0dgAgl1MAA1JwnfADr0npAxAp98x6thmw7dOj5gxbGBmCW84KxTYgbh_8dXgUTgQa5-J-VF3K3I-rvAjc8pYsztIXwgJ90G9r23YM3Bqeyy7iStiNkZv0VlGqSRAA64w54o_jdqsp9gBSYxf5Qqt3esOK2-IeAscbk-QVECLrMFy_S1fj9YSejcVU8qtCTuByNBA6jVzSieGD3jLttNJBCZUUPT8ZesbNd1sEVm94uhJtidZvy5mJ0VbT7GBWEnHDSFBlcYVeMNNSvN2megm0L2nCciohqPUYx1z8RspRrX06daSe-gpBYHN1-u0FGlzkG-1Rs5GLn2wuwF7aY-NhsBplVWZHWckQJr_aAAAEvQmYFJpk3QABzwecFwAARU80f7HEZ_sCAAAAAARZWg==) may work.\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\n1. Take this file '...' See above\r\n2. Run _Black_ on it with these arguments '....' No combination of arguments resolves the problem\r\n3. See error\r\n\r\n**Expected behavior** Formats my code correctly\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: master \r\n- OS and Python version: Linux/Python 3.7.5\r\n\r\n**Does this bug also happen on master?** \r\n\r\nYes, verified on the playground and on my local machine.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1561", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1561/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1561/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1561/events", "html_url": "https://github.com/psf/black/issues/1561", "id": 664957871, "node_id": "MDU6SXNzdWU2NjQ5NTc4NzE=", "number": 1561, "title": "Cannot parse `def foo(can: bool) -> bool: return True`", "user": {"login": "SamuelMarks", "id": 807580, "node_id": "MDQ6VXNlcjgwNzU4MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/807580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SamuelMarks", "html_url": "https://github.com/SamuelMarks", "followers_url": "https://api.github.com/users/SamuelMarks/followers", "following_url": "https://api.github.com/users/SamuelMarks/following{/other_user}", "gists_url": "https://api.github.com/users/SamuelMarks/gists{/gist_id}", "starred_url": "https://api.github.com/users/SamuelMarks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SamuelMarks/subscriptions", "organizations_url": "https://api.github.com/users/SamuelMarks/orgs", "repos_url": "https://api.github.com/users/SamuelMarks/repos", "events_url": "https://api.github.com/users/SamuelMarks/events{/privacy}", "received_events_url": "https://api.github.com/users/SamuelMarks/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-24T06:54:14Z", "updated_at": "2020-07-24T13:02:13Z", "closed_at": "2020-07-24T13:02:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** A clear and concise description of what the bug is.\r\n\r\n> `black.InvalidInput`: Cannot parse: 1:70: `def is_choco(is_chocolate: str, verbose: bool=True, **extra_kwargs) ->`\r\n\r\n**To Reproduce**\r\n\r\n```python\r\nfrom ast import parse, Name, Load, Constant, Expr, FunctionDef, arguments, arg\r\n\r\nfrom astor import to_source\r\nfrom black import FileMode, format_str\r\n\r\nfunc_def_ast = FunctionDef(\r\n    args=arguments(\r\n        args=[\r\n            arg(\r\n                annotation=Name(\r\n                    ctx=Load(),\r\n                    id='str'\r\n                ),\r\n                arg='is_chocolate',\r\n                type_comment=None\r\n            ),\r\n            arg(\r\n                annotation=Name(\r\n                    ctx=Load(),\r\n                    id='bool'\r\n                ),\r\n                arg='verbose',\r\n                type_comment=None\r\n            )\r\n        ],\r\n        defaults=[Constant(kind=None,\r\n                           value=True)],\r\n        kw_defaults=[],\r\n        kwarg=arg(annotation=None,\r\n                  arg='extra_kwargs',\r\n                  type_comment=None),\r\n        kwonlyargs=[],\r\n        posonlyargs=[],\r\n        vararg=None\r\n    ),\r\n    body=[Expr(value=Constant(\r\n        kind=None,\r\n        value='Crazy hungry function'))\r\n    ],\r\n    decorator_list=[],\r\n    name='is_choco',\r\n    returns=parse('Union[bool, str]'),\r\n    type_comment=None\r\n)\r\n\r\nsrc = to_source(func_def_ast)\r\nprint(src)\r\nprint(format_str(src, mode=FileMode(\r\n    target_versions=set(),\r\n    line_length=119,\r\n    is_pyi=False,\r\n    string_normalization=False,\r\n)))\r\n```\r\n\r\n**Expected behavior**\r\nShould format the output.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: 19.10b0\r\n- OS and Python version: Python 3.8.4\r\n\r\n---\r\n\r\nNot sure if this issue is because of `ast`, `astor`, or `black`, or an issue with how I'm constructing the function.\r\n\r\nWhat do you think?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1560", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1560/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1560/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1560/events", "html_url": "https://github.com/psf/black/issues/1560", "id": 664417419, "node_id": "MDU6SXNzdWU2NjQ0MTc0MTk=", "number": 1560, "title": "Doesn't reformat long line comments", "user": {"login": "augustjanse", "id": 6920177, "node_id": "MDQ6VXNlcjY5MjAxNzc=", "avatar_url": "https://avatars0.githubusercontent.com/u/6920177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/augustjanse", "html_url": "https://github.com/augustjanse", "followers_url": "https://api.github.com/users/augustjanse/followers", "following_url": "https://api.github.com/users/augustjanse/following{/other_user}", "gists_url": "https://api.github.com/users/augustjanse/gists{/gist_id}", "starred_url": "https://api.github.com/users/augustjanse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/augustjanse/subscriptions", "organizations_url": "https://api.github.com/users/augustjanse/orgs", "repos_url": "https://api.github.com/users/augustjanse/repos", "events_url": "https://api.github.com/users/augustjanse/events{/privacy}", "received_events_url": "https://api.github.com/users/augustjanse/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-23T12:02:17Z", "updated_at": "2020-07-23T12:13:05Z", "closed_at": "2020-07-23T12:13:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen run on a file with a very long line comment, Black does not reformat it. I think this breaks PEP 8 conformance:\r\n>Some teams strongly prefer a longer line length. For code maintained exclusively or primarily by a team that can reach agreement on this issue, it is okay to increase the line length limit up to 99 characters, provided that comments and docstrings are still wrapped at 72 characters.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Create file `black.py`:\r\n```\r\n# This is a very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very long comment\r\ndef nothing():\r\n    print(\"test\")\r\n\r\n\r\nnothing()\r\n\r\n```\r\n\r\n2. Run `black black.py`\r\n3. See *no* error:\r\n```\r\nAll done! \u2728 \ud83c\udf70 \u2728\r\n1 file left unchanged.\r\n```\r\n\r\n**Expected behavior**\r\nThe line should be reformatted into somehow following PEP 8 max line length.\r\n\r\n**Environment:**\r\n\r\n- Version: black, version 19.10b0\r\n- OS and Python version: Ubuntu 20.04 LTS, Python 3.8.2\r\n\r\n**Does this bug also happen on master?**\r\n\r\nYes, confirmed online.\r\n\r\n**Additional context** Add any other context about the problem here.\r\n```\r\naugust@august-ThinkPad-T420:~$ black --version\r\nblack, version 19.10b0\r\naugust@august-ThinkPad-T420:~$ cat black.py\r\n# This is a very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very long comment\r\ndef nothing():\r\n    print(\"test\")\r\n\r\n\r\nnothing()\r\naugust@august-ThinkPad-T420:~$ black black.py \r\nAll done! \u2728 \ud83c\udf70 \u2728\r\n1 file left unchanged.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1556", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1556/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1556/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1556/events", "html_url": "https://github.com/psf/black/issues/1556", "id": 659796609, "node_id": "MDU6SXNzdWU2NTk3OTY2MDk=", "number": 1556, "title": "Add isort profiles to compatible configs", "user": {"login": "mcsitter", "id": 48606431, "node_id": "MDQ6VXNlcjQ4NjA2NDMx", "avatar_url": "https://avatars3.githubusercontent.com/u/48606431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcsitter", "html_url": "https://github.com/mcsitter", "followers_url": "https://api.github.com/users/mcsitter/followers", "following_url": "https://api.github.com/users/mcsitter/following{/other_user}", "gists_url": "https://api.github.com/users/mcsitter/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcsitter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcsitter/subscriptions", "organizations_url": "https://api.github.com/users/mcsitter/orgs", "repos_url": "https://api.github.com/users/mcsitter/repos", "events_url": "https://api.github.com/users/mcsitter/events{/privacy}", "received_events_url": "https://api.github.com/users/mcsitter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-18T01:20:39Z", "updated_at": "2020-07-22T00:29:39Z", "closed_at": "2020-07-22T00:29:39Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As we all know, black enforces certain standards. This can collide with other tools like [isort](https://github.com/timothycrosley/isort).\r\nIn the [compatible configurations](https://github.com/psf/black/blob/master/docs/compatible_configs.md) section the necessary changes are already described. This is cumbersome to implement thought.\r\n\r\nLuckily isort supports [profiles](https://timothycrosley.github.io/isort/docs/configuration/profiles/) in the config, which works perfectly. a simple `profile=black` in the settings file and it is applied. It would be great to add this notice to the docs and possibly also update the examples accordingly.\r\n\r\nI am happy to create a PR if so desired!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1554", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1554/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1554/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1554/events", "html_url": "https://github.com/psf/black/issues/1554", "id": 658323276, "node_id": "MDU6SXNzdWU2NTgzMjMyNzY=", "number": 1554, "title": "Changing the library name", "user": {"login": "guillaume-miara", "id": 7605424, "node_id": "MDQ6VXNlcjc2MDU0MjQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/7605424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guillaume-miara", "html_url": "https://github.com/guillaume-miara", "followers_url": "https://api.github.com/users/guillaume-miara/followers", "following_url": "https://api.github.com/users/guillaume-miara/following{/other_user}", "gists_url": "https://api.github.com/users/guillaume-miara/gists{/gist_id}", "starred_url": "https://api.github.com/users/guillaume-miara/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guillaume-miara/subscriptions", "organizations_url": "https://api.github.com/users/guillaume-miara/orgs", "repos_url": "https://api.github.com/users/guillaume-miara/repos", "events_url": "https://api.github.com/users/guillaume-miara/events{/privacy}", "received_events_url": "https://api.github.com/users/guillaume-miara/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-16T15:49:00Z", "updated_at": "2020-07-17T08:22:30Z", "closed_at": "2020-07-17T08:14:22Z", "author_association": "NONE", "active_lock_reason": "resolved", "body": "As a foreword, I would like to start by asking people who will answer this to make an effort to respect every opinion and that hateful comments don't really bring anything to a discussion. \r\n\r\nGit is renaming the default branch from `master` to `main`\r\nThere is a general movement towards removing some words in the software engineering world because of the connotations they carry from other contexts. \r\n\r\nThis has an impact. People in my team are reluctant to the idea of using `black` formatter for this reason. \r\n\r\nI personally disagree with that decision (I am biased because I like `black` :) ), but completely respect that opinion.\r\n\r\nGiven that context, I am wondering if there has been any discussions around potentially changing the name of the library to something less controversial?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1549", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1549/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1549/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1549/events", "html_url": "https://github.com/psf/black/issues/1549", "id": 657329621, "node_id": "MDU6SXNzdWU2NTczMjk2MjE=", "number": 1549, "title": "Configfile not found when reading from stdin on Windows (due to bug in pathlib)", "user": {"login": "dhaug-op", "id": 56020126, "node_id": "MDQ6VXNlcjU2MDIwMTI2", "avatar_url": "https://avatars2.githubusercontent.com/u/56020126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhaug-op", "html_url": "https://github.com/dhaug-op", "followers_url": "https://api.github.com/users/dhaug-op/followers", "following_url": "https://api.github.com/users/dhaug-op/following{/other_user}", "gists_url": "https://api.github.com/users/dhaug-op/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhaug-op/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhaug-op/subscriptions", "organizations_url": "https://api.github.com/users/dhaug-op/orgs", "repos_url": "https://api.github.com/users/dhaug-op/repos", "events_url": "https://api.github.com/users/dhaug-op/events{/privacy}", "received_events_url": "https://api.github.com/users/dhaug-op/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-15T12:57:56Z", "updated_at": "2020-07-15T15:06:50Z", "closed_at": "2020-07-15T15:06:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When reading https://github.com/psf/black#where-black-looks-for-the-file, the following commands should find the same ``pyproject.toml`` file:\r\n* ``black --check -v test.py``\r\n* ``type test.py | black --check -v -``\r\n\r\nOn Linux this seems the case (with ``type`` replaced by ``cat``), but on Windows only the first command finds the ``pyproject.toml`` file if it's in a parent folder. When I discovered this, my journey began. Please find any details about the underlying issue below.\r\n\r\n**Steps to reproduce the behavior:**\r\n\r\n1. Work on Windows\r\n1. Create a folder with a ``pyproject.toml`` file\r\n1. Create a subfolder and a file ``test.py`` in this subfolder\r\n1. ``cd`` into the subfolder\r\n2. Run _Black_ on it by using the both commands given in the introduction\r\n3. See the different output:\r\n    * ``black --check -v test.py`` says ``Using configuration from <TESTFOLDER>\\pyproject.toml.``\r\n    * ``type test.py | black --check -v -`` does not print any information about a config file being loaded\r\n\r\n**Expected behavior**: Both commands should find and use the same configuration file, as the [docs](https://github.com/psf/black#where-black-looks-for-the-file) clearly describe, the current working directory is used as base for searching in case of reading from ``stdin``.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: 19.10b0 (and master)\r\n- OS and Python version: Windows 10, Python 3.8.2\r\n\r\n**Does this bug also happen on master?**: yes\r\n\r\n**Additional context**\r\n\r\nI researched the issue and found it being caused by a bug in Pythons ``pathlib`` library. As https://bugs.python.org/issue38671 is know for over 6 months and not resolved yet, *black* might want wo circumvent the issue by slightly changing the code.\r\n\r\nThe bug described here is caused as follows:\r\n* https://github.com/psf/black/blob/8d036ceb3f0a0e0b52276e8d4afe840d1fcad11b/src/black/__init__.py#L5837 calls ``resolve()`` on all source paths\r\n* as described in https://bugs.python.org/issue38671, ``resolve()`` actually does not make the path absolute (as stated in https://docs.python.org/3/library/pathlib.html#pathlib.Path.resolve) on Windows, if it does not exist. So ``Path('-').resolve()`` (the ``-`` coming from the input as symbol for reading from ``stdin``) gets ``WindowsPath('-')`` (as opposed to Linux, where it gets ``PosixPath('<CWD>/-')``).\r\n* ``WindowsPath('-').parents`` just yields ``WindowsPath('.')``, so the ``common_base`` calculated in the following lines is just ``WindowsPath('.')`` with empty ``common_base.parents``.\r\n\r\nPossible fixes:\r\n* wait for Python to fix the bug in ``pathlib``\r\n* replace `Path(src).resolve()` in https://github.com/psf/black/blob/8d036ceb3f0a0e0b52276e8d4afe840d1fcad11b/src/black/__init__.py#L5837 by ``Path(Path.cwd() / src).resolve()``. This should make sure, the path is really absolute under all circumstances", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1548", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1548/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1548/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1548/events", "html_url": "https://github.com/psf/black/issues/1548", "id": 656886743, "node_id": "MDU6SXNzdWU2NTY4ODY3NDM=", "number": 1548, "title": "Issue with blank lines and E301 / E302", "user": {"login": "Holt59", "id": 2393288, "node_id": "MDQ6VXNlcjIzOTMyODg=", "avatar_url": "https://avatars0.githubusercontent.com/u/2393288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Holt59", "html_url": "https://github.com/Holt59", "followers_url": "https://api.github.com/users/Holt59/followers", "following_url": "https://api.github.com/users/Holt59/following{/other_user}", "gists_url": "https://api.github.com/users/Holt59/gists{/gist_id}", "starred_url": "https://api.github.com/users/Holt59/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Holt59/subscriptions", "organizations_url": "https://api.github.com/users/Holt59/orgs", "repos_url": "https://api.github.com/users/Holt59/repos", "events_url": "https://api.github.com/users/Holt59/events{/privacy}", "received_events_url": "https://api.github.com/users/Holt59/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-14T20:42:56Z", "updated_at": "2020-07-22T11:27:45Z", "closed_at": "2020-07-22T11:27:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** When I run `black` on my stubs, it does not add empty blank lines after classes/functions, making `flake8` throwing tons of E301/E302.\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\nThis can be reproduced by running black on this file https://github.com/ModOrganizer2/pystubs-generation/blob/master/stubs/2.3.0a12/mobase.pyi\r\n\r\n**Expected behavior** A clear and concise description of what you expected to happen.\r\n\r\n**Environment (please complete the following information):** I would expect two blank lines after classes and one blank line after methods. Even if I add these manually, `black` always remove them.\r\n\r\n- Version: 19.10b0\r\n- OS and Python version: Windows 10, Python 3.8.2\r\n\r\n**Does this bug also happen on master?** It does not happen with the online master at https://black.now.sh but it happens with the command line black `19.10b1.dev128+g8d036ce`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1546", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1546/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1546/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1546/events", "html_url": "https://github.com/psf/black/issues/1546", "id": 655327795, "node_id": "MDU6SXNzdWU2NTUzMjc3OTU=", "number": 1546, "title": "black fails on type-annotated tuple assignment", "user": {"login": "williamflynt", "id": 28306436, "node_id": "MDQ6VXNlcjI4MzA2NDM2", "avatar_url": "https://avatars3.githubusercontent.com/u/28306436?v=4", "gravatar_id": "", "url": "https://api.github.com/users/williamflynt", "html_url": "https://github.com/williamflynt", "followers_url": "https://api.github.com/users/williamflynt/followers", "following_url": "https://api.github.com/users/williamflynt/following{/other_user}", "gists_url": "https://api.github.com/users/williamflynt/gists{/gist_id}", "starred_url": "https://api.github.com/users/williamflynt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/williamflynt/subscriptions", "organizations_url": "https://api.github.com/users/williamflynt/orgs", "repos_url": "https://api.github.com/users/williamflynt/repos", "events_url": "https://api.github.com/users/williamflynt/events{/privacy}", "received_events_url": "https://api.github.com/users/williamflynt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-12T04:17:42Z", "updated_at": "2020-07-20T00:12:55Z", "closed_at": "2020-07-20T00:12:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** black fails to reformat files containing a line like `x: tuple = a, b`\r\n\r\n**To Reproduce** Here's a test script.\r\n\r\n```\r\nfrom typing import Tuple\r\n\r\n\r\na = 1\r\nb = 2\r\n\r\nx = a, b  # works fine!\r\nx = a, b + 1  # also works fine!\r\n# x: Tuple = a, b + 1  # fails\r\n# x: Tuple = a, b  # also fails\r\nx: tuple = a, b  # fails\r\n```\r\n\r\n1. Take this file '...'\r\n2. Run _Black_ on it with these arguments (optional): `--target-version py38`\r\n3. See error `exit code 123`\r\n\r\n```\r\nerror: cannot format tmp.py: Cannot parse: 11:12: x: tuple = a, b\r\nOh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\r\n1 file failed to reformat.\r\n```\r\n\r\n**Expected behavior** black reformats\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: [e.g. master] `master` direct from git (`black, version 19.10b0`)\r\n- OS and Python version: [e.g. Linux/Python 3.7.4rc1]: `Ubuntu 19.10/Python 3.8.0`\r\n\r\n**Does this bug also happen on master?** Yes - local and hosted demo.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1541", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1541/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1541/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1541/events", "html_url": "https://github.com/psf/black/issues/1541", "id": 654842665, "node_id": "MDU6SXNzdWU2NTQ4NDI2NjU=", "number": 1541, "title": "Slice operator with dot adds space after colon", "user": {"login": "adaamz", "id": 4347332, "node_id": "MDQ6VXNlcjQzNDczMzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/4347332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adaamz", "html_url": "https://github.com/adaamz", "followers_url": "https://api.github.com/users/adaamz/followers", "following_url": "https://api.github.com/users/adaamz/following{/other_user}", "gists_url": "https://api.github.com/users/adaamz/gists{/gist_id}", "starred_url": "https://api.github.com/users/adaamz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adaamz/subscriptions", "organizations_url": "https://api.github.com/users/adaamz/orgs", "repos_url": "https://api.github.com/users/adaamz/repos", "events_url": "https://api.github.com/users/adaamz/events{/privacy}", "received_events_url": "https://api.github.com/users/adaamz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 869135448, "node_id": "MDU6TGFiZWw4NjkxMzU0NDg=", "url": "https://api.github.com/repos/psf/black/labels/design", "name": "design", "color": "0052cc", "default": false, "description": "What do we want Black to be?"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-10T15:00:41Z", "updated_at": "2020-07-12T00:03:17Z", "closed_at": "2020-07-12T00:03:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the style change**\r\nWhen dot `.` is used in slice operator, Black adds space after that eg. `[: xxx.xxx]`.\r\n\r\n**Examples in the current _Black_ style** Think of some short code snippets that show\r\nhow the current _Black_ style is not great:\r\n\r\n```python\r\nclass C:\r\n    def asdfg():\r\n        a = a[: self.a]\r\n```\r\n\r\n**Desired style** How do you think _Black_ should format the above snippets:\r\n\r\n```python\r\nclass C:\r\n    def asdfg():\r\n        a = a[:self.a]\r\n```\r\n\r\n**Additional context**\r\nhttps://black.now.sh/?version=stable&state=_Td6WFoAAATm1rRGAgAhARYAAAB0L-Wj4AByAFddAD2IimZxl1N_WlXnON2nzNJyA7rxEz3ITq0VF6LAEbb8KjoOA0E32jq8-3vOetMZNY-7SWYYSAFFbljWM19Vl4J5db4Ol-NrQHqNbH2nFIppRa8bOf3-TQAAd-N_ha7ANnoAAXNzmL-Y7R-2830BAAAAAARZWg==", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1538", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1538/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1538/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1538/events", "html_url": "https://github.com/psf/black/issues/1538", "id": 652307145, "node_id": "MDU6SXNzdWU2NTIzMDcxNDU=", "number": 1538, "title": "Add a BLACKED badge to repos that use black formatter", "user": {"login": "trallnag", "id": 24834206, "node_id": "MDQ6VXNlcjI0ODM0MjA2", "avatar_url": "https://avatars3.githubusercontent.com/u/24834206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trallnag", "html_url": "https://github.com/trallnag", "followers_url": "https://api.github.com/users/trallnag/followers", "following_url": "https://api.github.com/users/trallnag/following{/other_user}", "gists_url": "https://api.github.com/users/trallnag/gists{/gist_id}", "starred_url": "https://api.github.com/users/trallnag/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trallnag/subscriptions", "organizations_url": "https://api.github.com/users/trallnag/orgs", "repos_url": "https://api.github.com/users/trallnag/repos", "events_url": "https://api.github.com/users/trallnag/events{/privacy}", "received_events_url": "https://api.github.com/users/trallnag/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-07T13:06:37Z", "updated_at": "2020-07-09T11:01:47Z", "closed_at": "2020-07-09T11:01:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to show very prominently that a repository is using the uncompromising **black** formatter, so I thought of a more confident badge design. It would also help more people to get to know **black**.\r\n\r\nMaybe something like this? (Done with the tool Green Is My Pepper)\r\n\r\n![Annotation 2020-07-07 150350](https://user-images.githubusercontent.com/24834206/86785736-59da5e80-c063-11ea-8d27-883be1d70a2e.png)\r\n\r\nFeedback is encouraged", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1536", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1536/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1536/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1536/events", "html_url": "https://github.com/psf/black/issues/1536", "id": 651950220, "node_id": "MDU6SXNzdWU2NTE5NTAyMjA=", "number": 1536, "title": "please address these concerns", "user": {"login": "gabroo", "id": 6046841, "node_id": "MDQ6VXNlcjYwNDY4NDE=", "avatar_url": "https://avatars2.githubusercontent.com/u/6046841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gabroo", "html_url": "https://github.com/gabroo", "followers_url": "https://api.github.com/users/gabroo/followers", "following_url": "https://api.github.com/users/gabroo/following{/other_user}", "gists_url": "https://api.github.com/users/gabroo/gists{/gist_id}", "starred_url": "https://api.github.com/users/gabroo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gabroo/subscriptions", "organizations_url": "https://api.github.com/users/gabroo/orgs", "repos_url": "https://api.github.com/users/gabroo/repos", "events_url": "https://api.github.com/users/gabroo/events{/privacy}", "received_events_url": "https://api.github.com/users/gabroo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-07T02:48:53Z", "updated_at": "2020-07-07T03:24:54Z", "closed_at": "2020-07-07T03:24:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like @ambv to address the accessibility concerns asked for in this screenshot. I am not making any claims about the specific single quotes issue at hand but my claim is that you were very disrespectful for not even acknowledging @ofek 's statement.\r\n\r\nThis behavior does not align with principles outlined in the Python [code of conduct](https://www.python.org/psf/conduct), to which your own [code of conduct](https://github.com/psf/black/blob/master/.github/CODE_OF_CONDUCT.md) links.\r\n\r\n@ofek I am sorry that your voice was not heard.\r\n\r\n<img width=\"802\" alt=\"Screen Shot 2020-07-06 at 7 33 54 PM\" src=\"https://user-images.githubusercontent.com/6046841/86693835-e3385500-bfbf-11ea-84e6-357d8677e5b5.png\">", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1533", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1533/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1533/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1533/events", "html_url": "https://github.com/psf/black/issues/1533", "id": 651852453, "node_id": "MDU6SXNzdWU2NTE4NTI0NTM=", "number": 1533, "title": "Help view for \"--config\" argument is a little unclear ", "user": {"login": "mooksel", "id": 15916529, "node_id": "MDQ6VXNlcjE1OTE2NTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/15916529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mooksel", "html_url": "https://github.com/mooksel", "followers_url": "https://api.github.com/users/mooksel/followers", "following_url": "https://api.github.com/users/mooksel/following{/other_user}", "gists_url": "https://api.github.com/users/mooksel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mooksel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mooksel/subscriptions", "organizations_url": "https://api.github.com/users/mooksel/orgs", "repos_url": "https://api.github.com/users/mooksel/repos", "events_url": "https://api.github.com/users/mooksel/events{/privacy}", "received_events_url": "https://api.github.com/users/mooksel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-06T22:17:53Z", "updated_at": "2020-07-08T15:51:19Z", "closed_at": "2020-07-08T15:51:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `help` view for `--config` argument is a little unclear.\r\nFor now it looks like:\r\n```\r\n...\r\n--config FILE                   Read configuration from PATH.\r\n...\r\n```\r\nIt says that we pass `FILE` as argument value, but the configuration will be read from the `PATH`. \r\n\r\nProposal: use `FILE` instead of `PATH` in `help` view fro this argument.\r\nIt will looks like:\r\n```\r\n...\r\n--config FILE                   Read configuration from FILE.\r\n...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1530", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1530/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1530/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1530/events", "html_url": "https://github.com/psf/black/issues/1530", "id": 651067602, "node_id": "MDU6SXNzdWU2NTEwNjc2MDI=", "number": 1530, "title": "# fmt: on does not reactivate in pytest test", "user": {"login": "johnthagen", "id": 10340167, "node_id": "MDQ6VXNlcjEwMzQwMTY3", "avatar_url": "https://avatars1.githubusercontent.com/u/10340167?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnthagen", "html_url": "https://github.com/johnthagen", "followers_url": "https://api.github.com/users/johnthagen/followers", "following_url": "https://api.github.com/users/johnthagen/following{/other_user}", "gists_url": "https://api.github.com/users/johnthagen/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnthagen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnthagen/subscriptions", "organizations_url": "https://api.github.com/users/johnthagen/orgs", "repos_url": "https://api.github.com/users/johnthagen/repos", "events_url": "https://api.github.com/users/johnthagen/events{/privacy}", "received_events_url": "https://api.github.com/users/johnthagen/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-05T13:11:46Z", "updated_at": "2020-07-31T16:26:52Z", "closed_at": "2020-07-31T16:26:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\n`# fmt: on` doesn't turn back on for `pytest` test.\r\n\r\n**To Reproduce**\r\n1. Take this file\r\n\r\n```py\r\nimport pytest\r\n\r\n# fmt: off\r\n@pytest.mark.parametrize('n,expected', [\r\n    (1, 1),\r\n    (2, 2),\r\n    (3, 6),\r\n    (10, 3628800),\r\n])\r\n# fmt: on\r\ndef test_factorial(n: int, expected: int) -> None:\r\n    # Too many spaces after assert. Expecting black to format.\r\n    assert   n == expected\r\n```\r\n\r\n2. Run _Black_ on it with these arguments\r\n\r\n```\r\n[tool.black]\r\nline-length = 99\r\ntarget-version = [\"py36\", \"py37\", \"py38\"]\r\n```\r\n\r\n```bash\r\n(venv) $ black .\r\n```\r\n\r\n3. See error\r\n\r\n**Expected behavior**\r\n\r\n```py\r\nimport pytest\r\n\r\n# fmt: off\r\n@pytest.mark.parametrize('n,expected', [\r\n    (1, 1),\r\n    (2, 2),\r\n    (3, 6),\r\n    (10, 3628800),\r\n])\r\n# fmt: on\r\ndef test_factorial(n: int, expected: int) -> None:\r\n    assert n == expected\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version:  19.10b0\r\n- OS and Python version: Windows 10/3.8.3\r\n\r\n**Does this bug also happen on master?**\r\n\r\nNo. This may already be fixed in master. The online formatter ran correctly. Please feel free to close if this is a duplicate.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1528", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1528/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1528/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1528/events", "html_url": "https://github.com/psf/black/issues/1528", "id": 649000127, "node_id": "MDU6SXNzdWU2NDkwMDAxMjc=", "number": 1528, "title": "Long string remains unchanged, can black make them in multine representation [help]", "user": {"login": "avatar-lavventura", "id": 18537398, "node_id": "MDQ6VXNlcjE4NTM3Mzk4", "avatar_url": "https://avatars2.githubusercontent.com/u/18537398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/avatar-lavventura", "html_url": "https://github.com/avatar-lavventura", "followers_url": "https://api.github.com/users/avatar-lavventura/followers", "following_url": "https://api.github.com/users/avatar-lavventura/following{/other_user}", "gists_url": "https://api.github.com/users/avatar-lavventura/gists{/gist_id}", "starred_url": "https://api.github.com/users/avatar-lavventura/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/avatar-lavventura/subscriptions", "organizations_url": "https://api.github.com/users/avatar-lavventura/orgs", "repos_url": "https://api.github.com/users/avatar-lavventura/repos", "events_url": "https://api.github.com/users/avatar-lavventura/events{/privacy}", "received_events_url": "https://api.github.com/users/avatar-lavventura/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-07-01T13:52:07Z", "updated_at": "2020-07-02T00:56:01Z", "closed_at": "2020-07-02T00:56:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Before:\r\n```\r\nvalue = \"aldkfdskdksfjdskfj dslkfj sdkl dklsfj dsklfj sdklfjdsklfjdskl fjdskl jdsklf jdsklfj dsklfj dsklfj dsklfj dsklfj dsklfj dsklfj dkl\"\r\n```\r\nAfter running `black --line-length 80 file.py`: (long string remains unchanged)\r\n\r\n```\r\nvalue = \"aldkfdskdksfjdskfj dslkfj sdkl dklsfj dsklfj sdklfjdsklfjdskl fjdskl jdsklf jdsklfj dsklfj dsklfj dsklfj dsklfj dsklfj dsklfj dkl\"\r\n```\r\n\r\n----\r\n\r\n\r\n**Expected behavior (something close to this):**\r\n\r\n```\r\nvalue = \"\"\"aldkfdskdksfjdskfj dslkfj sdkl dklsfj dsklfj\r\n        sdklfjdsklfjdskl fjdskl jdsklf jdsklfj dsklfj\r\n        dsklfj dsklfj dsklfj dsklfj dsklfj dkl\"\"\"\r\n```\r\n\r\nor\r\n\r\n```\r\nvalue = \"aldkfdskdksfjdskfj dslkfj sdkl dklsfj dsklfj\" \\\r\n        \"sdklfjdsklfjdskl fjdskl jdsklf jdsklfj dsklfj\"\t\\\r\n        \"dsklfj dsklfj dsklfj dsklfj dsklfj dkl\"\r\n```\r\n\r\n[Q] Long string remains unchanged, can `python-black` convert them into multine?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1523", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1523/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1523/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1523/events", "html_url": "https://github.com/psf/black/issues/1523", "id": 646845170, "node_id": "MDU6SXNzdWU2NDY4NDUxNzA=", "number": 1523, "title": "Odd Formatting Bug", "user": {"login": "e-xe", "id": 65941041, "node_id": "MDQ6VXNlcjY1OTQxMDQx", "avatar_url": "https://avatars0.githubusercontent.com/u/65941041?v=4", "gravatar_id": "", "url": "https://api.github.com/users/e-xe", "html_url": "https://github.com/e-xe", "followers_url": "https://api.github.com/users/e-xe/followers", "following_url": "https://api.github.com/users/e-xe/following{/other_user}", "gists_url": "https://api.github.com/users/e-xe/gists{/gist_id}", "starred_url": "https://api.github.com/users/e-xe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/e-xe/subscriptions", "organizations_url": "https://api.github.com/users/e-xe/orgs", "repos_url": "https://api.github.com/users/e-xe/repos", "events_url": "https://api.github.com/users/e-xe/events{/privacy}", "received_events_url": "https://api.github.com/users/e-xe/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 867432794, "node_id": "MDU6TGFiZWw4Njc0MzI3OTQ=", "url": "https://api.github.com/repos/psf/black/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-28T05:30:07Z", "updated_at": "2020-08-04T00:51:05Z", "closed_at": "2020-07-28T19:18:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "**To Reproduce** Steps to reproduce the behavior:\r\nWrite this:\r\n```py\r\nposts = [\r\n    {\r\n        \"author\": \"CoreyMS\",\r\n        \"title\": \"Blog Post 1\",\r\n        \"content\": \"First post content\",\r\n        \"date_posted\": datetime.datetime.utcnow().strftime(\"%A, %x\")\r\n    },\r\n    {\r\n        \"author\": \"CoreyMS\",\r\n        \"title\": \"Blog Post 1\",\r\n        \"content\": \"First post content\",\r\n        \"date_posted\": datetime.datetime.utcnow() + datetime.timedelta(3).strftime(\"%A, %x\"),\r\n    }\r\n]\r\n```\r\n\r\nPress `ctrl + s` to save on vscode with black as the formatter (It does not matter if you do this or run black normally with `black .`\r\nThis happens:\r\n```py\r\nposts = [\r\n    {\"author\": \"CoreyMS\", \"title\": \"Blog Post 1\", \"content\": \"First post content\", \"date_posted\": datetime.datetime.utcnow().strftime(\"%A, %x\")},\r\n    {\r\n        \"author\": \"CoreyMS\",\r\n        \"title\": \"Blog Post 1\",\r\n        \"content\": \"First post content\",\r\n        \"date_posted\": datetime.datetime.utcnow() + datetime.timedelta(3).strftime(\"%A, %x\"),\r\n    },\r\n]\r\n```\r\n\r\n**Expected behavior:**\r\nIt keeps that style instead of the (no-offence) ugly formatting\r\n\r\n**Environment:**\r\n- Version: Master\r\n- OS and Python version: Kubuntu 20.04 LTS focal fossa (kde 5) with python 3.8.2\r\n\r\n**Does this bug also happen on master?**\r\nIt does\r\n\r\n**Additional context:**\r\nAlso with this, black is colliding with flake8. Black makes a code that looks like this:\r\n```py\r\nexample = {'one': 'first', 'two': 'second'}\r\n```\r\nTo this:\r\n```py\r\nexample = {'one': 'first', 'two': 'second',}\r\n```\r\n(It adds the extra `,` at the end without a space)\r\nThis raises `missing whitespace after ','flake8(E231)`\r\nIs there a configuration option to either add a space or just not have a trailing comma at the end? I tried to look up in the docs for such configuration option but failed to find it :disappointed: \r\nAdditionally, I cannot see any configuration options in the docs that I can add in the configuration file", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1519", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1519/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1519/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1519/events", "html_url": "https://github.com/psf/black/issues/1519", "id": 644489515, "node_id": "MDU6SXNzdWU2NDQ0ODk1MTU=", "number": 1519, "title": "Specifying target-version in pyproject.toml fails", "user": {"login": "stub42", "id": 2928805, "node_id": "MDQ6VXNlcjI5Mjg4MDU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2928805?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stub42", "html_url": "https://github.com/stub42", "followers_url": "https://api.github.com/users/stub42/followers", "following_url": "https://api.github.com/users/stub42/following{/other_user}", "gists_url": "https://api.github.com/users/stub42/gists{/gist_id}", "starred_url": "https://api.github.com/users/stub42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stub42/subscriptions", "organizations_url": "https://api.github.com/users/stub42/orgs", "repos_url": "https://api.github.com/users/stub42/repos", "events_url": "https://api.github.com/users/stub42/events{/privacy}", "received_events_url": "https://api.github.com/users/stub42/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-24T10:06:05Z", "updated_at": "2020-06-24T10:10:54Z", "closed_at": "2020-06-24T10:10:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nSpecifying target-version in pyproject.toml causes black to fail with an error, indicating black chose to only use the first character of the string.\r\n\r\n**To Reproduce**\r\n\r\nCreate a `pyproject.toml` file in an empty directory containing just the following:\r\n\r\n```toml\r\n[tool.black]\r\ntarget-version = \"py34\"\r\n```\r\n\r\nRun black in that directory to see it fail:\r\n\r\n```\r\n$ black .\r\nUsage: black [OPTIONS] [SRC]...\r\nTry 'black -h' for help.\r\n\r\nError: Invalid value for '-t' / '--target-version': invalid choice: p. (choose from py27, py33, py34, py35, py36, py37, py38)\r\n```\r\n\r\n**Environment**\r\n\r\n- Version: 19.10b0\r\n- OS and Python version: Linux/Python 3.8.2\r\n\r\n**Does this bug also happen on master?**\r\n\r\n~~Yes~~ No\r\n\r\n**Additional context**\r\n\r\nOther config items I've tried work fine in pyproject.toml (max-line-length, force-exclude, skip-string-normalization)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1513", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1513/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1513/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1513/events", "html_url": "https://github.com/psf/black/issues/1513", "id": 642243524, "node_id": "MDU6SXNzdWU2NDIyNDM1MjQ=", "number": 1513, "title": "Version: [e.g. master]\n- OS and Python version: [e.g. Linux/Python 3.7.4rc1]", "user": {"login": "kopukcular", "id": 44060451, "node_id": "MDQ6VXNlcjQ0MDYwNDUx", "avatar_url": "https://avatars3.githubusercontent.com/u/44060451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kopukcular", "html_url": "https://github.com/kopukcular", "followers_url": "https://api.github.com/users/kopukcular/followers", "following_url": "https://api.github.com/users/kopukcular/following{/other_user}", "gists_url": "https://api.github.com/users/kopukcular/gists{/gist_id}", "starred_url": "https://api.github.com/users/kopukcular/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kopukcular/subscriptions", "organizations_url": "https://api.github.com/users/kopukcular/orgs", "repos_url": "https://api.github.com/users/kopukcular/repos", "events_url": "https://api.github.com/users/kopukcular/events{/privacy}", "received_events_url": "https://api.github.com/users/kopukcular/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-19T22:20:21Z", "updated_at": "2020-06-20T00:10:37Z", "closed_at": "2020-06-20T00:10:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** A clear and concise description of what the bug is.\n\n**To Reproduce** Steps to reproduce the behavior:\n\n1. Take this file '...'\n2. Run _Black_ on it with these arguments '....'\n3. See error\n\n**Expected behavior** A clear and concise description of what you expected to happen.\n\n**Environment (please complete the following information):**\n\n- Version: [e.g. master]\n- OS and Python version: [e.g. Linux/Python 3.7.4rc1]\n\n**Does this bug also happen on master?** To answer this, you have two options:\n\n1. Use the online formatter at https://black.now.sh/?version=master, which will use the\n   latest master branch.\n2. Or run _Black_ on your machine:\n   - create a new virtualenv (make sure it's the same Python version);\n   - clone this repository;\n   - run `pip install -e .`;\n   - make sure it's sane by running `python -m unittest`; and\n   - run `black` like you did last time.\n\n**Additional context** Add any other context about the problem here.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1512", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1512/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1512/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1512/events", "html_url": "https://github.com/psf/black/issues/1512", "id": 642119971, "node_id": "MDU6SXNzdWU2NDIxMTk5NzE=", "number": 1512, "title": "Change default line length from 88 -> 90", "user": {"login": "tevansuk", "id": 4145171, "node_id": "MDQ6VXNlcjQxNDUxNzE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4145171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tevansuk", "html_url": "https://github.com/tevansuk", "followers_url": "https://api.github.com/users/tevansuk/followers", "following_url": "https://api.github.com/users/tevansuk/following{/other_user}", "gists_url": "https://api.github.com/users/tevansuk/gists{/gist_id}", "starred_url": "https://api.github.com/users/tevansuk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tevansuk/subscriptions", "organizations_url": "https://api.github.com/users/tevansuk/orgs", "repos_url": "https://api.github.com/users/tevansuk/repos", "events_url": "https://api.github.com/users/tevansuk/events{/privacy}", "received_events_url": "https://api.github.com/users/tevansuk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-19T17:18:34Z", "updated_at": "2020-06-21T10:00:13Z", "closed_at": "2020-06-21T10:00:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I know, I know, this is going to be contentious. Black should change its default line length to 90.\r\n\r\nBlack's default line length is 88. From the docs\r\n\r\n> You probably noticed the peculiar default line length. Black defaults to 88 characters per line,\r\n> which happens to be 10% over 80. This number was found to produce significantly shorter files \r\n> than sticking with 80 (the most popular), or even 79 (used by the standard library). \r\n> In general, 90-ish seems like the wise choice.\r\n\r\nThe problem with 88 is that it is a [well known dog whistle for white supremacists](https://www.adl.org/education/references/hate-symbols/88). I'm not suggesting that anyone involved in choosing 88 as the default initially was aware of this, or chose it for that reason. \r\n\r\nIf \"90-ish\" is the wise choice, lets make it 90 whilst this project is still beta.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1511", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1511/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1511/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1511/events", "html_url": "https://github.com/psf/black/issues/1511", "id": 641906348, "node_id": "MDU6SXNzdWU2NDE5MDYzNDg=", "number": 1511, "title": "Fail to read .editorconfig with '*' group", "user": {"login": "henrik242", "id": 129931, "node_id": "MDQ6VXNlcjEyOTkzMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/129931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/henrik242", "html_url": "https://github.com/henrik242", "followers_url": "https://api.github.com/users/henrik242/followers", "following_url": "https://api.github.com/users/henrik242/following{/other_user}", "gists_url": "https://api.github.com/users/henrik242/gists{/gist_id}", "starred_url": "https://api.github.com/users/henrik242/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/henrik242/subscriptions", "organizations_url": "https://api.github.com/users/henrik242/orgs", "repos_url": "https://api.github.com/users/henrik242/repos", "events_url": "https://api.github.com/users/henrik242/events{/privacy}", "received_events_url": "https://api.github.com/users/henrik242/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-19T11:35:03Z", "updated_at": "2020-06-20T07:24:01Z", "closed_at": "2020-06-20T07:24:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "black fails to read an `.editorconfig` with a `*` group:\r\n\r\n```\r\n$ black --config .editorconfig .\r\nError: Could not open file ./.editorconfig: Error reading configuration file: Invalid group name '*'. Try quoting it. (line 1 column 1 char 0)\r\n\r\n$ cat .editorconfig\r\n[*.py]\r\nline_length = 140\r\n``` \r\n\r\nblack, version 19.10b0, install with Homebrew on macOS 10.15.5\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1509", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1509/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1509/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1509/events", "html_url": "https://github.com/psf/black/issues/1509", "id": 641467046, "node_id": "MDU6SXNzdWU2NDE0NjcwNDY=", "number": 1509, "title": "Development dependencies fail to install", "user": {"login": "matthewhughes934", "id": 34972397, "node_id": "MDQ6VXNlcjM0OTcyMzk3", "avatar_url": "https://avatars1.githubusercontent.com/u/34972397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewhughes934", "html_url": "https://github.com/matthewhughes934", "followers_url": "https://api.github.com/users/matthewhughes934/followers", "following_url": "https://api.github.com/users/matthewhughes934/following{/other_user}", "gists_url": "https://api.github.com/users/matthewhughes934/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewhughes934/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewhughes934/subscriptions", "organizations_url": "https://api.github.com/users/matthewhughes934/orgs", "repos_url": "https://api.github.com/users/matthewhughes934/repos", "events_url": "https://api.github.com/users/matthewhughes934/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewhughes934/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-18T18:37:29Z", "updated_at": "2020-06-20T05:29:54Z", "closed_at": "2020-06-20T05:29:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nFollowing the guidelines in CONTRIBUTING.md fails to install dev dependencies \r\n\r\n**To Reproduce**\r\n\r\n1. With a clean environment run `pipenv install --dev`\r\n\r\nan error is raised:\r\n\r\n```\r\n[pipenv.exceptions.InstallError]: Looking in indexes: https://pypi.python.org/simple\r\n[pipenv.exceptions.InstallError]: Collecting toml==0.10.1\r\n[pipenv.exceptions.InstallError]:   Using cached toml-0.10.1-py2.py3-none-any.whl (19 kB)\r\n[pipenv.exceptions.InstallError]: ERROR: THESE PACKAGES DO NOT MATCH THE HASHES FROM THE REQUIREMENTS FILE. If you have updated the package versions, please update the hashes. Otherwise, examine the package contents carefully; someone may have tampered with them.\r\n[pipenv.exceptions.InstallError]:     toml==0.10.1 from https://files.pythonhosted.org/packages/9f/e1/1b40b80f2e1663a6b9f497123c11d7d988c0919abbf3c3f2688e448c5363/toml-0.10.1-py2.py3-none-any.whl#sha256=bda89d5935c2eac546d648028b9901107a595863cb36bae0c73ac804a9b4ce88 (from -r /tmp/pipenv-1rggigkz-requirements/pipenv-cf3cssrd-requirement.txt (line 1)):\r\n[pipenv.exceptions.InstallError]:         Expected sha256 229f81c57791a41d65e399fc06bf0848bab550a9dfd5ed66df18ce5f05e73d5c\r\n[pipenv.exceptions.InstallError]:         Expected     or 235682dd292d5899d361a811df37e04a8828a5b1da3115886b73cf81ebc9100e\r\n[pipenv.exceptions.InstallError]:              Got        bda89d5935c2eac546d648028b9901107a595863cb36bae0c73ac804a9b4ce88\r\n```\r\n\r\n**Expected behavior**\r\n\r\nDev dependencies install ok\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: master\r\n- OS and Python version:  Linux/Python 3.7.3\r\n\r\n**Does this bug also happen on master?**\r\n\r\nYes\r\n\r\n**Additional context**\r\n\r\nIt looks like 6ebdc5a644b5e53b83a99eb93d63c91d0751da16 bumped the version of `toml` in `Pipfile` which bumped the version in `Pipfile.lock`, but not the corresponding hashes there.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1506", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1506/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1506/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1506/events", "html_url": "https://github.com/psf/black/issues/1506", "id": 639814177, "node_id": "MDU6SXNzdWU2Mzk4MTQxNzc=", "number": 1506, "title": "In the docs, all text in <pre> tags has a width that clips the content", "user": {"login": "SaltyCatFish", "id": 6178847, "node_id": "MDQ6VXNlcjYxNzg4NDc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6178847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SaltyCatFish", "html_url": "https://github.com/SaltyCatFish", "followers_url": "https://api.github.com/users/SaltyCatFish/followers", "following_url": "https://api.github.com/users/SaltyCatFish/following{/other_user}", "gists_url": "https://api.github.com/users/SaltyCatFish/gists{/gist_id}", "starred_url": "https://api.github.com/users/SaltyCatFish/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SaltyCatFish/subscriptions", "organizations_url": "https://api.github.com/users/SaltyCatFish/orgs", "repos_url": "https://api.github.com/users/SaltyCatFish/repos", "events_url": "https://api.github.com/users/SaltyCatFish/events{/privacy}", "received_events_url": "https://api.github.com/users/SaltyCatFish/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-16T16:34:03Z", "updated_at": "2020-06-26T18:35:45Z", "closed_at": "2020-06-26T18:35:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the docs, any text rendered in <pre> tags has a smaller width than is permitted, which creates a scrollbar for only a few characters.\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\n1. Go to https://black.readthedocs.io/en/stable/installation_and_usage.html#usage and look at the command line usage.  Full screen, there is a scroll bar at the bottom.\r\n\r\n**Expected behavior** A clear and concise description of what you expected to happen.\r\n1.  If I increase the width of the <pre> css to 100%, this problem goes away.\r\n\r\n**Environment (please complete the following information):**\r\n- OS and Python version: [e.g. Windows 10/Chrome 83.0.4103.97 (Official Build)]\r\n\r\n**Additional context** Add any other context about the problem here.\r\nhttps://imgur.com/a/PTQdOtk for an example.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1499", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1499/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1499/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1499/events", "html_url": "https://github.com/psf/black/issues/1499", "id": 638924368, "node_id": "MDU6SXNzdWU2Mzg5MjQzNjg=", "number": 1499, "title": "Comments in list comprehensions cause breakages", "user": {"login": "Ianleeclark", "id": 2055372, "node_id": "MDQ6VXNlcjIwNTUzNzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2055372?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ianleeclark", "html_url": "https://github.com/Ianleeclark", "followers_url": "https://api.github.com/users/Ianleeclark/followers", "following_url": "https://api.github.com/users/Ianleeclark/following{/other_user}", "gists_url": "https://api.github.com/users/Ianleeclark/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ianleeclark/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ianleeclark/subscriptions", "organizations_url": "https://api.github.com/users/Ianleeclark/orgs", "repos_url": "https://api.github.com/users/Ianleeclark/repos", "events_url": "https://api.github.com/users/Ianleeclark/events{/privacy}", "received_events_url": "https://api.github.com/users/Ianleeclark/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-15T15:01:54Z", "updated_at": "2020-06-15T19:21:17Z", "closed_at": "2020-06-15T19:21:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nHaving comments within a list comprehension can cause black to blow up.\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\nRunning black (19.10b0) against the following will cause the error:\r\n\r\n```python\r\nxs_by_y = {'a': {'nested': [1,2]}, 'b': {'nested': [1,2,3]}}\r\n\r\n\r\noutput = []\r\nfor foo in ['a', 'b']:\r\n    output.extend(\r\n        [\r\n            individual for\r\n            # Foobar\r\n            container\r\n            in xs_by_y[foo]\r\n            # Foobar\r\n            for individual in container['nested']\r\n        ]\r\n    )\r\n```\r\n\r\ncausing the following error log:\r\n\r\n```\r\n  File \"/home/ian/.virtualenvs/warehouse/lib/python3.7/site-packages/black.py\", line 3762, in assert_equivalent\r\n    dst_ast = parse_ast(dst)\r\n  File \"/home/ian/.virtualenvs/warehouse/lib/python3.7/site-packages/black.py\", line 3686, in parse_ast\r\n    return ast27.parse(src)\r\n  File \"/home/ian/.virtualenvs/warehouse/lib/python3.7/site-packages/typed_ast/ast27.py\", line 50, in parse\r\n    return _ast27.parse(source, filename, mode)\r\nxs_by_y = {'a': {'nested': [1, 2]}, 'b': {'nested': [1, 2, 3]}}\r\n\r\n\r\noutput = []\r\nfor foo in ['a', 'b']:\r\n    output.extend(\r\n        [\r\n            individual\r\n            for# Foobar container in xs_by_y[\r\n                foo\r\n            ]\r\n            # Foobar\r\n            for individual in container['nested']\r\n        ]\r\n    )\r\n```\r\n\r\n**Expected behavior** \r\n\r\nComments shouldn't ever affect the AST.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: black==19.10b0\r\n- OS and Python version: Ubuntu 18.04.4 & Python 3.7.5\r\n\r\n**Does this bug also happen on master?** \r\n\r\nKind-of? Except it doesn't seem to cause an explosion like it does locally. \r\n\r\nSee: https://black.now.sh/?version=master&state=_Td6WFoAAATm1rRGAgAhARYAAAB0L-Wj4AGFAMZdAD2IimZxl1N_WmzAbErO6W20whB8UqORY6avBsePx6WA06SdTM72VoQesVmVn3b8T1Up_2FGsNuFHimXxp-qJrJd6Mush3h7MEK3piUixbZh2M9IYpioOTsOXC4DsFdT_NJ87yJalHXj0w_1dcbQ7028XwJCr7dW3mRmNCmnUBUPFhYvJl5l1JIbIMPXEqda5GATyCS5s50NUQLG7k-pOaHI3aw8fHA6398xUq7SBToxxO64Uv5v7YtLAm2PDptMZ3fO_aHOPgAAACarixe0ayfLAAHiAYYDAABaEM1vscRn-wIAAAAABFla\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1496", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1496/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1496/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1496/events", "html_url": "https://github.com/psf/black/issues/1496", "id": 638404372, "node_id": "MDU6SXNzdWU2Mzg0MDQzNzI=", "number": 1496, "title": "setting line-length in pyproject.toml prevents Black from running in vim", "user": {"login": "erikr", "id": 1253422, "node_id": "MDQ6VXNlcjEyNTM0MjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1253422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikr", "html_url": "https://github.com/erikr", "followers_url": "https://api.github.com/users/erikr/followers", "following_url": "https://api.github.com/users/erikr/following{/other_user}", "gists_url": "https://api.github.com/users/erikr/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikr/subscriptions", "organizations_url": "https://api.github.com/users/erikr/orgs", "repos_url": "https://api.github.com/users/erikr/repos", "events_url": "https://api.github.com/users/erikr/events{/privacy}", "received_events_url": "https://api.github.com/users/erikr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-06-14T18:25:34Z", "updated_at": "2020-06-16T18:58:34Z", "closed_at": "2020-06-16T18:58:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nIf `line-length` is set in `pyproject.toml`, running `black` in Vim fails and throws the following error:\r\n\r\n```\r\n'<=' not supported between instances of 'int' and 'str'\r\n```\r\n\r\n**To Reproduce**\r\n\r\nThe minimum example that reproduces the error for me:\r\n```black-bug\r\n\u251c\u2500\u2500 pyproject.toml\r\n\u2514\u2500\u2500 test.py\r\n```\r\n\r\nThe contents of `pyproject.toml` follow the same syntax as is provided by [`pyproject.toml` in the `black` repo](https://github.com/psf/black/blob/6bedb5c58a7d8c25aa9509f8217bc24e9797e90d/pyproject.toml#L9)\r\n```\r\n[tool.black]\r\nline-length = 79\r\n```\r\n\r\nThe contents of `test.py`:\r\n```\r\nfoo = 1\r\n```\r\n\r\nRunning `black` in Vim on `test.py` throws the error:\r\n```\r\n'<=' not supported between instances of 'int' and 'str'\r\n```\r\n\r\nI can successfully run `black` on `test.py` outside of vim:\r\n```\r\n~/.vim/black/bin/black test.py\r\n```\r\nor\r\n```\r\nblack test.py\r\n```\r\n\r\nIf I comment out `line-length` in `pyproject.toml`, the error we see when calling `black` in Vim goes away:\r\n```\r\n[tool.black]\r\n#line-length = 79\r\n```\r\n\r\nThe problem seems to be how `line-length` is parsed and cast by `black`.\r\n\r\n**Expected behavior**\r\n`black` runs without errors, and utilizes the `line-length` value specified in `pyproject.toml`.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: `19.10b0`\r\n- OS and Python version: macOS 10.15.5 and Python 3.8.3; also reproduced on Ubuntu 20.04 and Python 3.8.3.\r\n\r\n**Does this bug also happen on master?**\r\n\r\n> To answer this, you have two options:\r\n> 1. Use the online formatter at https://black.now.sh/?version=master, which will use the latest master branch.\r\n\r\nn/a\r\n\r\n> 2. Or run _Black_ on your machine:\r\n>    - create a new virtualenv (make sure it's the same Python version);\r\n>    - clone this repository;\r\n>    - run `pip install -e .`;\r\n>    - make sure it's sane by running `python -m unittest`; and\r\n>    - run `black` like you did last time.\r\n\r\nI get errors running `python -m unittest` but unsure related to this bug:\r\n\r\n```\r\n$ python -m unittest                                                                                                                                   \r\nE....[2020-06-14 14:22:15,341] DEBUG: Using selector: EpollSelector (selector_events.py:59)\r\n.[2020-06-14 14:22:15,342] DEBUG: Using selector: EpollSelector (selector_events.py:59)\r\n.[2020-06-14 14:22:15,680] DEBUG: Using selector: EpollSelector (selector_events.py:59)\r\n.[2020-06-14 14:22:15,682] DEBUG: Using selector: EpollSelector (selector_events.py:59)\r\n[2020-06-14 14:22:15,683] INFO: 16 projects to run Black over (lib.py:311)\r\n[2020-06-14 14:22:15,683] DEBUG: Using 2 parallel workers to run Black (lib.py:316)\r\n[2020-06-14 14:22:15,684] DEBUG: worker 0 working on aioexabgp (lib.py:247)\r\n[2020-06-14 14:22:15,684] DEBUG: worker 0 working on attrs (lib.py:247)\r\n[2020-06-14 14:22:15,684] DEBUG: worker 0 working on bandersnatch (lib.py:247)\r\n[2020-06-14 14:22:15,684] DEBUG: worker 0 working on channels (lib.py:247)\r\n[2020-06-14 14:22:15,684] DEBUG: worker 0 working on django (lib.py:247)\r\n[2020-06-14 14:22:15,684] INFO: Skipping django as it's disabled via config (lib.py:254)\r\n[2020-06-14 14:22:15,684] DEBUG: worker 0 working on flake8-bugbear (lib.py:247)\r\n[2020-06-14 14:22:15,684] DEBUG: worker 0 working on hypothesis (lib.py:247)\r\n[2020-06-14 14:22:15,684] DEBUG: worker 0 working on pandas (lib.py:247)\r\n[2020-06-14 14:22:15,684] INFO: Skipping pandas as it's disabled via config (lib.py:254)\r\n[2020-06-14 14:22:15,684] DEBUG: worker 0 working on poetry (lib.py:247)\r\n[2020-06-14 14:22:15,684] DEBUG: worker 0 working on ptr (lib.py:247)\r\n[2020-06-14 14:22:15,684] DEBUG: worker 0 working on pyramid (lib.py:247)\r\n[2020-06-14 14:22:15,684] DEBUG: worker 0 working on pytest (lib.py:247)\r\n[2020-06-14 14:22:15,684] INFO: Skipping pytest as it's disabled via config (lib.py:254)\r\n[2020-06-14 14:22:15,684] DEBUG: worker 0 working on sqlalchemy (lib.py:247)\r\n[2020-06-14 14:22:15,685] DEBUG: worker 0 working on tox (lib.py:247)\r\n[2020-06-14 14:22:15,685] DEBUG: worker 0 working on virtualenv (lib.py:247)\r\n[2020-06-14 14:22:15,685] DEBUG: worker 0 working on warehouse (lib.py:247)\r\n[2020-06-14 14:22:15,685] DEBUG: project_runner 0 exiting (lib.py:245)\r\n[2020-06-14 14:22:15,685] DEBUG: project_runner 1 exiting (lib.py:245)\r\n[2020-06-14 14:22:15,685] INFO: Analyzing results (lib.py:327)\r\n.\r\n======================================================================\r\nERROR: tests.test_black (unittest.loader._FailedTest)\r\n----------------------------------------------------------------------\r\nImportError: Failed to import test module: tests.test_black\r\nTraceback (most recent call last):\r\n  File \"/home/username/miniconda3/envs/ml4sts/lib/python3.8/unittest/loader.py\", line 436, in _find_test_path\r\n    module = self._get_module_from_name(name)\r\n  File \"/home/username/miniconda3/envs/ml4sts/lib/python3.8/unittest/loader.py\", line 377, in _get_module_from_name\r\n    __import__(name)\r\n  File \"/home/erik/black/tests/test_black.py\", line 1766, in <module>\r\n    class BlackDTestCase(AioHTTPTestCase):\r\nNameError: name 'AioHTTPTestCase' is not defined\r\n\r\n\r\n----------------------------------------------------------------------\r\nRan 9 tests in 0.348s\r\n\r\nFAILED (errors=1)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1494", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1494/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1494/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1494/events", "html_url": "https://github.com/psf/black/issues/1494", "id": 637984773, "node_id": "MDU6SXNzdWU2Mzc5ODQ3NzM=", "number": 1494, "title": "Bad URL String rewrite with many line breaks", "user": {"login": "rspadim", "id": 2468782, "node_id": "MDQ6VXNlcjI0Njg3ODI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2468782?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rspadim", "html_url": "https://github.com/rspadim", "followers_url": "https://api.github.com/users/rspadim/followers", "following_url": "https://api.github.com/users/rspadim/following{/other_user}", "gists_url": "https://api.github.com/users/rspadim/gists{/gist_id}", "starred_url": "https://api.github.com/users/rspadim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rspadim/subscriptions", "organizations_url": "https://api.github.com/users/rspadim/orgs", "repos_url": "https://api.github.com/users/rspadim/repos", "events_url": "https://api.github.com/users/rspadim/events{/privacy}", "received_events_url": "https://api.github.com/users/rspadim/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 869135448, "node_id": "MDU6TGFiZWw4NjkxMzU0NDg=", "url": "https://api.github.com/repos/psf/black/labels/design", "name": "design", "color": "0052cc", "default": false, "description": "What do we want Black to be?"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-12T20:22:25Z", "updated_at": "2020-06-12T22:37:47Z", "closed_at": "2020-06-12T22:30:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the style change** A clear and concise description of how the style can be\r\nimproved.\r\n\r\nthe current code is:\r\n```python\r\nurl = (\r\n            \"https://www.bcb.gov.br/api/servico/sitebcb/bcdatasgs/?\" +\r\n            \"tronco=estatisticas&\" +\r\n            \"guidLista=323626f4-c92f-46d6-bac7-55bf88f6430b&\" +\r\n            \"serie=\" + serie_id + \"&\" +\r\n            \"dataInicial=\" + start.strftime(\"%d/%m/%Y\") + \"&\" +\r\n            \"dataFinal=\" + end.strftime(\"%d/%m/%Y\")\r\n    )\r\n```\r\n\r\n**Examples in the current _Black_ style** Think of some short code snippets that show\r\nhow the current _Black_ style is not great:\r\n\r\nthe black version is:\r\n```python\r\n    url = (\r\n        \"https://www.bcb.gov.br/api/servico/sitebcb/bcdatasgs/?\"\r\n        + \"tronco=estatisticas&\"\r\n        + \"guidLista=323626f4-c92f-46d6-bac7-55bf88f6430b&\"\r\n        + \"serie=\"\r\n        + serie_id\r\n        + \"&\"\r\n        + \"dataInicial=\"\r\n        + start.strftime(\"%d/%m/%Y\")\r\n        + \"&\"\r\n        + \"dataFinal=\"\r\n        + end.strftime(\"%d/%m/%Y\")\r\n    )\r\n```\r\n\r\n**Desired style** How do you think _Black_ should format the above snippets:\r\n\r\nthe ` + \"&\"` is too small, maybe concat strings based on a line length could help?\r\nother point... why start line with + instead of use it at last line end?\r\n\r\nv1:\r\n```python\r\n    url = (\r\n        \"https://www.bcb.gov.br/api/servico/sitebcb/bcdatasgs/?\"\r\n        + \"tronco=estatisticas&\"\r\n        + \"guidLista=323626f4-c92f-46d6-bac7-55bf88f6430b&\"\r\n        + \"serie=\" + serie_id + \"&\"\r\n        + \"dataInicial=\" + start.strftime(\"%d/%m/%Y\") + \"&\"\r\n        + \"dataFinal=\" + end.strftime(\"%d/%m/%Y\")\r\n    )\r\n```\r\n\r\nv2:\r\n```python\r\n    url = (\r\n        \"https://www.bcb.gov.br/api/servico/sitebcb/bcdatasgs/?\" +\r\n        \"tronco=estatisticas&\" +\r\n        \"guidLista=323626f4-c92f-46d6-bac7-55bf88f6430b&\" +\r\n        \"serie=\" + serie_id + \"&\" +\r\n        \"dataInicial=\" + start.strftime(\"%d/%m/%Y\") + \"&\" +\r\n        \"dataFinal=\" + end.strftime(\"%d/%m/%Y\")\r\n    )\r\n```\r\n\r\n\r\n**Additional context** Add any other context about the problem here.\r\n\r\nwhen the line is too small maybe could be possible merge with the next line? or the previous one\r\n\r\nthanks !", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1493", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1493/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1493/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1493/events", "html_url": "https://github.com/psf/black/issues/1493", "id": 637865807, "node_id": "MDU6SXNzdWU2Mzc4NjU4MDc=", "number": 1493, "title": "Black finds root incorrectly", "user": {"login": "lbenezriravin", "id": 25595051, "node_id": "MDQ6VXNlcjI1NTk1MDUx", "avatar_url": "https://avatars1.githubusercontent.com/u/25595051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbenezriravin", "html_url": "https://github.com/lbenezriravin", "followers_url": "https://api.github.com/users/lbenezriravin/followers", "following_url": "https://api.github.com/users/lbenezriravin/following{/other_user}", "gists_url": "https://api.github.com/users/lbenezriravin/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbenezriravin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbenezriravin/subscriptions", "organizations_url": "https://api.github.com/users/lbenezriravin/orgs", "repos_url": "https://api.github.com/users/lbenezriravin/repos", "events_url": "https://api.github.com/users/lbenezriravin/events{/privacy}", "received_events_url": "https://api.github.com/users/lbenezriravin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-12T16:15:02Z", "updated_at": "2020-06-24T09:09:10Z", "closed_at": "2020-06-24T09:09:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug** \r\nWhen multiple files are passed to black, it finds a root that may be incorrect with respect to some of the files it needs to format, resulting in a stack trace under certain conditions:\r\n\r\n```\r\nValueError: '/home/user/project/tests/bar.py' does not start with '/home/user/project/src'\r\n```\r\n\r\n**To Reproduce** \r\nCreate a directory structure as such:\r\n```\r\n\u25be src/\r\n    foo.py\r\n    pyproject.toml\r\n\u25be tests/\r\n    bar.py\r\n  poetry.lock\r\n  pyproject.toml -> /home/user/project/src/pyproject.toml\r\n```\r\nrun \r\n```\r\nblack src/foo.py tests/bar.py\r\n```\r\n\r\nThe soft-linked pyproject.toml is not necessary to reproduce the bug, but it will trigger a stack trace most clearly. Otherwise the root will be incorrect, but it won't cause immediate problems.\r\n\r\n**Expected behavior**\r\nBlack should run without dumping a stack trace. Running\r\n```\r\nblack .\r\n```\r\nsucceeds without any problems, so the above should probably perform similarly.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: master\r\n- OS and Python version: Fedora 31/Python 3.7.4\r\n\r\n**Does this bug also happen on master?**\r\nyes\r\n\r\n**Additional context**\r\nAs far as I can tell the bug is [here](https://github.com/psf/black/blob/88d12f88a97e5e4c8fd0d245df0a311e932fd1e1/src/black/__init__.py#L5834). I believe the ordering of python `Path` objects is purely alphabetical, which makes this work incorrectly -- it just gets the alphabetically first file you give it.\r\n\r\nA line like this would work better, IMO:\r\n```\r\ncommon_base = max(set.intersection(*(set(path.parents) for path in paths)), key=lambda x: x.parts)\r\n```\r\nI can make a PR to fix this.\r\n\r\nFor context, the above trace is getting triggered when running black as a pre-commit hook on a repo where both the code and some tests have been edited in the same commit. I have a linked `pyproject.toml` in my package so that I can easily access package metadata from within the software from single source of truth. This bug is preventing me from making a commit without separating out the tests (breaking CI on the first commit) or disabling pre-commit (sad!)\r\n\r\nThank you all for all the work a great tool!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1489", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1489/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1489/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1489/events", "html_url": "https://github.com/psf/black/issues/1489", "id": 636853168, "node_id": "MDU6SXNzdWU2MzY4NTMxNjg=", "number": 1489, "title": "INTERNAL ERROR: Black produced code that is not equivalent to the source", "user": {"login": "sondrelg", "id": 25310870, "node_id": "MDQ6VXNlcjI1MzEwODcw", "avatar_url": "https://avatars2.githubusercontent.com/u/25310870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sondrelg", "html_url": "https://github.com/sondrelg", "followers_url": "https://api.github.com/users/sondrelg/followers", "following_url": "https://api.github.com/users/sondrelg/following{/other_user}", "gists_url": "https://api.github.com/users/sondrelg/gists{/gist_id}", "starred_url": "https://api.github.com/users/sondrelg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sondrelg/subscriptions", "organizations_url": "https://api.github.com/users/sondrelg/orgs", "repos_url": "https://api.github.com/users/sondrelg/repos", "events_url": "https://api.github.com/users/sondrelg/events{/privacy}", "received_events_url": "https://api.github.com/users/sondrelg/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-11T09:10:12Z", "updated_at": "2020-06-22T19:20:30Z", "closed_at": "2020-06-22T19:20:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure this is a bug or not, but the following code generates a black error (i run black as a pre-commit hook)\r\n\r\n```python\r\n    def example_function(items: list) -> str:\r\n        for item in items:\r\n            for item in items:\r\n                # fmt: off\r\n                var = ''\r\n        # fmt: on\r\n        other_var = ''\r\n        return other_var\r\n```\r\n\r\nIn the original example, the inner loop is much longer and so the `# fmt: on` line was accidentally de-indented.\r\n\r\nIf the fmt-statements *need* to have the same alignment, perhaps the handling of this error could be improved upon.\r\n\r\n-----------\r\n\r\nError: error: cannot format <path>: INTERNAL ERROR: Black produced code that is not equivalent to the source.  Please report a bug on https://github.com/psf/black/issues.  This diff might be he\r\nlpful: <path>\\blk_mmykp4j7.log\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1488", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1488/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1488/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1488/events", "html_url": "https://github.com/psf/black/issues/1488", "id": 636493449, "node_id": "MDU6SXNzdWU2MzY0OTM0NDk=", "number": 1488, "title": "2-space indentation docstrings are not formatted correctly", "user": {"login": "fredrikaverpil", "id": 994357, "node_id": "MDQ6VXNlcjk5NDM1Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/994357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fredrikaverpil", "html_url": "https://github.com/fredrikaverpil", "followers_url": "https://api.github.com/users/fredrikaverpil/followers", "following_url": "https://api.github.com/users/fredrikaverpil/following{/other_user}", "gists_url": "https://api.github.com/users/fredrikaverpil/gists{/gist_id}", "starred_url": "https://api.github.com/users/fredrikaverpil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fredrikaverpil/subscriptions", "organizations_url": "https://api.github.com/users/fredrikaverpil/orgs", "repos_url": "https://api.github.com/users/fredrikaverpil/repos", "events_url": "https://api.github.com/users/fredrikaverpil/events{/privacy}", "received_events_url": "https://api.github.com/users/fredrikaverpil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-10T19:29:26Z", "updated_at": "2020-06-11T05:53:24Z", "closed_at": "2020-06-10T23:04:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am formatting a 2-space indentation codebase and I'm using black. I've noticed that it does not succeed completely in formatting the docstrings into a 4-space indentation.\r\n\r\n**To Reproduce**\r\n\r\nConsider this file:\r\n\r\n```python\r\ndef foo():\r\n  \"\"\"Foo.\r\n\r\n  Foo bar la la la...\r\n  \"\"\"\r\n  pass\r\n```\r\n\r\nBy just running \"black\" on it, this produces the following:\r\n\r\n```python\r\ndef foo():\r\n    \"\"\"Foo.\r\n\r\n  Foo bar la la la...\r\n  \"\"\"\r\n    pass\r\n```\r\n\r\n**Expected behavior**\r\n\r\nThe expected behavior would be to also fix the `  \"\"\"` part at the end of the docstring.\r\n\r\n**Environment**\r\n\r\n- Version: 19.10b0\r\n- OS and Python version: Windows 10, Python 3.7.4.\r\n\r\n**Does this bug also happen on master?**\r\n\r\nNo. Using the online formatter, I get the expected behavior. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1480", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1480/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1480/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1480/events", "html_url": "https://github.com/psf/black/issues/1480", "id": 632031292, "node_id": "MDU6SXNzdWU2MzIwMzEyOTI=", "number": 1480, "title": "Aligning Equal Signs", "user": {"login": "mlucool", "id": 1813603, "node_id": "MDQ6VXNlcjE4MTM2MDM=", "avatar_url": "https://avatars1.githubusercontent.com/u/1813603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlucool", "html_url": "https://github.com/mlucool", "followers_url": "https://api.github.com/users/mlucool/followers", "following_url": "https://api.github.com/users/mlucool/following{/other_user}", "gists_url": "https://api.github.com/users/mlucool/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlucool/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlucool/subscriptions", "organizations_url": "https://api.github.com/users/mlucool/orgs", "repos_url": "https://api.github.com/users/mlucool/repos", "events_url": "https://api.github.com/users/mlucool/events{/privacy}", "received_events_url": "https://api.github.com/users/mlucool/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-05T22:47:44Z", "updated_at": "2020-06-11T16:16:54Z", "closed_at": "2020-06-11T16:16:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nIf a developer chooses to align equal signs, black should respect this formatting. It improves readability in some situations. This choice could be considered similar to [the magic trailing comma](https://github.com/psf/black/blob/master/docs/the_black_code_style.md#the-magic-trailing-comma). For example:\r\n\r\n```\r\na_var       = 4\r\nanother_var = 5\r\n```\r\n\r\n**Describe the solution you'd like** \r\n\r\nIf two lines in a row have aligned equal signs, black formats the lines with all normal rules, but keeps the equals sign in place. This has the downside of picking up aligned equals when it was unintended, but that seems like a reasonable trade-off for simplicity.\r\n\r\n**Describe alternatives you've considered** A clear and concise description of any\r\nalternative solutions or features you've considered.\r\n\r\nStatus quo, which does not implement this feature and ignores alignment.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1479", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1479/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1479/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1479/events", "html_url": "https://github.com/psf/black/issues/1479", "id": 631664275, "node_id": "MDU6SXNzdWU2MzE2NjQyNzU=", "number": 1479, "title": "Black fails to find files to reformat", "user": {"login": "urbnbob", "id": 33457933, "node_id": "MDQ6VXNlcjMzNDU3OTMz", "avatar_url": "https://avatars0.githubusercontent.com/u/33457933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urbnbob", "html_url": "https://github.com/urbnbob", "followers_url": "https://api.github.com/users/urbnbob/followers", "following_url": "https://api.github.com/users/urbnbob/following{/other_user}", "gists_url": "https://api.github.com/users/urbnbob/gists{/gist_id}", "starred_url": "https://api.github.com/users/urbnbob/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urbnbob/subscriptions", "organizations_url": "https://api.github.com/users/urbnbob/orgs", "repos_url": "https://api.github.com/users/urbnbob/repos", "events_url": "https://api.github.com/users/urbnbob/events{/privacy}", "received_events_url": "https://api.github.com/users/urbnbob/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-05T14:57:49Z", "updated_at": "2020-06-08T11:32:54Z", "closed_at": "2020-06-08T11:32:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nBlack 19.10 does not seem to be picking up files to check/ reformat.\r\n\r\n**To Reproduce** \r\n\r\nUsing: Python 3.8.0\r\nRun: `pip install black`\r\nRun: `black --version`\r\nNote: black, version 19.10b0\r\ncd into directory with python files, run: `black .`\r\nNote:\r\nNo Python files are present to be formatted. Nothing to do \ud83d\ude34\r\n\r\n**Expected behavior**\r\nBlack checks files to be reformatted and either indicates that no reformatting was necessary or reformats the files.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- OS and Python version: Mac High Sierra 10.13.6", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1478", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1478/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1478/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1478/events", "html_url": "https://github.com/psf/black/issues/1478", "id": 631173370, "node_id": "MDU6SXNzdWU2MzExNzMzNzA=", "number": 1478, "title": "[Question] Is it possible to have black work through pycharm committing without a plugin?", "user": {"login": "symonk", "id": 17887843, "node_id": "MDQ6VXNlcjE3ODg3ODQz", "avatar_url": "https://avatars0.githubusercontent.com/u/17887843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/symonk", "html_url": "https://github.com/symonk", "followers_url": "https://api.github.com/users/symonk/followers", "following_url": "https://api.github.com/users/symonk/following{/other_user}", "gists_url": "https://api.github.com/users/symonk/gists{/gist_id}", "starred_url": "https://api.github.com/users/symonk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/symonk/subscriptions", "organizations_url": "https://api.github.com/users/symonk/orgs", "repos_url": "https://api.github.com/users/symonk/repos", "events_url": "https://api.github.com/users/symonk/events{/privacy}", "received_events_url": "https://api.github.com/users/symonk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-04T21:57:19Z", "updated_at": "2020-06-04T22:31:29Z", "closed_at": "2020-06-04T22:31:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, great tool - I've always used the command line for git in which case everything works nicely, however trying to roll this out in work has caused some headaches / confusion for those who rely on intellij/pycharm for doing day to day git tasks.  Heres an example of when things go bad below:\r\n\r\n\r\n- Modify a simple file in the repo that black will rewrite, change a \"hello world\" to 'hello world':\r\n\r\n```python\r\n def last_failed_show(config, session) -> int:\r\n     terminal_writer = TerminalWriter()\r\n-    var = \"hello world\"\r\n+    var = 'hello world'\r\n     print(var)\r\n```\r\n\r\n- Add/commit such file using pycharm which automatically runs git hooks to apply black (which will rewrite the file and abort the commit (rightly so):\r\n\r\n```bash\r\n0 file committed, 1 file failed to commit: test2\r\nblack....................................................................Failed\r\n- hook id: black\r\n- files were modified by this hook\r\n```\r\n\r\nWhen committing through intellij, the following commands are issued here:\r\n\r\n```bash\r\n22:54:21.066: [pytest] git -c credential.helper= -c core.quotepath=false -c log.showSignature=false add --ignore-errors -A -f -- src/_pytest/cacheprovider.py\r\n22:54:21.115: [pytest] git -c credential.helper= -c core.quotepath=false -c log.showSignature=false commit -F C:\\Users\\sy\\AppData\\Local\\Temp\\git-commit-msg-.txt --\r\nblack....................................................................Failed\r\n- hook id: black\r\n- files were modified by this hook\r\n```\r\n\r\nAs far as this file within Intellij/pycharm goes, it is now impossible to add it via the GUI, the add/commit options are no longer available, from the cli we see the following:\r\n\r\n```bash\r\nChanges to be committed:\r\n  (use \"git reset HEAD <file>...\" to unstage)\r\n\r\n        modified:   src/_pytest/cacheprovider.py\r\n\r\nChanges not staged for commit:\r\n  (use \"git add <file>...\" to update what will be committed)\r\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\r\n\r\n        modified:   src/_pytest/cacheprovider.py\r\n```\r\n\r\nHas anyone came across this before and has a potential work around to make it work?  I'm not quite sure its a black issue so to speak, maybe its an intellij issue as they don't seem to run `traditional` git commands as you would via the CLI.  It could also be a pre-commit issue.  I will test it explicitly with black only quickly.\r\n\r\nAppreciate your time, thanks :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1476", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1476/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1476/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1476/events", "html_url": "https://github.com/psf/black/issues/1476", "id": 630140076, "node_id": "MDU6SXNzdWU2MzAxNDAwNzY=", "number": 1476, "title": "Preserve multiline aspect of a code chunk.", "user": {"login": "chebee7i", "id": 326005, "node_id": "MDQ6VXNlcjMyNjAwNQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/326005?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chebee7i", "html_url": "https://github.com/chebee7i", "followers_url": "https://api.github.com/users/chebee7i/followers", "following_url": "https://api.github.com/users/chebee7i/following{/other_user}", "gists_url": "https://api.github.com/users/chebee7i/gists{/gist_id}", "starred_url": "https://api.github.com/users/chebee7i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chebee7i/subscriptions", "organizations_url": "https://api.github.com/users/chebee7i/orgs", "repos_url": "https://api.github.com/users/chebee7i/repos", "events_url": "https://api.github.com/users/chebee7i/events{/privacy}", "received_events_url": "https://api.github.com/users/chebee7i/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-03T16:22:41Z", "updated_at": "2020-08-12T04:46:41Z", "closed_at": "2020-08-12T04:46:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have broken up a line of code that happens to fit within the line length limit, then black will reformat it into just one line.  For example,\r\n```python\r\n# in:\r\nj = [\r\n    1,\r\n    2,\r\n    3,\r\n]\r\n\r\n# out:\r\nj = [1, 2, 3]\r\n```\r\nWhile I could prevent this by using `fmt: off` and `fmt: on` around the affected lines, this can be quite invasive and litters the code, especially if you have many similar declarations within a module and you just want consistency of style (e.g. all declarations are multiline, even if they are short). \r\n\r\nSo the only option is to disable black formatting for much larger code segements, which has obvious downsides like not reformating:\r\n```python\r\nj = [1,\r\n     2,\r\n     3]\r\n```\r\nand not fixing any other formatting issues.\r\n\r\nMight it be possible to tell black that we want it to preserve the multi-line aspect of code?  That is, fix the other issues, but do not reformat it into just one line.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1474", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1474/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1474/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1474/events", "html_url": "https://github.com/psf/black/issues/1474", "id": 628839235, "node_id": "MDU6SXNzdWU2Mjg4MzkyMzU=", "number": 1474, "title": "Wrong insertion of parenthesis transforms expression into tuple", "user": {"login": "jbsilva", "id": 466633, "node_id": "MDQ6VXNlcjQ2NjYzMw==", "avatar_url": "https://avatars0.githubusercontent.com/u/466633?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbsilva", "html_url": "https://github.com/jbsilva", "followers_url": "https://api.github.com/users/jbsilva/followers", "following_url": "https://api.github.com/users/jbsilva/following{/other_user}", "gists_url": "https://api.github.com/users/jbsilva/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbsilva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbsilva/subscriptions", "organizations_url": "https://api.github.com/users/jbsilva/orgs", "repos_url": "https://api.github.com/users/jbsilva/repos", "events_url": "https://api.github.com/users/jbsilva/events{/privacy}", "received_events_url": "https://api.github.com/users/jbsilva/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-02T01:50:59Z", "updated_at": "2020-08-09T17:47:36Z", "closed_at": "2020-06-02T01:55:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nParenthesis insertion transforms a date into a tuple containing that date.\r\n\r\n**To Reproduce** \r\n\r\nWith -l 79, this code\r\n```\r\n    data_inicio = date.fromisoformat(\r\n        conf.get(\"data_inicio\")) if \"data_inicio\" in conf else DATA_INICIO_DFT\r\n```\r\nis converted into the following:\r\n```\r\n    data_inicio = (\r\n        date.fromisoformat(conf.get(\"data_inicio\"))\r\n        if \"data_inicio\" in conf\r\n        else DATA_INICIO_DFT\r\n    )\r\n```\r\n\r\nThey are not equivalent, as the second is a tuple.\r\n\r\n**Expected behavior**\r\nThe code should be left untouched, as it was already correct and under 80 columns.\r\n\r\n**Environment:**\r\n\r\n- Version: 19.10b0\r\n- OS and Python version: GNU/Linux 5.6.14-arch1-1, Python 3.8.2 from conda-forge\r\n\r\n**Does this bug also happen on master?**\r\nYes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1472", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1472/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1472/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1472/events", "html_url": "https://github.com/psf/black/issues/1472", "id": 628565267, "node_id": "MDU6SXNzdWU2Mjg1NjUyNjc=", "number": 1472, "title": "Black is compromising on trailing comma in one line", "user": {"login": "uriva", "id": 2490655, "node_id": "MDQ6VXNlcjI0OTA2NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2490655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/uriva", "html_url": "https://github.com/uriva", "followers_url": "https://api.github.com/users/uriva/followers", "following_url": "https://api.github.com/users/uriva/following{/other_user}", "gists_url": "https://api.github.com/users/uriva/gists{/gist_id}", "starred_url": "https://api.github.com/users/uriva/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/uriva/subscriptions", "organizations_url": "https://api.github.com/users/uriva/orgs", "repos_url": "https://api.github.com/users/uriva/repos", "events_url": "https://api.github.com/users/uriva/events{/privacy}", "received_events_url": "https://api.github.com/users/uriva/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 869135448, "node_id": "MDU6TGFiZWw4NjkxMzU0NDg=", "url": "https://api.github.com/repos/psf/black/labels/design", "name": "design", "color": "0052cc", "default": false, "description": "What do we want Black to be?"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-01T16:20:08Z", "updated_at": "2020-06-07T16:04:01Z", "closed_at": "2020-06-07T16:04:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Black allows this:\r\n\r\n```\r\nfoo(bar,)\r\n```\r\nand also this\r\n\r\n```\r\nfoo(bar)\r\n```\r\n\r\nLeaving freedom for arguing and inconsistency. I think best decide to go with either one and make the formatter fix it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1463", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1463/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1463/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1463/events", "html_url": "https://github.com/psf/black/issues/1463", "id": 625465291, "node_id": "MDU6SXNzdWU2MjU0NjUyOTE=", "number": 1463, "title": "Trailing comma after **kwargs not removed when targeting py35", "user": {"login": "alexomics", "id": 30386655, "node_id": "MDQ6VXNlcjMwMzg2NjU1", "avatar_url": "https://avatars1.githubusercontent.com/u/30386655?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexomics", "html_url": "https://github.com/alexomics", "followers_url": "https://api.github.com/users/alexomics/followers", "following_url": "https://api.github.com/users/alexomics/following{/other_user}", "gists_url": "https://api.github.com/users/alexomics/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexomics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexomics/subscriptions", "organizations_url": "https://api.github.com/users/alexomics/orgs", "repos_url": "https://api.github.com/users/alexomics/repos", "events_url": "https://api.github.com/users/alexomics/events{/privacy}", "received_events_url": "https://api.github.com/users/alexomics/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-27T07:53:27Z", "updated_at": "2020-06-16T22:49:03Z", "closed_at": "2020-06-16T22:49:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** \r\nWhen running black with `-t py35` code that raises syntax errors is left unchanged.\r\n\r\n**To Reproduce:**\r\n\r\n_example.py_\r\n```python\r\ndef func(\r\n    a_long_variable_name: int = 1000000,\r\n    another_long_variable_name: int = 1000000,\r\n    **kwargs,\r\n):\r\n    pass\r\n```\r\nThis example is valid in python 3.7 but not in python 3.5.\r\n\r\n1. Run _Black_ on it like so:\r\n    ```bash\r\n    black --target-version=py35 example.py\r\n    ```\r\n1. File remains unchanged\r\n\r\n**Expected behavior**\r\nI would expect black to tell me that the trailing comma is a syntax error in the target python version, or remove the trailing comma.\r\n\r\n**Environment:**\r\n - black: 19.10b0\r\n - OS: Docker using python:3.7-buster (Python 3.7.7 (default, May 16 2020, 07:16:36))\r\n\r\n**Does this bug also happen on master?** \r\nYes\r\n\r\n**Additional context** \r\nMaybe related #419 ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1458", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1458/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1458/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1458/events", "html_url": "https://github.com/psf/black/issues/1458", "id": 623881711, "node_id": "MDU6SXNzdWU2MjM4ODE3MTE=", "number": 1458, "title": "AttributeError: 'int' object has no attribute 'lower'", "user": {"login": "vincentdavis", "id": 232564, "node_id": "MDQ6VXNlcjIzMjU2NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/232564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincentdavis", "html_url": "https://github.com/vincentdavis", "followers_url": "https://api.github.com/users/vincentdavis/followers", "following_url": "https://api.github.com/users/vincentdavis/following{/other_user}", "gists_url": "https://api.github.com/users/vincentdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincentdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincentdavis/subscriptions", "organizations_url": "https://api.github.com/users/vincentdavis/orgs", "repos_url": "https://api.github.com/users/vincentdavis/repos", "events_url": "https://api.github.com/users/vincentdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/vincentdavis/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 19, "created_at": "2020-05-24T15:01:11Z", "updated_at": "2020-06-01T18:00:00Z", "closed_at": "2020-06-01T18:00:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** \r\nWhen I try to run black on a file I get this error. even a simple file that has only ```print('hello world')```\r\nI am runnning ```black temp.py```\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\n```black temp.py```\r\n\r\n**Environment (please complete the following information):**\r\npython 3.8 macos\r\nblack.__version__\r\n'19.10b0'\r\nclick.__version__\r\n'7.1.2'\r\n\r\n**Error** \r\n\r\n`(venv) $ black temp.py\r\nTraceback (most recent call last):\r\n  File \"/venv/bin/black\", line 10, in <module>\r\n    sys.exit(patched_main())\r\n  File \"/venv/lib/python3.8/site-packages/black.py\", line 4135, in patched_main\r\n    main()\r\n  File \"/venv/lib/python3.8/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/venv/lib/python3.8/site-packages/click/core.py\", line 781, in main\r\n    with self.make_context(prog_name, args, **extra) as ctx:\r\n  File \"/venv/lib/python3.8/site-packages/click/core.py\", line 700, in make_context\r\n    self.parse_args(ctx, args)\r\n  File \"/venv/lib/python3.8/site-packages/click/core.py\", line 1048, in parse_args\r\n    value, args = param.handle_parse_result(ctx, opts, args)\r\n  File \"/venv/lib/python3.8/site-packages/click/core.py\", line 1623, in handle_parse_result\r\n    value = self.full_process_value(ctx, value)\r\n  File \"/venv/lib/python3.8/site-packages/click/core.py\", line 1965, in full_process_value\r\n    return Parameter.full_process_value(self, ctx, value)\r\n  File \"/venv/lib/python3.8/site-packages/click/core.py\", line 1589, in full_process_value\r\n    value = self.process_value(ctx, value)\r\n  File \"/venv/lib/python3.8/site-packages/click/core.py\", line 1579, in process_value\r\n    return self.type_cast_value(ctx, value)\r\n  File \"/venv/lib/python3.8/site-packages/click/core.py\", line 1568, in type_cast_value\r\n    return _convert(value, (self.nargs != 1) + bool(self.multiple))\r\n  File \"/venv/lib/python3.8/site-packages/click/core.py\", line 1565, in _convert\r\n    return self.type(value, self, ctx)\r\n  File \"/venv/lib/python3.8/site-packages/click/types.py\", line 46, in __call__\r\n    return self.convert(value, param, ctx)\r\n  File \"/venv/lib/python3.8/site-packages/click/types.py\", line 412, in convert\r\n    value = value.lower()\r\nAttributeError: 'int' object has no attribute 'lower'`\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1449", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1449/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1449/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1449/events", "html_url": "https://github.com/psf/black/issues/1449", "id": 623165978, "node_id": "MDU6SXNzdWU2MjMxNjU5Nzg=", "number": 1449, "title": "Python interface to Black", "user": {"login": "Dreamsorcerer", "id": 2203121, "node_id": "MDQ6VXNlcjIyMDMxMjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/2203121?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dreamsorcerer", "html_url": "https://github.com/Dreamsorcerer", "followers_url": "https://api.github.com/users/Dreamsorcerer/followers", "following_url": "https://api.github.com/users/Dreamsorcerer/following{/other_user}", "gists_url": "https://api.github.com/users/Dreamsorcerer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dreamsorcerer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dreamsorcerer/subscriptions", "organizations_url": "https://api.github.com/users/Dreamsorcerer/orgs", "repos_url": "https://api.github.com/users/Dreamsorcerer/repos", "events_url": "https://api.github.com/users/Dreamsorcerer/events{/privacy}", "received_events_url": "https://api.github.com/users/Dreamsorcerer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-05-22T12:13:50Z", "updated_at": "2020-06-17T16:34:18Z", "closed_at": "2020-06-16T22:50:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be nice to have a direct Python interface to black that is easy to use and documented.\r\n\r\ne.g. \r\n```\r\nimport black\r\nblack.format([...files], **kwargs)\r\n```\r\n\r\nTrying to figure out how to do this from the source code of the main() function is not very easy, and appears that the code is changing, so not very maintainable either.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1448", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1448/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1448/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1448/events", "html_url": "https://github.com/psf/black/issues/1448", "id": 623075397, "node_id": "MDU6SXNzdWU2MjMwNzUzOTc=", "number": 1448, "title": "PEP 8: E203 whitespace before \":\"", "user": {"login": "badochov", "id": 26444395, "node_id": "MDQ6VXNlcjI2NDQ0Mzk1", "avatar_url": "https://avatars1.githubusercontent.com/u/26444395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badochov", "html_url": "https://github.com/badochov", "followers_url": "https://api.github.com/users/badochov/followers", "following_url": "https://api.github.com/users/badochov/following{/other_user}", "gists_url": "https://api.github.com/users/badochov/gists{/gist_id}", "starred_url": "https://api.github.com/users/badochov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badochov/subscriptions", "organizations_url": "https://api.github.com/users/badochov/orgs", "repos_url": "https://api.github.com/users/badochov/repos", "events_url": "https://api.github.com/users/badochov/events{/privacy}", "received_events_url": "https://api.github.com/users/badochov/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-22T09:20:41Z", "updated_at": "2020-05-29T17:53:07Z", "closed_at": "2020-05-22T09:46:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** \r\nBlack on slice with arithmetic operation in it results in violation of PEP 8.\r\n\r\n**To Reproduce**\r\nMake file with following code.\r\n`[0, 1][0+0:1]`\r\nRun Black with default arguments.\r\nIt results in: `[0, 1][0 + 0 : 1]` expected `[0, 1][0 + 0:1]`\r\n`[0, 1][(0+0):1]` results in `[0, 1][(0 + 0) : 1]` which is also not expected.\r\n`[0, 1][(0+0):1:1]` results in `[0, 1][(0 + 0) : 1 : 1]` so it has two incorrect whitespaces before \":\"\r\n\r\n**Environment (please complete the following information):**\r\n\r\nblack, version 19.10b0\r\nLinux/Python 3.8.3\r\n\r\n**Does this bug also happen on master?** To answer this, you have two options:\r\nYes it does.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1445", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1445/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1445/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1445/events", "html_url": "https://github.com/psf/black/issues/1445", "id": 622813422, "node_id": "MDU6SXNzdWU2MjI4MTM0MjI=", "number": 1445, "title": "PEP-440: No final releases", "user": {"login": "DustinMoriarty", "id": 4086489, "node_id": "MDQ6VXNlcjQwODY0ODk=", "avatar_url": "https://avatars1.githubusercontent.com/u/4086489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DustinMoriarty", "html_url": "https://github.com/DustinMoriarty", "followers_url": "https://api.github.com/users/DustinMoriarty/followers", "following_url": "https://api.github.com/users/DustinMoriarty/following{/other_user}", "gists_url": "https://api.github.com/users/DustinMoriarty/gists{/gist_id}", "starred_url": "https://api.github.com/users/DustinMoriarty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DustinMoriarty/subscriptions", "organizations_url": "https://api.github.com/users/DustinMoriarty/orgs", "repos_url": "https://api.github.com/users/DustinMoriarty/repos", "events_url": "https://api.github.com/users/DustinMoriarty/events{/privacy}", "received_events_url": "https://api.github.com/users/DustinMoriarty/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 869135448, "node_id": "MDU6TGFiZWw4NjkxMzU0NDg=", "url": "https://api.github.com/repos/psf/black/labels/design", "name": "design", "color": "0052cc", "default": false, "description": "What do we want Black to be?"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-21T21:52:13Z", "updated_at": "2020-05-21T23:05:52Z", "closed_at": "2020-05-21T23:05:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "All of the black releases are pre-releases such as 19.10b0. There are no final releases such as 19.10 as specified by PEP-440. This makes understanding versions of black confusing because it looks like I am requiring unreleased software in my dependencies.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1443", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1443/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1443/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1443/events", "html_url": "https://github.com/psf/black/issues/1443", "id": 622703136, "node_id": "MDU6SXNzdWU2MjI3MDMxMzY=", "number": 1443, "title": "Two blank lines between class methods", "user": {"login": "xxiang4", "id": 42788528, "node_id": "MDQ6VXNlcjQyNzg4NTI4", "avatar_url": "https://avatars3.githubusercontent.com/u/42788528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xxiang4", "html_url": "https://github.com/xxiang4", "followers_url": "https://api.github.com/users/xxiang4/followers", "following_url": "https://api.github.com/users/xxiang4/following{/other_user}", "gists_url": "https://api.github.com/users/xxiang4/gists{/gist_id}", "starred_url": "https://api.github.com/users/xxiang4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xxiang4/subscriptions", "organizations_url": "https://api.github.com/users/xxiang4/orgs", "repos_url": "https://api.github.com/users/xxiang4/repos", "events_url": "https://api.github.com/users/xxiang4/events{/privacy}", "received_events_url": "https://api.github.com/users/xxiang4/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 869135448, "node_id": "MDU6TGFiZWw4NjkxMzU0NDg=", "url": "https://api.github.com/repos/psf/black/labels/design", "name": "design", "color": "0052cc", "default": false, "description": "What do we want Black to be?"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-21T18:46:52Z", "updated_at": "2020-05-23T05:05:03Z", "closed_at": "2020-05-23T05:05:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "The following script is formatted using black. Is there a way to insert TWO blank lines between class methods. I would very much prefer the style for clarity, especially when the methods are long.\r\n\r\n```\r\nclass Arithmetic:\r\n    def add_one(self, num):\r\n        num += 1\r\n        return num\r\n\r\n    def add_two(self, num):\r\n        num += 2\r\n        return num\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1438", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1438/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1438/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1438/events", "html_url": "https://github.com/psf/black/issues/1438", "id": 622154119, "node_id": "MDU6SXNzdWU2MjIxNTQxMTk=", "number": 1438, "title": "Black produced different code on the second pass of the formatter.", "user": {"login": "WhyNotHugo", "id": 730811, "node_id": "MDQ6VXNlcjczMDgxMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/730811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WhyNotHugo", "html_url": "https://github.com/WhyNotHugo", "followers_url": "https://api.github.com/users/WhyNotHugo/followers", "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}", "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}", "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions", "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs", "repos_url": "https://api.github.com/users/WhyNotHugo/repos", "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}", "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-05-20T23:53:25Z", "updated_at": "2020-05-21T02:14:57Z", "closed_at": "2020-05-21T02:01:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug** A clear and concise description of what the bug is.\r\n\r\n```console\r\n$ black --version\r\nblack, version 19.10b0\r\n\r\n$ black django_afip/models.py\r\nerror: cannot format django_afip/models.py: INTERNAL ERROR: Black produced different code on the second pass of the formatter.  Please report a bug on https://github.com/psf/black/issues.  This diff might be helpful: /tmp/blk_5ttdpe90.log\r\nOh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\r\n1 file failed to reformat.\r\n```\r\n\r\nHere's the diff:\r\n```diff\r\n--- source\r\n+++ first pass\r\n@@ -22,35 +22,35 @@\r\n from zeep.exceptions import Fault\r\n \r\n from . import clients, crypto, exceptions, parsers, serializers\r\n \r\n logger = logging.getLogger(__name__)\r\n-TZ_AR = pytz.timezone(pytz.country_timezones['ar'][0])\r\n+TZ_AR = pytz.timezone(pytz.country_timezones[\"ar\"][0])\r\n \r\n \r\n # http://www.afip.gov.ar/afip/resol1415_anexo2.html\r\n VAT_CONDITIONS = (\r\n-    'IVA Responsable Inscripto',\r\n-    'IVA Responsable No Inscripto',\r\n-    'IVA Exento',\r\n-    'No Responsable IVA',\r\n-    'Responsable Monotributo',\r\n+    \"IVA Responsable Inscripto\",\r\n+    \"IVA Responsable No Inscripto\",\r\n+    \"IVA Exento\",\r\n+    \"No Responsable IVA\",\r\n+    \"Responsable Monotributo\",\r\n )\r\n # NOTE: If you find a VAT condition not listed here, please open an issue, and\r\n # a reference to where it's defined.\r\n CLIENT_VAT_CONDITIONS = (\r\n-    'IVA Responsable Inscripto',\r\n-    'IVA Responsable No Inscripto',\r\n-    'IVA Sujeto Exento',\r\n-    'Consumidor Final',\r\n-    'Responsable Monotributo',\r\n-    'Proveedor del Exterior',\r\n-    'Cliente del Exterior',\r\n-    'IVA Liberado - Ley N\u00ba 19.640',\r\n-    'IVA Responsable Inscripto - Agente de Percepci\u00f3n',\r\n-    'Monotributista Social',\r\n-    'IVA no alcanzado',\r\n+    \"IVA Responsable Inscripto\",\r\n+    \"IVA Responsable No Inscripto\",\r\n+    \"IVA Sujeto Exento\",\r\n+    \"Consumidor Final\",\r\n+    \"Responsable Monotributo\",\r\n+    \"Proveedor del Exterior\",\r\n+    \"Cliente del Exterior\",\r\n+    \"IVA Liberado - Ley N\u00ba 19.640\",\r\n+    \"IVA Responsable Inscripto - Agente de Percepci\u00f3n\",\r\n+    \"Monotributista Social\",\r\n+    \"IVA no alcanzado\",\r\n )\r\n \r\n \r\n def populate_all():\r\n     \"\"\"Fetch and store all metadata from the AFIP.\"\"\"\r\n@@ -85,11 +85,11 @@\r\n \r\n     The `default` parameter of a foreign key *MUST* be a primary key (and not\r\n     an instance), else migrations break. This helper method exists solely for\r\n     that purpose.\r\n     \"\"\"\r\n-    ct = CurrencyType.objects.filter(code='PES').first()\r\n+    ct = CurrencyType.objects.filter(code=\"PES\").first()\r\n     if ct:\r\n         return ct.pk\r\n \r\n \r\n def _get_storage_from_settings(setting_name=None):\r\n@@ -117,12 +117,12 @@\r\n         \"\"\"\r\n         Populate the database with types retrieved from the AFIP.\r\n \r\n         If no ticket is provided, the most recent available one will be used.\r\n         \"\"\"\r\n-        ticket = ticket or AuthTicket.objects.get_any_active('wsfe')\r\n-        client = clients.get_client('wsfe', ticket.owner.is_sandboxed)\r\n+        ticket = ticket or AuthTicket.objects.get_any_active(\"wsfe\")\r\n+        client = clients.get_client(\"wsfe\", ticket.owner.is_sandboxed)\r\n         service = getattr(client.service, self.__service_name)\r\n         response_xml = service(serializers.serialize_ticket(ticket))\r\n \r\n         check_response(response_xml)\r\n \r\n@@ -136,28 +136,14 @@\r\n \r\n \r\n class GenericAfipType(models.Model):\r\n     \"\"\"An abstract class for several of AFIP's metadata types.\"\"\"\r\n \r\n-    code = models.CharField(\r\n-        _('code'),\r\n-        max_length=3,\r\n-    )\r\n-    description = models.CharField(\r\n-        _('description'),\r\n-        max_length=250,\r\n-    )\r\n-    valid_from = models.DateField(\r\n-        _('valid from'),\r\n-        null=True,\r\n-        blank=True,\r\n-    )\r\n-    valid_to = models.DateField(\r\n-        _('valid until'),\r\n-        null=True,\r\n-        blank=True,\r\n-    )\r\n+    code = models.CharField(_(\"code\"), max_length=3,)\r\n+    description = models.CharField(_(\"description\"), max_length=250,)\r\n+    valid_from = models.DateField(_(\"valid from\"), null=True, blank=True,)\r\n+    valid_to = models.DateField(_(\"valid until\"), null=True, blank=True,)\r\n \r\n     def __str__(self):\r\n         return self.description\r\n \r\n     class Meta:\r\n@@ -169,88 +155,88 @@\r\n     An AFIP receipt type.\r\n \r\n     See the AFIP's documentation for details on each receipt type.\r\n     \"\"\"\r\n \r\n-    objects = GenericAfipTypeManager('FEParamGetTiposCbte', 'CbteTipo')\r\n-\r\n-    class Meta:\r\n-        verbose_name = _('receipt type')\r\n-        verbose_name_plural = _('receipt types')\r\n+    objects = GenericAfipTypeManager(\"FEParamGetTiposCbte\", \"CbteTipo\")\r\n+\r\n+    class Meta:\r\n+        verbose_name = _(\"receipt type\")\r\n+        verbose_name_plural = _(\"receipt types\")\r\n \r\n \r\n class ConceptType(GenericAfipType):\r\n     \"\"\"\r\n     An AFIP concept type.\r\n \r\n     See the AFIP's documentation for details on each concept type.\r\n     \"\"\"\r\n \r\n-    objects = GenericAfipTypeManager('FEParamGetTiposConcepto', 'ConceptoTipo')\r\n-\r\n-    class Meta:\r\n-        verbose_name = _('concept type')\r\n-        verbose_name_plural = _('concept types')\r\n+    objects = GenericAfipTypeManager(\"FEParamGetTiposConcepto\", \"ConceptoTipo\")\r\n+\r\n+    class Meta:\r\n+        verbose_name = _(\"concept type\")\r\n+        verbose_name_plural = _(\"concept types\")\r\n \r\n \r\n class DocumentType(GenericAfipType):\r\n     \"\"\"\r\n     An AFIP document type.\r\n \r\n     See the AFIP's documentation for details on each document type.\r\n     \"\"\"\r\n \r\n-    objects = GenericAfipTypeManager('FEParamGetTiposDoc', 'DocTipo')\r\n-\r\n-    class Meta:\r\n-        verbose_name = _('document type')\r\n-        verbose_name_plural = _('document types')\r\n+    objects = GenericAfipTypeManager(\"FEParamGetTiposDoc\", \"DocTipo\")\r\n+\r\n+    class Meta:\r\n+        verbose_name = _(\"document type\")\r\n+        verbose_name_plural = _(\"document types\")\r\n \r\n \r\n class VatType(GenericAfipType):\r\n     \"\"\"\r\n     An AFIP VAT type.\r\n \r\n     See the AFIP's documentation for details on each VAT type.\r\n     \"\"\"\r\n \r\n-    objects = GenericAfipTypeManager('FEParamGetTiposIva', 'IvaTipo')\r\n-\r\n-    class Meta:\r\n-        verbose_name = _('vat type')\r\n-        verbose_name_plural = _('vat types')\r\n+    objects = GenericAfipTypeManager(\"FEParamGetTiposIva\", \"IvaTipo\")\r\n+\r\n+    class Meta:\r\n+        verbose_name = _(\"vat type\")\r\n+        verbose_name_plural = _(\"vat types\")\r\n \r\n \r\n class TaxType(GenericAfipType):\r\n     \"\"\"\r\n     An AFIP tax type.\r\n \r\n     See the AFIP's documentation for details on each tax type.\r\n     \"\"\"\r\n \r\n-    objects = GenericAfipTypeManager('FEParamGetTiposTributos', 'TributoTipo')\r\n-\r\n-    class Meta:\r\n-        verbose_name = _('tax type')\r\n-        verbose_name_plural = _('tax types')\r\n+    objects = GenericAfipTypeManager(\"FEParamGetTiposTributos\", \"TributoTipo\")\r\n+\r\n+    class Meta:\r\n+        verbose_name = _(\"tax type\")\r\n+        verbose_name_plural = _(\"tax types\")\r\n \r\n \r\n class CurrencyType(GenericAfipType):\r\n     \"\"\"\r\n     An AFIP curreny type.\r\n \r\n     See the AFIP's documentation for details on each currency type.\r\n     \"\"\"\r\n \r\n-    objects = GenericAfipTypeManager('FEParamGetTiposMonedas', 'Moneda')\r\n+    objects = GenericAfipTypeManager(\"FEParamGetTiposMonedas\", \"Moneda\")\r\n \r\n     def __str__(self):\r\n-        return '{} ({})'.format(self.description, self.code)\r\n-\r\n-    class Meta:\r\n-        verbose_name = _('currency type')\r\n-        verbose_name_plural = _('currency types')\r\n+        return \"{} ({})\".format(self.description, self.code)\r\n+\r\n+    class Meta:\r\n+        verbose_name = _(\"currency type\")\r\n+        verbose_name_plural = _(\"currency types\")\r\n \r\n \r\n class TaxPayer(models.Model):\r\n     \"\"\"\r\n     Represents an AFIP TaxPayer.\r\n@@ -260,51 +246,49 @@\r\n     Note that multiple instances of this object can actually represent the same\r\n     taxpayer, each using a different key.\r\n     \"\"\"\r\n \r\n     name = models.CharField(\r\n-        _('name'),\r\n+        _(\"name\"),\r\n         max_length=32,\r\n-        help_text=_('A friendly name to recognize this taxpayer.'),\r\n+        help_text=_(\"A friendly name to recognize this taxpayer.\"),\r\n     )\r\n     key = models.FileField(\r\n-        _('key'),\r\n-        upload_to='afip/taxpayers/keys/',\r\n-        storage=_get_storage_from_settings('AFIP_KEY_STORAGE'),\r\n+        _(\"key\"),\r\n+        upload_to=\"afip/taxpayers/keys/\",\r\n+        storage=_get_storage_from_settings(\"AFIP_KEY_STORAGE\"),\r\n         blank=True,\r\n         null=True,\r\n     )\r\n     certificate = models.FileField(\r\n-        _('certificate'),\r\n-        upload_to='afip/taxpayers/certs/',\r\n-        storage=_get_storage_from_settings('AFIP_CERT_STORAGE'),\r\n+        _(\"certificate\"),\r\n+        upload_to=\"afip/taxpayers/certs/\",\r\n+        storage=_get_storage_from_settings(\"AFIP_CERT_STORAGE\"),\r\n         blank=True,\r\n         null=True,\r\n     )\r\n-    cuit = models.BigIntegerField(\r\n-        _('cuit'),\r\n-    )\r\n+    cuit = models.BigIntegerField(_(\"cuit\"),)\r\n     is_sandboxed = models.BooleanField(\r\n-        _('is sandboxed'),\r\n+        _(\"is sandboxed\"),\r\n         help_text=_(\r\n-            'Indicates if this taxpayer interacts with the sandbox servers '\r\n-            'rather than the production servers'\r\n-        )\r\n+            \"Indicates if this taxpayer interacts with the sandbox servers \"\r\n+            \"rather than the production servers\"\r\n+        ),\r\n     )\r\n     certificate_expiration = models.DateTimeField(\r\n-        _('certificate expiration'),\r\n+        _(\"certificate expiration\"),\r\n         editable=False,\r\n         null=True,  # Either no cert, or and old TaxPayer\r\n         help_text=_(\r\n-            'Stores expiration for the current certificate. Note that this '\r\n-            'field is updated pre-save, so the value may be invalid for '\r\n-            'unsaved models.'\r\n+            \"Stores expiration for the current certificate. Note that this \"\r\n+            \"field is updated pre-save, so the value may be invalid for \"\r\n+            \"unsaved models.\"\r\n         ),\r\n     )\r\n     active_since = models.DateField(\r\n-        _('active since'),\r\n-        help_text=_('Date since which this taxpayer has been legally active.'),\r\n+        _(\"active since\"),\r\n+        help_text=_(\"Date since which this taxpayer has been legally active.\"),\r\n     )\r\n \r\n     @property\r\n     def certificate_object(self):\r\n         \"\"\"\r\n@@ -327,11 +311,11 @@\r\n         this value is stored into ``certificate_expiration`` when an instance\r\n         is saved, so you should generally prefer that method (since this one\r\n         requires reading and parsing the entire certificate).\r\n         \"\"\"\r\n         datestring = self.certificate_object.get_notAfter().decode()\r\n-        dt = datetime.strptime(datestring, '%Y%m%d%H%M%SZ')\r\n+        dt = datetime.strptime(datestring, \"%Y%m%d%H%M%SZ\")\r\n         return dt.replace(tzinfo=timezone.utc)\r\n \r\n     def generate_key(self, force=False):\r\n         \"\"\"\r\n         Creates a key file for this TaxPayer\r\n@@ -340,35 +324,33 @@\r\n         immediately saves it.\r\n \r\n         Returns True if and only if a key was created.\r\n         \"\"\"\r\n         if self.key and not force:\r\n-            logger.warning(\r\n-                'Tried to generate key for a taxpayer that already had one'\r\n-            )\r\n+            logger.warning(\"Tried to generate key for a taxpayer that already had one\")\r\n             return False\r\n \r\n-        with NamedTemporaryFile(suffix='.key') as file_:\r\n+        with NamedTemporaryFile(suffix=\".key\") as file_:\r\n             crypto.create_key(file_)\r\n-            self.key = File(file_, name='{}.key'.format(uuid.uuid4().hex))\r\n+            self.key = File(file_, name=\"{}.key\".format(uuid.uuid4().hex))\r\n             self.save()\r\n \r\n         return True\r\n \r\n-    def generate_csr(self, basename='djangoafip'):\r\n+    def generate_csr(self, basename=\"djangoafip\"):\r\n         \"\"\"\r\n         Creates a CSR for this TaxPayer's key\r\n \r\n         Creates a file-like object that contains the CSR which can be used to\r\n         request a new certificate from AFIP.\r\n         \"\"\"\r\n         csr = BytesIO()\r\n         crypto.create_csr(\r\n             self.key.file,\r\n             self.name,\r\n-            '{}{}'.format(basename, int(datetime.now().timestamp())),\r\n-            'CUIT {}'.format(self.cuit),\r\n+            \"{}{}\".format(basename, int(datetime.now().timestamp())),\r\n+            \"CUIT {}\".format(self.cuit),\r\n             csr,\r\n         )\r\n         csr.seek(0)\r\n         return csr\r\n \r\n@@ -378,13 +360,13 @@\r\n         ticket.authorize()\r\n         return ticket\r\n \r\n     def get_ticket(self, service):\r\n         \"\"\"Return an existing AuthTicket for a given service.\"\"\"\r\n-        return self.auth_tickets \\\r\n-            .filter(expires__gt=datetime.now(timezone.utc), service=service) \\\r\n-            .last()\r\n+        return self.auth_tickets.filter(\r\n+            expires__gt=datetime.now(timezone.utc), service=service\r\n+        ).last()\r\n \r\n     def get_or_create_ticket(self, service):\r\n         \"\"\"\r\n         Return or create a new AuthTicket for a given serivce.\r\n \r\n@@ -403,45 +385,43 @@\r\n         Fetch all point of sales from the WS and store (or update) them\r\n         locally.\r\n \r\n         Returns a list of tuples with the format (pos, created,).\r\n         \"\"\"\r\n-        ticket = ticket or self.get_or_create_ticket('wsfe')\r\n-\r\n-        client = clients.get_client('wsfe', self.is_sandboxed)\r\n+        ticket = ticket or self.get_or_create_ticket(\"wsfe\")\r\n+\r\n+        client = clients.get_client(\"wsfe\", self.is_sandboxed)\r\n         response = client.service.FEParamGetPtosVenta(\r\n             serializers.serialize_ticket(ticket),\r\n         )\r\n         check_response(response)\r\n \r\n         results = []\r\n         for pos_data in response.ResultGet.PtoVenta:\r\n-            results.append(PointOfSales.objects.update_or_create(\r\n-                number=pos_data.Nro,\r\n-                owner=self,\r\n-                defaults={\r\n-                    'issuance_type': pos_data.EmisionTipo,\r\n-                    'blocked': pos_data.Bloqueado == 'N',\r\n-                    'drop_date': parsers.parse_date(pos_data.FchBaja),\r\n-                }\r\n-            ))\r\n+            results.append(\r\n+                PointOfSales.objects.update_or_create(\r\n+                    number=pos_data.Nro,\r\n+                    owner=self,\r\n+                    defaults={\r\n+                        \"issuance_type\": pos_data.EmisionTipo,\r\n+                        \"blocked\": pos_data.Bloqueado == \"N\",\r\n+                        \"drop_date\": parsers.parse_date(pos_data.FchBaja),\r\n+                    },\r\n+                )\r\n+            )\r\n \r\n         return results\r\n \r\n     def __repr__(self):\r\n-        return '<TaxPayer {}: {}, CUIT {}>'.format(\r\n-            self.pk,\r\n-            self.name,\r\n-            self.cuit,\r\n-        )\r\n+        return \"<TaxPayer {}: {}, CUIT {}>\".format(self.pk, self.name, self.cuit,)\r\n \r\n     def __str__(self):\r\n         return str(self.name)\r\n \r\n     class Meta:\r\n-        verbose_name = _('taxpayer')\r\n-        verbose_name_plural = _('taxpayers')\r\n+        verbose_name = _(\"taxpayer\")\r\n+        verbose_name_plural = _(\"taxpayers\")\r\n \r\n \r\n class TaxPayerProfile(models.Model):\r\n     \"\"\"\r\n     Metadata about a taxpayer used for printable receipts.\r\n@@ -453,82 +433,73 @@\r\n     for default values.\r\n     \"\"\"\r\n \r\n     taxpayer = models.OneToOneField(\r\n         TaxPayer,\r\n-        related_name='profile',\r\n-        verbose_name=_('taxpayer'),\r\n+        related_name=\"profile\",\r\n+        verbose_name=_(\"taxpayer\"),\r\n         on_delete=models.CASCADE,\r\n     )\r\n-    issuing_name = models.CharField(\r\n-        max_length=128,\r\n-        verbose_name=_('issuing name'),\r\n-    )\r\n-    issuing_address = models.TextField(\r\n-        _('issuing address'),\r\n-    )\r\n+    issuing_name = models.CharField(max_length=128, verbose_name=_(\"issuing name\"),)\r\n+    issuing_address = models.TextField(_(\"issuing address\"),)\r\n     issuing_email = models.CharField(\r\n-        max_length=128,\r\n-        verbose_name=_('issuing email'),\r\n-        blank=True,\r\n-        null=True,\r\n+        max_length=128, verbose_name=_(\"issuing email\"), blank=True, null=True,\r\n     )\r\n     vat_condition = models.CharField(\r\n         max_length=48,\r\n         choices=((condition, condition,) for condition in VAT_CONDITIONS),\r\n-        verbose_name=_('vat condition'),\r\n+        verbose_name=_(\"vat condition\"),\r\n     )\r\n     gross_income_condition = models.CharField(\r\n-        max_length=48,\r\n-        verbose_name=_('gross income condition'),\r\n+        max_length=48, verbose_name=_(\"gross income condition\"),\r\n     )\r\n     sales_terms = models.CharField(\r\n         max_length=48,\r\n-        verbose_name=_('sales terms'),\r\n+        verbose_name=_(\"sales terms\"),\r\n         help_text=_(\r\n-            'The terms of the sale printed onto receipts by default '\r\n-            '(eg: single payment, checking account, etc).'\r\n+            \"The terms of the sale printed onto receipts by default \"\r\n+            \"(eg: single payment, checking account, etc).\"\r\n         ),\r\n     )\r\n \r\n     class Meta:\r\n-        verbose_name = _('taxpayer profile')\r\n-        verbose_name_plural = _('taxpayer profiles')\r\n+        verbose_name = _(\"taxpayer profile\")\r\n+        verbose_name_plural = _(\"taxpayer profiles\")\r\n \r\n \r\n class TaxPayerExtras(models.Model):\r\n     \"\"\"Holds optional extra data for taxpayers.\"\"\"\r\n+\r\n     taxpayer = models.OneToOneField(\r\n         TaxPayer,\r\n-        related_name='extras',\r\n-        verbose_name=_('taxpayer'),\r\n+        related_name=\"extras\",\r\n+        verbose_name=_(\"taxpayer\"),\r\n         on_delete=models.CASCADE,\r\n     )\r\n     logo = models.ImageField(\r\n-        verbose_name=_('logo'),\r\n-        upload_to='afip/taxpayers/logos/',\r\n-        storage=_get_storage_from_settings('AFIP_LOGO_STORAGE'),\r\n+        verbose_name=_(\"logo\"),\r\n+        upload_to=\"afip/taxpayers/logos/\",\r\n+        storage=_get_storage_from_settings(\"AFIP_LOGO_STORAGE\"),\r\n         blank=True,\r\n         null=True,\r\n-        help_text=_('A logo to use when generating printable receipts.'),\r\n+        help_text=_(\"A logo to use when generating printable receipts.\"),\r\n     )\r\n \r\n     @property\r\n     def logo_as_data_uri(self):\r\n         \"\"\"This TaxPayer's logo as a data uri.\"\"\"\r\n         _, ext = os.path.splitext(self.logo.file.name)\r\n         with self.logo.open() as f:\r\n             data = base64.b64encode(f.read())\r\n \r\n-        return 'data:image/{};base64,{}'.format(\r\n-            ext[1:],  # Remove the leading dot.\r\n-            data.decode()\r\n+        return \"data:image/{};base64,{}\".format(\r\n+            ext[1:], data.decode()  # Remove the leading dot.\r\n         )\r\n \r\n     class Meta:\r\n-        verbose_name = _('taxpayer extras')\r\n-        verbose_name_plural = _('taxpayers extras')\r\n+        verbose_name = _(\"taxpayer extras\")\r\n+        verbose_name_plural = _(\"taxpayers extras\")\r\n \r\n \r\n class PointOfSales(models.Model):\r\n     \"\"\"\r\n     Represents an existing AFIP point of sale.\r\n@@ -538,65 +509,62 @@\r\n     these programatically.\r\n \r\n     Note that deleting or altering these models will not affect upstream point\r\n     of sales.\r\n     \"\"\"\r\n-    number = models.PositiveSmallIntegerField(\r\n-        _('number'),\r\n-    )\r\n+\r\n+    number = models.PositiveSmallIntegerField(_(\"number\"),)\r\n     issuance_type = models.CharField(\r\n-        _('issuance type'),\r\n+        _(\"issuance type\"),\r\n         max_length=24,\r\n-        help_text='Indicates if this POS emits using CAE and CAEA.',\r\n+        help_text=\"Indicates if this POS emits using CAE and CAEA.\",\r\n     )\r\n     blocked = models.BooleanField(\r\n-        _('blocked'),\r\n+        _(\"blocked\"),\r\n         help_text=(\r\n             \"Indicates if this POS has been blocked by AFIP. Note that this \"\r\n-            \"field is only set when creating POS's.\"),\r\n+            \"field is only set when creating POS's.\"\r\n+        ),\r\n     )\r\n     drop_date = models.DateField(\r\n-        _('drop date'),\r\n+        _(\"drop date\"),\r\n         null=True,\r\n         blank=True,\r\n         help_text=\"Is set if AFIP informs that this POS has been dropped.Note that this field is only set when creating POS's.\",\r\n     )\r\n \r\n     owner = models.ForeignKey(\r\n         TaxPayer,\r\n-        related_name='points_of_sales',\r\n-        verbose_name=_('owner'),\r\n+        related_name=\"points_of_sales\",\r\n+        verbose_name=_(\"owner\"),\r\n         on_delete=models.CASCADE,\r\n     )\r\n \r\n     def __str__(self):\r\n         return str(self.number)\r\n \r\n     class Meta:\r\n-        unique_together = (\r\n-            ('number', 'owner'),\r\n-        )\r\n-        verbose_name = _('point of sales')\r\n-        verbose_name_plural = _('points of sales')\r\n+        unique_together = ((\"number\", \"owner\"),)\r\n+        verbose_name = _(\"point of sales\")\r\n+        verbose_name_plural = _(\"points of sales\")\r\n \r\n \r\n class AuthTicketManager(models.Manager):\r\n-\r\n     def get_any_active(self, service):\r\n         ticket = AuthTicket.objects.filter(\r\n             token__isnull=False,\r\n             expires__gt=datetime.now(timezone.utc),\r\n             service=service,\r\n         ).first()\r\n         if ticket:\r\n             return ticket\r\n \r\n-        taxpayer = TaxPayer.objects.order_by('?').first()\r\n+        taxpayer = TaxPayer.objects.order_by(\"?\").first()\r\n \r\n         if not taxpayer:\r\n             raise exceptions.AuthenticationError(\r\n-                _('There are no taxpayers to generate a ticket.'),\r\n+                _(\"There are no taxpayers to generate a ticket.\"),\r\n             )\r\n \r\n         return taxpayer.create_ticket(service)\r\n \r\n \r\n@@ -620,59 +588,40 @@\r\n     def default_unique_id():\r\n         return random.randint(0, 2147483647)\r\n \r\n     owner = models.ForeignKey(\r\n         TaxPayer,\r\n-        verbose_name=_('owner'),\r\n-        related_name='auth_tickets',\r\n+        verbose_name=_(\"owner\"),\r\n+        related_name=\"auth_tickets\",\r\n         on_delete=models.CASCADE,\r\n     )\r\n-    unique_id = models.IntegerField(\r\n-        _('unique id'),\r\n-        default=default_unique_id,\r\n-    )\r\n-    generated = models.DateTimeField(\r\n-        _('generated'),\r\n-        default=default_generated,\r\n-    )\r\n-    expires = models.DateTimeField(\r\n-        _('expires'),\r\n-        default=default_expires,\r\n-    )\r\n+    unique_id = models.IntegerField(_(\"unique id\"), default=default_unique_id,)\r\n+    generated = models.DateTimeField(_(\"generated\"), default=default_generated,)\r\n+    expires = models.DateTimeField(_(\"expires\"), default=default_expires,)\r\n     service = models.CharField(\r\n-        _('service'),\r\n+        _(\"service\"),\r\n         max_length=6,\r\n-        help_text=_('Service for which this ticket has been authorized'),\r\n-    )\r\n-\r\n-    token = models.TextField(\r\n-        _('token'),\r\n-    )\r\n-    signature = models.TextField(\r\n-        _('signature'),\r\n-    )\r\n+        help_text=_(\"Service for which this ticket has been authorized\"),\r\n+    )\r\n+\r\n+    token = models.TextField(_(\"token\"),)\r\n+    signature = models.TextField(_(\"signature\"),)\r\n \r\n     objects = AuthTicketManager()\r\n \r\n-    TOKEN_XPATH = '/loginTicketResponse/credentials/token'\r\n-    SIGN_XPATH = '/loginTicketResponse/credentials/sign'\r\n+    TOKEN_XPATH = \"/loginTicketResponse/credentials/token\"\r\n+    SIGN_XPATH = \"/loginTicketResponse/credentials/sign\"\r\n \r\n     def __create_request_xml(self):\r\n-        request_xml = (\r\n-            E.loginTicketRequest(\r\n-                {'version': '1.0'},\r\n-                E.header(\r\n-                    E.uniqueId(str(self.unique_id)),\r\n-                    E.generationTime(\r\n-                        serializers.serialize_datetime(self.generated)\r\n-                    ),\r\n-                    E.expirationTime(\r\n-                        serializers.serialize_datetime(self.expires)\r\n-                    ),\r\n-                ),\r\n-                E.service(self.service)\r\n-            )\r\n+        request_xml = E.loginTicketRequest(\r\n+            {\"version\": \"1.0\"},\r\n+            E.header(\r\n+                E.uniqueId(str(self.unique_id)),\r\n+                E.generationTime(serializers.serialize_datetime(self.generated)),\r\n+                E.expirationTime(serializers.serialize_datetime(self.expires)),\r\n+            ),\r\n+            E.service(self.service),\r\n         )\r\n         return etree.tostring(request_xml, pretty_print=True)\r\n \r\n     def __sign_request(self, request):\r\n         self.owner.certificate.file.open()\r\n@@ -689,32 +638,32 @@\r\n         \"\"\"Send this ticket to AFIP for authorization.\"\"\"\r\n         request = self.__create_request_xml()\r\n         request = self.__sign_request(request)\r\n         request = b64encode(request).decode()\r\n \r\n-        client = clients.get_client('wsaa', self.owner.is_sandboxed)\r\n+        client = clients.get_client(\"wsaa\", self.owner.is_sandboxed)\r\n         try:\r\n             raw_response = client.service.loginCms(request)\r\n         except Fault as e:\r\n-            if str(e) == 'Certificado expirado':\r\n+            if str(e) == \"Certificado expirado\":\r\n                 raise exceptions.CertificateExpired(str(e)) from e\r\n-            if str(e) == 'Certificado no emitido por AC de confianza':\r\n+            if str(e) == \"Certificado no emitido por AC de confianza\":\r\n                 raise exceptions.UntrustedCertificate(str(e)) from e\r\n             raise exceptions.AuthenticationError(str(e)) from e\r\n-        response = etree.fromstring(raw_response.encode('utf-8'))\r\n+        response = etree.fromstring(raw_response.encode(\"utf-8\"))\r\n \r\n         self.token = response.xpath(self.TOKEN_XPATH)[0].text\r\n         self.signature = response.xpath(self.SIGN_XPATH)[0].text\r\n \r\n         self.save()\r\n \r\n     def __str__(self):\r\n         return str(self.unique_id)\r\n \r\n     class Meta:\r\n-        verbose_name = _('authorization ticket')\r\n-        verbose_name_plural = _('authorization tickets')\r\n+        verbose_name = _(\"authorization ticket\")\r\n+        verbose_name_plural = _(\"authorization tickets\")\r\n \r\n \r\n class ReceiptQuerySet(models.QuerySet):\r\n     \"\"\"\r\n     The default queryset obtains when querying via :class:`~.ReceiptManager`.\r\n@@ -725,23 +674,22 @@\r\n         Assign numbers in preparation for validating these receipts.\r\n \r\n         WARNING: Don't call the method manually unless you know what you're\r\n         doing!\r\n         \"\"\"\r\n-        first = self.select_related('point_of_sales', 'receipt_type').first()\r\n-\r\n-        next_num = Receipt.objects.fetch_last_receipt_number(\r\n-            first.point_of_sales,\r\n-            first.receipt_type,\r\n-        ) + 1\r\n+        first = self.select_related(\"point_of_sales\", \"receipt_type\").first()\r\n+\r\n+        next_num = (\r\n+            Receipt.objects.fetch_last_receipt_number(\r\n+                first.point_of_sales, first.receipt_type,\r\n+            )\r\n+            + 1\r\n+        )\r\n \r\n         for receipt in self.filter(receipt_number__isnull=True):\r\n             # Atomically update receipt number\r\n-            Receipt.objects.filter(\r\n-                pk=receipt.id,\r\n-                receipt_number__isnull=True,\r\n-            ).update(\r\n+            Receipt.objects.filter(pk=receipt.id, receipt_number__isnull=True,).update(\r\n                 receipt_number=next_num,\r\n             )\r\n             next_num += 1\r\n \r\n     def check_groupable(self):\r\n@@ -753,12 +701,11 @@\r\n \r\n         Returns the same queryset is all receipts are groupable, otherwise,\r\n         raises :class:`~.CannotValidateTogether`.\r\n         \"\"\"\r\n         types = self.aggregate(\r\n-            poses=Count('point_of_sales_id', ),\r\n-            types=Count('receipt_type'),\r\n+            poses=Count(\"point_of_sales_id\",), types=Count(\"receipt_type\"),\r\n         )\r\n \r\n         if set(types.values()) > {1}:\r\n             raise exceptions.CannotValidateTogether()\r\n \r\n@@ -789,23 +736,18 @@\r\n         \"\"\"\r\n         # Skip any already-validated ones:\r\n         qs = self.filter(validation__isnull=True).check_groupable()\r\n         if qs.count() == 0:\r\n             return []\r\n-        qs.order_by('issued_date', 'id')._assign_numbers()\r\n+        qs.order_by(\"issued_date\", \"id\")._assign_numbers()\r\n \r\n         return qs._validate(ticket)\r\n \r\n     def _validate(self, ticket=None):\r\n         first = self.first()\r\n-        ticket = (\r\n-            ticket or\r\n-            first.point_of_sales.owner.get_or_create_ticket('wsfe')\r\n-        )\r\n-        client = clients.get_client(\r\n-            'wsfe', first.point_of_sales.owner.is_sandboxed\r\n-        )\r\n+        ticket = ticket or first.point_of_sales.owner.get_or_create_ticket(\"wsfe\")\r\n+        client = clients.get_client(\"wsfe\", first.point_of_sales.owner.is_sandboxed)\r\n         response = client.service.FECAESolicitar(\r\n             serializers.serialize_ticket(ticket),\r\n             serializers.serialize_multiple_receipts(self),\r\n         )\r\n         check_response(response)\r\n@@ -814,31 +756,25 @@\r\n             if cae_data.Resultado == ReceiptValidation.RESULT_APPROVED:\r\n                 validation = ReceiptValidation.objects.create(\r\n                     result=cae_data.Resultado,\r\n                     cae=cae_data.CAE,\r\n                     cae_expiration=parsers.parse_date(cae_data.CAEFchVto),\r\n-                    receipt=self.get(\r\n-                        receipt_number=cae_data.CbteDesde,\r\n-                    ),\r\n+                    receipt=self.get(receipt_number=cae_data.CbteDesde,),\r\n                     processed_date=parsers.parse_datetime(\r\n                         response.FeCabResp.FchProceso,\r\n                     ),\r\n                 )\r\n                 if cae_data.Observaciones:\r\n                     for obs in cae_data.Observaciones.Obs:\r\n                         observation = Observation.objects.create(\r\n-                            code=obs.Code,\r\n-                            message=obs.Msg,\r\n+                            code=obs.Code, message=obs.Msg,\r\n                         )\r\n                     validation.observations.add(observation)\r\n             elif cae_data.Observaciones:\r\n                 for obs in cae_data.Observaciones.Obs:\r\n                     errs.append(\r\n-                        'Error {}: {}'.format(\r\n-                            obs.Code,\r\n-                            parsers.parse_string(obs.Msg),\r\n-                        )\r\n+                        \"Error {}: {}\".format(obs.Code, parsers.parse_string(obs.Msg),)\r\n                     )\r\n \r\n         # Remove the number from ones that failed to validate:\r\n         self.filter(validation__isnull=True).update(receipt_number=None)\r\n \r\n@@ -852,14 +788,14 @@\r\n     You should generally access this using ``Receipt.objects``.\r\n     \"\"\"\r\n \r\n     def fetch_last_receipt_number(self, point_of_sales, receipt_type):\r\n         \"\"\"Returns the number for the last validated receipt.\"\"\"\r\n-        client = clients.get_client('wsfe', point_of_sales.owner.is_sandboxed)\r\n+        client = clients.get_client(\"wsfe\", point_of_sales.owner.is_sandboxed)\r\n         response_xml = client.service.FECompUltimoAutorizado(\r\n             serializers.serialize_ticket(\r\n-                point_of_sales.owner.get_or_create_ticket('wsfe')\r\n+                point_of_sales.owner.get_or_create_ticket(\"wsfe\")\r\n             ),\r\n             point_of_sales.number,\r\n             receipt_type.code,\r\n         )\r\n         check_response(response_xml)\r\n@@ -881,11 +817,11 @@\r\n \r\n         return response_xml.CbteNro\r\n \r\n     def get_queryset(self):\r\n         return ReceiptQuerySet(self.model, using=self._db).select_related(\r\n-            'receipt_type',\r\n+            \"receipt_type\",\r\n         )\r\n \r\n \r\n class Receipt(models.Model):\r\n     \"\"\"\r\n@@ -900,172 +836,158 @@\r\n     All ``document_`` fields contain the recipient's data.\r\n \r\n     If the taxpayer has taxes or pays VAT, you need to attach :class:`~.Tax`\r\n     and/or :class:`~.Vat` instances to the Receipt.\r\n     \"\"\"\r\n+\r\n     point_of_sales = models.ForeignKey(\r\n         PointOfSales,\r\n-        related_name='receipts',\r\n-        verbose_name=_('point of sales'),\r\n+        related_name=\"receipts\",\r\n+        verbose_name=_(\"point of sales\"),\r\n         on_delete=models.PROTECT,\r\n     )\r\n     receipt_type = models.ForeignKey(\r\n         ReceiptType,\r\n-        related_name='receipts',\r\n-        verbose_name=_('receipt type'),\r\n+        related_name=\"receipts\",\r\n+        verbose_name=_(\"receipt type\"),\r\n         on_delete=models.PROTECT,\r\n     )\r\n     concept = models.ForeignKey(\r\n         ConceptType,\r\n-        verbose_name=_('concept'),\r\n-        related_name='receipts',\r\n+        verbose_name=_(\"concept\"),\r\n+        related_name=\"receipts\",\r\n         on_delete=models.PROTECT,\r\n     )\r\n     document_type = models.ForeignKey(\r\n         DocumentType,\r\n-        verbose_name=_('document type'),\r\n-        related_name='receipts',\r\n+        verbose_name=_(\"document type\"),\r\n+        related_name=\"receipts\",\r\n         help_text=_(\r\n-            'The document type of the customer to whom this receipt '\r\n-            'is addressed'\r\n+            \"The document type of the customer to whom this receipt \" \"is addressed\"\r\n         ),\r\n         on_delete=models.PROTECT,\r\n     )\r\n     document_number = models.BigIntegerField(\r\n-        _('document number'),\r\n+        _(\"document number\"),\r\n         help_text=_(\r\n-            'The document number of the customer to whom this receipt '\r\n-            'is addressed'\r\n-        )\r\n+            \"The document number of the customer to whom this receipt \" \"is addressed\"\r\n+        ),\r\n     )\r\n     # NOTE: WS will expect receipt_from and receipt_to.\r\n     receipt_number = models.PositiveIntegerField(\r\n-        _('receipt number'),\r\n+        _(\"receipt number\"),\r\n         null=True,\r\n         blank=True,\r\n         help_text=_(\r\n-            'If left blank, the next valid number will assigned when '\r\n-            'validating the receipt.'\r\n-        )\r\n+            \"If left blank, the next valid number will assigned when \"\r\n+            \"validating the receipt.\"\r\n+        ),\r\n     )\r\n     issued_date = models.DateField(\r\n-        verbose_name=_('issued date'),\r\n-        help_text=_('Can diverge up to 5 days for good, or 10 days otherwise'),\r\n+        verbose_name=_(\"issued date\"),\r\n+        help_text=_(\"Can diverge up to 5 days for good, or 10 days otherwise\"),\r\n     )\r\n     total_amount = models.DecimalField(\r\n         # ImpTotal\r\n-        _('total amount'),\r\n+        _(\"total amount\"),\r\n         max_digits=15,\r\n         decimal_places=2,\r\n         help_text=_(\r\n-            'Must be equal to the sum of net_taxed, exempt_amount, net_taxes, '\r\n-            'and all taxes and vats.'\r\n-        )\r\n+            \"Must be equal to the sum of net_taxed, exempt_amount, net_taxes, \"\r\n+            \"and all taxes and vats.\"\r\n+        ),\r\n     )\r\n     net_untaxed = models.DecimalField(\r\n         # ImpTotConc\r\n-        _('total untaxable amount'),\r\n+        _(\"total untaxable amount\"),\r\n         max_digits=15,\r\n         decimal_places=2,\r\n         help_text=_(\r\n-            'The total amount to which taxes do not apply. '\r\n-            'For C-type receipts, this must be zero.'\r\n+            \"The total amount to which taxes do not apply. \"\r\n+            \"For C-type receipts, this must be zero.\"\r\n         ),\r\n     )\r\n     net_taxed = models.DecimalField(\r\n         # ImpNeto\r\n-        _('total taxable amount'),\r\n+        _(\"total taxable amount\"),\r\n         max_digits=15,\r\n         decimal_places=2,\r\n         help_text=_(\r\n-            'The total amount to which taxes apply. '\r\n-            'For C-type receipts, this is equal to the subtotal.'\r\n+            \"The total amount to which taxes apply. \"\r\n+            \"For C-type receipts, this is equal to the subtotal.\"\r\n         ),\r\n     )\r\n     exempt_amount = models.DecimalField(\r\n         # ImpOpEx\r\n         # S\u00f3lo para emisores que son IVA exento\r\n-        _('exempt amount'),\r\n+        _(\"exempt amount\"),\r\n         max_digits=15,\r\n         decimal_places=2,\r\n         help_text=_(\r\n-            'Only for categories which are tax-exempt. '\r\n-            'For C-type receipts, this must be zero.'\r\n+            \"Only for categories which are tax-exempt. \"\r\n+            \"For C-type receipts, this must be zero.\"\r\n         ),\r\n     )\r\n     service_start = models.DateField(\r\n-        _('service start date'),\r\n-        help_text=_(\r\n-            'Date on which a service started. No applicable for goods.'\r\n-        ),\r\n+        _(\"service start date\"),\r\n+        help_text=_(\"Date on which a service started. No applicable for goods.\"),\r\n         null=True,\r\n         blank=True,\r\n     )\r\n     service_end = models.DateField(\r\n-        _('service end date'),\r\n-        help_text=_(\r\n-            'Date on which a service ended. No applicable for goods.'\r\n-        ),\r\n+        _(\"service end date\"),\r\n+        help_text=_(\"Date on which a service ended. No applicable for goods.\"),\r\n         null=True,\r\n         blank=True,\r\n     )\r\n     expiration_date = models.DateField(\r\n-        _('receipt expiration date'),\r\n-        help_text=_(\r\n-            'Date on which this receipt expires. No applicable for goods.'\r\n-        ),\r\n+        _(\"receipt expiration date\"),\r\n+        help_text=_(\"Date on which this receipt expires. No applicable for goods.\"),\r\n         null=True,\r\n         blank=True,\r\n     )\r\n     currency = models.ForeignKey(\r\n         CurrencyType,\r\n-        verbose_name=_('currency'),\r\n-        related_name='documents',\r\n-        help_text=_(\r\n-            'Currency in which this receipt is issued.',\r\n-        ),\r\n+        verbose_name=_(\"currency\"),\r\n+        related_name=\"documents\",\r\n+        help_text=_(\"Currency in which this receipt is issued.\",),\r\n         on_delete=models.PROTECT,\r\n         default=first_currency,\r\n     )\r\n     currency_quote = models.DecimalField(\r\n-        _('currency quote'),\r\n+        _(\"currency quote\"),\r\n         max_digits=10,\r\n         decimal_places=6,\r\n         default=1,\r\n-        help_text=_(\r\n-            'Quote of the day for the currency used in the receipt',\r\n-        ),\r\n+        help_text=_(\"Quote of the day for the currency used in the receipt\",),\r\n     )\r\n     related_receipts = models.ManyToManyField(\r\n-        'Receipt',\r\n-        verbose_name=_('related receipts'),\r\n-        blank=True,\r\n+        \"Receipt\", verbose_name=_(\"related receipts\"), blank=True,\r\n     )\r\n \r\n     objects = ReceiptManager()\r\n \r\n     # TODO: Not implemented: optionals\r\n     # TODO: methods to validate totals\r\n \r\n     @property\r\n     def total_vat(self):\r\n         \"\"\"Returns the sum of all Vat objects.\"\"\"\r\n-        q = Vat.objects.filter(receipt=self).aggregate(total=Sum('amount'))\r\n-        return q['total'] or 0\r\n+        q = Vat.objects.filter(receipt=self).aggregate(total=Sum(\"amount\"))\r\n+        return q[\"total\"] or 0\r\n \r\n     @property\r\n     def total_tax(self):\r\n         \"\"\"Returns the sum of all Tax objects.\"\"\"\r\n-        q = Tax.objects.filter(receipt=self).aggregate(total=Sum('amount'))\r\n-        return q['total'] or 0\r\n+        q = Tax.objects.filter(receipt=self).aggregate(total=Sum(\"amount\"))\r\n+        return q[\"total\"] or 0\r\n \r\n     @property\r\n     def formatted_number(self):\r\n         if self.receipt_number:\r\n-            return '{:04d}-{:08d}'.format(\r\n-                self.point_of_sales.number,\r\n-                self.receipt_number,\r\n+            return \"{:04d}-{:08d}\".format(\r\n+                self.point_of_sales.number, self.receipt_number,\r\n             )\r\n         return None\r\n \r\n     @property\r\n     def is_validated(self):\r\n@@ -1113,35 +1035,29 @@\r\n         if raise_ and rv:\r\n             raise exceptions.ValidationError(rv[0])\r\n         return rv\r\n \r\n     def __repr__(self):\r\n-        return '<Receipt {}: {} {} for {}>'.format(\r\n-            self.pk,\r\n-            self.receipt_type,\r\n-            self.receipt_number,\r\n-            self.point_of_sales.owner,\r\n+        return \"<Receipt {}: {} {} for {}>\".format(\r\n+            self.pk, self.receipt_type, self.receipt_number, self.point_of_sales.owner,\r\n         )\r\n \r\n     def __str__(self):\r\n         if self.receipt_number:\r\n-            return '{} {}'.format(self.receipt_type, self.formatted_number)\r\n+            return \"{} {}\".format(self.receipt_type, self.formatted_number)\r\n         else:\r\n-            return _('Unnumbered %s') % self.receipt_type\r\n-\r\n-    class Meta:\r\n-        ordering = ('issued_date',)\r\n-        verbose_name = _('receipt')\r\n-        verbose_name_plural = _('receipts')\r\n-        unique_together = (\r\n-            ('point_of_sales', 'receipt_type', 'receipt_number',)\r\n-        )\r\n+            return _(\"Unnumbered %s\") % self.receipt_type\r\n+\r\n+    class Meta:\r\n+        ordering = (\"issued_date\",)\r\n+        verbose_name = _(\"receipt\")\r\n+        verbose_name_plural = _(\"receipts\")\r\n+        unique_together = (\"point_of_sales\", \"receipt_type\", \"receipt_number\",)\r\n         # TODO: index_together...\r\n \r\n \r\n class ReceiptPDFManager(models.Manager):\r\n-\r\n     def create_for_receipt(self, receipt, **kwargs):\r\n         \"\"\"\r\n         Creates a ReceiptPDF object for a given receipt. Does not actually\r\n         generate the related PDF file.\r\n \r\n@@ -1155,11 +1071,11 @@\r\n             profile = TaxPayerProfile.objects.get(\r\n                 taxpayer__points_of_sales__receipts=receipt,\r\n             )\r\n         except TaxPayerProfile.DoesNotExist:\r\n             raise exceptions.DjangoAfipException(\r\n-                'Cannot generate a PDF for taxpayer with no profile',\r\n+                \"Cannot generate a PDF for taxpayer with no profile\",\r\n             )\r\n         pdf = ReceiptPDF.objects.create(\r\n             receipt=receipt,\r\n             issuing_name=profile.issuing_name,\r\n             issuing_address=profile.issuing_address,\r\n@@ -1188,79 +1104,60 @@\r\n     regenerate the PDF file.\r\n \r\n     PDF generation is skipped if the receipt has not been validated.\r\n     \"\"\"\r\n \r\n-    def upload_to(self, filename='untitled', instance=None):\r\n+    def upload_to(self, filename=\"untitled\", instance=None):\r\n         \"\"\"\r\n         Returns the full path for generated receipts.\r\n \r\n         These are bucketed inside nested directories, to avoid hundreds of\r\n         thousands of children in single directories (which can make reading\r\n         them excessively slow).\r\n         \"\"\"\r\n         _, extension = os.path.splitext(os.path.basename(filename))\r\n         uuid = uuid4().hex\r\n         buckets = uuid[0:2], uuid[2:4]\r\n-        filename = ''.join([uuid4().hex, extension])\r\n-\r\n-        return os.path.join('afip/receipts', buckets[0], buckets[1], filename)\r\n+        filename = \"\".join([uuid4().hex, extension])\r\n+\r\n+        return os.path.join(\"afip/receipts\", buckets[0], buckets[1], filename)\r\n \r\n     receipt = models.OneToOneField(\r\n-        Receipt,\r\n-        verbose_name=_('receipt'),\r\n-        on_delete=models.PROTECT,\r\n+        Receipt, verbose_name=_(\"receipt\"), on_delete=models.PROTECT,\r\n     )\r\n     pdf_file = models.FileField(\r\n-        verbose_name=_('pdf file'),\r\n+        verbose_name=_(\"pdf file\"),\r\n         upload_to=upload_to,\r\n-        storage=_get_storage_from_settings('AFIP_PDF_STORAGE'),\r\n+        storage=_get_storage_from_settings(\"AFIP_PDF_STORAGE\"),\r\n         blank=True,\r\n         null=True,\r\n-        help_text=_('The actual file which contains the PDF data.'),\r\n-    )\r\n-    issuing_name = models.CharField(\r\n-        max_length=128,\r\n-        verbose_name=_('issuing name'),\r\n-    )\r\n-    issuing_address = models.TextField(\r\n-        _('issuing address'),\r\n-    )\r\n+        help_text=_(\"The actual file which contains the PDF data.\"),\r\n+    )\r\n+    issuing_name = models.CharField(max_length=128, verbose_name=_(\"issuing name\"),)\r\n+    issuing_address = models.TextField(_(\"issuing address\"),)\r\n     issuing_email = models.CharField(\r\n-        max_length=128,\r\n-        verbose_name=_('issuing email'),\r\n-        blank=True,\r\n-        null=True,\r\n+        max_length=128, verbose_name=_(\"issuing email\"), blank=True, null=True,\r\n     )\r\n     vat_condition = models.CharField(\r\n         max_length=48,\r\n         choices=((condition, condition,) for condition in VAT_CONDITIONS),\r\n-        verbose_name=_('vat condition'),\r\n+        verbose_name=_(\"vat condition\"),\r\n     )\r\n     gross_income_condition = models.CharField(\r\n-        max_length=48,\r\n-        verbose_name=_('gross income condition'),\r\n-    )\r\n-    client_name = models.CharField(\r\n-        max_length=128,\r\n-        verbose_name=_('client name'),\r\n-    )\r\n-    client_address = models.TextField(\r\n-        _('client address'),\r\n-        blank=True,\r\n-    )\r\n+        max_length=48, verbose_name=_(\"gross income condition\"),\r\n+    )\r\n+    client_name = models.CharField(max_length=128, verbose_name=_(\"client name\"),)\r\n+    client_address = models.TextField(_(\"client address\"), blank=True,)\r\n     client_vat_condition = models.CharField(\r\n         max_length=48,\r\n         choices=((cond, cond,) for cond in CLIENT_VAT_CONDITIONS),\r\n-        verbose_name=_('client vat condition'),\r\n+        verbose_name=_(\"client vat condition\"),\r\n     )\r\n     sales_terms = models.CharField(\r\n         max_length=48,\r\n-        verbose_name=_('sales terms'),\r\n-        help_text=_(\r\n-            'Should be something like \"Cash\", \"Payable in 30 days\", etc'\r\n-        ),\r\n+        verbose_name=_(\"sales terms\"),\r\n+        help_text=_('Should be something like \"Cash\", \"Payable in 30 days\", etc'),\r\n     )\r\n \r\n     objects = ReceiptPDFManager()\r\n \r\n     def save_pdf(self, save_model=True):\r\n@@ -1274,31 +1171,29 @@\r\n         \"\"\"\r\n         from django_afip.views import ReceiptPDFView\r\n \r\n         if not self.receipt.is_validated:\r\n             raise exceptions.DjangoAfipException(\r\n-                _('Cannot generate pdf for non-authorized receipt')\r\n+                _(\"Cannot generate pdf for non-authorized receipt\")\r\n             )\r\n \r\n-        self.pdf_file = File(BytesIO(), name='{}.pdf'.format(uuid.uuid4().hex))\r\n+        self.pdf_file = File(BytesIO(), name=\"{}.pdf\".format(uuid.uuid4().hex))\r\n         render_pdf(\r\n-            template='receipts/code_{}.html'.format(\r\n-                self.receipt.receipt_type.code,\r\n-            ),\r\n+            template=\"receipts/code_{}.html\".format(self.receipt.receipt_type.code,),\r\n             file_=self.pdf_file,\r\n             context=ReceiptPDFView.get_context_for_pk(self.receipt_id),\r\n         )\r\n \r\n         if save_model:\r\n             self.save()\r\n \r\n     def __str__(self):\r\n-        return _('Receipt PDF for %s') % self.receipt_id\r\n-\r\n-    class Meta:\r\n-        verbose_name = _('receipt pdf')\r\n-        verbose_name_plural = _('receipt pdfs')\r\n+        return _(\"Receipt PDF for %s\") % self.receipt_id\r\n+\r\n+    class Meta:\r\n+        verbose_name = _(\"receipt pdf\")\r\n+        verbose_name_plural = _(\"receipt pdfs\")\r\n \r\n \r\n class ReceiptEntry(models.Model):\r\n     \"\"\"\r\n     An entry in a receipt.\r\n@@ -1310,31 +1205,26 @@\r\n     multiple products with different :class:`~.VatType`.\r\n     \"\"\"\r\n \r\n     receipt = models.ForeignKey(\r\n         Receipt,\r\n-        related_name='entries',\r\n-        verbose_name=_('receipt'),\r\n+        related_name=\"entries\",\r\n+        verbose_name=_(\"receipt\"),\r\n         on_delete=models.PROTECT,\r\n     )\r\n-    description = models.CharField(\r\n-        max_length=128,\r\n-        verbose_name=_('description'),\r\n-    )\r\n-    quantity = models.PositiveSmallIntegerField(\r\n-        _('quantity'),\r\n-    )\r\n+    description = models.CharField(max_length=128, verbose_name=_(\"description\"),)\r\n+    quantity = models.PositiveSmallIntegerField(_(\"quantity\"),)\r\n     unit_price = models.DecimalField(\r\n-        _('unit price'),\r\n+        _(\"unit price\"),\r\n         max_digits=15,\r\n         decimal_places=2,\r\n-        help_text=_('Price per unit before vat or taxes.'),\r\n+        help_text=_(\"Price per unit before vat or taxes.\"),\r\n     )\r\n     vat = models.ForeignKey(\r\n         VatType,\r\n-        related_name='receipt_entries',\r\n-        verbose_name=_('vat'),\r\n+        related_name=\"receipt_entries\",\r\n+        verbose_name=_(\"vat\"),\r\n         blank=True,\r\n         null=True,\r\n         on_delete=models.PROTECT,\r\n     )\r\n \r\n@@ -1342,106 +1232,73 @@\r\n     def total_price(self):\r\n         \"\"\"The total price for this line (quantity * price).\"\"\"\r\n         return self.quantity * self.unit_price\r\n \r\n     class Meta:\r\n-        verbose_name = _('receipt entry')\r\n-        verbose_name_plural = _('receipt entries')\r\n+        verbose_name = _(\"receipt entry\")\r\n+        verbose_name_plural = _(\"receipt entries\")\r\n \r\n \r\n class Tax(models.Model):\r\n     \"\"\"A tax (type+amount) for a specific Receipt.\"\"\"\r\n \r\n     tax_type = models.ForeignKey(\r\n-        TaxType,\r\n-        verbose_name=_('tax type'),\r\n-        on_delete=models.PROTECT,\r\n-    )\r\n-    description = models.CharField(\r\n-        _('description'),\r\n-        max_length=80,\r\n-    )\r\n+        TaxType, verbose_name=_(\"tax type\"), on_delete=models.PROTECT,\r\n+    )\r\n+    description = models.CharField(_(\"description\"), max_length=80,)\r\n     base_amount = models.DecimalField(\r\n-        _('base amount'),\r\n-        max_digits=15,\r\n-        decimal_places=2,\r\n-    )\r\n-    aliquot = models.DecimalField(\r\n-        _('aliquot'),\r\n-        max_digits=5,\r\n-        decimal_places=2,\r\n-    )\r\n-    amount = models.DecimalField(\r\n-        _('amount'),\r\n-        max_digits=15,\r\n-        decimal_places=2,\r\n-    )\r\n+        _(\"base amount\"), max_digits=15, decimal_places=2,\r\n+    )\r\n+    aliquot = models.DecimalField(_(\"aliquot\"), max_digits=5, decimal_places=2,)\r\n+    amount = models.DecimalField(_(\"amount\"), max_digits=15, decimal_places=2,)\r\n \r\n     receipt = models.ForeignKey(\r\n-        Receipt,\r\n-        related_name='taxes',\r\n-        on_delete=models.PROTECT,\r\n+        Receipt, related_name=\"taxes\", on_delete=models.PROTECT,\r\n     )\r\n \r\n     def compute_amount(self):\r\n         \"\"\"Auto-assign and return the total amount for this tax.\"\"\"\r\n         self.amount = self.base_amount * self.aliquot / 100\r\n         return self.amount\r\n \r\n     class Meta:\r\n-        verbose_name = _('tax')\r\n-        verbose_name_plural = _('taxes')\r\n+        verbose_name = _(\"tax\")\r\n+        verbose_name_plural = _(\"taxes\")\r\n \r\n \r\n class Vat(models.Model):\r\n     \"\"\"A VAT (type+amount) for a specific Receipt.\"\"\"\r\n \r\n     vat_type = models.ForeignKey(\r\n-        VatType,\r\n-        verbose_name=_('vat type'),\r\n-        on_delete=models.PROTECT,\r\n+        VatType, verbose_name=_(\"vat type\"), on_delete=models.PROTECT,\r\n     )\r\n     base_amount = models.DecimalField(\r\n-        _('base amount'),\r\n-        max_digits=15,\r\n-        decimal_places=2,\r\n-    )\r\n-    amount = models.DecimalField(\r\n-        _('amount'),\r\n-        max_digits=15,\r\n-        decimal_places=2,\r\n-    )\r\n-\r\n-    receipt = models.ForeignKey(\r\n-        Receipt,\r\n-        related_name='vat',\r\n-        on_delete=models.PROTECT,\r\n-    )\r\n-\r\n-    class Meta:\r\n-        verbose_name = _('vat')\r\n-        verbose_name_plural = _('vat')\r\n+        _(\"base amount\"), max_digits=15, decimal_places=2,\r\n+    )\r\n+    amount = models.DecimalField(_(\"amount\"), max_digits=15, decimal_places=2,)\r\n+\r\n+    receipt = models.ForeignKey(Receipt, related_name=\"vat\", on_delete=models.PROTECT,)\r\n+\r\n+    class Meta:\r\n+        verbose_name = _(\"vat\")\r\n+        verbose_name_plural = _(\"vat\")\r\n \r\n \r\n class Observation(models.Model):\r\n     \"\"\"\r\n     An observation returned by AFIP.\r\n \r\n     AFIP seems to assign re-used codes to Observation, so we actually store\r\n     them as separate objects, and link to them from failed validations.\r\n     \"\"\"\r\n-    code = models.PositiveSmallIntegerField(\r\n-        _('code'),\r\n-    )\r\n-    message = models.CharField(\r\n-        _('message'),\r\n-        max_length=255,\r\n-    )\r\n-\r\n-    class Meta:\r\n-        verbose_name = _('observation')\r\n-        verbose_name_plural = _('observations')\r\n+\r\n+    code = models.PositiveSmallIntegerField(_(\"code\"),)\r\n+    message = models.CharField(_(\"message\"), max_length=255,)\r\n+\r\n+    class Meta:\r\n+        verbose_name = _(\"observation\")\r\n+        verbose_name_plural = _(\"observations\")\r\n \r\n \r\n class ReceiptValidation(models.Model):\r\n     \"\"\"\r\n     The validation for a single :class:`~.Receipt`.\r\n@@ -1450,65 +1307,56 @@\r\n     and the CAE expiration, unless validation has failed.\r\n \r\n     The ``observation`` field may contain any data returned by AFIP regarding\r\n     validation failure.\r\n     \"\"\"\r\n-    RESULT_APPROVED = 'A'\r\n-    RESULT_REJECTED = 'R'\r\n+\r\n+    RESULT_APPROVED = \"A\"\r\n+    RESULT_REJECTED = \"R\"\r\n \r\n     # TODO: replace this with a `successful` boolean field.\r\n     result = models.CharField(\r\n-        _('result'),\r\n+        _(\"result\"),\r\n         max_length=1,\r\n-        choices=(\r\n-            (RESULT_APPROVED, _('approved')),\r\n-            (RESULT_REJECTED, _('rejected')),\r\n-        ),\r\n-        help_text=_('Indicates whether the validation was succesful or not'),\r\n-    )\r\n-    processed_date = models.DateTimeField(\r\n-        _('processed date'),\r\n-    )\r\n+        choices=((RESULT_APPROVED, _(\"approved\")), (RESULT_REJECTED, _(\"rejected\")),),\r\n+        help_text=_(\"Indicates whether the validation was succesful or not\"),\r\n+    )\r\n+    processed_date = models.DateTimeField(_(\"processed date\"),)\r\n     cae = models.CharField(\r\n-        _('cae'),\r\n-        max_length=14,\r\n-        help_text=_('The CAE as returned by the AFIP'),\r\n+        _(\"cae\"), max_length=14, help_text=_(\"The CAE as returned by the AFIP\"),\r\n     )\r\n     cae_expiration = models.DateField(\r\n-        _('cae expiration'),\r\n-        help_text=_('The CAE expiration as returned by the AFIP'),\r\n+        _(\"cae expiration\"), help_text=_(\"The CAE expiration as returned by the AFIP\"),\r\n     )\r\n     observations = models.ManyToManyField(\r\n         Observation,\r\n-        verbose_name=_('observations'),\r\n-        related_name='validations',\r\n+        verbose_name=_(\"observations\"),\r\n+        related_name=\"validations\",\r\n         help_text=_(\r\n-            'The observations as returned by the AFIP. These are generally '\r\n-            'present for failed validations.'\r\n+            \"The observations as returned by the AFIP. These are generally \"\r\n+            \"present for failed validations.\"\r\n         ),\r\n     )\r\n \r\n     receipt = models.OneToOneField(\r\n         Receipt,\r\n-        related_name='validation',\r\n-        verbose_name=_('receipt'),\r\n-        help_text=_('The Receipt for which this validation applies'),\r\n+        related_name=\"validation\",\r\n+        verbose_name=_(\"receipt\"),\r\n+        help_text=_(\"The Receipt for which this validation applies\"),\r\n         on_delete=models.PROTECT,\r\n     )\r\n \r\n     def __str__(self):\r\n         return _(\"Validation for %s. Result: %s\") % (\r\n-            self.receipt, self.get_result_display()\r\n+            self.receipt,\r\n+            self.get_result_display(),\r\n         )\r\n \r\n     def __repr__(self):\r\n-        return '<{} {}: {} for Receipt {}>'.format(\r\n-            self.__class__.__name__,\r\n-            self.pk,\r\n-            self.result,\r\n-            self.receipt_id,\r\n+        return \"<{} {}: {} for Receipt {}>\".format(\r\n+            self.__class__.__name__, self.pk, self.result, self.receipt_id,\r\n         )\r\n \r\n     class Meta:\r\n-        verbose_name = _('receipt validation')\r\n-        verbose_name_plural = _('receipt validations')\r\n-\r\n+        verbose_name = _(\"receipt validation\")\r\n+        verbose_name_plural = _(\"receipt validations\")\r\n+\r\n--- first pass\r\n+++ second pass\r\n@@ -1049,11 +1049,15 @@\r\n \r\n     class Meta:\r\n         ordering = (\"issued_date\",)\r\n         verbose_name = _(\"receipt\")\r\n         verbose_name_plural = _(\"receipts\")\r\n-        unique_together = (\"point_of_sales\", \"receipt_type\", \"receipt_number\",)\r\n+        unique_together = (\r\n+            \"point_of_sales\",\r\n+            \"receipt_type\",\r\n+            \"receipt_number\",\r\n+        )\r\n         # TODO: index_together...\r\n \r\n \r\n class ReceiptPDFManager(models.Manager):\r\n     def create_for_receipt(self, receipt, **kwargs):\r\n```\r\n\r\nAlso happens with master:\r\n\r\n```\r\n$ black --version\r\nblack, version 19.10b1.dev100+gb0f3798\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1437", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1437/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1437/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1437/events", "html_url": "https://github.com/psf/black/issues/1437", "id": 621512944, "node_id": "MDU6SXNzdWU2MjE1MTI5NDQ=", "number": 1437, "title": "Black and Flake8 don't agree on one particular formatting", "user": {"login": "MennoNij", "id": 12186072, "node_id": "MDQ6VXNlcjEyMTg2MDcy", "avatar_url": "https://avatars3.githubusercontent.com/u/12186072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MennoNij", "html_url": "https://github.com/MennoNij", "followers_url": "https://api.github.com/users/MennoNij/followers", "following_url": "https://api.github.com/users/MennoNij/following{/other_user}", "gists_url": "https://api.github.com/users/MennoNij/gists{/gist_id}", "starred_url": "https://api.github.com/users/MennoNij/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MennoNij/subscriptions", "organizations_url": "https://api.github.com/users/MennoNij/orgs", "repos_url": "https://api.github.com/users/MennoNij/repos", "events_url": "https://api.github.com/users/MennoNij/events{/privacy}", "received_events_url": "https://api.github.com/users/MennoNij/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-20T07:03:26Z", "updated_at": "2020-06-05T07:42:48Z", "closed_at": "2020-05-20T16:23:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "There seems to be one instance in our code that triggers a reformat in Black which is not approved by flake8. Given the line\r\n```\r\nyield lst[i:i + n]\r\n```\r\nBlack will reformat this to\r\n```\r\nyield lst[i : i + n]\r\n```\r\nThis will trigger an error in flake8 however:\r\n```\r\nE203 whitespace before ':'\r\n```\r\nThis is with black version 19.10b0 and flake 3.8.1 on Python 3.6.10", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1435", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1435/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1435/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1435/events", "html_url": "https://github.com/psf/black/issues/1435", "id": 621309344, "node_id": "MDU6SXNzdWU2MjEzMDkzNDQ=", "number": 1435, "title": "[Question] [Awaiting PR] How do you build the documentation?", "user": {"login": "ichard26", "id": 63936253, "node_id": "MDQ6VXNlcjYzOTM2MjUz", "avatar_url": "https://avatars3.githubusercontent.com/u/63936253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ichard26", "html_url": "https://github.com/ichard26", "followers_url": "https://api.github.com/users/ichard26/followers", "following_url": "https://api.github.com/users/ichard26/following{/other_user}", "gists_url": "https://api.github.com/users/ichard26/gists{/gist_id}", "starred_url": "https://api.github.com/users/ichard26/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ichard26/subscriptions", "organizations_url": "https://api.github.com/users/ichard26/orgs", "repos_url": "https://api.github.com/users/ichard26/repos", "events_url": "https://api.github.com/users/ichard26/events{/privacy}", "received_events_url": "https://api.github.com/users/ichard26/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-19T21:54:35Z", "updated_at": "2020-05-24T16:37:47Z", "closed_at": "2020-05-24T16:37:47Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "So, while working on #1430, I decided learning how to build the documentation was probably a good idea so I can see whether I break the docs. The problem is that I have never used Sphinx. So after doing some quick Google searches, I ran `make html` in the docs directory. Which errored out:\r\n\r\n```console\r\nPS R:\\programming\\black\\docs> ./make html\r\nRunning Sphinx v2.4.4\r\nmaking output directory... done\r\nc:\\users\\user\\.virtualenvs\\black-rhkux7ap\\lib\\site-packages\\sphinx\\util\\compat.py:30: RemovedInSphinx30Warning: The config variable \"source_parsers\" is deprecated. Please update your extension for the parser and remove the setting.\r\n  warnings.warn('The config variable \"source_parsers\" is deprecated. '\r\nc:\\users\\user\\.virtualenvs\\black-rhkux7ap\\lib\\site-packages\\sphinx\\util\\compat.py:36: RemovedInSphinx30Warning: app.add_source_parser() does not support suffix argument. Use app.add_source_suffix() instead.\r\n  app.add_source_parser(suffix, parser)\r\nloading intersphinx inventory from https://docs.python.org/3/objects.inv...\r\nbuilding [mo]: targets for 0 po files that are out of date\r\nbuilding [html]: targets for 24 source files that are out of date\r\nupdating environment: [new config] 24 added, 0 changed, 0 removed\r\nc:\\users\\user\\.virtualenvs\\black-rhkux7ap\\lib\\site-packages\\recommonmark\\parser.py:75: UserWarning: Container node skipped: type=document\r\n  warn(\"Container node skipped: type={0}\".format(mdnode.t))\r\nreading sources... [ 37%] flake_bugbear\r\nException occurred:\r\n  File \"c:\\users\\user\\.virtualenvs\\black-rhkux7ap\\lib\\site-packages\\recommonmark\\parser.py\", line 225, in visit_list\r\n    self.current_node.append(list_node)\r\nAttributeError: 'NoneType' object has no attribute 'append'\r\nThe full traceback has been saved in C:\\Users\\User\\AppData\\Local\\Temp\\sphinx-err-ne49li9r.log, if you want to report the issue to the developers.\r\nPlease also report this if it was a user error, so that a better error message can be provided next time.\r\nA bug report can be filed in the tracker at <https://github.com/sphinx-doc/sphinx/issues>. Thanks!\r\n```\r\nThen, I updated Sphinx to the latest version and tried again. While the docs did build successfully, it wasn't usable:\r\n![image](https://user-images.githubusercontent.com/63936253/82379160-71e31980-99f4-11ea-9326-543bf9bc494e.png)\r\nI also experienced 366 warnings during the build, which seems *excessive*. Most of them were `toctree contains reference to document 'authors' that doesn't have a title: no link will be generated` warnings, and (almost) the rest was Markdown warnings.\r\n\r\n[log.txt](https://github.com/psf/black/files/4653366/log.txt)\r\n(warning: it's more than 1000 lines long)\r\n\r\nI also tried installing `Sphinx==1.7.2` and `recommonmark==0.4.0` listed in `docs/requirements.txt`, which didn't work as well.\r\n\r\nIn short, **what on earth am I doing wrong here** and **how you do build the _Black_ documentation**?\r\n\r\n**Environment:**\r\n* OS version: `Windows 10 Home Edition Build 18363`\r\n* Python version: `Python 3.8.1`\r\n* _Black_ version: `19.10b1.dev100+gb0f3798`\r\n\r\n---\r\n\r\nSorry about the unnecessary noise. I just figured that someone in the _Black_ community would know how to build the documentation. This is probably a stupid question. Feel free to close this issue if needed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1434", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1434/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1434/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1434/events", "html_url": "https://github.com/psf/black/issues/1434", "id": 620993311, "node_id": "MDU6SXNzdWU2MjA5OTMzMTE=", "number": 1434, "title": "Wrong line number in error message", "user": {"login": "mbarkhau", "id": 446561, "node_id": "MDQ6VXNlcjQ0NjU2MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/446561?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbarkhau", "html_url": "https://github.com/mbarkhau", "followers_url": "https://api.github.com/users/mbarkhau/followers", "following_url": "https://api.github.com/users/mbarkhau/following{/other_user}", "gists_url": "https://api.github.com/users/mbarkhau/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbarkhau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbarkhau/subscriptions", "organizations_url": "https://api.github.com/users/mbarkhau/orgs", "repos_url": "https://api.github.com/users/mbarkhau/repos", "events_url": "https://api.github.com/users/mbarkhau/events{/privacy}", "received_events_url": "https://api.github.com/users/mbarkhau/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-19T13:48:52Z", "updated_at": "2020-05-19T14:54:37Z", "closed_at": "2020-05-19T14:36:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a file with some invalid syntax on line 4.\r\n\r\n```\r\nx = 1+1\r\nprint(f\"asdfasd {x} asdf\")\r\n\r\ny = 1+1\r\nprint(f\"asdfasd {} asdf\")\r\n```\r\n\r\nWhen I try to format it, black raises an error, but for the incorrect line number\r\n\r\n```shell\r\n$ black --check fmt_error_msg.py\r\nerror: cannot format fmt_error_msg.py: cannot use --safe with this file; failed to parse source file.  AST error message: invalid syntax (<unknown>, line 2)\r\n$ black --version\r\nblack, version 19.10b0\r\n```\r\n\r\nI would have expected this to point to line 4.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1433", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1433/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1433/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1433/events", "html_url": "https://github.com/psf/black/issues/1433", "id": 620330331, "node_id": "MDU6SXNzdWU2MjAzMzAzMzE=", "number": 1433, "title": "Issue with the \"Magic Trailing Comma\" in collections in function calls", "user": {"login": "scolby33", "id": 9711846, "node_id": "MDQ6VXNlcjk3MTE4NDY=", "avatar_url": "https://avatars3.githubusercontent.com/u/9711846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scolby33", "html_url": "https://github.com/scolby33", "followers_url": "https://api.github.com/users/scolby33/followers", "following_url": "https://api.github.com/users/scolby33/following{/other_user}", "gists_url": "https://api.github.com/users/scolby33/gists{/gist_id}", "starred_url": "https://api.github.com/users/scolby33/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scolby33/subscriptions", "organizations_url": "https://api.github.com/users/scolby33/orgs", "repos_url": "https://api.github.com/users/scolby33/repos", "events_url": "https://api.github.com/users/scolby33/events{/privacy}", "received_events_url": "https://api.github.com/users/scolby33/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-18T16:05:25Z", "updated_at": "2020-06-16T22:51:31Z", "closed_at": "2020-06-16T22:51:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** Trailing commas are left in collections that remain on one line in a function call\r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\n1. Take this file:\r\n```python\r\ntest_call(\r\n    {\"some_key\": \"some_value\", \"other_key\": \"other_value\",}\r\n)\r\n```\r\nThis also happens with the set literal `{\"some_key\", \"some_value\", \"other_key\", \"other_value\",}` and the list literal `[\"some_key\", \"some_value\", \"other_key\", \"other_value\",]`.\r\n\r\n2. Run _Black_ on it with these arguments `black black_test.py`\r\n3. See error: the file is unchanged\r\n\r\n**Expected behavior**\r\nBased on the [documentation on trailing commas](https://github.com/psf/black#trailing-commas), I would expect the final comma after `\"other_value\"` to be removed.\r\n\r\n> Unnecessary trailing commas are removed if an expression fits in one line.\r\n\r\nThis case doesn't match either of the stated exceptions: it is neither a tuple expression with one element nor a function signature with a `*`.\r\n\r\nBased on the [documentation on the magic trailing comma](https://github.com/psf/black#the-magic-trailing-comma), I would expect the dictionary literal to be expanded to multiple lines.\r\n\r\n> Now, you can communicate that you don't want [the literal collapsed to one line] by putting a trailing comma in the collection yourself. When you do, Black will know to always explode your collection into one item per line.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: 19.10b0, installed via pipx\r\n- OS and Python version: macOS 10.15.4 with Python 3.8.2 installed via pyenv\r\n\r\n**Does this bug also happen on master?** Yes: tested on the Black Playground\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1431", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1431/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1431/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1431/events", "html_url": "https://github.com/psf/black/issues/1431", "id": 620305601, "node_id": "MDU6SXNzdWU2MjAzMDU2MDE=", "number": 1431, "title": "Black should enforce capitals and proper puncuation in docstrings", "user": {"login": "Luke-zhang-04", "id": 55749227, "node_id": "MDQ6VXNlcjU1NzQ5MjI3", "avatar_url": "https://avatars2.githubusercontent.com/u/55749227?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Luke-zhang-04", "html_url": "https://github.com/Luke-zhang-04", "followers_url": "https://api.github.com/users/Luke-zhang-04/followers", "following_url": "https://api.github.com/users/Luke-zhang-04/following{/other_user}", "gists_url": "https://api.github.com/users/Luke-zhang-04/gists{/gist_id}", "starred_url": "https://api.github.com/users/Luke-zhang-04/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Luke-zhang-04/subscriptions", "organizations_url": "https://api.github.com/users/Luke-zhang-04/orgs", "repos_url": "https://api.github.com/users/Luke-zhang-04/repos", "events_url": "https://api.github.com/users/Luke-zhang-04/events{/privacy}", "received_events_url": "https://api.github.com/users/Luke-zhang-04/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 869135448, "node_id": "MDU6TGFiZWw4NjkxMzU0NDg=", "url": "https://api.github.com/repos/psf/black/labels/design", "name": "design", "color": "0052cc", "default": false, "description": "What do we want Black to be?"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T15:33:30Z", "updated_at": "2020-05-18T21:51:53Z", "closed_at": "2020-05-18T21:51:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Describe the style change ##\r\nBlack isn't in compliance with [PEP 257 docstring conventions](https://www.python.org/dev/peps/pep-0257/)\r\n\r\n## Examples in the current _Black_ style ##\r\n```\r\ndef f():\r\n    \"\"\"make sure this code is blackened\"\"\"\r\n    pass\r\n```\r\n\r\n## Desired style ##\r\n```\r\ndef f():\r\n\t\"\"\"Make sure this code is blackened.\"\"\"\r\n    pass\r\n```\r\n\r\n## Additional ##\r\nIs not a duplicate of #144, which only cares about the positioning of the docstrings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1430", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1430/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1430/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1430/events", "html_url": "https://github.com/psf/black/issues/1430", "id": 620210257, "node_id": "MDU6SXNzdWU2MjAyMTAyNTc=", "number": 1430, "title": "Split up README.md + Update Docs Config", "user": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 871279155, "node_id": "MDU6TGFiZWw4NzEyNzkxNTU=", "url": "https://api.github.com/repos/psf/black/labels/documentation", "name": "documentation", "color": "fbcd00", "default": true, "description": "Missing pieces of docs"}, {"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-05-18T13:28:43Z", "updated_at": "2020-05-24T16:37:47Z", "closed_at": "2020-05-24T16:37:47Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "README.md is getting very large. Let\u2019s split up the components documentation to start with:\r\n- blackd\r\n- black-primer\r\n- editor plugins\r\n\r\nPlease link from README.md to the specific documentation in the repo or the readthedocs equivalent.\r\n\r\nTotally open to other ideas here too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1429", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1429/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1429/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1429/events", "html_url": "https://github.com/psf/black/issues/1429", "id": 620191254, "node_id": "MDU6SXNzdWU2MjAxOTEyNTQ=", "number": 1429, "title": "INTERNAL ERROR report", "user": {"login": "MarcoGorelli", "id": 33491632, "node_id": "MDQ6VXNlcjMzNDkxNjMy", "avatar_url": "https://avatars2.githubusercontent.com/u/33491632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MarcoGorelli", "html_url": "https://github.com/MarcoGorelli", "followers_url": "https://api.github.com/users/MarcoGorelli/followers", "following_url": "https://api.github.com/users/MarcoGorelli/following{/other_user}", "gists_url": "https://api.github.com/users/MarcoGorelli/gists{/gist_id}", "starred_url": "https://api.github.com/users/MarcoGorelli/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MarcoGorelli/subscriptions", "organizations_url": "https://api.github.com/users/MarcoGorelli/orgs", "repos_url": "https://api.github.com/users/MarcoGorelli/repos", "events_url": "https://api.github.com/users/MarcoGorelli/events{/privacy}", "received_events_url": "https://api.github.com/users/MarcoGorelli/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-18T13:01:59Z", "updated_at": "2020-07-10T08:55:43Z", "closed_at": "2020-07-10T08:55:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** A clear and concise description of what the bug is.\r\n\r\nI ran `black` on my codebase and got the following error:\r\n```python-traceback\r\nerror: cannot format /mnt/c/data1/SSF_TV/pipeline/two_y_prediction.py: INTERNAL ERROR: Black produced code that is not equivalent to the source.  Please report a bug on https://github.com/psf/black/issues.  This diff might be helpful: /tmp/blk_pns90zrz.log  \r\n```\r\nAs requested, I have opened an issue. Here is the log:\r\n```diff\r\n$ cat /tmp/blk_pns90zrz.log\r\n--- src\r\n+++ dst\r\n@@ -2209,63 +2209,10 @@\r\n                   type_comment=\r\n                     None,  # NoneType\r\n                   value=\r\n                     Call(\r\n                       args=\r\n-                        Subscript(\r\n-                          ctx=\r\n-                            Load(\r\n-                            )  # /Load\r\n-                          slice=\r\n-                            Slice(\r\n-                              lower=\r\n-                                None,  # NoneType\r\n-                              step=\r\n-                                None,  # NoneType\r\n-                              upper=\r\n-                                Name(\r\n-                                  ctx=\r\n-                                    Load(\r\n-                                    )  # /Load\r\n-                                  id=\r\n-                                    'test_plan_month',  # str\r\n-                                )  # /Name\r\n-                            )  # /Slice\r\n-                          value=\r\n-                            Attribute(\r\n-                              attr=\r\n-                                'loc',  # str\r\n-                              ctx=\r\n-                                Load(\r\n-                                )  # /Load\r\n-                              value=\r\n-                                Call(\r\n-                                  args=\r\n-                                    Constant(\r\n-                                      value=\r\n-                                        0,  # int\r\n-                                    )  # /Constant\r\n-                                  func=\r\n-                                    Attribute(\r\n-                                      attr=\r\n-                                        'fillna',  # str\r\n-                                      ctx=\r\n-                                        Load(\r\n-                                        )  # /Load\r\n-                                      value=\r\n-                                        Name(\r\n-                                          ctx=\r\n-                                            Load(\r\n-                                            )  # /Load\r\n-                                          id=\r\n-                                            'ap2_data',  # str\r\n-                                        )  # /Name\r\n-                                    )  # /Attribute\r\n-                                  keywords=\r\n-                                )  # /Call\r\n-                            )  # /Attribute\r\n-                        )  # /Subscript\r\n                       func=\r\n                         Name(\r\n                           ctx=\r\n                             Load(\r\n                             )  # /Load\r\n@@ -6611,8 +6558,6 @@\r\n     )  # /TypeIgnore\r\n     TypeIgnore(\r\n     )  # /TypeIgnore\r\n     TypeIgnore(\r\n     )  # /TypeIgnore\r\n-    TypeIgnore(\r\n-    )  # /TypeIgnore\r\n )  # /Module\r\n```\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\n1. Take this file '...'\r\n2. Run _Black_ on it with these arguments '....'\r\n3. See error\r\n\r\n**Expected behavior** A clear and concise description of what you expected to happen.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: [e.g. master]\r\n- OS and Python version: [e.g. Linux/Python 3.7.4rc1]\r\n\r\n**Does this bug also happen on master?** To answer this, you have two options:\r\n\r\n1. Use the online formatter at https://black.now.sh/?version=master, which will use the\r\n   latest master branch.\r\n2. Or run _Black_ on your machine:\r\n   - create a new virtualenv (make sure it's the same Python version);\r\n   - clone this repository;\r\n   - run `pip install -e .`;\r\n   - make sure it's sane by running `python -m unittest`; and\r\n   - run `black` like you did last time.\r\n\r\n**Additional context** Add any other context about the problem here.\r\nAm using `black, version 19.10b0 `.\r\n\r\nAs an aside, thanks for this truly great project, I'm very grateful to you all for your work on creating/maintaining `black`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1415", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1415/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1415/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1415/events", "html_url": "https://github.com/psf/black/issues/1415", "id": 619340701, "node_id": "MDU6SXNzdWU2MTkzNDA3MDE=", "number": 1415, "title": "Crash on docstring ending with newlines", "user": {"login": "JelleZijlstra", "id": 906600, "node_id": "MDQ6VXNlcjkwNjYwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/906600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JelleZijlstra", "html_url": "https://github.com/JelleZijlstra", "followers_url": "https://api.github.com/users/JelleZijlstra/followers", "following_url": "https://api.github.com/users/JelleZijlstra/following{/other_user}", "gists_url": "https://api.github.com/users/JelleZijlstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/JelleZijlstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JelleZijlstra/subscriptions", "organizations_url": "https://api.github.com/users/JelleZijlstra/orgs", "repos_url": "https://api.github.com/users/JelleZijlstra/repos", "events_url": "https://api.github.com/users/JelleZijlstra/events{/privacy}", "received_events_url": "https://api.github.com/users/JelleZijlstra/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "JelleZijlstra", "id": 906600, "node_id": "MDQ6VXNlcjkwNjYwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/906600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JelleZijlstra", "html_url": "https://github.com/JelleZijlstra", "followers_url": "https://api.github.com/users/JelleZijlstra/followers", "following_url": "https://api.github.com/users/JelleZijlstra/following{/other_user}", "gists_url": "https://api.github.com/users/JelleZijlstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/JelleZijlstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JelleZijlstra/subscriptions", "organizations_url": "https://api.github.com/users/JelleZijlstra/orgs", "repos_url": "https://api.github.com/users/JelleZijlstra/repos", "events_url": "https://api.github.com/users/JelleZijlstra/events{/privacy}", "received_events_url": "https://api.github.com/users/JelleZijlstra/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JelleZijlstra", "id": 906600, "node_id": "MDQ6VXNlcjkwNjYwMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/906600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JelleZijlstra", "html_url": "https://github.com/JelleZijlstra", "followers_url": "https://api.github.com/users/JelleZijlstra/followers", "following_url": "https://api.github.com/users/JelleZijlstra/following{/other_user}", "gists_url": "https://api.github.com/users/JelleZijlstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/JelleZijlstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JelleZijlstra/subscriptions", "organizations_url": "https://api.github.com/users/JelleZijlstra/orgs", "repos_url": "https://api.github.com/users/JelleZijlstra/repos", "events_url": "https://api.github.com/users/JelleZijlstra/events{/privacy}", "received_events_url": "https://api.github.com/users/JelleZijlstra/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-05-16T00:41:04Z", "updated_at": "2020-05-16T03:47:22Z", "closed_at": "2020-05-16T03:47:22Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "Maybe a side effect of #1053?\r\n\r\n```\r\n$ cat common/qfuture/nltk2.py \r\ndef word_tokenizer():\r\n    \"\"\"Returns NLTK's standard word tokenizer, but without a change that was applied in NLTK 3.0.3.\r\n\r\n    \"\"\"\r\n    pass\r\n$ black common/qfuture/nltk2.py\r\nerror: cannot format common/qfuture/nltk2.py: INTERNAL ERROR: Black produced code that is not equivalent to the source.  Please report a bug on https://github.com/psf/black/issues.  This diff might be helpful: /tmp/blk_0awe_h_l.log\r\nOh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\r\n1 file failed to reformat.\r\n$ cat  /tmp/blk_0awe_h_l.log\r\n--- src\r\n+++ dst\r\n@@ -15,11 +15,11 @@\r\n       body=\r\n         Expr(\r\n           value=\r\n             Constant(\r\n               value=\r\n-                \"Returns NLTK's standard word tokenizer, but without a change that was applied in NLTK 3.0.3.\\n\\n \",  # str\r\n+                \"Returns NLTK's standard word tokenizer, but without a change that was applied in NLTK 3.0.3.\",  # str\r\n             )  # /Constant\r\n         )  # /Expr\r\n         Pass(\r\n         )  # /Pass\r\n       decorator_list=\r\n```\r\n\r\nMaking this change is probably a good thing but we'll need to enhance the AST equivalence checker to let this through.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1413", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1413/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1413/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1413/events", "html_url": "https://github.com/psf/black/issues/1413", "id": 618798170, "node_id": "MDU6SXNzdWU2MTg3OTgxNzA=", "number": 1413, "title": "Colon inside a range gets a colon added to it", "user": {"login": "WhyNotHugo", "id": 730811, "node_id": "MDQ6VXNlcjczMDgxMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/730811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WhyNotHugo", "html_url": "https://github.com/WhyNotHugo", "followers_url": "https://api.github.com/users/WhyNotHugo/followers", "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}", "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}", "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions", "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs", "repos_url": "https://api.github.com/users/WhyNotHugo/repos", "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}", "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-15T08:36:56Z", "updated_at": "2020-05-15T10:53:30Z", "closed_at": "2020-05-15T10:45:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The colon before inside a range gets a space added to it:\r\n\r\ninput:\r\n```python\r\ndef a(code: str, pos: int):\r\n    return code[pos: pos + 10]\r\n```\r\n\r\noutput\r\n```python\r\ndef a(code: str, pos: int):\r\n    return code[pos : pos + 10]\r\n    #              ^ Note this space\r\n```\r\n\r\nThis seems to be the only scenario in which black adds a space **before** a colon, so I'm assuming it's a bug. Flake8 immediately complains since that's, well, wrong.\r\n\r\nThis doesn't seem to happen if ` + 10` is not there.\r\n\r\n**Environment:**\r\n```\r\n$ black --version\r\nblack, version 19.10b0\r\n$ python --version\r\nPython 3.8.2\r\n$ uname -a\r\nLinux aphrodite 5.6.12-arch1-1 #1 SMP PREEMPT Sun, 10 May 2020 10:43:42 +0000 x86_64 GNU/Linux\r\n```\r\n\r\n**Does this bug also happen on master?:**\r\nYes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1412", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1412/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1412/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1412/events", "html_url": "https://github.com/psf/black/issues/1412", "id": 618560672, "node_id": "MDU6SXNzdWU2MTg1NjA2NzI=", "number": 1412, "title": "Black crashes formatting this snippet", "user": {"login": "WhyNotHugo", "id": 730811, "node_id": "MDQ6VXNlcjczMDgxMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/730811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WhyNotHugo", "html_url": "https://github.com/WhyNotHugo", "followers_url": "https://api.github.com/users/WhyNotHugo/followers", "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}", "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}", "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions", "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs", "repos_url": "https://api.github.com/users/WhyNotHugo/repos", "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}", "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-14T21:57:56Z", "updated_at": "2020-05-14T22:23:01Z", "closed_at": "2020-05-14T22:23:01Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "This is an extract of a 1300loc file which I can't really share:\r\n\r\n```python\r\nfrom django.db import models\r\nfrom django.db.models.enums import ChoicesMeta\r\nfrom django.utils.translation import gettext_lazy as _\r\n\r\n\r\ndef PaymentType(models.TextChoices):\r\n    MANUAL: ChoicesMeta = \"ma\", _(\"Manual\")\r\n```\r\n\r\nBlack fails to parse it:\r\n```console\r\n$ black test.py\r\nerror: cannot format test.py: Cannot parse: 6:30:     MANUAL: ChoicesMeta = \"ma\", _(\"Manual\")\r\nOh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\r\n1 file failed to reformat.\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1409", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1409/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1409/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1409/events", "html_url": "https://github.com/psf/black/issues/1409", "id": 616628628, "node_id": "MDU6SXNzdWU2MTY2Mjg2Mjg=", "number": 1409, "title": "dict formatted in a non-pep8-compliant format", "user": {"login": "WhyNotHugo", "id": 730811, "node_id": "MDQ6VXNlcjczMDgxMQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/730811?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WhyNotHugo", "html_url": "https://github.com/WhyNotHugo", "followers_url": "https://api.github.com/users/WhyNotHugo/followers", "following_url": "https://api.github.com/users/WhyNotHugo/following{/other_user}", "gists_url": "https://api.github.com/users/WhyNotHugo/gists{/gist_id}", "starred_url": "https://api.github.com/users/WhyNotHugo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WhyNotHugo/subscriptions", "organizations_url": "https://api.github.com/users/WhyNotHugo/orgs", "repos_url": "https://api.github.com/users/WhyNotHugo/repos", "events_url": "https://api.github.com/users/WhyNotHugo/events{/privacy}", "received_events_url": "https://api.github.com/users/WhyNotHugo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T12:47:53Z", "updated_at": "2020-05-12T21:34:49Z", "closed_at": "2020-05-12T21:34:49Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "A clear and concise description of what the bug is.\r\n\r\nI've found a specific pattern, in which `black` generates code that's not pep8-complaint, and also makes flake8 unhappy:\r\n\r\n```\r\nfrom blah import JsonResponse, Wharever\r\n\r\n\r\ndef something():\r\n    context = Wharever()\r\n    return JsonResponse(\r\n        {\r\n            \"results\": [\r\n                {\"text\": obj.name, \"id\": obj.pk,} for obj in context[\"object_list\"]\r\n            ],\r\n            \"more\": context[\"page_obj\"].has_next(),\r\n        }\r\n    )\r\n```\r\n\r\nBy running code through `black`, this is what I got as a result.\r\n\r\nThe trailing comma in `{\"text\": obj.name, \"id\": obj.pk,}` Makes flake unhappy due to there being [no space after the comma](https://www.flake8rules.com/rules/E231.html).\r\n\r\nBlack should either drop this comma, or leave a space before the closing bracket (I prefer the first, but either option is valid).\r\n\r\nThis happens both on latest stable and on `master`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1408", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1408/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1408/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1408/events", "html_url": "https://github.com/psf/black/issues/1408", "id": 616602653, "node_id": "MDU6SXNzdWU2MTY2MDI2NTM=", "number": 1408, "title": "Documentation: git's ignore-revs-file feature", "user": {"login": "Cheaterman", "id": 54710, "node_id": "MDQ6VXNlcjU0NzEw", "avatar_url": "https://avatars0.githubusercontent.com/u/54710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cheaterman", "html_url": "https://github.com/Cheaterman", "followers_url": "https://api.github.com/users/Cheaterman/followers", "following_url": "https://api.github.com/users/Cheaterman/following{/other_user}", "gists_url": "https://api.github.com/users/Cheaterman/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cheaterman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cheaterman/subscriptions", "organizations_url": "https://api.github.com/users/Cheaterman/orgs", "repos_url": "https://api.github.com/users/Cheaterman/repos", "events_url": "https://api.github.com/users/Cheaterman/events{/privacy}", "received_events_url": "https://api.github.com/users/Cheaterman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-12T12:05:34Z", "updated_at": "2020-05-16T20:22:46Z", "closed_at": "2020-05-16T20:22:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Everything is in the title. I think I first heard of this from \u0141ucasz conference about Black, but then had a very hard time finding the information again when looking on Google (although I did find \u0141ucasz's Tweet on the subject: https://twitter.com/llanga/status/1163767833706323970 )\r\n\r\nCan you please make this part of Black's documentation? I think it would put people at ease regarding using Black on older projects.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1407", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1407/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1407/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1407/events", "html_url": "https://github.com/psf/black/issues/1407", "id": 616380028, "node_id": "MDU6SXNzdWU2MTYzODAwMjg=", "number": 1407, "title": "Test suite fails with `NameError: name 'AioHTTPTestCase' is not defined`", "user": {"login": "TheChymera", "id": 950524, "node_id": "MDQ6VXNlcjk1MDUyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/950524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheChymera", "html_url": "https://github.com/TheChymera", "followers_url": "https://api.github.com/users/TheChymera/followers", "following_url": "https://api.github.com/users/TheChymera/following{/other_user}", "gists_url": "https://api.github.com/users/TheChymera/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheChymera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheChymera/subscriptions", "organizations_url": "https://api.github.com/users/TheChymera/orgs", "repos_url": "https://api.github.com/users/TheChymera/repos", "events_url": "https://api.github.com/users/TheChymera/events{/privacy}", "received_events_url": "https://api.github.com/users/TheChymera/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-12T05:52:17Z", "updated_at": "2020-05-12T08:19:38Z", "closed_at": "2020-05-12T08:19:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to package your software for Gentoo Linux, but the test suite fails with the following:\r\n\r\n```\r\n=========================================================== test session starts ============================================================\r\nplatform linux -- Python 3.7.7, pytest-5.4.1, py-1.8.0, pluggy-0.13.1 -- /usr/bin/python3.7\r\ncachedir: .pytest_cache\r\nrootdir: /home/chymera/src/black\r\ncollected 0 items / 1 error\r\n\r\n================================================================== ERRORS ==================================================================\r\n___________________________________________________ ERROR collecting tests/test_black.py ___________________________________________________\r\ntests/test_black.py:1762: in <module>\r\n    class BlackDTestCase(AioHTTPTestCase):\r\nE   NameError: name 'AioHTTPTestCase' is not defined\r\n========================================================= short test summary info ==========================================================\r\nERROR tests/test_black.py - NameError: name 'AioHTTPTestCase' is not defined\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n============================================================= 1 error in 0.29s =============================================================\r\n\r\n```\r\n\r\n# Steps to reproduce the behavior:\r\n\r\nTesting is executed with `pytest -vv` in the work tree (but the tests fail with the same error if executed inside a cloned repo witht the most recent HEAD).\r\nThis is the full build log:\r\n\r\n```\r\nsilenthost ~ # FEATURES=test emerge -v black\r\n\r\nThese are the packages that would be merged, in order:\r\n\r\nCalculating dependencies... done!\r\n[ebuild   R    ] dev-python/black-19.10_beta_p0::chymeric  USE=\"test*\" PYTHON_TARGETS=\"python3_7 -python3_6 -python3_8\" 0 KiB\r\n\r\nTotal: 1 package (1 reinstall), Size of downloads: 0 KiB\r\n\r\n\r\n>>> Verifying ebuild manifests\r\n\r\n>>> Emerging (1 of 1) dev-python/black-19.10_beta_p0::chymeric\r\n * black-19.10b0.tar.gz SHA256 SHA512 WHIRLPOOL size ;-) ...                                                                         [ ok ]\r\n>>> Unpacking source...\r\n>>> Unpacking black-19.10b0.tar.gz to /var/tmp/portage/dev-python/black-19.10_beta_p0/work\r\n>>> Source unpacked in /var/tmp/portage/dev-python/black-19.10_beta_p0/work\r\n>>> Preparing source in /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0 ...\r\n>>> Source prepared.\r\n>>> Configuring source in /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0 ...\r\n>>> Source configured.\r\n>>> Compiling source in /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0 ...\r\n * python3_7: running distutils-r1_run_phase distutils-r1_python_compile\r\n * DISTUTILS_USE_SETUPTOOLS value is probably incorrect\r\n *   value:    DISTUTILS_USE_SETUPTOOLS=bdepend (default?)\r\n *   expected: DISTUTILS_USE_SETUPTOOLS=rdepend\r\npython3.7 setup.py build -j 9\r\nrunning build\r\nrunning build_py\r\ncopying black.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib\r\ncopying blackd.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib\r\ncopying _black_version.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib\r\ncreating /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3\r\ncopying blib2to3/__init__.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3\r\ncopying blib2to3/pygram.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3\r\ncopying blib2to3/pytree.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3\r\ncreating /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3/pgen2\r\ncopying blib2to3/pgen2/__init__.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3/pgen2\r\ncopying blib2to3/pgen2/token.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3/pgen2\r\ncopying blib2to3/pgen2/tokenize.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3/pgen2\r\ncopying blib2to3/pgen2/parse.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3/pgen2\r\ncopying blib2to3/pgen2/conv.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3/pgen2\r\ncopying blib2to3/pgen2/driver.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3/pgen2\r\ncopying blib2to3/pgen2/grammar.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3/pgen2\r\ncopying blib2to3/pgen2/literals.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3/pgen2\r\ncopying blib2to3/pgen2/pgen.py -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3/pgen2\r\ncopying blib2to3/Grammar.txt -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3\r\ncopying blib2to3/PatternGrammar.txt -> /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0-python3_7/lib/blib2to3\r\nwarning: build_py: byte-compiling is disabled, skipping.\r\n\r\n>>> Source compiled.\r\n>>> Test phase: dev-python/black-19.10_beta_p0\r\n * python3_7: running distutils-r1_run_phase python_test\r\n=========================================================== test session starts ============================================================\r\nplatform linux -- Python 3.7.7, pytest-5.4.1, py-1.8.0, pluggy-0.13.1 -- /usr/bin/python3.7\r\ncachedir: .pytest_cache\r\nrootdir: /var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0\r\ncollecting ... collected 0 items / 1 error\r\n\r\n================================================================== ERRORS ==================================================================\r\n___________________________________________________ ERROR collecting tests/test_black.py ___________________________________________________\r\ntests/test_black.py:1617: in <module>\r\n    class BlackDTestCase(AioHTTPTestCase):\r\nE   NameError: name 'AioHTTPTestCase' is not defined\r\n========================================================= short test summary info ==========================================================\r\nERROR tests/test_black.py - NameError: name 'AioHTTPTestCase' is not defined\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n============================================================= 1 error in 0.29s =============================================================\r\n * ERROR: dev-python/black-19.10_beta_p0::chymeric failed (test phase):\r\n *   (no error message)\r\n *\r\n * Call stack:\r\n *     ebuild.sh, line  125:  Called src_test\r\n *   environment, line 2897:  Called distutils-r1_src_test\r\n *   environment, line 1243:  Called _distutils-r1_run_foreach_impl 'python_test'\r\n *   environment, line  443:  Called python_foreach_impl 'distutils-r1_run_phase' 'python_test'\r\n *   environment, line 2512:  Called multibuild_foreach_variant '_python_multibuild_wrapper' 'distutils-r1_run_phase' 'python_test'\r\n *   environment, line 2025:  Called _multibuild_run '_python_multibuild_wrapper' 'distutils-r1_run_phase' 'python_test'\r\n *   environment, line 2023:  Called _python_multibuild_wrapper 'distutils-r1_run_phase' 'python_test'\r\n *   environment, line  831:  Called distutils-r1_run_phase 'python_test'\r\n *   environment, line 1180:  Called python_test\r\n *   environment, line 2857:  Called die\r\n * The specific snippet of code:\r\n *       pytest -vv || die\r\n *\r\n * If you need support, post the output of `emerge --info '=dev-python/black-19.10_beta_p0::chymeric'`,\r\n * the complete build log and the output of `emerge -pqv '=dev-python/black-19.10_beta_p0::chymeric'`.\r\n * The complete build log is located at '/var/tmp/portage/dev-python/black-19.10_beta_p0/temp/build.log'.\r\n * The ebuild environment file is located at '/var/tmp/portage/dev-python/black-19.10_beta_p0/temp/environment'.\r\n * Working directory: '/var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0'\r\n * S: '/var/tmp/portage/dev-python/black-19.10_beta_p0/work/black-19.10b0'\r\n```\r\n\r\n# Environment\r\n\r\n- Version: `19.10b0`\r\n- OS and Python version: Gentoo Linux and Python `3.7.7-r2`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1405", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1405/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1405/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1405/events", "html_url": "https://github.com/psf/black/issues/1405", "id": 615885096, "node_id": "MDU6SXNzdWU2MTU4ODUwOTY=", "number": 1405, "title": "multiple function args get put on their own line even with very long line length", "user": {"login": "dhalbert", "id": 2847802, "node_id": "MDQ6VXNlcjI4NDc4MDI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2847802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dhalbert", "html_url": "https://github.com/dhalbert", "followers_url": "https://api.github.com/users/dhalbert/followers", "following_url": "https://api.github.com/users/dhalbert/following{/other_user}", "gists_url": "https://api.github.com/users/dhalbert/gists{/gist_id}", "starred_url": "https://api.github.com/users/dhalbert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dhalbert/subscriptions", "organizations_url": "https://api.github.com/users/dhalbert/orgs", "repos_url": "https://api.github.com/users/dhalbert/repos", "events_url": "https://api.github.com/users/dhalbert/events{/privacy}", "received_events_url": "https://api.github.com/users/dhalbert/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 874894995, "node_id": "MDU6TGFiZWw4NzQ4OTQ5OTU=", "url": "https://api.github.com/repos/psf/black/labels/not%20a%20bug", "name": "not a bug", "color": "71ff51", "default": false, "description": "This is deliberate behavior of Black."}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-11T13:27:59Z", "updated_at": "2020-08-03T21:07:06Z", "closed_at": "2020-08-03T21:07:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nEven when the line length would permit a single-line function definition, the args are separated from their surrounding parentheses\r\n\r\n**To Reproduce**\r\n`black -l 1000` on this file always puts the `f4` args on their own line:\r\n```\r\ndef f3(this_is_a_very_long_name, this_is_a_very_long_name, this_is_a_very_long_name):\r\n    pass\r\n\r\n\r\ndef f4(\r\n    this_is_a_very_long_name, this_is_a_very_long_name, this_is_a_very_long_name, this_is_a_very_long_name,\r\n):\r\n    pass\r\n```\r\n\r\n**Expected behavior**\r\n```\r\ndef f3(this_is_a_very_long_name, this_is_a_very_long_name, this_is_a_very_long_name):\r\n    pass\r\n\r\n\r\ndef f4(this_is_a_very_long_name, this_is_a_very_long_name, this_is_a_very_long_name, this_is_a_very_long_name):\r\n    pass\r\n```\r\n\r\n**Environment**\r\n\r\n- Version: 19.10b0\r\n- OS and Python version: Ubuntu 20.04, Python 3.8.2\r\n\r\n**Does this bug also happen on master?**\r\nYes (via a clone/virtualenv test). \r\n\r\nI assume this is not really a bug. So I must be missing some rule about arguments I cannot find in PEP8 or the `black` documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1398", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1398/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1398/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1398/events", "html_url": "https://github.com/psf/black/issues/1398", "id": 615028715, "node_id": "MDU6SXNzdWU2MTUwMjg3MTU=", "number": 1398, "title": "Mixing tabs and spaces under some circumstances causes black to error", "user": {"login": "tim-mccurrach", "id": 34194722, "node_id": "MDQ6VXNlcjM0MTk0NzIy", "avatar_url": "https://avatars0.githubusercontent.com/u/34194722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tim-mccurrach", "html_url": "https://github.com/tim-mccurrach", "followers_url": "https://api.github.com/users/tim-mccurrach/followers", "following_url": "https://api.github.com/users/tim-mccurrach/following{/other_user}", "gists_url": "https://api.github.com/users/tim-mccurrach/gists{/gist_id}", "starred_url": "https://api.github.com/users/tim-mccurrach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tim-mccurrach/subscriptions", "organizations_url": "https://api.github.com/users/tim-mccurrach/orgs", "repos_url": "https://api.github.com/users/tim-mccurrach/repos", "events_url": "https://api.github.com/users/tim-mccurrach/events{/privacy}", "received_events_url": "https://api.github.com/users/tim-mccurrach/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-08T23:00:48Z", "updated_at": "2020-08-03T21:02:14Z", "closed_at": "2020-08-03T21:02:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** A clear and concise description of what the bug is.\r\nMixing spaces and tabs in certain (but not all) situations causes black to fail hard.\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\n1. Take a file with the following content:\r\n```\r\nclass bar:\r\n    def foo(self):\r\n        print(\"hello\")  # white space is 8 spaces\r\n    \tprint(\"world\")  # white space is 4 spaces followed by a tab\r\n```\r\n2. Run _Black_ on it \r\n3. See error\r\n```\r\nINTERNAL ERROR: Black produced code that is not equivalent to the source. Please report a bug\r\n```\r\n\r\n**Expected behavior** A clear and concise description of what you expected to happen.\r\nI would expect to produce an error statement along the lines of:\r\n```\r\nerror: cannot format -: unindent does not match any outer indentation level\r\n```\r\nas is the case in the following example:\r\n```\r\ndef foo():\r\n    print(\"hello\")  # white space is a tab\r\n    print(\"goodbye\")  # white space is 4 spaces\r\n```\r\nor just a generic syntax error. But not to fail completely.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: 19.10b0\r\n- OS and Python version: [e.g. macOS Catalina 10.15.4/Python 3.7.3]\r\n\r\n**Does this bug also happen on master?** To answer this, you have two options:\r\nThe bug doesn't happen at https://black.now.sh/?version=master although, I think the online editor might be converting spaces to tabs automatically. But yes, running it locally checking out the latest master branch I get the same error.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1385", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1385/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1385/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1385/events", "html_url": "https://github.com/psf/black/issues/1385", "id": 614239550, "node_id": "MDU6SXNzdWU2MTQyMzk1NTA=", "number": 1385, "title": "Missing wheels for Python 3.7 and 3.8", "user": {"login": "ckataki", "id": 1197127, "node_id": "MDQ6VXNlcjExOTcxMjc=", "avatar_url": "https://avatars0.githubusercontent.com/u/1197127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ckataki", "html_url": "https://github.com/ckataki", "followers_url": "https://api.github.com/users/ckataki/followers", "following_url": "https://api.github.com/users/ckataki/following{/other_user}", "gists_url": "https://api.github.com/users/ckataki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ckataki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ckataki/subscriptions", "organizations_url": "https://api.github.com/users/ckataki/orgs", "repos_url": "https://api.github.com/users/ckataki/repos", "events_url": "https://api.github.com/users/ckataki/events{/privacy}", "received_events_url": "https://api.github.com/users/ckataki/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-05-07T17:56:26Z", "updated_at": "2020-05-08T12:50:04Z", "closed_at": "2020-05-08T12:50:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nBlack only provides Python 3.6 wheels for the latest version (19.10b0). There should be 3.7 and 3.8 wheels made available as well.\r\n\r\n**To Reproduce**\r\n- See: https://pypi.org/project/black/19.10b0/#files\r\n    - Only py36 wheel is available\r\n\r\n**Expected behavior**\r\nWheels should be available for py37 and py38 as well\r\n\r\n**Environment**\r\n- Version: 19.10b0\r\n- OS and Python version: Linux/Python 3.7.3\r\n\r\n**Does this bug also happen on master?**\r\nN/A\r\n\r\n**Additional context**\r\nVersion 18.3a1 (https://pypi.org/project/black/18.3a1/#files) has a py3 wheel, which makes it compatible with all Python3 interpreters. The move to a py36 wheel is understandable (to enforce Black's Python >= 3.6 requirement as I understand), but without additional wheels we cannot use it with Python 3.7.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1383", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1383/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1383/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1383/events", "html_url": "https://github.com/psf/black/issues/1383", "id": 613325230, "node_id": "MDU6SXNzdWU2MTMzMjUyMzA=", "number": 1383, "title": "vim plugin should prefer virtualenv packages over the global packages", "user": {"login": "kaiix", "id": 172202, "node_id": "MDQ6VXNlcjE3MjIwMg==", "avatar_url": "https://avatars0.githubusercontent.com/u/172202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kaiix", "html_url": "https://github.com/kaiix", "followers_url": "https://api.github.com/users/kaiix/followers", "following_url": "https://api.github.com/users/kaiix/following{/other_user}", "gists_url": "https://api.github.com/users/kaiix/gists{/gist_id}", "starred_url": "https://api.github.com/users/kaiix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kaiix/subscriptions", "organizations_url": "https://api.github.com/users/kaiix/orgs", "repos_url": "https://api.github.com/users/kaiix/repos", "events_url": "https://api.github.com/users/kaiix/events{/privacy}", "received_events_url": "https://api.github.com/users/kaiix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-06T13:35:13Z", "updated_at": "2020-05-08T13:31:38Z", "closed_at": "2020-05-08T13:31:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug** A clear and concise description of what the bug is.\r\n\r\nThe current code appends the virtualenv site directory to `sys.path` after the global and user site directories. If a package that black will use is also installed in global/user namespace, and it has a breaking change, then it will break black because the global/user one will be imported at first\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\n1. Run `pip3 install --user mypy-extensions==0.4.1` to install a package that black will use in the user site dir\r\n2. Run `.vim/black/bin/pip install -U git+https://github.com/psf/black.git` to install the latest black for the vim plugin, it will install `mypy-extensions==0.4.3` into the virtualenv\r\n3. Run `vim`, you'll see errors like this\r\n\r\n<img width=\"684\" alt=\"vim-mypy-extensions\" src=\"https://user-images.githubusercontent.com/172202/81180558-c7bfc680-8fdd-11ea-98e0-e1a1f5cb104a.png\">\r\n\r\n(`mypyc_attr` was introduced in 0.4.2)\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: [master]\r\n- OS and Python version: [Centos 7.4/Python 3.6.5, macOS 10.14/Python 3.7.7]\r\n\r\n**Additional context** Add any other context about the problem here.\r\n\r\nThe vim plugin use `sys.path.insert(0, virtualenv_site_packages)` at the first version, but changed to `append` in #804 \r\n\r\nI think the problem with #804 is it shares virtualenv with black and other incompatible packages. When using black, it's better to use a separate virtualenv, or ensure other packages in the virtualenv are compatible.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1381", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1381/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1381/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1381/events", "html_url": "https://github.com/psf/black/issues/1381", "id": 612277149, "node_id": "MDU6SXNzdWU2MTIyNzcxNDk=", "number": 1381, "title": "INTERNAL ERROR: Black produced code that is not equivalent to the source.  Please report a bug", "user": {"login": "ceeb3", "id": 53624393, "node_id": "MDQ6VXNlcjUzNjI0Mzkz", "avatar_url": "https://avatars3.githubusercontent.com/u/53624393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ceeb3", "html_url": "https://github.com/ceeb3", "followers_url": "https://api.github.com/users/ceeb3/followers", "following_url": "https://api.github.com/users/ceeb3/following{/other_user}", "gists_url": "https://api.github.com/users/ceeb3/gists{/gist_id}", "starred_url": "https://api.github.com/users/ceeb3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ceeb3/subscriptions", "organizations_url": "https://api.github.com/users/ceeb3/orgs", "repos_url": "https://api.github.com/users/ceeb3/repos", "events_url": "https://api.github.com/users/ceeb3/events{/privacy}", "received_events_url": "https://api.github.com/users/ceeb3/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-05T02:07:01Z", "updated_at": "2020-07-10T20:43:34Z", "closed_at": "2020-07-10T20:43:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** A clear and concise description of what the bug is.\r\nI was blackening simple python files under 100 lines each.  I got the above error on one file.  \r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\nThe diff is:\r\n\r\n```\r\n--- src\r\n+++ dst\r\n@@ -140,11 +140,11 @@\r\n       value=\r\n         Call(\r\n           args=\r\n             Constant(\r\n               value=\r\n-                b'main',  # bytes\r\n+                'main',  # str\r\n             )  # /Constant\r\n             Name(\r\n               ctx=\r\n                 Load(\r\n                 )  # /Load\r\n@@ -158,57 +158,50 @@\r\n                 )  # /Load\r\n               id=\r\n                 'Blueprint',  # str\r\n             )  # /Name\r\n           keywords=\r\n-          kwargs=\r\n-            None,  # NoneType\r\n-          starargs=\r\n-            None,  # NoneType\r\n         )  # /Call\r\n     )  # /Assign\r\n     FunctionDef(\r\n       args=\r\n         arguments(\r\n           args=\r\n           defaults=\r\n+          kw_defaults=\r\n           kwarg=\r\n             None,  # NoneType\r\n-          type_comments=\r\n+          kwonlyargs=\r\n           vararg=\r\n             None,  # NoneType\r\n         )  # /arguments\r\n       body=\r\n         Return(\r\n           value=\r\n             Call(\r\n               args=\r\n                 Constant(\r\n                   value=\r\n-                    b'password_reset_email.html',  # bytes\r\n+                    'password_reset_email.html',  # str\r\n                 )  # /Constant\r\n               func=\r\n                 Name(\r\n                   ctx=\r\n                     Load(\r\n                     )  # /Load\r\n                   id=\r\n                     'render_template',  # str\r\n                 )  # /Name\r\n               keywords=\r\n-              kwargs=\r\n-                None,  # NoneType\r\n-              starargs=\r\n-                None,  # NoneType\r\n             )  # /Call\r\n         )  # /Return\r\n       decorator_list=\r\n         Call(\r\n           args=\r\n             Constant(\r\n               value=\r\n-                b'/',  # bytes\r\n+                '/',  # str\r\n             )  # /Constant\r\n           func=\r\n             Attribute(\r\n               attr=\r\n                 'route',  # str\r\n@@ -223,61 +216,56 @@\r\n                   id=\r\n                     'main',  # str\r\n                 )  # /Name\r\n             )  # /Attribute\r\n           keywords=\r\n-          kwargs=\r\n-            None,  # NoneType\r\n-          starargs=\r\n-            None,  # NoneType\r\n         )  # /Call\r\n       name=\r\n         'index',  # str\r\n+      returns=\r\n+        None,  # NoneType\r\n       type_comment=\r\n         None,  # NoneType\r\n     )  # /FunctionDef\r\n     FunctionDef(\r\n       args=\r\n         arguments(\r\n           args=\r\n           defaults=\r\n+          kw_defaults=\r\n           kwarg=\r\n             None,  # NoneType\r\n-          type_comments=\r\n+          kwonlyargs=\r\n           vararg=\r\n             None,  # NoneType\r\n         )  # /arguments\r\n       body=\r\n         Return(\r\n           value=\r\n             Call(\r\n               args=\r\n                 Constant(\r\n                   value=\r\n-                    b'get_user_id_email.html',  # bytes\r\n+                    'get_user_id_email.html',  # str\r\n                 )  # /Constant\r\n               func=\r\n                 Name(\r\n                   ctx=\r\n                     Load(\r\n                     )  # /Load\r\n                   id=\r\n                     'render_template',  # str\r\n                 )  # /Name\r\n               keywords=\r\n-              kwargs=\r\n-                None,  # NoneType\r\n-              starargs=\r\n-                None,  # NoneType\r\n             )  # /Call\r\n         )  # /Return\r\n       decorator_list=\r\n         Call(\r\n           args=\r\n             Constant(\r\n               value=\r\n-                b'/user_id',  # bytes\r\n+                '/user_id',  # str\r\n             )  # /Constant\r\n           func=\r\n             Attribute(\r\n               attr=\r\n                 'route',  # str\r\n@@ -292,28 +280,27 @@\r\n                   id=\r\n                     'main',  # str\r\n                 )  # /Name\r\n             )  # /Attribute\r\n           keywords=\r\n-          kwargs=\r\n-            None,  # NoneType\r\n-          starargs=\r\n-            None,  # NoneType\r\n         )  # /Call\r\n       name=\r\n         'get_user_id',  # str\r\n+      returns=\r\n+        None,  # NoneType\r\n       type_comment=\r\n         None,  # NoneType\r\n     )  # /FunctionDef\r\n     FunctionDef(\r\n       args=\r\n         arguments(\r\n           args=\r\n           defaults=\r\n+          kw_defaults=\r\n           kwarg=\r\n             None,  # NoneType\r\n-          type_comments=\r\n+          kwonlyargs=\r\n           vararg=\r\n             None,  # NoneType\r\n         )  # /arguments\r\n       body=\r\n         Assign(\r\n@@ -330,11 +317,11 @@\r\n           value=\r\n             Call(\r\n               args=\r\n                 Constant(\r\n                   value=\r\n-                    b'email',  # bytes\r\n+                    'email',  # str\r\n                 )  # /Constant\r\n               func=\r\n                 Attribute(\r\n                   attr=\r\n                     'get',  # str\r\n@@ -357,14 +344,10 @@\r\n                             'request',  # str\r\n                         )  # /Name\r\n                     )  # /Attribute\r\n                 )  # /Attribute\r\n               keywords=\r\n-              kwargs=\r\n-                None,  # NoneType\r\n-              starargs=\r\n-                None,  # NoneType\r\n             )  # /Call\r\n         )  # /Assign\r\n         Assign(\r\n           targets=\r\n             Name(\r\n@@ -379,11 +362,11 @@\r\n           value=\r\n             Call(\r\n               args=\r\n                 Constant(\r\n                   value=\r\n-                    b'HTTP_X_REAL_IP',  # bytes\r\n+                    'HTTP_X_REAL_IP',  # str\r\n                 )  # /Constant\r\n                 Attribute(\r\n                   attr=\r\n                     'remote_addr',  # str\r\n                   ctx=\r\n@@ -421,14 +404,10 @@\r\n                             'request',  # str\r\n                         )  # /Name\r\n                     )  # /Attribute\r\n                 )  # /Attribute\r\n               keywords=\r\n-              kwargs=\r\n-                None,  # NoneType\r\n-              starargs=\r\n-                None,  # NoneType\r\n             )  # /Call\r\n         )  # /Assign\r\n         Assign(\r\n           targets=\r\n             Name(\r\n@@ -458,17 +437,13 @@\r\n                       id=\r\n                         'datetime',  # str\r\n                     )  # /Name\r\n                 )  # /Attribute\r\n               keywords=\r\n-              kwargs=\r\n-                None,  # NoneType\r\n-              starargs=\r\n-                None,  # NoneType\r\n             )  # /Call\r\n         )  # /Assign\r\n-        TryExcept(\r\n+        Try(\r\n           body=\r\n             Assign(\r\n               targets=\r\n                 Name(\r\n                   ctx=\r\n@@ -527,23 +502,16 @@\r\n                                     )  # /Load\r\n                                   id=\r\n                                     'email',  # str\r\n                                 )  # /Name\r\n                             )  # /keyword\r\n-                          kwargs=\r\n-                            None,  # NoneType\r\n-                          starargs=\r\n-                            None,  # NoneType\r\n                         )  # /Call\r\n                     )  # /Attribute\r\n                   keywords=\r\n-                  kwargs=\r\n-                    None,  # NoneType\r\n-                  starargs=\r\n-                    None,  # NoneType\r\n                 )  # /Call\r\n             )  # /Assign\r\n+          finalbody=\r\n           handlers=\r\n             ExceptHandler(\r\n               body=\r\n                 Assign(\r\n                   targets=\r\n@@ -600,14 +568,10 @@\r\n                                     )  # /Load\r\n                                   id=\r\n                                     'str',  # str\r\n                                 )  # /Name\r\n                               keywords=\r\n-                              kwargs=\r\n-                                None,  # NoneType\r\n-                              starargs=\r\n-                                None,  # NoneType\r\n                             )  # /Call\r\n                         )  # /keyword\r\n                         keyword(\r\n                           arg=\r\n                             'eventDate',  # str\r\n@@ -628,20 +592,12 @@\r\n                                     )  # /Load\r\n                                   id=\r\n                                     'str',  # str\r\n                                 )  # /Name\r\n                               keywords=\r\n-                              kwargs=\r\n-                                None,  # NoneType\r\n-                              starargs=\r\n-                                None,  # NoneType\r\n                             )  # /Call\r\n                         )  # /keyword\r\n-                      kwargs=\r\n-                        None,  # NoneType\r\n-                      starargs=\r\n-                        None,  # NoneType\r\n                     )  # /Call\r\n                 )  # /Assign\r\n                 Expr(\r\n                   value=\r\n                     Call(\r\n@@ -676,14 +632,10 @@\r\n                                     'db',  # str\r\n                                 )  # /Name\r\n                             )  # /Attribute\r\n                         )  # /Attribute\r\n                       keywords=\r\n-                      kwargs=\r\n-                        None,  # NoneType\r\n-                      starargs=\r\n-                        None,  # NoneType\r\n                     )  # /Call\r\n                 )  # /Expr\r\n                 Expr(\r\n                   value=\r\n                     Call(\r\n@@ -711,85 +663,67 @@\r\n                                     'db',  # str\r\n                                 )  # /Name\r\n                             )  # /Attribute\r\n                         )  # /Attribute\r\n                       keywords=\r\n-                      kwargs=\r\n-                        None,  # NoneType\r\n-                      starargs=\r\n-                        None,  # NoneType\r\n                     )  # /Call\r\n                 )  # /Expr\r\n                 Expr(\r\n                   value=\r\n                     Call(\r\n                       args=\r\n                         Constant(\r\n                           value=\r\n-                            b'Please check your email for your user name.',  # bytes\r\n+                            'Please check your email for your user name.',  # str\r\n                         )  # /Constant\r\n                         Constant(\r\n                           value=\r\n-                            b'form-success',  # bytes\r\n+                            'form-success',  # str\r\n                         )  # /Constant\r\n                       func=\r\n                         Name(\r\n                           ctx=\r\n                             Load(\r\n                             )  # /Load\r\n                           id=\r\n                             'flash',  # str\r\n                         )  # /Name\r\n                       keywords=\r\n-                      kwargs=\r\n-                        None,  # NoneType\r\n-                      starargs=\r\n-                        None,  # NoneType\r\n                     )  # /Call\r\n                 )  # /Expr\r\n                 Return(\r\n                   value=\r\n                     Call(\r\n                       args=\r\n                         Constant(\r\n                           value=\r\n-                            b'password_reset_email.html',  # bytes\r\n+                            'password_reset_email.html',  # str\r\n                         )  # /Constant\r\n                       func=\r\n                         Name(\r\n                           ctx=\r\n                             Load(\r\n                             )  # /Load\r\n                           id=\r\n                             'render_template',  # str\r\n                         )  # /Name\r\n                       keywords=\r\n-                      kwargs=\r\n-                        None,  # NoneType\r\n-                      starargs=\r\n-                        None,  # NoneType\r\n                     )  # /Call\r\n                 )  # /Return\r\n               name=\r\n-                Name(\r\n-                  ctx=\r\n-                    Store(\r\n-                    )  # /Store\r\n-                  id=\r\n-                    'e',  # str\r\n-                )  # /Name\r\n+                'e',  # str\r\n               type=\r\n                 Name(\r\n                   ctx=\r\n                     Load(\r\n                     )  # /Load\r\n                   id=\r\n                     'Exception',  # str\r\n                 )  # /Name\r\n             )  # /ExceptHandler\r\n           orelse=\r\n-        )  # /TryExcept\r\n+        )  # /Try\r\n         If(\r\n           body=\r\n             Expr(\r\n               value=\r\n                 Call(\r\n@@ -808,14 +742,10 @@\r\n                         )  # /Load\r\n                       id=\r\n                         'send_password_reset_email',  # str\r\n                     )  # /Name\r\n                   keywords=\r\n-                  kwargs=\r\n-                    None,  # NoneType\r\n-                  starargs=\r\n-                    None,  # NoneType\r\n                 )  # /Call\r\n             )  # /Expr\r\n             Assign(\r\n               targets=\r\n                 Name(\r\n@@ -899,23 +829,19 @@\r\n                                 )  # /Load\r\n                               id=\r\n                                 'str',  # str\r\n                             )  # /Name\r\n                           keywords=\r\n-                          kwargs=\r\n-                            None,  # NoneType\r\n-                          starargs=\r\n-                            None,  # NoneType\r\n                         )  # /Call\r\n                     )  # /keyword\r\n                     keyword(\r\n                       arg=\r\n                         'type',  # str\r\n                       value=\r\n                         Constant(\r\n                           value=\r\n-                            b'get_user_id',  # bytes\r\n+                            'get_user_id',  # str\r\n                         )  # /Constant\r\n                     )  # /keyword\r\n                     keyword(\r\n                       arg=\r\n                         'eventDate',  # str\r\n@@ -936,20 +862,12 @@\r\n                                 )  # /Load\r\n                               id=\r\n                                 'str',  # str\r\n                             )  # /Name\r\n                           keywords=\r\n-                          kwargs=\r\n-                            None,  # NoneType\r\n-                          starargs=\r\n-                            None,  # NoneType\r\n                         )  # /Call\r\n                     )  # /keyword\r\n-                  kwargs=\r\n-                    None,  # NoneType\r\n-                  starargs=\r\n-                    None,  # NoneType\r\n                 )  # /Call\r\n             )  # /Assign\r\n             Expr(\r\n               value=\r\n                 Call(\r\n@@ -984,14 +902,10 @@\r\n                                 'db',  # str\r\n                             )  # /Name\r\n                         )  # /Attribute\r\n                     )  # /Attribute\r\n                   keywords=\r\n-                  kwargs=\r\n-                    None,  # NoneType\r\n-                  starargs=\r\n-                    None,  # NoneType\r\n                 )  # /Call\r\n             )  # /Expr\r\n             Expr(\r\n               value=\r\n                 Call(\r\n@@ -1019,14 +933,10 @@\r\n                                 'db',  # str\r\n                             )  # /Name\r\n                         )  # /Attribute\r\n                     )  # /Attribute\r\n                   keywords=\r\n-                  kwargs=\r\n-                    None,  # NoneType\r\n-                  starargs=\r\n-                    None,  # NoneType\r\n                 )  # /Call\r\n             )  # /Expr\r\n           orelse=\r\n           test=\r\n             Name(\r\n@@ -1040,11 +950,11 @@\r\n       decorator_list=\r\n         Call(\r\n           args=\r\n             Constant(\r\n               value=\r\n-                b'/user_id',  # bytes\r\n+                '/user_id',  # str\r\n             )  # /Constant\r\n           func=\r\n             Attribute(\r\n               attr=\r\n                 'route',  # str\r\n@@ -1070,21 +980,19 @@\r\n                     Load(\r\n                     )  # /Load\r\n                   elts=\r\n                     Constant(\r\n                       value=\r\n-                        b'POST',  # bytes\r\n+                        'POST',  # str\r\n                     )  # /Constant\r\n                 )  # /List\r\n             )  # /keyword\r\n-          kwargs=\r\n-            None,  # NoneType\r\n-          starargs=\r\n-            None,  # NoneType\r\n         )  # /Call\r\n       name=\r\n         'get_user_id_post',  # str\r\n+      returns=\r\n+        None,  # NoneType\r\n       type_comment=\r\n         None,  # NoneType\r\n     )  # /FunctionDef\r\n   type_ignores=\r\n )  # /Module\r\n```\r\n\r\n\r\n- Version: black, version 19.10b0\r\n- OS and Python version: MacOS 10.14.6 (18G103)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1379", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1379/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1379/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1379/events", "html_url": "https://github.com/psf/black/issues/1379", "id": 612155439, "node_id": "MDU6SXNzdWU2MTIxNTU0Mzk=", "number": 1379, "title": "Installed black via vim-plug on macOS; starting vim throws ModuleNotFoundError: No module named 'black'", "user": {"login": "erikr", "id": 1253422, "node_id": "MDQ6VXNlcjEyNTM0MjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1253422?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikr", "html_url": "https://github.com/erikr", "followers_url": "https://api.github.com/users/erikr/followers", "following_url": "https://api.github.com/users/erikr/following{/other_user}", "gists_url": "https://api.github.com/users/erikr/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikr/subscriptions", "organizations_url": "https://api.github.com/users/erikr/orgs", "repos_url": "https://api.github.com/users/erikr/repos", "events_url": "https://api.github.com/users/erikr/events{/privacy}", "received_events_url": "https://api.github.com/users/erikr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2020-05-04T20:42:50Z", "updated_at": "2020-07-29T01:48:03Z", "closed_at": "2020-05-08T13:13:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI get `ModuleNotFoundError: No module named 'black'` when I run `vim`, and thus cannot use _black_ in `vim` on macOS:\r\n\r\n```\r\n$ vim\r\nError detected while processing /Users/erik/.vim/plugged/black/plugin/black.vim:\r\nline  194:\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 87, in <module>\r\nModuleNotFoundError: No module named 'black'\r\nPress ENTER or type command to continue\r\n```\r\n\r\nSurely I am not the only macOS + vim user who wants to use _black_!\r\n\r\n**To Reproduce**\r\n1. Install `vim-plug` ([link](https://github.com/junegunn/vim-plug#installation)).\r\n1. Add `Plug 'psf/black'` next to the other plugins in `~/.vimrc`.\r\n1. Install via `vim` followed by `:PlugInstall`, or via `vim -c PlugInstall`:\r\n\r\n    ![Screen Shot 2020-05-04 at 4 32 04 PM](https://user-images.githubusercontent.com/1253422/81010778-cd25e100-8e24-11ea-9dad-a82a29a324fd.png)\r\n\r\n3. Run `vim` from terminal.\r\n\r\n**Expected behavior**\r\nI expect to not get that error, for `vim` to load, and for me to be able to use _black_ as described in the [README](https://github.com/psf/black#vim).\r\n\r\n**Environment (please complete the following information):**\r\n- Version: whichever is pulled by the default `vim-plug` installation instructions. Is it not master?\r\n- OS and Python version: macOS 10.15.4, Python 3.7.6 managed by Anaconda\r\n- Vim: 8.2 (installed via Homebrew)\r\n\r\n**Additional context**\r\n@akselsjogren [suggested](https://github.com/psf/black/issues/1293#issuecomment-621082845) upgrading _black_  used by the vim-plugin to the latest from master:\r\n```\r\ncd ~/.vim\r\nblack/bin/pip install --upgrade git+https://github.com/psf/black.git\r\n```\r\n\r\nHowever I do not have `pip` in `bin` and thus cannot try this:\r\n```\r\n$ tree ~/.vim/black\r\n.\r\n\u251c\u2500\u2500 bin\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 python\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 python3\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 vim\r\n\u251c\u2500\u2500 include\r\n\u251c\u2500\u2500 lib\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 python3.8\r\n\u2514\u2500\u2500 pyvenv.cfg\r\n```\r\n\r\nAlso, see #1293 for further discussion and other things I've tried to fix.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1378", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1378/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1378/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1378/events", "html_url": "https://github.com/psf/black/issues/1378", "id": 612059404, "node_id": "MDU6SXNzdWU2MTIwNTk0MDQ=", "number": 1378, "title": "Multi-lines with block should be allowed to use backslashes to wrap their lines", "user": {"login": "seirl", "id": 4927883, "node_id": "MDQ6VXNlcjQ5Mjc4ODM=", "avatar_url": "https://avatars2.githubusercontent.com/u/4927883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seirl", "html_url": "https://github.com/seirl", "followers_url": "https://api.github.com/users/seirl/followers", "following_url": "https://api.github.com/users/seirl/following{/other_user}", "gists_url": "https://api.github.com/users/seirl/gists{/gist_id}", "starred_url": "https://api.github.com/users/seirl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seirl/subscriptions", "organizations_url": "https://api.github.com/users/seirl/orgs", "repos_url": "https://api.github.com/users/seirl/repos", "events_url": "https://api.github.com/users/seirl/events{/privacy}", "received_events_url": "https://api.github.com/users/seirl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 869135448, "node_id": "MDU6TGFiZWw4NjkxMzU0NDg=", "url": "https://api.github.com/repos/psf/black/labels/design", "name": "design", "color": "0052cc", "default": false, "description": "What do we want Black to be?"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-04T17:57:56Z", "updated_at": "2020-05-05T08:47:36Z", "closed_at": "2020-05-05T08:47:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the style change** Multi-lines with block should be allowed to use backslashes to wrap their lines. \r\n\r\n**Examples in the current _Black_ style**\r\n\r\n```python\r\n        with ZSTFile(nodes_file, \"w\") as nodes_writer, ZSTFile(\r\n            edges_file, \"w\"\r\n        ) as edges_writer:\r\n```\r\n\r\n**Desired style**\r\n\r\n```python\r\n        with \\\r\n                ZSTFile(nodes_file, 'w') as nodes_writer, \\\r\n                ZSTFile(edges_file, 'w') as edges_writer:\r\n```\r\n\r\n**Additional context** Add any other context about the problem here.\r\n\r\nThis is a well-known place where backslashes are a valid form of line continuation in Python. It makes the separation between lines a lot clearer.\r\n\r\nI know this could be rewritten using ExitStack, but I don't think this is a good reason for Black to generate unreadable lines by default when people are not using ExitStack.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1374", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1374/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1374/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1374/events", "html_url": "https://github.com/psf/black/issues/1374", "id": 611244077, "node_id": "MDU6SXNzdWU2MTEyNDQwNzc=", "number": 1374, "title": "Syntax error for variable with type hint assigned to a tuple lacking parentheses", "user": {"login": "brettcannon", "id": 54418, "node_id": "MDQ6VXNlcjU0NDE4", "avatar_url": "https://avatars0.githubusercontent.com/u/54418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brettcannon", "html_url": "https://github.com/brettcannon", "followers_url": "https://api.github.com/users/brettcannon/followers", "following_url": "https://api.github.com/users/brettcannon/following{/other_user}", "gists_url": "https://api.github.com/users/brettcannon/gists{/gist_id}", "starred_url": "https://api.github.com/users/brettcannon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brettcannon/subscriptions", "organizations_url": "https://api.github.com/users/brettcannon/orgs", "repos_url": "https://api.github.com/users/brettcannon/repos", "events_url": "https://api.github.com/users/brettcannon/events{/privacy}", "received_events_url": "https://api.github.com/users/brettcannon/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-02T18:09:04Z", "updated_at": "2020-05-02T18:12:05Z", "closed_at": "2020-05-02T18:12:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug** A clear and concise description of what the bug is.\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\n1. Try to format `variable: tuple = False, \"\"` ([Playground link](https://black.now.sh/?version=master&state=_Td6WFoAAATm1rRGAgAhARYAAAB0L-Wj4ABbAEddAD2IimZxl1N_Wmp8WjEM7tySKog-Iz6JHbXjGRRL8YV_F-p-PvbWJwD_yVK6BP5AEmU1002_rXPpowH_T0Y0Hqif_ZQ8V0wAAABlYIu5Ge5c3gABY1yQkIsMH7bzfQEAAAAABFla))\r\n2. Run _Black_ on it with no arguments\r\n3. See error\r\n```\r\nerror: cannot format tester.py: Cannot parse: 1:23: variable: tuple = False, \"\"\r\nOh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\r\n```\r\n\r\n**Expected behavior** A clear and concise description of what you expected to happen.\r\n\r\nNo error.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: 19.10b0\r\n- OS and Python version: macOS Catalina, CPython 3.8.2\r\n\r\n**Does this bug also happen on master?**\r\n\r\nYes.\r\n\r\n**Additional context** Add any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1372", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1372/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1372/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1372/events", "html_url": "https://github.com/psf/black/issues/1372", "id": 609775102, "node_id": "MDU6SXNzdWU2MDk3NzUxMDI=", "number": 1372, "title": "Accept code sections in stdin", "user": {"login": "Slyces", "id": 22822015, "node_id": "MDQ6VXNlcjIyODIyMDE1", "avatar_url": "https://avatars0.githubusercontent.com/u/22822015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Slyces", "html_url": "https://github.com/Slyces", "followers_url": "https://api.github.com/users/Slyces/followers", "following_url": "https://api.github.com/users/Slyces/following{/other_user}", "gists_url": "https://api.github.com/users/Slyces/gists{/gist_id}", "starred_url": "https://api.github.com/users/Slyces/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Slyces/subscriptions", "organizations_url": "https://api.github.com/users/Slyces/orgs", "repos_url": "https://api.github.com/users/Slyces/repos", "events_url": "https://api.github.com/users/Slyces/events{/privacy}", "received_events_url": "https://api.github.com/users/Slyces/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-30T09:55:27Z", "updated_at": "2020-06-09T18:49:53Z", "closed_at": "2020-04-30T17:15:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Context**\r\nWhen working on code, I often end up on code-bases that I didn't write. I'd like to be able to reformat only some specific sections of those files. \r\n\r\n**Possible solutions**\r\nThe problem being stated above, I see two solutions that could solve it:\r\n1. Provide an optional range of lines (where formatting should be applied) as it might be done in [yapf](https://github.com/google/yapf)\r\n2. Accept partial code from stdin\r\n\r\nI won't be commenting on option 1: it has been done elsewhere, and even though it does solve the initial statement of my problem, it doesn't solve it in a really \"handy way\": you still need to provide the entire file, and figuring out the ranges I'm interested in is not often easy.\r\nOption 2 is more suited to my actual use and would make black more consistent in its handling of stdin (as option 1 doesn't really apply to any stdin input).\r\n\r\n**In-depth example**\r\n\r\n\r\nLet's take this example, slightly modified from [this page](https://black.readthedocs.io/en/stable/the_black_code_style.html) of the documentation:\r\n```\r\nImportantClass.important_method(exc, limit, lookup_lines, capture_locals, extra_argument, other_argument)\r\n```\r\nBlack formats this line just fine from stdin (assuming `$code` contains the code):\r\n```\r\n$ echo \"$code\" | black -l 80 -q -\r\nImportantClass.important_method(\r\n    exc, limit, lookup_lines, capture_locals, extra_argument, other_argument\r\n)\r\n```\r\n\r\nNow assume that this line of code is deep inside a complex file of code, and is nested inside a class, and a method.\r\n\r\n```\r\nclass A:\r\n    def method(self):\r\n         ...\r\n         ImportantClass.important_method(exc, limit, lookup_lines, capture_locals, extra_argument, other_argument)\r\n        ...\r\n```\r\nOur line of code is still the same, but is now prefixed with 8 spaces (or two tabs if you prefer).\r\n```\r\n        ImportantClass.important_method(exc, limit, lookup_lines, capture_locals, extra_argument, other_argument)\r\n```\r\n\r\nNow black is having trouble to process it:\r\n```\r\nerror: cannot format -: cannot use --safe with this file; failed to parse source file.  AST error message: unexpected indent (<unknown>, line 1)\r\n```\r\n\r\n**Solving it the stdin way**\r\nHowever, black would actually be able to process it if we just handle those spaces and the expected line length (80 -> 72):\r\n```\r\n$ echo \"$line\" | sed 's/^        //' | black -q -l 72 - | sed 's/^/        /'\r\n        ImportantClass.important_method(\r\n            exc,\r\n            limit,\r\n            lookup_lines,\r\n            capture_locals,\r\n            extra_argument,\r\n            other_argument,\r\n        )\r\n```\r\nPlease note that the formatting changed, as we have less line length available.\r\n\r\nAssuming that the first line represents the base indentation level (which seems a reasonable assumption), this easy hack shows that black can actually do it with a little help.\r\nA more elaborate script to detect indentation level and use some kind of sed magic could do it (and if you have one I'd be happy to use it for now) but it feels a bit weird for something so simple.\r\n\r\n**Additional information**\r\nFor those interested, this problem originates from using black as a filter inside vim, giving a sample of code as input and replacing that sample with black's output.\r\n\r\n-----------------------------\r\nObviously, if anyone has interesting arguments as to why this behavior does not make sense, do not hesitate!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1368", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1368/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1368/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1368/events", "html_url": "https://github.com/psf/black/issues/1368", "id": 608972859, "node_id": "MDU6SXNzdWU2MDg5NzI4NTk=", "number": 1368, "title": "Chokes on annotated unparenthesised tuples", "user": {"login": "retnikt", "id": 24581770, "node_id": "MDQ6VXNlcjI0NTgxNzcw", "avatar_url": "https://avatars1.githubusercontent.com/u/24581770?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retnikt", "html_url": "https://github.com/retnikt", "followers_url": "https://api.github.com/users/retnikt/followers", "following_url": "https://api.github.com/users/retnikt/following{/other_user}", "gists_url": "https://api.github.com/users/retnikt/gists{/gist_id}", "starred_url": "https://api.github.com/users/retnikt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retnikt/subscriptions", "organizations_url": "https://api.github.com/users/retnikt/orgs", "repos_url": "https://api.github.com/users/retnikt/repos", "events_url": "https://api.github.com/users/retnikt/events{/privacy}", "received_events_url": "https://api.github.com/users/retnikt/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 867432794, "node_id": "MDU6TGFiZWw4Njc0MzI3OTQ=", "url": "https://api.github.com/repos/psf/black/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-29T11:14:49Z", "updated_at": "2020-08-03T21:05:29Z", "closed_at": "2020-08-03T21:05:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "See upstream python/typed_ast#136. I thought it would be worth reporting here just for information.\r\nExample:\r\n```python\r\nfoo: tuple = 5,\r\n```\r\n```\r\nerror: cannot format test.py: Cannot parse: 1:14: foo: tuple = 5,\r\nOh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\r\n1 file failed to reformat.\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1367", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1367/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1367/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1367/events", "html_url": "https://github.com/psf/black/issues/1367", "id": 608924860, "node_id": "MDU6SXNzdWU2MDg5MjQ4NjA=", "number": 1367, "title": "Use black as a library", "user": {"login": "saroad2", "id": 19425795, "node_id": "MDQ6VXNlcjE5NDI1Nzk1", "avatar_url": "https://avatars0.githubusercontent.com/u/19425795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saroad2", "html_url": "https://github.com/saroad2", "followers_url": "https://api.github.com/users/saroad2/followers", "following_url": "https://api.github.com/users/saroad2/following{/other_user}", "gists_url": "https://api.github.com/users/saroad2/gists{/gist_id}", "starred_url": "https://api.github.com/users/saroad2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saroad2/subscriptions", "organizations_url": "https://api.github.com/users/saroad2/orgs", "repos_url": "https://api.github.com/users/saroad2/repos", "events_url": "https://api.github.com/users/saroad2/events{/privacy}", "received_events_url": "https://api.github.com/users/saroad2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-29T09:54:51Z", "updated_at": "2020-04-30T07:48:29Z", "closed_at": "2020-04-30T07:48:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hey! First of all, thanks for this amazing tool! This really elevates my code significantly.\r\n\r\nI would like to write a python main that runs black with a few more checks. As for now, black only can be called as a command in the command line, therefore the only way I could call black is via `subprocess.run`. I would like to use black as a library that I can import. Here is some code example:\r\n\r\n```python\r\nimport black\r\nfrom pathlib import Path\r\n\r\nsource = Path(\"/this/is/a/path/to/code.py\")\r\nblack.format_file(source)\r\n\r\ncode_string = '''\r\ndef a_function():\r\n   \"\"\"This is a function to format.\"\"\"\r\n   a= b  # This line will be formatted\r\n'''\r\n\r\nblack.format_string(code_string)\r\n\r\n```\r\n\r\nThe alternative is to use `subprocess.run`, but it seems like something that can be avoided.\r\nWhat do you think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1366", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1366/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1366/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1366/events", "html_url": "https://github.com/psf/black/issues/1366", "id": 608605482, "node_id": "MDU6SXNzdWU2MDg2MDU0ODI=", "number": 1366, "title": "Bring pylint to its senses with a .pylintrc", "user": {"login": "mastergibber", "id": 13207983, "node_id": "MDQ6VXNlcjEzMjA3OTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/13207983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mastergibber", "html_url": "https://github.com/mastergibber", "followers_url": "https://api.github.com/users/mastergibber/followers", "following_url": "https://api.github.com/users/mastergibber/following{/other_user}", "gists_url": "https://api.github.com/users/mastergibber/gists{/gist_id}", "starred_url": "https://api.github.com/users/mastergibber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mastergibber/subscriptions", "organizations_url": "https://api.github.com/users/mastergibber/orgs", "repos_url": "https://api.github.com/users/mastergibber/repos", "events_url": "https://api.github.com/users/mastergibber/events{/privacy}", "received_events_url": "https://api.github.com/users/mastergibber/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-28T20:47:34Z", "updated_at": "2020-05-08T14:26:29Z", "closed_at": "2020-05-08T14:26:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Black is better than pylint. It solves problems instead of just pointing them out. But pylint whines whenever black makes better choices. Can we get a sample .pylintrc file that will make pylint accept the wisdom of black's choices?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1364", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1364/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1364/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1364/events", "html_url": "https://github.com/psf/black/issues/1364", "id": 606683517, "node_id": "MDU6SXNzdWU2MDY2ODM1MTc=", "number": 1364, "title": "Black should add separators for control flow", "user": {"login": "ColinKennedy", "id": 10103049, "node_id": "MDQ6VXNlcjEwMTAzMDQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/10103049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ColinKennedy", "html_url": "https://github.com/ColinKennedy", "followers_url": "https://api.github.com/users/ColinKennedy/followers", "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}", "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions", "organizations_url": "https://api.github.com/users/ColinKennedy/orgs", "repos_url": "https://api.github.com/users/ColinKennedy/repos", "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}", "received_events_url": "https://api.github.com/users/ColinKennedy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-25T04:08:14Z", "updated_at": "2020-07-28T19:08:57Z", "closed_at": "2020-07-28T19:08:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "When Python statements aren't split with whitespace, relevant details like \"which block is this `else` meant for\" get lost.\r\n\r\n```python\r\ndef do_something():\r\n    if False:\r\n        foo()\r\n    elif True:\r\n        do()\r\n    for _ in range(10):\r\n        break\r\n    else:\r\n        fizz()\r\n    try:\r\n        print(\"Try something\")\r\n    except:\r\n        print(\"Exception!\")\r\n    else:\r\n        fizz()\r\n    if True:\r\n        buzz()\r\n```\r\n\r\nThere are 2 `else` blocks, neither of which apply to the nearby `if` blocks. But you may not notice because of the layout.\r\n\r\nCompare that to:\r\n\r\n```python\r\ndef do_something():\r\n    if False:\r\n        foo()\r\n    elif True:\r\n        do()\r\n\r\n    for _ in range(10):\r\n        break\r\n    else:\r\n        fizz()\r\n\r\n    try:\r\n        print(\"Try something\")\r\n    except:\r\n        print(\"Exception!\")\r\n    else:\r\n        fizz()\r\n\r\n    if True:\r\n        buzz()\r\n```\r\n\r\nNow it's clear where one block starts and another ends. At the moment I'm accomplishing this by running black as a first pass and then using parso to add newlines for each found block. The general rule of thumb I take take is\r\n\r\n\"if it's not the first source code line, it needs 1 newline before the block\". So you won't end up with situations like\r\n\r\n```python\r\nfor _ in range(10):\r\n\r\n    if True:\r\n        pass\r\n```\r\n\r\nThe same logic applies to control flow statements. `break`,  `continue`, `return`, and `yield`.\r\n\r\nCode like this is hard to decipher.\r\n\r\n```python\r\ndef do_something():\r\n    with Context():\r\n        for _ in range(10):\r\n            for index in range(10):\r\n                if index == 1:\r\n                    continue\r\n            break\r\n            try:\r\n                foo()\r\n            finally:\r\n                bar()\r\n        return afar()\r\n```\r\n\r\nThe `break` and `return` statements in this scenario have incorrect indents. `break` should be in the inner for loop and `return` should be outside of the `with` block. It's hard to tell that they're on incorrect indents because nothing separates the blocks.\r\n\r\n```python\r\ndef do_something():\r\n    with Context():\r\n        for _ in range(10):\r\n            for index in range(10):\r\n                if index == 1:\r\n                    continue\r\n\r\n            break\r\n\r\n            try:\r\n                foo()\r\n            finally:\r\n                bar()\r\n\r\n        return afar()\r\n```\r\n\r\nNow that the statements are separated, it's clear that `break` shouldn't be where it is. And because the return line isn't competing with `bar()`, it's easier to read, too.\r\n\r\nI'd love to see this be brought to black because it's been so helpful.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1363", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1363/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1363/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1363/events", "html_url": "https://github.com/psf/black/issues/1363", "id": 606664985, "node_id": "MDU6SXNzdWU2MDY2NjQ5ODU=", "number": 1363, "title": "Please change the project's name.", "user": {"login": "CydiaGod666", "id": 64293527, "node_id": "MDQ6VXNlcjY0MjkzNTI3", "avatar_url": "https://avatars3.githubusercontent.com/u/64293527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CydiaGod666", "html_url": "https://github.com/CydiaGod666", "followers_url": "https://api.github.com/users/CydiaGod666/followers", "following_url": "https://api.github.com/users/CydiaGod666/following{/other_user}", "gists_url": "https://api.github.com/users/CydiaGod666/gists{/gist_id}", "starred_url": "https://api.github.com/users/CydiaGod666/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CydiaGod666/subscriptions", "organizations_url": "https://api.github.com/users/CydiaGod666/orgs", "repos_url": "https://api.github.com/users/CydiaGod666/repos", "events_url": "https://api.github.com/users/CydiaGod666/events{/privacy}", "received_events_url": "https://api.github.com/users/CydiaGod666/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": true, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-25T01:57:07Z", "updated_at": "2020-06-14T19:04:50Z", "closed_at": "2020-05-06T14:38:00Z", "author_association": "NONE", "active_lock_reason": "spam", "body": "Many view the project's name (Black) as incredibly racist and insensitive. I think it should be changed at the developer(s) earliest convince.\r\n\r\nNaming a project designed to do all the work for you is incredibly insensitive to the African Americans forced to do slave labor.\r\n\r\nThank you for taking the time to read my issue and I hope you consider making this change.\r\n\r\n\\- Cydia God", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1362", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1362/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1362/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1362/events", "html_url": "https://github.com/psf/black/issues/1362", "id": 606594338, "node_id": "MDU6SXNzdWU2MDY1OTQzMzg=", "number": 1362, "title": "Black does not capture cases of strings separated by a space", "user": {"login": "aveach", "id": 5258565, "node_id": "MDQ6VXNlcjUyNTg1NjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/5258565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aveach", "html_url": "https://github.com/aveach", "followers_url": "https://api.github.com/users/aveach/followers", "following_url": "https://api.github.com/users/aveach/following{/other_user}", "gists_url": "https://api.github.com/users/aveach/gists{/gist_id}", "starred_url": "https://api.github.com/users/aveach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aveach/subscriptions", "organizations_url": "https://api.github.com/users/aveach/orgs", "repos_url": "https://api.github.com/users/aveach/repos", "events_url": "https://api.github.com/users/aveach/events{/privacy}", "received_events_url": "https://api.github.com/users/aveach/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-24T21:28:31Z", "updated_at": "2020-04-30T05:25:59Z", "closed_at": "2020-04-30T05:25:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Description:**\r\nLooks like in cases where a continuous string is written with a space, black incorrectly formats it as two separate strings. \r\n\r\n**Steps to Reproduce:**\r\nBlock in file that needs formatting in file: \r\n```python\r\nhelp='Drops purgeable caches before taking the footprint to reduce '\r\n'run-to-run variance'\r\n```\r\n\r\nRunning: `black .` changes it to: \r\n```python\r\nhelp=\"Drops purgeable caches before taking the footprint to reduce \" \"run-to-run variance\",\r\n```\r\n\r\n**Environment:**\r\n- Version: 19.10b0\r\n- OS and Python version: Ubuntu 18.04 -- Python3.6.10\r\n\r\n**Does this bug also happen on master?**\r\n[Yes](https://black.now.sh/?version=master&state=_Td6WFoAAATm1rRGAgAhARYAAAB0L-Wj4ACbAIBdAD2IimZxl1N_Wk6rkwwsBJpXt7K5iO5ZvS0Ag6ne2OzIPbM-KyNILaQ12B4HDwjhzJdNNx-rOo_TNQFyHyRCCx6JMeCjW2fjlf0rQGXkjY6cAh80rnUQ68ziMyeMm2htl79RXnyDHlcH1a-pVr7a-8OLs8CANLHGo9bqBns0CPNMAHYzvmH8BjvIAAGcAZwBAAB-H8ViscRn-wIAAAAABFla)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1360", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1360/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1360/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1360/events", "html_url": "https://github.com/psf/black/issues/1360", "id": 605967960, "node_id": "MDU6SXNzdWU2MDU5Njc5NjA=", "number": 1360, "title": "Black --check returns 1 when invalid config file is specified", "user": {"login": "tobywf", "id": 2903454, "node_id": "MDQ6VXNlcjI5MDM0NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/2903454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobywf", "html_url": "https://github.com/tobywf", "followers_url": "https://api.github.com/users/tobywf/followers", "following_url": "https://api.github.com/users/tobywf/following{/other_user}", "gists_url": "https://api.github.com/users/tobywf/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobywf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobywf/subscriptions", "organizations_url": "https://api.github.com/users/tobywf/orgs", "repos_url": "https://api.github.com/users/tobywf/repos", "events_url": "https://api.github.com/users/tobywf/events{/privacy}", "received_events_url": "https://api.github.com/users/tobywf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-24T01:08:49Z", "updated_at": "2020-04-30T07:47:53Z", "closed_at": "2020-04-30T07:47:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\n`--check` returns `1` when invalid `--config` is specified, not some higher error code as implied. This can make debugging issues tricky for CI integrations relying on return codes. I wouldn't go so far as to call it a bug, but it was a bit unexpected to me.\r\n\r\n(It also happens without `--check`.)\r\n\r\n**To Reproduce**\r\n\r\n```console\r\n$ printf \"def a():\\n    pass\\n\" | black - --check; echo \"return: $?\"\r\ndef a():\r\n    pass\r\nAll done! \u2728 \ud83c\udf70 \u2728\r\n1 file left unchanged.\r\nreturn: 0\r\n$ printf \"def a():\\n    pass\\n\" | black - --check --config \"foo\"; echo \"return: $?\"\r\nError: Could not open file foo: Error reading configuration file: [Errno 2] No such file or directory: 'foo'\r\nreturn: 1\r\n```\r\n\r\n**Expected behavior**\r\n\r\n`--check` says:\r\n\r\n> Don't write the files back, just return the status.  Return code 0 means nothing would change.  Return code 1 means some files would be reformatted.  Return code 123 means there was an internal error.\r\n\r\nSo I would expect this case to return an error code other than `1`.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: `19.10b0`, `master` (both tested)\r\n- OS and Python version: macOS 10.15.3 with Python 3.7.7; and Ubuntu 18.04.4 with Python 3.6.9\r\n\r\n**Does this bug also happen on master?**\r\n\r\nYes (tested via cloning and `pipenv shell`)\r\n\r\n**Additional context**\r\n\r\nThis can be very awkward to debug in a CI environment if you rely on return codes only.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1359", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1359/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1359/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1359/events", "html_url": "https://github.com/psf/black/issues/1359", "id": 605646424, "node_id": "MDU6SXNzdWU2MDU2NDY0MjQ=", "number": 1359, "title": "Failure to reformat file", "user": {"login": "dirn", "id": 168109, "node_id": "MDQ6VXNlcjE2ODEwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/168109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dirn", "html_url": "https://github.com/dirn", "followers_url": "https://api.github.com/users/dirn/followers", "following_url": "https://api.github.com/users/dirn/following{/other_user}", "gists_url": "https://api.github.com/users/dirn/gists{/gist_id}", "starred_url": "https://api.github.com/users/dirn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dirn/subscriptions", "organizations_url": "https://api.github.com/users/dirn/orgs", "repos_url": "https://api.github.com/users/dirn/repos", "events_url": "https://api.github.com/users/dirn/events{/privacy}", "received_events_url": "https://api.github.com/users/dirn/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-23T15:46:48Z", "updated_at": "2020-04-23T15:50:08Z", "closed_at": "2020-04-23T15:48:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** I ran Black on the following file.\r\n\r\n```from django.contrib import admin\r\nfrom django.urls import path\r\n\r\nurlpatterns = [\r\n    # TODO: Determine if we even want to use the admin.\r\n    path(\"admin/\", admin.site.urls),  # type: ignore\r\n]\r\n```\r\n\r\nIt's essentially the default `urls.py` created by `django-admin start-project` with two changes:\r\n\r\n* a comment\r\n* a type: ignore\r\n\r\nBoth of these changes are required to encounter the bug.\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\n1. Use the above file\r\n2. Run _Black_ on it\r\n3. See error\r\n\r\n**Expected behavior** Black should run successfully without modifying the file.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: 19.10b0\r\n- OS and Python version: macOS/Python 3.8.2\r\n\r\n**Does this bug also happen on master?** Using the (online playground](https://black.now.sh/?version=master&state=_Td6WFoAAATm1rRGAgAhARYAAAB0L-Wj4AEFALpdAD2IimZxl1N_WlkPinBFn628DOx5CgC_z5rIQ7OtOw6At4JU7l_CGHZPIEv_HUl2TVMtCJmK8ebPCoZ9dxpfb38cg13Q8MB8i0CuEjJdjID7ubnJ9YrGaL8AQz5SVH3VCyED81NLLQa6oHir7b41KuRZhX5HyhxxNDO1o2jvV3joZaf8jr6-vOMQ53WyEyL3xVNhY-yCHps__Xn0OcQSJcU_VgLyNSxOcvkYIXgzmUprhH4O0GDK1eGwAAAAAP3MN1knYkwJAAHWAYYCAADWP-TxscRn-wIAAAAABFla), Black merges the two lines inside `urlpatterns` together, resulting in a single comment and no executable code.\r\n\r\n**Additional context**\r\n\r\n```--- src\r\n+++ dst\r\n@@ -48,48 +48,9 @@\r\n         List(\r\n           ctx=\r\n             Load(\r\n             )  # /Load\r\n           elts=\r\n-            Call(\r\n-              args=\r\n-                Constant(\r\n-                  value=\r\n-                    'admin/',  # str\r\n-                )  # /Constant\r\n-                Attribute(\r\n-                  attr=\r\n-                    'urls',  # str\r\n-                  ctx=\r\n-                    Load(\r\n-                    )  # /Load\r\n-                  value=\r\n-                    Attribute(\r\n-                      attr=\r\n-                        'site',  # str\r\n-                      ctx=\r\n-                        Load(\r\n-                        )  # /Load\r\n-                      value=\r\n-                        Name(\r\n-                          ctx=\r\n-                            Load(\r\n-                            )  # /Load\r\n-                          id=\r\n-                            'admin',  # str\r\n-                        )  # /Name\r\n-                    )  # /Attribute\r\n-                )  # /Attribute\r\n-              func=\r\n-                Name(\r\n-                  ctx=\r\n-                    Load(\r\n-                    )  # /Load\r\n-                  id=\r\n-                    'path',  # str\r\n-                )  # /Name\r\n-              keywords=\r\n-            )  # /Call\r\n         )  # /List\r\n     )  # /Assign\r\n   type_ignores=\r\n )  # /Module\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1350", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1350/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1350/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1350/events", "html_url": "https://github.com/psf/black/issues/1350", "id": 601790568, "node_id": "MDU6SXNzdWU2MDE3OTA1Njg=", "number": 1350, "title": "Refactor black.py into a black/ python package", "user": {"login": "vdwees", "id": 24944371, "node_id": "MDQ6VXNlcjI0OTQ0Mzcx", "avatar_url": "https://avatars0.githubusercontent.com/u/24944371?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vdwees", "html_url": "https://github.com/vdwees", "followers_url": "https://api.github.com/users/vdwees/followers", "following_url": "https://api.github.com/users/vdwees/following{/other_user}", "gists_url": "https://api.github.com/users/vdwees/gists{/gist_id}", "starred_url": "https://api.github.com/users/vdwees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vdwees/subscriptions", "organizations_url": "https://api.github.com/users/vdwees/orgs", "repos_url": "https://api.github.com/users/vdwees/repos", "events_url": "https://api.github.com/users/vdwees/events{/privacy}", "received_events_url": "https://api.github.com/users/vdwees/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 869135448, "node_id": "MDU6TGFiZWw4NjkxMzU0NDg=", "url": "https://api.github.com/repos/psf/black/labels/design", "name": "design", "color": "0052cc", "default": false, "description": "What do we want Black to be?"}, {"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}, {"id": 1884525427, "node_id": "MDU6TGFiZWwxODg0NTI1NDI3", "url": "https://api.github.com/repos/psf/black/labels/stable", "name": "stable", "color": "44ff44", "default": false, "description": "This issue needs to be solved for the stable version to be released."}], "state": "closed", "locked": false, "assignee": {"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "cooperlees", "id": 3005596, "node_id": "MDQ6VXNlcjMwMDU1OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/3005596?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cooperlees", "html_url": "https://github.com/cooperlees", "followers_url": "https://api.github.com/users/cooperlees/followers", "following_url": "https://api.github.com/users/cooperlees/following{/other_user}", "gists_url": "https://api.github.com/users/cooperlees/gists{/gist_id}", "starred_url": "https://api.github.com/users/cooperlees/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cooperlees/subscriptions", "organizations_url": "https://api.github.com/users/cooperlees/orgs", "repos_url": "https://api.github.com/users/cooperlees/repos", "events_url": "https://api.github.com/users/cooperlees/events{/privacy}", "received_events_url": "https://api.github.com/users/cooperlees/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-04-17T08:17:59Z", "updated_at": "2020-05-08T15:50:51Z", "closed_at": "2020-05-08T15:50:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "A lot of packages I use organize the code into directories with lots of small files. Black stores almost all of its logic into a single, massive file: `black.py` Is this just for historical reasons, or is there a technical reason behind this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1347", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1347/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1347/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1347/events", "html_url": "https://github.com/psf/black/issues/1347", "id": 600355220, "node_id": "MDU6SXNzdWU2MDAzNTUyMjA=", "number": 1347, "title": "Vim patch v8.2.0578 appears to add more strict HEREDOC syntax", "user": {"login": "jsivak", "id": 251759, "node_id": "MDQ6VXNlcjI1MTc1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/251759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsivak", "html_url": "https://github.com/jsivak", "followers_url": "https://api.github.com/users/jsivak/followers", "following_url": "https://api.github.com/users/jsivak/following{/other_user}", "gists_url": "https://api.github.com/users/jsivak/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsivak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsivak/subscriptions", "organizations_url": "https://api.github.com/users/jsivak/orgs", "repos_url": "https://api.github.com/users/jsivak/repos", "events_url": "https://api.github.com/users/jsivak/events{/privacy}", "received_events_url": "https://api.github.com/users/jsivak/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-15T14:47:40Z", "updated_at": "2020-04-17T02:26:10Z", "closed_at": "2020-04-17T02:26:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "After building vim to include patch 8.2.0578 (https://github.com/vim/vim/releases/tag/v8.2.0578), black.vim now causes the following error to show at vim startup:\r\n\r\n```Error detected while processing /home/jsivak/configs/vim/vim/pack/my_plugins/opt/black/plugin/black.vim:\r\nline   43:\r\nE221: Marker cannot start with lower case letter\r\n  File \"<string>\", line 1\r\n    << endpython3\r\n    ^\r\nSyntaxError: invalid syntax\r\nline   44:\r\nE1042: import/export can only be used in vim9script\r\nline   45:\r\nE1042: import/export can only be used in vim9script\r\nline   46:\r\nE1042: import/export can only be used in vim9script\r\nline   48:\r\nE1077: Missing argument type for exec_prefix\r\nline   49:\r\nE488: Trailing characters:   try:\r\nline   50:\r\nE492: Not an editor command:     default = vim.eval(\"g:pymode_python\").strip()\r\nline   51:\r\nE492: Not an editor command:   except vim.error:\r\nline   52:\r\nE492: Not an editor command:     default = \"\"\r\nline   53:\r\nE121: Undefined variable: default\r\nline   54:\r\nE133: :return not inside a function\r\nline   56:\r\nE133: :return not inside a function\r\nline   57:\r\nE133: :return not inside a function\r\nline   59:\r\nE1077: Missing argument type for venv_path\r\nline   61:\r\nE133: :return not inside a function\r\nline   62:\r\nE133: :return not inside a function\r\nline   64:\r\nE1077: Missing argument type for venv_path\r\nline   66:\r\nE133: :return not inside a function\r\nline   67:\r\nE133: :return not inside a function\r\nline   69:\r\nE1056: expected a type: [NULL]\r\nline  152:\r\nE1057: Missing :enddef\r\nline  153:\r\nE171: Missing :endif\r\nPress ENTER or type command to continue\r\n```\r\nI'm not 100% sure of the vim changes, but if the \"endpython3\" HEREDOC tag in black.vim is changed to Endpython3 (note the uppercase first letter), then black.vim is processed without error in vim.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1346", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1346/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1346/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1346/events", "html_url": "https://github.com/psf/black/issues/1346", "id": 600040144, "node_id": "MDU6SXNzdWU2MDAwNDAxNDQ=", "number": 1346, "title": "Black exceeds maximum line length even if it could easily fit", "user": {"login": "aklajnert", "id": 18279161, "node_id": "MDQ6VXNlcjE4Mjc5MTYx", "avatar_url": "https://avatars0.githubusercontent.com/u/18279161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aklajnert", "html_url": "https://github.com/aklajnert", "followers_url": "https://api.github.com/users/aklajnert/followers", "following_url": "https://api.github.com/users/aklajnert/following{/other_user}", "gists_url": "https://api.github.com/users/aklajnert/gists{/gist_id}", "starred_url": "https://api.github.com/users/aklajnert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aklajnert/subscriptions", "organizations_url": "https://api.github.com/users/aklajnert/orgs", "repos_url": "https://api.github.com/users/aklajnert/repos", "events_url": "https://api.github.com/users/aklajnert/events{/privacy}", "received_events_url": "https://api.github.com/users/aklajnert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-15T05:53:52Z", "updated_at": "2020-04-27T04:35:18Z", "closed_at": "2020-04-27T04:35:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Black v19.10b0**\r\n\r\n[Playground link](https://black.now.sh/?version=stable&state=_Td6WFoAAATm1rRGAgAhARYAAAB0L-Wj4AFXALZdAD2IimZxl1N_WlXnON2nzNKQSFUIrBm6Yf_MOHVNpKZ8fu1UKZ4bQToKtPTBDM_MXd_41lAudhexbpQ34_fWSov0lXnMaMzP6xtbT3E4TkMZEnZJW3g_eWGsQZasPFPhFf04r5q2lo-bvDgaMjzOl3ICf3kLZ1JX0zq5Xw9Aq_rAK_6_yfrnFQbGCDmO6zw6mXzGZlP0GHjG7SXTKCWS2ryMNmYva2COG7UpVsjHya1sza5RiUkKAAAA-8e9tjdiwLoAAdIB2AIAAFEFp0GxxGf7AgAAAAAEWVo=)\r\n\r\n## Options\r\n\r\n`--line-length=110`\r\n\r\n## Input\r\n\r\nLongest line: 124 characters.\r\n\r\n```python\r\nclass Command(BaseCommand):\r\n    def execute(self, project_data):\r\n        enterprise, _ = Enterprise.objects.get_or_create(name=project_data.get(\"enterprise\"))\r\n        project, _ = Project.objects.get_or_create(name=project_data.get(\"name\"), enterprise=enterprise)\r\n\r\n```\r\n\r\n## Output\r\n\r\nNo change.\r\n\r\n```python\r\nclass Command(BaseCommand):\r\n    def execute(self, project_data):\r\n        enterprise, _ = Enterprise.objects.get_or_create(name=project_data.get(\"enterprise\"))\r\n        project, _ = Project.objects.get_or_create(name=project_data.get(\"name\"), enterprise=enterprise)\r\n\r\n```\r\n\r\n## Expected\r\n```python\r\nclass Command(BaseCommand):\r\n    def execute(self, project_data):\r\n        enterprise, _ = Enterprise.objects.get_or_create(\r\n            name=project_data.get(\"enterprise\")\r\n        )\r\n        project, _ = Project.objects.get_or_create(\r\n            name=project_data.get(\"name\"), enterprise=enterprise\r\n        )\r\n```\r\n\r\nEven if I'll change the line breaks to fit the desired line length, black changes it back (happens also on master).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1344", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1344/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1344/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1344/events", "html_url": "https://github.com/psf/black/issues/1344", "id": 599303261, "node_id": "MDU6SXNzdWU1OTkzMDMyNjE=", "number": 1344, "title": "Parsing error for generator expression with implicit tuple", "user": {"login": "Horstage", "id": 16322246, "node_id": "MDQ6VXNlcjE2MzIyMjQ2", "avatar_url": "https://avatars3.githubusercontent.com/u/16322246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Horstage", "html_url": "https://github.com/Horstage", "followers_url": "https://api.github.com/users/Horstage/followers", "following_url": "https://api.github.com/users/Horstage/following{/other_user}", "gists_url": "https://api.github.com/users/Horstage/gists{/gist_id}", "starred_url": "https://api.github.com/users/Horstage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Horstage/subscriptions", "organizations_url": "https://api.github.com/users/Horstage/orgs", "repos_url": "https://api.github.com/users/Horstage/repos", "events_url": "https://api.github.com/users/Horstage/events{/privacy}", "received_events_url": "https://api.github.com/users/Horstage/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-14T05:16:17Z", "updated_at": "2020-04-15T08:18:43Z", "closed_at": "2020-04-14T14:57:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** A clear and concise description of what the bug is.\r\nWhen writing a generator expression `(i**2 for i in range(10))` which returns implicitly a tuple `(i, i**2 for i in range(10))` there is an parsing error.\r\n\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\nThe following code (blown up example to get to >88 chars)\r\n```python\r\ndef foo():\r\n    return (variable_a, variable_b for variable_a, variable_b in zip(range(10), range(10)))\r\n```\r\nresults in\r\n> error: cannot format black_check.py: Cannot parse: 2:35:     return (variable_a, variable_b for variable_a, variable_b in zip(range(10), range(10)))\r\n\r\nHowever,\r\n```python\r\ndef foo():\r\n    return ((variable_a, variable_b) for variable_a, variable_b in zip(range(10), range(10)))\r\n```\r\nworks just fine and results in \r\n```python\r\ndef foo():\r\n    return (\r\n        (variable_a, variable_b) for variable_a, variable_b in zip(range(10), range(10))\r\n    )\r\n```\r\n\r\n**Expected behavior** A clear and concise description of what you expected to happen.\r\nI would expect the same output for both examples\r\n\r\n**Environment:**\r\n\r\n- Version: 19.10b0\r\n- OS and Python version: Windows 10 with Python 3.7.7\r\n\r\n**Does this bug also happen on master?**:\r\nYes it does\r\n[black.now.sh/?version=master](https://black.now.sh/?version=master&state=_Td6WFoAAATm1rRGAgAhARYAAAB0L-Wj4ACrAHFdAD2IimZxl1N_WlbvK5V9KEd0suDTtUY1JbKiBl4H6EXxj_d755vSxsmT3AHR2faQMpGXiTLdcJGyriKvpHEm89QYGWh2X1L8q_HxLAGdioWymZv6Vy8iBXglNU_P37Rxd4CNYQDOMKm2AXX5BmPBlroAAAAAALbPPainsxxOAAGNAawBAADhNmRascRn-wIAAAAABFla)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1343", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1343/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1343/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1343/events", "html_url": "https://github.com/psf/black/issues/1343", "id": 598227013, "node_id": "MDU6SXNzdWU1OTgyMjcwMTM=", "number": 1343, "title": "Black breaks flake8's E203 by adding space in slicing expression", "user": {"login": "tgy", "id": 694873, "node_id": "MDQ6VXNlcjY5NDg3Mw==", "avatar_url": "https://avatars2.githubusercontent.com/u/694873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgy", "html_url": "https://github.com/tgy", "followers_url": "https://api.github.com/users/tgy/followers", "following_url": "https://api.github.com/users/tgy/following{/other_user}", "gists_url": "https://api.github.com/users/tgy/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgy/subscriptions", "organizations_url": "https://api.github.com/users/tgy/orgs", "repos_url": "https://api.github.com/users/tgy/repos", "events_url": "https://api.github.com/users/tgy/events{/privacy}", "received_events_url": "https://api.github.com/users/tgy/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-11T09:15:45Z", "updated_at": "2020-04-11T11:13:32Z", "closed_at": "2020-04-11T11:13:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** A clear and concise description of what the bug is.\r\n\r\nThe following code\r\n```python\r\nprocessed = \"\"\r\nsplits = [1, 2]\r\nlines = [\"test\", \"test\", \"test\"]\r\nprocessed += \"\".join(lines[splits[-1]:])\r\n```\r\nis reformated by `black` as\r\n```python\r\nprocessed = \"\"\r\nsplits = [1, 2]\r\nlines = [\"test\", \"test\", \"test\"]\r\nprocessed += \"\".join(lines[splits[-1] :])\r\n```\r\nwhere a space is added in `lines[splits[-1] :]`.\r\n\r\nThis breaks `flake8`\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\nJust apply black to a Python file containing what I showed above\r\n\r\n**Expected behavior** A clear and concise description of what you expected to happen.\r\n\r\nI expect black to respect `E203`\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: `master (959848c)`\r\n- OS and Python version: `macOS 10.15.4`, `Python 3.7.6`\r\n\r\n**Does this bug also happen on master?** To answer this, you have two options:\r\n\r\nYes, tested on `master (959848c)`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1342", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1342/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1342/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1342/events", "html_url": "https://github.com/psf/black/issues/1342", "id": 598071739, "node_id": "MDU6SXNzdWU1OTgwNzE3Mzk=", "number": 1342, "title": "Possible alternatives to the pickle module", "user": {"login": "dosisod", "id": 39638017, "node_id": "MDQ6VXNlcjM5NjM4MDE3", "avatar_url": "https://avatars3.githubusercontent.com/u/39638017?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dosisod", "html_url": "https://github.com/dosisod", "followers_url": "https://api.github.com/users/dosisod/followers", "following_url": "https://api.github.com/users/dosisod/following{/other_user}", "gists_url": "https://api.github.com/users/dosisod/gists{/gist_id}", "starred_url": "https://api.github.com/users/dosisod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dosisod/subscriptions", "organizations_url": "https://api.github.com/users/dosisod/orgs", "repos_url": "https://api.github.com/users/dosisod/repos", "events_url": "https://api.github.com/users/dosisod/events{/privacy}", "received_events_url": "https://api.github.com/users/dosisod/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-10T20:13:13Z", "updated_at": "2020-05-04T04:04:09Z", "closed_at": "2020-05-04T04:04:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the [pickle documentation](https://docs.python.org/3/library/pickle.html):\r\n\r\n>Warning\r\n>The pickle module is not secure. Only unpickle data you trust.\r\n>It is possible to construct malicious pickle data which will execute arbitrary code during unpickling.\r\n>Never unpickle data that could have come from an untrusted source, or that could have been tampered with.\r\n\r\n>Consider signing data with hmac if you need to ensure that it has not been tampered with.\r\n\r\n>Safer serialization formats such as json may be more appropriate if you are processing untrusted\r\n>data. See Comparison with json.\r\n\r\nBlack stores cache data in pickle format. Is it reasonable to assume that the cached pickle files are safe against tampering (whether it be by the user or someone else)? If not, would it be possible to use a file format (perhaps json) to store cache data instead?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1341", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1341/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1341/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1341/events", "html_url": "https://github.com/psf/black/issues/1341", "id": 598010868, "node_id": "MDU6SXNzdWU1OTgwMTA4Njg=", "number": 1341, "title": "INTERNAL ERROR on mismatched `# fmt` comments", "user": {"login": "inglesp", "id": 28734, "node_id": "MDQ6VXNlcjI4NzM0", "avatar_url": "https://avatars1.githubusercontent.com/u/28734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inglesp", "html_url": "https://github.com/inglesp", "followers_url": "https://api.github.com/users/inglesp/followers", "following_url": "https://api.github.com/users/inglesp/following{/other_user}", "gists_url": "https://api.github.com/users/inglesp/gists{/gist_id}", "starred_url": "https://api.github.com/users/inglesp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inglesp/subscriptions", "organizations_url": "https://api.github.com/users/inglesp/orgs", "repos_url": "https://api.github.com/users/inglesp/repos", "events_url": "https://api.github.com/users/inglesp/events{/privacy}", "received_events_url": "https://api.github.com/users/inglesp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}, {"id": 867432794, "node_id": "MDU6TGFiZWw4Njc0MzI3OTQ=", "url": "https://api.github.com/repos/psf/black/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-10T17:49:17Z", "updated_at": "2020-08-04T00:41:38Z", "closed_at": "2020-08-04T00:41:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** INTERNAL ERROR on mismatched `# fmt` comments\r\n\r\n**To Reproduce** Steps to reproduce the behavior:\r\n\r\nRun `black` over a file containing mismatched `# fmt` comments inside functions.\r\n\r\n```\r\n$ cat bad.py \r\ndef f1():\r\n    pass\r\n    # fmt: off\r\n    # fmt: off\r\n\r\n\r\ndef f2():\r\n    pass\r\n    # fmt: off\r\n    # fmt: on\r\n\r\n$ black bad.py\r\nerror: cannot format bad.py: INTERNAL ERROR: Black produced code that is not equivalent to the source.  Please report a bug on https://github.com/psf/black/issues.  This diff might be helpful: /var/folders/fm/_0l2_jwj0cs6mz43zdq91gfw0000gn/T/blk_62sexy11.log\r\nOh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\r\n1 file failed to reformat.\r\n```\r\n**Expected behavior** Black should not crash, and should point out the mismatched `# fmt` comments.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: 19.10b0\r\n- OS and Python version: OSX/Python 3.8.0\r\n\r\n**Does this bug also happen on master?** To answer this, you have two options:\r\n\r\nYes, with 19.10b1.dev48+g959848c on my machine.\r\n\r\nBut with the online formatter (running 959848c17639bfc646128f6b582c5858164a5001) it doesn't crash, but produces something incorrect:\r\n\r\n![image](https://user-images.githubusercontent.com/28734/79011219-7d246900-7b5b-11ea-8c8d-165f78677ac5.png)\r\n\r\n```\r\ndef f1():\r\n    pass\r\n    # fmt: off\r\n    # fmt: off\r\n\r\n    def f2():\r\n        pass\r\n        # fmt: off\r\n        # fmt: on\r\n\r\n```\r\n\r\n**Additional context** I have attached the debug output.\r\n\r\n[blk_62sexy11.log](https://github.com/psf/black/files/4462728/blk_62sexy11.log)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1338", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1338/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1338/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1338/events", "html_url": "https://github.com/psf/black/issues/1338", "id": 597268179, "node_id": "MDU6SXNzdWU1OTcyNjgxNzk=", "number": 1338, "title": "Black is changing string output", "user": {"login": "teran-mckinney", "id": 4624114, "node_id": "MDQ6VXNlcjQ2MjQxMTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/4624114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teran-mckinney", "html_url": "https://github.com/teran-mckinney", "followers_url": "https://api.github.com/users/teran-mckinney/followers", "following_url": "https://api.github.com/users/teran-mckinney/following{/other_user}", "gists_url": "https://api.github.com/users/teran-mckinney/gists{/gist_id}", "starred_url": "https://api.github.com/users/teran-mckinney/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teran-mckinney/subscriptions", "organizations_url": "https://api.github.com/users/teran-mckinney/orgs", "repos_url": "https://api.github.com/users/teran-mckinney/repos", "events_url": "https://api.github.com/users/teran-mckinney/events{/privacy}", "received_events_url": "https://api.github.com/users/teran-mckinney/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-09T13:05:54Z", "updated_at": "2020-04-10T01:45:07Z", "closed_at": "2020-04-10T01:34:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Black is changing string output.\r\n\r\nHere's a small test case:\r\n\r\n```\r\nraise ValueError('\"{}\" is an invalid base58 encoded'\r\n                 'character'.format('l'))\r\n```\r\n\r\nBecomes:\r\n\r\n```\r\nraise ValueError('\"{}\" is an invalid base58 encoded' \"character\".format(\"l\"))\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: 19.10b0 and master\r\n- OS and Python version: Linux / Python 3.7.3\r\n\r\n**Does this bug also happen on master?** To answer this, you have two options:\r\n\r\n1. Use the online formatter at https://black.now.sh/?version=master, which will use the\r\n   latest master branch. https://black.now.sh/?version=master&state=_Td6WFoAAATm1rRGAgAhARYAAAB0L-Wj4ACfAHpdAD2IimZxl1N_WmXTfF4pk2diOB2w7CF3u5csmBIqM4tZ28bz-Wsjw8BMMi3lwqytjqgVBMVZiUacQNqGZGmn05W4ih2sBeTwYw0rsxRWBiFpcmw2i3q879NrXW32Ni69xWm_UcfshWKDsKmY5ZLH_kSJlcUumQkQtenWAAAACm-bFP1IlaQAAZYBoAEAAAF7o3mxxGf7AgAAAAAEWVo=", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1336", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1336/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1336/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1336/events", "html_url": "https://github.com/psf/black/issues/1336", "id": 596438820, "node_id": "MDU6SXNzdWU1OTY0Mzg4MjA=", "number": 1336, "title": "Formatting of methods exceeding max. line lenght is inconsistent with pylint", "user": {"login": "fkromer", "id": 10199742, "node_id": "MDQ6VXNlcjEwMTk5NzQy", "avatar_url": "https://avatars1.githubusercontent.com/u/10199742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fkromer", "html_url": "https://github.com/fkromer", "followers_url": "https://api.github.com/users/fkromer/followers", "following_url": "https://api.github.com/users/fkromer/following{/other_user}", "gists_url": "https://api.github.com/users/fkromer/gists{/gist_id}", "starred_url": "https://api.github.com/users/fkromer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fkromer/subscriptions", "organizations_url": "https://api.github.com/users/fkromer/orgs", "repos_url": "https://api.github.com/users/fkromer/repos", "events_url": "https://api.github.com/users/fkromer/events{/privacy}", "received_events_url": "https://api.github.com/users/fkromer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-08T09:29:05Z", "updated_at": "2020-04-08T21:51:03Z", "closed_at": "2020-04-08T21:50:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** When formatting a method with a definition line length > max. length (e.g. 100 chars) the formatted code results in wrong indentation. When linting with `pylint` a warning `C0330: Wrong hanging indentation before block (add 4 spaces).` is raised. \r\n\r\n**To Reproduce**\r\n\r\nFormat method like this with `black`\r\n\r\n    def very_long_function_name_which_exceeds_max_line_length(a: Decimal, b: Decimal, c: Decimal, d: Decimal, e: Decimal,)  -> Tuple[Decimal, Decimal]:\r\n        return\r\n\r\nresults in:\r\n\r\n    def very_long_function_name_which_exceeds_max_line_length(\r\n        a: Decimal, b: Decimal, c: Decimal, d: Decimal, e: Decimal\r\n    ) -> Tuple[Decimal, Decimal]:\r\n        return\r\n\r\nLint the method with `pylint`.\r\n\r\n    C0330: Wrong hanging indentation before block (add 4 spaces).\r\n\r\n**Expected behavior**\r\n\r\n    def very_long_function_name_which_exceeds_max_line_length(\r\n            a: Decimal, b: Decimal, c: Decimal, d: Decimal, e: Decimal\r\n        ) -> Tuple[Decimal, Decimal]:\r\n        return\r\n\r\nNo error when linting with `pylint`.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: black==19.10b0\r\n- OS and Python version: Linux/Python 3.6.9\r\n\r\n**Does this bug also happen on master?** To answer this, you have two options:\r\n\r\nYes, the issue happens with the online formatter as well.\r\n\r\n1. Use the online formatter at https://black.now.sh/?version=master, which will use the\r\n   latest master branch.\r\n2. Or run _Black_ on your machine:\r\n   - create a new virtualenv (make sure it's the same Python version);\r\n   - clone this repository;\r\n   - run `pip install -e .`;\r\n   - make sure it's sane by running `python setup.py test`; and\r\n   - run `black` like you did last time.\r\n\r\n**Additional context** Add any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1334", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1334/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1334/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1334/events", "html_url": "https://github.com/psf/black/issues/1334", "id": 594335930, "node_id": "MDU6SXNzdWU1OTQzMzU5MzA=", "number": 1334, "title": "Excluded files also changed on pre-commit", "user": {"login": "SuyashSalampuria", "id": 44131389, "node_id": "MDQ6VXNlcjQ0MTMxMzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/44131389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SuyashSalampuria", "html_url": "https://github.com/SuyashSalampuria", "followers_url": "https://api.github.com/users/SuyashSalampuria/followers", "following_url": "https://api.github.com/users/SuyashSalampuria/following{/other_user}", "gists_url": "https://api.github.com/users/SuyashSalampuria/gists{/gist_id}", "starred_url": "https://api.github.com/users/SuyashSalampuria/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SuyashSalampuria/subscriptions", "organizations_url": "https://api.github.com/users/SuyashSalampuria/orgs", "repos_url": "https://api.github.com/users/SuyashSalampuria/repos", "events_url": "https://api.github.com/users/SuyashSalampuria/events{/privacy}", "received_events_url": "https://api.github.com/users/SuyashSalampuria/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-05T08:45:04Z", "updated_at": "2020-04-05T17:56:19Z", "closed_at": "2020-04-05T17:56:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** Excluded files also changed on pre-commit. I had excluded migrations  folder from black\r\n\r\nMy pyproject.toml looks like this\r\n[tool.black]\r\nline-length = 79\r\ntarget-version = ['py37']\r\ninclude = '\\.pyi?$'\r\nexclude = '''\r\n(\r\n  /(\r\n      \\.eggs\r\n    | \\.git\r\n    | \\.mypy_cache\r\n    | \\.tox\r\n    | \\.venv\r\n    | _build\r\n    | buck-out\r\n    | build\r\n    | dist\r\n  )/\r\n  | ^myapp/migrations/\r\n)\r\n'''\r\nBut still running\r\n```pre-commit run --all-files```\r\nchanges the files inside the migrations folder\r\n\r\n- OS and Python version: Ubuntu18.04/3.7\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1332", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1332/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1332/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1332/events", "html_url": "https://github.com/psf/black/issues/1332", "id": 593532593, "node_id": "MDU6SXNzdWU1OTM1MzI1OTM=", "number": 1332, "title": "Unwanted space before :", "user": {"login": "Thyrst", "id": 2419285, "node_id": "MDQ6VXNlcjI0MTkyODU=", "avatar_url": "https://avatars0.githubusercontent.com/u/2419285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Thyrst", "html_url": "https://github.com/Thyrst", "followers_url": "https://api.github.com/users/Thyrst/followers", "following_url": "https://api.github.com/users/Thyrst/following{/other_user}", "gists_url": "https://api.github.com/users/Thyrst/gists{/gist_id}", "starred_url": "https://api.github.com/users/Thyrst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Thyrst/subscriptions", "organizations_url": "https://api.github.com/users/Thyrst/orgs", "repos_url": "https://api.github.com/users/Thyrst/repos", "events_url": "https://api.github.com/users/Thyrst/events{/privacy}", "received_events_url": "https://api.github.com/users/Thyrst/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 869135448, "node_id": "MDU6TGFiZWw4NjkxMzU0NDg=", "url": "https://api.github.com/repos/psf/black/labels/design", "name": "design", "color": "0052cc", "default": false, "description": "What do we want Black to be?"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-03T17:28:09Z", "updated_at": "2020-04-05T01:19:35Z", "closed_at": "2020-04-05T01:19:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Black add space before `:` char which is against the PEP8:\r\n\r\nRight form:\r\n```\r\nstring[len(prefix):]\r\n```\r\n\r\nAfter black reformatting:\r\n```\r\nstring[len(prefix) :]\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1323", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1323/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1323/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1323/events", "html_url": "https://github.com/psf/black/issues/1323", "id": 589427376, "node_id": "MDU6SXNzdWU1ODk0MjczNzY=", "number": 1323, "title": "Black inserts a space before the \":\" in a slice notation under some circumstances", "user": {"login": "jonatanj", "id": 19190887, "node_id": "MDQ6VXNlcjE5MTkwODg3", "avatar_url": "https://avatars1.githubusercontent.com/u/19190887?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonatanj", "html_url": "https://github.com/jonatanj", "followers_url": "https://api.github.com/users/jonatanj/followers", "following_url": "https://api.github.com/users/jonatanj/following{/other_user}", "gists_url": "https://api.github.com/users/jonatanj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonatanj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonatanj/subscriptions", "organizations_url": "https://api.github.com/users/jonatanj/orgs", "repos_url": "https://api.github.com/users/jonatanj/repos", "events_url": "https://api.github.com/users/jonatanj/events{/privacy}", "received_events_url": "https://api.github.com/users/jonatanj/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-27T21:41:42Z", "updated_at": "2020-07-13T18:49:08Z", "closed_at": "2020-03-27T21:49:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nBlack 19.10b0 seems to insert a space before the \":\" in a slice notation under some circumstances.\r\n\r\n**To Reproduce**\r\n```\r\n$ cat fisk.py\r\nx = y[2:]\r\nx = y[len(\"//\"):]\r\n\r\n$ black fisk.py\r\nreformatted fisk.py\r\nAll done! \u2728 \ud83c\udf70 \u2728\r\n1 file reformatted.\r\n\r\n$ cat fisk.py\r\nx = y[2:]\r\nx = y[len(\"//\") :]\r\n\r\n$ pycodestyle fisk.py \r\nfisk.py:2:16: E203 whitespace before ':'\r\n```\r\n\r\n**Expected behavior**\r\n\r\nI would have expected no space to have been inserted before the \":\" in the second slice. That is, consistent with how black treats the first slice and how pycodestyle thinks it should be.\r\n\r\n**Environment**\r\n\r\n- Version: Black 19.10b0\r\n- OS and Python version: Linux/Python 3.6.8\r\n\r\n**Does this bug also happen on master?**\r\n\r\nYes.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1316", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1316/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1316/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1316/events", "html_url": "https://github.com/psf/black/issues/1316", "id": 587958841, "node_id": "MDU6SXNzdWU1ODc5NTg4NDE=", "number": 1316, "title": "Add a py.typed file", "user": {"login": "neighthan", "id": 12573501, "node_id": "MDQ6VXNlcjEyNTczNTAx", "avatar_url": "https://avatars3.githubusercontent.com/u/12573501?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neighthan", "html_url": "https://github.com/neighthan", "followers_url": "https://api.github.com/users/neighthan/followers", "following_url": "https://api.github.com/users/neighthan/following{/other_user}", "gists_url": "https://api.github.com/users/neighthan/gists{/gist_id}", "starred_url": "https://api.github.com/users/neighthan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neighthan/subscriptions", "organizations_url": "https://api.github.com/users/neighthan/orgs", "repos_url": "https://api.github.com/users/neighthan/repos", "events_url": "https://api.github.com/users/neighthan/events{/privacy}", "received_events_url": "https://api.github.com/users/neighthan/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-25T20:07:50Z", "updated_at": "2020-05-08T16:53:07Z", "closed_at": "2020-05-08T16:53:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "* Problem: `mypy` can't find type hints when importing `black`\r\n* Solution: add a `py.typed` file to make `black` [PEP-561-compatible]\r\n* Alternatives: add `black` to [typeshed] or see my [StackOverflow question] for how I worked around this from the user's side (create `py.typed` in `site-packages/black`)\r\n\r\n[PEP-561-compatible]: https://mypy.readthedocs.io/en/latest/installed_packages.html#making-pep-561-compatible-packages\r\n[typeshed]: https://github.com/python/typeshed\r\n[StackOverflow question]: https://stackoverflow.com/questions/60856237/mypy-cant-find-type-hints-for-black/60856518#60856518", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1312", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1312/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1312/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1312/events", "html_url": "https://github.com/psf/black/issues/1312", "id": 585599436, "node_id": "MDU6SXNzdWU1ODU1OTk0MzY=", "number": 1312, "title": "Black doesn't delete trailing commas in dictionary when shrinking to one line", "user": {"login": "rmorshea", "id": 4041990, "node_id": "MDQ6VXNlcjQwNDE5OTA=", "avatar_url": "https://avatars0.githubusercontent.com/u/4041990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmorshea", "html_url": "https://github.com/rmorshea", "followers_url": "https://api.github.com/users/rmorshea/followers", "following_url": "https://api.github.com/users/rmorshea/following{/other_user}", "gists_url": "https://api.github.com/users/rmorshea/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmorshea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmorshea/subscriptions", "organizations_url": "https://api.github.com/users/rmorshea/orgs", "repos_url": "https://api.github.com/users/rmorshea/repos", "events_url": "https://api.github.com/users/rmorshea/events{/privacy}", "received_events_url": "https://api.github.com/users/rmorshea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-21T22:41:22Z", "updated_at": "2020-04-21T00:53:40Z", "closed_at": "2020-04-21T00:53:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Version: 19.10b\r\n\r\nGiven the following code:\r\n\r\n```python\r\n[\r\n    {\r\n        \"items\": {\r\n            \"properties\": {\"type\": {\"const\": \"array\"}},\r\n            \"required\": [\"type\"],\r\n        },\r\n    }\r\n]\r\n```\r\n\r\nIs shrunk to:\r\n\r\n```python\r\n[{\"items\": {\"properties\": {\"type\": {\"const\": \"array\"}}, \"required\": [\"type\"],},}]\r\n```\r\n\r\nWhich leaves a trailing commas in place that, according to `flake8` (E231), ought to be removed.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1311", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1311/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1311/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1311/events", "html_url": "https://github.com/psf/black/issues/1311", "id": 585100933, "node_id": "MDU6SXNzdWU1ODUxMDA5MzM=", "number": 1311, "title": "Output successful executions to stdout and errors messages to stderr", "user": {"login": "Wlodarski", "id": 28050769, "node_id": "MDQ6VXNlcjI4MDUwNzY5", "avatar_url": "https://avatars3.githubusercontent.com/u/28050769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wlodarski", "html_url": "https://github.com/Wlodarski", "followers_url": "https://api.github.com/users/Wlodarski/followers", "following_url": "https://api.github.com/users/Wlodarski/following{/other_user}", "gists_url": "https://api.github.com/users/Wlodarski/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wlodarski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wlodarski/subscriptions", "organizations_url": "https://api.github.com/users/Wlodarski/orgs", "repos_url": "https://api.github.com/users/Wlodarski/repos", "events_url": "https://api.github.com/users/Wlodarski/events{/privacy}", "received_events_url": "https://api.github.com/users/Wlodarski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432794, "node_id": "MDU6TGFiZWw4Njc0MzI3OTQ=", "url": "https://api.github.com/repos/psf/black/labels/duplicate", "name": "duplicate", "color": "cfd3d7", "default": true, "description": "This issue or pull request already exists"}, {"id": 867432796, "node_id": "MDU6TGFiZWw4Njc0MzI3OTY=", "url": "https://api.github.com/repos/psf/black/labels/enhancement", "name": "enhancement", "color": "a2eeef", "default": true, "description": "New feature or request"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-20T14:19:34Z", "updated_at": "2020-03-20T14:43:09Z", "closed_at": "2020-03-20T14:43:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Feature request**\r\nTo increase interoperability with other software, open the door to other forms of automation, allow forensics, proper pipe redirections, and a multitude of other related advantages, it would be interesting to output successful executions and errors to their separate appropriate standard outputs, ``sys.stdout`` and ``sys.stderr``,  as it is the universally expected behavior on all platforms since the 1970's.\r\n\r\n**Describe the solution you'd like** \r\nSomething in the vain of (or whatever works) :\r\n```python\r\nimport sys\r\n...\r\n       if report.return_code:\r\n           out(\"Oh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\", file=sys.stderr)  # to stderr\r\n       else:\r\n           out(\"All done! \u2728 \ud83c\udf70 \u2728\", file=sys.stdout)  # to stderr\r\n```\r\n\r\n**Reference**:\r\n - https://www.jstorimer.com/blogs/workingwithcode/7766119-when-to-use-stderr-instead-of-stdout\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1310", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1310/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1310/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1310/events", "html_url": "https://github.com/psf/black/issues/1310", "id": 583755687, "node_id": "MDU6SXNzdWU1ODM3NTU2ODc=", "number": 1310, "title": "Black produced code that is not equivalent to the source (related to comments)", "user": {"login": "AlexandreYang", "id": 49917914, "node_id": "MDQ6VXNlcjQ5OTE3OTE0", "avatar_url": "https://avatars0.githubusercontent.com/u/49917914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexandreYang", "html_url": "https://github.com/AlexandreYang", "followers_url": "https://api.github.com/users/AlexandreYang/followers", "following_url": "https://api.github.com/users/AlexandreYang/following{/other_user}", "gists_url": "https://api.github.com/users/AlexandreYang/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexandreYang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexandreYang/subscriptions", "organizations_url": "https://api.github.com/users/AlexandreYang/orgs", "repos_url": "https://api.github.com/users/AlexandreYang/repos", "events_url": "https://api.github.com/users/AlexandreYang/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexandreYang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-18T14:09:40Z", "updated_at": "2020-05-08T13:16:57Z", "closed_at": "2020-05-08T13:16:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nSeems black is not able to format this code:\r\n\r\n```\r\nimport ssl\r\n\r\nssl.SSLContext(\r\n    # Some comments\r\n    ssl.PROTOCOL_TLS  # type: ignore\r\n)\r\n```\r\n\r\n\r\n**To Reproduce**\r\n\r\n1. Add this code to a file:\r\n\r\n```\r\nimport ssl\r\n\r\nssl.SSLContext(\r\n    # Some comments\r\n    ssl.PROTOCOL_TLS  # type: ignore\r\n)\r\n```\r\n\r\n\r\n2. Run _Black_ on it without any argument\r\n3. See error\r\n\r\n\r\nBlack will output this error:\r\n\r\n```\r\nINTERNAL ERROR: Black produced code that is not equivalent to the source.  Please report a bug on https://github.com/psf/black/issues.  This diff might be helpful: /var/folders/tm/r8m0vyxs1_q0gqttgn969pc80000gn/T/blk_yjsu9m9i.log\r\n```\r\n\r\nThe log file contains:\r\n\r\n```\r\n--- src\r\n+++ dst\r\n@@ -11,25 +11,10 @@\r\n     )  # /Import\r\n     Expr(\r\n       value=\r\n         Call(\r\n           args=\r\n-            Attribute(\r\n-              attr=\r\n-                'PROTOCOL_TLS',  # str\r\n-              ctx=\r\n-                Load(\r\n-                )  # /Load\r\n-              value=\r\n-                Name(\r\n-                  ctx=\r\n-                    Load(\r\n-                    )  # /Load\r\n-                  id=\r\n-                    'ssl',  # str\r\n-                )  # /Name\r\n-            )  # /Attribute\r\n           func=\r\n             Attribute(\r\n               attr=\r\n                 'SSLContext',  # str\r\n               ctx=\r\n\r\n```\r\n\r\n\r\n**Expected behavior**\r\n\r\nNo error, formatted code.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n- Version: 19.10b0\r\n- OS and Python version: MacOS Catalina / Python 3.8.1\r\n\r\n**Does this bug also happen on master?**\r\n\r\n1. Use the online formatter at https://black.now.sh/?version=master, which will use the\r\n   latest master branch.\r\n\r\nIt produces incorrect output:\r\n https://black.now.sh/?version=master&state=_Td6WFoAAATm1rRGAgAhARYAAAB0L-Wj4ACbAHtdAD2IimZxl1N_WlwxRhR7MSgFSDCyd42ZEyZcQp6kAy4x_I0E1OHVTCg8xMjGR2xGmI7gKBLEvAUIIwMzn8Zd74t3smY2yC-SDUM5vhxhS_rJKmOAQg0EIniK6BGK94Bu-j1C6T2oqIBRWbsJQBHH78hc1jKeH3-NJxk4uQAA_CxTcUjjgVoAAZcBnAEAAL3vAgixxGf7AgAAAAAEWVo=\r\n\r\n2. Or run _Black_ on your machine:\r\n   - create a new virtualenv (make sure it's the same Python version);\r\n   - clone this repository;\r\n   - run `pip install -e .`;\r\n   - make sure it's sane by running `python setup.py test`; and\r\n   - run `black` like you did last time.\r\n\r\nYes, using `master` produces the same error as described above.\r\n\r\n**Additional context**\r\n\r\nNo\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1303", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1303/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1303/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1303/events", "html_url": "https://github.com/psf/black/issues/1303", "id": 578004121, "node_id": "MDU6SXNzdWU1NzgwMDQxMjE=", "number": 1303, "title": "Accidental tag?", "user": {"login": "hugovk", "id": 1324225, "node_id": "MDQ6VXNlcjEzMjQyMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/1324225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugovk", "html_url": "https://github.com/hugovk", "followers_url": "https://api.github.com/users/hugovk/followers", "following_url": "https://api.github.com/users/hugovk/following{/other_user}", "gists_url": "https://api.github.com/users/hugovk/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugovk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugovk/subscriptions", "organizations_url": "https://api.github.com/users/hugovk/orgs", "repos_url": "https://api.github.com/users/hugovk/repos", "events_url": "https://api.github.com/users/hugovk/events{/privacy}", "received_events_url": "https://api.github.com/users/hugovk/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-09T15:44:40Z", "updated_at": "2020-06-16T22:52:41Z", "closed_at": "2020-06-16T22:52:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "`https://github.com/psf/black/releases/tag/''`\r\n\r\nhttps://github.com/psf/black/releases\r\n\r\nIt's an unusual tag name :)\r\n\r\nAlso, looks like this brought to light a possible problem in the Travis deploy scripts, there's a \"Bad credentials\" in the logs:\r\n\r\nhttps://travis-ci.com/psf/black/jobs/296088421\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/psf/black/issues/1299", "repository_url": "https://api.github.com/repos/psf/black", "labels_url": "https://api.github.com/repos/psf/black/issues/1299/labels{/name}", "comments_url": "https://api.github.com/repos/psf/black/issues/1299/comments", "events_url": "https://api.github.com/repos/psf/black/issues/1299/events", "html_url": "https://github.com/psf/black/issues/1299", "id": 577493792, "node_id": "MDU6SXNzdWU1Nzc0OTM3OTI=", "number": 1299, "title": "If Project Name contains Spaces PyCharm Black does not work", "user": {"login": "DanielOberlechner", "id": 10922763, "node_id": "MDQ6VXNlcjEwOTIyNzYz", "avatar_url": "https://avatars1.githubusercontent.com/u/10922763?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DanielOberlechner", "html_url": "https://github.com/DanielOberlechner", "followers_url": "https://api.github.com/users/DanielOberlechner/followers", "following_url": "https://api.github.com/users/DanielOberlechner/following{/other_user}", "gists_url": "https://api.github.com/users/DanielOberlechner/gists{/gist_id}", "starred_url": "https://api.github.com/users/DanielOberlechner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DanielOberlechner/subscriptions", "organizations_url": "https://api.github.com/users/DanielOberlechner/orgs", "repos_url": "https://api.github.com/users/DanielOberlechner/repos", "events_url": "https://api.github.com/users/DanielOberlechner/events{/privacy}", "received_events_url": "https://api.github.com/users/DanielOberlechner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 867432792, "node_id": "MDU6TGFiZWw4Njc0MzI3OTI=", "url": "https://api.github.com/repos/psf/black/labels/bug", "name": "bug", "color": "d73a4a", "default": true, "description": "Something isn't working"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-08T12:31:46Z", "updated_at": "2020-07-20T00:13:12Z", "closed_at": "2020-07-20T00:13:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug** A clear and concise description of what the bug is.\r\nHi, if the project name contains spaces, black does not work\r\n**To Reproduce** Steps to reproduce the behavior:\r\nJust open a project which contains in the path spaces ...\r\n\r\n1. Take this file '/Users/username/project name/project'\r\n2. Run _Black_ on it with these arguments => like the documentation\r\n3. See error => Error: Invalid value for \"[SRC]...\": Path \"/Users/username/PaperRock\" does not exist. => name would be \"/Users/username/PaperRock Scissors\"\r\n\r\n**Expected behavior** A clear and concise description of what you expected to happen.\r\n\r\n**Environment (please complete the following information):**\r\n\r\n\r\n- OS and Python version: [macOs Python 3.8]\r\n\r\n\r\n\r\n**Additional context** Add any other context about the problem here.\r\n\r\nI'm not sure, is this a Black problem or is this from PyCharm?\r\nIf it is from PyCharm I'm sorry, I'm going to post it there then. But at the moment I'm not sure about that. Sorry if I post it wrongfully. \r\n\r\nGreets,\r\nDaniel :)\r\n", "performed_via_github_app": null, "score": 1.0}]}