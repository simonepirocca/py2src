{"total_count": 97, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/104", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/104/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/104/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/104", "id": 665625768, "node_id": "MDU6SXNzdWU2NjU2MjU3Njg=", "number": 104, "title": "The description of optional arguments which takes values is not same as the (true/false) based ones since it's name is appearing twice.", "user": {"login": "vatsa287", "id": 53152913, "node_id": "MDQ6VXNlcjUzMTUyOTEz", "avatar_url": "https://avatars3.githubusercontent.com/u/53152913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vatsa287", "html_url": "https://github.com/vatsa287", "followers_url": "https://api.github.com/users/vatsa287/followers", "following_url": "https://api.github.com/users/vatsa287/following{/other_user}", "gists_url": "https://api.github.com/users/vatsa287/gists{/gist_id}", "starred_url": "https://api.github.com/users/vatsa287/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vatsa287/subscriptions", "organizations_url": "https://api.github.com/users/vatsa287/orgs", "repos_url": "https://api.github.com/users/vatsa287/repos", "events_url": "https://api.github.com/users/vatsa287/events{/privacy}", "received_events_url": "https://api.github.com/users/vatsa287/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-25T17:42:02Z", "updated_at": "2020-07-25T19:00:48Z", "closed_at": "2020-07-25T19:00:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\ndef get_by_city_args(subparsers):\r\n    city_parser = subparsers.add_parser('city')\r\n    city_parser.add_argument(\r\n        \"city\",\r\n        help=\"enter city name to get current temparature\"\r\n    )\r\n    city_parser.add_argument(\r\n        \"-c\", \"--country\",\r\n        help=\"country of the city\",\r\n        default=\"\"\r\n    )\r\n    city_parser.add_argument(\r\n        \"-u\", \"--units\",\r\n        help=\"M - [DEFAULT] Metric (Celcius, m/s, mm), S - Scientific (Kelvin, m/s, mm),I - Fahrenheit (F, mph, in)\",\r\n        default=\"M\"\r\n    )\r\n```\r\nThis produces output like this:\r\n```\r\nvatsa@vatsa-VirtualBox:~/cli-weather/cli_weather$ python3 main.py city -h\r\nusage: cli-weather city [-h] [-c COUNTRY] [-u UNITS] city\r\n\r\npositional arguments:\r\n  city                  enter city name to get current temparature\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -c COUNTRY, --country COUNTRY\r\n                        country of the city\r\n  -u UNITS, --units UNITS\r\n                        M - [DEFAULT] Metric (Celcius, m/s, mm), S -\r\n                        Scientific (Kelvin, m/s, mm),I - Fahrenheit (F, mph,\r\n                        in)\r\n```\r\nNotice the difference b/w -h and -c which actually takes values and later one won't. It causes disruption with aligning help message.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/103", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/103/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/103/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/103/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/103", "id": 492794274, "node_id": "MDU6SXNzdWU0OTI3OTQyNzQ=", "number": 103, "title": "parsing only a subset and leave all other checks undone", "user": {"login": "hivemall", "id": 30777961, "node_id": "MDQ6VXNlcjMwNzc3OTYx", "avatar_url": "https://avatars3.githubusercontent.com/u/30777961?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hivemall", "html_url": "https://github.com/hivemall", "followers_url": "https://api.github.com/users/hivemall/followers", "following_url": "https://api.github.com/users/hivemall/following{/other_user}", "gists_url": "https://api.github.com/users/hivemall/gists{/gist_id}", "starred_url": "https://api.github.com/users/hivemall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hivemall/subscriptions", "organizations_url": "https://api.github.com/users/hivemall/orgs", "repos_url": "https://api.github.com/users/hivemall/repos", "events_url": "https://api.github.com/users/hivemall/events{/privacy}", "received_events_url": "https://api.github.com/users/hivemall/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-09-12T13:06:53Z", "updated_at": "2019-09-13T19:49:32Z", "closed_at": "2019-09-13T19:31:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "i try to extract just one optional arg also other nonoptionals might not have been supplied:\r\n\r\n```\r\nimport argparse\r\nparser.add_argument('d', help='dunt')\r\nparser.add_argument('-c', help='copper')\r\nargs = parser.parse_known_args(args=['-c'])\r\n \r\nusage: main.py [-h] [-c C] d\r\nmain.py: error: argument -c: expected one argument\r\n```\r\n\r\nIt should only extract -c and leave d alone. I try to put -c into an external file which should silently do its thing without other arg checking , in this case 'd'. Why even throw on optional here.\r\n\r\nviolating the doc?\r\n> that it does not produce an error when extra arguments are present.\r\n\r\n\r\nnow if i try \r\n```\r\n\r\nparser.add_argument('-c', help='copper')\r\nargs = parser.parse_known_args(args=['-c'])\r\n```\r\nit throws on an optional one, shouldnt since c=None then", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/102", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/102/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/102/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/102/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/102", "id": 409200978, "node_id": "MDU6SXNzdWU0MDkyMDA5Nzg=", "number": 102, "title": "What does the comments \"We have to allow for ...\" means?", "user": {"login": "cgsdfc", "id": 21277116, "node_id": "MDQ6VXNlcjIxMjc3MTE2", "avatar_url": "https://avatars3.githubusercontent.com/u/21277116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgsdfc", "html_url": "https://github.com/cgsdfc", "followers_url": "https://api.github.com/users/cgsdfc/followers", "following_url": "https://api.github.com/users/cgsdfc/following{/other_user}", "gists_url": "https://api.github.com/users/cgsdfc/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgsdfc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgsdfc/subscriptions", "organizations_url": "https://api.github.com/users/cgsdfc/orgs", "repos_url": "https://api.github.com/users/cgsdfc/repos", "events_url": "https://api.github.com/users/cgsdfc/events{/privacy}", "received_events_url": "https://api.github.com/users/cgsdfc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-12T09:31:37Z", "updated_at": "2019-02-12T21:07:45Z", "closed_at": "2019-02-12T12:53:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/ThomasWaldmann/argparse/blob/67f3ce3c9ad8442d1d4c43724ced5b9ac65faf77/argparse.py#L2177-L2180\r\nThe comment below the ``_get_nargs_pattern`` says \r\n\r\n>       # in all examples below, we have to allow for '--' args\r\n>       # which are represented as '-' in the pattern\r\n\r\nand I can't figure it out. I am spending time to understand this piece of code so that I can make use of it. It sounds like special treatments are made to those pattern strings like `` '(-*A[A-]*)'`` because single dash and double dash are both represented as ``-`` in the the ``arg_string_pattern``. Am I wrong? I understand the basic behind the scene -- an ``arg_string_pattern`` is built from the actual ``arg_strings`` and matched against the pattern built from ``nargs`` of an ``action``. But like ``'A'`` and ``'O'``, dash can appear as many time as it likes because user can gave you ``-- -- - -``, which became ``----`` in the  ``arg_string_pattern``. I can't see any relationship between this fact and the fact that double dash is represented as single dash. But the comments somehow implied such relationship.\r\n\r\nSo what information this piece of comment want to convey? Help!\r\n\r\n\r\n       \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/99", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/99/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/99/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/99", "id": 299411280, "node_id": "MDU6SXNzdWUyOTk0MTEyODA=", "number": 99, "title": "argparse ArgumentParser(allow_abbrev=True) not documented on web", "user": {"login": "jrbrearley", "id": 32575796, "node_id": "MDQ6VXNlcjMyNTc1Nzk2", "avatar_url": "https://avatars2.githubusercontent.com/u/32575796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrbrearley", "html_url": "https://github.com/jrbrearley", "followers_url": "https://api.github.com/users/jrbrearley/followers", "following_url": "https://api.github.com/users/jrbrearley/following{/other_user}", "gists_url": "https://api.github.com/users/jrbrearley/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrbrearley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrbrearley/subscriptions", "organizations_url": "https://api.github.com/users/jrbrearley/orgs", "repos_url": "https://api.github.com/users/jrbrearley/repos", "events_url": "https://api.github.com/users/jrbrearley/events{/privacy}", "received_events_url": "https://api.github.com/users/jrbrearley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-22T16:07:00Z", "updated_at": "2018-02-23T13:22:00Z", "closed_at": "2018-02-23T13:21:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "The docs at https://argparse.readthedocs.io/en/latest/index.html do not appear to document the option  ArgumentParser(allow_abbrev=True). I found this in the command line help: help(argparse)\r\n\r\nThis is a very useful option to allow for less command line typing. Please document it to make its existence more widely known. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/98", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/98/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/98/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/98", "id": 299408117, "node_id": "MDU6SXNzdWUyOTk0MDgxMTc=", "number": 98, "title": "argparse WBN if default values displayed in -h message", "user": {"login": "jrbrearley", "id": 32575796, "node_id": "MDQ6VXNlcjMyNTc1Nzk2", "avatar_url": "https://avatars2.githubusercontent.com/u/32575796?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jrbrearley", "html_url": "https://github.com/jrbrearley", "followers_url": "https://api.github.com/users/jrbrearley/followers", "following_url": "https://api.github.com/users/jrbrearley/following{/other_user}", "gists_url": "https://api.github.com/users/jrbrearley/gists{/gist_id}", "starred_url": "https://api.github.com/users/jrbrearley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jrbrearley/subscriptions", "organizations_url": "https://api.github.com/users/jrbrearley/orgs", "repos_url": "https://api.github.com/users/jrbrearley/repos", "events_url": "https://api.github.com/users/jrbrearley/events{/privacy}", "received_events_url": "https://api.github.com/users/jrbrearley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-22T15:58:39Z", "updated_at": "2018-02-23T13:22:26Z", "closed_at": "2018-02-23T13:22:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "When you define the parser arguments, you usually define the default values, as shown below. When the user specifies '-h' on the command line, or makes a typo, the message you get shows the correct spelling of the options but not the default values. Showing the actual numeric (or string) default values would be a lot more useful than showing the uppercase name of the option.\r\n\r\nparser.add_argument('--batch_size', default=100, type=int, help='batch size')\r\n\r\nI am using Python 3.6.4 with argparse 1.1\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/96", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/96/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/96/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/96", "id": 193937770, "node_id": "MDU6SXNzdWUxOTM5Mzc3NzA=", "number": 96, "title": "AssertionError: assert ' '.join(pos_parts) == pos_usage", "user": {"login": "petriborg", "id": 527171, "node_id": "MDQ6VXNlcjUyNzE3MQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/527171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petriborg", "html_url": "https://github.com/petriborg", "followers_url": "https://api.github.com/users/petriborg/followers", "following_url": "https://api.github.com/users/petriborg/following{/other_user}", "gists_url": "https://api.github.com/users/petriborg/gists{/gist_id}", "starred_url": "https://api.github.com/users/petriborg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petriborg/subscriptions", "organizations_url": "https://api.github.com/users/petriborg/orgs", "repos_url": "https://api.github.com/users/petriborg/repos", "events_url": "https://api.github.com/users/petriborg/events{/privacy}", "received_events_url": "https://api.github.com/users/petriborg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-12-07T01:58:02Z", "updated_at": "2016-12-10T21:46:38Z", "closed_at": "2016-12-10T11:34:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Argparse 1.1 or 1.4 fails with AssertionError - the weird regex that reads the metavar value seems to blow up argparse.\r\n\r\n```python\r\n#!/Users/[username]/Development/test2/bin/python3.5\r\n\r\nimport os\r\nimport sys\r\nprint('sys.prefix', sys.prefix)\r\nsys.path.insert(\r\n    0, os.path.join(sys.prefix, 'lib/python3.5/site-packages'))\r\n\r\nimport argparse\r\nprint('argparse', argparse.__version__)\r\n\r\nparser = argparse.ArgumentParser()\r\nparser.add_argument(\r\n    'files',\r\n    metavar='[[USER@]HOST:]FILE',\r\n    nargs=argparse.PARSER,\r\n    )\r\nparser.add_argument('-a', '-A', metavar='PTRN', dest='patterns', default=[])\r\nparser.add_argument('-b', '-B', metavar='PTRN', dest='patterns', default=[])\r\nparser.add_argument('-c', '-C', metavar='PTRN', dest='patterns', default=[])\r\nparser.add_argument('-d', '-D', metavar='PTRN', dest='patterns', default=[])\r\nparser.add_argument('-e', '-E', metavar='PTRN', dest='patterns', default=[])\r\nparser.add_argument('-f', '-F', metavar='PTRN', dest='patterns', default=[])\r\nprint(parser.parse_args())\r\n```\r\n\r\n```\r\n$ ./test.py\r\nsys.prefix /Users/[username]/Development/test2/bin/..\r\nargparse 1.4.0\r\nTraceback (most recent call last):\r\n  File \"./test.py\", line 24, in <module>\r\n    print(parser.parse_args())\r\n  File \"/Users/[username]/Development/test2/bin/../lib/python3.5/site-packages/argparse.py\", line 1725, in parse_args\r\n    args, argv = self.parse_known_args(args, namespace)\r\n  File \"/Users/[username]/Development/test2/bin/../lib/python3.5/site-packages/argparse.py\", line 1754, in parse_known_args\r\n    namespace, args = self._parse_known_args(args, namespace)\r\n  File \"/Users/[username]/Development/test2/bin/../lib/python3.5/site-packages/argparse.py\", line 1971, in _parse_known_args\r\n    self.error(_('too few arguments'))\r\n  File \"/Users/[username]/Development/test2/bin/../lib/python3.5/site-packages/argparse.py\", line 2391, in error\r\n    self.print_usage(_sys.stderr)\r\n  File \"/Users/[username]/Development/test2/bin/../lib/python3.5/site-packages/argparse.py\", line 2353, in print_usage\r\n    self._print_message(self.format_usage(), file)\r\n  File \"/Users/[username]/Development/test2/bin/../lib/python3.5/site-packages/argparse.py\", line 2309, in format_usage\r\n    return formatter.format_help()\r\n  File \"/Users/[username]/Development/test2/bin/../lib/python3.5/site-packages/argparse.py\", line 306, in format_help\r\n    help = self._root_section.format_help()\r\n  File \"/Users/[username]/Development/test2/bin/../lib/python3.5/site-packages/argparse.py\", line 236, in format_help\r\n    func(*args)\r\n  File \"/Users/[username]/Development/test2/bin/../lib/python3.5/site-packages/argparse.py\", line 358, in _format_usage\r\n    assert ' '.join(pos_parts) == pos_usage\r\nAssertionError\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/93", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/93/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/93/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/93", "id": 111379695, "node_id": "MDU6SXNzdWUxMTEzNzk2OTU=", "number": 93, "title": "Is \" if option_string.startswith(option_prefix): \" a special design in _get_option_tuples()?", "user": {"login": "dongdxf", "id": 1113389, "node_id": "MDQ6VXNlcjExMTMzODk=", "avatar_url": "https://avatars0.githubusercontent.com/u/1113389?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dongdxf", "html_url": "https://github.com/dongdxf", "followers_url": "https://api.github.com/users/dongdxf/followers", "following_url": "https://api.github.com/users/dongdxf/following{/other_user}", "gists_url": "https://api.github.com/users/dongdxf/gists{/gist_id}", "starred_url": "https://api.github.com/users/dongdxf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dongdxf/subscriptions", "organizations_url": "https://api.github.com/users/dongdxf/orgs", "repos_url": "https://api.github.com/users/dongdxf/repos", "events_url": "https://api.github.com/users/dongdxf/events{/privacy}", "received_events_url": "https://api.github.com/users/dongdxf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-10-14T11:34:23Z", "updated_at": "2015-10-15T22:40:15Z", "closed_at": "2015-10-15T22:40:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "the help of my script is:\ntest.py config {--list | --list-all}\n--list       list configurations from a specified file\n--list-all  list all effective configurations\n\n\" test.py config --list \" is ok.\nbut,\n\" test.py config --list- \",\n\" test.py config --list-a \",\n\" test.py config --list-al \",\n\" test.py config --list-all \",\nthey are all equivalent.\n\ni debuged it using pdb, and got:\n\" if option_string.startswith(option_prefix): \" in _get_option_tuples().\n\nis this a special design\uff1f\n\nthanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/91", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/91/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/91/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/91/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/91", "id": 106372300, "node_id": "MDU6SXNzdWUxMDYzNzIzMDA=", "number": 91, "title": "Argparse 1.4.0 doesn't have a wheel on PyPI: causes get-pip.py failures.", "user": {"login": "nedbat", "id": 23789, "node_id": "MDQ6VXNlcjIzNzg5", "avatar_url": "https://avatars1.githubusercontent.com/u/23789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nedbat", "html_url": "https://github.com/nedbat", "followers_url": "https://api.github.com/users/nedbat/followers", "following_url": "https://api.github.com/users/nedbat/following{/other_user}", "gists_url": "https://api.github.com/users/nedbat/gists{/gist_id}", "starred_url": "https://api.github.com/users/nedbat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nedbat/subscriptions", "organizations_url": "https://api.github.com/users/nedbat/orgs", "repos_url": "https://api.github.com/users/nedbat/repos", "events_url": "https://api.github.com/users/nedbat/events{/privacy}", "received_events_url": "https://api.github.com/users/nedbat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-14T15:55:21Z", "updated_at": "2015-09-14T16:03:52Z", "closed_at": "2015-09-14T16:03:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "If you could upload a .whl file for 1.4.0, it would solve some problems.  get-pip.py depends on wheel, which depends on argparse on Python 2.6.  get-pip.py tries to install wheels, and without an argparse 1.4.0 wheel, it fails.  See line 36 here:  https://ci.appveyor.com/project/nedbat/coveragepy/build/default-98/job/tr3r2eejjdsslnwm\n\nThanks.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/87", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/87/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/87/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/87", "id": 106177321, "node_id": "MDU6SXNzdWUxMDYxNzczMjE=", "number": 87, "title": "Serious issues with nested mutex groups in help output", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:54Z", "updated_at": "2015-10-22T12:38:31Z", "closed_at": "2015-10-22T12:38:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nThe following is the code from lines 392 to 409 of the argparse.py code, where \nthe parentheticals and brackets are being built-up.\n\n==============================================\nend = start + len(group._group_actions)\nif actions[start:end] == group._group_actions:\n    for action in group._group_actions:\n        group_actions.add(action)\n    if not group.required:\n        if start in inserts:\n            inserts[start] += ' ['\n        else:\n            inserts[start] = '['\n        inserts[end] = ']'\n    else:\n        if start in inserts:\n            inserts[start] += ' ('\n        else:\n            inserts[start] = '('\n        inserts[end] = ')'\n    for i in range(start + 1, end):\n        inserts[i] = '|'\n==============================================\n\nProblem 1: When a nested mutex group is the right-most option of another mutex \ngroup, the right brackets are not right:\n\n    usage: GDriveFS Tool [-h] [-u | -a authcode | [-b | -c authcode2]\n\nProblem 2: When a nested mutex group is the left-most option of another mutex \ngroup, there is a missing bar to the right of that nested group, in the parent.\n\n    usage: GDriveFS Tool [-h] [[-b | -c authcode2] -u | -a authcode]\n\nProblem 3: You can fix problem (1) by doing (a), but then there is an extra bar \ninside the child mutex on the right, when that child mutex is the left-most \noption (b):\n\n   a) \n      Change:\n               inserts[end] = ']'\n\n      To:\n               if end in inserts:\n                   inserts[end] += '] '\n               else:\n                   inserts[end] = ']'\n\n   b) \n      usage: GDriveFS Tool [-h] [[-b | -c authcode2 |]  -u | -a authcode]\n\nIn all likelihood, this will all have to be reflowed due to a flawed (and \ndifficult-to-decypher) design.\n\nI know it's obnoxious for some uninvited outsider to point out a serious \nproblem without presenting a solution. I'll work on a potential solution for \nyou guys if I have time.\n\n```\n\nOriginal issue reported on code.google.com by `myselfasunder@gmail.com` on 14 Sep 2012 at 4:21\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/88", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/88/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/88/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/88", "id": 106177322, "node_id": "MDU6SXNzdWUxMDYxNzczMjI=", "number": 88, "title": "Bug with negative numbers in scientific notation", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:54Z", "updated_at": "2015-10-22T12:39:29Z", "closed_at": "2015-10-22T12:39:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. Set up a parser with at least one optional -foo argument, and at least one \nrequired positional float argument.\n2. Parse a command line with a negative number in scientific notation.\n3. Profit?\n\nWhat is the expected output? What do you see instead?\n\nExpected: Proper acceptance of the negative number as the argument value.\nExperienced: \"error: the following arguments are required: [name of required \narg]\"\n\nWhat version of the product are you using? On what operating system?\n\n1.1 (included with Python 3.3), on Windows 7\n\nPlease provide any additional information below.\n\n```\n\nOriginal issue reported on code.google.com by `midnight...@gmail.com` on 23 Nov 2013 at 11:59\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/89", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/89/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/89/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/89/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/89", "id": 106177323, "node_id": "MDU6SXNzdWUxMDYxNzczMjM=", "number": 89, "title": "pypi version does not handle empty arguments when fromfile_prefix_chars set (python issue 12353)", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}, {"id": 259582612, "node_id": "MDU6TGFiZWwyNTk1ODI2MTI=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:54Z", "updated_at": "2015-10-22T18:32:33Z", "closed_at": "2015-10-22T18:32:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\n>>> import argparse\n>>> parser = argparse.ArgumentParser(fromfile_prefix_chars='@')\n>>> parser.parse_args([''])\n\n\nWhat is the expected output? What do you see instead?\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.6/site-packages/argparse-1.2.1-py2.6.egg/argparse.py\", line 1703, in parse_args\n    args, argv = self.parse_known_args(args, namespace)\n  File \"/usr/lib/python2.6/site-packages/argparse-1.2.1-py2.6.egg/argparse.py\", line 1735, in parse_known_args\n    namespace, args = self._parse_known_args(args, namespace)\n  File \"/usr/lib/python2.6/site-packages/argparse-1.2.1-py2.6.egg/argparse.py\", line 1747, in _parse_known_args\n    arg_strings = self._read_args_from_files(arg_strings)\n  File \"/usr/lib/python2.6/site-packages/argparse-1.2.1-py2.6.egg/argparse.py\", line 1985, in _read_args_from_files\n    if arg_string[0] not in self.fromfile_prefix_chars:\nIndexError: string index out of range\n\nWhat version of the product are you using? On what operating system?\n\n1.2.1, CentOS 5 w/ Python 2.6.8 from EPEL repository.\n\n```\n\nOriginal issue reported on code.google.com by `will...@shallum.net` on 15 Jan 2014 at 5:16\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/90", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/90/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/90/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/90", "id": 106177324, "node_id": "MDU6SXNzdWUxMDYxNzczMjQ=", "number": 90, "title": ".add_mutually_exclusive_group() only works when child of parser but not when a child of argument group", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:54Z", "updated_at": "2015-10-22T18:21:08Z", "closed_at": "2015-10-22T18:21:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\nparser = argparse.ArgumentParser()\ngroup = parser.add_argument_group(\"Mutually exclusive group\")\nmegroup = group.add_mutually_exclusive_group()\n\n#\u00a0megroup.add_argument() won't create mutually exlusive option.\n\nmegroup2 = parser.add_mutually_exclusive_group()\n\n# Works as expected\n\n\nWhat is the expected output? What do you see instead?\n\nYou should be able to create a mutually exclusive group as a child of an \nargument group.\n\n\nWhat version of the product are you using? On what operating system?\nargpase 1.2.1\n\nPlease provide any additional information below.\n\nTested on Python 2.7 where this works correctly.  The exact same code on Python \n2.6 with argparse 1.2.1 won't enforce mutual exclusion.\n```\n\nOriginal issue reported on code.google.com by `dwa...@translate.org.za` on 10 Mar 2014 at 9:07\n\nAttachments:\n- [meg.py](https://storage.googleapis.com/google-code-attachments/argparse/issue-90/comment-0/meg.py)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/84", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/84/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/84/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/84", "id": 106177317, "node_id": "MDU6SXNzdWUxMDYxNzczMTc=", "number": 84, "title": "positional arguments before options cause all options to be in REMAINDER", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:53Z", "updated_at": "2015-10-22T18:07:59Z", "closed_at": "2015-10-22T18:07:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\nimport argparse\nargp = argparse.ArgumentParser(\"\"\" some description \"\"\")\nargp.add_argument('-j', action='store', type=str, dest='jql', default=None)\nargp.add_argument('-v', action='version', version='1.0.0')\nargp.add_argument('-p', action='store', dest='project', default=None)\nargp.add_argument('argv', nargs=argparse.REMAINDER)\nargs = argp.parse_args()\nprint(args)\n\nWhat is the expected output? What do you see instead?\n\npython3 test.py server userid pass -j 'key=blah'\nNamespace(argv=['server', 'userid', 'pass', '-j', 'key=blah'], jql=None, \nproject=None)\n\nbut if I reorganize the command line to have the positional args last, I get \nwhat I expected in the first place:\n\npython3 x.py -j 'key=blah' server userid pass\nNamespace(argv=['server', 'userid', 'pass'], jql='key=blah', project=None)\n\nWhat version of the product are you using? On what operating system?\n\n\nPlease provide any additional information below.\n\nIt would appear the positional arguments HAVE to be after any optional ones.\nUnix/Linux of course allows this.\n\n```\n\nOriginal issue reported on code.google.com by `jdaw...@gmail.com` on 27 Feb 2012 at 9:58\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/85", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/85/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/85/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/85", "id": 106177318, "node_id": "MDU6SXNzdWUxMDYxNzczMTg=", "number": 85, "title": "Argparse is not testable with nosetest", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:53Z", "updated_at": "2015-09-12T18:23:53Z", "closed_at": "2015-09-12T18:23:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nPlese see http://code.google.com/p/python-nose/issues/detail?id=481\n\n\n```\n\nOriginal issue reported on code.google.com by `miniw...@gmail.com` on 2 Aug 2012 at 6:35\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/86", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/86/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/86/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/86/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/86", "id": 106177319, "node_id": "MDU6SXNzdWUxMDYxNzczMTk=", "number": 86, "title": "`choices=[...]` overrides `nargs='*'`", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:53Z", "updated_at": "2015-09-12T18:23:53Z", "closed_at": "2015-09-12T18:23:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. Create an argument with `nargs='*'` and a list of choices\n2. Call the script (or call parse_args) with no entry for that argument\ne.g.\n\n>>> import argparse\n>>> parser = argparse.ArgumentParser()\n>>> parser.add_argument('foo', nargs='*', choices=[ 'a', 'b' ])\n_StoreAction(option_strings=[], dest='foo', nargs='*', const=None, \ndefault=None, type=None, choices=['a', 'b'], help=None, metavar=None)\n>>> parser.parse_args([])\nusage: [-h] [{a,b} [{a,b} ...]]\n: error: argument foo: invalid choice: [] (choose from 'a', 'b')\n\n\nI'd expect nargs='*' to always mean \"providing nothing at all is a valid \nchoice,\" even if I don't explicitly specify \"nothing at all\" in my choices \narray. Appending [] to my choices list works, but it's a surprising bit of \nextra work to accomplish something that I thought I'd already handled by saying \n`nargs='*'`. Am I misunderstanding how the nargs/choices interaction is \nintended to work?\n\nAt the very least, \"error: argument foo: invalid choice: []\" seems confusing \nfor a user who didn't provide anything at all.\n\nI'm seeing this in argparse 1.1 and 1.2.1 on py2.7//OSX\n\n```\n\nOriginal issue reported on code.google.com by `andrew.l...@gmail.com` on 5 Aug 2012 at 1:47\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/83", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/83/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/83/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/83/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/83", "id": 106177315, "node_id": "MDU6SXNzdWUxMDYxNzczMTU=", "number": 83, "title": "When -h is used, default values that fail should not matter", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:52Z", "updated_at": "2015-10-22T12:34:33Z", "closed_at": "2015-10-22T12:34:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. Make a script containing this code:\n\n parser = argparse.ArgumentParser()\n parser.add_argument('-i', '--input-base-directory',\n                     type=argparse.FileType('r'),\n                     default='/home')\n parser.parse_args()\n\n2. Run the script with '-h'.\n3. See it complain that '/home' is a directory\n\nWhat is the expected output? What do you see instead?\nWith '-h', we just need to print the help message. We shouldn't fail on a \ndefault value that's wrong or else the help message will not get printed and \nthe user will have no idea what the problem is. This is a valid use case as I \nwant to provide a default location, but I can't guarantee that the location \nexists on the user's machine. I end up doing my own checking.\n\nWhat version of the product are you using? On what operating system?\n1.1 on Fedora 15.\n\nPlease provide any additional information below.\n\n```\n\nOriginal issue reported on code.google.com by `joshc...@gmail.com` on 25 Oct 2011 at 7:27\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/82", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/82/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/82/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/82", "id": 106177312, "node_id": "MDU6SXNzdWUxMDYxNzczMTI=", "number": 82, "title": "argparse 1.2 incompatible with Python 3.1", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2015-09-12T18:23:51Z", "updated_at": "2015-09-12T18:23:52Z", "closed_at": "2015-09-12T18:23:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nargparse 1.1 was compatible with Python 3.1 (all 1485 tests were passing). \nargparse 1.2 is incompatible with Python 3.1.\n\nOutput of tests of argparse 1.2:\n$ PYTHONPATH=. python3.1 test/test_argparse.py\nTraceback (most recent call last):\n  File \"test/test_argparse.py\", line 13, in <module>\n    from StringIO import StringIO\nImportError: No module named StringIO\n\nIt's not only a bug in test suite. If I copy test_argparse.py from argparse 1.1 \nand try to run tests against argparse 1.2, then there are 1060 errors.\n```\n\nOriginal issue reported on code.google.com by `Arfrever...@gmail.com` on 28 Mar 2011 at 10:25\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/80", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/80/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/80/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/80", "id": 106177310, "node_id": "MDU6SXNzdWUxMDYxNzczMTA=", "number": 80, "title": "argparse-1.1.zip is not same archive on pypi / on google code", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-12T18:23:50Z", "updated_at": "2015-09-12T18:23:51Z", "closed_at": "2015-09-12T18:23:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n$ md5sum {googlecode,pypi}/argparse-1.1.zip\ne62565cde81a8deb61f90dcb5e8861a4  googlecode/argparse-1.1.zip\n087399b73047fa5a6482037411ddc968  pypi/argparse-1.1.zip\n\n$ sha1sum {googlecode,pypi}/argparse-1.1.zip\nda0c55dc79cafe0eec50e7f10b06c72319a96f78  googlecode/argparse-1.1.zip\n91d62de07ff09954e5bb61ddd50f04780f23bbeb  pypi/argparse-1.1.zip\n\nThat's slightly confusing.\n\nWe found that because of a student having major issues to get moin2 installed \n(it always fails strangely at argparse, which is pulled in as a requirement of \nflask-script).\n\nWe first thought that somehow he does not get the zip correctly and asked him \nfor the md5sum, which differed from the one given on pypi.\nBut the zip contents (when extracted) seem to be the same, so maybe it is just \na different zip tool generating a slightly different archive.\n\n```\n\nOriginal issue reported on code.google.com by `Thomas.J...@gmail.com` on 22 Mar 2011 at 10:02\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/78", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/78/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/78/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/78/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/78", "id": 106177307, "node_id": "MDU6SXNzdWUxMDYxNzczMDc=", "number": 78, "title": "add_mutually_exclusive_group more than once has incorrectly formatted help.", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:49Z", "updated_at": "2015-09-12T18:23:49Z", "closed_at": "2015-09-12T18:23:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. Create two mutually exclusive groups: eg\n\nagroup = subcmd_parser.add_mutually_exclusive_group()\nagroup.add_argument('--a1', action='store_true', help='blah')\nagroup.add_argument('--a2', action='store_true', help='blah')\nagroup.add_argument('--a3', action='store_true', help='blah')\n\nbgroup = subcmd_parser.add_mutually_exclusive_group()\nbgroup.add_argument('--b1', action='store_true', help='blah')\nbgroup.add_argument('--b2', action='store_true', help='blah')\nbgroup.add_argument('--b3', action='store_true', help='blah')\n\nWhat is the expected output? What do you see instead?\n\nExpected output (on running a help command which formats help) is:\n[ --a1 | --a2 | --a3 ] [ --b1 | --b2 | --b3 ]\n\nYou see instead:\n[ --a1 | --a2 | --a3 [ --b1 | --b2 | --b3 ]\n\nNote that the closing brace for the first group is missing.\n\nWhat version of the product are you using? On what operating system?\n\n1.0.1 on Windows.\n\nPlease provide any additional information below.\n\n```\n\nOriginal issue reported on code.google.com by `akla...@gmail.com` on 19 Jul 2010 at 8:32\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/79", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/79/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/79/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/79/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/79", "id": 106177308, "node_id": "MDU6SXNzdWUxMDYxNzczMDg=", "number": 79, "title": "re-license argparse package under same license as py 2.7 stdlib argparse code", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-09-12T18:23:49Z", "updated_at": "2015-09-12T18:23:50Z", "closed_at": "2015-09-12T18:23:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI noticed that the argparse package is under \"apache license v2.0\" (see license \ninfo on pypi, see license info on code.google.com), which is considered \nincompatible with projects under GPL v2 (and also \"GPL v2 or any later \nversion\", if used in \"GPL v2\" mode).\n\nThe argparse module in python 2.7 stdlib has no license notes, so I assume it \nhas been re-licensed to the usual Python license there? The Python license has \nno compatibility issues (AFAIK).\n\nIf this is the case, please use the same for the argparse package.\n\nProjects (like MoinMoin Wiki) that do not yet require python 2.7 may have a \nlicensing issue otherwise, for no good reason.\n\n```\n\nOriginal issue reported on code.google.com by `Thomas.J...@gmail.com` on 21 Mar 2011 at 4:37\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/77", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/77/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/77/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/77/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/77", "id": 106177300, "node_id": "MDU6SXNzdWUxMDYxNzczMDA=", "number": 77, "title": "sha1sum of argparse-1.1.zip does not match", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-12T18:23:48Z", "updated_at": "2015-09-12T18:23:48Z", "closed_at": "2015-09-12T18:23:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. sha1sum argparse-1.1.zip\n\n\nWhat is the expected output? What do you see instead?\nexpected: da0c55dc79cafe0eec50e7f10b06c72319a96f78\nmy output: df74e938b327aaeeaca2ba74f331a3e40521e803\n\nWhat version of the product are you using? On what operating system?\nsha1sum (GNU coreutils) 6.10\nUbuntu 8.04\n\nPlease provide any additional information below.\n\n```\n\nOriginal issue reported on code.google.com by `espen.ak...@gmail.com` on 12 Jul 2010 at 8:45\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/75", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/75/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/75/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/75", "id": 106177293, "node_id": "MDU6SXNzdWUxMDYxNzcyOTM=", "number": 75, "title": "__all__ is not complete", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:47Z", "updated_at": "2015-09-12T18:23:47Z", "closed_at": "2015-09-12T18:23:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. import argparse\n2. print dir(argparse)\n3. print argparse.__all__\n\nCompare the output for public methods and attributes from #2 that aren't in #3.\n\nI see the following entries that look like they should be public but aren't in \n__all__::\n\n'ArgumentTypeError', 'ONE_OR_MORE', 'OPTIONAL', 'PARSER', 'REMAINDER',  \n'SUPPRESS', 'ZERO_OR_MORE'\n\nWhat version of the product are you using? On what operating system?\n\nargparse-1.1 on Fedora Linux\n\nPlease provide any additional information below.\n\nI was writing a compat layer to allow unbundling argparse from ipython if it's \nalready installed in the system when I ran across this.  The particular public \nattribute that was missing there was 'SUPPRESS'\n\n```\n\nOriginal issue reported on code.google.com by `a.bad...@gmail.com` on 21 Jun 2010 at 6:37\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/76", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/76/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/76/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/76", "id": 106177296, "node_id": "MDU6SXNzdWUxMDYxNzcyOTY=", "number": 76, "title": "Handling arguments after --", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-12T18:23:47Z", "updated_at": "2015-09-12T18:23:48Z", "closed_at": "2015-09-12T18:23:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\noptparse stopped parsing arguments after --, how can the same be achieved with \nargparse?\n\n\nFor example:\n\ncommmand -v -- --option\n\nI want argparse handle arguments only until --. The rest should be left \nunparsed, ready to pass in subprocess\n\n```\n\nOriginal issue reported on code.google.com by `iElect...@gmail.com` on 24 Jun 2010 at 2:13\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/73", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/73/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/73/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/73", "id": 106177287, "node_id": "MDU6SXNzdWUxMDYxNzcyODc=", "number": 73, "title": "Parsing multiple merged short options eats characters", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:46Z", "updated_at": "2015-09-12T18:23:46Z", "closed_at": "2015-09-12T18:23:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\nparser = ArgumentParser(prefix_chars=\"-+\")\nparser.add_argument(\"-a\",action=\"store_true\")\nparser.add_argument(\"+b\",action=\"store_true\")\nparser.add_argument(\"+c\",action=\"store_true\")\nprint parser.parse_args(\"-abc\".split())\n\nWhat is the expected output? What do you see instead?\nI would expect Namespace(a=True, b=True, c=True)\nYou get Namespace(a=True, b=False, c=True)\n\nbecause in the loop that iterates through the prefix characters it builds\nan option_string to try by pulling the first character off explicit_arg. If\nit doesn't match any option then it will try the next prefix character, but\nit will have lost that character from the explicit_arg. This is also a\nproblem even with only one prefix character because if it doesn't match an\noption the error message will be missing that one character.\n\nThe above match -a, tried -b and fails, but instead of trying +b, it tries\n+c because the b has been lost.\n\nI've included multiple_short.patch which fixes just this bug. However, I\nalso don't agree with the behavior of trying all prefix characters. I would\nexpect that when merging short options together they would have to all\nshare the same prefix character. If I have prefix_chars=\"-+\" and I have\noptions -a, +a, -b, and +b and I type +ab I would expect my action to be\ncalled with option_strings +a and +b, not +a and -b. The patch to fix the\nabove bug *and* only try the same prefix character as the first option is\nmultiple_short_same_prefix.patch\n\n```\n\nOriginal issue reported on code.google.com by `spar...@gmail.com` on 5 Jun 2010 at 12:08\n\nAttachments:\n- [multiple_short.patch](https://storage.googleapis.com/google-code-attachments/argparse/issue-73/comment-0/multiple_short.patch)\n- [multiple_short_same_prefix.patch](https://storage.googleapis.com/google-code-attachments/argparse/issue-73/comment-0/multiple_short_same_prefix.patch)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/74", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/74/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/74/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/74", "id": 106177289, "node_id": "MDU6SXNzdWUxMDYxNzcyODk=", "number": 74, "title": "Subcommands not printed in the same order they were added", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-12T18:23:46Z", "updated_at": "2015-09-12T18:23:47Z", "closed_at": "2015-09-12T18:23:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. Run 'python subcommands.py -h' (attached file)\n2. Check the ordering of the subcommands in the output:\n----\nsubcommands:\n  {a,c,b,e,d}\n    a          a subcommand help\n    b          b subcommand help\n    c          c subcommand help\n    d          d subcommand help\n    e          e subcommand help\n----\n\nThe ordering between brackets is different than the ordering in the one-line \nhelp for each command below. This could be a little confusing to the user.\n\n\nWhat is the expected output? What do you see instead?\nThe expected output would be to use the same ordering in both places. In \nparticular the same ordering that was used in the code when using the \n_SubParsersAction.add_parser method:\n----\nsubcommands:\n  {a,b,c,d,e}\n    a          a subcommand help\n    b          b subcommand help\n    c          c subcommand help\n    d          d subcommand help\n    e          e subcommand help\n----\n\n\nWhat version of the product are you using? On what operating system?\nOS: Ubuntu\nVersion: source code (rev. 87)\nPython: 2.6.5\n\nPlease provide any additional information below.\nPlease have a look at the attached diff. It contains a patch that worked for me \nto preserve the ordering used in the code.\n\nTo make that possible it uses action._choices_actions (a list) instead of \naction.choices (a dictionary).\n\n```\n\nOriginal issue reported on code.google.com by `javier.c...@gmail.com` on 18 Jun 2010 at 9:00\n\nAttachments:\n- [subcommands.py](https://storage.googleapis.com/google-code-attachments/argparse/issue-74/comment-0/subcommands.py)\n- [ordered_subcommands.diff](https://storage.googleapis.com/google-code-attachments/argparse/issue-74/comment-0/ordered_subcommands.diff)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/70", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/70/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/70/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/70/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/70", "id": 106177281, "node_id": "MDU6SXNzdWUxMDYxNzcyODE=", "number": 70, "title": "Feature Request: Allow exclusion of argument groups from -h output", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:45Z", "updated_at": "2015-09-12T18:23:45Z", "closed_at": "2015-09-12T18:23:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nFeature Request for Argparse version 1.1\n\nI would like the ability to be able to toggle argument groups from being\nincluded in the help output from --help or -h.  The use case is that I have\nan arguments group that contains \"advanced\" arguments that are rarely used.\n I would like exclude these \"advanced\" arguments from the help output in\norder to keep it clean.  Users would be able to see the help for these\n\"advanced\" options by providing an additional command-line argument to turn\nthem on.\n\nNote that I want these arguments to *always* be available, just not\ndisplayed in the help output by default.\n```\n\nOriginal issue reported on code.google.com by `denver.c...@gmail.com` on 5 Apr 2010 at 4:39\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/71", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/71/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/71/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/71", "id": 106177283, "node_id": "MDU6SXNzdWUxMDYxNzcyODM=", "number": 71, "title": "Feature Request: Ability to remove argument groups", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:45Z", "updated_at": "2015-09-12T18:23:45Z", "closed_at": "2015-09-12T18:23:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nThere is a method ArgumentParser.add_argument_group() to create and add an\nargument group to the parser.  I would like the ability to remove an\nargument group via a method like remove_argument_group(group).\n\nThe use case for me is I create an argument group and then conditionally\nadd a bunch of arguments to it.  If zero arguments are added I would like\nto then remove the group so that an empty group does not show up in the\nhelp output.\n```\n\nOriginal issue reported on code.google.com by `denver.c...@gmail.com` on 7 Apr 2010 at 3:56\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/72", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/72/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/72/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/72", "id": 106177285, "node_id": "MDU6SXNzdWUxMDYxNzcyODU=", "number": 72, "title": "sub command  set_defaults behaviour ", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:45Z", "updated_at": "2015-09-12T18:23:46Z", "closed_at": "2015-09-12T18:23:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. create 2+ deep hierarchy of subcommands\n2. use set_defaults(func=funcname) on parser for each level\n\nWhat is the expected output? What do you see instead?\nExpect that sub command defaults override the parent level, instead the parent \nis used.  \n\nWhat version of the product are you using? On what operating system?\nusing version 1.1 with python2.6.5 on mac leopard 10.6.3\n\n\n```\n\nOriginal issue reported on code.google.com by `aacha...@gmail.com` on 26 Apr 2010 at 11:48\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/68", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/68/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/68/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/68", "id": 106177278, "node_id": "MDU6SXNzdWUxMDYxNzcyNzg=", "number": 68, "title": "Value passed to command-line option cannot take a string that includes another command-line option", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:44Z", "updated_at": "2015-09-12T18:23:44Z", "closed_at": "2015-09-12T18:23:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\nI have a program that will run other programs.  I'd like to be able to pass\nin the arguments to the other program from the commandline like so:\n\n    envb py.nosetest -a  '-a unit'\n    envb py.nosetest --nose-arguments='-a unit'\n\nIf it's any help, here's the add_argument call:\n\n        parser.add_argument('-a', '--nose-arguments',\n                            help = \"Arguments to pass to nose\")\n\nWhat is the expected output? What do you see instead?\n\nThere's not really any expected output at this point as this is an\nexperiment.  However, I'm currently getting the following error for the\nfirst version:\n\nusage: envb py.nosetest [-h] [-p PARCELS] [-v VERBOSE] [--version]\n                        [-a NOSE_ARGUMENTS]\nenvb py.nosetest: error: argument -a/--nose-arguments: expected one argument\n\nIt seems as though this error will come up if it contains any of the valid\none letter arguments.  So this will also produce an error:\n\nenvb py.nosetest -a  '-v unit'\n\n...but this won't:\n\nenvb py.nosetest -a  '-b unit'\n\nWhat version of the product are you using? On what operating system?\n\nI've verified that this happens under versions 1.1.0 and 1.0.1\n```\n\nOriginal issue reported on code.google.com by `amnorv...@gmail.com` on 24 Mar 2010 at 3:57\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/69", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/69/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/69/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/69/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/69", "id": 106177280, "node_id": "MDU6SXNzdWUxMDYxNzcyODA=", "number": 69, "title": "Request: Method for prompting for arguments let out", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:44Z", "updated_at": "2015-09-12T18:23:45Z", "closed_at": "2015-09-12T18:23:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nFor programs requiring a large number of arguments I make my them optional \nand then do something like the code below. This (or a more integrated \nimplementation) may be useful for argparse.\n\n\nargs = parser.parse_args()\nprompt_for_arg(args.name, \"Name: \")\nprompt_for_arg(args.company, \"Company: \")\nprompt_for_arg(args.homedir, \"Users Home Directory: \")\n\ndef prompt_for_arg(argfield, prompt):\n    if argfield is not None:\n        return False\n    try:\n        argfield = input(prompt)\n        if len(argfield) > 0:\n            return True\n    except:\n        pass\n    print(\"Aborted\")\n    sys.exit()\n```\n\nOriginal issue reported on code.google.com by `AndrewA...@gmail.com` on 5 Apr 2010 at 12:26\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/66", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/66/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/66/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/66", "id": 106177273, "node_id": "MDU6SXNzdWUxMDYxNzcyNzM=", "number": 66, "title": "Calling add_argument with a sequence as 'type' causes spurious error message.", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:43Z", "updated_at": "2015-09-12T18:23:43Z", "closed_at": "2015-09-12T18:23:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\nparser = argparse.ArgumentParser()\nparser.add_argument('--foo', type=(int, float))\n\nWhat is the expected output?\n\nValueError: (<type 'int'>, <type 'float'>) is not callable\n\nWhat do you see instead?\n\nTypeError: not all arguments converted during string formatting\n\nWhat version of the product are you using?\n\nargparse 1.1\n\nOn what operating system?\n\nDebian Linux\n\nPlease provide any additional information below.\n\nThis is caused by calling using the % string formatting operator without\nproper wrapping of the argument. The attached patch corrects this.\n\nThis was discovered by assuming that 'type' accept handle a sequence like\nmetavar does. It is unfortunate that it does not, but I'll raise that as a\nseperate issue.\n```\n\nOriginal issue reported on code.google.com by `Karatorian` on 14 Mar 2010 at 1:40\n\nAttachments:\n- [argparse.diff](https://storage.googleapis.com/google-code-attachments/argparse/issue-66/comment-0/argparse.diff)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/67", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/67/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/67/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/67", "id": 106177276, "node_id": "MDU6SXNzdWUxMDYxNzcyNzY=", "number": 67, "title": "Calling add_argument with the wrong number of metavars causes delayed error message.", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:43Z", "updated_at": "2015-09-12T18:23:44Z", "closed_at": "2015-09-12T18:23:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\nparser = argparse.ArgumentParser()  \nparser.add_argument('--foo', nargs=2, metavar=('X','Y','Z'))\nparser.parse_args(['-h'])\n\nThe error dosn't show up until help is formatted.\n\nGiving any incorrect length of metavar will produce the problem, which\nincludes a tuple whos length doesn't match a numerical value, more than two\nmetavars to '*' or '+', and more than one metavar to '?'. Furthermore, a\ntuple of length one causes the error when nargs is greater than 1, '*', or '+'.\n\nWhat is the expected output? What do you see instead?\n\nWhen the help is displayed, you get:\n\nTypeError: not all arguments converted during string formatting\n\nOr a similar error message for other cases.\n\nIt would be expected that the error message would be more specific. The\nerror should definitely be raised when add_argument is called, rather than\nlater.\n\nWhat version of the product are you using? On what operating system?\n\nargparse 1.0 on Debian Linux\n\n```\n\nOriginal issue reported on code.google.com by `Karatorian` on 14 Mar 2010 at 3:51\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/63", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/63/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/63/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/63", "id": 106177264, "node_id": "MDU6SXNzdWUxMDYxNzcyNjQ=", "number": 63, "title": "Wrap tests are sensitive to terminal size", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:42Z", "updated_at": "2015-09-12T18:23:42Z", "closed_at": "2015-09-12T18:23:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. PYTHONPATH=. python test/test_argparse.py\n2. do the above in an 80x24 terminal window and it passes\n3. do the same in an 80 wide emacs shell buffer and you get lots of failures\n\nWhat is the expected output? What do you see instead?\n\nTests passing in both shells.\n\n\nWhat version of the product are you using? On what operating system?\n\nargparse 1.1 on Ubuntu Lucid\n\nPlease provide any additional information below.\n\n```\n\nOriginal issue reported on code.google.com by `war...@gmail.com` on 11 Mar 2010 at 6:37\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/64", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/64/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/64/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/64", "id": 106177266, "node_id": "MDU6SXNzdWUxMDYxNzcyNjY=", "number": 64, "title": "positional arguments with hyphens not correctly mapped to Namespace object attribute with underscores", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:42Z", "updated_at": "2015-09-12T18:23:42Z", "closed_at": "2015-09-12T18:23:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIf an argument has a hyphen in it (e.g. \"arg-name\"), the resulting\nNamespace object should have an attribute with the same name as the\npositional argument, but with the hyphen substituted for an underscore\n(e.g., \"arg_name\"). This works fine for optional arguments, but not for\npositional arguments. For example:\n\n#! /usr/bin/env python\n\nimport argparse\n\nparser = argparse.ArgumentParser()\nparser.add_argument('pos-arg1', help='positional argument 1')\nargs = parser.parse_args()\n\n# following fails:\n# print(args.pos_arg1)\n# AttributeError: 'Namespace' object has no attribute 'pos_arg1'\n\nprint(args.__dict__)\n# {'pos-arg1': 'd'}\n\n```\n\nOriginal issue reported on code.google.com by `jeetsukumaran` on 12 Mar 2010 at 12:45\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/65", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/65/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/65/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/65", "id": 106177270, "node_id": "MDU6SXNzdWUxMDYxNzcyNzA=", "number": 65, "title": "Cannot specify 'dest' for positional arguments", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:42Z", "updated_at": "2015-09-12T18:23:43Z", "closed_at": "2015-09-12T18:23:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWe should be able to control the attribute name of the resulting Namespace\nobject that positional arguments get mapped to. But currently we cannot:\n\n#! /usr/bin/env python\n\nimport argparse\n\nparser = argparse.ArgumentParser()\n# following fails\nparser.add_argument('pos-arg1', dest=\"posarg1\", help='positional argument 1')\n# ValueError: dest supplied twice for positional argument\n\n```\n\nOriginal issue reported on code.google.com by `jeetsukumaran` on 12 Mar 2010 at 12:47\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/61", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/61/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/61/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/61/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/61", "id": 106177260, "node_id": "MDU6SXNzdWUxMDYxNzcyNjA=", "number": 61, "title": "Document that parents must be fully declared before children.", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582829, "node_id": "MDU6TGFiZWwyNTk1ODI4Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Component-Docs", "name": "Component-Docs", "color": "ededed", "default": false, "description": null}, {"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:41Z", "updated_at": "2015-09-12T18:23:41Z", "closed_at": "2015-09-12T18:23:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\n>>> parent = argparse.ArgumentParser(add_help=False)\n>>> child = argparse.ArgumentParser(parents=[parent])\n>>> parent.add_argument('--foo', action='store_true')\n>>> child.parse_args(['--foo'])\nusage: [-h]\n: error: unrecognized arguments: --foo\n\nWhat is the expected output? What do you see instead?\n\n>>> child.parse_args(['--foo'])\nNamespace(foo=True)\n\nPlease use labels and text to provide additional information.\n\nIt should be documented clearly that only the arguments present on the\nparent parser at the time ArgumentParser is called will be included in the\nparser.\n```\n\nOriginal issue reported on code.google.com by `steven.b...@gmail.com` on 2 Mar 2010 at 7:51\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/62", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/62/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/62/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/62/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/62", "id": 106177262, "node_id": "MDU6SXNzdWUxMDYxNzcyNjI=", "number": 62, "title": "Bikeshedding: a specific method for store_true and store_false arguments", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:41Z", "updated_at": "2015-09-12T18:23:42Z", "closed_at": "2015-09-12T18:23:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIn the python-dev thread \"argparse ugliness\", it was suggested that there be \na new ArgumentParser method for succinctly making store_true and \nstore_false arguments. I propose calling it add_flag():\n\n  add_flag('--flag') <-> add_argument('--flag', action='store_true')\n  add_flag('--flag', default=True) <-> add_argument('--flag', \naction='store_false')\n\nIt's probably unnecessary, but I'd thought I'd toss it out there.\n```\n\nOriginal issue reported on code.google.com by `robert.kern@gmail.com` on 8 Mar 2010 at 6:59\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/60", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/60/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/60/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/60", "id": 106177257, "node_id": "MDU6SXNzdWUxMDYxNzcyNTc=", "number": 60, "title": "Incorrect type for default= in add_argument() is silently ignored, should raise exception", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:40Z", "updated_at": "2015-09-12T18:23:41Z", "closed_at": "2015-09-12T18:23:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. Make a mistake and declaring the default value to be of a different type\nthan the 'type' declared in the same parameter list\n\nWhat is the expected output? What do you see instead?\n\nI'd hope that I'd get an assertion error that the default value is not of\nthe correct type, the error currently passes silently.\n\nWhat version of the product are you using? On what operating system?\n\n1.1a1 from svn, At revision 80. On OS X 10.6.\n\nPlease provide any additional information below.\n    parser_csv.add_argument(\n        '-c', '--contents', type=str,\n        choices=['kwd_desc', 'stuff','otherstuff'],\n        default=['kwd_desc'],\n        help='what data to put in the report')\n\nThe default is a list, when the arg type is supposed to be string.  A\nsimple mistake, and one that I'd like argparse to catch.\n\n\n\n```\n\nOriginal issue reported on code.google.com by `sstein...@gmail.com` on 14 Feb 2010 at 2:49\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/59", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/59/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/59/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/59/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/59", "id": 106177249, "node_id": "MDU6SXNzdWUxMDYxNzcyNDk=", "number": 59, "title": "Control flow is lost when overriding error/exit", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 21, "created_at": "2015-09-12T18:23:38Z", "updated_at": "2015-09-12T18:23:40Z", "closed_at": "2015-09-12T18:23:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhen attempting to grab information from multiple sources than argparse in \nsanescript [1], I run into the problem that I cannot give argparse \ninformation from external sources, e.g. config files. This way, some \nrequired parameters are either missing at the time of argument parsing, or \nshow as non-required in the help.\n\nSince when overriding error() I am forced to either raise an exception, or \nexit control flow, there is no chance to recover the potentially bad data. \nI am not sure if this is an inherent problem (eg missing positional args \nmay break everything).\n\nPlease advise on how to fix this.\n\n[1] http://bitbucket.org/aafshar/sanescript-main/overview/\n```\n\nOriginal issue reported on code.google.com by `aafs...@gmail.com` on 4 Feb 2010 at 11:37\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/57", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/57/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/57/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/57", "id": 106177242, "node_id": "MDU6SXNzdWUxMDYxNzcyNDI=", "number": 57, "title": "'choice' arguments should support default values", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:37Z", "updated_at": "2015-09-12T18:23:37Z", "closed_at": "2015-09-12T18:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\nCurrently this is the behavior of argparse:\n\n>>> import argparse\n>>> parser = argparse.ArgumentParser(prog='PROG')\n>>> parser.add_argument('foo', choices='abc', default='a')\n_StoreAction(option_strings=[], dest='foo', nargs=None, const=None,\ndefault='a', type=None, choices='abc', help=None, metavar=None)\n\nIf a value is given and it's valid, it is stored in foo:\n>>> parser.parse_args('c'.split())\nNamespace(foo='c')\n\n\nWhat is the expected output? What do you see instead?\n\nBut if no value is given, an error is generated:\n>>> parser.parse_args(''.split())\nusage: PROG [-h] {a,b,c}\nPROG: error: too few arguments\n\nIt would be great if instead we got\n\nNamespace(foo='a')\n\nsince 'a' was declared as the default value for 'foo'.\n\nWhat version of the product are you using? On what operating system?\nargparse from svn, on linux.\n```\n\nOriginal issue reported on code.google.com by `fperez....@gmail.com` on 15 Jan 2010 at 1:01\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/58", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/58/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/58/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/58", "id": 106177245, "node_id": "MDU6SXNzdWUxMDYxNzcyNDU=", "number": 58, "title": "Allow title and description arguments for add_mutually_exclusive_group", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-09-12T18:23:37Z", "updated_at": "2015-09-12T18:23:38Z", "closed_at": "2015-09-12T18:23:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI've been using argparse for a while now, and find that the mutually exclusive \ngroups are a great idea, but for one lack: I can't take advantage \nof argparse's nice group formatting for these groups!\n\nOut of curiosity, I decided to try to make the change myself, and found that it \n*seemed* to be relatively simple:\n 1. Accept \"title\" and \"description\" as keyword arguments to add_mutually_exclusive_group\n 2. Pass the \"title\" and \"description\" as keyword arguments to the super() call in _MutuallyExclusiveGroup.__init__\n 3. Add the new group to the parser's action groups in add_mutually_exclusive_group (e.g., self._action_groups.append(group))\n\nSince this only took about a minute for me to figure out, I feel like there \nmust be something that I'm missing. If not, could this functionality \nbe added? If so, what needs to be changed.\n\n(Another thing that makes me curious is that I can't find any requests for this \nfeature via Google searches... It was the first thing I wanted \nafter I tried using a mutually exclusive group, so I'm confused as to why it \ndoesn't appear to be discussed anywhere.)\n```\n\nOriginal issue reported on code.google.com by `chphilli` on 31 Jan 2010 at 10:22\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/56", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/56/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/56/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/56", "id": 106177240, "node_id": "MDU6SXNzdWUxMDYxNzcyNDA=", "number": 56, "title": "parser.parse_known_args() does not work with subparsers", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:36Z", "updated_at": "2015-09-12T18:23:37Z", "closed_at": "2015-09-12T18:23:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nparse_known_args raises an error with subparsers (without subparsers it \nseems okay).  Example script:\n\nimport argparse\n\np = argparse.ArgumentParser()\nsub = p.add_subparsers(dest='command')\nfoo = sub.add_parser('foo')\nfoo.add_argument('--test')\nbar = sub.add_parser('bar')\n\ndef parse(*args):\n    args = list(args)\n    try:\n        result = p.parse_known_args(args)\n        print args, '->', result\n    except SystemExit, e:\n        print args, '-exit->', e\n\nparse('foo')\nparse('foo', '--test', 'this')\nparse('bar')\nparse('foo', '--blah')\n\n\n\n```\n\nOriginal issue reported on code.google.com by `ianbick...@gmail.com` on 14 Jan 2010 at 11:29\n- Merged into: #45\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/54", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/54/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/54/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/54", "id": 106177232, "node_id": "MDU6SXNzdWUxMDYxNzcyMzI=", "number": 54, "title": "When using subcommands, option in parent parser should be placeable anywhere", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:35Z", "updated_at": "2015-09-12T18:23:35Z", "closed_at": "2015-09-12T18:23:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI have a command with a bunch of subcommands.  In the parent parser I added \na verbose option.  I can do:\n\n    mycommand --verbose subcommand --something\n\nBut I expect to also be able to do this:\n\n    mycommand subcommand --verbose --something\n\nBut... I can't.\n```\n\nOriginal issue reported on code.google.com by `ianbick...@gmail.com` on 7 Jan 2010 at 12:07\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/55", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/55/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/55/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/55", "id": 106177235, "node_id": "MDU6SXNzdWUxMDYxNzcyMzU=", "number": 55, "title": "add a utilities for shell autocompleters to hook into as well as support for extending completion info", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-09-12T18:23:35Z", "updated_at": "2015-09-12T18:23:36Z", "closed_at": "2015-09-12T18:23:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nsupport for shell autocompletion is quite pleasant,\n\nplease add helpers to ease supporting it\n```\n\nOriginal issue reported on code.google.com by `ronny.pfannschmidt` on 12 Jan 2010 at 1:09\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/52", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/52/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/52/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/52/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/52", "id": 106177227, "node_id": "MDU6SXNzdWUxMDYxNzcyMjc=", "number": 52, "title": "Use-case for disable_interspersed_args", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-12T18:23:34Z", "updated_at": "2015-09-12T18:23:34Z", "closed_at": "2015-09-12T18:23:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIn short, is there a way that I can emulate the disable_interspersed_args \nbehavior from optparse?\n\nLong form:\n\nI've been happily converting my applications from optparse to argpase and \nhave enjoyed the improvements to the interface provided to my users and the \nclearer and more concise code.  However, I've run into a use-case with an \napplication that uses the optparse \"disable_interspersed_args\" feature to \nimplement \"lazy\" command-line sub-parsers for a plug-in based architecture.  \nBy \"lazy\", I mean that the main parser and application has no knowledge of \nthe sub-components and thus cannot instantiate a sub-parser prior to \nparsing.  Also, there are hundreds of sub-parsers and the cost of importing \neach plug-in and instantiating the sub-parser would be extreme.\n\nSpecifically, the launcher app parses some local options:\n\nparser = ...\nparser.disable_interspersed_args()\nlauncher_options,args = parser.parse_args()\n\nThe first positional argument, args[0], is the command designator.  For \nPython plug-ins, it then sets sys.argv[:] to args and then runs the sub-\nmodule \"main\" function, which creates a standalone option parser.\n\nThere are several reasons why I cannot easily convert this application to \nuse argparse-style sub-parsers.  The most important is that there are \ndozens of built-in sub-modules and hundreds of user-supplied sub-modules \neach with a large number of imports and accepting diverse parameters.  \nSince plug-ins are provided as a package or single-file in a fixed path, my \nlauncher application would have to import each one to obtain a sub-parser.  \nFor a long-running service, this sort of plug-in discovery would be a \nnegligible overhead, but it would add seconds of latency to an interactive \nprocess.\n\nObviously, I can continue to use optparse for the launcher and convert the  \nbuilt-in modules to argparse.  I figured it was worth a try to see if there \nis a way to emulating disable_interspersed_args, since it would be nice to \nuse one uniform argument parser implementation.\n\n```\n\nOriginal issue reported on code.google.com by `bioinformed@gmail.com` on 28 Dec 2009 at 1:45\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/53", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/53/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/53/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/53/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/53", "id": 106177230, "node_id": "MDU6SXNzdWUxMDYxNzcyMzA=", "number": 53, "title": "Cannot group subcommands", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:34Z", "updated_at": "2015-09-12T18:23:35Z", "closed_at": "2015-09-12T18:23:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI have a command with a bunch of subcommands, and I'd like them formatted \ninto groups.  But it appears this is not possible; you can't add subparsers \nto argument groups, nor can you have multiple subparsers with different \ntitle arguments.\n```\n\nOriginal issue reported on code.google.com by `ianbick...@gmail.com` on 31 Dec 2009 at 9:03\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/50", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/50/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/50/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/50", "id": 106177220, "node_id": "MDU6SXNzdWUxMDYxNzcyMjA=", "number": 50, "title": "convention for reporting program name and version by default", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-12T18:23:33Z", "updated_at": "2015-09-12T18:23:33Z", "closed_at": "2015-09-12T18:23:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nNeither optparse not argparse 1.0.1 provide user friendly reporting of \nprogram name and version by default.\n\nI propose the following convention to be supported by argument parsing \nlibrary by default.\n1. When user calls script.py without arguments the following information is \ndisplayed\n> script.py\nFull Program Name, version XXX\n\nUsage: script.py <...>\n\nShort Description\n\nOptions:\n\n ...\n\n> script.py --version\nFull Program Name, version XXX\n{version template if present with license info or script doc block or ...}\n\nWhat is the expected output? What do you see instead?\nThere is `prog` argument to ArgumentParser() that allows to specify script \nname in `\"usage: ...\"` line, but no argument to specify full program name. \n\n--version outputs just a number that is not sufficient. In most cases I \nwould also like to see revision (as user) or display copyright (as \ndeveloper) or just module docblock that contains both. \n\nPlease provide any additional information below.\nIt would be nice if argparse could stick to this default output if both \n'version' and 'fullname' information is present and allow to customize \ntemplates before usage, usage itself, short description and options.\n\nTake a look at 'hg' (or 'svn') command line interface for an example of \nthis approach.\n```\n\nOriginal issue reported on code.google.com by `techtonik@gmail.com` on 15 Dec 2009 at 1:21\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/51", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/51/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/51/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/51", "id": 106177225, "node_id": "MDU6SXNzdWUxMDYxNzcyMjU=", "number": 51, "title": "improve exception messages for optparse related errors", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:33Z", "updated_at": "2015-09-12T18:23:34Z", "closed_at": "2015-09-12T18:23:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWarn about string types in add_argument instead of parse_args:\n\n>>> parser = argparse.ArgumentParser()\n>>> parser.add_argument('foo', type='int')\n>>> parser.parse_args(['X'])\nusage: [-h] foo\n: error: argument foo: 'int' is not callable\n\nWarn about using optparse-style %prog formatting:\n\n>>> import argparse\n>>> parser = argparse.ArgumentParser()\n>>> parser.add_argument('foo', help='%prog')\n>>> parser.print_help()\nTraceback (most recent call last):\n  ...\nValueError: unsupported format character 'p' (0x70) at index 1\n```\n\nOriginal issue reported on code.google.com by `steven.b...@gmail.com` on 15 Dec 2009 at 5:13\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/48", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/48/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/48/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/48", "id": 106177214, "node_id": "MDU6SXNzdWUxMDYxNzcyMTQ=", "number": 48, "title": "inconsistent --option=xxx vs --option xxx", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:32Z", "updated_at": "2015-09-12T18:23:32Z", "closed_at": "2015-09-12T18:23:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI have an option '--si' and and option '--size'  (unintentional)\nwhen used with '=', ambiguous, but when used with ' ', not.\n\npython test_front_end_spec.py --order=3  -e 13.1 --sps='u(2,4)' --alpha\n.35 --si 64 --no-notch --size 1000000 \n\n\npython test_front_end_spec.py --order=3  -e 13.1 --sps='u(2,4)' --alpha\n.35 --si=64 --no-notch --size=1000000 \nusage: test_front_end_spec.py [-h] [-e ESNODB] [--alpha ALPHA] [--trials\nTRIALS] [--order ORDER] [-s SPS] [--size SIZE] [--si SI]\n                              [--filter [FILTER]] [--notch [NOTCH]] [--\ntest_front_end_spec.py: error: ambiguous option: --si=64 could match --si,\n--size\n\n```\n\nOriginal issue reported on code.google.com by `ndbeck...@gmail.com` on 4 Dec 2009 at 1:19\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/49", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/49/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/49/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/49", "id": 106177217, "node_id": "MDU6SXNzdWUxMDYxNzcyMTc=", "number": 49, "title": "optparse incompatibilities are unnecessary", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:32Z", "updated_at": "2015-09-12T18:23:32Z", "closed_at": "2015-09-12T18:23:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nThe use of methods like \"add_argument\" and \"ArgumentParser\" are \nunnecessarily different than optparse.  I don't see a reason I shouldn't be \nable to replace \"from optparse import ...\" with \"from argparse import ...\", \nso long as I don't do anything particularly complicated (like add new \nconverters).  These small name changes get in the way of that.  \n\nAlso the optparse substitutions (like %prog) should be supported; it would \nonly be a couple of lines of extra code to support both those and the \ncurrent argparse %()s substitutions.\n```\n\nOriginal issue reported on code.google.com by `ianbick...@gmail.com` on 14 Dec 2009 at 6:20\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/47", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/47/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/47/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/47", "id": 106177211, "node_id": "MDU6SXNzdWUxMDYxNzcyMTE=", "number": 47, "title": "optional subparsers", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-12T18:23:31Z", "updated_at": "2015-09-12T18:23:32Z", "closed_at": "2015-09-12T18:23:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\nparser = argparse.ArgumentParser()\nsub = parser.add_subparsers()\nsub.add_parser(\"info\")\nparser.add_argument(\"paths\", \"+\")\nparser.parse_args([\"foo\", \"bar\"])\n\nWhat is the expected output? What do you see instead?\nExpected behavior is that, failing to match one of the subparser inputs\n(\"info\"), the parser checks if the argument matches any of the top-level\narguments, in this case the 'paths' multi-arg. In other words, it should be\npossible to make the subparser be optional, such that when the subparser\nargument fails to retrieve any valid subparser, the remaining args are\nparsed as if no subparser exists. At present, it does not seem possible to\nmake a subparser be optional at all.\nPerhaps this could be exposed to the user as:\nparser.add_subparsers(nargs=argparse.OPTIONAL)\nor something to that effect. Or, allow a default subparser to be specified.\nI.e.,\n\nsub = parser.add_subparsers()\ninfo = sub.add_parser(\"info\")\nmain = sub.add_parser(\"main\")\nsub.default = main\n\nI'm sure the point will come up that the current behavior is correct,\nbecause given a subparser like \"info\", a user could easily make a mistake\nlike \"myapp ino foo bar\" and rather than get a safe error be given\nsomething unexpected. For this reason, I think the default behavior is\nusually going to be correct. BUT, it would still be nice if it could be\noptional, so that developers could be free to make that call. Sometimes the\npotential user errors aren't really an issue, and having to explicitly set\na subparse arg every time can be a nuissance.\n```\n\nOriginal issue reported on code.google.com by `sgusta...@gmail.com` on 28 Nov 2009 at 3:35\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/45", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/45/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/45/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/45", "id": 106177205, "node_id": "MDU6SXNzdWUxMDYxNzcyMDU=", "number": 45, "title": "parse_known_args() fails when using subcommands", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-12T18:23:30Z", "updated_at": "2015-09-12T18:23:30Z", "closed_at": "2015-09-12T18:23:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nSave the attached script, and run:\n\n python test.py A --foo\n\nThis generates the following output, which indicates that the unknown\n'--foo' option is not being ignored:\n\n  usage: test A [-h]\n  test A: error: unrecognized arguments: --foo\n\n```\n\nOriginal issue reported on code.google.com by `whart222` on 26 Nov 2009 at 12:28\n\nAttachments:\n- [test.py](https://storage.googleapis.com/google-code-attachments/argparse/issue-45/comment-0/test.py)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/46", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/46/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/46/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/46", "id": 106177208, "node_id": "MDU6SXNzdWUxMDYxNzcyMDg=", "number": 46, "title": "'-' should be a valid flag", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-12T18:23:30Z", "updated_at": "2015-09-12T18:23:31Z", "closed_at": "2015-09-12T18:23:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\nparser = argparser.ArgumentParser()\nparser.add_argument(\"-\")\nparser.parser_args()\n\nWhat is the expected output? What do you see instead?\nExpect a single '-' to be a valid argument just as '+' is considered valid.\nErrors out with \"must contain characters other than '-'\"\n\n\n\nThis probably seems like it should be uncommon, but a single '-' flag is\nsomething I use regularly in my command line scripts. It's so quick and\neasy to type that it makes for a very ideal shortcut, like 'cd -'. I also\nhave many commands that have add/remove behavior, and in all of these cases\nI use +/- flags as shortcut flags to '--add' or '--remove'.\nIdeally, an argument parser should place no restrictions on the format of\nflags whatsoever. I often can't use the builtin optparse exactly because of\nthe restrictions it places on flag names.\n\nIn the way of suggestions, something that could cover this case and at the\nsame time many other cases would be to allow flags to be regex objects. I.e.,\nparser.add_argument(re.compile(\"foo\"))\n```\n\nOriginal issue reported on code.google.com by `sgusta...@gmail.com` on 28 Nov 2009 at 12:27\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/44", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/44/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/44/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/44", "id": 106177203, "node_id": "MDU6SXNzdWUxMDYxNzcyMDM=", "number": 44, "title": "Allow conflicting argument declarations for subparsers", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:29Z", "updated_at": "2015-09-12T18:23:30Z", "closed_at": "2015-09-12T18:23:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI'd like to have a command line with two subcommands, each of which has the\nsame option.  This appears to be disallowed in the current version.\n\nExample:\n\n  script cmd1 -v\n  script cmd2 -v\n\n\n```\n\nOriginal issue reported on code.google.com by `whart222` on 25 Nov 2009 at 8:58\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/43", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/43/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/43/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/43", "id": 106177197, "node_id": "MDU6SXNzdWUxMDYxNzcxOTc=", "number": 43, "title": "--help and --version methods; change defaults", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2015-09-12T18:23:28Z", "updated_at": "2015-09-12T18:23:29Z", "closed_at": "2015-09-12T18:23:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\n>>> import argparse\n>>> parser = argparse.ArgumentParser(version='0.1')\n>>> parser.add_argument('--verbose', '-v', action='store_true')\n>>>\n\n(I have used optparse for quite a while and use -v/--verbose all the time)\n\nWhat is the expected output? What do you see instead?\n\nI expect:\n_StoreTrueAction(option_strings=['--verbose', '-v'], dest='verbose',\nnargs=0, const=True, default=False, type=None, choices=None, help=None,\nmetavar=None)\n\nI get:\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"argparse.py\", line 1287, in add_argument\n    return self._add_action(action)\n  File \"argparse.py\", line 1659, in _add_action\n    self._optionals._add_action(action)\n  File \"argparse.py\", line 1496, in _add_action\n    action = super(_ArgumentGroup, self)._add_action(action)\n  File \"argparse.py\", line 1301, in _add_action\n    self._check_conflict(action)\n  File \"argparse.py\", line 1448, in _check_conflict\n    conflict_handler(action, confl_optionals)\n  File \"argparse.py\", line 1455, in _handle_conflict_error\n    raise ArgumentError(action, message % conflict_string)\nargparse.ArgumentError: argument -v/--version: conflicting option string(s): -v\n\nWhat version of the product are you using? On what operating system?\n1.1a1 (os independent)\n\nAs of argparse 1.1a1, the --help (unless suppressed) and --version\narguments are created during initialization of the ArgumentParser by calls\nto the all-purpose method add_argument (directly in the __init__ method).\nThis way it is not easily possible to override the default arguments in a\nsubclass of ArgumentParser; help and version info creation must be\nsuppressed and done explicitly. This is inconvenient.\n\n\"-v\" is not commonly used as a --version shorthand:\ncp:       --version (-v is --verbose)\nfind:     --version (no -v or -V argument)\ngrep: -V, --version\nless: -V, --version (no -v argument)\nls:       --version (no -v argument)\nsed:  -V, --version\nwc:       --version (no -v argument)\n\nInfoZip's zip uses -v for verbose operation *and* version info, but this is\nnot a serious option...\n\nSome programs even use -h for something else than the help: e.g. for the\n(quite important) host argument of database commandline clients, and grep\nuses -h/-H for the enforcement/suppression of filenames.\n\ncp:      --help\ndirname: --help\nfind:    --help (no -h or -? argument)\ngrep:    --help\nless:    --help, -? (\"Number is required after -h\")\nls:      --help (no -h or -? argument)\nsed:     --help, -h, -?\nunzip:   --help, -h, -?\nzip:     --help, -h, -?\n\nAs long as the default help and version arguments are created first and\nblock usage of -h and -v for other options, IMO the default option strings\nmust be reduced to:\n\n--help (always help, if present)\n-?     (dto.)\n--version (the only version option which is *always* implemented)\n\nIf the creation of these options would be delayed (just before parsing),\n-h, -V and *perhaps* -v could be tried as well, but this is another proposal.\n\nFor now, I propose to\n- change the default option strings (blocking -v is a defect IMO)\n- put the calls to add_argument in dedicated methods --\n  e.g. add_help_argument, add_version_argument -- which can be easily\n  overridden or monkey-patched.\n\n```\n\nOriginal issue reported on code.google.com by `bruno-th...@gmx.net` on 6 Nov 2009 at 10:13\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/41", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/41/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/41/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/41", "id": 106177193, "node_id": "MDU6SXNzdWUxMDYxNzcxOTM=", "number": 41, "title": "Documentation section 3.1.5 seems to include text for 3.1.4", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:27Z", "updated_at": "2015-09-12T18:23:27Z", "closed_at": "2015-09-12T18:23:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nSection 3.1.5 in the 1.0.1 argparse documentation file describes the \nprefix_chars parameter for the ArgumentParser init call.  However, the last \ntwo lines of this section appear to be dscussing the proper use of the \nadd_help parameter which was discussed in 3.1.4.\n\nWhat is the expected output? What do you see instead?\n\nsee above\n\nWhat version of the product are you using? On what operating system?\n\nVersion 1.0.1 of the argparse documentation\n\nPlease provide any additional information below.\n\n```\n\nOriginal issue reported on code.google.com by `jdclar...@gmail.com` on 29 Oct 2009 at 9:33\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/42", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/42/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/42/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/42/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/42", "id": 106177195, "node_id": "MDU6SXNzdWUxMDYxNzcxOTU=", "number": 42, "title": "values to arguments should be mandatred to be placed immediate", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:27Z", "updated_at": "2015-09-12T18:23:27Z", "closed_at": "2015-09-12T18:23:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\nConsider this example:\n\n        # SET command options\n        #\n        parser_set = subparsers.add_parser('set', parents=[global_options])\n        parser_set.set_defaults(func=setter)\n\n        parser_set.add_argument('set',\n                          help=\"Generate a signature file\",\n                          action=\"store\", type=str, metavar=\"apt-offline.sig\",\n                          default=\"apt-offline.sig\")\n\n        #TODO: Handle nargs here.\n        parser_set.add_argument(\"--install-packages\",\ndest=\"set_install_packages\", help=\"Packages that need to be installed\",\n                          action=\"store\", type=str, nargs='*', metavar=\"PKG\")\n\n        parser_set.add_argument(\"--install-src-packages\",\ndest=\"set_install_src_packages\", help=\"Source Packages that need to be\ninstalled\",\n                          action=\"store\", type=str, nargs='*',\nmetavar=\"SOURCE PKG\")\n\n\"set\" here is a command/argument which expects a value, in this case a file.\nSet also has many options. Like the above ones with nargs='*'.\n\nSince argparse is not mandating the placement of the value for the \"set\"\nargument, it fails if that value is places after the option/argument of\ntype nargs='*'\n\n\nrrs@champaran:~/devel/apt-offline/apt-offline  (master)$ apt-offline  set\n--install-packages foo bar /tmp/foo.uris\nusage: apt-offline set [-h] [--verbose] [--test-windows]\n                       [--install-packages [PKG [PKG ...]]]\n                       [--install-src-packages [SOURCE PKG [SOURCE PKG ...]]]\n                       [--src-build-dep] [--release release_name] [--update]\n                       [--upgrade] [--upgrade-type upgrade]\n                       apt-offline.sig\napt-offline set: error: too few arguments\nrrs@champaran:~/devel/apt-offline/apt-offline  (master)$ less\nAptOfflineCoreLib.py\nrrs@champaran:~/devel/apt-offline/apt-offline  (master)$ sudo apt-offline \nset /tmp/foo.uris --install-packages foo bar\n[sudo] password for rrs:\n\nGenerating database of package foo, bar,  and its dependencies.\n\nWhat is the expected output? What do you see instead?\nPlacements should either be mandated or else argparse should be able to\nhandle the case I've mentioned above.\n\nWhat version of the product are you using? On what operating system?\nargparse 1.0.1\nLinux\n```\n\nOriginal issue reported on code.google.com by `riteshra...@gmail.com` on 1 Nov 2009 at 11:13\n- Merged into: #20\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/39", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/39/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/39/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/39", "id": 106177188, "node_id": "MDU6SXNzdWUxMDYxNzcxODg=", "number": 39, "title": "typo in \"action\" creates hard to diagnose error message", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:26Z", "updated_at": "2015-09-12T18:23:26Z", "closed_at": "2015-09-12T18:23:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nThe following contains a typo \n\nimport argparse \nparser = argparse.ArgumentParser(prog=\"abc\") \nparser.add_argument(\"--version\", action=\"store-true\") \nargs = parser.parse_args() \n\nSee it? I did \"store-true\" instead of \"store_true\". When I run the \ncode I get \n\nTraceback (most recent call last): \n  File \"problem.py\", line 6, in <module> \n    parser.add_argument(\"--version\", action=\"store-true\") \n  File \"/Users/dalke/tmp/argparse.py\", line 1264, in add_argument \n    action = action_class(**kwargs) \nTypeError: 'str' object is not callable \n\nI spent some time trying to figure out what I did wrong, before \nspotting the \"-\" instead of the \"_\" in my code. \n\nReading the documentation and the code, it appears the goal is to use \nstrings for most of the cases but also allow argparse users to \n\"specify an arbitrary action by passing an object that implements the \nAction API\". \n\nHowever, strings are not and cannot implement the Action API. Passing \nin an unrecognized string will always be an error, and likely be a \ntypo like mine. \n\nCould you check for the case of passing in an unsupported string and \nraise an exception with a more useful error message? \n\n```\n\nOriginal issue reported on code.google.com by `andrewda...@gmail.com` on 18 Oct 2009 at 8:02\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/40", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/40/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/40/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/40/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/40", "id": 106177190, "node_id": "MDU6SXNzdWUxMDYxNzcxOTA=", "number": 40, "title": "%(prog)s in version string is not being replaced", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-12T18:23:26Z", "updated_at": "2015-09-12T18:23:27Z", "closed_at": "2015-09-12T18:23:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\n>>> import argparse\n>>> parser = argparse.ArgumentParser(prog='PROG', version='%(prog)s 3.5')\n>>> parser.parse_args(['-v'])\n%(prog)s 3.5\n\nWhat is the expected output? What do you see instead?\n\nI expect to see \"PROG 3.5\", and what I see is \"%(prog)s 3.5\" (without the \nquotes).\n\nWhat version of the product are you using? On what operating system?\n\nUsing version 1.0.1 on Active Python 2.6.2.2 on Windows Vista.  Problem \nalso seems to happen using Jython 2.5.1 on Windows Vista.\n\nPlease provide any additional information below.\n\n```\n\nOriginal issue reported on code.google.com by `jdclar...@gmail.com` on 29 Oct 2009 at 9:22\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/37", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/37/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/37/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/37", "id": 106177184, "node_id": "MDU6SXNzdWUxMDYxNzcxODQ=", "number": 37, "title": "bug with two letter options and negative number arguments", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-12T18:23:25Z", "updated_at": "2015-09-12T18:23:25Z", "closed_at": "2015-09-12T18:23:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhen a negative number is given as the value of an option (e.g., integer,\nfloat), the number is interpreted as an option and an error is raised. \nThe only workaround is to use a long option with '='.\n\nIt sure would be nice to have a smarter solution (although I realize that\ncould be difficult).\n\nWhat steps will reproduce the problem?\n1.\n2.\n3.\n\nWhat is the expected output? What do you see instead?\n\n\nWhat version of the product are you using? On what operating system?\n\n\nPlease provide any additional information below.\n\n```\n\nOriginal issue reported on code.google.com by `ndbeck...@gmail.com` on 9 Oct 2009 at 12:35\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/38", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/38/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/38/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/38", "id": 106177186, "node_id": "MDU6SXNzdWUxMDYxNzcxODY=", "number": 38, "title": "improve error message when supplying dest= for positional argument", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:25Z", "updated_at": "2015-09-12T18:23:26Z", "closed_at": "2015-09-12T18:23:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nUsing version 1.0.1 I get:\n\n  File \"argparse.py\", line 1248, in add_argument\nTypeError: _get_positional_kwargs() got multiple values for keyword argument \n'dest'\n\nI can see that it might no make sense to specify a dest for a positional \nargument, but the error message isn't very useful ;-)\n```\n\nOriginal issue reported on code.google.com by `cwith...@gmail.com` on 14 Oct 2009 at 11:07\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/36", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/36/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/36/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/36", "id": 106177182, "node_id": "MDU6SXNzdWUxMDYxNzcxODI=", "number": 36, "title": "\"from argparse import *\" fails", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:24Z", "updated_at": "2015-09-12T18:23:24Z", "closed_at": "2015-09-12T18:23:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\n>>> from argparse import *\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'module' object has no attribute\n'RawTextHelpFormatterArgumentDefaultsHelpFormatter'\n>>>\n\nWhat version of the product are you using?\n\ntrunk@62\n\nPlease provide any additional information below.\n\nJust a missing comma at argparse.py:87.\n```\n\nOriginal issue reported on code.google.com by `dhaf...@gmail.com` on 30 Sep 2009 at 5:35\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/34", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/34/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/34/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/34", "id": 106177176, "node_id": "MDU6SXNzdWUxMDYxNzcxNzY=", "number": 34, "title": "customize error messages for invalid type= values", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:23Z", "updated_at": "2015-09-12T18:23:23Z", "closed_at": "2015-09-12T18:23:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIt should be possible to specify the message that type= arguments produce\non error. Right now, your only option is to raise ``ArgumentError(None,\nmsg)``, which won't include the argument information.\n\nPerhaps _get_value should catch ArgumentErrors thrown and fill in the\nargument if it's set to None. Or perhaps we should introduce an\nArgumentTypeError that users could throw specifically for this purpose.\n```\n\nOriginal issue reported on code.google.com by `steven.b...@gmail.com` on 25 Sep 2009 at 8:03\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/35", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/35/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/35/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/35/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/35", "id": 106177177, "node_id": "MDU6SXNzdWUxMDYxNzcxNzc=", "number": 35, "title": "Support for env/config file hierarchy", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-09-12T18:23:23Z", "updated_at": "2015-09-12T18:23:24Z", "closed_at": "2015-09-12T18:23:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nHere's a patch to implement configuration hierarchies described in The Art\nof Unix Programming [0]\n\nThe basic idea is that config information can be pulled out of \n\n* Global config file\n* User local config file\n* environment variables\n* command line\n\nHigher priority comes later in the list.  This patch allows one to set a\n``env_name`` parameter so that actions look in the environment for the\nvalue.  Also provided are ``cfg_section`` and ``cfg_name`` parameters so\nthat actions can look in .ini style config file files.  The ArgumentParser\nconstructor has been updated to include a config_files parameter that\naccepts a list of instances that support a call ``.get(section, name)``\nthat will return a value.  Note that it supports a list of files and that\nfiles that come later will override any values previously found.\n\nExample usage:\n\ncfg_str = \"\"\"[Properties]\nauthor = System User\"\"\"\n        cfg1 = ConfigParser.ConfigParser()\n        cfg1.readfp(StringIO.StringIO(cfg_str))\n        cfg_str2 = \"\"\"[Properties]\nauthor = Matt\"\"\"\n        cfg2 = ConfigParser.ConfigParser()\n        cfg2.readfp(StringIO.StringIO(cfg_str2))\n        # cfg1 might be a file found in /etc/conf/...\n        # cfg2 might be a local file ~/.config/....\n        parser = argparse.ArgumentParser(config_files=[cfg1, cfg2])\n\n        parser.add_argument('--user', cfg_section='Properties',\ncfg_name='author', env_name='USER')\n\nPatch is attached\n\n0 - http://www.faqs.org/docs/artu/ch10s02.html\n```\n\nOriginal issue reported on code.google.com by `matthewh...@gmail.com` on 28 Sep 2009 at 6:23\n\nAttachments:\n- [env-cfg.patch](https://storage.googleapis.com/google-code-attachments/argparse/issue-35/comment-0/env-cfg.patch)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/33", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/33/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/33/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/33/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/33", "id": 106177173, "node_id": "MDU6SXNzdWUxMDYxNzcxNzM=", "number": 33, "title": "Allow non-mutually exclusive options within a mutually exclusive group", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:22Z", "updated_at": "2015-09-12T18:23:23Z", "closed_at": "2015-09-12T18:23:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\nI've attached a doctest (mutex_with_arg_group.doctest file) that reproduces\nthe problem.\n\nWhat is the expected output? What do you see instead?\nThere should be '|' char in the usage message.\n\nWhat version of the product are you using? On what operating system?\nr61 version, Linux\n\nPlease provide any additional information below.\nRelated problem (that might or might not be a bug) I've described in\n\nhttp://groups.google.com/group/argparse-users/t/b0910aa82a6f3e52\n```\n\nOriginal issue reported on code.google.com by `4kir4...@gmail.com` on 16 Sep 2009 at 10:18\n\nAttachments:\n- [mutex_with_arg_group.doctest](https://storage.googleapis.com/google-code-attachments/argparse/issue-33/comment-0/mutex_with_arg_group.doctest)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/32", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/32/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/32/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/32/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/32", "id": 106177169, "node_id": "MDU6SXNzdWUxMDYxNzcxNjk=", "number": 32, "title": "More robust arguments from files", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-09-12T18:23:21Z", "updated_at": "2015-09-12T18:23:22Z", "closed_at": "2015-09-12T18:23:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI changed line 1941 from this: \narg_strings = args_file.read().splitlines()\n\nto this: arg_strings = args_file.read().strip().split()\n\nUsing my approach you have much more flexibility when specifying arguments and \noptions in the \nfile.\n\n\n\n```\n\nOriginal issue reported on code.google.com by `frigoli...@gmail.com` on 15 Sep 2009 at 7:56\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/31", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/31/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/31/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/31", "id": 106177165, "node_id": "MDU6SXNzdWUxMDYxNzcxNjU=", "number": 31, "title": "argparse 1.0.1 has a test failure", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2015-09-12T18:23:19Z", "updated_at": "2015-09-12T18:23:20Z", "closed_at": "2015-09-12T18:23:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. Install argparse 1.0.1 (I tried Windows XP and Mac OS X (from SVN)).\n2.cd test;  python test_argparse.py\n\nGot this unit test failure:\nERROR: test_argparse_module_encoding (__main__.TestEncoding)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"test_argparse.py\", line 3920, in test_argparse_module_encoding\n    text = codecs.open(argparse.__file__, 'r', 'utf8').read()\n  File \"/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/codecs.py\", line 666, \nin read\n    return self.reader.read(size)\n  File \"/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/codecs.py\", line 472, \nin read\n    newchars, decodedbytes = self.decode(data, self.errors)\nUnicodeDecodeError: 'utf8' codec can't decode bytes in position 0-1: invalid \ndata\n\nIs it because the file being opened (argparse.__file__) is a .pyc file, not a \ntext file?\n```\n\nOriginal issue reported on code.google.com by `mcphail_...@hotmail.com` on 15 Sep 2009 at 6:47\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/30", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/30/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/30/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/30", "id": 106177162, "node_id": "MDU6SXNzdWUxMDYxNzcxNjI=", "number": 30, "title": "argparse-1.0.1 does not install", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-09-12T18:23:18Z", "updated_at": "2015-09-12T18:23:19Z", "closed_at": "2015-09-12T18:23:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. download\n2. unzip\n3. run:\n# python setup.py install\nTraceback (most recent call last):\n  File \"setup.py\", line 40, in <module>\n    long_description = read_description(),\n  File \"setup.py\", line 28, in read_description\n    main_desc, = re.findall(main_desc_regexp, readme_text, re.DOTALL)\nValueError: need more than 0 values to unpack\n\n\n```\n\nOriginal issue reported on code.google.com by `48000...@gmail.com` on 15 Sep 2009 at 11:51\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/28", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/28/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/28/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/28", "id": 106177156, "node_id": "MDU6SXNzdWUxMDYxNzcxNTY=", "number": 28, "title": "Installation fails on Linux with the current trunk version (r40) ", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:15Z", "updated_at": "2015-09-12T18:23:15Z", "closed_at": "2015-09-12T18:23:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. Download the source \n   $ git svn clone http://argparse.googlecode.com/svn/trunk\n(NOTE: autocrlf is false)\n   $ cd trunk\n\n2. Run setup.py\n   $ python setup.py --help\n\nWhat is the expected output? \nHelp message for the setup.py\n\nWhat do you see instead?\nTraceback (most recent call last):\n  File \"setup.py\", line 40, in <module>\n    long_description = read_description(),\n  File \"setup.py\", line 28, in read_description\n    main_desc, = re.findall(main_desc_regexp, readme_text, re.DOTALL)\nValueError: need more than 0 values to unpack\n\nWhat version of the product are you using? On what operating system?\ntrunk@40 Linux\n\nPlease provide any additional information below.\n\nREADME.txt contains '\\r\\n' and the corresponding regex -- just '\\n'. Python\ndoesn't converted '\\r\\n' on Linux.\n\nI've attached the patch that fixes the issue. \n\n\n```\n\nOriginal issue reported on code.google.com by `4kir4...@gmail.com` on 11 Sep 2009 at 7:20\n\nAttachments:\n- [argparse-0040-fix-setup-linux.patch](https://storage.googleapis.com/google-code-attachments/argparse/issue-28/comment-0/argparse-0040-fix-setup-linux.patch)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/29", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/29/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/29/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/29", "id": 106177157, "node_id": "MDU6SXNzdWUxMDYxNzcxNTc=", "number": 29, "title": "Feature Request: Declarative interface using a decorator", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2015-09-12T18:23:15Z", "updated_at": "2015-09-12T18:23:17Z", "closed_at": "2015-09-12T18:23:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nSteven,\n\nThank you very much for argparse. I've used it without problems, liked it\nand am very interested to see that it might be included in the stdlib - but\nI've also just been looking at Opster and find its declarative interface\n(based on a decorator) a breath of fresh air.\n\nWhat are the chances that argparse could add a declarative interface like this?\n\nI also notice that Opster is 406 source lines versus 1394 for argparse\n(using sloccount, so discounting comments), is this because argparse is\nstill trying to provide optparse compatibility, or because positional args\nrequire the extra code? I haven't actually tried using Opster in anger but\nit claims to do subcommands etc. so appears functionally close to argparse,\napart of course from the positional args part.\n\nWould appreciate your thoughts, Steven!\n```\n\nOriginal issue reported on code.google.com by `vinay_sa...@yahoo.co.uk` on 15 Sep 2009 at 10:26\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/27", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/27/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/27/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/27", "id": 106177154, "node_id": "MDU6SXNzdWUxMDYxNzcxNTQ=", "number": 27, "title": "mutually exclusive group stops working when specified via parent parser", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-12T18:23:14Z", "updated_at": "2015-09-12T18:23:15Z", "closed_at": "2015-09-12T18:23:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\nWhat is the expected output? What do you see instead?\n\nI've attached test_mutually_exclusive_parent.py which shows the problem.\nArgumentParser doesn't add its parents' mutually exclusive groups to its\nown m.e. group.\n\nWhat version of the product are you using? On what operating system?\nargparse 1.0; Linux\n\nPlease provide any additional information below.\n\nAs a workaround I add the group in each subparser individually instead of\nvia the single parent parser ('parents=' keyword argument).\n```\n\nOriginal issue reported on code.google.com by `4kir4...@gmail.com` on 11 Sep 2009 at 4:30\n\nAttachments:\n- [test_mutually_exclusive_parent.py](https://storage.googleapis.com/google-code-attachments/argparse/issue-27/comment-0/test_mutually_exclusive_parent.py)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/25", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/25/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/25/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/25", "id": 106177151, "node_id": "MDU6SXNzdWUxMDYxNzcxNTE=", "number": 25, "title": "ArgumentError.message triggers DeprecationWarning as of Python 2.6", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:13Z", "updated_at": "2015-09-12T18:23:13Z", "closed_at": "2015-09-12T18:23:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n`BaseException.message` is deprecated as of Python 2.6, its usage triggers\na `DeprecationWarning`.  As `ArgumentError` derives indirectly from\n`BaseException`, `ArgumentError.message` triggers this warning too:\n\n{{{\n>>> from argparse import ArgumentParser\n>>> parser = ArgumentParser()\n>>> parser.add_argument('-s', '--spam', type=int)\n_StoreAction(option_strings=['-s', '--spam'], dest='spam', nargs=None,\nconst=None, default=None, type=<type 'int'>, choices=None, help=None,\nmetavar=None)\n>>> parser.parse_args(['-s', 'eggs'])\n/usr/lib64/python2.6/site-packages/argparse.py:671: DeprecationWarning:\nBaseException.message has been deprecated as of Python 2.6\n  self.message = message\n/usr/lib64/python2.6/site-packages/argparse.py:678: DeprecationWarning:\nBaseException.message has been deprecated as of Python 2.6\n  return format % dict(message=self.message,\nusage:  [-h] [-s SPAM]\n: error: argument -s/--spam: invalid int value: 'eggs'\n}}}\n\nA patch against r40, which renames `ArgumentError.message` to\n`ArgumentError.error`, is attached.\n```\n\nOriginal issue reported on code.google.com by `lunaryorn` on 25 Aug 2009 at 11:42\n\nAttachments:\n- [BaseException.message_deprecation_fix.patch](https://storage.googleapis.com/google-code-attachments/argparse/issue-25/comment-0/BaseException.message_deprecation_fix.patch)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/26", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/26/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/26/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/26", "id": 106177152, "node_id": "MDU6SXNzdWUxMDYxNzcxNTI=", "number": 26, "title": "parent parser args are positional", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-12T18:23:13Z", "updated_at": "2015-09-12T18:23:14Z", "closed_at": "2015-09-12T18:23:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\nrrs@champaran:~/apt-offline  (master)$ ./apt-offline get /tmp/update.uris --\nusage: apt-offline get [-h] [--socket-timeout 30] [-d apt-downloads] [-s .]\n                       [--no-check] [-t 1] [--bundle apt-offline-bundle.zip]\n                       [--bug-reports]\n                       apt-offline.sig\napt-offline get: error: unrecognized arguments: --verbose\nrrs@champaran:~/apt-offline  (master)$ ./apt-offline --verbose get\n/tmp/update.uris --threads 5 --bundle /tmp/update.zip\nrrs@champaran:~/apt-offline  (master)$ ./apt-offline -h\nusage: apt-offline [-h] [-v] [--verbose] [--test-windows]\n                   {gui,set,install,get} ...\n\nOffline APT Package Manager\n\npositional arguments:\n  {gui,set,install,get}\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  --verbose             Enable verbose messages\n  --test-windows        This switch is used while doing testing on windows.\n\n(C) 2005 - 2009 Ritesh Raj Sarraf - This program comes with ABSOLUTELY\nNO\nWARRANTY. This is free software, and you are welcome to redistribute it\nunder\nthe GNU GPL License\n\n\nWhat is the expected output? What do you see instead?\nI would want to see main parsers args/options to be allowed to be placed\nafter the sub-parser args/options also.\nIn the above example, --verbose is a global option. argparse restricts me to\nspecify the option as the first argument to the main command. It would be\nbetter if it allowed me to specify it anywhere.\n\nWhat version of the product are you using? On what operating system?\n1.0\nLinux\n```\n\nOriginal issue reported on code.google.com by `riteshra...@gmail.com` on 2 Sep 2009 at 5:30\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/24", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/24/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/24/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/24", "id": 106177148, "node_id": "MDU6SXNzdWUxMDYxNzcxNDg=", "number": 24, "title": "improve exception message for nargs=0", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-09-12T18:23:11Z", "updated_at": "2015-09-12T18:23:13Z", "closed_at": "2015-09-12T18:23:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nBelow is the help output for my python script:\n\nC:\\IT\\work\\distro_test>distribute_radix.py -h\nusage: distribute_radix.py [-h] [-s SKIP_TAG_GAMES]\n                           username password version\n\nThis script is designed to eliminate most of the hand work involved in\nreleasing a new version of the Radix SDK. It will perform all of the\ncheckouts, builds, installs, and other steps necessary to successfully \nrelease\na new version of Radix.\n\npositional arguments:\n  username              The username that will be used to log into the RGS\n                        Subversion and CVS repositories. This is normally \nin\n                        the form of \"corporate/myname\".\n  password              Your password. This will be used to log into\n                        Subversion and any other services. This password\n                        should be the same for most services.\n  version               The version number for this release. It must be in \nthe\n                        form \"1.2.3.4\".\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SKIP_TAG_GAMES, --skip-tag-games SKIP_TAG_GAMES\n                        Specifying this option will prevent games from \nbeing\n                        tagged in CVS. This process takes an exceptionally\n                        long time to complete, which is why an option to \nskip\n                        it has been provided.\n\nNotice the -s, --skip-tag-games options. It has 'SKIP_TAG-GAMES' after it. \nI want to be able to specify nargs=0 for this, but argparse won't let me. \nIt says nargs must be >0. This is simply a \"flag\", and takes no arguments. \nI also do not want 'SKIP_TAG_GAMES' to show up in the help text.\n\nPlease fix this!\n```\n\nOriginal issue reported on code.google.com by `rcdai...@gmail.com` on 18 Aug 2009 at 6:56\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/23", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/23/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/23/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/23", "id": 106177147, "node_id": "MDU6SXNzdWUxMDYxNzcxNDc=", "number": 23, "title": "Feature Request: Positional Argument Aliases", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-09-12T18:23:10Z", "updated_at": "2015-09-12T18:23:11Z", "closed_at": "2015-09-12T18:23:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nFeature Request:\n\nSuppose I create a positional argument called \"build\"\n\nparser = argparse.ArgumentParser()\nsubparsers = parser.add_subparsers()\np_build = subparsers.add_parser(\"build\",help=\"the build function\")\n\nAnd then I add a bunch of arguments to that subparser. I would also\nlike a few aliases to this same command. \"b\" and \"compile\" should do\nthe same thing that \"build\" does. Is there an easy way to tell\nargparse that desire without having to define a whole new subparser\nfor the aliases?\n\nIdeally the add_parser would have an optional argument called aliases\nthat was a sequence of alternate names for the command. These wouldn't\nhave to show up in the help, the users would just need to know about\nthem themselves. \n```\n\nOriginal issue reported on code.google.com by `tellarite` on 18 Aug 2009 at 12:54\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/22", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/22/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/22/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/22", "id": 106177144, "node_id": "MDU6SXNzdWUxMDYxNzcxNDQ=", "number": 22, "title": "Unable to configure -v|--version flags when version given to ArgumentParser", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-12T18:23:09Z", "updated_at": "2015-09-12T18:23:10Z", "closed_at": "2015-09-12T18:23:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. `parser = argparse.ArgumentParser(version='foo 0.1')`\n2. `parser.add_argument(\"-v\",\"--verbose\", ...)`\n3. Get argparse.ArgumentError\n\nargparse allows for a lot of flexibility.  Using argparse for mapping '-V'\nto version and '-v' to verbose means you cannot use the version keyword of\nargparse.ArgumentParser.  Consider adding flexibility for configuring\nargparse generated version flags, instead of hard-coding these.\n\nA lot of command-line programs use '-V' for version and '-v' for verbose,\nincluding `python` itself.\n```\n\nOriginal issue reported on code.google.com by `ron.dupl...@gmail.com` on 17 Aug 2009 at 5:59\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/21", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/21/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/21/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/21", "id": 106177142, "node_id": "MDU6SXNzdWUxMDYxNzcxNDI=", "number": 21, "title": "Use \"callable\" builtin instead of hasattr(type_func, '__call__')", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2015-09-12T18:23:08Z", "updated_at": "2015-09-12T18:23:09Z", "closed_at": "2015-09-12T18:23:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIf you use the python builtin \"callable\" instead of \"hasattr(type_func, \n'__call__')\", then classes can be used as argument types.\n```\n\nOriginal issue reported on code.google.com by `merpatte...@gmail.com` on 8 Aug 2009 at 8:34\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/19", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/19/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/19/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/19", "id": 106177139, "node_id": "MDU6SXNzdWUxMDYxNzcxMzk=", "number": 19, "title": "Bug when parsing long optionals with spaces in the value", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:07Z", "updated_at": "2015-09-12T18:23:07Z", "closed_at": "2015-09-12T18:23:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\nRun this script against the head of svn:\n\n  import argparse\n  parser = argparse.ArgumentParser()\n  parser.add_argument('--foo')\n  print parser.parse_args(['--foo=bar baz'])\n\nWhat is the expected output? What do you see instead?\nExpected output:\nNamespace(foo='bar baz')\n\nActual output:\nusage: test.py [-h] [--foo FOO]\ntest.py: error: unrecognized arguments: --foo=bar baz\n\nWhat version of the product are you using? On what operating system?\nThis happens on the head of svn.  Not sure when it was introduced.\n\nPlease provide any additional information below.\nI've attached a patch that I think fixes it.  Thanks.\n```\n\nOriginal issue reported on code.google.com by `zhir...@gmail.com` on 17 Jul 2009 at 8:28\n\nAttachments:\n- [argparse-spaces-in-long-optionals.diff](https://storage.googleapis.com/google-code-attachments/argparse/issue-19/comment-0/argparse-spaces-in-long-optionals.diff)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/20", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/20/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/20/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/20", "id": 106177141, "node_id": "MDU6SXNzdWUxMDYxNzcxNDE=", "number": 20, "title": "optionals with nargs='+' can't be followed by positionals", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2015-09-12T18:23:07Z", "updated_at": "2015-09-12T18:23:08Z", "closed_at": "2015-09-12T18:23:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n\n>>> import argparse\n>>> parser = argparse.ArgumentParser(prog='PROG')\n>>> parser.add_argument('--badger', nargs='+')\n>>> parser.add_argument('spam')\n>>> parser.parse_args('--badger A B C D'.split())\n\nWhat is the expected output?\n\n>>> parser.parse_args('--badger A B C D'.split())\nNamespace(badger=['A', 'B', 'C'], spam='D')\n\nWhat do you see instead?\n\n>>> parser.parse_args('--badger A B C D'.split())\nusage: PROG [-h] [--badger BADGER [BADGER ...]] spam\nPROG: error: too few arguments\n\nPlease use labels and text to provide additional information.\n\nBasically, the nargs='+' causes the optional to consume all the arguments\nfollowing it, even though we should know that we need to save one for the\nfinal positional argument.\n\nA workaround is to specify '--', e.g.:\n\n>>> parser.parse_args('--badger A B C -- D'.split())\nNamespace(badger=['A', 'B', 'C'], spam='D')\n```\n\nOriginal issue reported on code.google.com by `steven.b...@gmail.com` on 26 Jul 2009 at 4:28\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/18", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/18/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/18/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/18", "id": 106177136, "node_id": "MDU6SXNzdWUxMDYxNzcxMzY=", "number": 18, "title": "Allow grouping subparsers together in the help output", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-12T18:23:06Z", "updated_at": "2015-09-12T18:23:07Z", "closed_at": "2015-09-12T18:23:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nFeature request:\n\nThe argparse help output groups subparsers in the same list as positional \narguments:\n\n  usage: test.py [-h] baz {foo,bar} ...\n\n  positional arguments:\n    baz\n    {foo,bar}\n\n  optional arguments:\n    -h, --help  show this help message and exit\n\nThis seems to be because subparsers are added to the same argument group as \npositional arguments.  I've attached a patch that adds the subparsers to \ntheir own argument group if a \"subparsers_group_name\" keyword argument is \npassed to the ArgumentParser constructor.  This makes subparsers show up in \ntheir own group:\n\n  usage: test.py [-h] baz {foo,bar} ...\n\n  positional arguments:\n    baz\n\n  optional arguments:\n    -h, --help  show this help message and exit\n\n  subcommands:\n    {foo,bar}\n\n```\n\nOriginal issue reported on code.google.com by `zhir...@gmail.com` on 13 Jul 2009 at 2:32\n\nAttachments:\n- [argparse-subparsers-name.diff](https://storage.googleapis.com/google-code-attachments/argparse/issue-18/comment-0/argparse-subparsers-name.diff)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/16", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/16/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/16/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/16", "id": 106177134, "node_id": "MDU6SXNzdWUxMDYxNzcxMzQ=", "number": 16, "title": "Support reading arguments from a file", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:05Z", "updated_at": "2015-09-12T18:23:05Z", "closed_at": "2015-09-12T18:23:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nFeature request:\n\nIt would be nice if argparse supported a way to allow users to specify \nadditional command line arguments in a file.  E.g.:\n\n  myscript -p foo @argsfile -f bar\n\nwhere there's a file named \"argsfile\" in the current working directory \nwhich contains additional command line arguments.\n\nI've attached a patch that implements this.  It adds an additional keyword \nargument to the ArgumentParser class, named \"fromfile_prefix_chars\" that \nspecifies characters that prefix the name of a file to read additional \narguments from.  By default this is None, which means never read arguments \nfrom a file, but if you were to set it to '@', then the above example would \nwork.\n\nI've added a test and modified the docs.  I've also verified that the tests \npass on Linux and Windows, with Python 2.4, 2.5, and 2.6.  Thanks for \nconsidering this.\n```\n\nOriginal issue reported on code.google.com by `zhir...@gmail.com` on 11 Jul 2009 at 4:58\n\nAttachments:\n- [argparse-fromfile-args.diff](https://storage.googleapis.com/google-code-attachments/argparse/issue-16/comment-0/argparse-fromfile-args.diff)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/17", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/17/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/17/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/17", "id": 106177135, "node_id": "MDU6SXNzdWUxMDYxNzcxMzU=", "number": 17, "title": "DeprecationWarnings in the tests for Python 2.6", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-12T18:23:05Z", "updated_at": "2015-09-12T18:23:06Z", "closed_at": "2015-09-12T18:23:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. Run the unit tests with Python 2.6.\n\nWhat is the expected output? What do you see instead?\nI expect to see no DeprecationWarnings, instead three DeprecationWarnings are \nprinted.\n\nWhat version of the product are you using? On what operating system?\nI'm using r23, on Linux, with Python 2.6.2.\n\nPlease provide any additional information below.\nI've attached a patch that removes the DeprecationWarnings.  Thanks!\n```\n\nOriginal issue reported on code.google.com by `zhir...@gmail.com` on 11 Jul 2009 at 5:03\n\nAttachments:\n- [argparse-depwarn.diff](https://storage.googleapis.com/google-code-attachments/argparse/issue-17/comment-0/argparse-depwarn.diff)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/15", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/15/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/15/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/15", "id": 106177133, "node_id": "MDU6SXNzdWUxMDYxNzcxMzM=", "number": 15, "title": "single file documentation", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582631, "node_id": "MDU6TGFiZWwyNTk1ODI2MzE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Low", "name": "Priority-Low", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-12T18:23:04Z", "updated_at": "2015-09-12T18:23:05Z", "closed_at": "2015-09-12T18:23:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nI wonder if the whole documentation could be compiled in a single file\n(HTML or PDF). For printing purposes, handling a single file is easier than\na dozen of html files. \n\nI have to admit, in this point, the documentation is excellent. Very clear,\nwith many examples, very well organized... \n\n\n```\n\nOriginal issue reported on code.google.com by `jcaballe...@gmail.com` on 11 Jun 2009 at 6:39\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/13", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/13/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/13/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/13", "id": 106177131, "node_id": "MDU6SXNzdWUxMDYxNzcxMzE=", "number": 13, "title": "Bug in mutually exclusive groups", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:03Z", "updated_at": "2015-09-12T18:23:03Z", "closed_at": "2015-09-12T18:23:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. Use python 2.4  On a linux box when I start python I get \nPython 2.4.3 (#1, Jan 21 2009, 01:10:13)\n[GCC 4.1.2 20071124 (Red Hat 4.1.2-42)] on linux2\n\n2. Here is a mimimal sample program\n\n##### Program Start\nimport sys\nimport argparse\nparser=argparse.ArgumentParser(prog='prog')\ngroup=parser.add_mutually_exclusive_group(required=True)\nll=['-a', '-b', '-c', '-d', '-e', '-f', '-g', '-i', '-j', '-k', '-l', '-m',\n'-n', '-o', '-p', '-q', '-r', '-s']\nfor l in ll[:int(sys.argv[1])]:\n    group.add_argument(l)\nparser.print_help()\n##### Program end\n\n3. Execute \"python aa.py 9\" (assuming that the above program is in aa.py\nand argparse is installed appropriately)\n\nWhat is the expected output? What do you see instead?\nWhen I execute \"python aa.py 8\"  I get:\nusage: prog [-h] (-a A | -b B | -c C | -d D | -e E | -f F | -g G | -i I)\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -a A\n  -b B\n  -c C\n  -d D\n  -e E\n  -f F\n  -g G\n  -i I\n\nThis is exactly as expected.  When I execute \"python aa.py 9\" I get\nTraceback (most recent call last):\n  File \"ta.py\", line 16, in ?\n    parser.print_help()\n  File \"/root/trunk/remus/tools/vmrctl/argparse.py\", line 2030, in print_help\n    self._print_message(self.format_help(), file)\n  File \"/root/trunk/remus/tools/vmrctl/argparse.py\", line 2013, in format_help\n    return formatter.format_help()\n  File \"/root/trunk/remus/tools/vmrctl/argparse.py\", line 262, in format_help\n    help = self._root_section.format_help() % dict(prog=self._prog)\n  File \"/root/trunk/remus/tools/vmrctl/argparse.py\", line 192, in format_help\n    func(*args)\n  File \"/root/trunk/remus/tools/vmrctl/argparse.py\", line 308, in _format_usage\n    positional_usage = format(positionals, groups)\n  File \"/root/trunk/remus/tools/vmrctl/argparse.py\", line 341, in\n_format_actions_usage\n    start = actions.index(group._group_actions[0])\nValueError: list.index(x): x not in list\n\n\nThis is certainly incorrect.\n\n\n\nWhat version of the product are you using? On what operating system?\nThis is with version 0.9.1 of argparse, python 2.4.3, on CentOS 5.3\n\nPlease provide any additional information below.\nThe same program run on a mac (os 10.5 with python 2.5 and argparse 0.9.1)\ndoes not have this problem.\n\nI built and installed python 2.6 on centOS 5.3 and had the problem shown above \n\n```\n\nOriginal issue reported on code.google.com by `tow...@towell4.us` on 22 May 2009 at 1:32\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/14", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/14/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/14/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/14", "id": 106177132, "node_id": "MDU6SXNzdWUxMDYxNzcxMzI=", "number": 14, "title": "exceptions as arguments", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-12T18:23:03Z", "updated_at": "2015-09-12T18:23:04Z", "closed_at": "2015-09-12T18:23:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nHi,\n\nI have just discovered argparse, and I have to admit it is quite\nimpressive. I love it. Good job.\n\nI have a proposal for your consideration. Traditionally I raise my own\nexceptions when command line options are not as expected (mandatory options\nnot provided, or incorrect type or value, etc.) After checking these things\n\"by hand\", I raise my own exceptions, including internal info like the\nerror code and message users are used to see. \n\nI was wondering if add_argument() method could include, as optional\narguments, the exceptions to be raised when the several checks fail,\nsetting as default the ones you are already using. \n\n\n\nThank you very in advance. \nRegards,\nJose\n```\n\nOriginal issue reported on code.google.com by `jcaballe...@gmail.com` on 3 Jun 2009 at 3:48\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/11", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/11/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/11/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/11", "id": 106177129, "node_id": "MDU6SXNzdWUxMDYxNzcxMjk=", "number": 11, "title": "Error generating help with add_mutually_exclusive_group", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-09-12T18:23:02Z", "updated_at": "2015-09-12T18:23:02Z", "closed_at": "2015-09-12T18:23:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. run foo.py -h\n\n\nWhat is the expected output? What do you see instead?\nExpected is successful help text generation, but an exception is raised.\n\nHere's the dump from python\n\n  args = p.parse_args()\n  File \"build/bdist.linux-x86_64/egg/argparse.py\", line 1514, in parse_args\n  File \"build/bdist.linux-x86_64/egg/argparse.py\", line 1711, in _parse_args\n  File \"build/bdist.linux-x86_64/egg/argparse.py\", line 1651, in\nconsume_optional\n  File \"build/bdist.linux-x86_64/egg/argparse.py\", line 1580, in take_action\n  File \"build/bdist.linux-x86_64/egg/argparse.py\", line 879, in __call__\n  File \"build/bdist.linux-x86_64/egg/argparse.py\", line 2038, in print_help\n  File \"build/bdist.linux-x86_64/egg/argparse.py\", line 2021, in format_help\n  File \"build/bdist.linux-x86_64/egg/argparse.py\", line 262, in format_help\n  File \"build/bdist.linux-x86_64/egg/argparse.py\", line 192, in format_help\n  File \"build/bdist.linux-x86_64/egg/argparse.py\", line 308, in _format_usage\n  File \"build/bdist.linux-x86_64/egg/argparse.py\", line 341, in\n_format_actions_usage\nValueError: list.index(x): x not in list\n\n\nWhat version of the product are you using? On what operating system?\nargparse 0.9.1  on ubuntu linux 64bit python2.5\n\nPlease provide any additional information below.\n\nIf you use .add_argument_group instead of .add_mutually_exclusive_group\nthe help is generated ok.\n\nIf you remove any of the add_argument calls, or even remove a single\ncharacter from any of the long flags (i.e. '--abc' -> '--ab'), the help is\ngenerated ok.\n```\n\nOriginal issue reported on code.google.com by `randa...@gmail.com` on 30 Apr 2009 at 2:51\n\nAttachments:\n- [foo.py](https://storage.googleapis.com/google-code-attachments/argparse/issue-11/comment-0/foo.py)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/12", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/12/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/12/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/12", "id": 106177130, "node_id": "MDU6SXNzdWUxMDYxNzcxMzA=", "number": 12, "title": "Adjustments for Python 2.3?", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:02Z", "updated_at": "2015-09-12T18:23:03Z", "closed_at": "2015-09-12T18:23:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nArgparse is great, but I'm wondering if you would be willing to accept\nadjustments necessary to make argparse work on Python 2.3. If so, I can\nprovide the patch (since I'm using it successfully after some minor\nchanges). Redhat 4, which doesn't reach end-of-life until 2012 has Python\n2.3 as its default Python.\n\nWhat steps will reproduce the problem?\n1. Run an argparse program on Python 2.3.\n\nWhat is the expected output? What do you see instead?\nThat argparse would work. Instead, list comprehensions and the use of\nsorted() cause errors. \n\nWhat version of the product are you using? On what operating system?\n0.9.1 on Redhat/Scientific Linux 4.6\n\nPlease provide any additional information below.\nYou may contact me at jhoverZEBRA@bnlLION.gov (remove animals). \n\n\n```\n\nOriginal issue reported on code.google.com by `johnrho...@gmail.com` on 1 May 2009 at 3:51\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/9", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/9/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/9/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/9", "id": 106177126, "node_id": "MDU6SXNzdWUxMDYxNzcxMjY=", "number": 9, "title": "Suggestion for a single API function to reduce the amount of typing needed.", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-12T18:23:01Z", "updated_at": "2015-09-12T18:23:01Z", "closed_at": "2015-09-12T18:23:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nArgparse looks promising, but it suffers from the same annoyance that\noptparse and others do:  too much typing.  For 90% of the cases when\ncommand line arguments are needed, something like this would work:\n\nhttp://dpaste.com/31071/\n\nThe gist is it's easier to have a simple builder method that just takes a\ndata array for all arguments, rather than forcing a API user to\nrepetitively call add_argument on parser for each.  All the existing\nmethods could stay for the advanced usage, and then this could be an\nalternative.\n\n```\n\nOriginal issue reported on code.google.com by `zed.s...@gmail.com` on 10 Apr 2009 at 4:41\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/10", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/10/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/10/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/10", "id": 106177128, "node_id": "MDU6SXNzdWUxMDYxNzcxMjg=", "number": 10, "title": "Problems with quoted argument strings", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:01Z", "updated_at": "2015-09-12T18:23:02Z", "closed_at": "2015-09-12T18:23:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. Add and option that expects one string argument. (foo --bar baz)\n2. For baz, use either an empty string, or a quoted string beginning with\ndash: (foo --bar '') (foo --bar '-r is an option string')\n\nWhat is the expected output? What do you see instead?\nI expect it to be parse.  I get a stack trace instead.\n\n\nWhat version of the product are you using? On what operating system?\n0.9.0 on OSX\n\n\nPlease provide any additional information below.\nThe test runners don't seem to have a way to simulate quoted strings.\n\n```\n\nOriginal issue reported on code.google.com by `ledougla...@gmail.com` on 15 Apr 2009 at 10:54\n\nAttachments:\n- [zero_length_args.diff](https://storage.googleapis.com/google-code-attachments/argparse/issue-10/comment-0/zero_length_args.diff)\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/7", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/7/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/7/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/7", "id": 106177124, "node_id": "MDU6SXNzdWUxMDYxNzcxMjQ=", "number": 7, "title": "Allow a callable for the 'choices' keyword", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:23:00Z", "updated_at": "2015-09-12T18:23:00Z", "closed_at": "2015-09-12T18:23:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n[Originally reported by dangets@gmail.com to the python-hosting.org tracker]\n\nRight now according to your documentation on here, I see that 'choices'\nneeds to be a sequence. I could see benefits on maybe changing this to be a\n'validator' argument. That way you could create your own callables that\nwould return True or False if the choice was valid.\n\nFor example, say I wanted a float and I knew the min and max that the\nchoice had to be in between. Offhand I can't think of an easy way to make\nthis into a sequence that *might* have the float the user chose.\n\nSo if the 'validator' is a sequence type, you could still 'if choice in\nvalidator', but just add 'elif callable, if validator(choice)'\n\n```\n\nOriginal issue reported on code.google.com by `steven.b...@gmail.com` on 28 Mar 2009 at 2:24\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/8", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/8/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/8/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/8", "id": 106177125, "node_id": "MDU6SXNzdWUxMDYxNzcxMjU=", "number": 8, "title": "windows installer needs admin signaling", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-09-12T18:23:00Z", "updated_at": "2015-09-12T18:23:00Z", "closed_at": "2015-09-12T18:23:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nWhat steps will reproduce the problem?\n1. Run installer on Vista.\n2. Get to step prior to copy.\n\nWhat is the expected output? What do you see instead?\nExpected files to copy.  Installer crashes.\n\n\nWhat version of the product are you using? On what operating system?\nVista SP1.\n\nPlease provide any additional information below.\nInstaller works when specifically run as administrator.  Most python \npackage installers on windows somehow signal the administrator privilege \nrequirement so it does not run and crash without privilege elevation.\n```\n\nOriginal issue reported on code.google.com by `stephen....@gmail.com` on 8 Apr 2009 at 12:50\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/5", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/5/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/5/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/5", "id": 106177122, "node_id": "MDU6SXNzdWUxMDYxNzcxMjI=", "number": 5, "title": "Provide a way to have default= values parsed from strings", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:22:59Z", "updated_at": "2015-09-12T18:22:59Z", "closed_at": "2015-09-12T18:22:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nSometimes it would be nice to be able to supply defaults as strings, and\nhave the ArgumentParser parse them. For example, if you had a matrix type,\nthat converted \"zero\" to, say, ``[[0, 0, 0], [0, 0, 0], [0, 0, 0]]``, then\nyou might want your default value to still be \"zero\" for the purposes of\nhelp, so you'd like to write::\n\n  parser.add_argument(..., default=\"zero\", ...)\n\nRight now, defaults are not parsed, so this would fail. It would be nice if\nyou could supply, say, ``parse_defaults=True`` to the ArgumentParser\nconstructor to make this work.\n\n```\n\nOriginal issue reported on code.google.com by `steven.b...@gmail.com` on 28 Mar 2009 at 2:12\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/6", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/6/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/6/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/6", "id": 106177123, "node_id": "MDU6SXNzdWUxMDYxNzcxMjM=", "number": 6, "title": "allow arguments to optionals to have different names", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-12T18:22:59Z", "updated_at": "2015-09-12T18:23:00Z", "closed_at": "2015-09-12T18:22:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nCurrently, no matter how many arguments an optional takes, they're all\nnamed the same::\n\n  >>> parser = argparse.ArgumentParser(prog='PROG', add_help=False)\n  >>> parser.add_argument('-c', nargs=2, metavar='X')\n  >>> parser.print_help()\n  usage: PROG [-c X X]\n\n  optional arguments:\n    -c X X\n\nIt would be nice to have multiple names sometimes (e.g. \"X Y\" instead of \"X\nX\" above).\n\nPerhaps this could be achieved by allowing metavar to be a sequence as well\nas a string. I'm a little nervous though about the typecheck necessary to\ndistinguish between strings and other sequences, and the fact that you'd\nneed to check that the length of the sequence and the nargs value matched.\n```\n\nOriginal issue reported on code.google.com by `steven.b...@gmail.com` on 28 Mar 2009 at 2:17\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/3", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/3/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/3/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/3", "id": 106177120, "node_id": "MDU6SXNzdWUxMDYxNzcxMjA=", "number": 3, "title": "API for collecting unrecognized options", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582631, "node_id": "MDU6TGFiZWwyNTk1ODI2MzE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Low", "name": "Priority-Low", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-12T18:22:58Z", "updated_at": "2015-09-12T18:22:58Z", "closed_at": "2015-09-12T18:22:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\nIt would be nice to be able to specify somehow that unrecognized options\nshould be collected somewhere instead of raising exceptions. The current\nbehavior::\n\n  >>> parser = argparse.ArgumentParser(prog='PROG')\n  >>> parser.add_argument('--foo')\n  >>> parser.parse_args('--foo F --bar --baz'.split())\n  usage: PROG [-h] [--foo FOO]\n  PROG: error: no such option: --bar\n\nBut sometimes you might prefer to have::\n\n  >>> parser = argparse.ArgumentParser(prog='PROG')\n  >>> parser.add_argument('--foo')\n  >>> parser.parse_known_args('--foo F --bar --baz'.split())\n  Namespace(foo='F'), ['--bar', '--baz']\n\n```\n\nOriginal issue reported on code.google.com by `steven.b...@gmail.com` on 28 Mar 2009 at 2:03\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/4", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/4/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/4/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/4", "id": 106177121, "node_id": "MDU6SXNzdWUxMDYxNzcxMjE=", "number": 4, "title": "Show defaults in --help", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582631, "node_id": "MDU6TGFiZWwyNTk1ODI2MzE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Low", "name": "Priority-Low", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-09-12T18:22:58Z", "updated_at": "2015-09-12T18:22:59Z", "closed_at": "2015-09-12T18:22:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n[Originally reported by yanghatespam@gmail.com to the python-hosting.org\ntracker]\n\nIt would be great if --help would also show the default values for options\n(where applicable), or at least if this feature were exposed as an option\nin argparse. \n```\n\nOriginal issue reported on code.google.com by `steven.b...@gmail.com` on 28 Mar 2009 at 2:08\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/2", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/2/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/2/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/2", "id": 106177119, "node_id": "MDU6SXNzdWUxMDYxNzcxMTk=", "number": 2, "title": "Enhanced boolean type and configure-style options", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582629, "node_id": "MDU6TGFiZWwyNTk1ODI2Mjk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-Medium", "name": "Priority-Medium", "color": "ededed", "default": false, "description": null}, {"id": 259582630, "node_id": "MDU6TGFiZWwyNTk1ODI2MzA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Enhancement", "name": "Type-Enhancement", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2015-09-12T18:22:56Z", "updated_at": "2015-09-12T18:22:57Z", "closed_at": "2015-09-12T18:22:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n[Originally submitted by ndbecker2@gmail.com to the python-hosting.org tracker]\n\n2 things I'd like to see:\n\n * `--option=True/False/1/0` to set the value of a boolean option\n * automatically add `--no-option` to set the value to false\n```\n\nOriginal issue reported on code.google.com by `steven.b...@gmail.com` on 27 Mar 2009 at 5:06\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/1", "repository_url": "https://api.github.com/repos/ThomasWaldmann/argparse", "labels_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/1/comments", "events_url": "https://api.github.com/repos/ThomasWaldmann/argparse/issues/1/events", "html_url": "https://github.com/ThomasWaldmann/argparse/issues/1", "id": 106177118, "node_id": "MDU6SXNzdWUxMDYxNzcxMTg=", "number": 1, "title": "Using default values with the append action", "user": {"login": "GoogleCodeExporter", "id": 9614759, "node_id": "MDQ6VXNlcjk2MTQ3NTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/9614759?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GoogleCodeExporter", "html_url": "https://github.com/GoogleCodeExporter", "followers_url": "https://api.github.com/users/GoogleCodeExporter/followers", "following_url": "https://api.github.com/users/GoogleCodeExporter/following{/other_user}", "gists_url": "https://api.github.com/users/GoogleCodeExporter/gists{/gist_id}", "starred_url": "https://api.github.com/users/GoogleCodeExporter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GoogleCodeExporter/subscriptions", "organizations_url": "https://api.github.com/users/GoogleCodeExporter/orgs", "repos_url": "https://api.github.com/users/GoogleCodeExporter/repos", "events_url": "https://api.github.com/users/GoogleCodeExporter/events{/privacy}", "received_events_url": "https://api.github.com/users/GoogleCodeExporter/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 259582619, "node_id": "MDU6TGFiZWwyNTk1ODI2MTk=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Priority-High", "name": "Priority-High", "color": "ededed", "default": false, "description": null}, {"id": 259582620, "node_id": "MDU6TGFiZWwyNTk1ODI2MjA=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/Type-Defect", "name": "Type-Defect", "color": "ededed", "default": false, "description": null}, {"id": 259582621, "node_id": "MDU6TGFiZWwyNTk1ODI2MjE=", "url": "https://api.github.com/repos/ThomasWaldmann/argparse/labels/auto-migrated", "name": "auto-migrated", "color": "ededed", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-09-12T18:22:55Z", "updated_at": "2015-09-12T18:22:56Z", "closed_at": "2015-09-12T18:22:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\n[Originally submitted by risto.kankkunen@iki.fi to python-hosting.org tracker]\n\nThe default behavior for options with append action is not very convenient:\n\n>>> import argparse\n>>> parser = argparse.ArgumentParser()\n>>> parser.add_argument(\"--foo\", action='append')\n>>> parser.parse_args(('--foo=1', '--foo=2'))\nNamespace(foo=['1', '2'])\n>>> parser.parse_args(())\nNamespace(foo=None)\n\nYou would expect to get zero or more items in a list for options having an\nappend action. Now you get either None or one or more items in a list.\n\nGiving a default value to fix this doesn't work:\n\n>>> import argparse\n>>> parser = argparse.ArgumentParser()\n>>> parser.add_argument(\"--foo\", action='append', default=[])\n>>> parser.parse_args(())\nNamespace(foo=[])\n>>> parser.parse_args(('--foo=1', '--foo=2'))\nNamespace(foo=['1', '2'])\n>>> parser.parse_args(())\nNamespace(foo=['1', '2'])\n>>> parser.parse_args(('--foo=1', '--foo=2'))\nNamespace(foo=['1', '2', '1', '2'])\n\nThis also applies if you want to have any other default value: if the\ndefault is mutable, the default gets mutated. If the default is immutable,\nyou get an exception.\n\n\n```\n\nOriginal issue reported on code.google.com by `steven.b...@gmail.com` on 27 Mar 2009 at 4:59\n", "performed_via_github_app": null, "score": 1.0}]}