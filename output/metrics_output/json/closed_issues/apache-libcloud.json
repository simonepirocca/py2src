{"total_count": 50, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/apache/libcloud/issues/1473", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1473/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1473/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1473/events", "html_url": "https://github.com/apache/libcloud/issues/1473", "id": 658182364, "node_id": "MDU6SXNzdWU2NTgxODIzNjQ=", "number": 1473, "title": "Get a single network by ID for OpenStack", "user": {"login": "SanderRoosingh", "id": 48477049, "node_id": "MDQ6VXNlcjQ4NDc3MDQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/48477049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SanderRoosingh", "html_url": "https://github.com/SanderRoosingh", "followers_url": "https://api.github.com/users/SanderRoosingh/followers", "following_url": "https://api.github.com/users/SanderRoosingh/following{/other_user}", "gists_url": "https://api.github.com/users/SanderRoosingh/gists{/gist_id}", "starred_url": "https://api.github.com/users/SanderRoosingh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SanderRoosingh/subscriptions", "organizations_url": "https://api.github.com/users/SanderRoosingh/orgs", "repos_url": "https://api.github.com/users/SanderRoosingh/repos", "events_url": "https://api.github.com/users/SanderRoosingh/events{/privacy}", "received_events_url": "https://api.github.com/users/SanderRoosingh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-16T13:08:21Z", "updated_at": "2020-07-16T21:42:36Z", "closed_at": "2020-07-16T21:42:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Feature Request\r\n\r\nCurrently to retrieve a network from the OpenStack all networks need to be received. Then these can be filtered by ID. If the ID of the network is known it is not needed to retrieve all networks from the OpenStack.\r\n\r\nBy creating a function called `ex_get_network` and passing an ID we could retrieve a single network, this would increase performance for some systems. This function would work similar to `ex_get_volume`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1466", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1466/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1466/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1466/events", "html_url": "https://github.com/apache/libcloud/issues/1466", "id": 636869198, "node_id": "MDU6SXNzdWU2MzY4NjkxOTg=", "number": 1466, "title": "OpenStack image v2 api does not handle pagination", "user": {"login": "toabctl", "id": 276317, "node_id": "MDQ6VXNlcjI3NjMxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/276317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toabctl", "html_url": "https://github.com/toabctl", "followers_url": "https://api.github.com/users/toabctl/followers", "following_url": "https://api.github.com/users/toabctl/following{/other_user}", "gists_url": "https://api.github.com/users/toabctl/gists{/gist_id}", "starred_url": "https://api.github.com/users/toabctl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toabctl/subscriptions", "organizations_url": "https://api.github.com/users/toabctl/orgs", "repos_url": "https://api.github.com/users/toabctl/repos", "events_url": "https://api.github.com/users/toabctl/events{/privacy}", "received_events_url": "https://api.github.com/users/toabctl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-11T09:33:58Z", "updated_at": "2020-06-17T14:53:20Z", "closed_at": "2020-06-17T14:53:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhen listing images with `list_images()` on OpenStack, not all images are listed.\r\n\r\n## Detailed Information\r\n\r\nThe OpenStack image service (Glance) v2 api does have a pagination mechanism. So when iterating over all images, the user needs to look for a `next` link. See https://docs.openstack.org/api-ref/image/v2/#list-images\r\n\r\nBut this next link is not handled in the current OpenStack driver. This happens with apache-libcloud 3.0.0 from pypi.\r\n\r\nThe relavant code is here: https://libcloud.readthedocs.io/en/stable/_modules/libcloud/compute/drivers/openstack.html#OpenStack_2_NodeDriver.list_images", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1463", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1463/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1463/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1463/events", "html_url": "https://github.com/apache/libcloud/issues/1463", "id": 628001799, "node_id": "MDU6SXNzdWU2MjgwMDE3OTk=", "number": 1463, "title": "DNSProviders cannot handle Certification Authority Authorization (CAA) records", "user": {"login": "doddo", "id": 3948644, "node_id": "MDQ6VXNlcjM5NDg2NDQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/3948644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doddo", "html_url": "https://github.com/doddo", "followers_url": "https://api.github.com/users/doddo/followers", "following_url": "https://api.github.com/users/doddo/following{/other_user}", "gists_url": "https://api.github.com/users/doddo/gists{/gist_id}", "starred_url": "https://api.github.com/users/doddo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doddo/subscriptions", "organizations_url": "https://api.github.com/users/doddo/orgs", "repos_url": "https://api.github.com/users/doddo/repos", "events_url": "https://api.github.com/users/doddo/events{/privacy}", "received_events_url": "https://api.github.com/users/doddo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417971536, "node_id": "MDU6TGFiZWwxNDE3OTcxNTM2", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20dns", "name": "api: dns", "color": "a062bc", "default": false, "description": ""}, {"id": 1459174092, "node_id": "MDU6TGFiZWwxNDU5MTc0MDky", "url": "https://api.github.com/repos/apache/libcloud/labels/feature%20request", "name": "feature request", "color": "bf1162", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-31T16:58:34Z", "updated_at": "2020-06-06T20:48:43Z", "closed_at": "2020-06-06T20:48:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nLibcloud DNSProviders cannot handle Certification Authority Authorization (CAA) records\r\n\r\n## Detailed Information\r\n\r\nFirst I manage a dns zone with CAA records in it.\r\n\r\nReproducer:\r\n\r\n```python\r\n #!/usr/bin/env python\r\n\r\nfrom libcloud.dns.providers import get_driver as get_dns_driver\r\nfrom libcloud.dns.types import Provider as DNSProvider\r\n\r\nimport os\r\n\r\ncls = get_dns_driver(DNSProvider.GANDI_LIVE)\r\ndriver = cls(os.getenv('TOKEN'))\r\n\r\nfor zone in driver.list_zones():\r\n  for record in zone.list_records():\r\n    print(record)\r\n```\r\nProduces this issue:\r\n\r\n```\r\n./caa.py  \r\nTraceback (most recent call last):\r\n  File \"./caa.py\", line 12, in <module>\r\n    for record in zone.list_records():\r\n  File \"/home/petter/caa/venv/lib/python3.8/site-packages/libcloud/dns/base.py\", line 81, in list_records\r\n    return self.driver.list_records(zone=self)\r\n  File \"/home/petter/caa/venv/lib/python3.8/site-packages/libcloud/dns/drivers/gandi_live.py\", line 136, in list_records\r\n    return self._to_records(records.object, zone)\r\n  File \"/home/petter/caa/venv/lib/python3.8/site-packages/libcloud/dns/drivers/gandi_live.py\", line 434, in _to_records\r\n    records += self._to_record(r, zone)\r\n  File \"/home/petter/caa/venv/lib/python3.8/site-packages/libcloud/dns/drivers/gandi_live.py\", line 388, in _to_record\r\n    record = self._to_record_sub(data, zone, rrset_value)\r\n  File \"/home/petter/caa/venv/lib/python3.8/site-packages/libcloud/dns/drivers/gandi_live.py\", line 424, in _to_record_sub\r\n    type=self._string_to_record_type(data['rrset_type']),\r\n  File \"/home/petter/caa/venv/lib/python3.8/site-packages/libcloud/dns/base.py\", line 584, in _string_to_record_type\r\n    record_type = getattr(RecordType, string)\r\n```\r\n\r\nAnd indeed, CAA record is missing from `RecordType` class. I don't know how much more work it'd be to add support for this one, aside from adding it to the RecordType class. Anyhow creating a bug report seemed to be a prudent first step.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1455", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1455/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1455/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1455/events", "html_url": "https://github.com/apache/libcloud/issues/1455", "id": 611271823, "node_id": "MDU6SXNzdWU2MTEyNzE4MjM=", "number": 1455, "title": "method list_sizes() on driver object does not accept location", "user": {"login": "RobertH1993", "id": 24497297, "node_id": "MDQ6VXNlcjI0NDk3Mjk3", "avatar_url": "https://avatars0.githubusercontent.com/u/24497297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RobertH1993", "html_url": "https://github.com/RobertH1993", "followers_url": "https://api.github.com/users/RobertH1993/followers", "following_url": "https://api.github.com/users/RobertH1993/following{/other_user}", "gists_url": "https://api.github.com/users/RobertH1993/gists{/gist_id}", "starred_url": "https://api.github.com/users/RobertH1993/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RobertH1993/subscriptions", "organizations_url": "https://api.github.com/users/RobertH1993/orgs", "repos_url": "https://api.github.com/users/RobertH1993/repos", "events_url": "https://api.github.com/users/RobertH1993/events{/privacy}", "received_events_url": "https://api.github.com/users/RobertH1993/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-02T20:53:40Z", "updated_at": "2020-05-03T19:22:50Z", "closed_at": "2020-05-03T19:22:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nmethod list_sizes() on driver object does not accept location parameter. The docs states that it should accept a location parameter: https://libcloud.readthedocs.io/en/stable/compute/api.html#libcloud.compute.base.NodeDriver.list_sizes\r\n\r\n## Detailed Information\r\n\r\nTried to get all the sizes through the digitalOcean driver, filtering on a certain location. I pass a NodeLocation object (retrieved from driver with function list_locations()) into list_sizes(). After that i get the error:\r\n\r\nlist_sizes() takes 1 positional argument but 2 were given\r\n\r\nExpected to get a list of sizes available for the given location as stated in the documentation. \r\n\r\n## Fix\r\n\r\nThe api of digitalOcean returns a region key for every returned size, this key holds a list with all regions this size is available. Accept location parameter in list_sizes() and check if the NodeLocation.id is in regions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1447", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1447/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1447/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1447/events", "html_url": "https://github.com/apache/libcloud/issues/1447", "id": 600996992, "node_id": "MDU6SXNzdWU2MDA5OTY5OTI=", "number": 1447, "title": "URGENT: Broken link on download page", "user": {"login": "sebbASF", "id": 16689231, "node_id": "MDQ6VXNlcjE2Njg5MjMx", "avatar_url": "https://avatars3.githubusercontent.com/u/16689231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebbASF", "html_url": "https://github.com/sebbASF", "followers_url": "https://api.github.com/users/sebbASF/followers", "following_url": "https://api.github.com/users/sebbASF/following{/other_user}", "gists_url": "https://api.github.com/users/sebbASF/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebbASF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebbASF/subscriptions", "organizations_url": "https://api.github.com/users/sebbASF/orgs", "repos_url": "https://api.github.com/users/sebbASF/repos", "events_url": "https://api.github.com/users/sebbASF/events{/privacy}", "received_events_url": "https://api.github.com/users/sebbASF/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1526746001, "node_id": "MDU6TGFiZWwxNTI2NzQ2MDAx", "url": "https://api.github.com/repos/apache/libcloud/labels/website", "name": "website", "color": "f138ff", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-16T12:11:53Z", "updated_at": "2020-04-18T19:41:34Z", "closed_at": "2020-04-18T19:41:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "The page\r\nhttps://libcloud.apache.org/downloads.html\r\n\r\ncontains the link:\r\n\r\n&lt;a href=\"https://www.apache.org/dist/libcloud/apache-libcloud-2.8.2.sha256\">sha256</a&gt;\r\n\r\nThis does not work; it should be\r\n\r\n&lt;a href=\"https://www.apache.org/dist/libcloud/apache-libcloud-2.8.2.zip.sha256\">sha256</a&gt;\r\n\r\nPlease fix this urgently", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1441", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1441/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1441/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1441/events", "html_url": "https://github.com/apache/libcloud/issues/1441", "id": 583763094, "node_id": "MDU6SXNzdWU1ODM3NjMwOTQ=", "number": 1441, "title": "GCE create_node() with location=None (default) throws AttributeError", "user": {"login": "kbknapp", "id": 6942134, "node_id": "MDQ6VXNlcjY5NDIxMzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/6942134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kbknapp", "html_url": "https://github.com/kbknapp", "followers_url": "https://api.github.com/users/kbknapp/followers", "following_url": "https://api.github.com/users/kbknapp/following{/other_user}", "gists_url": "https://api.github.com/users/kbknapp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kbknapp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kbknapp/subscriptions", "organizations_url": "https://api.github.com/users/kbknapp/orgs", "repos_url": "https://api.github.com/users/kbknapp/repos", "events_url": "https://api.github.com/users/kbknapp/events{/privacy}", "received_events_url": "https://api.github.com/users/kbknapp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394383433, "node_id": "MDU6TGFiZWwxMzk0MzgzNDMz", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20compute", "name": "api: compute", "color": "ffbac7", "default": false, "description": ""}, {"id": 1433068064, "node_id": "MDU6TGFiZWwxNDMzMDY4MDY0", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20gce", "name": "drivers: gce", "color": "fcbff8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-18T14:20:25Z", "updated_at": "2020-03-19T21:09:12Z", "closed_at": "2020-03-19T21:09:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nRunning with the GCE driver using `create_node(.. , location=None)` (which is a default) throws an `AttributeError`\r\n\r\n## Detailed Information\r\n\r\nOS: Ubuntu 19.10\r\nlibcloud Version: `apache-libcloud==2.8.1`\r\nPython version: `Python 3.7.5`\r\n\r\nCode to reproduce:\r\n\r\n```python\r\ngce = get_driver(Provider.GCE)(\r\n            f'{user}@{project_id}.iam.gserviceaccount.com',\r\n            api_key_file,\r\n            project=project_id)\r\n\r\ngce.create_node(name, size, None,\r\n                             ex_network=network,\r\n                             ex_subnetwork=subnet,\r\n                             ex_tags=tags,\r\n                             ex_metadata=metadata, \r\n                             external_ip='ephemeral',\r\n                             internal_ip=internal_ip,\r\n                             ex_image_family=image,\r\n                             ex_disk_size=disk_sz)\r\n```\r\n\r\nWith exception:\r\n\r\n```\r\nTraceback (most recent call last):\r\n[ .. snip .. ]\r\n  File \"/home/kevin/.local/lib/python3.7/site-packages/proj/gcp/builder.py\", line 181, in create_vm\r\n    ex_disk_size=disk_sz)\r\n  File \"/home/kevin/.local/lib/python3.7/site-packages/libcloud/compute/drivers/gce.py\", line 4169, in create_node\r\n    location = self.ex_get_zone(location)\r\n  File \"/home/kevin/.local/lib/python3.7/site-packages/libcloud/compute/drivers/gce.py\", line 7811, in ex_get_zone\r\n    if name.startswith('https://'):\r\nAttributeError: 'NoneType' object has no attribute 'startswith'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1438", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1438/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1438/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1438/events", "html_url": "https://github.com/apache/libcloud/issues/1438", "id": 577073484, "node_id": "MDU6SXNzdWU1NzcwNzM0ODQ=", "number": 1438, "title": "GoogleStorageDriver does not handle service account HMAC credentials", "user": {"login": "pmezard", "id": 1430779, "node_id": "MDQ6VXNlcjE0MzA3Nzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1430779?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmezard", "html_url": "https://github.com/pmezard", "followers_url": "https://api.github.com/users/pmezard/followers", "following_url": "https://api.github.com/users/pmezard/following{/other_user}", "gists_url": "https://api.github.com/users/pmezard/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmezard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmezard/subscriptions", "organizations_url": "https://api.github.com/users/pmezard/orgs", "repos_url": "https://api.github.com/users/pmezard/repos", "events_url": "https://api.github.com/users/pmezard/events{/privacy}", "received_events_url": "https://api.github.com/users/pmezard/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417963792, "node_id": "MDU6TGFiZWwxNDE3OTYzNzky", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20storage", "name": "api: storage", "color": "6f6be5", "default": false, "description": ""}, {"id": 1810919671, "node_id": "MDU6TGFiZWwxODEwOTE5Njcx", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20google%20storage", "name": "drivers: google storage", "color": "f7afc5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-03-06T17:26:45Z", "updated_at": "2020-03-10T12:44:57Z", "closed_at": "2020-03-10T12:44:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nGoogleStorageDriver may use S3-compatibility layer credentials to connect to GCS. There are at least two ways to generate such credentials:\r\n\r\n- As User Account HMAC keys. This is inconvenient for services configuration because it ties access to the existence of a user account.\r\n- As Service Account HMAC keys. These should be used for long running services.\r\n\r\nUnfortunately, GoogleStorageDriver does not identify the second type correctly. The problematic code is here:\r\n\r\n  https://github.com/apache/libcloud/blob/trunk/libcloud/common/google.py#L615\r\n\r\nIt checks the identifier starts with \"GOOG\" which is true in my case, but my identifier is 61 characters long, way above the 30 characters check.\r\n\r\nCallers may force the driver to identify the credentials as GCS_S3, but it requires some digging in the class hierarchy. You need to:\r\n\r\n- Override `_ex_connection_class_kwargs` to return `{\"auth_type\": \"GCS_S3\"}`, to pass it to connectionCls. But this is not enough.\r\n- Pass `auth_type=\"GCS_S3\"` to GoogleStorageDriver so that jsonConnectionCls is correctly instantiate.\r\n\r\nI find the need for both fix a little weird, I would have expected the first one to be enough, but I do not know libcloud internals to have a relevant opinion.\r\n\r\nI would just drop the max length check.\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1428", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1428/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1428/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1428/events", "html_url": "https://github.com/apache/libcloud/issues/1428", "id": 566448933, "node_id": "MDU6SXNzdWU1NjY0NDg5MzM=", "number": 1428, "title": "Cloudflare export to BIND zone format - missing priority attribute ", "user": {"login": "gh-jamesmontgomery", "id": 24221446, "node_id": "MDQ6VXNlcjI0MjIxNDQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/24221446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gh-jamesmontgomery", "html_url": "https://github.com/gh-jamesmontgomery", "followers_url": "https://api.github.com/users/gh-jamesmontgomery/followers", "following_url": "https://api.github.com/users/gh-jamesmontgomery/following{/other_user}", "gists_url": "https://api.github.com/users/gh-jamesmontgomery/gists{/gist_id}", "starred_url": "https://api.github.com/users/gh-jamesmontgomery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gh-jamesmontgomery/subscriptions", "organizations_url": "https://api.github.com/users/gh-jamesmontgomery/orgs", "repos_url": "https://api.github.com/users/gh-jamesmontgomery/repos", "events_url": "https://api.github.com/users/gh-jamesmontgomery/events{/privacy}", "received_events_url": "https://api.github.com/users/gh-jamesmontgomery/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417971536, "node_id": "MDU6TGFiZWwxNDE3OTcxNTM2", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20dns", "name": "api: dns", "color": "a062bc", "default": false, "description": ""}, {"id": 1489167948, "node_id": "MDU6TGFiZWwxNDg5MTY3OTQ4", "url": "https://api.github.com/repos/apache/libcloud/labels/issue:%20bug", "name": "issue: bug", "color": "ed9e87", "default": false, "description": ""}, {"id": 1851650930, "node_id": "MDU6TGFiZWwxODUxNjUwOTMw", "url": "https://api.github.com/repos/apache/libcloud/labels/potential%202.8.x%20candidate", "name": "potential 2.8.x candidate", "color": "5448d6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-17T18:00:43Z", "updated_at": "2020-02-17T21:36:54Z", "closed_at": "2020-02-17T21:36:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI have used 2.8.x and the trunk version - in both versions, I cannot access the priority value for a record, or export the zone to bind format without a key error.\r\n\r\n## Detailed Information\r\n\r\nThe following traceback is generated from `zone.export_to_bind_format()`:\r\n\r\n>Traceback (most recent call last):  \r\n\u00a0 File \"<stdin>\", line 1, in <module>\r\n\u00a0 File \"/dns-copy/venv/lib/python3.7/site-packages/libcloud/dns/base.py\", line 78, in export_to_bind_format\r\n\u00a0 \u00a0 return self.driver.export_zone_to_bind_format(zone=self)\r\n\u00a0 File \"/dns-copy/venv/lib/python3.7/site-packages/libcloud/dns/base.py\", line 418, in export_zone_to_bind_format\r\n\u00a0 \u00a0 line = self._get_bind_record_line(record=record)\r\n\u00a0 File \"/dns-copy/venv/lib/python3.7/site-packages/libcloud/dns/base.py\", line 478, in _get_bind_record_line\r\n\u00a0 \u00a0 priority = str(record.extra['priority'])\r\nKeyError: 'priority'\r\n\r\nI was able to resolve the error by adding priority to 'libcloud/libcloud/dns/drivers/cloudflare.py':\r\n\r\n```python\r\nRECORD_EXTRA_ATTRIBUTES = {\r\n    'proxiable',\r\n    'proxied',\r\n    'locked',\r\n    'created_on',\r\n    'modified_on',\r\n    'data',\r\n    'priority'\r\n}\r\n```\r\n\r\nI can export to BIND format and retrieve MX record priorities with this change.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1424", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1424/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1424/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1424/events", "html_url": "https://github.com/apache/libcloud/issues/1424", "id": 562711743, "node_id": "MDU6SXNzdWU1NjI3MTE3NDM=", "number": 1424, "title": "Documentation: Objectstore example is broken / libcloud does seek() on stream", "user": {"login": "perbu", "id": 232665, "node_id": "MDQ6VXNlcjIzMjY2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/232665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/perbu", "html_url": "https://github.com/perbu", "followers_url": "https://api.github.com/users/perbu/followers", "following_url": "https://api.github.com/users/perbu/following{/other_user}", "gists_url": "https://api.github.com/users/perbu/gists{/gist_id}", "starred_url": "https://api.github.com/users/perbu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/perbu/subscriptions", "organizations_url": "https://api.github.com/users/perbu/orgs", "repos_url": "https://api.github.com/users/perbu/repos", "events_url": "https://api.github.com/users/perbu/events{/privacy}", "received_events_url": "https://api.github.com/users/perbu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417963792, "node_id": "MDU6TGFiZWwxNDE3OTYzNzky", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20storage", "name": "api: storage", "color": "6f6be5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-10T17:25:04Z", "updated_at": "2020-02-17T21:52:44Z", "closed_at": "2020-02-17T21:52:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI'm running the example on https://libcloud.readthedocs.io/en/stable/storage/examples.html that creates a tarfile and uploads it via stream to an objectstore.\r\n\r\nI'm using GCS.\r\nlibcloud tries to do a seek() on the supplied iterator, this fails and the program stops.\r\n\r\n\r\n## Detailed Information\r\n\r\napache-libcloud==2.8.0\r\nPython 3.7.6\r\nmacos Catalina\r\n\r\nThe example in the doc is Python 2, I've rewritten it for python 3. I'm using GCS.\r\n\r\n```python\r\n#!/usr/bin/env python\r\nimport os\r\nimport subprocess\r\nfrom datetime import datetime\r\n\r\nfrom libcloud.storage.types import Provider, ContainerDoesNotExistError\r\nfrom libcloud.storage.providers import get_driver\r\n\r\nfrom dotenv import load_dotenv\r\nload_dotenv()\r\n\r\ncls = get_driver(Provider.GOOGLE_STORAGE)\r\ndriver = cls(os.getenv('GOOGLE_ACCOUNT'),\r\n                  os.getenv('AUTH_TOKEN'),\r\n                  project='foo')\r\n\r\ndirectory = os.getenv('FOLDER')\r\ncmd = 'tar cvzpf - %s' % (directory)\r\n\r\nobject_name = 'backup-%s.tar.gz' % (datetime.now().strftime('%Y-%m-%d'))\r\ncontainer_name = os.getenv('WORKSPACE')\r\n\r\n# Create a container if it doesn't already exist\r\ntry:\r\n    container = driver.get_container(container_name=container_name)\r\nexcept ContainerDoesNotExistError:\r\n    container = driver.create_container(container_name=container_name)\r\n\r\npipe = subprocess.Popen(cmd, bufsize=0, shell=True, stdout=subprocess.PIPE)\r\nreturn_code = pipe.poll()\r\n\r\nprint('Uploading object...')\r\n\r\nwhile return_code is None:\r\n    # Compress data in our directory and stream it directly to CF\r\n    obj = container.upload_object_via_stream(iterator=pipe.stdout,\r\n                                             object_name=object_name)\r\n    return_code = pipe.poll()\r\n\r\nprint('Upload complete, transferred: %s KB' % ((obj.size / 1024)))\r\n\r\n```\r\nThis returns the following exception:\r\n```\r\nTraceback (most recent call last):\r\n  File \"./bug.py\", line 38, in <module>\r\n    object_name=object_name)\r\n  File \"/Users/perbu/.virtualenvs/ar1/lib/python3.7/site-packages/libcloud/storage/base.py\", line 159, in upload_object_via_stream\r\n    iterator, self, object_name, extra=extra, **kwargs)\r\n  File \"/Users/perbu/.virtualenvs/ar1/lib/python3.7/site-packages/libcloud/storage/drivers/s3.py\", line 698, in upload_object_via_stream\r\n    storage_class=ex_storage_class)\r\n  File \"/Users/perbu/.virtualenvs/ar1/lib/python3.7/site-packages/libcloud/storage/drivers/s3.py\", line 842, in _put_object\r\n    headers=headers, file_path=file_path, stream=stream)\r\n  File \"/Users/perbu/.virtualenvs/ar1/lib/python3.7/site-packages/libcloud/storage/base.py\", line 627, in _upload_object\r\n    self._get_hash_function())\r\n  File \"/Users/perbu/.virtualenvs/ar1/lib/python3.7/site-packages/libcloud/storage/base.py\", line 657, in _hash_buffered_stream\r\n    stream.seek(0)\r\nOSError: [Errno 29] Illegal seek\r\n```\r\n\r\nThe offending code in libcloud/storage/base.py looks like this:\r\n```python\r\n        if hasattr(stream, '__next__') or hasattr(stream, 'next'):\r\n            # Ensure we start from the begining of a stream in case stream is\r\n            # not at the beginning\r\n            if hasattr(stream, 'seek'):\r\n                stream.seek(0)\r\n```\r\n\r\nI'm not entirely sure why the iterator get \"seek\". I've been able to work around the issue by creating a SimpleIterator class that only supplies __next__ and then taking the output from Popen.stdout and subclassing it into the SimpleIterator.\r\n\r\nIf I just comment out the seek(0) everything seems to work.\r\n\r\nThanks for an excellent project. Let me know if you need anything more from me.\r\n\r\nCheers,\r\n\r\nPer.\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1422", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1422/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1422/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1422/events", "html_url": "https://github.com/apache/libcloud/issues/1422", "id": 561992323, "node_id": "MDU6SXNzdWU1NjE5OTIzMjM=", "number": 1422, "title": "Issue in Create Volume", "user": {"login": "ngopi37", "id": 50859099, "node_id": "MDQ6VXNlcjUwODU5MDk5", "avatar_url": "https://avatars1.githubusercontent.com/u/50859099?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ngopi37", "html_url": "https://github.com/ngopi37", "followers_url": "https://api.github.com/users/ngopi37/followers", "following_url": "https://api.github.com/users/ngopi37/following{/other_user}", "gists_url": "https://api.github.com/users/ngopi37/gists{/gist_id}", "starred_url": "https://api.github.com/users/ngopi37/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ngopi37/subscriptions", "organizations_url": "https://api.github.com/users/ngopi37/orgs", "repos_url": "https://api.github.com/users/ngopi37/repos", "events_url": "https://api.github.com/users/ngopi37/events{/privacy}", "received_events_url": "https://api.github.com/users/ngopi37/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1430953003, "node_id": "MDU6TGFiZWwxNDMwOTUzMDAz", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20ec2", "name": "drivers: ec2", "color": "edbca6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-02-08T09:01:33Z", "updated_at": "2020-03-01T11:26:41Z", "closed_at": "2020-03-01T11:26:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nI tried creating new volume using below\r\ndriver.create_volume(size=volume_size,name=volume_name,location=None,snapshot=None) and am getting below error\r\nMissingParameter: The request must contain the parameter zone\r\n\r\nWhen i debug it expecting availability\r\n/usr/local/lib/python3.7/dist-packages/libcloud/compute/drivers/ec2.py in create_volume\r\n\r\n\r\n## Detailed Information\r\n\r\nAm using Libcloud 2.8.0 and running on Python3.7 in Ubuntu 18TLS\r\n\r\nProvide detailed information of your bug report.\r\n\r\nThis includes information about your environment (which Libcloud version are\r\nyou using, which Python version, which Operating System / distribution, etc.)\r\nand steps which are needed to reproduce it.\r\n\r\nFor more information on contributing, please see https://libcloud.readthedocs.io/en/latest/development.html\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1417", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1417/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1417/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1417/events", "html_url": "https://github.com/apache/libcloud/issues/1417", "id": 555302785, "node_id": "MDU6SXNzdWU1NTUzMDI3ODU=", "number": 1417, "title": "InvalidCredsError when uploading .xlsm file to Google Storage bucket", "user": {"login": "wabson", "id": 1727487, "node_id": "MDQ6VXNlcjE3Mjc0ODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1727487?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wabson", "html_url": "https://github.com/wabson", "followers_url": "https://api.github.com/users/wabson/followers", "following_url": "https://api.github.com/users/wabson/following{/other_user}", "gists_url": "https://api.github.com/users/wabson/gists{/gist_id}", "starred_url": "https://api.github.com/users/wabson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wabson/subscriptions", "organizations_url": "https://api.github.com/users/wabson/orgs", "repos_url": "https://api.github.com/users/wabson/repos", "events_url": "https://api.github.com/users/wabson/events{/privacy}", "received_events_url": "https://api.github.com/users/wabson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417963792, "node_id": "MDU6TGFiZWwxNDE3OTYzNzky", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20storage", "name": "api: storage", "color": "6f6be5", "default": false, "description": ""}, {"id": 1810919671, "node_id": "MDU6TGFiZWwxODEwOTE5Njcx", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20google%20storage", "name": "drivers: google storage", "color": "f7afc5", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-26T23:15:08Z", "updated_at": "2020-02-04T21:14:39Z", "closed_at": "2020-02-04T21:14:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhen running on Ubuntu it is not possible to upload an Excel macro-enabled file with the suffix `.xlsm` to a Google Storage bucket, the upload fails with an `InvalidCredsError` exception raised after calling `upload_object_via_stream()`\r\n\r\n## Detailed Information\r\n\r\nI first noticed this in a Django app running on Heroku, and have since reproduced the issue with libcloud only, on standalone Ubuntu 16.04 and 18.04 AMIs. The issue is triggered on Python2 and Python3 but does not occur on my OSX dev enviroment nor in testing on Amazon Linux. It does not reproduce when uploading to S3 and seems specific to GCP.\r\n\r\nSteps to reproduce:\r\n\r\nCreate a bucket in Google Cloud Storage and in Storage Settings add an Access key for your account, under Interoperability.\r\n\r\nInstall `apache-libcloud==2.8.0` via `pip`\r\n\r\nAttempt to upload a test file to the bucket as in the following example\r\n\r\n```\r\nfrom io import BytesIO\r\nfrom libcloud.storage.types import Provider\r\nfrom libcloud.storage.providers import get_driver\r\n\r\ncls = get_driver(Provider.GOOGLE_STORAGE)\r\ndriver = cls('my-access-key', 'my-secret')\r\ncontainer = driver.get_container(container_name='my-test-bucket')\r\nobj = driver.upload_object_via_stream(iterator=BytesIO(b'hello'), container=container, object_name='test1.xlsm')\r\n```\r\n\r\nThis results in the following stack trace\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"upload.py\", line 9, in <module>\r\n    obj = driver.upload_object_via_stream(iterator=BytesIO(b'hello'), container=container, object_name='test1.xlsm')\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/libcloud/storage/drivers/s3.py\", line 698, in upload_object_via_stream\r\n    storage_class=ex_storage_class)\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/libcloud/storage/drivers/s3.py\", line 842, in _put_object\r\n    headers=headers, file_path=file_path, stream=stream)\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/libcloud/storage/base.py\", line 640, in _upload_object\r\n    response.parse_error()\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/libcloud/storage/drivers/s3.py\", line 123, in parse_error\r\n    raise InvalidCredsError(self.body)\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/libcloud/common/base.py\", line 293, in body\r\n    return self.response.body\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/libcloud/common/base.py\", line 286, in response\r\n    self.parse_error()\r\n  File \"/home/ubuntu/.local/lib/python3.6/site-packages/libcloud/storage/drivers/s3.py\", line 123, in parse_error\r\n    raise InvalidCredsError(self.body)\r\nlibcloud.common.types.InvalidCredsError: b\"<?xml version='1.0' encoding='UTF-8'?><Error><Code>SignatureDoesNotMatch</Code><Message>The request signature we calculated does not match the signature you provided. Check your Google secret key and signing method.</Message><StringToSign>PUT\\n\\napplication/vnd.ms-excel.sheet.macroEnabled.12\\nSun, 26 Jan 2020 22:45:12 GMT\\nx-goog-storage-class:STANDARD\\n/hasler-race-entry-test/test1.xlsm</StringToSign></Error>\"\r\n```\r\n\r\nChanging the file extension in the object name to something more well-known such as `.xlsx` allows the operation to complete just fine, so I know the access credentials are working OK and it seems to be something to do with the mimetype.\r\n\r\nI notice that if I log in to the GCP Storage UI and upload a `.xlsm` file via the browser, it shows as having the type `application/vnd.ms-excel.sheet.macroenabled.12`, that is there is a small difference in case, I wonder if this is significant.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1413", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1413/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1413/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1413/events", "html_url": "https://github.com/apache/libcloud/issues/1413", "id": 551667545, "node_id": "MDU6SXNzdWU1NTE2Njc1NDU=", "number": 1413, "title": "mypy issues as of 2.8.0", "user": {"login": "dpeschman", "id": 145098, "node_id": "MDQ6VXNlcjE0NTA5OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/145098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpeschman", "html_url": "https://github.com/dpeschman", "followers_url": "https://api.github.com/users/dpeschman/followers", "following_url": "https://api.github.com/users/dpeschman/following{/other_user}", "gists_url": "https://api.github.com/users/dpeschman/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpeschman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpeschman/subscriptions", "organizations_url": "https://api.github.com/users/dpeschman/orgs", "repos_url": "https://api.github.com/users/dpeschman/repos", "events_url": "https://api.github.com/users/dpeschman/events{/privacy}", "received_events_url": "https://api.github.com/users/dpeschman/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1489167948, "node_id": "MDU6TGFiZWwxNDg5MTY3OTQ4", "url": "https://api.github.com/repos/apache/libcloud/labels/issue:%20bug", "name": "issue: bug", "color": "ed9e87", "default": false, "description": ""}, {"id": 1443622706, "node_id": "MDU6TGFiZWwxNDQzNjIyNzA2", "url": "https://api.github.com/repos/apache/libcloud/labels/mypy", "name": "mypy", "color": "bd85fc", "default": false, "description": ""}, {"id": 1443622835, "node_id": "MDU6TGFiZWwxNDQzNjIyODM1", "url": "https://api.github.com/repos/apache/libcloud/labels/type%20annotations", "name": "type annotations", "color": "fca9e9", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-17T22:47:59Z", "updated_at": "2020-01-21T18:07:05Z", "closed_at": "2020-01-21T18:07:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\nJust wanted to feed back to you all a couple issues we had running mypy on our custom drivers after upgrading to libcloud 2.8.0.\r\n\r\n## Detailed Information\r\n- The type of NodeDriver.type is Provider, but our custom drivers assign a string to this field which cause a mypy error.  Perhaps it should be Union[Provider, str]? \r\n- NodeSize, NodeLocation, and NodeImage have driver typed to be Type[NodeDriver] in their constructors, but this does not match Node, StorageVolume, and others which have it typed as NodeDriver.  We have subclasses of some of these and use self.driver as an instance of a driver, just like the Node class, and not as a driver class.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1411", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1411/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1411/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1411/events", "html_url": "https://github.com/apache/libcloud/issues/1411", "id": 551313332, "node_id": "MDU6SXNzdWU1NTEzMTMzMzI=", "number": 1411, "title": "Error getting node_id in OpenStack_1_1_FloatingIpAddress", "user": {"login": "micafer", "id": 4972699, "node_id": "MDQ6VXNlcjQ5NzI2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4972699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micafer", "html_url": "https://github.com/micafer", "followers_url": "https://api.github.com/users/micafer/followers", "following_url": "https://api.github.com/users/micafer/following{/other_user}", "gists_url": "https://api.github.com/users/micafer/gists{/gist_id}", "starred_url": "https://api.github.com/users/micafer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micafer/subscriptions", "organizations_url": "https://api.github.com/users/micafer/orgs", "repos_url": "https://api.github.com/users/micafer/repos", "events_url": "https://api.github.com/users/micafer/events{/privacy}", "received_events_url": "https://api.github.com/users/micafer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-17T09:52:11Z", "updated_at": "2020-01-22T08:43:26Z", "closed_at": "2020-01-22T08:43:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nError getting node_id in OpenStack_1_1_FloatingIpAddress in case of region is not called \"nova\".\r\n\r\n## Detailed Information\r\n\r\nIn the function OpenStack_2_FloatingIpPool._to_floating_ip the instance_id of the node where the IP is attached to is not correctly obtained if the name of the region is not the expected one \"nova\".\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1407", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1407/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1407/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1407/events", "html_url": "https://github.com/apache/libcloud/issues/1407", "id": 547964120, "node_id": "MDU6SXNzdWU1NDc5NjQxMjA=", "number": 1407, "title": "new driver: Kamatera", "user": {"login": "OriHoch", "id": 1198854, "node_id": "MDQ6VXNlcjExOTg4NTQ=", "avatar_url": "https://avatars3.githubusercontent.com/u/1198854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OriHoch", "html_url": "https://github.com/OriHoch", "followers_url": "https://api.github.com/users/OriHoch/followers", "following_url": "https://api.github.com/users/OriHoch/following{/other_user}", "gists_url": "https://api.github.com/users/OriHoch/gists{/gist_id}", "starred_url": "https://api.github.com/users/OriHoch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OriHoch/subscriptions", "organizations_url": "https://api.github.com/users/OriHoch/orgs", "repos_url": "https://api.github.com/users/OriHoch/repos", "events_url": "https://api.github.com/users/OriHoch/events{/privacy}", "received_events_url": "https://api.github.com/users/OriHoch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417958065, "node_id": "MDU6TGFiZWwxNDE3OTU4MDY1", "url": "https://api.github.com/repos/apache/libcloud/labels/new%20driver", "name": "new driver", "color": "53fc50", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-01-10T09:31:17Z", "updated_at": "2020-03-19T10:59:21Z", "closed_at": "2020-03-19T10:59:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi, I'm starting to develop a driver for [Kamatera](https://www.kamatera.com/)\r\n\r\nStarting with the compute API.\r\n\r\nPer the documentation: I'll use this issue as the umbrella place for all my changes and to ask questions.. (unless there is somewhere else I should do that)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1403", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1403/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1403/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1403/events", "html_url": "https://github.com/apache/libcloud/issues/1403", "id": 546925492, "node_id": "MDU6SXNzdWU1NDY5MjU0OTI=", "number": 1403, "title": "AWS S3 Presigned URL and Azure Blob Storage Shared access signature", "user": {"login": "rvolykh", "id": 17274455, "node_id": "MDQ6VXNlcjE3Mjc0NDU1", "avatar_url": "https://avatars2.githubusercontent.com/u/17274455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvolykh", "html_url": "https://github.com/rvolykh", "followers_url": "https://api.github.com/users/rvolykh/followers", "following_url": "https://api.github.com/users/rvolykh/following{/other_user}", "gists_url": "https://api.github.com/users/rvolykh/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvolykh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvolykh/subscriptions", "organizations_url": "https://api.github.com/users/rvolykh/orgs", "repos_url": "https://api.github.com/users/rvolykh/repos", "events_url": "https://api.github.com/users/rvolykh/events{/privacy}", "received_events_url": "https://api.github.com/users/rvolykh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417963792, "node_id": "MDU6TGFiZWwxNDE3OTYzNzky", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20storage", "name": "api: storage", "color": "6f6be5", "default": false, "description": ""}, {"id": 1417963728, "node_id": "MDU6TGFiZWwxNDE3OTYzNzI4", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20azure", "name": "drivers: azure", "color": "bdfca6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-08T15:15:44Z", "updated_at": "2020-03-07T21:48:42Z", "closed_at": "2020-03-07T20:35:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Feature Request\r\n\r\nAWS S3 has the support of [Presigned Object URL](https://docs.aws.amazon.com/AmazonS3/latest/dev/ShareObjectPreSignedURL.html) and Azure Blob Storage has the support of [Shared access signature](https://docs.microsoft.com/en-us/rest/api/storageservices/delegate-access-with-shared-access-signature).\r\n\r\nBoth of those features allow anyone (with whom shared link was shared) to download or upload a file. This feature is very useful when you want to temporary share a file with some user(s) or to allow them to upload a file, without sharing your credentials (temporary creds, creating an account, etc).\r\n\r\nCurrently, [libcloud Storage interface (API)](https://libcloud.readthedocs.io/en/stable/storage/api.html#storage-base-api) has two methods which more or less are related to sharing object access:\r\n- [enable_object_cdn](https://libcloud.readthedocs.io/en/stable/storage/api.html#libcloud.storage.base.StorageDriver.enable_object_cdn) - Enable object CDN;\r\n- [get_object_cdn_url](https://libcloud.readthedocs.io/en/stable/storage/api.html#libcloud.storage.base.StorageDriver.get_object_cdn_url) - Return an object CDN URL.\r\n\r\n\\* Both methods are not implemented either for AWS S3 nor Azure Blob Storage libcloud storage drivers.\r\n\r\nMy proposal is to extend `get_object_cdn_url` with additional parameter (mode=[\"read\", \"write\"]) and implement support for AWS S3 and Azure Blob Storage.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1401", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1401/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1401/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1401/events", "html_url": "https://github.com/apache/libcloud/issues/1401", "id": 545692196, "node_id": "MDU6SXNzdWU1NDU2OTIxOTY=", "number": 1401, "title": "Uploading to s3 encrypted with a custom KMS key fails", "user": {"login": "jfharden", "id": 2170030, "node_id": "MDQ6VXNlcjIxNzAwMzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/2170030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfharden", "html_url": "https://github.com/jfharden", "followers_url": "https://api.github.com/users/jfharden/followers", "following_url": "https://api.github.com/users/jfharden/following{/other_user}", "gists_url": "https://api.github.com/users/jfharden/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfharden/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfharden/subscriptions", "organizations_url": "https://api.github.com/users/jfharden/orgs", "repos_url": "https://api.github.com/users/jfharden/repos", "events_url": "https://api.github.com/users/jfharden/events{/privacy}", "received_events_url": "https://api.github.com/users/jfharden/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417963792, "node_id": "MDU6TGFiZWwxNDE3OTYzNzky", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20storage", "name": "api: storage", "color": "6f6be5", "default": false, "description": ""}, {"id": 1598166682, "node_id": "MDU6TGFiZWwxNTk4MTY2Njgy", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20aws%20s3", "name": "drivers: aws s3", "color": "ecfc85", "default": false, "description": ""}, {"id": 1489167948, "node_id": "MDU6TGFiZWwxNDg5MTY3OTQ4", "url": "https://api.github.com/repos/apache/libcloud/labels/issue:%20bug", "name": "issue: bug", "color": "ed9e87", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-01-06T12:01:40Z", "updated_at": "2020-01-14T04:22:38Z", "closed_at": "2020-01-14T04:22:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhen uploading files to s3 where the bucket has server side encryption with a custom KMS key the upload fails\r\n\r\n## Detailed Information\r\nPython 3.7\r\nLibcloud: 2.8.0\r\nOS: Amazon Linux 2\r\n\r\nLibcloud is inspecting the etag expecting it to be the md5sum of the uploaded data object but this is not always the case (where using a custom KMS key, or doing a multi-part upload): https://docs.aws.amazon.com/AmazonS3/latest/API/RESTCommonResponseHeaders.html\r\n\r\n> Objects created by the PUT Object, POST Object, or Copy operation, or through the AWS Management Console, and are encrypted by SSE-C or SSE-KMS, have ETags that are not an MD5 digest of their object data.\r\n>\r\n> If an object is created by either the Multipart Upload or Part Copy operation, the ETag is not an MD5 digest, regardless of the method of encryption.\r\n\r\nthe s3 storage driver is comparing the etag to the hash calculated locally on the streamed file (https://github.com/apache/libcloud/blob/trunk/libcloud/storage/drivers/s3.py#L850) but where the etag is not an md5 hash of the file this will always fail\r\n\r\nI've included a stack trace below from cassandra-medusa (https://github.com/thelastpickle/cassandra-medusa) which led to me investigating this problem\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/medusa/backup.py\", line 274, in main\r\n    cassandra, node_backup, storage, differential_mode, config)\r\n  File \"/usr/local/lib/python3.7/site-packages/medusa/backup.py\", line 320, in do_backup\r\n    num_files = backup_snapshots(storage, manifest, node_backup, node_backup_cache, snapshot)\r\n  File \"/usr/local/lib/python3.7/site-packages/medusa/backup.py\", line 388, in backup_snapshots\r\n    manifest_objects = storage.storage_driver.upload_blobs(needs_backup, dst_path)\r\n  File \"/usr/local/lib/python3.7/site-packages/medusa/storage/s3_storage.py\", line 95, in upload_blobs\r\n    multi_part_upload_threshold=int(self.config.multi_part_upload_threshold),\r\n  File \"/usr/local/lib/python3.7/site-packages/medusa/storage/aws_s3_storage/concurrent.py\", line 87, in upload_blobs\r\n    return job.execute(list(src))\r\n  File \"/usr/local/lib/python3.7/site-packages/medusa/storage/aws_s3_storage/concurrent.py\", line 51, in execute\r\n    return list(executor.map(self.with_storage, iterables))\r\n  File \"/usr/lib64/python3.7/concurrent/futures/_base.py\", line 598, in result_iterator\r\n    yield fs.pop().result()\r\n  File \"/usr/lib64/python3.7/concurrent/futures/_base.py\", line 435, in result\r\n    return self.__get_result()\r\n  File \"/usr/lib64/python3.7/concurrent/futures/_base.py\", line 384, in __get_result\r\n    raise self._exception\r\n  File \"/usr/lib64/python3.7/concurrent/futures/thread.py\", line 57, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/medusa/storage/aws_s3_storage/concurrent.py\", line 60, in with_storage\r\n    return self.func(self.storage, connection, iterable)\r\n  File \"/usr/local/lib/python3.7/site-packages/medusa/storage/aws_s3_storage/concurrent.py\", line 83, in <lambda>\r\n    storage, connection, src_file, dest, bucket, multi_part_upload_threshold\r\n  File \"/usr/local/lib/python3.7/site-packages/medusa/storage/aws_s3_storage/concurrent.py\", line 119, in __upload_file\r\n    obj = _upload_single_part(connection, src, bucket, full_object_name)\r\n  File \"/usr/local/lib/python3.7/site-packages/retrying.py\", line 49, in wrapped_f\r\n    return Retrying(*dargs, **dkw).call(f, *args, **kw)\r\n  File \"/usr/local/lib/python3.7/site-packages/retrying.py\", line 212, in call\r\n    raise attempt.get()\r\n  File \"/usr/local/lib/python3.7/site-packages/retrying.py\", line 247, in get\r\n    six.reraise(self.value[0], self.value[1], self.value[2])\r\n  File \"/usr/local/lib/python3.7/site-packages/six.py\", line 696, in reraise\r\n    raise value\r\n  File \"/usr/local/lib/python3.7/site-packages/retrying.py\", line 200, in call\r\n    attempt = Attempt(fn(*args, **kwargs), attempt_number, False)\r\n  File \"/usr/local/lib/python3.7/site-packages/medusa/storage/aws_s3_storage/concurrent.py\", line 127, in _upload_single_part\r\n    os.fspath(src), container=bucket, object_name=object_name\r\n  File \"/usr/local/lib/python3.7/site-packages/libcloud/storage/drivers/s3.py\", line 492, in upload_object\r\n    storage_class=ex_storage_class)\r\n  File \"/usr/local/lib/python3.7/site-packages/libcloud/storage/drivers/s3.py\", line 854, in _put_object\r\n    object_name=object_name, driver=self)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1399", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1399/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1399/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1399/events", "html_url": "https://github.com/apache/libcloud/issues/1399", "id": 544641392, "node_id": "MDU6SXNzdWU1NDQ2NDEzOTI=", "number": 1399, "title": "Upload large file to Azure Blobs", "user": {"login": "rvolykh", "id": 17274455, "node_id": "MDQ6VXNlcjE3Mjc0NDU1", "avatar_url": "https://avatars2.githubusercontent.com/u/17274455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvolykh", "html_url": "https://github.com/rvolykh", "followers_url": "https://api.github.com/users/rvolykh/followers", "following_url": "https://api.github.com/users/rvolykh/following{/other_user}", "gists_url": "https://api.github.com/users/rvolykh/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvolykh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvolykh/subscriptions", "organizations_url": "https://api.github.com/users/rvolykh/orgs", "repos_url": "https://api.github.com/users/rvolykh/repos", "events_url": "https://api.github.com/users/rvolykh/events{/privacy}", "received_events_url": "https://api.github.com/users/rvolykh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417963792, "node_id": "MDU6TGFiZWwxNDE3OTYzNzky", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20storage", "name": "api: storage", "color": "6f6be5", "default": false, "description": ""}, {"id": 1417963728, "node_id": "MDU6TGFiZWwxNDE3OTYzNzI4", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20azure", "name": "drivers: azure", "color": "bdfca6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-02T16:09:22Z", "updated_at": "2020-01-09T14:37:43Z", "closed_at": "2020-01-09T14:37:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nCould not upload a large file (100 GB) to Azure Blob Storage.\r\n\r\n## Detailed Information\r\n\r\nPackage libcloud: 2.7.0\r\nFile 100.gb was generated with:\r\n```\r\nimport os\r\nf = open('100.gb', \"wb\")\r\nf.seek(107374127424-1)\r\nf.write(b\"\\0\")\r\nf.close()\r\n```\r\nCode snippet:\r\n```\r\nfrom io import FileIO\r\n\r\ncls = get_driver(Provider.AZURE_BLOBS)\r\ndriver = cls(key='STORAGE_ACCOUNT_NAME', secret='ACCESS_KEY')\r\ncontainer = driver.get_container(container_name='CONTAINER_NAME')\r\n\r\n# This method blocks until all the parts have been uploaded.\r\nextra = {'content_type': 'application/octet-stream'}\r\n\r\nwith FileIO('100.gb', 'rb') as iterator:\r\n    obj = driver.upload_object_via_stream(iterator=iterator,\r\n                                          container=container,\r\n                                          object_name='libcloud/100.gb',\r\n                                          extra=extra)\r\n```\r\nError:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/root/rvolykh/venv/lib/python3.5/site-packages/urllib3/connectionpool.py\", line 672, in urlopen\r\n    chunked=chunked,\r\n  File \"/root/rvolykh/venv/lib/python3.5/site-packages/urllib3/connectionpool.py\", line 387, in _make_request\r\n    conn.request(method, url, **httplib_request_kw)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1122, in request\r\n    self._send_request(method, url, body, headers)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1167, in _send_request\r\n    self.endheaders(body)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 1118, in endheaders\r\n    self._send_output(message_body)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 946, in _send_output\r\n    self.send(message_body)\r\n  File \"/usr/lib/python3.5/http/client.py\", line 915, in send\r\n    self.sock.sendall(datablock)\r\n  File \"/usr/lib/python3.5/ssl.py\", line 891, in sendall\r\n    v = self.send(data[count:])\r\n  File \"/usr/lib/python3.5/ssl.py\", line 861, in send\r\n    return self._sslobj.write(data)\r\n  File \"/usr/lib/python3.5/ssl.py\", line 586, in write\r\n    return self._sslobj.write(data)\r\nConnectionResetError: [Errno 104] Connection reset by peer\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1392", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1392/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1392/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1392/events", "html_url": "https://github.com/apache/libcloud/issues/1392", "id": 540155974, "node_id": "MDU6SXNzdWU1NDAxNTU5NzQ=", "number": 1392, "title": "The wheel distribution of this package on pypi contains the requirement for enum34", "user": {"login": "arterrey", "id": 616688, "node_id": "MDQ6VXNlcjYxNjY4OA==", "avatar_url": "https://avatars2.githubusercontent.com/u/616688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arterrey", "html_url": "https://github.com/arterrey", "followers_url": "https://api.github.com/users/arterrey/followers", "following_url": "https://api.github.com/users/arterrey/following{/other_user}", "gists_url": "https://api.github.com/users/arterrey/gists{/gist_id}", "starred_url": "https://api.github.com/users/arterrey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arterrey/subscriptions", "organizations_url": "https://api.github.com/users/arterrey/orgs", "repos_url": "https://api.github.com/users/arterrey/repos", "events_url": "https://api.github.com/users/arterrey/events{/privacy}", "received_events_url": "https://api.github.com/users/arterrey/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1747049477, "node_id": "MDU6TGFiZWwxNzQ3MDQ5NDc3", "url": "https://api.github.com/repos/apache/libcloud/labels/build", "name": "build", "color": "10a02f", "default": false, "description": ""}, {"id": 1489167948, "node_id": "MDU6TGFiZWwxNDg5MTY3OTQ4", "url": "https://api.github.com/repos/apache/libcloud/labels/issue:%20bug", "name": "issue: bug", "color": "ed9e87", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Kami", "id": 125088, "node_id": "MDQ6VXNlcjEyNTA4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/125088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kami", "html_url": "https://github.com/Kami", "followers_url": "https://api.github.com/users/Kami/followers", "following_url": "https://api.github.com/users/Kami/following{/other_user}", "gists_url": "https://api.github.com/users/Kami/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kami/subscriptions", "organizations_url": "https://api.github.com/users/Kami/orgs", "repos_url": "https://api.github.com/users/Kami/repos", "events_url": "https://api.github.com/users/Kami/events{/privacy}", "received_events_url": "https://api.github.com/users/Kami/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Kami", "id": 125088, "node_id": "MDQ6VXNlcjEyNTA4OA==", "avatar_url": "https://avatars3.githubusercontent.com/u/125088?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kami", "html_url": "https://github.com/Kami", "followers_url": "https://api.github.com/users/Kami/followers", "following_url": "https://api.github.com/users/Kami/following{/other_user}", "gists_url": "https://api.github.com/users/Kami/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kami/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kami/subscriptions", "organizations_url": "https://api.github.com/users/Kami/orgs", "repos_url": "https://api.github.com/users/Kami/repos", "events_url": "https://api.github.com/users/Kami/events{/privacy}", "received_events_url": "https://api.github.com/users/Kami/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2019-12-19T08:26:21Z", "updated_at": "2019-12-22T19:25:20Z", "closed_at": "2019-12-22T19:25:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nThe wheel distribution of this package on pypi contains the requirement for enum34\r\n\r\n## Detailed Information\r\n\r\nenum34 appears to be dynamical included as a requirement in setup.py depending if your Python version is pre 3.4.\r\n\r\n```\r\nPY2_or_3_pre_34 = sys.version_info < (3, 4, 0)\r\n# ...\r\nif PY2_or_3_pre_34:\r\n    INSTALL_REQUIREMENTS.append('typing')\r\n    INSTALL_REQUIREMENTS.append('enum34')\r\n```\r\n\r\nThe wheel package contains the requirement without any special qualifier. (I'm not even sure if it is possible to spec requirements in a wheel according to python version)\r\n\r\nFrom METADATA\r\n```\r\nRequires-Python: >=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4\r\nRequires-Dist: requests (>=2.5.0)\r\nRequires-Dist: typing\r\nRequires-Dist: enum34\r\n```\r\n\r\nThis does create a problem in `zc.buildout` style environments that are running newer python versions.\r\n\r\nI think it is probably time to drop support for Python 3.3", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1390", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1390/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1390/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1390/events", "html_url": "https://github.com/apache/libcloud/issues/1390", "id": 539922990, "node_id": "MDU6SXNzdWU1Mzk5MjI5OTA=", "number": 1390, "title": "Can no longer get driver by provider name string", "user": {"login": "dpeschman", "id": 145098, "node_id": "MDQ6VXNlcjE0NTA5OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/145098?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpeschman", "html_url": "https://github.com/dpeschman", "followers_url": "https://api.github.com/users/dpeschman/followers", "following_url": "https://api.github.com/users/dpeschman/following{/other_user}", "gists_url": "https://api.github.com/users/dpeschman/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpeschman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpeschman/subscriptions", "organizations_url": "https://api.github.com/users/dpeschman/orgs", "repos_url": "https://api.github.com/users/dpeschman/repos", "events_url": "https://api.github.com/users/dpeschman/events{/privacy}", "received_events_url": "https://api.github.com/users/dpeschman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-12-18T21:03:59Z", "updated_at": "2019-12-19T18:48:07Z", "closed_at": "2019-12-19T18:48:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nCan no longer get driver by provider name string as of 2.7.0.\r\n\r\n## Detailed Information\r\n\r\n```bash\r\nhome@billy [~]--[$ python3 -m venv libcloud-venv\r\nhome@billy [~]--[$ . libcloud-venv/bin/activate\r\n(libcloud-venv) home@billy [~]--[$ pip install apache-libcloud==2.7.0\r\n...\r\nSuccessfully installed apache-libcloud-2.7.0 certifi-2019.11.28 chardet-3.0.4 enum34-1.1.6 idna-2.8 requests-2.22.0 typing-3.7.4.1 urllib3-1.25.7\r\n(libcloud-venv) home@billy [~]--[$ python\r\nPython 3.7.5 (default, Nov  1 2019, 02:16:32)\r\n[Clang 11.0.0 (clang-1100.0.33.8)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from libcloud.compute.providers import get_driver\r\n>>> get_driver('openstack')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/billy/libcloud-venv/lib/python3.7/site-packages/libcloud/compute/providers.py\", line 178, in get_driver\r\n    deprecated_constants=deprecated_constants)\r\n  File \"/Users/billy/libcloud-venv/lib/python3.7/site-packages/libcloud/common/providers.py\", line 73, in get_driver\r\n    raise AttributeError('Provider %s does not exist' % (provider))\r\nAttributeError: Provider openstack does not exist\r\n```\r\n\r\nWorks in 2.6.0:\r\n```bash\r\n(libcloud-venv) home@billy [~]--[$ pip install -U 'apache-libcloud==2.6.0'\r\n...\r\nSuccessfully installed apache-libcloud-2.6.0\r\n(libcloud-venv) home@billy [~]--[$ python\r\nPython 3.7.5 (default, Nov  1 2019, 02:16:32)\r\n[Clang 11.0.0 (clang-1100.0.33.8)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from libcloud.compute.providers import get_driver\r\n>>> get_driver('openstack')\r\n<class 'libcloud.compute.drivers.openstack.OpenStackNodeDriver'>\r\n```\r\n\r\nNot sure if this is a bug, or if we've just been using it wrong.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1385", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1385/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1385/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1385/events", "html_url": "https://github.com/apache/libcloud/issues/1385", "id": 537700790, "node_id": "MDU6SXNzdWU1Mzc3MDA3OTA=", "number": 1385, "title": "ImportError: Missing \"OpenSSL\" dependency during test", "user": {"login": "eamanu", "id": 7605307, "node_id": "MDQ6VXNlcjc2MDUzMDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7605307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamanu", "html_url": "https://github.com/eamanu", "followers_url": "https://api.github.com/users/eamanu/followers", "following_url": "https://api.github.com/users/eamanu/following{/other_user}", "gists_url": "https://api.github.com/users/eamanu/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamanu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamanu/subscriptions", "organizations_url": "https://api.github.com/users/eamanu/orgs", "repos_url": "https://api.github.com/users/eamanu/repos", "events_url": "https://api.github.com/users/eamanu/events{/privacy}", "received_events_url": "https://api.github.com/users/eamanu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-13T18:26:15Z", "updated_at": "2019-12-18T22:24:14Z", "closed_at": "2019-12-18T22:24:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nIf I run:\r\n\r\n```\r\npip install -r requirements-tests.txt\r\npython3 setup.py test\r\n```\r\n\r\nI have the next error:\r\n\r\n```\r\n============================================================================================================ ERRORS =============================================================================================================\r\n__________________________________________________________________________________ ERROR collecting libcloud/test/loadbalancer/test_nttcis.py ___________________________________________________________________________________\r\nImportError while importing test module '/home/eamanu/dev/libcloud/libcloud/test/loadbalancer/test_nttcis.py'.\r\nHint: make sure your test modules/packages have valid Python names.\r\nTraceback:\r\nlibcloud/loadbalancer/drivers/nttcis.py:17: in <module>\r\n    import OpenSSL\r\nE   ModuleNotFoundError: No module named 'OpenSSL'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\nlibcloud/test/loadbalancer/test_nttcis.py:25: in <module>\r\n    from libcloud.loadbalancer.drivers.nttcis import NttCisLBDriver\r\nlibcloud/loadbalancer/drivers/nttcis.py:20: in <module>\r\n    raise ImportError('Missing \"OpenSSL\" dependency. You can install it '\r\nE   ImportError: Missing \"OpenSSL\" dependency. You can install it using pip - pip install pyopenssl\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n=================================================================================================== 1 error in 134.47 seconds ===================================================================================================\r\n```\r\n\r\nThere are any reason for not add pyopenssl to requriments-tests.txt?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1383", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1383/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1383/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1383/events", "html_url": "https://github.com/apache/libcloud/issues/1383", "id": 537445102, "node_id": "MDU6SXNzdWU1Mzc0NDUxMDI=", "number": 1383, "title": "host parameter of S3StorageDriver does nothing in 2.7.0", "user": {"login": "ThimoNeubauer", "id": 12421874, "node_id": "MDQ6VXNlcjEyNDIxODc0", "avatar_url": "https://avatars3.githubusercontent.com/u/12421874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThimoNeubauer", "html_url": "https://github.com/ThimoNeubauer", "followers_url": "https://api.github.com/users/ThimoNeubauer/followers", "following_url": "https://api.github.com/users/ThimoNeubauer/following{/other_user}", "gists_url": "https://api.github.com/users/ThimoNeubauer/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThimoNeubauer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThimoNeubauer/subscriptions", "organizations_url": "https://api.github.com/users/ThimoNeubauer/orgs", "repos_url": "https://api.github.com/users/ThimoNeubauer/repos", "events_url": "https://api.github.com/users/ThimoNeubauer/events{/privacy}", "received_events_url": "https://api.github.com/users/ThimoNeubauer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417963792, "node_id": "MDU6TGFiZWwxNDE3OTYzNzky", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20storage", "name": "api: storage", "color": "6f6be5", "default": false, "description": ""}, {"id": 1598166682, "node_id": "MDU6TGFiZWwxNTk4MTY2Njgy", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20aws%20s3", "name": "drivers: aws s3", "color": "ecfc85", "default": false, "description": ""}, {"id": 1489167948, "node_id": "MDU6TGFiZWwxNDg5MTY3OTQ4", "url": "https://api.github.com/repos/apache/libcloud/labels/issue:%20bug", "name": "issue: bug", "color": "ed9e87", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-13T09:38:55Z", "updated_at": "2019-12-13T16:27:19Z", "closed_at": "2019-12-13T16:27:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nWe noticed that connecting to a local minio server failed after upgrading to libcloud 2.7.0\r\n\r\n## Detailed Information\r\n\r\nTo use the S3 interface of a local server we need to set the host explicitly. In the 2.7.0 sources (see https://github.com/apache/libcloud/blob/trunk/libcloud/storage/drivers/s3.py) we have this:\r\n\r\n```python\r\nclass S3StorageDriver(AWSDriver, BaseS3StorageDriver):\r\n    name = 'Amazon S3'\r\n    connectionCls = S3SignatureV4Connection\r\n    region_name = 'us-east-1'\r\n\r\n    def __init__(self, key, secret=None, secure=True, host=None, port=None,\r\n                 region=None, token=None, **kwargs):\r\n        # Here for backward compatibility for old and deprecated driver class\r\n        # per region approach\r\n        if hasattr(self, 'region_name') and not region:\r\n            region = self.region_name  # pylint: disable=no-member\r\n\r\n        self.region_name = region\r\n\r\n        if region and region not in REGION_TO_HOST_MAP.keys():\r\n            raise ValueError('Invalid or unsupported region: %s' % (region))\r\n\r\n        self.name = 'Amazon S3 (%s)' % (region)\r\n\r\n        host = REGION_TO_HOST_MAP[region]\r\n        super(S3StorageDriver, self).__init__(key=key, secret=secret,\r\n                                              secure=secure, host=host,\r\n                                              port=port,\r\n                                              region=region, token=token,\r\n                                              **kwargs)\r\n```\r\n\r\nNote that the `host = REGION_TO_HOST_MAP[region]` line overrides the host parameter\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1382", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1382/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1382/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1382/events", "html_url": "https://github.com/apache/libcloud/issues/1382", "id": 537315513, "node_id": "MDU6SXNzdWU1MzczMTU1MTM=", "number": 1382, "title": "RuntimeError: dictionary keys changed during iteration", "user": {"login": "eamanu", "id": 7605307, "node_id": "MDQ6VXNlcjc2MDUzMDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7605307?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eamanu", "html_url": "https://github.com/eamanu", "followers_url": "https://api.github.com/users/eamanu/followers", "following_url": "https://api.github.com/users/eamanu/following{/other_user}", "gists_url": "https://api.github.com/users/eamanu/gists{/gist_id}", "starred_url": "https://api.github.com/users/eamanu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eamanu/subscriptions", "organizations_url": "https://api.github.com/users/eamanu/orgs", "repos_url": "https://api.github.com/users/eamanu/repos", "events_url": "https://api.github.com/users/eamanu/events{/privacy}", "received_events_url": "https://api.github.com/users/eamanu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417970689, "node_id": "MDU6TGFiZWwxNDE3OTcwNjg5", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20common", "name": "api: common", "color": "384bb7", "default": false, "description": ""}, {"id": 1747086940, "node_id": "MDU6TGFiZWwxNzQ3MDg2OTQw", "url": "https://api.github.com/repos/apache/libcloud/labels/driver:%20nttcis", "name": "driver: nttcis", "color": "cc9de8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-13T02:34:03Z", "updated_at": "2019-12-21T17:29:08Z", "closed_at": "2019-12-21T17:29:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nDuring the packaging on Debian of libcloud a Runtime error happen [1]\r\n\r\n[1] https://salsa.debian.org/python-team/modules/libcloud/-/jobs/452799\r\n\r\nI think that I can send a patch  if you consider correct.\r\n\r\n## Detailed Information\r\n\r\nDebian unstable \r\nlibcloud 2.5.0", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1381", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1381/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1381/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1381/events", "html_url": "https://github.com/apache/libcloud/issues/1381", "id": 537296064, "node_id": "MDU6SXNzdWU1MzcyOTYwNjQ=", "number": 1381, "title": "GCENodeDriver's deploy_node() should accept Deployments and other parameters that are accepted by create_node()", "user": {"login": "yukw777", "id": 2057325, "node_id": "MDQ6VXNlcjIwNTczMjU=", "avatar_url": "https://avatars2.githubusercontent.com/u/2057325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yukw777", "html_url": "https://github.com/yukw777", "followers_url": "https://api.github.com/users/yukw777/followers", "following_url": "https://api.github.com/users/yukw777/following{/other_user}", "gists_url": "https://api.github.com/users/yukw777/gists{/gist_id}", "starred_url": "https://api.github.com/users/yukw777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yukw777/subscriptions", "organizations_url": "https://api.github.com/users/yukw777/orgs", "repos_url": "https://api.github.com/users/yukw777/repos", "events_url": "https://api.github.com/users/yukw777/events{/privacy}", "received_events_url": "https://api.github.com/users/yukw777/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-13T01:12:48Z", "updated_at": "2019-12-20T22:22:50Z", "closed_at": "2019-12-20T22:22:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Feature Request\r\n\r\nI was trying to use `Deployment` when launching nodes using GCE, but I noticed that the `deploy_node()` of `GCENodeDriver` has a different function signature from other drivers and does not accept `Deployment`. Furthermore, it doesn't accept other essential parameters you can pass in to `create_node()`, making it very limited in its usefulness. Is there a reason why this is so? I fail to see why `GCENodeDriver` has overridden `NodeDriver`'s default `deploy_node()` when there is even this comment: https://github.com/apache/libcloud/blob/d23eeb2862d761cc88973c2e73175b6fed87af66/libcloud/compute/base.py#L968\r\n\r\nI think `GCENodeDriver` should accept `Deployment` for its `deploy_node()` method like other drivers. Would this be as simple as removing the overriding method? Thank you for your help in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1379", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1379/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1379/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1379/events", "html_url": "https://github.com/apache/libcloud/issues/1379", "id": 536302524, "node_id": "MDU6SXNzdWU1MzYzMDI1MjQ=", "number": 1379, "title": "S3 Drivers issue.", "user": {"login": "570096", "id": 41354386, "node_id": "MDQ6VXNlcjQxMzU0Mzg2", "avatar_url": "https://avatars1.githubusercontent.com/u/41354386?v=4", "gravatar_id": "", "url": "https://api.github.com/users/570096", "html_url": "https://github.com/570096", "followers_url": "https://api.github.com/users/570096/followers", "following_url": "https://api.github.com/users/570096/following{/other_user}", "gists_url": "https://api.github.com/users/570096/gists{/gist_id}", "starred_url": "https://api.github.com/users/570096/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/570096/subscriptions", "organizations_url": "https://api.github.com/users/570096/orgs", "repos_url": "https://api.github.com/users/570096/repos", "events_url": "https://api.github.com/users/570096/events{/privacy}", "received_events_url": "https://api.github.com/users/570096/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417963792, "node_id": "MDU6TGFiZWwxNDE3OTYzNzky", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20storage", "name": "api: storage", "color": "6f6be5", "default": false, "description": ""}, {"id": 1598166682, "node_id": "MDU6TGFiZWwxNTk4MTY2Njgy", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20aws%20s3", "name": "drivers: aws s3", "color": "ecfc85", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-11T11:13:34Z", "updated_at": "2020-08-21T21:48:01Z", "closed_at": "2020-01-10T05:30:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "**## Summary**\r\nUploading a file into S3 . I am getting below error.\r\n\r\n_ERROR:_\r\n`**<LibcloudError in <class 'libcloud.storage.drivers.s3.S3StorageDriver'> 'This bucket is located in a different region. Please use the correct driver.'>**`\r\n\r\n**## Detailed Information**\r\nVersion of libcloud:  2.6.1\r\nPython version: 3.7\r\n_**code:**_\r\n```\r\n`import libcloud\r\nfrom libcloud.storage.types import Provider\r\nfrom libcloud.storage.providers import get_driver\r\nFILE_PATH = 'filepath' \r\ncls = get_driver(Provider.S3)\r\ndriver = cls('api key','api secret key')\r\ncontainer = driver.get_container(container_name='my-backups-12345')\r\nextra = {'content_type': 'application/octet-stream'}\r\nwith open(FILE_PATH, 'rb') as iterator:\r\n                obj = driver.upload_object_via_stream(iterator=iterator,\r\n                                                      container=container,\r\n                                                      object_name='images_backup.tar',\r\n                                                      extra=extra)\r\n\r\n```\r\nIn  the above code i mentioned correct driver then also am getting below error.please help me on this issue.Am I missing something?\r\n\r\n![image](https://user-images.githubusercontent.com/41354386/70616592-d1165400-1c34-11ea-9f82-1aae5c287e3b.png)\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1369", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1369/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1369/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1369/events", "html_url": "https://github.com/apache/libcloud/issues/1369", "id": 524872270, "node_id": "MDU6SXNzdWU1MjQ4NzIyNzA=", "number": 1369, "title": "Support aws eu-north-1 region (Stockholm)", "user": {"login": "michaelsembwever", "id": 559444, "node_id": "MDQ6VXNlcjU1OTQ0NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/559444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelsembwever", "html_url": "https://github.com/michaelsembwever", "followers_url": "https://api.github.com/users/michaelsembwever/followers", "following_url": "https://api.github.com/users/michaelsembwever/following{/other_user}", "gists_url": "https://api.github.com/users/michaelsembwever/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelsembwever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelsembwever/subscriptions", "organizations_url": "https://api.github.com/users/michaelsembwever/orgs", "repos_url": "https://api.github.com/users/michaelsembwever/repos", "events_url": "https://api.github.com/users/michaelsembwever/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelsembwever/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417963792, "node_id": "MDU6TGFiZWwxNDE3OTYzNzky", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20storage", "name": "api: storage", "color": "6f6be5", "default": false, "description": ""}, {"id": 1598166682, "node_id": "MDU6TGFiZWwxNTk4MTY2Njgy", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20aws%20s3", "name": "drivers: aws s3", "color": "ecfc85", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-19T09:12:45Z", "updated_at": "2019-11-20T16:39:15Z", "closed_at": "2019-11-20T16:38:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1368", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1368/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1368/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1368/events", "html_url": "https://github.com/apache/libcloud/issues/1368", "id": 524524736, "node_id": "MDU6SXNzdWU1MjQ1MjQ3MzY=", "number": 1368, "title": "Download page: issues with KEYS links and gpg verify", "user": {"login": "sebbASF", "id": 16689231, "node_id": "MDQ6VXNlcjE2Njg5MjMx", "avatar_url": "https://avatars3.githubusercontent.com/u/16689231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebbASF", "html_url": "https://github.com/sebbASF", "followers_url": "https://api.github.com/users/sebbASF/followers", "following_url": "https://api.github.com/users/sebbASF/following{/other_user}", "gists_url": "https://api.github.com/users/sebbASF/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebbASF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebbASF/subscriptions", "organizations_url": "https://api.github.com/users/sebbASF/orgs", "repos_url": "https://api.github.com/users/sebbASF/repos", "events_url": "https://api.github.com/users/sebbASF/events{/privacy}", "received_events_url": "https://api.github.com/users/sebbASF/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1526746001, "node_id": "MDU6TGFiZWwxNTI2NzQ2MDAx", "url": "https://api.github.com/repos/apache/libcloud/labels/website", "name": "website", "color": "f138ff", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-18T17:58:12Z", "updated_at": "2019-11-18T22:19:22Z", "closed_at": "2019-11-18T19:06:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "The download page verification guide\r\nhttps://libcloud.apache.org/downloads.html#package-verification-guide\r\nhas two references to the KEYS file; these should be links to \r\nhttps://www.apache.org/dist/libcloud/KEYS\r\n\r\n[The initial mention of the KEYS file should ideally use just 'KEYS' as the link text, as that is how most other download pages present it]\r\n\r\n==\r\n\r\nAlso the gpg verify commands should have a second parameter as follows:\r\n\r\ngpg --verify apache-libcloud-2.3.0.tar.bz2.asc apache-libcloud-2.3.0.tar.bz2\r\n\r\nSee: https://www.apache.org/info/verification.html#specify_both", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1366", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1366/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1366/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1366/events", "html_url": "https://github.com/apache/libcloud/issues/1366", "id": 518543555, "node_id": "MDU6SXNzdWU1MTg1NDM1NTU=", "number": 1366, "title": "S3 get_driver using region name", "user": {"login": "maingoh", "id": 8860364, "node_id": "MDQ6VXNlcjg4NjAzNjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/8860364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maingoh", "html_url": "https://github.com/maingoh", "followers_url": "https://api.github.com/users/maingoh/followers", "following_url": "https://api.github.com/users/maingoh/following{/other_user}", "gists_url": "https://api.github.com/users/maingoh/gists{/gist_id}", "starred_url": "https://api.github.com/users/maingoh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maingoh/subscriptions", "organizations_url": "https://api.github.com/users/maingoh/orgs", "repos_url": "https://api.github.com/users/maingoh/repos", "events_url": "https://api.github.com/users/maingoh/events{/privacy}", "received_events_url": "https://api.github.com/users/maingoh/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417963792, "node_id": "MDU6TGFiZWwxNDE3OTYzNzky", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20storage", "name": "api: storage", "color": "6f6be5", "default": false, "description": ""}, {"id": 1598166682, "node_id": "MDU6TGFiZWwxNTk4MTY2Njgy", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20aws%20s3", "name": "drivers: aws s3", "color": "ecfc85", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-06T15:25:25Z", "updated_at": "2019-11-26T10:41:22Z", "closed_at": "2019-11-26T10:41:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason it seems there is one driver for each S3 region.\r\nThus we cannot dynamically get a s3 driver depending on the region string.\r\n\r\nFor example something like this:\r\n```\r\ncls = get_driver(Provider.S3, region_name='eu-west-1')\r\n``` \r\n\r\nOr maybe it would be better to have only one S3StorageDriver class where we can specify the region during construction.\r\n\r\n```\r\ndriver = cls(access_key_id, secret_acces_key, region=region_name, region_name=region_name)\r\n```\r\n\r\nThough it seems there is two region attribute which should match. `region_name` from `S3StorageDriver` and `region` from `AWSDriver`.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1365", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1365/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1365/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1365/events", "html_url": "https://github.com/apache/libcloud/issues/1365", "id": 517759910, "node_id": "MDU6SXNzdWU1MTc3NTk5MTA=", "number": 1365, "title": "openstack v3 authentication for unscoped token fails with: TypeError: 'NoneType' object is not iterable", "user": {"login": "toabctl", "id": 276317, "node_id": "MDQ6VXNlcjI3NjMxNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/276317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/toabctl", "html_url": "https://github.com/toabctl", "followers_url": "https://api.github.com/users/toabctl/followers", "following_url": "https://api.github.com/users/toabctl/following{/other_user}", "gists_url": "https://api.github.com/users/toabctl/gists{/gist_id}", "starred_url": "https://api.github.com/users/toabctl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/toabctl/subscriptions", "organizations_url": "https://api.github.com/users/toabctl/orgs", "repos_url": "https://api.github.com/users/toabctl/repos", "events_url": "https://api.github.com/users/toabctl/events{/privacy}", "received_events_url": "https://api.github.com/users/toabctl/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1453909032, "node_id": "MDU6TGFiZWwxNDUzOTA5MDMy", "url": "https://api.github.com/repos/apache/libcloud/labels/stale", "name": "stale", "color": "ffffff", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-11-05T13:03:41Z", "updated_at": "2020-04-22T08:07:16Z", "closed_at": "2020-04-22T08:07:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nI try to authenticate against an internal OpenStack cloud that is based on OpenStack Rocky. \r\n\r\n## Detailed Information\r\n\r\nMy reproducer script is:\r\n```\r\n#!/usr/bin/python\r\nfrom libcloud.compute.types import Provider\r\nfrom libcloud.compute.providers import get_driver\r\nimport libcloud.security\r\n\r\nlibcloud.security.VERIFY_SSL_CERT = False\r\n\r\nOpenStack = get_driver(Provider.OPENSTACK)\r\no = OpenStack('myusername', 'PASSWORD',\r\n              ex_force_auth_url='https://keystone.local:5000/v3/auth/tokens',\r\n              ex_tenant_name='cloud',\r\n              ex_token_scope='unscoped',\r\n              ex_force_service_region='CustomRegion',\r\n              ex_domain_name='ldap_users',\r\n              ex_force_auth_version='3.x_password').list_images()\r\n```\r\n\r\nRunning that with the latest libcloud version from pypi (currently 2.6.0) in a virtual env results in:\r\n```\r\n$ PYTHONPATH=. python ~/tmp/test-libcloud.py \r\n/home/tom/devel/apache/libcloud/venv-2.7/lib/python2.7/site-packages/urllib3-1.25.6-py2.7.egg/urllib3/connectionpool.py:1004: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\r\n  InsecureRequestWarning,\r\nTraceback (most recent call last):\r\n  File \"/home/tom/tmp/test-libcloud.py\", line 17, in <module>\r\n    ex_force_auth_version='3.x_password').list_images()\r\n  File \"/home/tom/devel/apache/libcloud/libcloud/compute/drivers/openstack.py\", line 372, in list_images\r\n    self.connection.request('/images/detail').object, ex_only_active)\r\n  File \"/home/tom/devel/apache/libcloud/libcloud/common/openstack.py\", line 225, in request\r\n    raw=raw)\r\n  File \"/home/tom/devel/apache/libcloud/libcloud/common/base.py\", line 538, in request\r\n    action = self.morph_action_hook(action)\r\n  File \"/home/tom/devel/apache/libcloud/libcloud/common/openstack.py\", line 292, in morph_action_hook\r\n    self._populate_hosts_and_request_paths()\r\n  File \"/home/tom/devel/apache/libcloud/libcloud/common/openstack.py\", line 334, in _populate_hosts_and_request_paths\r\n    auth_version=self._auth_version)\r\n  File \"/home/tom/devel/apache/libcloud/libcloud/common/openstack_identity.py\", line 185, in __init__\r\n    service_catalog=service_catalog)\r\n  File \"/home/tom/devel/apache/libcloud/libcloud/common/openstack_identity.py\", line 428, in _parse_service_catalog_auth_v3\r\n    for item in service_catalog:\r\nTypeError: 'NoneType' object is not iterable\r\n```\r\n\r\nThe reason is that an unscoped v3 auth request does not return a service catalog. See https://docs.openstack.org/api-ref/identity/v3/?expanded=password-authentication-with-unscoped-authorization-detail,password-authentication-with-explicit-unscoped-authorization-detail,get-service-catalog-detail,password-authentication-with-scoped-authorization-detail#authentication-and-token-management\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1360", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1360/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1360/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1360/events", "html_url": "https://github.com/apache/libcloud/issues/1360", "id": 513644388, "node_id": "MDU6SXNzdWU1MTM2NDQzODg=", "number": 1360, "title": "list_nodes on GCE Projects Only Returns 500 Results", "user": {"login": "TheSushiChef", "id": 26059849, "node_id": "MDQ6VXNlcjI2MDU5ODQ5", "avatar_url": "https://avatars0.githubusercontent.com/u/26059849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TheSushiChef", "html_url": "https://github.com/TheSushiChef", "followers_url": "https://api.github.com/users/TheSushiChef/followers", "following_url": "https://api.github.com/users/TheSushiChef/following{/other_user}", "gists_url": "https://api.github.com/users/TheSushiChef/gists{/gist_id}", "starred_url": "https://api.github.com/users/TheSushiChef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TheSushiChef/subscriptions", "organizations_url": "https://api.github.com/users/TheSushiChef/orgs", "repos_url": "https://api.github.com/users/TheSushiChef/repos", "events_url": "https://api.github.com/users/TheSushiChef/events{/privacy}", "received_events_url": "https://api.github.com/users/TheSushiChef/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394383433, "node_id": "MDU6TGFiZWwxMzk0MzgzNDMz", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20compute", "name": "api: compute", "color": "ffbac7", "default": false, "description": ""}, {"id": 1433068064, "node_id": "MDU6TGFiZWwxNDMzMDY4MDY0", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20gce", "name": "drivers: gce", "color": "fcbff8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-29T01:41:36Z", "updated_at": "2020-01-24T08:40:07Z", "closed_at": "2020-01-24T08:40:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhen running list_nodes against a GCE environment that has greater than 500 instances, only the top 500 results will be returned.\r\n\r\n## Detailed Information\r\n\r\nUsing libcloud 2.6.0, running list_nodes using the GCE Provider will only return the top 500 results. This is similar to issue #1203 where the list_nodes function is running self.connection.request rather than self.connection.request_aggregated_items.\r\n\r\nI believe changing lines 19-23 of the list_nodes function to something like this will fix the issue:\r\n\r\n```\r\nif zone is None:\r\n        response = self.connection.request_aggregated_items('instances')\r\n    else:\r\n        request = '/zones/%s/instances' % (zone.name)\r\n        response = self.connection.request(request, method='GET').object\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1356", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1356/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1356/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1356/events", "html_url": "https://github.com/apache/libcloud/issues/1356", "id": 504850022, "node_id": "MDU6SXNzdWU1MDQ4NTAwMjI=", "number": 1356, "title": "GCE node deletion times out - allow an async option", "user": {"login": "zimventures", "id": 23481310, "node_id": "MDQ6VXNlcjIzNDgxMzEw", "avatar_url": "https://avatars2.githubusercontent.com/u/23481310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zimventures", "html_url": "https://github.com/zimventures", "followers_url": "https://api.github.com/users/zimventures/followers", "following_url": "https://api.github.com/users/zimventures/following{/other_user}", "gists_url": "https://api.github.com/users/zimventures/gists{/gist_id}", "starred_url": "https://api.github.com/users/zimventures/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zimventures/subscriptions", "organizations_url": "https://api.github.com/users/zimventures/orgs", "repos_url": "https://api.github.com/users/zimventures/repos", "events_url": "https://api.github.com/users/zimventures/events{/privacy}", "received_events_url": "https://api.github.com/users/zimventures/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394383433, "node_id": "MDU6TGFiZWwxMzk0MzgzNDMz", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20compute", "name": "api: compute", "color": "ffbac7", "default": false, "description": ""}, {"id": 1433068064, "node_id": "MDU6TGFiZWwxNDMzMDY4MDY0", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20gce", "name": "drivers: gce", "color": "fcbff8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-10-09T19:34:43Z", "updated_at": "2019-12-24T18:38:35Z", "closed_at": "2019-12-24T18:38:35Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Feature Request\r\nCurrently the GCE `node_delete()` function uses the `async_request()` call (which ironically isn't actually async). Deleting a basic n1-standard-1 node running Centos in us-central times out every time. This isn't an uncommon occurrence. Searching the intertubes there are other references of other projects having the same issue:\r\n\r\nhttps://github.com/kubevirt/cloud-image-builder/issues/72\r\nhttps://github.com/ansible/ansible/issues/29597\r\n\r\nThe current way to avoid the timeout is to use the `ex_destroy_multiple_nodes()` function with a gigantic timeout value. An option, for sure, but not flexible enough. \r\n\r\nAn easy solution in this case would be to offer both a sync and async option for deletion. Applications can poll, if desired. Thankfully, the async option is fairly straightforward, defaulting to the current sync mode of operation:\r\n\r\n```python\r\n        if sync:\r\n            self.connection.async_request(request, method='DELETE')\r\n        else:\r\n            self.connection.request(request, method='DELETE')\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1355", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1355/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1355/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1355/events", "html_url": "https://github.com/apache/libcloud/issues/1355", "id": 504334325, "node_id": "MDU6SXNzdWU1MDQzMzQzMjU=", "number": 1355, "title": "Unable to create a driver for GCE", "user": {"login": "g-awmalik", "id": 21246369, "node_id": "MDQ6VXNlcjIxMjQ2MzY5", "avatar_url": "https://avatars0.githubusercontent.com/u/21246369?v=4", "gravatar_id": "", "url": "https://api.github.com/users/g-awmalik", "html_url": "https://github.com/g-awmalik", "followers_url": "https://api.github.com/users/g-awmalik/followers", "following_url": "https://api.github.com/users/g-awmalik/following{/other_user}", "gists_url": "https://api.github.com/users/g-awmalik/gists{/gist_id}", "starred_url": "https://api.github.com/users/g-awmalik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/g-awmalik/subscriptions", "organizations_url": "https://api.github.com/users/g-awmalik/orgs", "repos_url": "https://api.github.com/users/g-awmalik/repos", "events_url": "https://api.github.com/users/g-awmalik/events{/privacy}", "received_events_url": "https://api.github.com/users/g-awmalik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-08T23:47:49Z", "updated_at": "2019-10-09T19:30:59Z", "closed_at": "2019-10-09T19:30:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nWhile running gce_demo.py, I always get the this exception:\r\n\r\nFile \"/Users/awmalik/Library/Python/2.7/lib/python/site-packages/libcloud/common/google.py\", line 483, in __init__\r\n    raise GoogleAuthError('cryptography library required for '\r\nlibcloud.common.google.GoogleAuthError: 'cryptography library required for Service Account Authentication.'\r\n\r\n## Detailed Information\r\n\r\nHere's the full stacktrace for the exception when I try to run gce_demo.py\r\n\r\nTraceback (most recent call last):\r\n  File \"gce_demo.py\", line 958, in <module>\r\n    main_compute()\r\n  File \"gce_demo.py\", line 343, in main_compute\r\n    gce = get_gce_driver()\r\n  File \"gce_demo.py\", line 112, in get_gce_driver\r\n    driver = get_driver(Provider.GCE)(*args, **kwargs)\r\n  File \"/Users/awmalik/Library/Python/2.7/lib/python/site-packages/libcloud/compute/drivers/gce.py\", line 1886, in __init__\r\n    super(GCENodeDriver, self).__init__(user_id, key, **kwargs)\r\n  File \"/Users/awmalik/Library/Python/2.7/lib/python/site-packages/libcloud/common/base.py\", line 976, in __init__\r\n    self.connection = self.connectionCls(*args, **conn_kwargs)\r\n  File \"/Users/awmalik/Library/Python/2.7/lib/python/site-packages/libcloud/compute/drivers/gce.py\", line 99, in __init__\r\n    credential_file=credential_file, **kwargs)\r\n  File \"/Users/awmalik/Library/Python/2.7/lib/python/site-packages/libcloud/common/google.py\", line 772, in __init__\r\n    user_id, key, auth_type, credential_file, scopes, **kwargs)\r\n  File \"/Users/awmalik/Library/Python/2.7/lib/python/site-packages/libcloud/common/google.py\", line 660, in __init__\r\n    self.user_id, self.key, self.scopes, **kwargs)\r\n  File \"/Users/awmalik/Library/Python/2.7/lib/python/site-packages/libcloud/common/google.py\", line 483, in __init__\r\n    raise GoogleAuthError('cryptography library required for '\r\nlibcloud.common.google.GoogleAuthError: 'cryptography library required for Service Account Authentication.'\r\n\r\nPython version: Python 2.7.10\r\nLibcloud version: apache_libcloud-2.6.0.dist-info\r\nPyCrypto version: pycrypto-2.6.1.dist-info", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1352", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1352/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1352/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1352/events", "html_url": "https://github.com/apache/libcloud/issues/1352", "id": 501676549, "node_id": "MDU6SXNzdWU1MDE2NzY1NDk=", "number": 1352, "title": "VCloud driver - why AdminPassword is removed from GuestCustomizationSection", "user": {"login": "KYDronePilot", "id": 33381603, "node_id": "MDQ6VXNlcjMzMzgxNjAz", "avatar_url": "https://avatars2.githubusercontent.com/u/33381603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KYDronePilot", "html_url": "https://github.com/KYDronePilot", "followers_url": "https://api.github.com/users/KYDronePilot/followers", "following_url": "https://api.github.com/users/KYDronePilot/following{/other_user}", "gists_url": "https://api.github.com/users/KYDronePilot/gists{/gist_id}", "starred_url": "https://api.github.com/users/KYDronePilot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KYDronePilot/subscriptions", "organizations_url": "https://api.github.com/users/KYDronePilot/orgs", "repos_url": "https://api.github.com/users/KYDronePilot/repos", "events_url": "https://api.github.com/users/KYDronePilot/events{/privacy}", "received_events_url": "https://api.github.com/users/KYDronePilot/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394383433, "node_id": "MDU6TGFiZWwxMzk0MzgzNDMz", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20compute", "name": "api: compute", "color": "ffbac7", "default": false, "description": ""}, {"id": 1694336691, "node_id": "MDU6TGFiZWwxNjk0MzM2Njkx", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20vmware%20vcloud", "name": "drivers: vmware vcloud", "color": "f4b22e", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-10-02T19:17:55Z", "updated_at": "2019-12-21T22:03:22Z", "closed_at": "2019-12-21T22:03:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nThere are 2 places in the VCloud driver code that remove the AdminPassword parameter from the GuestCustomizationSection of an API request due to an \"API quirk\", which I cannot find the origin of.\r\n\r\n## Detailed Information\r\n\r\nVersion of libcloud: forked from commit a3334dc9, version 2.6.1-dev\r\nPython version: 3.7.4\r\nOS: Windows 10 1903\r\n\r\nThe error response I am getting from VCloud:\r\n```xml\r\n<ns0:Error majorErrorCode=\"400\" message=\"[ xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx ] The administrator password cannot be empty when it is enabled and automatic password generation is not selected.\" minorErrorCode=\"BAD_REQUEST\" xmlns:ns0=\"http://www.vmware.com/vcloud/v1.5\"/>\r\n```\r\n\r\nMore info on the GuestCustomizationSection can be found [here](https://www.vmware.com/support/vcd/doc/rest-api-doc-1.5-html/types/GuestCustomizationSectionType.html)\r\n\r\nI am mainly interested in what the API quirk was that lead to this code being added. I am currently working on adding some new features to the libcloud driver and would be happy to implement any changes necessary if I have a better idea of what the problem is. From some quick digging around, it looks like the changes were added by **Michal Galet**.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1348", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1348/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1348/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1348/events", "html_url": "https://github.com/apache/libcloud/issues/1348", "id": 486895520, "node_id": "MDU6SXNzdWU0ODY4OTU1MjA=", "number": 1348, "title": "Download page must use HTTPS for sigs and hashes", "user": {"login": "sebbASF", "id": 16689231, "node_id": "MDQ6VXNlcjE2Njg5MjMx", "avatar_url": "https://avatars3.githubusercontent.com/u/16689231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebbASF", "html_url": "https://github.com/sebbASF", "followers_url": "https://api.github.com/users/sebbASF/followers", "following_url": "https://api.github.com/users/sebbASF/following{/other_user}", "gists_url": "https://api.github.com/users/sebbASF/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebbASF/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebbASF/subscriptions", "organizations_url": "https://api.github.com/users/sebbASF/orgs", "repos_url": "https://api.github.com/users/sebbASF/repos", "events_url": "https://api.github.com/users/sebbASF/events{/privacy}", "received_events_url": "https://api.github.com/users/sebbASF/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1526746001, "node_id": "MDU6TGFiZWwxNTI2NzQ2MDAx", "url": "https://api.github.com/repos/apache/libcloud/labels/website", "name": "website", "color": "f138ff", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-29T11:14:55Z", "updated_at": "2019-08-29T20:09:59Z", "closed_at": "2019-08-29T20:09:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "The download page must use HTTPS for sigs (.asc) and hashes (.sha512/.sha256).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1346", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1346/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1346/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1346/events", "html_url": "https://github.com/apache/libcloud/issues/1346", "id": 485409297, "node_id": "MDU6SXNzdWU0ODU0MDkyOTc=", "number": 1346, "title": "GCE ex_list_instancegroups('all') raises KeyError 'zone'", "user": {"login": "kartiksubbarao", "id": 134209, "node_id": "MDQ6VXNlcjEzNDIwOQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/134209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kartiksubbarao", "html_url": "https://github.com/kartiksubbarao", "followers_url": "https://api.github.com/users/kartiksubbarao/followers", "following_url": "https://api.github.com/users/kartiksubbarao/following{/other_user}", "gists_url": "https://api.github.com/users/kartiksubbarao/gists{/gist_id}", "starred_url": "https://api.github.com/users/kartiksubbarao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kartiksubbarao/subscriptions", "organizations_url": "https://api.github.com/users/kartiksubbarao/orgs", "repos_url": "https://api.github.com/users/kartiksubbarao/repos", "events_url": "https://api.github.com/users/kartiksubbarao/events{/privacy}", "received_events_url": "https://api.github.com/users/kartiksubbarao/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394383433, "node_id": "MDU6TGFiZWwxMzk0MzgzNDMz", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20compute", "name": "api: compute", "color": "ffbac7", "default": false, "description": ""}, {"id": 1433068064, "node_id": "MDU6TGFiZWwxNDMzMDY4MDY0", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20gce", "name": "drivers: gce", "color": "fcbff8", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-08-26T19:36:20Z", "updated_at": "2019-12-24T22:13:29Z", "closed_at": "2019-12-24T19:23:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nThe GCE ex_list_instancegroups('all') call raises KeyError 'zone'.\r\n\r\n## Detailed Information\r\n\r\nLibcloud 2.5.0\r\nPython 3.5\r\nUbuntu 16.04.6 LTS\r\n\r\nThe error is caused by line 9092 of gce.py in the `_to_instancegroup()` function:\r\n```\r\nzone = self.ex_get_zone(instancegroup['zone'])\r\n```\r\nThe code is expecting the instancegroup dict to have a `zone` attribute, but that's not always the case. The underlying GCE API endpoint `/aggregated/instanceGroups` can also return objects that have a `region` attribute but not a `zone` attribute. Example:\r\n\r\n```\r\n{'creationTimestamp': '2019-05-20T12:00:00.000-08:00',\r\n 'description': 'This instance group is controlled by Regional Instance Group '\r\n                \"Manager 'abcd-ef-ghij'. To modify instances in this group, \"\r\n                'use the Regional Instance Group Manager API: '\r\n                'https://cloud.google.com/compute/docs/reference/latest/instanceGroupManagers',\r\n 'fingerprint': 'AbCdEfGHiJK=',\r\n 'id': '12345678901234567',\r\n 'kind': 'compute#instanceGroup',\r\n 'name': 'abcd-ef-ghij',\r\n 'namedPorts': [{'name': 'https', 'port': 443}],\r\n 'network': 'https://www.googleapis.com/compute/v1/projects/testproj1/global/networks/ab',\r\n 'region': 'https://www.googleapis.com/compute/v1/projects/testproj1/regions/us-west1',\r\n 'selfLink': 'https://www.googleapis.com/compute/v1/projects/testproj1/regions/us-west1/instanceGroups/abcd-ef-ghij',\r\n 'size': 0,\r\n 'subnetwork': 'https://www.googleapis.com/compute/v1/projects/testproj1/regions/us-west1/subnetworks/asdf1234'}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1342", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1342/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1342/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1342/events", "html_url": "https://github.com/apache/libcloud/issues/1342", "id": 482151440, "node_id": "MDU6SXNzdWU0ODIxNTE0NDA=", "number": 1342, "title": "Add missing \"cpuPlatform\" field to GCE driver", "user": {"login": "yairshemla", "id": 46296463, "node_id": "MDQ6VXNlcjQ2Mjk2NDYz", "avatar_url": "https://avatars3.githubusercontent.com/u/46296463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yairshemla", "html_url": "https://github.com/yairshemla", "followers_url": "https://api.github.com/users/yairshemla/followers", "following_url": "https://api.github.com/users/yairshemla/following{/other_user}", "gists_url": "https://api.github.com/users/yairshemla/gists{/gist_id}", "starred_url": "https://api.github.com/users/yairshemla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yairshemla/subscriptions", "organizations_url": "https://api.github.com/users/yairshemla/orgs", "repos_url": "https://api.github.com/users/yairshemla/repos", "events_url": "https://api.github.com/users/yairshemla/events{/privacy}", "received_events_url": "https://api.github.com/users/yairshemla/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-19T07:32:41Z", "updated_at": "2019-08-28T19:28:21Z", "closed_at": "2019-08-28T19:28:20Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Add \"cpuPlatform\" and \"minCpuPlatform\" to GCE driver.\r\nThis field is already being fetched by libcloud, but gets discarded during the `_to_node` method.\r\n\r\non file `compute/drivers/gce.py`, line 8852 add:\r\n`extra['cpuPlatform'] = node.get('cpuPlatform')`\r\n`extra['minCpuPlatform'] = node.get('minCpuPlatform')`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1338", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1338/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1338/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1338/events", "html_url": "https://github.com/apache/libcloud/issues/1338", "id": 477859197, "node_id": "MDU6SXNzdWU0Nzc4NTkxOTc=", "number": 1338, "title": "Backblaze B2: AUTH_API_HOST not picking up the default", "user": {"login": "nocko", "id": 238216, "node_id": "MDQ6VXNlcjIzODIxNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/238216?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nocko", "html_url": "https://github.com/nocko", "followers_url": "https://api.github.com/users/nocko/followers", "following_url": "https://api.github.com/users/nocko/following{/other_user}", "gists_url": "https://api.github.com/users/nocko/gists{/gist_id}", "starred_url": "https://api.github.com/users/nocko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nocko/subscriptions", "organizations_url": "https://api.github.com/users/nocko/orgs", "repos_url": "https://api.github.com/users/nocko/repos", "events_url": "https://api.github.com/users/nocko/events{/privacy}", "received_events_url": "https://api.github.com/users/nocko/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417963792, "node_id": "MDU6TGFiZWwxNDE3OTYzNzky", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20storage", "name": "api: storage", "color": "6f6be5", "default": false, "description": ""}, {"id": 1489167766, "node_id": "MDU6TGFiZWwxNDg5MTY3NzY2", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20backblaze%20b2", "name": "drivers: backblaze b2", "color": "2f1191", "default": false, "description": ""}, {"id": 1489167948, "node_id": "MDU6TGFiZWwxNDg5MTY3OTQ4", "url": "https://api.github.com/repos/apache/libcloud/labels/issue:%20bug", "name": "issue: bug", "color": "ed9e87", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-07T11:03:08Z", "updated_at": "2019-08-09T13:42:28Z", "closed_at": "2019-08-09T13:42:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Running the demo code in the docs:\r\n\r\n```\r\nfrom libcloud.storage.types import Provider\r\nfrom libcloud.storage.providers import get_driver\r\n\r\naccount_id = 'XXXXXX'\r\napplication_key = 'YYYYYY'\r\n\r\ncls = get_driver(Provider.BACKBLAZE_B2)\r\ndriver = cls(account_id, application_key)\r\ndriver.list_containers()\r\n```\r\n\r\nProduces the error:\r\n\r\n```\r\nrequests.exceptions.ConnectionError: HTTPSConnectionPool(host='none', port=443): Max retries exceeded with url: /b2api/v1/b2_list_buckets?accountId=xxxxxxxxxx (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x7f7366797610>: Failed to establish a new connection: [Errno -5] No address associated with hostname'))\r\n\r\n```\r\nIf the host is supplied to the constructor, then it works as intended:\r\n```\r\ndriver = cls(account_id, application_key, host='api.backblaze.com')\r\n```\r\n\r\nI can replicate this on Python 2 and Python 3. I am using libcloud via django-storages, so there isn't a way for me to pass the hostname via the constructor. \r\n\r\nLooking at the backblaze provider the default host is provided and correct, but somehow not making it into the connection object before request is called.\r\n\r\nI can take another look at this this afternoon, but a patch didn't jump out at me immediately.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1336", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1336/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1336/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1336/events", "html_url": "https://github.com/apache/libcloud/issues/1336", "id": 477236542, "node_id": "MDU6SXNzdWU0NzcyMzY1NDI=", "number": 1336, "title": "Error with proxy_url in OpenStack auth", "user": {"login": "micafer", "id": 4972699, "node_id": "MDQ6VXNlcjQ5NzI2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4972699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micafer", "html_url": "https://github.com/micafer", "followers_url": "https://api.github.com/users/micafer/followers", "following_url": "https://api.github.com/users/micafer/following{/other_user}", "gists_url": "https://api.github.com/users/micafer/gists{/gist_id}", "starred_url": "https://api.github.com/users/micafer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micafer/subscriptions", "organizations_url": "https://api.github.com/users/micafer/orgs", "repos_url": "https://api.github.com/users/micafer/repos", "events_url": "https://api.github.com/users/micafer/events{/privacy}", "received_events_url": "https://api.github.com/users/micafer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-06T08:19:43Z", "updated_at": "2019-08-06T19:32:41Z", "closed_at": "2019-08-06T19:32:41Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nAn error appears when using some OpenStack auth classes where this new ``proxy_url`` parameter has not been added.\r\n\r\nError introduced in commit: c20cf0180dbd30fb4010aba259746808576f9aa8 from PR ##1324.\r\n\r\n## Detailed Information\r\n\r\nI get the error when trying to use the OpenStackIdentity_3_0_Connection_OIDC_access_token class. But it will appear using any other auth classes where the ``proxy_url`` parameter has not been added.\r\n\r\nThe error shown is:\r\n```python\r\n  File \"/libcloud/compute/drivers/openstack.py\", line 417, in ex_get_node_details\r\n    resp = self.connection.request(uri, method='GET')\r\n  File \"/libcloud/common/openstack.py\", line 225, in request\r\n    raw=raw)\r\n  File \"/libcloud/common/base.py\", line 538, in request\r\n    action = self.morph_action_hook(action)\r\n  File \"/libcloud/common/openstack.py\", line 292, in morph_action_hook\r\n    self._populate_hosts_and_request_paths()\r\n  File \"/libcloud/common/openstack.py\", line 305, in _populate_hosts_and_request_paths\r\n    osa = self.get_auth_class()\r\n  File \"/libcloud/common/openstack.py\", line 206, in get_auth_class\r\n    parent_conn=self)\r\nTypeError: __init__() got an unexpected keyword argument 'proxy_url'\r\n\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1334", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1334/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1334/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1334/events", "html_url": "https://github.com/apache/libcloud/issues/1334", "id": 476732035, "node_id": "MDU6SXNzdWU0NzY3MzIwMzU=", "number": 1334, "title": "Softlayer Servers always created with Hourly Billing (regardless of ex_hourly value)", "user": {"login": "r2ronoha", "id": 15330641, "node_id": "MDQ6VXNlcjE1MzMwNjQx", "avatar_url": "https://avatars3.githubusercontent.com/u/15330641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r2ronoha", "html_url": "https://github.com/r2ronoha", "followers_url": "https://api.github.com/users/r2ronoha/followers", "following_url": "https://api.github.com/users/r2ronoha/following{/other_user}", "gists_url": "https://api.github.com/users/r2ronoha/gists{/gist_id}", "starred_url": "https://api.github.com/users/r2ronoha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r2ronoha/subscriptions", "organizations_url": "https://api.github.com/users/r2ronoha/orgs", "repos_url": "https://api.github.com/users/r2ronoha/repos", "events_url": "https://api.github.com/users/r2ronoha/events{/privacy}", "received_events_url": "https://api.github.com/users/r2ronoha/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-05T08:46:29Z", "updated_at": "2019-08-19T19:26:03Z", "closed_at": "2019-08-19T19:26:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\nSoftlayer server are always created as Hourly Billing, regardless of what value (False / True) is passed on the ex_hourly parameter to deploy_server or create_server\r\n\r\n## Detailed Information\r\n\r\nIn the create_node method of the Softlayer driver, the ex_hourly parameter is converted to string ('true' / 'false') to forward it in the data to the createObject method of the Softlayer API.\r\nNonetheless, the API is expecting a boolean param, and it is setting the default value (hourly = true), resulting in always creating hourly billed instances.\r\n\r\n- Test via libcloud to set Monthly Billing (ex_hourly = False):\r\n-- Formatted data:\r\n`{'domain': 'wandera.com', 'localDiskFlag': 'true', 'maxMemory': '4', 'blockDevices': [{'device': '0', 'diskImage': {'capacity': 100}}], 'networkComponents': [{'maxSpeed': 100}], 'datacenter': {'name': 'tor01'}, 'hourlyBillingFlag': 'false', 'hostname': 'test.example.com', 'startCpus': '2', 'operatingSystemReferenceCode': 'UBUNTU_18_64', 'sshKeys': [{'id': key_id}]}`\r\n-- Setting: `'hourlyBillingFlag': 'false'`\r\n-- Result: Server created with Hourly Billing\r\n\r\nI did some manual tests directly to the SL API:\r\n\r\n- Same format as libcloud:\r\n-- Request:\r\n`curl -X POST --data '{\"parameters\":[[{\"domain\":\"wandera.com\",\"localDiskFlag\":\"true\",\"maxMemory\":\"4\",\"blockDevices\":[{\"device\":\"0\",\"diskImage\":{\"capacity\":100}}],\"networkComponents\":[{\"maxSpeed\":100}],\"datacenter\":{\"name\":\"tor01\"},\"hourlyBillingFlag\":\"false\",\"hostname\":\"test.example.com\",\"startCpus\":\"2\",\"operatingSystemReferenceCode\":\"UBUNTU_18_64\",\"sshKeys\":[{\"id\":key_id}]}]]}' -u <username>:<api_token> https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/createObjects.json`\r\n-- Setting: `\"hourlyBillingFlag\": \"false\"`\r\n-- Result: Server created with Hourly Billing\r\n\r\n- Sent as boolean:\r\n-- Request:\r\n`curl -X POST --data '{\"parameters\":[[{\"domain\":\"wandera.com\",\"localDiskFlag\":\"true\",\"maxMemory\":\"4\",\"blockDevices\":[{\"device\":\"0\",\"diskImage\":{\"capater\":{\"name\":\"tor01\"},\"hourlyBillingFlag\":false,\"hostname\":\"test.example.com\",\"startCpus\":\"2\",\"operatingSystemReferenceCode\":\"UBUNTU_18_64\",\"sshKeys\":[{\"id\":key_id}]}]]}' -u <username>:<api_token> https://api.softlayer.com/rest/v3/SoftLayer_Virtual_Guest/createObjects.json`\r\n-- Setting: `\"hourlyBillingFlag\": false`\r\n-- Result: Server created with Monthly Billing", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1330", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1330/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1330/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1330/events", "html_url": "https://github.com/apache/libcloud/issues/1330", "id": 475605761, "node_id": "MDU6SXNzdWU0NzU2MDU3NjE=", "number": 1330, "title": "Add function to remove a security group from a node in OpenStack driver", "user": {"login": "micafer", "id": 4972699, "node_id": "MDQ6VXNlcjQ5NzI2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4972699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micafer", "html_url": "https://github.com/micafer", "followers_url": "https://api.github.com/users/micafer/followers", "following_url": "https://api.github.com/users/micafer/following{/other_user}", "gists_url": "https://api.github.com/users/micafer/gists{/gist_id}", "starred_url": "https://api.github.com/users/micafer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micafer/subscriptions", "organizations_url": "https://api.github.com/users/micafer/orgs", "repos_url": "https://api.github.com/users/micafer/repos", "events_url": "https://api.github.com/users/micafer/events{/privacy}", "received_events_url": "https://api.github.com/users/micafer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-01T10:34:18Z", "updated_at": "2019-08-07T09:05:59Z", "closed_at": "2019-08-07T08:22:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Add function to remove a security group from a node in OpenStack driver\r\n\r\nAdd function to remove a security group from a node. See the API info from:\r\n\r\nhttps://docs.openstack.org/api-ref/compute/?expanded=remove-security-group-from-a-server-removesecuritygroup-action-detail#remove-security-group-from-a-server-removesecuritygroup-action\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1322", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1322/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1322/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1322/events", "html_url": "https://github.com/apache/libcloud/issues/1322", "id": 471613663, "node_id": "MDU6SXNzdWU0NzE2MTM2NjM=", "number": 1322, "title": "list_container_objects doesn't work for Azure blob storage under python 2.7.5", "user": {"login": "charlesyc", "id": 7031458, "node_id": "MDQ6VXNlcjcwMzE0NTg=", "avatar_url": "https://avatars2.githubusercontent.com/u/7031458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/charlesyc", "html_url": "https://github.com/charlesyc", "followers_url": "https://api.github.com/users/charlesyc/followers", "following_url": "https://api.github.com/users/charlesyc/following{/other_user}", "gists_url": "https://api.github.com/users/charlesyc/gists{/gist_id}", "starred_url": "https://api.github.com/users/charlesyc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/charlesyc/subscriptions", "organizations_url": "https://api.github.com/users/charlesyc/orgs", "repos_url": "https://api.github.com/users/charlesyc/repos", "events_url": "https://api.github.com/users/charlesyc/events{/privacy}", "received_events_url": "https://api.github.com/users/charlesyc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1417963792, "node_id": "MDU6TGFiZWwxNDE3OTYzNzky", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20storage", "name": "api: storage", "color": "6f6be5", "default": false, "description": ""}, {"id": 1417963728, "node_id": "MDU6TGFiZWwxNDE3OTYzNzI4", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20azure", "name": "drivers: azure", "color": "bdfca6", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2019-07-23T10:27:02Z", "updated_at": "2019-08-23T16:46:58Z", "closed_at": "2019-08-23T16:46:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\n\r\n`list_container_objects` doesn't work for Azure blob storage under python 2.7.5\r\n\r\n## Detailed Information\r\n\r\n###libcloud version:\r\n2.5.0/2.4.0\r\n\r\n###Python version:\r\n2.7.5\r\n\r\n###Operating System:\r\nRHEL 7.3\r\n\r\n###Steps which are needed to reproduce it:\r\nUsing the following code to list objects in Azure blob container:\r\n```\r\nfrom libcloud.storage.types import Provider\r\nfrom libcloud.storage.providers import get_driver\r\n\r\ncls = get_driver(Provider.AZURE_BLOBS)\r\ndriver = cls(key='XXX', secret='XXXXXXXX')\r\ncontainer = driver.get_container('myContainer')\r\nobjs = driver.list_container_objects(container, '123')\r\n\r\nprint objs\r\n```\r\n\r\nIt will throw the following exception at line `objs = driver.list_container_objects(container, '123')`:\r\n```\r\n>>> objs = driver.list_container_objects(container, '123')\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib/python2.7/site-packages/libcloud/storage/drivers/azure_blobs.py\", line 437, in list_container_objects\r\n    ex_prefix=ex_prefix))\r\n  File \"/usr/lib/python2.7/site-packages/libcloud/storage/drivers/azure_blobs.py\", line 401, in iterate_container_objects\r\n    params=params)\r\n  File \"/usr/lib/python2.7/site-packages/libcloud/common/base.py\", line 636, in request\r\n    response = responseCls(**kwargs)\r\n  File \"/usr/lib/python2.7/site-packages/libcloud/common/base.py\", line 155, in __init__\r\n    self.object = self.parse_body()\r\n  File \"/usr/lib/python2.7/site-packages/libcloud/common/azure.py\", line 97, in parse_body\r\n    return super(AzureResponse, self).parse_body()\r\n  File \"/usr/lib/python2.7/site-packages/libcloud/common/base.py\", line 233, in parse_body\r\n    driver=self.connection.driver)\r\nlibcloud.common.types.MalformedResponseError: <MalformedResponseException in <libcloud.storage.drivers.azure_blobs.AzureBlobsStorageDriver object at 0x7f9f08838f90> 'Failed to parse XML'>: u'\\u010f\\u0165\\u017c<?xml version=\"1.0\" encoding=\"utf-8\"?><EnumerationResults ContainerName=\"https://.....\r\n```\r\n\r\nThe response XML seems to be valid except it begins with `u'\\u010f\\u0165\\u017c`.\r\nI tried in python 2.7.15 and it works fine. Maybe this issue is related to python 2.7.5 only?\r\nPython 2.7.5 is the default version for RHEL 7.3, so please help me. Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1321", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1321/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1321/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1321/events", "html_url": "https://github.com/apache/libcloud/issues/1321", "id": 470766042, "node_id": "MDU6SXNzdWU0NzA3NjYwNDI=", "number": 1321, "title": "SignatureDoesNotMatch for manual request", "user": {"login": "x-wf", "id": 18358292, "node_id": "MDQ6VXNlcjE4MzU4Mjky", "avatar_url": "https://avatars2.githubusercontent.com/u/18358292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/x-wf", "html_url": "https://github.com/x-wf", "followers_url": "https://api.github.com/users/x-wf/followers", "following_url": "https://api.github.com/users/x-wf/following{/other_user}", "gists_url": "https://api.github.com/users/x-wf/gists{/gist_id}", "starred_url": "https://api.github.com/users/x-wf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/x-wf/subscriptions", "organizations_url": "https://api.github.com/users/x-wf/orgs", "repos_url": "https://api.github.com/users/x-wf/repos", "events_url": "https://api.github.com/users/x-wf/events{/privacy}", "received_events_url": "https://api.github.com/users/x-wf/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394383433, "node_id": "MDU6TGFiZWwxMzk0MzgzNDMz", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20compute", "name": "api: compute", "color": "ffbac7", "default": false, "description": ""}, {"id": 1430953003, "node_id": "MDU6TGFiZWwxNDMwOTUzMDAz", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20ec2", "name": "drivers: ec2", "color": "edbca6", "default": false, "description": ""}, {"id": 1476510242, "node_id": "MDU6TGFiZWwxNDc2NTEwMjQy", "url": "https://api.github.com/repos/apache/libcloud/labels/status:%20not%20an%20issue", "name": "status: not an issue", "color": "abe26f", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-07-21T10:23:34Z", "updated_at": "2019-07-31T20:43:26Z", "closed_at": "2019-07-30T17:11:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Summary\r\nWhile attempting to perform a manual request, it appears to be an issue with the credentials being used.\r\n\r\n\r\n## Detailed Information\r\n\r\nUpon attempting to create EC2 Launch Template, by performing a manual request with the EC2 driver, it's returning `libcloud.common.types.InvalidCredsError: 'SignatureDoesNotMatch`\r\n\r\nMore specifically I have a function which I attempt to create a simple Launch Template\r\n```\r\ndef initialize_test():\r\n\r\n    # authenticate\r\n    aws = get_driver(Provider.EC2)\r\n    driver = login_aws(aws)\r\n\r\n    // Other actions that are used e.g. driver.ex_create_security_group works perfect\r\n    // Manually performing requests isn't working\r\n    new_template(driver)\r\n    \r\ndef new_template(driver):\r\n    params = {\r\n        'Action': 'CreateLaunchTemplate',\r\n        'LaunchTemplateName': \"test-template\",\r\n        'LaunchTemplateData': {\r\n            'ImageId': \"ami-06b41651a26fbba09\",\r\n            'InstanceType': \"t3.xlarge\",\r\n            'NetworkInterface': {\r\n                1: {\r\n                    'AssociatePublicIpAddress': True\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Breaks here\r\n    response = driver.connection.request(\"/\", params=params)\r\n```\r\n\r\n\r\nAnd this throws\r\n```\r\nlibcloud.common.types.InvalidCredsError: 'SignatureDoesNotMatch: The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.'\r\n```\r\nThe project used is running python 3.7.4, using apache-libcloud 2.5.0.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1319", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1319/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1319/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1319/events", "html_url": "https://github.com/apache/libcloud/issues/1319", "id": 470284402, "node_id": "MDU6SXNzdWU0NzAyODQ0MDI=", "number": 1319, "title": "Error updating port in OpenStack driver", "user": {"login": "micafer", "id": 4972699, "node_id": "MDQ6VXNlcjQ5NzI2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4972699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micafer", "html_url": "https://github.com/micafer", "followers_url": "https://api.github.com/users/micafer/followers", "following_url": "https://api.github.com/users/micafer/following{/other_user}", "gists_url": "https://api.github.com/users/micafer/gists{/gist_id}", "starred_url": "https://api.github.com/users/micafer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micafer/subscriptions", "organizations_url": "https://api.github.com/users/micafer/orgs", "repos_url": "https://api.github.com/users/micafer/repos", "events_url": "https://api.github.com/users/micafer/events{/privacy}", "received_events_url": "https://api.github.com/users/micafer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394383433, "node_id": "MDU6TGFiZWwxMzk0MzgzNDMz", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20compute", "name": "api: compute", "color": "ffbac7", "default": false, "description": ""}, {"id": 1394383274, "node_id": "MDU6TGFiZWwxMzk0MzgzMjc0", "url": "https://api.github.com/repos/apache/libcloud/labels/bug%20fix", "name": "bug fix", "color": "2393dd", "default": false, "description": ""}, {"id": 1417963403, "node_id": "MDU6TGFiZWwxNDE3OTYzNDAz", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20openstack", "name": "drivers: openstack", "color": "c4b7f7", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-19T11:47:56Z", "updated_at": "2019-08-01T17:38:23Z", "closed_at": "2019-08-01T17:38:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Summary\r\n\r\nThere is an error in the ex_update_port function.\r\nIt returns 500 error.\r\n\r\n## Detailed Information\r\n\r\nThere is an error in the request as the data parameter is not set.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1317", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1317/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1317/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1317/events", "html_url": "https://github.com/apache/libcloud/issues/1317", "id": 470019692, "node_id": "MDU6SXNzdWU0NzAwMTk2OTI=", "number": 1317, "title": "azure_arm: delete public IP address (ex_delete_public_ip)", "user": {"login": "redha1419", "id": 20328762, "node_id": "MDQ6VXNlcjIwMzI4NzYy", "avatar_url": "https://avatars0.githubusercontent.com/u/20328762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/redha1419", "html_url": "https://github.com/redha1419", "followers_url": "https://api.github.com/users/redha1419/followers", "following_url": "https://api.github.com/users/redha1419/following{/other_user}", "gists_url": "https://api.github.com/users/redha1419/gists{/gist_id}", "starred_url": "https://api.github.com/users/redha1419/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/redha1419/subscriptions", "organizations_url": "https://api.github.com/users/redha1419/orgs", "repos_url": "https://api.github.com/users/redha1419/repos", "events_url": "https://api.github.com/users/redha1419/events{/privacy}", "received_events_url": "https://api.github.com/users/redha1419/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1394383433, "node_id": "MDU6TGFiZWwxMzk0MzgzNDMz", "url": "https://api.github.com/repos/apache/libcloud/labels/api:%20compute", "name": "api: compute", "color": "ffbac7", "default": false, "description": ""}, {"id": 1417963728, "node_id": "MDU6TGFiZWwxNDE3OTYzNzI4", "url": "https://api.github.com/repos/apache/libcloud/labels/drivers:%20azure", "name": "drivers: azure", "color": "bdfca6", "default": false, "description": ""}, {"id": 1459174092, "node_id": "MDU6TGFiZWwxNDU5MTc0MDky", "url": "https://api.github.com/repos/apache/libcloud/labels/feature%20request", "name": "feature request", "color": "bf1162", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-18T22:27:27Z", "updated_at": "2019-07-22T13:46:23Z", "closed_at": "2019-07-22T13:46:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "## Feature Request\r\n\r\nThis feature is just a function with in the azure_arm driver. Lib cloud users can now delete Azure ARM public ip address resources. the ex_delete_resource() method could not be used as  `RESOURCE_API_VERSION` is too old to support the publicIpAddress resource.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1309", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1309/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1309/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1309/events", "html_url": "https://github.com/apache/libcloud/issues/1309", "id": 466811233, "node_id": "MDU6SXNzdWU0NjY4MTEyMzM=", "number": 1309, "title": "Error in resize function in OpenStack driver", "user": {"login": "micafer", "id": 4972699, "node_id": "MDQ6VXNlcjQ5NzI2OTk=", "avatar_url": "https://avatars0.githubusercontent.com/u/4972699?v=4", "gravatar_id": "", "url": "https://api.github.com/users/micafer", "html_url": "https://github.com/micafer", "followers_url": "https://api.github.com/users/micafer/followers", "following_url": "https://api.github.com/users/micafer/following{/other_user}", "gists_url": "https://api.github.com/users/micafer/gists{/gist_id}", "starred_url": "https://api.github.com/users/micafer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/micafer/subscriptions", "organizations_url": "https://api.github.com/users/micafer/orgs", "repos_url": "https://api.github.com/users/micafer/repos", "events_url": "https://api.github.com/users/micafer/events{/privacy}", "received_events_url": "https://api.github.com/users/micafer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-07-11T10:37:41Z", "updated_at": "2019-07-12T15:38:03Z", "closed_at": "2019-07-12T15:38:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When calling the \"ex_resize\" function of the OpenStack driver I get this error:\r\n```\r\nBaseHTTPError: 400 Bad Request Invalid input for field/attribute resize. Value: {u'flavorRef': u'8', \r\n u'personality': [], u'name': u'userimage-156283439906', u'imageRef': u'0de96743-4a12-4470-b8b2-\r\n 6dc260977a40', u'metadata': {}}. Additional properties are not allowed (u'metadata', u'name', \r\n u'imageRef', u'personality' were unexpected)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/1303", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/1303/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/1303/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/1303/events", "html_url": "https://github.com/apache/libcloud/issues/1303", "id": 464234467, "node_id": "MDU6SXNzdWU0NjQyMzQ0Njc=", "number": 1303, "title": "GCE fails to find image for newer image families (i.e. ubuntu-1804-lts)", "user": {"login": "XN137", "id": 1204398, "node_id": "MDQ6VXNlcjEyMDQzOTg=", "avatar_url": "https://avatars0.githubusercontent.com/u/1204398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XN137", "html_url": "https://github.com/XN137", "followers_url": "https://api.github.com/users/XN137/followers", "following_url": "https://api.github.com/users/XN137/following{/other_user}", "gists_url": "https://api.github.com/users/XN137/gists{/gist_id}", "starred_url": "https://api.github.com/users/XN137/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XN137/subscriptions", "organizations_url": "https://api.github.com/users/XN137/orgs", "repos_url": "https://api.github.com/users/XN137/repos", "events_url": "https://api.github.com/users/XN137/events{/privacy}", "received_events_url": "https://api.github.com/users/XN137/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-04T12:14:46Z", "updated_at": "2019-07-04T21:09:22Z", "closed_at": "2019-07-04T21:09:22Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "i was trying to use `ex_create_multiple_nodes` with `ex_image_family=\"ubuntu-1804-lts\"` on libcloud `2.4.0` which ended up in this error:\r\n```\r\n  File \"<...>/libcloud/compute/drivers/gce.py\", line 5033, in ex_create_multiple_nodes\r\n    image = self.ex_get_image_from_family(ex_image_family)\r\n  File \"<...>/libcloud/compute/drivers/gce.py\", line 7209, in ex_get_image_from_family\r\n    '\\'%s\\'' % (image_family), None, None)\r\nResourceNotFoundError: \"Could not find image for family 'ubuntu-1804-lts'\"\r\n```\r\nwhile the 1604 and 1404 counter parts were working.\r\n\r\nafter some investigation i found that https://github.com/apache/libcloud/blob/b2a0d5c5ac9238ddf1fa5a36a314e6f27ec5a1de/libcloud/compute/drivers/gce.py#L7187-L7191\r\nis supposed to handle that case, but it turns out `IMAGE_PROJECTS` hasn't been updated in while:\r\nhttps://github.com/apache/libcloud/blob/b2a0d5c5ac9238ddf1fa5a36a314e6f27ec5a1de/libcloud/compute/drivers/gce.py#L1782-L1798\r\n\r\nafaik https://cloud.google.com/compute/docs/images#unshielded-images could be used to update the available image families and their matching image projects.\r\n\r\nit could also be possible that some entries in `IMAGE_PROJECTS` are actually not available anymore i.e. `ubuntu-1710`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/9", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/9/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/9/events", "html_url": "https://github.com/apache/libcloud/issues/9", "id": 635374, "node_id": "MDU6SXNzdWU2MzUzNzQ=", "number": 9, "title": "list_nodes for softlayer takes forever/doesn't complete", "user": {"login": "andytriboletti", "id": 78852, "node_id": "MDQ6VXNlcjc4ODUy", "avatar_url": "https://avatars2.githubusercontent.com/u/78852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andytriboletti", "html_url": "https://github.com/andytriboletti", "followers_url": "https://api.github.com/users/andytriboletti/followers", "following_url": "https://api.github.com/users/andytriboletti/following{/other_user}", "gists_url": "https://api.github.com/users/andytriboletti/gists{/gist_id}", "starred_url": "https://api.github.com/users/andytriboletti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andytriboletti/subscriptions", "organizations_url": "https://api.github.com/users/andytriboletti/orgs", "repos_url": "https://api.github.com/users/andytriboletti/repos", "events_url": "https://api.github.com/users/andytriboletti/events{/privacy}", "received_events_url": "https://api.github.com/users/andytriboletti/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2011-02-28T19:51:24Z", "updated_at": "2019-06-08T07:47:56Z", "closed_at": "2019-06-08T07:47:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I'm trying to do this:\n\ndrivers = [ Softlayer(sys.argv[1], sys.argv[2]) ]\n\nprint \"drivers\"\nnodes = [ driver.list_nodes() for driver in drivers ]\nprint \"nodes\"\n\nprint nodes\n\nIt hangs for a long time then has this error:\n\nTraceback (most recent call last):\n  File \"example.py\", line 28, in <module>\n    nodes = [ driver.list_nodes() for driver in drivers ]\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/site-packages/apache_libcloud-0.4.0-py2.7.egg/libcloud/drivers/softlayer.py\", line 429, in list_nodes\n    object_mask=mask\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/site-packages/apache_libcloud-0.4.0-py2.7.egg/libcloud/drivers/softlayer.py\", line 187, in request\n    return getattr(sl, method)(*params)\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/xmlrpclib.py\", line 1224, in **call**\n    return self.__send(self.__name, args)\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/xmlrpclib.py\", line 1570, in __request\n    verbose=self.__verbose\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/xmlrpclib.py\", line 1264, in request\n    return self.single_request(host, handler, request_body, verbose)\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/xmlrpclib.py\", line 1292, in single_request\n    self.send_content(h, request_body)\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/xmlrpclib.py\", line 1439, in send_content\n    connection.endheaders(request_body)\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/httplib.py\", line 937, in endheaders\n    self._send_output(message_body)\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/httplib.py\", line 797, in _send_output\n    self.send(msg)\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/httplib.py\", line 759, in send\n    self.connect()\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/httplib.py\", line 740, in connect\n    self.timeout, self.source_address)\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/socket.py\", line 571, in create_connection\n    raise err\nsocket.error: [Errno 60] Operation timed out\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/8", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/8/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/8/events", "html_url": "https://github.com/apache/libcloud/issues/8", "id": 609892, "node_id": "MDU6SXNzdWU2MDk4OTI=", "number": 8, "title": "Patch to add ex_create_tags and ex_delete_tags to EC2 driver", "user": {"login": "brandon-rhodes", "id": 166162, "node_id": "MDQ6VXNlcjE2NjE2Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/166162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandon-rhodes", "html_url": "https://github.com/brandon-rhodes", "followers_url": "https://api.github.com/users/brandon-rhodes/followers", "following_url": "https://api.github.com/users/brandon-rhodes/following{/other_user}", "gists_url": "https://api.github.com/users/brandon-rhodes/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandon-rhodes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandon-rhodes/subscriptions", "organizations_url": "https://api.github.com/users/brandon-rhodes/orgs", "repos_url": "https://api.github.com/users/brandon-rhodes/repos", "events_url": "https://api.github.com/users/brandon-rhodes/events{/privacy}", "received_events_url": "https://api.github.com/users/brandon-rhodes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2011-02-18T18:27:33Z", "updated_at": "2019-06-08T07:47:38Z", "closed_at": "2019-06-08T07:47:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is a patch that adds the ability to manage tags for Amazon EC2 instances. This ability is important, among other things, because the tag called \"Name\" specifies the name shown in EC2 control panels, including the one provided by Amazon itself.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/7", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/7/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/7/events", "html_url": "https://github.com/apache/libcloud/issues/7", "id": 552906, "node_id": "MDU6SXNzdWU1NTI5MDY=", "number": 7, "title": "Support HTTP proxies", "user": {"login": "lukecyca", "id": 366484, "node_id": "MDQ6VXNlcjM2NjQ4NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/366484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lukecyca", "html_url": "https://github.com/lukecyca", "followers_url": "https://api.github.com/users/lukecyca/followers", "following_url": "https://api.github.com/users/lukecyca/following{/other_user}", "gists_url": "https://api.github.com/users/lukecyca/gists{/gist_id}", "starred_url": "https://api.github.com/users/lukecyca/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lukecyca/subscriptions", "organizations_url": "https://api.github.com/users/lukecyca/orgs", "repos_url": "https://api.github.com/users/lukecyca/repos", "events_url": "https://api.github.com/users/lukecyca/events{/privacy}", "received_events_url": "https://api.github.com/users/lukecyca/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2011-01-26T19:24:07Z", "updated_at": "2019-06-08T07:47:27Z", "closed_at": "2019-06-08T07:47:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "My corporate network requires HTTP/S connections to go through a squid proxy.\n\nlibcloud should respect the $https_proxy environment variable so that this can work seamlessly.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/4", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/4/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/4/events", "html_url": "https://github.com/apache/libcloud/issues/4", "id": 421505, "node_id": "MDU6SXNzdWU0MjE1MDU=", "number": 4, "title": "Require Zope?", "user": {"login": "rdegges", "id": 90247, "node_id": "MDQ6VXNlcjkwMjQ3", "avatar_url": "https://avatars2.githubusercontent.com/u/90247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdegges", "html_url": "https://github.com/rdegges", "followers_url": "https://api.github.com/users/rdegges/followers", "following_url": "https://api.github.com/users/rdegges/following{/other_user}", "gists_url": "https://api.github.com/users/rdegges/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdegges/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdegges/subscriptions", "organizations_url": "https://api.github.com/users/rdegges/orgs", "repos_url": "https://api.github.com/users/rdegges/repos", "events_url": "https://api.github.com/users/rdegges/events{/privacy}", "received_events_url": "https://api.github.com/users/rdegges/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2010-11-16T08:27:18Z", "updated_at": "2010-11-16T21:20:46Z", "closed_at": "2010-11-16T21:20:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\n\nI'm trying to use libcloud on a standard ubuntu desktop 10.10 machine, in a virtualenv. If I install apache-libcloud from PyPI (eg: `pip install apache-libcloud`), then try to use it to do:\n\n`get_driver(Provider.RACKSPACE)`, libcloud's base.py will error out with an ImportError (No module named zope).\n\nSince it is impossible to install zope via PyPI (as far as I can tell), it's impossible to use the software. Furthermore, I've tried installing the ubuntu package python-zope, and zope-common, but neither will provide the zope module that libcloud requires to work.\n\nIs there a workaround for this? I assume that I'm the only one having the issue.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/apache/libcloud/issues/2", "repository_url": "https://api.github.com/repos/apache/libcloud", "labels_url": "https://api.github.com/repos/apache/libcloud/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/apache/libcloud/issues/2/comments", "events_url": "https://api.github.com/repos/apache/libcloud/issues/2/events", "html_url": "https://github.com/apache/libcloud/issues/2", "id": 338016, "node_id": "MDU6SXNzdWUzMzgwMTY=", "number": 2, "title": "this python project is vulnerable to MITM as it fails to verify the ssl validity of the remote destination", "user": {"login": "d1b", "id": 133624, "node_id": "MDQ6VXNlcjEzMzYyNA==", "avatar_url": "https://avatars2.githubusercontent.com/u/133624?v=4", "gravatar_id": "", "url": "https://api.github.com/users/d1b", "html_url": "https://github.com/d1b", "followers_url": "https://api.github.com/users/d1b/followers", "following_url": "https://api.github.com/users/d1b/following{/other_user}", "gists_url": "https://api.github.com/users/d1b/gists{/gist_id}", "starred_url": "https://api.github.com/users/d1b/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/d1b/subscriptions", "organizations_url": "https://api.github.com/users/d1b/orgs", "repos_url": "https://api.github.com/users/d1b/repos", "events_url": "https://api.github.com/users/d1b/events{/privacy}", "received_events_url": "https://api.github.com/users/d1b/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2010-09-29T05:59:42Z", "updated_at": "2019-06-08T07:47:10Z", "closed_at": "2019-06-08T07:47:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "this python project is vulnerable to MITM as it fails to verify the ssl validity of the remote destination.\nurllib / urllib2, httplib.SHTTPConnection do not verify ssl at all by default.\nfrom base.py \nclass ConnectionKey(object):\n\"\"\"\nA Base Connection class to derive from.\n\"\"\"\nconn_classes = (httplib.HTTPConnection, httplib.HTTPSConnection)\n\n....\ndef connect(self, host=None, port=None):\n.....\nconnection = self.conn_classes[self.secure](host, port)\n\nthis request can be MITMed leading to the compromise of a users API key - where a secured https connection was requested, but can be MITM'ed. \n", "performed_via_github_app": null, "score": 1.0}]}