{"total_count": 29, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/Pylons/hupper/issues/68", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/68/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/68/events", "html_url": "https://github.com/Pylons/hupper/issues/68", "id": 671579467, "node_id": "MDU6SXNzdWU2NzE1Nzk0Njc=", "number": 68, "title": "Avoid hiding subcommand's output", "user": {"login": "EmilStenstrom", "id": 224130, "node_id": "MDQ6VXNlcjIyNDEzMA==", "avatar_url": "https://avatars0.githubusercontent.com/u/224130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EmilStenstrom", "html_url": "https://github.com/EmilStenstrom", "followers_url": "https://api.github.com/users/EmilStenstrom/followers", "following_url": "https://api.github.com/users/EmilStenstrom/following{/other_user}", "gists_url": "https://api.github.com/users/EmilStenstrom/gists{/gist_id}", "starred_url": "https://api.github.com/users/EmilStenstrom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EmilStenstrom/subscriptions", "organizations_url": "https://api.github.com/users/EmilStenstrom/orgs", "repos_url": "https://api.github.com/users/EmilStenstrom/repos", "events_url": "https://api.github.com/users/EmilStenstrom/events{/privacy}", "received_events_url": "https://api.github.com/users/EmilStenstrom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-02T08:55:50Z", "updated_at": "2020-08-02T08:59:45Z", "closed_at": "2020-08-02T08:59:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/64", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/64/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/64/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/64/events", "html_url": "https://github.com/Pylons/hupper/issues/64", "id": 554369296, "node_id": "MDU6SXNzdWU1NTQzNjkyOTY=", "number": 64, "title": "Hupper does not seem to forward SIGTERM/SIGINT to the subprocess ", "user": {"login": "shughes-uk", "id": 546891, "node_id": "MDQ6VXNlcjU0Njg5MQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/546891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shughes-uk", "html_url": "https://github.com/shughes-uk", "followers_url": "https://api.github.com/users/shughes-uk/followers", "following_url": "https://api.github.com/users/shughes-uk/following{/other_user}", "gists_url": "https://api.github.com/users/shughes-uk/gists{/gist_id}", "starred_url": "https://api.github.com/users/shughes-uk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shughes-uk/subscriptions", "organizations_url": "https://api.github.com/users/shughes-uk/orgs", "repos_url": "https://api.github.com/users/shughes-uk/repos", "events_url": "https://api.github.com/users/shughes-uk/events{/privacy}", "received_events_url": "https://api.github.com/users/shughes-uk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-01-23T19:50:53Z", "updated_at": "2020-02-26T20:38:05Z", "closed_at": "2020-02-18T17:31:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hupper seems to avoid forwarding SIGTERM/SIGINT to the child process. It would be quite nice if it forward them. Especially SIGTERM as hupper does not seem to anything at all in response to that signal. \r\n\r\nThis need comes from developing my applications responses to said signals. As the default behavior for hupper on SIGINT seems to be to exit, an optional flag to simply forward it would be pretty handy.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/63", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/63/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/63/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/63/events", "html_url": "https://github.com/Pylons/hupper/issues/63", "id": 538737883, "node_id": "MDU6SXNzdWU1Mzg3Mzc4ODM=", "number": 63, "title": "Avoid DeprecationWarning due to `import imp`", "user": {"login": "merwok", "id": 635179, "node_id": "MDQ6VXNlcjYzNTE3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/635179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/merwok", "html_url": "https://github.com/merwok", "followers_url": "https://api.github.com/users/merwok/followers", "following_url": "https://api.github.com/users/merwok/following{/other_user}", "gists_url": "https://api.github.com/users/merwok/gists{/gist_id}", "starred_url": "https://api.github.com/users/merwok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/merwok/subscriptions", "organizations_url": "https://api.github.com/users/merwok/orgs", "repos_url": "https://api.github.com/users/merwok/repos", "events_url": "https://api.github.com/users/merwok/events{/privacy}", "received_events_url": "https://api.github.com/users/merwok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-16T23:25:33Z", "updated_at": "2020-02-18T17:31:44Z", "closed_at": "2020-02-18T17:31:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "Warning comes from unconditional import of `imp` module in hupper.compat", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/60", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/60/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/60/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/60/events", "html_url": "https://github.com/Pylons/hupper/issues/60", "id": 519368340, "node_id": "MDU6SXNzdWU1MTkzNjgzNDA=", "number": 60, "title": "Reload not working when app package is symlinked from site-packages", "user": {"login": "merwok", "id": 635179, "node_id": "MDQ6VXNlcjYzNTE3OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/635179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/merwok", "html_url": "https://github.com/merwok", "followers_url": "https://api.github.com/users/merwok/followers", "following_url": "https://api.github.com/users/merwok/following{/other_user}", "gists_url": "https://api.github.com/users/merwok/gists{/gist_id}", "starred_url": "https://api.github.com/users/merwok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/merwok/subscriptions", "organizations_url": "https://api.github.com/users/merwok/orgs", "repos_url": "https://api.github.com/users/merwok/repos", "events_url": "https://api.github.com/users/merwok/events{/privacy}", "received_events_url": "https://api.github.com/users/merwok/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-11-07T16:17:30Z", "updated_at": "2019-11-12T20:48:33Z", "closed_at": "2019-11-12T20:48:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "flit is a new package build tool that\u2019s I find nicer than distutils/setuptools for simple projects (issues with missing package data are gone!).  The develop install equivalent is [symlink install](https://flit.readthedocs.io/en/latest/cmdline.html#flit-install) that creates and installs `dist-info` dir + a symlink from site-packages to project dir so that imports work.  With that setup, editing a file does not cause hupper (used via pserve) to reload the app.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/54", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/54/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/54/events", "html_url": "https://github.com/Pylons/hupper/issues/54", "id": 489591231, "node_id": "MDU6SXNzdWU0ODk1OTEyMzE=", "number": 54, "title": "Hupper fails to reload app cleanly on Docker Compose environments", "user": {"login": "yeraydiazdiaz", "id": 6739793, "node_id": "MDQ6VXNlcjY3Mzk3OTM=", "avatar_url": "https://avatars1.githubusercontent.com/u/6739793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yeraydiazdiaz", "html_url": "https://github.com/yeraydiazdiaz", "followers_url": "https://api.github.com/users/yeraydiazdiaz/followers", "following_url": "https://api.github.com/users/yeraydiazdiaz/following{/other_user}", "gists_url": "https://api.github.com/users/yeraydiazdiaz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yeraydiazdiaz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yeraydiazdiaz/subscriptions", "organizations_url": "https://api.github.com/users/yeraydiazdiaz/orgs", "repos_url": "https://api.github.com/users/yeraydiazdiaz/repos", "events_url": "https://api.github.com/users/yeraydiazdiaz/events{/privacy}", "received_events_url": "https://api.github.com/users/yeraydiazdiaz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-09-05T07:59:56Z", "updated_at": "2019-10-15T01:16:34Z", "closed_at": "2019-10-15T01:16:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello all, first off thanks for hupper \ud83c\udf1f \r\n\r\nThe warehouse team uses hupper in our development stack but [recently](https://github.com/pypa/warehouse/issues/6578) we started noticing the it failed to restart on code changes. I believe this is because we invoke hupper in a Docker Compose environment causes the `input` call to fail with an EOF.\r\n\r\nWe've worked around it by pinning the hupper version to 1.7 but ideally there'd be a CLI option to prevent reading from stdin. Would that be acceptable?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/47", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/47/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/47/events", "html_url": "https://github.com/Pylons/hupper/issues/47", "id": 415012860, "node_id": "MDU6SXNzdWU0MTUwMTI4NjA=", "number": 47, "title": "Worker termination by reloader may hang forever", "user": {"login": "marc1n", "id": 1001991, "node_id": "MDQ6VXNlcjEwMDE5OTE=", "avatar_url": "https://avatars2.githubusercontent.com/u/1001991?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marc1n", "html_url": "https://github.com/marc1n", "followers_url": "https://api.github.com/users/marc1n/followers", "following_url": "https://api.github.com/users/marc1n/following{/other_user}", "gists_url": "https://api.github.com/users/marc1n/gists{/gist_id}", "starred_url": "https://api.github.com/users/marc1n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marc1n/subscriptions", "organizations_url": "https://api.github.com/users/marc1n/orgs", "repos_url": "https://api.github.com/users/marc1n/repos", "events_url": "https://api.github.com/users/marc1n/events{/privacy}", "received_events_url": "https://api.github.com/users/marc1n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-27T08:59:22Z", "updated_at": "2019-03-07T04:38:57Z", "closed_at": "2019-03-07T04:38:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Some worker processes could ignore SIGTERM signals. In such cases terminating reloader process ends with reloader process waiting for worker termination forever (in `self.worker.join()`).\r\n\r\nUgly result is that killing reloader in this state makes worker process orphan.\r\n\r\nIt seems reasonable that reloader should wait for worker termination with some (short) timeout and then kill worker with SIGKILL.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/45", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/45/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/45/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/45/events", "html_url": "https://github.com/Pylons/hupper/issues/45", "id": 407686944, "node_id": "MDU6SXNzdWU0MDc2ODY5NDQ=", "number": 45, "title": "Can I register callbacks for other purposes?", "user": {"login": "pauleveritt", "id": 455142, "node_id": "MDQ6VXNlcjQ1NTE0Mg==", "avatar_url": "https://avatars0.githubusercontent.com/u/455142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pauleveritt", "html_url": "https://github.com/pauleveritt", "followers_url": "https://api.github.com/users/pauleveritt/followers", "following_url": "https://api.github.com/users/pauleveritt/following{/other_user}", "gists_url": "https://api.github.com/users/pauleveritt/gists{/gist_id}", "starred_url": "https://api.github.com/users/pauleveritt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pauleveritt/subscriptions", "organizations_url": "https://api.github.com/users/pauleveritt/orgs", "repos_url": "https://api.github.com/users/pauleveritt/repos", "events_url": "https://api.github.com/users/pauleveritt/events{/privacy}", "received_events_url": "https://api.github.com/users/pauleveritt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-07T12:56:32Z", "updated_at": "2019-02-07T21:32:57Z", "closed_at": "2019-02-07T20:30:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have a Pyramid project where content is authored as Markdown on disk. I want treat `pserve` as an authoring server: you edit Markdown content, the browser reloads.\r\n\r\nThus I need something that watches for a recursive glob and hands changes to a callback I register. I saw the [WatchmanFileMonitor](https://docs.pylonsproject.org/projects/hupper/en/latest/api.html#hupper.watchman.WatchmanFileMonitor) discusses a callback. But I'm not sure:\r\n\r\n- How in Pyramid to get the in-use hupper to make a registration\r\n- Will it replace the callback already in use\r\n\r\nOn a related note, I see the callback is called with each file in a changeset. Does this mean, when a bunch of files are copied in, a bunch of callbacks are fired? (Would be nice to batch things.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/43", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/43/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/43/events", "html_url": "https://github.com/Pylons/hupper/issues/43", "id": 382665510, "node_id": "MDU6SXNzdWUzODI2NjU1MTA=", "number": 43, "title": "Chameleon-cache triggers reload", "user": {"login": "sallner", "id": 17002572, "node_id": "MDQ6VXNlcjE3MDAyNTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/17002572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sallner", "html_url": "https://github.com/sallner", "followers_url": "https://api.github.com/users/sallner/followers", "following_url": "https://api.github.com/users/sallner/following{/other_user}", "gists_url": "https://api.github.com/users/sallner/gists{/gist_id}", "starred_url": "https://api.github.com/users/sallner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sallner/subscriptions", "organizations_url": "https://api.github.com/users/sallner/orgs", "repos_url": "https://api.github.com/users/sallner/repos", "events_url": "https://api.github.com/users/sallner/events{/privacy}", "received_events_url": "https://api.github.com/users/sallner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-11-20T13:34:08Z", "updated_at": "2019-03-05T14:54:04Z", "closed_at": "2019-02-21T13:23:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Zope based application and want to run waitress instead of paster as wsgi server, but keep the reload feature for development. Unfortunately, when running\r\n`./bin/hupper -m my.entry.point ./paste.ini`\r\nA reload is triggered when a file in the chameleon-cache `./var/chameleon-cache` changes. Is there a possibility to exclude this directory from the monitored files?\r\n\r\nThis issue occurred on current (Arch-)Linux and MacOS with \r\nhupper 1.4\r\nZope 4.0b7\r\nChameleon 3.5\r\nand there respective dependencies.\r\n\r\nThanks for this nice tool!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/41", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/41/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/41/events", "html_url": "https://github.com/Pylons/hupper/issues/41", "id": 379489577, "node_id": "MDU6SXNzdWUzNzk0ODk1Nzc=", "number": 41, "title": "Unintended? interaction between virtualenv and ignoring installed packages", "user": {"login": "dstufft", "id": 145979, "node_id": "MDQ6VXNlcjE0NTk3OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/145979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dstufft", "html_url": "https://github.com/dstufft", "followers_url": "https://api.github.com/users/dstufft/followers", "following_url": "https://api.github.com/users/dstufft/following{/other_user}", "gists_url": "https://api.github.com/users/dstufft/gists{/gist_id}", "starred_url": "https://api.github.com/users/dstufft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dstufft/subscriptions", "organizations_url": "https://api.github.com/users/dstufft/orgs", "repos_url": "https://api.github.com/users/dstufft/repos", "events_url": "https://api.github.com/users/dstufft/events{/privacy}", "received_events_url": "https://api.github.com/users/dstufft/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-11T04:43:46Z", "updated_at": "2018-11-11T19:05:18Z", "closed_at": "2018-11-11T19:05:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm not entirely sure what the specific root cause of this issue, but I feel like the behavior here is not quite right.\r\n\r\nSo basic setup, there is a virtualenv located at ``/opt/warehouse``, and inside of that a directory called ``/opt/warehouse/src`` which has a git checkout of the Warehouse code, which is added to ``sys.path`` using ``PYTHONPATH``.\r\n\r\nNow, it just so happens that when inside of a virtual environment, the root of the virtual environment is set to be the \"data\" path (``sysconfig.get_paths()[\"data\"]``). This means that ``/opt/warehouse`` gets detected as a \"system path\" by #40, and because the project files are in an unrelated directory within that directory, it detects the entire project as an installed project and doesn't monitor it.\r\n\r\nIt seems to me, the easiest fix would be to not use all of the paths returned by ``sysconfig.get_paths()``. There are 8 keys that can exist in the dictionary returned by that API:\r\n\r\n- data\r\n- include\r\n- platinclude\r\n- platlib\r\n- platstdlib\r\n- purelib\r\n- scripts\r\n- stdlib\r\n\r\nIt seems to me, like installed packages are not going to exist in ``data``, ``include``, ``platinclude``, and *maybe* ``scripts``, so it would make sense to exclude those directories from the paths you get from ``sysconfig.get_paths()``.\r\n\r\nAnother option would be, instead of doing a simple startswith, is to figure out which ``sys.path`` entry this file is imported from (by comparing the filename to every entry in ``sys.path, and making it \"owned\" by whichever ``sys.path`` entry is longer *and* is a prefix match), and then only ignore files whose ``sys.path`` entry matches on the system paths.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/36", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/36/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/36/events", "html_url": "https://github.com/Pylons/hupper/issues/36", "id": 334632222, "node_id": "MDU6SXNzdWUzMzQ2MzIyMjI=", "number": 36, "title": "gevent.monkey.patch_all() support", "user": {"login": "dmartinzar", "id": 912952, "node_id": "MDQ6VXNlcjkxMjk1Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/912952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmartinzar", "html_url": "https://github.com/dmartinzar", "followers_url": "https://api.github.com/users/dmartinzar/followers", "following_url": "https://api.github.com/users/dmartinzar/following{/other_user}", "gists_url": "https://api.github.com/users/dmartinzar/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmartinzar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmartinzar/subscriptions", "organizations_url": "https://api.github.com/users/dmartinzar/orgs", "repos_url": "https://api.github.com/users/dmartinzar/repos", "events_url": "https://api.github.com/users/dmartinzar/events{/privacy}", "received_events_url": "https://api.github.com/users/dmartinzar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-06-21T19:47:30Z", "updated_at": "2018-09-26T18:50:34Z", "closed_at": "2018-09-26T18:50:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Our product runs in a gevent.pywsi+Pyramid server with `monkey.patch_all()` enabled. For the most part this works great. However, the `--reload` flag to `pserve` does not work out of the box. Our application fails to start up entirely and source file changes do not trigger a reload. I did manage to get it working, but it required some tweaks. I will detail what our solution was in case you want to add support for this use case or if anyone else out there is curious how to get this working. \r\n\r\nI created a `pserve` wrapper command called `gserve`:\r\n\r\n```python\r\n#!/usr/bin/python3.6\r\nfrom gevent import monkey; monkey.patch_all()\r\nfrom ourproduct import monkey; monkey.patch_hupper()\r\nfrom pyramid.scripts.pserve import main; main()\r\n```\r\n\r\nThis ensures that gevent has a chance to patch everything before hupper or pyramid has a chance to run. This wrapper script serves as a drop-in replacement for `pserve`.\r\n\r\nThe `ourproduct.monkey.patch_hupper()` function looks like this:\r\n\r\n```python\r\ndef patch_hupper():\r\n    # Patch hupper to work with gevent so gserve --reload works!\r\n    from gevent import os\r\n    from hupper.ipc import Connection\r\n    from mock import patch\r\n    _recv_packet = Connection._recv_packet\r\n    @patch('os.read', side_effect=os.tp_read)\r\n    def _patched_recv_packet(self, tp_read):\r\n        return _recv_packet(self)\r\n    Connection._recv_packet = _patched_recv_packet\r\n```\r\n\r\ngevent does not patch `os.read` or `os.write` (see [gevent.os](http://www.gevent.org/api/gevent.os.html)). I use `mock.patch` to ensure my replacement of `os.read` only affects the `_recv_packet` method. I tried `gevent.os.nb_read` first, which did not work, then switched to `gevent.os.tp_read`.\r\n\r\nThis was enough for hupper to spawn the server in a subprocess and for basic reload functionality to work. However, the server spawned in the subprocess was no longer gevent-patched, as it is not spawned using `gserve`. This prevented the server from starting up completely as many calls were now blocking that weren't before.\r\n\r\nThe `hupper.ipc` module starts a new interpreter and then uses `hupper.ipc.spawn_main` to import and run a python function (in this case `pyramid.scripts.pserve.main`). To make sure the subprocess runs both `patch_all()` and `patch_hupper()`, I made the following change to `hupper/ipc.py`:\r\n\r\n```patch\r\n--- hupper/ipc.py\t2018-06-14 01:25:35.000000000 -0500\r\n+++ hupper/ipc.py\t2018-06-21 14:14:56.226000000 -0500\r\n@@ -250,7 +250,7 @@\r\n\r\n\r\n def get_command_line(**kwds):\r\n-    prog = 'from hupper.ipc import spawn_main; spawn_main(%s)'\r\n+    prog = 'from gevent import monkey; monkey.patch_all(); from ourproduct import monkey; monkey.patch_hupper(); from hupper.ipc import spawn_main; spawn_main(%s)'\r\n     prog %= ', '.join('%s=%r' % item for item in kwds.items())\r\n     opts = args_from_interpreter_flags()\r\n     args = [sys.executable] + opts + ['-c', prog]\r\n```\r\n\r\nAfter that hack was in place, the server remained patched after being spawned in a subprocess by hupper and would successfully reload after source changes. We're now running with that patched version of hupper, but an official solution would be nice.\r\n\r\nOne possible fix would be for us to supply hupper with code that we want executed before anything else in the subprocess. We would then be able to give it the patch statements we would like executed and it would blindly execute them prior to `from hupper.ipc import spawn_main; spawn_main(%s)`. \r\n\r\nAnother fix might be to spawn the server in yet another subprocess using the exact `sys.argv` used originally. This would cause the server to be spawned again using the `gserve` wrapper instead of hupper being provided with a module entry point (i.e. `pyramid.scripts.pserve.main`) to load and run, which ends up skipping `gserve` entirely.\r\n\r\nThoughts and comments appreciated! Hopefully this at least helps some people using `patch_all()` also utilize the `--reload` flag to `pserve`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/34", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/34/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/34/events", "html_url": "https://github.com/Pylons/hupper/issues/34", "id": 332342712, "node_id": "MDU6SXNzdWUzMzIzNDI3MTI=", "number": 34, "title": "watchman runs out of inotify instances because '/usr/lib/python2.7' is being watched", "user": {"login": "jjmurre", "id": 147069, "node_id": "MDQ6VXNlcjE0NzA2OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/147069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jjmurre", "html_url": "https://github.com/jjmurre", "followers_url": "https://api.github.com/users/jjmurre/followers", "following_url": "https://api.github.com/users/jjmurre/following{/other_user}", "gists_url": "https://api.github.com/users/jjmurre/gists{/gist_id}", "starred_url": "https://api.github.com/users/jjmurre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jjmurre/subscriptions", "organizations_url": "https://api.github.com/users/jjmurre/orgs", "repos_url": "https://api.github.com/users/jjmurre/repos", "events_url": "https://api.github.com/users/jjmurre/events{/privacy}", "received_events_url": "https://api.github.com/users/jjmurre/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-06-14T10:26:39Z", "updated_at": "2019-11-11T18:38:26Z", "closed_at": "2018-10-28T01:44:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using pserve the number of inotify instances explodes. Lots of these errors:\r\n\r\n ```\r\nThe user limit on the total number of inotify instances has been reached; increase the \r\n  fs.inotify.max_user_instances sysctl\r\n\r\n```\r\nI am running watchman. It turns out that the watchlist gets huge, and contains the path '/usr/lib/python2.7', which means that effectively all python libs are being watched. \r\n\r\nI am running inside a virtualenv. Is there maybe something wrong in my configuration? \r\n\r\nFor now, I downgraded to hupper 1.2 to solve the problem.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/30", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/30/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/30/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/30/events", "html_url": "https://github.com/Pylons/hupper/issues/30", "id": 312020528, "node_id": "MDU6SXNzdWUzMTIwMjA1Mjg=", "number": 30, "title": "add support for watchman if available", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-06T15:31:43Z", "updated_at": "2018-06-16T12:56:27Z", "closed_at": "2018-06-15T18:19:18Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://facebook.github.io/watchman/", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/26", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/26/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/26/events", "html_url": "https://github.com/Pylons/hupper/issues/26", "id": 229087414, "node_id": "MDU6SXNzdWUyMjkwODc0MTQ=", "number": 26, "title": "stop squashing certain inotify limit errors", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 463719355, "node_id": "MDU6TGFiZWw0NjM3MTkzNTU=", "url": "https://api.github.com/repos/Pylons/hupper/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-16T16:07:13Z", "updated_at": "2018-12-05T04:27:58Z", "closed_at": "2018-12-05T04:27:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See https://github.com/Pylons/pyramid/issues/2920\r\n\r\nIf we can figure out what error is being raised in `watchdog.py` when the inotify limit is reached we can stop squashing it. It would be useful output for a user.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/25", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/25/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/25/events", "html_url": "https://github.com/Pylons/hupper/issues/25", "id": 229079390, "node_id": "MDU6SXNzdWUyMjkwNzkzOTA=", "number": 25, "title": "copy sys.path to the child process", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 463719355, "node_id": "MDU6TGFiZWw0NjM3MTkzNTU=", "url": "https://api.github.com/repos/Pylons/hupper/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-16T15:42:28Z", "updated_at": "2017-05-18T20:12:44Z", "closed_at": "2017-05-18T20:12:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See https://github.com/Pylons/pyramid/issues/3043\r\n\r\nThe worker is unable to import hupper. The issue is that buildout enhances the `sys.path` of the python process and this does not survive the fork+exec. This belongs in the preparation data in `ipc.py`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/24", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/24/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/24/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/24/events", "html_url": "https://github.com/Pylons/hupper/issues/24", "id": 227318499, "node_id": "MDU6SXNzdWUyMjczMTg0OTk=", "number": 24, "title": "Cannot catch new package install until manual reload", "user": {"login": "a3kov", "id": 813860, "node_id": "MDQ6VXNlcjgxMzg2MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/813860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a3kov", "html_url": "https://github.com/a3kov", "followers_url": "https://api.github.com/users/a3kov/followers", "following_url": "https://api.github.com/users/a3kov/following{/other_user}", "gists_url": "https://api.github.com/users/a3kov/gists{/gist_id}", "starred_url": "https://api.github.com/users/a3kov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a3kov/subscriptions", "organizations_url": "https://api.github.com/users/a3kov/orgs", "repos_url": "https://api.github.com/users/a3kov/repos", "events_url": "https://api.github.com/users/a3kov/events{/privacy}", "received_events_url": "https://api.github.com/users/a3kov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-05-09T10:21:33Z", "updated_at": "2017-05-11T14:50:39Z", "closed_at": "2017-05-11T04:06:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I don't know if its a bug, but it could be.\r\n\r\n1. start `pserve --reload`\r\n2. run `pip install -e newpackage`\r\n3. pserve does not reload\r\n4. add `import newpackage` to the project code\r\n5. pserve reloads, but gets `ImportError`\r\n6. stop pserve; start pserve. Now everything is fine\r\n\r\nLooks like some package cache (?) could be involved, which is only cleared on fresh start", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/21", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/21/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/21/events", "html_url": "https://github.com/Pylons/hupper/issues/21", "id": 226085395, "node_id": "MDU6SXNzdWUyMjYwODUzOTU=", "number": 21, "title": "Add better inotify support.", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 463719357, "node_id": "MDU6TGFiZWw0NjM3MTkzNTc=", "url": "https://api.github.com/repos/Pylons/hupper/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 463719358, "node_id": "MDU6TGFiZWw0NjM3MTkzNTg=", "url": "https://api.github.com/repos/Pylons/hupper/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-03T19:10:24Z", "updated_at": "2018-06-21T09:24:14Z", "closed_at": "2018-06-15T18:19:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Watchdog is basically dead and unmaintained and has caused a couple irritating bugs for people such as https://github.com/Pylons/pyramid/issues/2920\r\n\r\nOne option is to fork watchdog into watchdog-lite that focuses on our simplified use case and doesn't ship with the cli runner that depends on pyyaml (if we did this I would consider adding it as a direct dependency of hupper). Another is to evaluate less cross-platform options such as recommending installing inotify on some systems, etc. This would be a last resort, however, because watchdog already does a pretty good job.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/18", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/18/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/18/events", "html_url": "https://github.com/Pylons/hupper/issues/18", "id": 226079355, "node_id": "MDU6SXNzdWUyMjYwNzkzNTU=", "number": 18, "title": "watch extra files from the cli", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 463719357, "node_id": "MDU6TGFiZWw0NjM3MTkzNTc=", "url": "https://api.github.com/repos/Pylons/hupper/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 463719358, "node_id": "MDU6TGFiZWw0NjM3MTkzNTg=", "url": "https://api.github.com/repos/Pylons/hupper/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-03T18:47:29Z", "updated_at": "2017-05-23T22:27:00Z", "closed_at": "2017-05-23T22:27:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Add an appending `-w` option to `hupper` to watch extra file patterns.\r\n\r\n`hupper -w foo.ini -w 'media/**' -m myapp`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/17", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/17/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/17/events", "html_url": "https://github.com/Pylons/hupper/issues/17", "id": 214176408, "node_id": "MDU6SXNzdWUyMTQxNzY0MDg=", "number": 17, "title": "stop using multiprocessing", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-03-14T19:09:35Z", "updated_at": "2017-05-11T21:37:14Z", "closed_at": "2017-05-10T18:32:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Several interesting issues have arisen in my many hours fighting multiprocessing. The most obvious is the issue with forwarding stdin to the subprocess which requires terrible hacks, especially on windows.\r\n\r\nHowever another much more subtle issue is this... on unix multiprocessing by default does not fork+exec. It only forks. This is interesting because it uses the original python interpreter. The issue is that any libraries that were already imported are not re-imported into the child process because they are already found in memory. Instead we would prefer to fork+exec a new subprocess which uses its own interpreter to get a fresh system. To be more clear, if you import a library prior to `hupper.start_reloader` and then you try to develop on that library, it will not be reloaded even though hupper says it restarted.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/14", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/14/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/14/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/14/events", "html_url": "https://github.com/Pylons/hupper/issues/14", "id": 211888457, "node_id": "MDU6SXNzdWUyMTE4ODg0NTc=", "number": 14, "title": "Usability issue with pdb", "user": {"login": "lelit", "id": 412797, "node_id": "MDQ6VXNlcjQxMjc5Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/412797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lelit", "html_url": "https://github.com/lelit", "followers_url": "https://api.github.com/users/lelit/followers", "following_url": "https://api.github.com/users/lelit/following{/other_user}", "gists_url": "https://api.github.com/users/lelit/gists{/gist_id}", "starred_url": "https://api.github.com/users/lelit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lelit/subscriptions", "organizations_url": "https://api.github.com/users/lelit/orgs", "repos_url": "https://api.github.com/users/lelit/repos", "events_url": "https://api.github.com/users/lelit/events{/privacy}", "received_events_url": "https://api.github.com/users/lelit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-04T16:05:57Z", "updated_at": "2017-03-08T08:45:29Z", "closed_at": "2017-03-08T05:48:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run my application with `hupper -m` and hit a `pdb.set_trace()`, the prompt appears and I can interact with the debugger, but neither cursors nor tab-completion work as expected. Instead they emit their raw escape sequence, for example this is what happens when I press the _cursor up_ key:\r\n\r\n```\r\n(Pdb) l\r\n\u2026\r\n 10  \tdef foo():\r\n 11  \t    import pdb; pdb.set_trace()\r\n 12  ->\t    pass\r\n[EOF]\r\n(Pdb) ^[[A\r\n```\r\n\r\nRunning it without hupper does not exhibit the problem.\r\n\r\nThis is on GNU/Linux (Debian sid), with Python 3.6.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/13", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/13/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/13/events", "html_url": "https://github.com/Pylons/hupper/issues/13", "id": 204547141, "node_id": "MDU6SXNzdWUyMDQ1NDcxNDE=", "number": 13, "title": "gevent support", "user": {"login": "miohtama", "id": 49922, "node_id": "MDQ6VXNlcjQ5OTIy", "avatar_url": "https://avatars1.githubusercontent.com/u/49922?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miohtama", "html_url": "https://github.com/miohtama", "followers_url": "https://api.github.com/users/miohtama/followers", "following_url": "https://api.github.com/users/miohtama/following{/other_user}", "gists_url": "https://api.github.com/users/miohtama/gists{/gist_id}", "starred_url": "https://api.github.com/users/miohtama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miohtama/subscriptions", "organizations_url": "https://api.github.com/users/miohtama/orgs", "repos_url": "https://api.github.com/users/miohtama/repos", "events_url": "https://api.github.com/users/miohtama/events{/privacy}", "received_events_url": "https://api.github.com/users/miohtama/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-02-01T10:31:27Z", "updated_at": "2017-05-11T04:07:08Z", "closed_at": "2017-05-11T04:07:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "gevent is an infamous Python library of doing all sorts of monkey patching within the stdlib to get async support for stdlib modules, basically rewriting `threading` et al. [See one of related issues and good explanation](https://github.com/zopefoundation/transaction/issues/21).\r\n\r\nAfter upgrading Pyramid 1.7 ->  Pyramid 1.8 I cannot run `pserve` anymore, despite doing in `gevent` monkey patches as early as possible in the launch script:\r\n\r\n    \"\"\"Wrapper for pserve.\"\"\"\r\n    import sys\r\n    from pkg_resources import load_entry_point\r\n\r\n    try:\r\n        import gevent.monkey\r\n        gevent.monkey.patch_all()\r\n    except ImportError:\r\n        pass\r\n\r\n    def main():\r\n        sys.exit(\r\n            load_entry_point('pyramid', 'console_scripts', 'pserve')()\r\n        )\r\n\r\nI get exception on the startup:\r\n\r\n    Starting monitor for PID 49731.\r\n    Exception in thread Thread-2:\r\n    Traceback (most recent call last):\r\n      File \"/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 914, in _bootstrap_inner\r\n        self.run()\r\n      File \"/Users/mikko/code/x/venv/lib/python3.5/site-packages/hupper/worker.py\", line 98, in run\r\n        while self.pipe.recv_bytes():  # pragma: nocover\r\n      File \"/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/lib/python3.5/multiprocessing/connection.py\", line 216, in recv_bytes\r\n        buf = self._recv_bytes(maxlength)\r\n      File \"/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/lib/python3.5/multiprocessing/connection.py\", line 407, in _recv_bytes\r\n        buf = self._recv(4)\r\n      File \"/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5/lib/python3.5/multiprocessing/connection.py\", line 379, in _recv\r\n        chunk = read(handle, remaining)\r\n    BlockingIOError: [Errno 35] Resource temporarily unavailable\r\n\r\nI do not have a solution yet; I leave issue open here to raise some awareness and for further investigation if there are other gevent users out there.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/12", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/12/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/12/events", "html_url": "https://github.com/Pylons/hupper/issues/12", "id": 203351136, "node_id": "MDU6SXNzdWUyMDMzNTExMzY=", "number": 12, "title": "WinError 87 on Windows7", "user": {"login": "seyhbold", "id": 3275348, "node_id": "MDQ6VXNlcjMyNzUzNDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/3275348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seyhbold", "html_url": "https://github.com/seyhbold", "followers_url": "https://api.github.com/users/seyhbold/followers", "following_url": "https://api.github.com/users/seyhbold/following{/other_user}", "gists_url": "https://api.github.com/users/seyhbold/gists{/gist_id}", "starred_url": "https://api.github.com/users/seyhbold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seyhbold/subscriptions", "organizations_url": "https://api.github.com/users/seyhbold/orgs", "repos_url": "https://api.github.com/users/seyhbold/repos", "events_url": "https://api.github.com/users/seyhbold/events{/privacy}", "received_events_url": "https://api.github.com/users/seyhbold/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2017-01-26T11:41:30Z", "updated_at": "2019-08-10T21:06:57Z", "closed_at": "2017-03-10T09:11:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have a problem starting a pyramid project with --reload on Windows7\r\n\r\nWhen I type `hupper -m http.server` I get:\r\n```\r\n\u03bb hupper -m http.server\r\nTraceback (most recent call last):\r\n  File \"C:\\Tools\\Python36\\lib\\runpy.py\", line 193, in _run_module_as_main\r\n    \"__main__\", mod_spec)\r\n  File \"C:\\Tools\\Python36\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Devel\\pyramid\\quick_tutorial\\env\\Scripts\\hupper.exe\\__main__.py\", line 9, in <module>\r\n  File \"c:\\devel\\pyramid\\quick_tutorial\\env\\lib\\site-packages\\hupper\\cli.py\", line 21, in main\r\n    worker_kwargs={\"alter_sys\": True, \"run_name\": \"__main__\"})\r\n  File \"c:\\devel\\pyramid\\quick_tutorial\\env\\lib\\site-packages\\hupper\\reloader.py\", line 290, in start_reloader\r\n    return reloader.run()\r\n  File \"c:\\devel\\pyramid\\quick_tutorial\\env\\lib\\site-packages\\hupper\\reloader.py\", line 111, in run\r\n    if not self._run_worker():\r\n  File \"c:\\devel\\pyramid\\quick_tutorial\\env\\lib\\site-packages\\hupper\\reloader.py\", line 144, in _run_worker\r\n    self.worker.start()\r\n  File \"c:\\devel\\pyramid\\quick_tutorial\\env\\lib\\site-packages\\hupper\\worker.py\", line 129, in start\r\n    os.set_inheritable(self.stdin_fd, True)\r\nOSError: [WinError 87] Falscher Parameter\r\n```\r\nI get the same error when starting the pyramid project with --reload\r\n\r\nDo you have any idea what I am doing wrong?\r\nThanks you very much\r\nRegards\r\nSeyhbold", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/11", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/11/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/11/events", "html_url": "https://github.com/Pylons/hupper/issues/11", "id": 200147142, "node_id": "MDU6SXNzdWUyMDAxNDcxNDI=", "number": 11, "title": "hupper & Twisted", "user": {"login": "hynek", "id": 41240, "node_id": "MDQ6VXNlcjQxMjQw", "avatar_url": "https://avatars3.githubusercontent.com/u/41240?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hynek", "html_url": "https://github.com/hynek", "followers_url": "https://api.github.com/users/hynek/followers", "following_url": "https://api.github.com/users/hynek/following{/other_user}", "gists_url": "https://api.github.com/users/hynek/gists{/gist_id}", "starred_url": "https://api.github.com/users/hynek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hynek/subscriptions", "organizations_url": "https://api.github.com/users/hynek/orgs", "repos_url": "https://api.github.com/users/hynek/repos", "events_url": "https://api.github.com/users/hynek/events{/privacy}", "received_events_url": "https://api.github.com/users/hynek/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2017-01-11T16:50:53Z", "updated_at": "2017-01-24T08:28:54Z", "closed_at": "2017-01-24T08:09:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI\u2019d like to use Twisted as a WSGI container for a Pyramid app and use hupper in dev.\r\n\r\nSadly there seems to be *something* broken about that setup when cleaning that I suspect is related to threads:\r\n\r\n```\r\n$ hupper -m twisted web --path=.\r\nStarting monitor for PID 78003.\r\n2017-01-11T17:46:46+0100 [-] Site starting on 8080\r\n2017-01-11T17:46:46+0100 [twisted.web.server.Site#info] Starting factory <twisted.web.server.Site instance at 0x1021e5a28>\r\n2017-01-11T17:46:46+0100 [twisted.application.runner._runner.Runner#info] Starting reactor...\r\n^CKilling server with PID 78003.\r\n2017-01-11T17:46:49+0100 [-] Received SIGTERM, shutting down.\r\n2017-01-11T17:46:49+0100 [-] Received SIGINT, shutting down.\r\n2017-01-11T17:46:49+0100 [-] Unhandled Error\r\n\tTraceback (most recent call last):\r\n\t  File \"/Users/hynek/.virtualenvs/tempenv-1c44245683697/lib/python2.7/site-packages/twisted/application/runner/_runner.py\", line 63, in run\r\n\t    self.startReactor()\r\n\t  File \"/Users/hynek/.virtualenvs/tempenv-1c44245683697/lib/python2.7/site-packages/twisted/application/runner/_runner.py\", line 166, in startReactor\r\n\t    reactor.run()\r\n\t  File \"/Users/hynek/.virtualenvs/tempenv-1c44245683697/lib/python2.7/site-packages/twisted/internet/base.py\", line 1199, in run\r\n\t    self.mainLoop()\r\n\t  File \"/Users/hynek/.virtualenvs/tempenv-1c44245683697/lib/python2.7/site-packages/twisted/internet/base.py\", line 1208, in mainLoop\r\n\t    self.runUntilCurrent()\r\n\t--- <exception caught here> ---\r\n\t  File \"/Users/hynek/.virtualenvs/tempenv-1c44245683697/lib/python2.7/site-packages/twisted/internet/base.py\", line 801, in runUntilCurrent\r\n\t    f(*a, **kw)\r\n\t  File \"/Users/hynek/.virtualenvs/tempenv-1c44245683697/lib/python2.7/site-packages/twisted/internet/base.py\", line 584, in stop\r\n\t    \"Can't stop reactor that isn't running.\")\r\n\ttwisted.internet.error.ReactorNotRunning: Can't stop reactor that isn't running.\r\n\r\n2017-01-11T17:46:49+0100 [-] (TCP Port 8080 Closed)\r\n2017-01-11T17:46:49+0100 [twisted.web.server.Site#info] Stopping factory <twisted.web.server.Site instance at 0x1021e5a28>\r\n2017-01-11T17:46:49+0100 [-] Main loop terminated.\r\n```\r\n\r\nPlease note I\u2019m pressing Ctrl-C there, it\u2019s not exploding or something.\r\n\r\nTo reproduce simply install twisted and hupper and run the command line from my example.\r\n\r\nAny ideas how to fix that?  Since Twisted doesn\u2019t have own means for reloading, it would be great if hupper had first class support.\r\n\r\nP.S. Tested on macOS Sierra with both Python 3.5.2 & 2.7.13.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/10", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/10/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/10/events", "html_url": "https://github.com/Pylons/hupper/issues/10", "id": 197778141, "node_id": "MDU6SXNzdWUxOTc3NzgxNDE=", "number": 10, "title": "Adding a new module causes hupper/watchdog to blow up", "user": {"login": "bertjwregeer", "id": 649426, "node_id": "MDQ6VXNlcjY0OTQyNg==", "avatar_url": "https://avatars3.githubusercontent.com/u/649426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bertjwregeer", "html_url": "https://github.com/bertjwregeer", "followers_url": "https://api.github.com/users/bertjwregeer/followers", "following_url": "https://api.github.com/users/bertjwregeer/following{/other_user}", "gists_url": "https://api.github.com/users/bertjwregeer/gists{/gist_id}", "starred_url": "https://api.github.com/users/bertjwregeer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bertjwregeer/subscriptions", "organizations_url": "https://api.github.com/users/bertjwregeer/orgs", "repos_url": "https://api.github.com/users/bertjwregeer/repos", "events_url": "https://api.github.com/users/bertjwregeer/events{/privacy}", "received_events_url": "https://api.github.com/users/bertjwregeer/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 463719355, "node_id": "MDU6TGFiZWw0NjM3MTkzNTU=", "url": "https://api.github.com/repos/Pylons/hupper/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-12-28T00:56:20Z", "updated_at": "2017-01-03T07:02:21Z", "closed_at": "2017-01-03T07:02:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I added a new module to my code base, and as soon as I updated my Pyramid projects `__init__.py` for `config.scan` all hell broke loose:\r\n\r\n```\r\nServing on http://0.0.0.0:6543\r\nKilling server with PID 83267.\r\nTraceback (most recent call last):\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/hupper/reloader.py\", line 107, in run\r\n    if not self._run_worker():\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/hupper/reloader.py\", line 161, in _run_worker\r\n    self.monitor.add_path(path)\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/hupper/reloader.py\", line 43, in add_path\r\n    self.monitor.add_path(p)\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/hupper/watchdog.py\", line 34, in add_path\r\n    if dirpath not in self.dirpaths:\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/watchdog/observers/fsevents.py\", line 172, in schedule\r\n    return BaseObserver.schedule(self, event_handler, path, recursive)\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/watchdog/observers/api.py\", line 290, in schedule\r\n    timeout=self.timeout)\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/watchdog/observers/fsevents.py\", line 73, in __init__\r\n    self.snapshot = DirectorySnapshot(watch.path, watch.is_recursive)\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/watchdog/utils/dirsnapshot.py\", line 207, in __init__\r\n    st = stat(path)\r\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/xistence/Projects/fulgent/fulgent/subscribers/__pycache__'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError: PyCapsule_GetPointer called with invalid PyCapsule object\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/xistence/.ve/fulgent/bin/pserve\", line 11, in <module>\r\n    load_entry_point('pyramid==1.8.dev0', 'console_scripts', 'pserve')()\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/pyramid/scripts/pserve.py\", line 37, in main\r\n    return command.run()\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/pyramid/scripts/pserve.py\", line 154, in run\r\n    verbose=self.options.verbose,\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/hupper/reloader.py\", line 273, in start_reloader\r\n    return reloader.run()\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/hupper/reloader.py\", line 113, in run\r\n    self._stop_monitor()\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/hupper/reloader.py\", line 194, in _stop_monitor\r\n    self.monitor.stop()\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/hupper/reloader.py\", line 49, in stop\r\n    self.monitor.stop()\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/watchdog/utils/__init__.py\", line 99, in stop\r\n    self.on_thread_stop()\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/watchdog/observers/api.py\", line 357, in on_thread_stop\r\n    self.unschedule_all()\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/watchdog/observers/api.py\", line 353, in unschedule_all\r\n    self._clear_emitters()\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/watchdog/observers/api.py\", line 231, in _clear_emitters\r\n    emitter.stop()\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/watchdog/utils/__init__.py\", line 99, in stop\r\n    self.on_thread_stop()\r\n  File \"/Users/xistence/.ve/fulgent/lib/python3.5/site-packages/watchdog/observers/fsevents.py\", line 77, in on_thread_stop\r\n    _fsevents.stop(self)\r\nSystemError: <built-in function stop> returned a result with an error set\r\n```\r\n\r\nSteps:\r\n\r\n1. Start `pserve` with `--reload`\r\n2. `mkdir subscribers && touch subscribers/__init__.py`\r\n    This didn't cause the reloader to do anything, because it didn't know about this path\r\n3. Modify `__init__.py` to add `config.scan('.subscribers')`\r\n4. Reloader reloads because of change to existing file\r\n5. ???\r\n6. Boom", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/6", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/6/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/6/events", "html_url": "https://github.com/Pylons/hupper/issues/6", "id": 188358865, "node_id": "MDU6SXNzdWUxODgzNTg4NjU=", "number": 6, "title": "get test coverage working", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-09T21:37:49Z", "updated_at": "2017-05-18T20:22:16Z", "closed_at": "2017-05-18T20:22:15Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Related: https://github.com/pytest-dev/pytest-cov/issues/139", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/5", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/5/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/5/events", "html_url": "https://github.com/Pylons/hupper/issues/5", "id": 187892730, "node_id": "MDU6SXNzdWUxODc4OTI3MzA=", "number": 5, "title": "support glob patterns in file monitors", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 463719357, "node_id": "MDU6TGFiZWw0NjM3MTkzNTc=", "url": "https://api.github.com/repos/Pylons/hupper/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 463719358, "node_id": "MDU6TGFiZWw0NjM3MTkzNTg=", "url": "https://api.github.com/repos/Pylons/hupper/labels/help%20wanted", "name": "help wanted", "color": "128A0C", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-08T03:27:16Z", "updated_at": "2016-11-22T04:45:46Z", "closed_at": "2016-11-22T04:45:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`reloader.watch_files(...)` should be able to accept glob patterns like `assets/**` or `assets/**/*.png`. This feature should be doable by simply adding support for this to the watchdog and polling file monitors.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/4", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/4/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/4/events", "html_url": "https://github.com/Pylons/hupper/issues/4", "id": 184523348, "node_id": "MDU6SXNzdWUxODQ1MjMzNDg=", "number": 4, "title": "fix pdb, forward stdin to the worker process on windows", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-21T16:07:36Z", "updated_at": "2016-11-06T18:11:39Z", "closed_at": "2016-11-06T18:11:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There are 2 (probably related) errors right now.\n\n1) When the worker process starts \"things are fine\" (things work if you don't need stdin). However when it restarts there is a IOError Bad File Descriptor emitted in the worker process.\n\n2) When it starts the first time and \"things are fine\", if you set a pdb breakpoint in your code things will go haywire when you hit it. The process hangs and a windows dialog pops up and you can't actually use the stdin pipe to talk to pdb.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/3", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/3/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/3/events", "html_url": "https://github.com/Pylons/hupper/issues/3", "id": 184522626, "node_id": "MDU6SXNzdWUxODQ1MjI2MjY=", "number": 3, "title": "detect when the parent process dies on windows", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-10-21T16:04:00Z", "updated_at": "2016-11-04T05:09:58Z", "closed_at": "2016-11-04T05:09:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently I can kill the pserve process and there are still extra python processes sticking around. This is supposed to be handled by watching the pipe but it doesn't seem to work on windows.\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/2", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/2/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/2/events", "html_url": "https://github.com/Pylons/hupper/issues/2", "id": 184521828, "node_id": "MDU6SXNzdWUxODQ1MjE4Mjg=", "number": 2, "title": "setup travis and appveyor", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-10-21T16:00:05Z", "updated_at": "2016-11-08T03:25:28Z", "closed_at": "2016-11-08T03:25:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We need to write some tests!\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/Pylons/hupper/issues/1", "repository_url": "https://api.github.com/repos/Pylons/hupper", "labels_url": "https://api.github.com/repos/Pylons/hupper/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/Pylons/hupper/issues/1/comments", "events_url": "https://api.github.com/repos/Pylons/hupper/issues/1/events", "html_url": "https://github.com/Pylons/hupper/issues/1", "id": 184520932, "node_id": "MDU6SXNzdWUxODQ1MjA5MzI=", "number": 1, "title": "add support for a watchdog-based file monitor if available", "user": {"login": "mmerickel", "id": 487237, "node_id": "MDQ6VXNlcjQ4NzIzNw==", "avatar_url": "https://avatars3.githubusercontent.com/u/487237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmerickel", "html_url": "https://github.com/mmerickel", "followers_url": "https://api.github.com/users/mmerickel/followers", "following_url": "https://api.github.com/users/mmerickel/following{/other_user}", "gists_url": "https://api.github.com/users/mmerickel/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmerickel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmerickel/subscriptions", "organizations_url": "https://api.github.com/users/mmerickel/orgs", "repos_url": "https://api.github.com/users/mmerickel/repos", "events_url": "https://api.github.com/users/mmerickel/events{/privacy}", "received_events_url": "https://api.github.com/users/mmerickel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-10-21T15:55:55Z", "updated_at": "2016-11-04T05:10:43Z", "closed_at": "2016-11-04T05:10:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I do not want `hupper` to depend on `watchdog` but if it's available we should support it. The reason is that watchdog has a few tricky and unnecessary dependencies and seems to be not very actively maintained right now so a hard dependency would make hupper unavailable on certain systems.\n\nThis basically means writing an alternate to the `PollingFileMonitor` and having `start_reloader` attempt to use it if watchdog is available. Finally we could add an extra requirement such as `hupper[watchdog]` which depends on watchdog and update the documents as such.\n", "performed_via_github_app": null, "score": 1.0}]}