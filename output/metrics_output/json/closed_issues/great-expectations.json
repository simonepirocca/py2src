{"total_count": 496, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1795", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1795/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1795/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1795/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1795", "id": 678665465, "node_id": "MDU6SXNzdWU2Nzg2NjU0NjU=", "number": 1795, "title": "DataContext, BaseDataContext, DataContextConfig, and get_checkpoint()", "user": {"login": "williamBartos", "id": 16991931, "node_id": "MDQ6VXNlcjE2OTkxOTMx", "avatar_url": "https://avatars2.githubusercontent.com/u/16991931?v=4", "gravatar_id": "", "url": "https://api.github.com/users/williamBartos", "html_url": "https://github.com/williamBartos", "followers_url": "https://api.github.com/users/williamBartos/followers", "following_url": "https://api.github.com/users/williamBartos/following{/other_user}", "gists_url": "https://api.github.com/users/williamBartos/gists{/gist_id}", "starred_url": "https://api.github.com/users/williamBartos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/williamBartos/subscriptions", "organizations_url": "https://api.github.com/users/williamBartos/orgs", "repos_url": "https://api.github.com/users/williamBartos/repos", "events_url": "https://api.github.com/users/williamBartos/events{/privacy}", "received_events_url": "https://api.github.com/users/williamBartos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-13T18:56:42Z", "updated_at": "2020-08-13T23:38:22Z", "closed_at": "2020-08-13T23:38:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [documentation](https://docs.greatexpectations.io/en/latest/guides/how_to_guides/configuring_data_contexts/how_to_instantiate_a_data_context_on_an_emr_spark_cluster.html) outlines a way to dynamically generate a data context. I'm planning on running this from the script created from the `checkpoint script` cli call. \r\n\r\nHowever there's a few issues:\r\n\r\n1. `DataContextConfig` can only be used to instantiate `BaseDataContext` and not `DataContext`. The `DataContextConfig` is passed in via the `project_config` arg. \r\n2. `BaseDataContext` doesnt have a `get_checkpoint()` method. So I can't use it in place of `DataContext`. \r\n\r\n\r\n`__init__` of BaseDataContext: https://github.com/great-expectations/great_expectations/blob/develop/great_expectations/data_context/data_context.py#L224\r\n`__init__` of DataContext: https://github.com/great-expectations/great_expectations/blob/develop/great_expectations/data_context/data_context.py#L2245\r\n\r\nIf I'm understanding correctly, this means that I'm unable to create a `DataContextConfig` dynamically and use it in a Checkpoint. This is because `DataContext` seems to only accept a yaml file as a config and not a `DataContextConfig`. \r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\n`DataContext` should be able to be instantiated with a `DataContextConfig`, either through  a `project_config` arg like `BaseDataContext` or through some other method. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1738", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1738/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1738/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1738/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1738", "id": 667399976, "node_id": "MDU6SXNzdWU2NjczOTk5NzY=", "number": 1738, "title": "The timestamp on slack messages does not correspond with the validation run time.", "user": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-07-28T21:41:41Z", "updated_at": "2020-08-12T23:18:29Z", "closed_at": "2020-08-12T23:18:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\nThe timestamp on slack messages does not correspond with the validation run time.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Run a validation operator that has a slack action\r\n2. Find the slack message\r\n3. Note the discrepancy\r\n\r\n**Expected behavior**\r\nI expect the timestamp to either be the same as the run ID run time or **be removed since it is now obsolete?**\r\n\r\n**Environment (please complete the following information):**\r\n - OS: [e.g. iOS] macOS\r\n - GE Version: [e.g. 0.10.0] 0.11.8\r\n\r\n**Additional context**\r\nHere are two messages where it's obvious the timestamp is not correct. It looks like it might be the time the slack message was sent.\r\n\r\n<img width=\"800\" alt=\"Slack___notifications-data-quality___BERA_Brand_Management\" src=\"https://user-images.githubusercontent.com/928247/88725008-a952fe00-d0e8-11ea-8872-da3f59eef43a.png\">\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1725", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1725/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1725/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1725/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1725", "id": 665382870, "node_id": "MDU6SXNzdWU2NjUzODI4NzA=", "number": 1725, "title": "SyntaxError on editing suite with `expect_column_quantile_values_to_be_between`", "user": {"login": "sbrugman", "id": 9756388, "node_id": "MDQ6VXNlcjk3NTYzODg=", "avatar_url": "https://avatars2.githubusercontent.com/u/9756388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbrugman", "html_url": "https://github.com/sbrugman", "followers_url": "https://api.github.com/users/sbrugman/followers", "following_url": "https://api.github.com/users/sbrugman/following{/other_user}", "gists_url": "https://api.github.com/users/sbrugman/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbrugman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbrugman/subscriptions", "organizations_url": "https://api.github.com/users/sbrugman/orgs", "repos_url": "https://api.github.com/users/sbrugman/repos", "events_url": "https://api.github.com/users/sbrugman/events{/privacy}", "received_events_url": "https://api.github.com/users/sbrugman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-24T19:54:12Z", "updated_at": "2020-08-12T18:46:30Z", "closed_at": "2020-08-12T18:46:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nWhen editing a suite with the `expect_column_quantile_values_to_be_between` expectation, the following cell is generated:\r\n\r\n```python\r\nbatch.expect_column_quantile_values_to_be_between(\r\n    allow_relative_error=False,\r\n    \"Annual Salary\",\r\n    quantile_ranges={\r\n        \"quantiles\": [0.05, 0.25, 0.5, 0.75, 0.95],\r\n        \"value_ranges\": [\r\n            [53567.0, 53569.0],\r\n            [76265.0, 76267.0],\r\n            [90023.0, 90025.0],\r\n            [98291.0, 98293.0],\r\n            [122471.0, 122473.0],\r\n        ],\r\n    },\r\n)\r\n```\r\n\r\nWhich results in:\r\n\r\n>   File \"<ipython-input-15-b3763fa07849>\", line 3\r\n>     \"Annual Salary\",\r\n>    ^\r\n> SyntaxError: positional argument follows keyword argument\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to 'great_expectations suite edit [your_suite]'\r\n2. Click on 'Execute the cell above'\r\n3. See error\r\n\r\n**Expected behavior**\r\nThe solution is as simple as changing the order of the arguments:\r\n\r\n```\r\nbatch.expect_column_quantile_values_to_be_between(\r\n    \"Annual Salary\",\r\n    allow_relative_error=False,\r\n    quantile_ranges={\r\n        \"quantiles\": [0.05, 0.25, 0.5, 0.75, 0.95],\r\n        \"value_ranges\": [\r\n            [53567.0, 53569.0],\r\n            [76265.0, 76267.0],\r\n            [90023.0, 90025.0],\r\n            [98291.0, 98293.0],\r\n            [122471.0, 122473.0],\r\n        ],\r\n    },\r\n)\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Win10\r\n - GE Version: 0.11.7\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1714", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1714/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1714/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1714/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1714", "id": 663367516, "node_id": "MDU6SXNzdWU2NjMzNjc1MTY=", "number": 1714, "title": "[BUG] Duplicate `usage_statistics` message is sent when building data_docs with CLI", "user": {"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-21T23:21:53Z", "updated_at": "2020-07-24T06:37:52Z", "closed_at": "2020-07-24T06:37:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen building DataDocs through the CLI (handled by the `build_docs()` function), the DataContext's `context.build_data_docs()` function is called twice. \r\n\r\nFirst `context.build_data_docs()` is called using the `dry_run` flag, which returns a structure containing the URLs of the sites that *would* be built, and allowing users to confirm. It is called a second time when the DataDocs are **actually** built.\r\n\r\nThe way that `context.build_data_docs()` sends `usage_statistics` is by using the `usage_statistics_enabled_method` decorator, which is not able to distinguish a `dry_run` from a real one. This causes a duplicate message to be sent. \r\n\r\n**To Reproduce**\r\n1. Put `print(message)` statement in the `emit()` function in `UsageStatisticsHandler` class in `great_expectations/core/usage_statistics.py`\r\n2. Run `great_expectations docs build` or run `great_expectation init`, choose any data source, say \"yes\" to all prompts until Data Docs are built. \r\n3. Observe two `event: data_context.build_data_docs` emitted. \r\n\r\n**Expected behavior**\r\nThere should only be one since DataDocs are only being built once.\r\n\r\n**Proposed Change**\r\n* `usage_statistics_wrapped_method` decorator will check if `dry_run` is part of the **kwargs, and return undecorated function if `dry_run` is set to True\r\n*  this will allow `context.build_data_docs()` to only emit a message if the `dry_run` is False (as well as handle future functions that may need to be called more than once)\r\n\r\n**Environment:**\r\n - OS: MacOS\r\n - GE Version: 0.11.8\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1696", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1696/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1696/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1696/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1696", "id": 656903221, "node_id": "MDU6SXNzdWU2NTY5MDMyMjE=", "number": 1696, "title": "snowflake login authentication via .p8 files", "user": {"login": "calvin-booking", "id": 58958952, "node_id": "MDQ6VXNlcjU4OTU4OTUy", "avatar_url": "https://avatars1.githubusercontent.com/u/58958952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calvin-booking", "html_url": "https://github.com/calvin-booking", "followers_url": "https://api.github.com/users/calvin-booking/followers", "following_url": "https://api.github.com/users/calvin-booking/following{/other_user}", "gists_url": "https://api.github.com/users/calvin-booking/gists{/gist_id}", "starred_url": "https://api.github.com/users/calvin-booking/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calvin-booking/subscriptions", "organizations_url": "https://api.github.com/users/calvin-booking/orgs", "repos_url": "https://api.github.com/users/calvin-booking/repos", "events_url": "https://api.github.com/users/calvin-booking/events{/privacy}", "received_events_url": "https://api.github.com/users/calvin-booking/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-14T21:14:45Z", "updated_at": "2020-07-15T16:23:27Z", "closed_at": "2020-07-15T16:23:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWe do not use any type of user password-logins for our snowflake connections.  Instead our snowflake authentication is done via `.p8` files.  At the moment `great-expectations` does not support this feature it's a bit difficult for us to use the `great-expectations` library.\r\n\r\nI've provided some examples below in `additional context` for more info.\r\n\r\n**Describe the solution you'd like**\r\nProvide the end user with the ability to authenticate snowflake logins using `.p8` files.\r\n\r\n**Describe alternatives you've considered**\r\nCurrently, I've locally modified the great-expectations repo to authenticate snowflake logins using external browser authentication, but this is not a robust solution for automated jobs in production.\r\n\r\n**Additional context**\r\n1. Snowflake documentation on using `.p8` files for login authentication\r\nhttps://docs.snowflake.com/en/user-guide/python-connector-example.html\r\n\r\n2.  Python-code snippet implementing `.p8` files for snowflake-login authentication.\r\n```\r\nimport snowflake.connector\r\nimport os\r\nfrom cryptography.hazmat.backends import default_backend\r\nfrom cryptography.hazmat.primitives.asymmetric import rsa\r\nfrom cryptography.hazmat.primitives.asymmetric import dsa\r\nfrom cryptography.hazmat.primitives import serialization\r\nwith open(\"<path>/rsa_key.p8\", \"rb\") as key:\r\n    p_key= serialization.load_pem_private_key(\r\n        key.read(),\r\n        password=os.environ['PRIVATE_KEY_PASSPHRASE'].encode(),\r\n        backend=default_backend()\r\n    )\r\n\r\npkb = p_key.private_bytes(\r\n    encoding=serialization.Encoding.DER,\r\n    format=serialization.PrivateFormat.PKCS8,\r\n    encryption_algorithm=serialization.NoEncryption())\r\n\r\nctx = snowflake.connector.connect(\r\n    user='<user>',\r\n    account='<account>',\r\n    private_key=pkb,\r\n    warehouse=WAREHOUSE,\r\n    database=DATABASE,\r\n    schema=SCHEMA\r\n    )\r\n\r\ncs = ctx.cursor()\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1693", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1693/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1693/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1693/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1693", "id": 656216670, "node_id": "MDU6SXNzdWU2NTYyMTY2NzA=", "number": 1693, "title": "When a Data Docs site is configured to be hosted on an S3 bucket (without an extra prefix), the URL is not accessible unless an extra slash is added before \"index.html\"", "user": {"login": "eugmandel", "id": 80363, "node_id": "MDQ6VXNlcjgwMzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/80363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugmandel", "html_url": "https://github.com/eugmandel", "followers_url": "https://api.github.com/users/eugmandel/followers", "following_url": "https://api.github.com/users/eugmandel/following{/other_user}", "gists_url": "https://api.github.com/users/eugmandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugmandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugmandel/subscriptions", "organizations_url": "https://api.github.com/users/eugmandel/orgs", "repos_url": "https://api.github.com/users/eugmandel/repos", "events_url": "https://api.github.com/users/eugmandel/events{/privacy}", "received_events_url": "https://api.github.com/users/eugmandel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-13T23:25:35Z", "updated_at": "2020-08-10T01:06:42Z", "closed_at": "2020-08-10T01:06:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a Data Context\r\n2. Follow the https://docs.greatexpectations.io/en/latest/how_to_guides/configuring_data_docs/how_to_host_and_share_data_docs_on_s3.html guide to configure a Data Docs site to be hosted on an S3 bucket. NOTE: DO NOT SPECIFY A PREFIX!\r\n3. Run the CLI command `great_expectations docs build` to build Data Docs \r\n4. Attempt loading the newly built site in the browser - use the URL that the previous command outputted. - Verify that instead of seeing the page, you get an \"AccessDenied\" error.\r\n5. Add an extra \"/\" before \"/index.html\" in the URL - verify that the site loads in the browser.\r\n\r\n**Expected behavior**\r\nThe Data Docs site is accessible in the browser on the URL outputted by the `great_expectations docs build`  CLI command.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: OSX\r\n - GE Version: 0.11.7\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1681", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1681/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1681/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1681/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1681", "id": 654292386, "node_id": "MDU6SXNzdWU2NTQyOTIzODY=", "number": 1681, "title": "suite new throws this error when TupleS3StoreBackend store backend is used for the expectations store: \"TypeError: _set() got an unexpected keyword argument 'allow_update'\"", "user": {"login": "eugmandel", "id": 80363, "node_id": "MDQ6VXNlcjgwMzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/80363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugmandel", "html_url": "https://github.com/eugmandel", "followers_url": "https://api.github.com/users/eugmandel/followers", "following_url": "https://api.github.com/users/eugmandel/following{/other_user}", "gists_url": "https://api.github.com/users/eugmandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugmandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugmandel/subscriptions", "organizations_url": "https://api.github.com/users/eugmandel/orgs", "repos_url": "https://api.github.com/users/eugmandel/repos", "events_url": "https://api.github.com/users/eugmandel/events{/privacy}", "received_events_url": "https://api.github.com/users/eugmandel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-09T19:21:30Z", "updated_at": "2020-07-10T21:42:24Z", "closed_at": "2020-07-10T21:42:24Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\nsuite new throws this error when TupleS3StoreBackend store backend is used for the expectations store: \"TypeError: _set() got an unexpected keyword argument 'allow_update'\"\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Switch the expectations store in your Data Context to use TupleS3StoreBackend\r\n2. Run suite new in the CLI\r\n3. See error: \"TypeError: _set() got an unexpected keyword argument 'allow_update'\"\r\n\r\n**Expected behavior**\r\nNo error\r\n\r\n**Environment (please complete the following information):**\r\n - OS: any\r\n - GE Version: 0.11.7\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1666", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1666/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1666/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1666/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1666", "id": 651857174, "node_id": "MDU6SXNzdWU2NTE4NTcxNzQ=", "number": 1666, "title": "In Notebook, allow Expectation Suite to be created if it does not exist already", "user": {"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-07-06T22:30:13Z", "updated_at": "2020-08-12T23:25:47Z", "closed_at": "2020-08-12T23:25:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nWhen I open a notebook to edit a suite `great_expectations suite edit suite_name`, It states:\r\n\r\n```\r\n# Feel free to change the name of your suite here. Renaming this will not\r\n# remove the other one.\r\nexpectation_suite_name = \"some_data.warning\"\r\nsuite = context.get_expectation_suite(expectation_suite_name)\r\n```\r\nHowever, if you change the name here it will throw an error that this suite is unknown.\r\n\r\n**Describe the solution you'd like**\r\n\r\n1. A check if `expectation_suite_name` already exists, and create if it does not. \r\n```\r\nexpectation_suites = context.list_expectation_suites()\r\nexpectation_suite_names = [_.expectation_suite_name for _ in expectation_suites]\r\nif expectation_suite_name not in expectation_suite_names:\r\n  context.create_expectation_suite(expectation_suite_name)\r\n  suite = context.get_expectation_suite(expectation_suite_name)   \r\n```\r\n\r\n2. A comment saying that the reference Expectation Suite should already have been created through the CLI. \r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\nThis issue was created from a suggestion by a user on Slack (username Joost) \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1663", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1663/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1663/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1663/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1663", "id": 650647001, "node_id": "MDU6SXNzdWU2NTA2NDcwMDE=", "number": 1663, "title": "Snowflake key pair authentication", "user": {"login": "dmateusp", "id": 8832050, "node_id": "MDQ6VXNlcjg4MzIwNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8832050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmateusp", "html_url": "https://github.com/dmateusp", "followers_url": "https://api.github.com/users/dmateusp/followers", "following_url": "https://api.github.com/users/dmateusp/following{/other_user}", "gists_url": "https://api.github.com/users/dmateusp/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmateusp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmateusp/subscriptions", "organizations_url": "https://api.github.com/users/dmateusp/orgs", "repos_url": "https://api.github.com/users/dmateusp/repos", "events_url": "https://api.github.com/users/dmateusp/events{/privacy}", "received_events_url": "https://api.github.com/users/dmateusp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-03T14:58:17Z", "updated_at": "2020-08-13T14:37:51Z", "closed_at": "2020-08-13T14:37:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nGE doesn't currently support key pair authentication for Snowflake\r\n\r\n**Describe the solution you'd like**\r\nI would like the cli and the connection code to support passing SSH key information to connect to Snowflake\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1661", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1661/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1661/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1661/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1661", "id": 650573916, "node_id": "MDU6SXNzdWU2NTA1NzM5MTY=", "number": 1661, "title": "Do not try to compare BigQuery DATE fields with DATETIME variables", "user": {"login": "per102", "id": 48355444, "node_id": "MDQ6VXNlcjQ4MzU1NDQ0", "avatar_url": "https://avatars3.githubusercontent.com/u/48355444?v=4", "gravatar_id": "", "url": "https://api.github.com/users/per102", "html_url": "https://github.com/per102", "followers_url": "https://api.github.com/users/per102/followers", "following_url": "https://api.github.com/users/per102/following{/other_user}", "gists_url": "https://api.github.com/users/per102/gists{/gist_id}", "starred_url": "https://api.github.com/users/per102/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/per102/subscriptions", "organizations_url": "https://api.github.com/users/per102/orgs", "repos_url": "https://api.github.com/users/per102/repos", "events_url": "https://api.github.com/users/per102/events{/privacy}", "received_events_url": "https://api.github.com/users/per102/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-03T12:43:58Z", "updated_at": "2020-08-18T15:10:12Z", "closed_at": "2020-08-18T15:10:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nGoogle BigQuery returns a DatabaseError because a query is passed that tries to compare a field of type DATE with a variable of type DATETIME:\r\n```\r\n(google.cloud.bigquery.dbapi.exceptions.DatabaseError) 400 No matching signature for operator >= for argument types: DATE, DATETIME. Supported signatures: ANY >= ANY at [1:148]\r\n\r\n(job ID: 5ab01d0d-7b57-4702-8ab9-e8f7932894a9)\r\n\r\n                                                                                                                                           -----Query Job SQL Follows-----                                                                                                                                            \r\n\r\n    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\r\n   1:SELECT count(*) AS `element_count`, sum(CASE WHEN (`date_field` IS NULL) THEN @`param_1` ELSE @`param_2` END) AS `null_count`, sum(CASE WHEN (NOT (`date_field` >= @`date_field_1` AND `date_field` <= @`date_field_2`) AND `date_field` IS NOT NULL) THEN @`param_3` ELSE @`param_4` END) AS `unexpected_count` \r\n   2:FROM `some_project.some_dataset.ge_tmp_3250b4d5`\r\n    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\r\n[SQL: SELECT count(*) AS `element_count`, sum(CASE WHEN (`date_field` IS NULL) THEN %(param_1)s ELSE %(param_2)s END) AS `null_count`, sum(CASE WHEN (NOT (`date_field` >= %(date_field_1)s AND `date_field` <= %(date_field_2)s) AND `date_field` IS NOT NULL) THEN %(param_3)s ELSE %(param_4)s END) AS `unexpected_count` \r\nFROM `some_project.some_dataset.ge_tmp_3250b4d5`]\r\n[parameters: {'param_1': 1, 'param_2': 0, 'date_field_1': datetime.datetime(2018, 12, 25, 0, 0), 'date_field_2': datetime.datetime(2021, 1, 9, 0, 0), 'param_3': 1, 'param_4': 0}]\r\n(Background on this error at: http://sqlalche.me/e/13/4xp6)\r\n```\r\n\r\n**To Reproduce**\r\n1. Create a table by running this SQL code in the BigQuery GUI:\r\n```\r\nCREATE OR REPLACE TABLE some_dataset.date_table (\r\n  date_id INT64,\r\n  date_field DATE\r\n);\r\n\r\nINSERT INTO some_dataset.date_table VALUES\r\n  (1, '2019-12-25'),\r\n  (2, '2020-01-01'),\r\n  (3, '2020-01-10')\r\n```\r\n2. Try to create a new expectation suite connected to this table.\r\n\r\nThe generation fails with the above error message.\r\n\r\n**Expected behavior**\r\nSome baseline expectations are auto-generated and can be edited.\r\n\r\n**Environment (please complete the following information):**\r\n* macOS Catalina 10.15.5\r\n* Python 3.7.6\r\n* GE 0.11.6 installed from PyPI on a clean virtual environment\r\n\r\n**Additional context**\r\n(None)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1657", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1657/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1657/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1657/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1657", "id": 649098113, "node_id": "MDU6SXNzdWU2NDkwOTgxMTM=", "number": 1657, "title": "Failed to save multiple Column Pair expectations ", "user": {"login": "khotkevych", "id": 13405635, "node_id": "MDQ6VXNlcjEzNDA1NjM1", "avatar_url": "https://avatars0.githubusercontent.com/u/13405635?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khotkevych", "html_url": "https://github.com/khotkevych", "followers_url": "https://api.github.com/users/khotkevych/followers", "following_url": "https://api.github.com/users/khotkevych/following{/other_user}", "gists_url": "https://api.github.com/users/khotkevych/gists{/gist_id}", "starred_url": "https://api.github.com/users/khotkevych/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khotkevych/subscriptions", "organizations_url": "https://api.github.com/users/khotkevych/orgs", "repos_url": "https://api.github.com/users/khotkevych/repos", "events_url": "https://api.github.com/users/khotkevych/events{/privacy}", "received_events_url": "https://api.github.com/users/khotkevych/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-01T16:02:50Z", "updated_at": "2020-08-11T18:23:01Z", "closed_at": "2020-08-11T18:23:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nNot possible to save more than 1 Column Pair expectation of the same expectation type. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create an expectation suit for data source that supports Column Pair expectations (f.e. Pandas)\r\n2. Add 2 Column Pair expectations with the same expectation type, but different columns values, f.e.\r\n`batch.expect_column_pair_values_to_be_equal(column_A=\"Provider First Name\", column_B=\"Provider Name Prefix Text\")`\r\n`batch.expect_column_pair_values_to_be_equal(column_A=\"Provider Last Name (Legal Name)\", column_B=\"Provider Name Prefix Text\")`\r\nand run them.\r\n3. Save the expectation suit\r\n`batch.save_expectation_suite(discard_failed_expectations=False)`\r\n4. Check generated json file with expectations and see 1 Column Pair expectation instead of 2.\r\n\r\n**Expected behavior**\r\n2 Column Pair expectations saved. \r\n\r\n**Environment**\r\n - OS: macOS Mojave 10.14.6\r\n - GE Version: 0.11.6\r\n\r\n**Additional context**\r\nAs far as I get from code [here](https://github.com/great-expectations/great_expectations/blob/0.11.6/great_expectations/data_asset/data_asset.py#L411), it's possible to have multiple expectations of the same type only if `column`  field is provided. In the case of Column Pair expectations, there is no `column` field, but there are `column_A` and `column_B`. \r\nAlso, this will be an issue for any custom expectation without the `column` field.  \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1655", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1655/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1655/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1655/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1655", "id": 648474575, "node_id": "MDU6SXNzdWU2NDg0NzQ1NzU=", "number": 1655, "title": "Nice to have: Allow treating empty strings as NULL in expect_column_values_to_not_be_null", "user": {"login": "spbail", "id": 1734474, "node_id": "MDQ6VXNlcjE3MzQ0NzQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/1734474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spbail", "html_url": "https://github.com/spbail", "followers_url": "https://api.github.com/users/spbail/followers", "following_url": "https://api.github.com/users/spbail/following{/other_user}", "gists_url": "https://api.github.com/users/spbail/gists{/gist_id}", "starred_url": "https://api.github.com/users/spbail/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spbail/subscriptions", "organizations_url": "https://api.github.com/users/spbail/orgs", "repos_url": "https://api.github.com/users/spbail/repos", "events_url": "https://api.github.com/users/spbail/events{/privacy}", "received_events_url": "https://api.github.com/users/spbail/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-30T20:35:08Z", "updated_at": "2020-07-02T20:53:07Z", "closed_at": "2020-07-02T20:53:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nWe've run into a few situations where text fields can have both NULLs and empty strings, which we want to test. In this case, we consider NULL and empty strings to be the same value, but it requires us to add two separate expectations (not be null and not in set), which is just more effort.\r\n\r\n**Describe the solution you'd like**\r\nIt would be nice to add in a flag, e.g. like `expect_column_values_to_not_be_null(person_id, treat_empty_string_as_null=True) to implement this behavior out of the box for text type columns. The flag could default to False to preserve the existing behavior.\r\n\r\n**Describe alternatives you've considered**\r\nThis can be done with an additional expectation, but it would be nice to have a shortcut.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1651", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1651/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1651/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1651/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1651", "id": 647498422, "node_id": "MDU6SXNzdWU2NDc0OTg0MjI=", "number": 1651, "title": "Mising importlib-metadata dependency in verson 0.11.6", "user": {"login": "javier-sanz", "id": 6000667, "node_id": "MDQ6VXNlcjYwMDA2Njc=", "avatar_url": "https://avatars3.githubusercontent.com/u/6000667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/javier-sanz", "html_url": "https://github.com/javier-sanz", "followers_url": "https://api.github.com/users/javier-sanz/followers", "following_url": "https://api.github.com/users/javier-sanz/following{/other_user}", "gists_url": "https://api.github.com/users/javier-sanz/gists{/gist_id}", "starred_url": "https://api.github.com/users/javier-sanz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/javier-sanz/subscriptions", "organizations_url": "https://api.github.com/users/javier-sanz/orgs", "repos_url": "https://api.github.com/users/javier-sanz/repos", "events_url": "https://api.github.com/users/javier-sanz/events{/privacy}", "received_events_url": "https://api.github.com/users/javier-sanz/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-06-29T16:08:39Z", "updated_at": "2020-07-16T19:53:31Z", "closed_at": "2020-07-16T19:10:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen installing version 0.11.6 (latest right now) I cannot use the library because I get an error `ModuleNotFoundError: No module named 'importlib_metadata' `\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create an empty folder \r\n2. Run `python3.8 -m venv venv`\r\n3. Activate the env `source venv/bin/activate`\r\n4. Install the library `pip install great_expectations`\r\n5. Run the tutorial  `great_expectations init`\r\n6. The next exception is thrown\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/jsanz/Projects/urba/poc/great_expectations/test/venv/bin/great_expectations\", line 7, in <module>\r\n    from great_expectations.cli import main\r\n  File \"/home/jsanz/Projects/urba/poc/great_expectations/test/venv/lib/python3.8/site-packages/great_expectations/__init__.py\", line 7, in <module>\r\n    from great_expectations.data_context import DataContext\r\n  File \"/home/jsanz/Projects/urba/poc/great_expectations/test/venv/lib/python3.8/site-packages/great_expectations/data_context/__init__.py\", line 3, in <module>\r\n    from .data_context import BaseDataContext, DataContext, ExplorerDataContext\r\n  File \"/home/jsanz/Projects/urba/poc/great_expectations/test/venv/lib/python3.8/site-packages/great_expectations/data_context/data_context.py\", line 28, in <module>\r\n    from great_expectations.core.usage_statistics.usage_statistics import (\r\n  File \"/home/jsanz/Projects/urba/poc/great_expectations/test/venv/lib/python3.8/site-packages/great_expectations/core/usage_statistics/usage_statistics.py\", line 17, in <module>\r\n    from great_expectations.core.usage_statistics.anonymizers.anonymizer import Anonymizer\r\n  File \"/home/jsanz/Projects/urba/poc/great_expectations/test/venv/lib/python3.8/site-packages/great_expectations/core/usage_statistics/anonymizers/anonymizer.py\", line 4, in <module>\r\n    from great_expectations.util import load_class\r\n  File \"/home/jsanz/Projects/urba/poc/great_expectations/test/venv/lib/python3.8/site-packages/great_expectations/util.py\", line 13, in <module>\r\n    import importlib_metadata\r\nModuleNotFoundError: No module named 'importlib_metadata'\r\n```\r\n\r\n**Expected behavior**\r\nStart the tutorial with no errors. \r\n\r\n**Environment (please complete the following information):**\r\n - OS: Ubuntu 18.04.4 LTS, Python 3.8.0 (default, Oct 28 2019, 16:14:01) \r\n - GE Version: 0.11.6\r\n\r\n**Additional context**\r\nRunning `pip install importlib-metadata` solves the issue. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1643", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1643/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1643/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1643/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1643", "id": 645518343, "node_id": "MDU6SXNzdWU2NDU1MTgzNDM=", "number": 1643, "title": "Make \"suite edit\" generated Notebooks customizable", "user": {"login": "dmateusp", "id": 8832050, "node_id": "MDQ6VXNlcjg4MzIwNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8832050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmateusp", "html_url": "https://github.com/dmateusp", "followers_url": "https://api.github.com/users/dmateusp/followers", "following_url": "https://api.github.com/users/dmateusp/following{/other_user}", "gists_url": "https://api.github.com/users/dmateusp/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmateusp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmateusp/subscriptions", "organizations_url": "https://api.github.com/users/dmateusp/orgs", "repos_url": "https://api.github.com/users/dmateusp/repos", "events_url": "https://api.github.com/users/dmateusp/events{/privacy}", "received_events_url": "https://api.github.com/users/dmateusp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-25T12:23:29Z", "updated_at": "2020-07-14T20:43:06Z", "closed_at": "2020-07-14T20:43:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nI would like to:\r\n- Inject company-specific notes and documentation links inside the generated notebooks\r\n- Change code generated by `suite edit` in the \"footer\" specifically, so a specific validation operator and site is used\r\n\r\n**Describe the solution you'd like**\r\nI would like to be able to pass configuration and use Markdown / Python files from my plugins package\r\n\r\n**Additional context**\r\nOur current footer code generated by \"suite edit\" is invalid for us, as it tries to build all the sites (including S3 sites we only want to touch explicitly), and we want to overwrite the validation operator used\r\n\r\nSo if I couldn't customize the generated code, I would have to add some warning for users to change the footer code to use this snippet:\r\n```python\r\nresults = context.run_validation_operator(\"local\", assets_to_validate=[batch], run_id=run_id)\r\nvalidation_result_identifier = results.list_validation_result_identifiers()[0]\r\ncontext.build_data_docs(site_names=[\"site_local\"])\r\ncontext.open_data_docs(validation_result_identifier, site_name=\"site_local\")\r\n``` \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1637", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1637/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1637/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1637/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1637", "id": 644259931, "node_id": "MDU6SXNzdWU2NDQyNTk5MzE=", "number": 1637, "title": "Data docs fails to build if a suite was instantiated with metadata.", "user": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-24T01:59:26Z", "updated_at": "2020-06-25T21:11:39Z", "closed_at": "2020-06-25T21:11:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\nIn the constructor of `ExpectationSuite` if a meta is passed, the `great_expectations.__version__` is not added. This causes data docs to fail to build.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a suite by instantiating an `ExpectationSuite` with some metadata\r\n2. save the suite\r\n3. run `great_expectations docs build`\r\n4. Note error\r\n\r\n```python\r\n--- Logging error ---\r\nTraceback (most recent call last):\r\n  File \"/Users/taylor/repos/forks/great_expectations/great_expectations/render/renderer/site_builder.py\", line 427, in build\r\n    rendered_content = self.renderer_class.render(resource)\r\n  File \"/Users/taylor/repos/forks/great_expectations/great_expectations/render/renderer/page_renderer.py\", line 457, in render\r\n    self._render_expectation_suite_info(expectations),\r\n  File \"/Users/taylor/repos/forks/great_expectations/great_expectations/render/renderer/page_renderer.py\", line 539, in _render_expectation_suite_info\r\n    ge_version = expectations.meta[\"great_expectations.__version__\"]\r\nKeyError: 'great_expectations.__version__'\r\n```\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: [e.g. iOS] macOS\r\n - GE Version: [e.g. 0.10.0] 0.11.5", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1635", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1635/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1635/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1635/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1635", "id": 644211681, "node_id": "MDU6SXNzdWU2NDQyMTE2ODE=", "number": 1635, "title": "Unable to write data docs to s3", "user": {"login": "anthonyburdi", "id": 9903066, "node_id": "MDQ6VXNlcjk5MDMwNjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9903066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthonyburdi", "html_url": "https://github.com/anthonyburdi", "followers_url": "https://api.github.com/users/anthonyburdi/followers", "following_url": "https://api.github.com/users/anthonyburdi/following{/other_user}", "gists_url": "https://api.github.com/users/anthonyburdi/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthonyburdi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthonyburdi/subscriptions", "organizations_url": "https://api.github.com/users/anthonyburdi/orgs", "repos_url": "https://api.github.com/users/anthonyburdi/repos", "events_url": "https://api.github.com/users/anthonyburdi/events{/privacy}", "received_events_url": "https://api.github.com/users/anthonyburdi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-23T23:29:48Z", "updated_at": "2020-06-23T23:33:58Z", "closed_at": "2020-06-23T23:33:58Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n`great_expectations docs build` runs local site build but hangs on s3 site build. s3 access was confirmed by writing validation results to the bucket.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Followed these instructions to write data docs to s3: https://docs.greatexpectations.io/en/latest/how_to_guides/configuring_data_docs/how_to_publish_data_docs_to_s3.html\r\n2. run `great_expectations docs build`\r\n3. answer `Y`\r\n4. Local docs build fine, output hangs after `Building Data Docs...`\r\n\r\n**Expected behavior**\r\nI expected the data docs to be created and written to the s3 bucket\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Ubuntu 18.04.4 LTS\r\n - GE Version: 0.11.4\r\n\r\n**Additional context**\r\nBucket access is using http:// not https://, when `The following Data Docs sites will be built:` comes up on screen it shows the data docs site as `https://s3.amazonaws.com/<bucket-name>/index.html` which is not accessible. The bucket is accessible at `http://<bucket-name>/index.html` (index.html is just a hello world at this point, not created by ge - before running `ge docs build` I renamed the index.html to avoid conflicts).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1629", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1629/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1629/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1629/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1629", "id": 643059069, "node_id": "MDU6SXNzdWU2NDMwNTkwNjk=", "number": 1629, "title": "Snowflake SSO authentication", "user": {"login": "dmateusp", "id": 8832050, "node_id": "MDQ6VXNlcjg4MzIwNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8832050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmateusp", "html_url": "https://github.com/dmateusp", "followers_url": "https://api.github.com/users/dmateusp/followers", "following_url": "https://api.github.com/users/dmateusp/following{/other_user}", "gists_url": "https://api.github.com/users/dmateusp/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmateusp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmateusp/subscriptions", "organizations_url": "https://api.github.com/users/dmateusp/orgs", "repos_url": "https://api.github.com/users/dmateusp/repos", "events_url": "https://api.github.com/users/dmateusp/events{/privacy}", "received_events_url": "https://api.github.com/users/dmateusp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-22T13:10:29Z", "updated_at": "2020-08-13T14:38:05Z", "closed_at": "2020-08-13T14:38:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nIn our org we use SSO to authenticate users to Snowflake, other means of authentication are only used for non-human processes\r\n\r\n**Describe the solution you'd like**\r\n\r\nI would like GE to support using SSO as a means of authentication, in a similar fashion as DBT: https://docs.getdbt.com/docs/supported-databases/profile-snowflake/#sso-authentication\r\n\r\n**Describe alternatives you've considered**\r\n\r\nWe will use another way of authenticating for the time being\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1620", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1620/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1620/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1620/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1620", "id": 641538844, "node_id": "MDU6SXNzdWU2NDE1Mzg4NDQ=", "number": 1620, "title": "Travis-CI builds are failing with `AttributeError: 'SSLSocket' object has no attribute 'connection`", "user": {"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-06-18T20:46:12Z", "updated_at": "2020-06-19T15:41:32Z", "closed_at": "2020-06-19T15:41:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n* Travis-CI builds have been failing since 2020-06-17\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Trigger Travis-CI with a push or commit. \r\n\r\n**Additional context**\r\nHere is the stacktrace that we get\r\n`Traceback (most recent call last):\r\n  File \"/home/travis/virtualenv/python3.6.3/bin/pytest\", line 11, in <module>\r\n    sys.exit(main())\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/_pytest/config/__init__.py\", line 125, in main\r\n    config=config\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/hooks.py\", line 286, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/manager.py\", line 87, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/callers.py\", line 80, in get_result\r\n    raise ex[1].with_traceback(ex[2])\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/callers.py\", line 187, in _multicall\r\n    res = hook_impl.function(*args)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/_pytest/main.py\", line 240, in pytest_cmdline_main\r\n    return wrap_session(config, _main)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/_pytest/main.py\", line 191, in wrap_session\r\n    session.exitstatus = doit(config, session) or 0\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/hooks.py\", line 286, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/manager.py\", line 87, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/callers.py\", line 203, in _multicall\r\n    gen.send(outcome)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/_pytest/terminal.py\", line 728, in pytest_sessionfinish\r\n    terminalreporter=self, exitstatus=exitstatus, config=self.config\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/hooks.py\", line 286, in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/manager.py\", line 87, in <lambda>\r\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pluggy/callers.py\", line 203, in _multicall\r\n    gen.send(outcome)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/pytest_slack/plugin.py\", line 138, in pytest_terminal_summary\r\n    requests.post(slack_hook, data=json.dumps(payload), timeout=timeout, verify=ssl_verify)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/requests/api.py\", line 119, in post\r\n    return request('post', url, data=data, json=json, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/requests/api.py\", line 61, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/requests/sessions.py\", line 530, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/requests/sessions.py\", line 643, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/requests/adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 677, in urlopen\r\n    chunked=chunked,\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 381, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/urllib3/connectionpool.py\", line 976, in _validate_conn\r\n    conn.connect()\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/urllib3/connection.py\", line 370, in connect\r\n    ssl_context=context,\r\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/snowflake/connector/ssl_wrap_socket.py\", line 411, in ssl_wrap_socket_with_ocsp\r\n    ).validate(server_hostname, ret.connection)\r\nAttributeError: 'SSLSocket' object has no attribute 'connection'\r\nThe command \"pytest $GE_PYTEST_OPTS --cov=great_expectations --slack_hook=$SLACK_WEBHOOK --slack_report_link=$TRAVIS_BUILD_WEB_URL --slack_channel=notifications-great_expectations tests/\" exited with 1.\r\ncache.2\r\nstore build cache\r\nDone. Your build exited with 1.`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1603", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1603/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1603/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1603/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1603", "id": 638916905, "node_id": "MDU6SXNzdWU2Mzg5MTY5MDU=", "number": 1603, "title": "Local Spark not utilizing spark_config parameter from great_expectations.yml", "user": {"login": "WesRoach", "id": 8878926, "node_id": "MDQ6VXNlcjg4Nzg5MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/8878926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WesRoach", "html_url": "https://github.com/WesRoach", "followers_url": "https://api.github.com/users/WesRoach/followers", "following_url": "https://api.github.com/users/WesRoach/following{/other_user}", "gists_url": "https://api.github.com/users/WesRoach/gists{/gist_id}", "starred_url": "https://api.github.com/users/WesRoach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WesRoach/subscriptions", "organizations_url": "https://api.github.com/users/WesRoach/orgs", "repos_url": "https://api.github.com/users/WesRoach/repos", "events_url": "https://api.github.com/users/WesRoach/events{/privacy}", "received_events_url": "https://api.github.com/users/WesRoach/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-06-15T14:52:05Z", "updated_at": "2020-07-22T01:13:25Z", "closed_at": "2020-07-22T01:13:25Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nRunning Spark in local mode.\r\n\r\nI've added the `spark_config` key-value dict to my Spark datasource in great_expectations.yml.\r\n\r\n- Setting environment variable SPARK_DRIVER_MEMORY will be used by GE's Spark session\r\n- Removing env var SPARK_DRIVER_MEMORY and setting `spark.driver.memory` in yaml results in java heap space error.\r\n\r\nUsing the semi-example from https://docs.greatexpectations.io/en/latest/how_to_guides/configuring_datasources/how_to_configure_a_spark_filesystem_datasource.html\r\n\r\n```yaml\r\ndatasources:\r\n  my_data.parquet__dir:\r\n    data_asset_type:\r\n      module_name: great_expectations.dataset\r\n      class_name: SparkDFDataset\r\n    module_name: great_expectations.datasource\r\n    spark_config: {\r\n        \"spark.local.dir\": \"/u01/data/spark-tmp\",\r\n        \"spark.driver.memory\": \"16g\"\r\n    }\r\n    class_name: SparkDFDatasource\r\n    batch_kwargs_generators:\r\n      subdir_reader:\r\n        class_name: SubdirReaderBatchKwargsGenerator\r\n        base_directory: <path-to-directory>\r\n```\r\n\r\nAlso tried:\r\n\r\n```yaml\r\n...\r\n    spark_config: \r\n        spark.local.dir: /u01/data/spark-tmp\r\n        spark.driver.memory: 16g\r\n...\r\n```\r\n\r\n**To Reproduce**\r\n\r\n1. Start GE Spark job (profiling, checkpoint, etc)\r\n1. Check Spark's Environment (typically http://localhost:4040/environment/)\r\n1. Observe Spark's Environment variables\r\n\r\n**Expected behavior**\r\n\r\nExpected GE's Spark Session to utilize spark_config from great_expectations.yml.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: RHEL7\r\n - GE Version: 0.11.1\r\n - PySpark: 2.4.5\r\n - Conda: 4.8.2\r\n\r\nEdit: Added pyspark, conda versions.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1573", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1573/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1573/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1573/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1573", "id": 636485701, "node_id": "MDU6SXNzdWU2MzY0ODU3MDE=", "number": 1573, "title": "No columns description in GE page", "user": {"login": "gardnerdev", "id": 24687623, "node_id": "MDQ6VXNlcjI0Njg3NjIz", "avatar_url": "https://avatars2.githubusercontent.com/u/24687623?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gardnerdev", "html_url": "https://github.com/gardnerdev", "followers_url": "https://api.github.com/users/gardnerdev/followers", "following_url": "https://api.github.com/users/gardnerdev/following{/other_user}", "gists_url": "https://api.github.com/users/gardnerdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/gardnerdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gardnerdev/subscriptions", "organizations_url": "https://api.github.com/users/gardnerdev/orgs", "repos_url": "https://api.github.com/users/gardnerdev/repos", "events_url": "https://api.github.com/users/gardnerdev/events{/privacy}", "received_events_url": "https://api.github.com/users/gardnerdev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-06-10T19:16:42Z", "updated_at": "2020-06-18T21:35:07Z", "closed_at": "2020-06-17T07:54:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "After generating such an expectation suite I can't see column description (latitude, critical).\r\n`{\r\n  \"data_asset_type\": \"Dataset\",\r\n  \"expectation_suite_name\": \"about_corona_suite\",\r\n  \"expectations\": [\r\n    {\r\n      \"expectation_type\": \"expect_table_column_count_to_equal\",\r\n      \"kwargs\": {\r\n        \"value\": 22\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_table_columns_to_match_ordered_list\",\r\n      \"kwargs\": {\r\n        \"column_list\": [\r\n          \"country_info_updated_at\",\r\n          \"latitude\",\r\n          \"longitude\",\r\n          \"name\",\r\n          \"code\",\r\n          \"population\",\r\n          \"critical\",\r\n          \"death_rate\",\r\n          \"recovery_rate\",\r\n          \"recovered_vs_death_ratio\",\r\n          \"cases_per_million_population\",\r\n          \"cases_info_updated_at\",\r\n          \"date\",\r\n          \"deaths\",\r\n          \"confirmed\",\r\n          \"active\",\r\n          \"recovered\",\r\n          \"new_confirmed\",\r\n          \"new_recovered\",\r\n          \"new_deaths\",\r\n          \"tech_download_date\",\r\n          \"tech_granularity\"\r\n        ]\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"code\"\r\n      },\r\n      \"meta\": {\r\n        \"notes\": {\r\n          \"format\": \"markdown\",\r\n          \"content\": [\r\n            \"country ISO-3166-1 Alpha2 code\"\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"latitude\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        },\r\n        \"meta\": {\r\n          \"notes\": {\r\n            \"format\": \"markdown\",\r\n            \"content\": [\r\n              \"country latitude\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"longitude\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"name\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"critical\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_to_exist\",\r\n      \"kwargs\": {\r\n        \"column\": \"name\"\r\n      },\r\n      \"meta\": {\r\n        \"notes\": {\r\n          \"format\": \"markdown\",\r\n          \"content\": [\r\n            \"this column contains indoor temp readings - CA, spring and summer\"\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_to_exist\",\r\n      \"kwargs\": {\r\n        \"column\": \"critical\"\r\n      },\r\n      \"meta\": {\r\n        \"notes\": {\r\n          \"format\": \"markdown\",\r\n          \"content\": [\r\n            \"this column contains indoor temp readings - CA, spring and summer\"\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"cases_per_million_population\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"cases_info_updated_at\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"date\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"deaths\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"active\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"recovered\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"new_confirmed\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"new_recovered\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"new_deaths\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_value_lengths_to_be_between\",\r\n      \"kwargs\": {\r\n        \"column\": \"tech_download_date\",\r\n        \"min_value\": 1\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"tech_granularity\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_value_lengths_to_be_between\",\r\n      \"kwargs\": {\r\n        \"column\": \"tech_granularity\",\r\n        \"min_value\": 1\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"BasicSuiteBuilderProfiler\": {\r\n      \"batch_kwargs\": {\r\n        \"data_asset_name\": \"about_corona\",\r\n        \"datasource\": \"storage\",\r\n        \"path\": \"path\",\r\n        \"reader_options\": {\r\n          \"sep\": \"$\"\r\n        }\r\n      },\r\n      \"created_at\": 1591719730.2517865,\r\n      \"created_by\": \"BasicSuiteBuilderProfiler\"\r\n    },\r\n    \"citations\": [\r\n      {\r\n        \"batch_kwargs\": {\r\n          \"data_asset_name\": \"about_corona\",\r\n          \"datasource\": \"storage\",\r\n          \"path\": \"some path\",\r\n          \"reader_options\": {\r\n            \"sep\": \"$\"\r\n          }\r\n        },\r\n        \"batch_markers\": {\r\n          \"ge_load_time\": \"20200609T162209.799817Z\",\r\n          \"pandas_data_fingerprint\": \"af79c91a032a79143fd0f967989d6eaa\"\r\n        },\r\n        \"batch_parameters\": null,\r\n        \"citation_date\": \"20200609T162210.405590Z\",\r\n        \"comment\": \"BasicSuiteBuilderProfiler added a citation based on the current batch.\"\r\n      }\r\n    ],\r\n    \"columns\": {\r\n      \"active\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"cases_info_updated_at\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"cases_per_million_population\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"code\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"confirmed\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"country_info_updated_at\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"critical\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"date\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"death_rate\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"deaths\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"latitude\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"longitude\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"name\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"new_confirmed\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"new_deaths\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"new_recovered\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"population\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"recovered\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"recovered_vs_death_ratio\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"recovery_rate\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"tech_download_date\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"tech_granularity\": {\r\n        \"description\": \"\"\r\n      }\r\n    },\r\n    \"great_expectations.__version__\": \"0.11.1\",\r\n    \"notes\": {\r\n      \"content\": [\r\n        \"_To add additional notes, edit the <code>meta.notes.content</code> field in the appropriate Expectation json file._\"\r\n      ],\r\n      \"format\": \"markdown\"\r\n    }\r\n  }\r\n}`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1562", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1562/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1562/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1562/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1562", "id": 632461986, "node_id": "MDU6SXNzdWU2MzI0NjE5ODY=", "number": 1562, "title": "Example of a restful GE implementation?", "user": {"login": "cwerner", "id": 13906519, "node_id": "MDQ6VXNlcjEzOTA2NTE5", "avatar_url": "https://avatars0.githubusercontent.com/u/13906519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cwerner", "html_url": "https://github.com/cwerner", "followers_url": "https://api.github.com/users/cwerner/followers", "following_url": "https://api.github.com/users/cwerner/following{/other_user}", "gists_url": "https://api.github.com/users/cwerner/gists{/gist_id}", "starred_url": "https://api.github.com/users/cwerner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cwerner/subscriptions", "organizations_url": "https://api.github.com/users/cwerner/orgs", "repos_url": "https://api.github.com/users/cwerner/repos", "events_url": "https://api.github.com/users/cwerner/events{/privacy}", "received_events_url": "https://api.github.com/users/cwerner/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721239, "node_id": "MDU6TGFiZWw2ODg3MjEyMzk=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-06T13:26:18Z", "updated_at": "2020-06-08T15:17:12Z", "closed_at": "2020-06-08T15:17:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi (and sorry if this is the wrong place for this)\r\n\r\nI want to implement a restful app/ endpoint (using fastapi) that gets sent a CSV and return the validation result. Additionally I\u2019d like to allow to pass new expectations to the app for future validations. Is there any example of something like this? best practices? And would you say this setup is feasible or should I think about another design?\r\n\r\nCheers,\r\nC\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1557", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1557/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1557/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1557/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1557", "id": 632006831, "node_id": "MDU6SXNzdWU2MzIwMDY4MzE=", "number": 1557, "title": "Expectation glossary link in suite edit notebook is broken", "user": {"login": "rexboyce", "id": 64218278, "node_id": "MDQ6VXNlcjY0MjE4Mjc4", "avatar_url": "https://avatars1.githubusercontent.com/u/64218278?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rexboyce", "html_url": "https://github.com/rexboyce", "followers_url": "https://api.github.com/users/rexboyce/followers", "following_url": "https://api.github.com/users/rexboyce/following{/other_user}", "gists_url": "https://api.github.com/users/rexboyce/gists{/gist_id}", "starred_url": "https://api.github.com/users/rexboyce/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rexboyce/subscriptions", "organizations_url": "https://api.github.com/users/rexboyce/orgs", "repos_url": "https://api.github.com/users/rexboyce/repos", "events_url": "https://api.github.com/users/rexboyce/events{/privacy}", "received_events_url": "https://api.github.com/users/rexboyce/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-05T22:07:35Z", "updated_at": "2020-06-10T22:48:03Z", "closed_at": "2020-06-10T22:48:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nExpectation glossary link in suite edit notebook is broken\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. open suite edit notebook\r\n2. click on expectation glossary link\r\n3. oh no it's broken\r\n\r\n**Expected behavior**\r\nLink should not be broken\r\n\r\n**Environment (please complete the following information):**\r\n - OS: N/A\r\n - GE Version: 0.11.2\r\n\r\n**Additional context**\r\nN/A\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1545", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1545/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1545/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1545/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1545", "id": 630531995, "node_id": "MDU6SXNzdWU2MzA1MzE5OTU=", "number": 1545, "title": "[BUGFIX] Correct link to Validation Action", "user": {"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1675427655, "node_id": "MDU6TGFiZWwxNjc1NDI3NjU1", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/docs", "name": "docs", "color": "006b75", "default": false, "description": ""}], "state": "closed", "locked": false, "assignee": {"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Shinnnyshinshin", "id": 25670697, "node_id": "MDQ6VXNlcjI1NjcwNjk3", "avatar_url": "https://avatars1.githubusercontent.com/u/25670697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Shinnnyshinshin", "html_url": "https://github.com/Shinnnyshinshin", "followers_url": "https://api.github.com/users/Shinnnyshinshin/followers", "following_url": "https://api.github.com/users/Shinnnyshinshin/following{/other_user}", "gists_url": "https://api.github.com/users/Shinnnyshinshin/gists{/gist_id}", "starred_url": "https://api.github.com/users/Shinnnyshinshin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Shinnnyshinshin/subscriptions", "organizations_url": "https://api.github.com/users/Shinnnyshinshin/orgs", "repos_url": "https://api.github.com/users/Shinnnyshinshin/repos", "events_url": "https://api.github.com/users/Shinnnyshinshin/events{/privacy}", "received_events_url": "https://api.github.com/users/Shinnnyshinshin/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-06-04T05:53:03Z", "updated_at": "2020-06-05T00:27:44Z", "closed_at": "2020-06-05T00:27:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Changes proposed in this pull request:\r\n* [BUGFIX] Correct link to Validation Action in Slack validation action DOC\r\n* \r\n![Screen Shot 2020-06-03 at 10 59 45 PM](https://user-images.githubusercontent.com/25670697/83720442-ecfc2080-a5ed-11ea-966a-bd891735ccb6.png)\r\n\r\nPrevious Design Review notes:\r\n-", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1532", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1532/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1532/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1532/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1532", "id": 629538280, "node_id": "MDU6SXNzdWU2Mjk1MzgyODA=", "number": 1532, "title": "meta markdown notes on Expectations not rendering in data docs", "user": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-02T21:50:27Z", "updated_at": "2020-06-10T15:42:50Z", "closed_at": "2020-06-10T15:42:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\nThe meta markdown notes on Expectations (as documented here https://docs.greatexpectations.io/en/latest/reference/core_concepts/expectations/standard_arguments.html?highlight=markdown) are not rendering in data docs.\r\n\r\n**To Reproduce**\r\n1. Write an expectation like this\r\n```json\r\n{\r\n      \"expectation_type\": \"expect_column_distinct_values_to_be_in_set\",\r\n      \"kwargs\": {\r\n        \"column\": \"genderCode\",\r\n        \"value_set\": [\r\n          1,\r\n          2\r\n        ]\r\n      },\r\n      \"meta\": {\r\n        \"notes\": {\r\n          \"content\": [\r\n            \"## This is fishy - it looks like counts rather than categories\"\r\n          ],\r\n          \"format\": \"markdown\"\r\n        }\r\n      }\r\n    }\r\n```\r\n2. `great_expectations docs build`\r\n3. Note no notes on the Expectation Suite page\r\n4. `great_expectations checkpoint run`\r\n5. `great_expectations docs build`\r\n6. Note no notes on the Validation page\r\n\r\n**Expected behavior**\r\nI expect to see the notes rendered in markdown.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: [e.g. iOS] macOS\r\n - GE Version: [e.g. 0.10.0] 0.11.1\r\n\r\n**Additional context**\r\nNotes make capturing questions during EDA extremely easy especially if they are rendered in data docs.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1524", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1524/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1524/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1524/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1524", "id": 629189319, "node_id": "MDU6SXNzdWU2MjkxODkzMTk=", "number": 1524, "title": "Docs and tool omit it can only handle tabular data", "user": {"login": "stitch", "id": 333846, "node_id": "MDQ6VXNlcjMzMzg0Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/333846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stitch", "html_url": "https://github.com/stitch", "followers_url": "https://api.github.com/users/stitch/followers", "following_url": "https://api.github.com/users/stitch/following{/other_user}", "gists_url": "https://api.github.com/users/stitch/gists{/gist_id}", "starred_url": "https://api.github.com/users/stitch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stitch/subscriptions", "organizations_url": "https://api.github.com/users/stitch/orgs", "repos_url": "https://api.github.com/users/stitch/repos", "events_url": "https://api.github.com/users/stitch/events{/privacy}", "received_events_url": "https://api.github.com/users/stitch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1675427655, "node_id": "MDU6TGFiZWwxNjc1NDI3NjU1", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/docs", "name": "docs", "color": "006b75", "default": false, "description": ""}, {"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-02T13:08:23Z", "updated_at": "2020-06-08T05:31:20Z", "closed_at": "2020-06-08T05:31:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nThe documentation and tool do not notice that validation can only happen for tabular data (rows and columns). In our project we get only json files via API requests, and want to validate those (akin to schema validation, but better and automated).\r\n\r\nAfter attempting loading five different json files, analyzing the errors and then trying the sample data, it became clear that only rows and columns seem to be supported. If i'm wrong: please include a sample with a reasonably interesting json file with some lists and dicts mixed.\r\n\r\n**To Reproduce**\r\nUse `great_expectations init` and select a json file. Parsing will crash with at least some of the following errors:\r\n\r\n- ValueError: If using all scalar values, you must pass an index\r\n- ValueError: Mixing dicts with non-Series may lead to ambiguous ordering.\r\n- TypeError: unhashable type: 'dict'\r\n- ValueError: arrays must all be same length\r\n- TypeError: unhashable type: 'list'\r\n\r\nResuming the process, great_expectations thinks everything went well and asks to generate (empty) docs.\r\n\r\n**Expected behavior**\r\nA warning that only tabular data is supported, and that json files with nested lists or dicts will result in an error.\r\nRe-attempting to run init would not produce empty docs, but should let you select a file again.\r\n \r\n**Environment (please complete the following information):**\r\nMac OS catalina, great expectations 0.11.1\r\n\r\n**Additional context**\r\nLooks promising, and if you only work with tabular data, this library can be spectacular. We're not, but it's not apparent that this project wasn't for us.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1518", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1518/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1518/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1518/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1518", "id": 628722083, "node_id": "MDU6SXNzdWU2Mjg3MjIwODM=", "number": 1518, "title": "great_expectations checkpoint list truncating name", "user": {"login": "anthonyburdi", "id": 9903066, "node_id": "MDQ6VXNlcjk5MDMwNjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/9903066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anthonyburdi", "html_url": "https://github.com/anthonyburdi", "followers_url": "https://api.github.com/users/anthonyburdi/followers", "following_url": "https://api.github.com/users/anthonyburdi/following{/other_user}", "gists_url": "https://api.github.com/users/anthonyburdi/gists{/gist_id}", "starred_url": "https://api.github.com/users/anthonyburdi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anthonyburdi/subscriptions", "organizations_url": "https://api.github.com/users/anthonyburdi/orgs", "repos_url": "https://api.github.com/users/anthonyburdi/repos", "events_url": "https://api.github.com/users/anthonyburdi/events{/privacy}", "received_events_url": "https://api.github.com/users/anthonyburdi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-01T20:57:57Z", "updated_at": "2020-07-02T20:34:17Z", "closed_at": "2020-07-02T20:34:17Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen running `great_expectations checkpoint list` the checkpoint name is truncated to either 14 characters or the last character is removed (I am not sure which).\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a checkpoint with at least 15 characters\r\n2. Run `great_expectations checkpoint list`\r\n\r\n**Expected behavior**\r\nThe list should be accurate based on the checkpoint names\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Ubuntu 18.04.4 LTS\r\n - GE Version: 0.11.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1517", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1517/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1517/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1517/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1517", "id": 627990950, "node_id": "MDU6SXNzdWU2Mjc5OTA5NTA=", "number": 1517, "title": "Equivalent Regex '^S[0-9]{9}' and '^S\\d{9}' yield different results for expect_column_values_to_match_regex on batch data", "user": {"login": "bkraft4257", "id": 10143816, "node_id": "MDQ6VXNlcjEwMTQzODE2", "avatar_url": "https://avatars0.githubusercontent.com/u/10143816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkraft4257", "html_url": "https://github.com/bkraft4257", "followers_url": "https://api.github.com/users/bkraft4257/followers", "following_url": "https://api.github.com/users/bkraft4257/following{/other_user}", "gists_url": "https://api.github.com/users/bkraft4257/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkraft4257/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkraft4257/subscriptions", "organizations_url": "https://api.github.com/users/bkraft4257/orgs", "repos_url": "https://api.github.com/users/bkraft4257/repos", "events_url": "https://api.github.com/users/bkraft4257/events{/privacy}", "received_events_url": "https://api.github.com/users/bkraft4257/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-31T15:56:45Z", "updated_at": "2020-06-08T20:15:24Z", "closed_at": "2020-06-08T20:15:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen I applied expect_column_values_to_match_regex to a column in a \r\n\r\nbatch of data pulled from a database I obtained two different answers for two equivalent regex expressions. Regular expression one is '^S[0-9]{9}'. I also tried the equivalent regular expression '^S\\d{9}'. Although the regular expressions are equivalent the first regular expression worked as expected while the second regular expression failed. I have included my batch setup, which was created automatically by Great Expectations. Along with a screenshot of the results. PHI has been blurred out.\r\n\r\nI have also done some initial testing to try and isolate the problem. I was surprised to learn that both regular expressions work as expected on Pandas and Great Expectation data frames. I tried to run Great Expectation test to investigate this problem but encountered issues with my test environment. I am also new to Great Expectations so it was going to be a while before I will be able to understand the code to create an appropriate pull request.\r\n\r\n**To Reproduce**\r\nSee the attached PDF and image for more details. \r\n\r\n<img width=\"597\" alt=\"ge_batch_regex_bug\" src=\"https://user-images.githubusercontent.com/10143816/83356807-7b467d00-a336-11ea-9892-7ea26d2ac0c5.png\">\r\n\r\n[great_expectations_regex_bug_in_batch.pdf](https://github.com/great-expectations/great_expectations/files/4707921/great_expectations_regex_bug_in_batch.pdf)\r\n\r\n**Expected behavior**\r\nEquivalent regular expressions should produce identical results.  If you use these two equivalent regex expressions in an expectation directly on a Great Expectations data frame they produce identical results. \r\n\r\n**Environment (please complete the following information):**\r\n - OS: MacOs X\r\n - GE Version: 0.11\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1509", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1509/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1509/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1509/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1509", "id": 627192949, "node_id": "MDU6SXNzdWU2MjcxOTI5NDk=", "number": 1509, "title": "TypeError: can't compare offset-naive and offset-aware datetimes", "user": {"login": "andyreagan", "id": 3012361, "node_id": "MDQ6VXNlcjMwMTIzNjE=", "avatar_url": "https://avatars0.githubusercontent.com/u/3012361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andyreagan", "html_url": "https://github.com/andyreagan", "followers_url": "https://api.github.com/users/andyreagan/followers", "following_url": "https://api.github.com/users/andyreagan/following{/other_user}", "gists_url": "https://api.github.com/users/andyreagan/gists{/gist_id}", "starred_url": "https://api.github.com/users/andyreagan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andyreagan/subscriptions", "organizations_url": "https://api.github.com/users/andyreagan/orgs", "repos_url": "https://api.github.com/users/andyreagan/repos", "events_url": "https://api.github.com/users/andyreagan/events{/privacy}", "received_events_url": "https://api.github.com/users/andyreagan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-29T11:16:54Z", "updated_at": "2020-05-30T02:20:00Z", "closed_at": "2020-05-30T02:20:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nI'm writing my first checkpoint, but it won't run:\r\n```\r\nError running action with name update_data_docs\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/validation_operators/validation_operators.py\", line 288, in _run_actions\r\n    action_result = self.actions[action[\"name\"]].run(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/validation_operators/actions.py\", line 40, in run\r\n    return self._run(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/validation_operators/actions.py\", line 332, in _run\r\n    self.data_context.build_data_docs(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/core/usage_statistics/usage_statistics.py\", line 242, in usage_statistics_wrapped_method\r\n    result = func(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/data_context/data_context.py\", line 1436, in build_data_docs\r\n    index_page_resource_identifier_tuple = site_builder.build(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/render/renderer/site_builder.py\", line 265, in build\r\n    index_page_resource_identifier_tuple = self.site_index_builder.build()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/render/renderer/site_builder.py\", line 686, in build\r\n    validation_result_keys = sorted(\r\nTypeError: can't compare offset-naive and offset-aware datetimes\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/bin//great_expectations\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/cli/cli.py\", line 65, in main\r\n    cli()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/click/core.py\", line 764, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/click/core.py\", line 717, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/click/core.py\", line 1137, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/click/core.py\", line 1137, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/click/core.py\", line 956, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/click/core.py\", line 555, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/cli/mark.py\", line 28, in wrapper\r\n    func(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/cli/checkpoint.py\", line 188, in checkpoint_run\r\n    results = context.run_validation_operator(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/core/usage_statistics/usage_statistics.py\", line 242, in usage_statistics_wrapped_method\r\n    result = func(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/data_context/data_context.py\", line 871, in run_validation_operator\r\n    return validation_operator.run(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/validation_operators/validation_operators.py\", line 238, in run\r\n    batch_actions_results = self._run_actions(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/validation_operators/validation_operators.py\", line 301, in _run_actions\r\n    raise e\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/validation_operators/validation_operators.py\", line 288, in _run_actions\r\n    action_result = self.actions[action[\"name\"]].run(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/validation_operators/actions.py\", line 40, in run\r\n    return self._run(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/validation_operators/actions.py\", line 332, in _run\r\n    self.data_context.build_data_docs(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/core/usage_statistics/usage_statistics.py\", line 242, in usage_statistics_wrapped_method\r\n    result = func(*args, **kwargs)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/data_context/data_context.py\", line 1436, in build_data_docs\r\n    index_page_resource_identifier_tuple = site_builder.build(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/render/renderer/site_builder.py\", line 265, in build\r\n    index_page_resource_identifier_tuple = self.site_index_builder.build()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/great_expectations/render/renderer/site_builder.py\", line 686, in build\r\n    validation_result_keys = sorted(\r\nTypeError: can't compare offset-naive and offset-aware datetimes\r\n```\r\n\r\n**To Reproduce**\r\n...\r\n\r\n**Environment (please complete the following information):**\r\n - OS: OSX\r\n - GE Version: 0.11.0\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1508", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1508/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1508/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1508/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1508", "id": 626979133, "node_id": "MDU6SXNzdWU2MjY5NzkxMzM=", "number": 1508, "title": "JSON file path issue while creating new Expectation Suite ", "user": {"login": "pankaj890", "id": 18510105, "node_id": "MDQ6VXNlcjE4NTEwMTA1", "avatar_url": "https://avatars1.githubusercontent.com/u/18510105?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pankaj890", "html_url": "https://github.com/pankaj890", "followers_url": "https://api.github.com/users/pankaj890/followers", "following_url": "https://api.github.com/users/pankaj890/following{/other_user}", "gists_url": "https://api.github.com/users/pankaj890/gists{/gist_id}", "starred_url": "https://api.github.com/users/pankaj890/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pankaj890/subscriptions", "organizations_url": "https://api.github.com/users/pankaj890/orgs", "repos_url": "https://api.github.com/users/pankaj890/repos", "events_url": "https://api.github.com/users/pankaj890/events{/privacy}", "received_events_url": "https://api.github.com/users/pankaj890/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-29T03:56:21Z", "updated_at": "2020-05-29T20:13:50Z", "closed_at": "2020-05-29T20:13:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "After I upgraded to GE version 0.11.0, I am getting the incorrect file path error for the expectation's JSON file.\r\n\r\nSteps to reproduce the behavior:\r\n1. Try creating a new expectation suite by using either of below commands\r\n        great_expectations init\r\n        great_expectations suite new\r\n\r\nYou will get below error while saving suite's JSON file:\r\n[WinError 123] The filename, directory name, or volume label syntax is incorrect\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Windows 10\r\n - GE Version: 0.11.0\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1483", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1483/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1483/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1483/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1483", "id": 623686565, "node_id": "MDU6SXNzdWU2MjM2ODY1NjU=", "number": 1483, "title": "Error when saving expectation suit to disk on Windows OS.", "user": {"login": "MrKriss", "id": 1253209, "node_id": "MDQ6VXNlcjEyNTMyMDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1253209?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrKriss", "html_url": "https://github.com/MrKriss", "followers_url": "https://api.github.com/users/MrKriss/followers", "following_url": "https://api.github.com/users/MrKriss/following{/other_user}", "gists_url": "https://api.github.com/users/MrKriss/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrKriss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrKriss/subscriptions", "organizations_url": "https://api.github.com/users/MrKriss/orgs", "repos_url": "https://api.github.com/users/MrKriss/repos", "events_url": "https://api.github.com/users/MrKriss/events{/privacy}", "received_events_url": "https://api.github.com/users/MrKriss/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "eugmandel", "id": 80363, "node_id": "MDQ6VXNlcjgwMzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/80363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugmandel", "html_url": "https://github.com/eugmandel", "followers_url": "https://api.github.com/users/eugmandel/followers", "following_url": "https://api.github.com/users/eugmandel/following{/other_user}", "gists_url": "https://api.github.com/users/eugmandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugmandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugmandel/subscriptions", "organizations_url": "https://api.github.com/users/eugmandel/orgs", "repos_url": "https://api.github.com/users/eugmandel/repos", "events_url": "https://api.github.com/users/eugmandel/events{/privacy}", "received_events_url": "https://api.github.com/users/eugmandel/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "eugmandel", "id": 80363, "node_id": "MDQ6VXNlcjgwMzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/80363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugmandel", "html_url": "https://github.com/eugmandel", "followers_url": "https://api.github.com/users/eugmandel/followers", "following_url": "https://api.github.com/users/eugmandel/following{/other_user}", "gists_url": "https://api.github.com/users/eugmandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugmandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugmandel/subscriptions", "organizations_url": "https://api.github.com/users/eugmandel/orgs", "repos_url": "https://api.github.com/users/eugmandel/repos", "events_url": "https://api.github.com/users/eugmandel/events{/privacy}", "received_events_url": "https://api.github.com/users/eugmandel/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-05-23T15:46:43Z", "updated_at": "2020-07-12T22:22:09Z", "closed_at": "2020-07-12T22:22:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nThe following error occurs when saving expectation suits to disk on Windows.\r\n```\r\n[WinError 123] The filename, directory name, or volume label syntax is incorrect: 'C:\\\\Users\\\\Chris Musselle\\\\projects\\\\ge_example_project\\\\great_expectations\\\\uncommitted/validations/npidata\\\\warning\\\\20200523T093819.284016Z\\\\2020-05-23T09:38:19.284016+00:00'\r\n```\r\nThis is possibly due to the colons in the timestamp part of the generated file path not being valid on Windows OS.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Follow the `great_expectations init` setup walkthough, fails just after displaying `Generating example Expectation Suite...`\r\n1. Or on running the `context.run_validation_operator()` step in the example notebook created to edit the suite after project setup.  \r\n\r\n**Expected behavior**\r\nSuccessful saving of the expectations suite.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Windows\r\n - GE Version: 0.11.0\r\n\r\n**Additional context**\r\nFrom doing a bit of diging it looks like the ISO formatted date string is used as part of the `run_id`, \r\n\r\nhttps://github.com/great-expectations/great_expectations/blob/3901afe64eca52f3264ba3d49701e774ba28cb81/great_expectations/core/__init__.py#L344-L345\r\n\r\nwhich ultimately becomes part of the a key passed to the `TupleFilesystemStoreBackend`\r\n\r\nhttps://github.com/great-expectations/great_expectations/blob/3901afe64eca52f3264ba3d49701e774ba28cb81/great_expectations/data_context/store/tuple_store_backend.py#L240-L245\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1481", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1481/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1481/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1481/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1481", "id": 623654108, "node_id": "MDU6SXNzdWU2MjM2NTQxMDg=", "number": 1481, "title": "Input handling inconsistent between column_(pair_)map_expectation wrappers", "user": {"login": "mlondschien", "id": 61679398, "node_id": "MDQ6VXNlcjYxNjc5Mzk4", "avatar_url": "https://avatars1.githubusercontent.com/u/61679398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlondschien", "html_url": "https://github.com/mlondschien", "followers_url": "https://api.github.com/users/mlondschien/followers", "following_url": "https://api.github.com/users/mlondschien/following{/other_user}", "gists_url": "https://api.github.com/users/mlondschien/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlondschien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlondschien/subscriptions", "organizations_url": "https://api.github.com/users/mlondschien/orgs", "repos_url": "https://api.github.com/users/mlondschien/repos", "events_url": "https://api.github.com/users/mlondschien/events{/privacy}", "received_events_url": "https://api.github.com/users/mlondschien/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721239, "node_id": "MDU6TGFiZWw2ODg3MjEyMzk=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-23T12:50:27Z", "updated_at": "2020-06-24T21:55:39Z", "closed_at": "2020-06-24T21:55:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Wheras the `column_map_expectation` wrapper passes `column` as a string containing the name of the column, the `column_pair_map_expectation` wrapper passes `column_A` and `column_B` as a `pd.Series` (see [here](https://github.com/great-expectations/great_expectations/blob/ef289ea1700aee3c2d49685348cbc00eb991a0ca/great_expectations/dataset/pandas_dataset.py#L171)). Is this as expected?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1473", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1473/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1473/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1473/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1473", "id": 623434259, "node_id": "MDU6SXNzdWU2MjM0MzQyNTk=", "number": 1473, "title": "Output list of failed rows", "user": {"login": "CornerTakenQuickly", "id": 65785870, "node_id": "MDQ6VXNlcjY1Nzg1ODcw", "avatar_url": "https://avatars0.githubusercontent.com/u/65785870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CornerTakenQuickly", "html_url": "https://github.com/CornerTakenQuickly", "followers_url": "https://api.github.com/users/CornerTakenQuickly/followers", "following_url": "https://api.github.com/users/CornerTakenQuickly/following{/other_user}", "gists_url": "https://api.github.com/users/CornerTakenQuickly/gists{/gist_id}", "starred_url": "https://api.github.com/users/CornerTakenQuickly/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CornerTakenQuickly/subscriptions", "organizations_url": "https://api.github.com/users/CornerTakenQuickly/orgs", "repos_url": "https://api.github.com/users/CornerTakenQuickly/repos", "events_url": "https://api.github.com/users/CornerTakenQuickly/events{/privacy}", "received_events_url": "https://api.github.com/users/CornerTakenQuickly/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-22T19:22:45Z", "updated_at": "2020-06-08T05:45:26Z", "closed_at": "2020-06-08T05:45:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "My users requirement is to see a list of rows from the input dataset that failed expectations. So, I would like the ability to configure Great Expectations to output a specified set of fields from the failed input row. Upon execution of an expectation, output a list that contains the specified fields from the input for each row that fails.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1450", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1450/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1450/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1450/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1450", "id": 619431938, "node_id": "MDU6SXNzdWU2MTk0MzE5Mzg=", "number": 1450, "title": "NameError: name 'WithinGroup' is not defined", "user": {"login": "shahinism", "id": 698857, "node_id": "MDQ6VXNlcjY5ODg1Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/698857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shahinism", "html_url": "https://github.com/shahinism", "followers_url": "https://api.github.com/users/shahinism/followers", "following_url": "https://api.github.com/users/shahinism/following{/other_user}", "gists_url": "https://api.github.com/users/shahinism/gists{/gist_id}", "starred_url": "https://api.github.com/users/shahinism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shahinism/subscriptions", "organizations_url": "https://api.github.com/users/shahinism/orgs", "repos_url": "https://api.github.com/users/shahinism/repos", "events_url": "https://api.github.com/users/shahinism/events{/privacy}", "received_events_url": "https://api.github.com/users/shahinism/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-05-16T10:00:33Z", "updated_at": "2020-05-20T16:37:05Z", "closed_at": "2020-05-20T16:37:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the bug**\r\nAfter installing the new released version from Pypi (version 0.10.11), invoking great expectation will raise following exception:\r\n\r\n```\r\n$ great_expectations --version\r\nTraceback (most recent call last):\r\n  File \"/home/hadoop/.local/bin/great_expectations\", line 7, in <module>\r\n    from great_expectations.cli import main\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/__init__.py\", line 7, in <module>\r\n    from great_expectations.data_context import DataContext\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/data_context/__init__.py\", line 3, in <module>\r\n    from .data_context import BaseDataContext, DataContext, ExplorerDataContext\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/data_context/data_context.py\", line 20, in <module>\r\n    from great_expectations.core.usage_statistics.usage_statistics import (\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/core/usage_statistics/usage_statistics.py\", line 20, in <module>\r\n    from great_expectations.core.usage_statistics.anonymizers.data_docs_site_anonymizer import (\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/core/usage_statistics/anonymizers/data_docs_site_anonymizer.py\", line 2, in <module>\r\n    from great_expectations.core.usage_statistics.anonymizers.site_builder_anonymizer import (\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/core/usage_statistics/anonymizers/site_builder_anonymizer.py\", line 2, in <module>\r\n    from great_expectations.render.renderer.site_builder import (\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/render/renderer/__init__.py\", line 7, in <module>\r\n    from .other_section_renderer import ProfilingResultsOverviewSectionRenderer\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/render/renderer/other_section_renderer.py\", line 4, in <module>\r\n    from great_expectations.profile.basic_dataset_profiler import BasicDatasetProfiler\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/profile/__init__.py\", line 1, in <module>\r\n    from .basic_dataset_profiler import BasicDatasetProfiler\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/profile/basic_dataset_profiler.py\", line 3, in <module>\r\n    from great_expectations.profile.base import (\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/profile/base.py\", line 8, in <module>\r\n    from ..dataset import Dataset\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/dataset/__init__.py\", line 3, in <module>\r\n    from .dataset import Dataset\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/dataset/dataset.py\", line 13, in <module>\r\n    from great_expectations.dataset.util import (\r\n  File \"/home/hadoop/.local/lib/python3.6/site-packages/great_expectations/dataset/util.py\", line 578, in <module>\r\n    selects: List[WithinGroup], sql_engine_dialect: DefaultDialect\r\nNameError: name 'WithinGroup' is not define\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behaviour:\r\n1. `pip install great-expectations`\r\n2. `great_expectations --version`\r\n\r\n**Expected behaviour**\r\nTo not raise the exception. \r\n\r\n**Environment (please complete the following information):**\r\n - OS: Linux\r\n - GE Version: 0.10.11", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1443", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1443/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1443/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1443/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1443", "id": 618812125, "node_id": "MDU6SXNzdWU2MTg4MTIxMjU=", "number": 1443, "title": "Lack of optional dependency crashes init", "user": {"login": "kokes", "id": 8451755, "node_id": "MDQ6VXNlcjg0NTE3NTU=", "avatar_url": "https://avatars0.githubusercontent.com/u/8451755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kokes", "html_url": "https://github.com/kokes", "followers_url": "https://api.github.com/users/kokes/followers", "following_url": "https://api.github.com/users/kokes/following{/other_user}", "gists_url": "https://api.github.com/users/kokes/gists{/gist_id}", "starred_url": "https://api.github.com/users/kokes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kokes/subscriptions", "organizations_url": "https://api.github.com/users/kokes/orgs", "repos_url": "https://api.github.com/users/kokes/repos", "events_url": "https://api.github.com/users/kokes/events{/privacy}", "received_events_url": "https://api.github.com/users/kokes/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-15T08:59:19Z", "updated_at": "2020-05-20T16:37:05Z", "closed_at": "2020-05-20T16:37:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I install Great Expectations without SQL Alchemy, `great_expectations init` will fail due to a missing type information.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n```\r\ndocker run -it --rm python:3-slim bash\r\npip3 install great_expectations\r\ngreat_expectations init\r\n```\r\n\r\n**Expected behavior**\r\nI expected init to run. (After I manually installed sqlachemy, it did work.)\r\n\r\nThe reason for this is that you allow SQL Alchemy to be not imported (https://github.com/great-expectations/great_expectations/blob/develop/great_expectations/dataset/util.py#L16), but later require its type information (https://github.com/great-expectations/great_expectations/blob/develop/great_expectations/dataset/util.py#L578).\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS, Ubuntu\r\n - GE Version: latest, 0.10.11\r\n\r\n**Additional context**\r\n\r\ntraceback:\r\n\r\n<details>\r\n<pre>\r\n$ great_expectations -v init\r\nTraceback (most recent call last):\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/bin/great_expectations\", line 5, in <module>\r\n    from great_expectations.cli import main\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/__init__.py\", line 7, in <module>\r\n    from great_expectations.data_context import DataContext\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/data_context/__init__.py\", line 3, in <module>\r\n    from .data_context import BaseDataContext, DataContext, ExplorerDataContext\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/data_context/data_context.py\", line 20, in <module>\r\n    from great_expectations.core.usage_statistics.usage_statistics import (\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/core/usage_statistics/usage_statistics.py\", line 20, in <module>\r\n    from great_expectations.core.usage_statistics.anonymizers.data_docs_site_anonymizer import (\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/core/usage_statistics/anonymizers/data_docs_site_anonymizer.py\", line 2, in <module>\r\n    from great_expectations.core.usage_statistics.anonymizers.site_builder_anonymizer import (\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/core/usage_statistics/anonymizers/site_builder_anonymizer.py\", line 2, in <module>\r\n    from great_expectations.render.renderer.site_builder import (\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/render/renderer/__init__.py\", line 7, in <module>\r\n    from .other_section_renderer import ProfilingResultsOverviewSectionRenderer\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/render/renderer/other_section_renderer.py\", line 4, in <module>\r\n    from great_expectations.profile.basic_dataset_profiler import BasicDatasetProfiler\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/profile/__init__.py\", line 1, in <module>\r\n    from .basic_dataset_profiler import BasicDatasetProfiler\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/profile/basic_dataset_profiler.py\", line 3, in <module>\r\n    from great_expectations.profile.base import (\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/profile/base.py\", line 8, in <module>\r\n    from ..dataset import Dataset\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/dataset/__init__.py\", line 3, in <module>\r\n    from .dataset import Dataset\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/dataset/dataset.py\", line 13, in <module>\r\n    from great_expectations.dataset.util import (\r\n  File \"/Users/okokes/.pyenv/versions/3.7.7/lib/python3.7/site-packages/great_expectations/dataset/util.py\", line 578, in <module>\r\n    selects: List[WithinGroup], sql_engine_dialect: DefaultDialect\r\nNameError: name 'WithinGroup' is not defined\r\n</pre>\r\n</details>\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1424", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1424/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1424/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1424/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1424", "id": 617052824, "node_id": "MDU6SXNzdWU2MTcwNTI4MjQ=", "number": 1424, "title": "Error when `validation_operators` is missing could be more helpful", "user": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-13T00:34:02Z", "updated_at": "2020-08-18T00:42:03Z", "closed_at": "2020-08-18T00:42:03Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen the required key `validation_operators` is missing from the main config file the error thrown should be more helpful.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. mangle a `great_expectations/great_expectations.yml` file by removing the `validation_operators` key entirely.\r\n2. run any cli command such as `great_expectations suite list`\r\n3. See error\r\n```python\r\nHeads up! This feature is Experimental. It may change. Please give us your feedback!\r\nTraceback (most recent call last):\r\n  File \"/Users/taylor/repos/great_expectations/.venv/bin/great_expectations\", line 11, in <module>\r\n    load_entry_point('great-expectations', 'console_scripts', 'great_expectations')()\r\n  File \"/Users/taylor/repos/great_expectations/.venv/lib/python3.7/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/Users/taylor/repos/great_expectations/.venv/lib/python3.7/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/Users/taylor/repos/great_expectations/.venv/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/Users/taylor/repos/great_expectations/.venv/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/Users/taylor/repos/great_expectations/.venv/lib/python3.7/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/Users/taylor/repos/great_expectations/.venv/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/cli/mark.py\", line 28, in wrapper\r\n    func(*args, **kwargs)\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/cli/checkpoint.py\", line 146, in checkpoint_run\r\n    context = toolkit.load_data_context_with_error_handling(directory)\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/cli/toolkit.py\", line 330, in load_data_context_with_error_handling\r\n    context = DataContext(directory)\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/data_context/data_context.py\", line 2041, in __init__\r\n    project_config = self._load_project_config()\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/data_context/data_context.py\", line 2075, in _load_project_config\r\n    return DataContextConfig.from_commented_map(config_dict)\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/data_context/types/base.py\", line 87, in from_commented_map\r\n    return cls(commented_map=commented_map, **config)\r\nTypeError: __init__() missing 1 required positional argument: 'validation_operators'\r\n```\r\n\r\n**Expected behavior**\r\n```bash\r\n$ great_expectations suite list\r\nYour main configuration file `great_expectations/great_expectations.yml` is missing a required key: `validation_operators`. Please fix this as documented here: <LINK_TO_GREAT_DOCUMENT>\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS\r\n - GE Version: 0.10.9", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1422", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1422/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1422/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1422/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1422", "id": 616775640, "node_id": "MDU6SXNzdWU2MTY3NzU2NDA=", "number": 1422, "title": "BasicSuiteBuilderProfiler includes incorrect expectations when using `included_expectations`", "user": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-12T16:02:49Z", "updated_at": "2020-05-19T12:30:14Z", "closed_at": "2020-05-19T12:30:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen specifying `included_expectations` in the scaffold notebook, other expectations appear in the resulting suite.\r\n\r\n**To Reproduce**\r\n\r\n1. Using the movie ratings data, specifically the ratings table.\r\n2. `great_expectations suite scaffold foo`\r\n3. uncomment all columns for inclusion in the suite\r\n4. configure and run the profiler as follows:\r\n```python\r\nscaffold_config = {\r\n    \"included_columns\": included_columns,\r\n    \"included_expectations\": [\"expect_column_values_to_not_be_null\"],\r\n}\r\nsuite, evr = BasicSuiteBuilderProfiler().profile(batch, profiler_configuration=scaffold_config)\r\n```\r\n5. Run the remainder of the notebook\r\n6. In Data Docs, note that there are both table-level expectations and possibly other expectations (in this case one of type `expect_column_values_to_be_unique`\r\n\r\n**Expected behavior**\r\nWhen configuring the `BasicSuiteBuilderProfiler` with `included_expectations`, **only** expectations of that type should remain in the resulting suite.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS\r\n - GE Version: 0.10.9+30.g676e89c7\r\n\r\n**Additional context**\r\nIt is possible that the exclusions may have a similar bug - so verify that as well.\r\n\r\nResulting suite:\r\n```json\r\n{\r\n  \"data_asset_type\": \"Dataset\",\r\n  \"expectation_suite_name\": \"ratings-small\",\r\n  \"expectations\": [\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"userId\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_be_unique\",\r\n      \"kwargs\": {\r\n        \"column\": \"movieId\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"movieId\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"rating\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_be_unique\",\r\n      \"kwargs\": {\r\n        \"column\": \"timestamp\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"timestamp\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"BasicSuiteBuilderProfiler\": {\r\n      \"batch_kwargs\": {\r\n        \"datasource\": \"movies\",\r\n        \"schema\": \"public\",\r\n        \"table\": \"ratings_small\"\r\n      },\r\n      \"created_at\": 1589298770.031562,\r\n      \"created_by\": \"BasicSuiteBuilderProfiler\"\r\n    },\r\n    \"citations\": [\r\n      {\r\n        \"batch_kwargs\": {\r\n          \"datasource\": \"movies\",\r\n          \"schema\": \"public\",\r\n          \"table\": \"ratings_small\"\r\n        },\r\n        \"batch_markers\": {\r\n          \"ge_load_time\": \"20200512T155247.969134Z\"\r\n        },\r\n        \"batch_parameters\": null,\r\n        \"citation_date\": \"2020-05-12T09:52:50.588720\",\r\n        \"comment\": \"BasicSuiteBuilderProfiler added a citation based on the current batch.\"\r\n      }\r\n    ],\r\n    \"columns\": {\r\n      \"movieId\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"rating\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"timestamp\": {\r\n        \"description\": \"\"\r\n      },\r\n      \"userId\": {\r\n        \"description\": \"\"\r\n      }\r\n    },\r\n    \"great_expectations.__version__\": \"0.10.9+21.g5c2bcc3c.dirty\",\r\n    \"notes\": {\r\n      \"content\": [\r\n        \"_To add additional notes, edit the <code>meta.notes.content</code> field in the appropriate Expectation json file._\"\r\n      ],\r\n      \"format\": \"markdown\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n## Full Repro code:\r\n\r\n```python\r\nfrom datetime import datetime\r\nimport great_expectations as ge\r\nimport great_expectations.jupyter_ux\r\nfrom great_expectations.profile import BasicSuiteBuilderProfiler\r\nfrom great_expectations.data_context.types.resource_identifiers import (\r\n    ValidationResultIdentifier,\r\n)\r\n\r\ncontext = ge.data_context.DataContext()\r\n\r\nexpectation_suite_name = \"ratings-small\"\r\nsuite = context.create_expectation_suite(\r\n    expectation_suite_name, overwrite_existing=True\r\n)\r\n\r\nbatch_kwargs = {\"table\": \"ratings_small\", \"schema\": \"public\", \"datasource\": \"movies\"}\r\nbatch = context.get_batch(batch_kwargs, suite)\r\nbatch.head()\r\n\r\nincluded_columns = [\r\n    'userId',\r\n    'movieId',\r\n    'rating',\r\n    'timestamp'\r\n]\r\n\r\n# Wipe the suite clean to prevent unwanted expectations on the batch\r\nsuite = context.create_expectation_suite(expectation_suite_name, overwrite_existing=True)\r\nbatch = context.get_batch(batch_kwargs, suite)\r\n\r\nscaffold_config = {\r\n    \"included_columns\": included_columns,\r\n#     \"excluded_columns\": [],\r\n    \"included_expectations\": [\"expect_column_values_to_not_be_null\"],\r\n#     \"excluded_expectations\": [],\r\n}\r\n\r\nsuite, evr = BasicSuiteBuilderProfiler().profile(batch, profiler_configuration=scaffold_config)\r\n\r\ncontext.save_expectation_suite(suite, expectation_suite_name)\r\n\r\n# Let's make a simple sortable timestamp. Note this could come from your pipeline runner.\r\nrun_id = datetime.utcnow().strftime(\"%Y%m%dT%H%M%S.%fZ\")\r\n\r\nresults = context.run_validation_operator(\"action_list_operator\", assets_to_validate=[batch], run_id=run_id)\r\nexpectation_suite_identifier = list(results[\"details\"].keys())[0]\r\nvalidation_result_identifier = ValidationResultIdentifier(\r\n    expectation_suite_identifier=expectation_suite_identifier,\r\n    batch_identifier=batch.batch_kwargs.to_id(),\r\n    run_id=run_id\r\n)\r\ncontext.build_data_docs()\r\ncontext.open_data_docs(validation_result_identifier)\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1421", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1421/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1421/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1421/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1421", "id": 616604884, "node_id": "MDU6SXNzdWU2MTY2MDQ4ODQ=", "number": 1421, "title": "AWS Glue Data Catalog/other data catalogues integration", "user": {"login": "aleksandersumowski", "id": 6926, "node_id": "MDQ6VXNlcjY5MjY=", "avatar_url": "https://avatars2.githubusercontent.com/u/6926?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aleksandersumowski", "html_url": "https://github.com/aleksandersumowski", "followers_url": "https://api.github.com/users/aleksandersumowski/followers", "following_url": "https://api.github.com/users/aleksandersumowski/following{/other_user}", "gists_url": "https://api.github.com/users/aleksandersumowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/aleksandersumowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aleksandersumowski/subscriptions", "organizations_url": "https://api.github.com/users/aleksandersumowski/orgs", "repos_url": "https://api.github.com/users/aleksandersumowski/repos", "events_url": "https://api.github.com/users/aleksandersumowski/events{/privacy}", "received_events_url": "https://api.github.com/users/aleksandersumowski/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-12T12:09:18Z", "updated_at": "2020-08-18T00:42:03Z", "closed_at": "2020-08-18T00:42:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "It's not a fleshed out idea, just a discussion starter. If you considered something similar somewhere else feel free to close the issue\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nI already have a data catalogue describing expected data structure of my data. I'd like to validate if there are any discrepancies between data catalogue and actual data. I'd still like to be able to generate human readable data dictionary.  \r\n\r\n**Describe the solution you'd like**\r\nI was thinking of a data profiler that would crawl data catalogue instead of actual data. And possibly an expectation that would validate data batches match the schema stored in the catalogue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1413", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1413/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1413/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1413/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1413", "id": 614676561, "node_id": "MDU6SXNzdWU2MTQ2NzY1NjE=", "number": 1413, "title": "Azure Blob Store backend support ", "user": {"login": "dataguage", "id": 23421765, "node_id": "MDQ6VXNlcjIzNDIxNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/23421765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dataguage", "html_url": "https://github.com/dataguage", "followers_url": "https://api.github.com/users/dataguage/followers", "following_url": "https://api.github.com/users/dataguage/following{/other_user}", "gists_url": "https://api.github.com/users/dataguage/gists{/gist_id}", "starred_url": "https://api.github.com/users/dataguage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dataguage/subscriptions", "organizations_url": "https://api.github.com/users/dataguage/orgs", "repos_url": "https://api.github.com/users/dataguage/repos", "events_url": "https://api.github.com/users/dataguage/events{/privacy}", "received_events_url": "https://api.github.com/users/dataguage/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": {"login": "dataguage", "id": 23421765, "node_id": "MDQ6VXNlcjIzNDIxNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/23421765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dataguage", "html_url": "https://github.com/dataguage", "followers_url": "https://api.github.com/users/dataguage/followers", "following_url": "https://api.github.com/users/dataguage/following{/other_user}", "gists_url": "https://api.github.com/users/dataguage/gists{/gist_id}", "starred_url": "https://api.github.com/users/dataguage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dataguage/subscriptions", "organizations_url": "https://api.github.com/users/dataguage/orgs", "repos_url": "https://api.github.com/users/dataguage/repos", "events_url": "https://api.github.com/users/dataguage/events{/privacy}", "received_events_url": "https://api.github.com/users/dataguage/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "dataguage", "id": 23421765, "node_id": "MDQ6VXNlcjIzNDIxNzY1", "avatar_url": "https://avatars3.githubusercontent.com/u/23421765?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dataguage", "html_url": "https://github.com/dataguage", "followers_url": "https://api.github.com/users/dataguage/followers", "following_url": "https://api.github.com/users/dataguage/following{/other_user}", "gists_url": "https://api.github.com/users/dataguage/gists{/gist_id}", "starred_url": "https://api.github.com/users/dataguage/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dataguage/subscriptions", "organizations_url": "https://api.github.com/users/dataguage/orgs", "repos_url": "https://api.github.com/users/dataguage/repos", "events_url": "https://api.github.com/users/dataguage/events{/privacy}", "received_events_url": "https://api.github.com/users/dataguage/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-05-08T11:12:13Z", "updated_at": "2020-08-15T00:41:51Z", "closed_at": "2020-08-15T00:41:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Describe the issue**\r\nDevelop a new feature for putting the data docs to Azure Blob Storage as there are support for GCS and S3.\r\n\r\n**Solution approach**\r\nWill create a TupleAzureStoreBackend class similar to others.\r\n\r\n**Additional context**\r\nAfter the development of this, one will be easily able to put the site docs to azure blob storage as well.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1408", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1408/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1408/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1408/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1408", "id": 614386583, "node_id": "MDU6SXNzdWU2MTQzODY1ODM=", "number": 1408, "title": "expect_column_median_to_be_between throws error if datset has one row", "user": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-07T22:35:49Z", "updated_at": "2020-08-13T00:41:34Z", "closed_at": "2020-08-13T00:41:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\nexpect_column_median_to_be_between throws error if datset has one row\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Run this snippet on an existing data context.\r\n```python\r\nimport great_expectations as ge\r\nfrom great_expectations.profile import BasicSuiteBuilderProfiler\r\n\r\ncontext = ge.data_context.DataContext()\r\nexpectation_suite_name = \"ratings\"\r\nsuite = context.create_expectation_suite(\r\n    expectation_suite_name, overwrite_existing=True\r\n)\r\n\r\nbatch_kwargs = {\"query\": \"select 1\", \"datasource\": \"movies\"}\r\nbatch = context.get_batch(batch_kwargs, suite)\r\nincluded_columns = ['?column?']\r\nscaffold_config = {    \"included_columns\": included_columns,}\r\nsuite, evr = BasicSuiteBuilderProfiler().profile(batch, profiler_configuration=scaffold_config)\r\n```\r\n2. Note this output\r\n```python\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-4-f729f1f7ae06> in <module>\r\n      9     # \"excluded_expectations\": [],\r\n     10 }\r\n---> 11 suite, evr = BasicSuiteBuilderProfiler().profile(batch, profiler_configuration=scaffold_config)\r\n\r\n~/repos/great_expectations/great_expectations/profile/base.py in profile(cls, data_asset, run_id, profiler_configuration)\r\n     81             raise GreatExpectationsError(\"Invalid data_asset for profiler; aborting\")\r\n     82 \r\n---> 83         expectation_suite = cls._profile(data_asset, configuration=profiler_configuration)\r\n     84 \r\n     85         batch_kwargs = data_asset.batch_kwargs\r\n\r\n~/repos/great_expectations/great_expectations/profile/basic_suite_builder_profiler.py in _profile(cls, dataset, configuration)\r\n    465 \r\n    466                     if column_type in [ProfilerDataType.INT, ProfilerDataType.FLOAT]:\r\n--> 467                         cls._create_expectations_for_numeric_column(dataset, column)\r\n    468                     elif column_type in [ProfilerDataType.DATETIME]:\r\n    469                         cls._create_expectations_for_datetime_column(dataset, column)\r\n\r\n~/repos/great_expectations/great_expectations/profile/basic_suite_builder_profiler.py in _create_expectations_for_numeric_column(cls, dataset, column)\r\n    201 \r\n    202         observed_median = dataset.expect_column_median_to_be_between(\r\n--> 203             column, min_value=None, max_value=None, result_format=\"SUMMARY\"\r\n    204         ).result[\"observed_value\"]\r\n    205         if not _is_nan(observed_median):\r\n\r\n~/repos/great_expectations/great_expectations/data_asset/util.py in f(*args, **kwargs)\r\n     79         @wraps(self.mthd, assigned=('__name__', '__module__'))\r\n     80         def f(*args, **kwargs):\r\n---> 81             return self.mthd(obj, *args, **kwargs)\r\n     82 \r\n     83         f.__doc__ = doc\r\n\r\n~/repos/great_expectations/great_expectations/data_asset/data_asset.py in wrapper(self, *args, **kwargs)\r\n    239 \r\n    240                         else:\r\n--> 241                             raise err\r\n    242 \r\n    243                 else:\r\n\r\n~/repos/great_expectations/great_expectations/data_asset/data_asset.py in wrapper(self, *args, **kwargs)\r\n    226                 if self._config.get(\"interactive_evaluation\", True) or self._active_validation:\r\n    227                     try:\r\n--> 228                         return_obj = func(self, **evaluation_args)\r\n    229                         if isinstance(return_obj, dict):\r\n    230                             return_obj = ExpectationValidationResult(**return_obj)\r\n\r\n~/repos/great_expectations/great_expectations/dataset/dataset.py in inner_wrapper(self, column, result_format, *args, **kwargs)\r\n     95             null_count = element_count - nonnull_count\r\n     96 \r\n---> 97             evaluation_result = func(self, column, *args, **kwargs)\r\n     98 \r\n     99             if 'success' not in evaluation_result:\r\n\r\n~/repos/great_expectations/great_expectations/dataset/dataset.py in expect_column_median_to_be_between(self, column, min_value, max_value, strict_min, strict_max, result_format, include_config, catch_exceptions, meta)\r\n   2461 \r\n   2462         \"\"\"\r\n-> 2463         column_median = self.get_column_median(column)\r\n   2464 \r\n   2465         if column_median is None:\r\n\r\n~/repos/great_expectations/great_expectations/dataset/sqlalchemy_dataset.py in get_column_median(self, column)\r\n    486         else:\r\n    487             # An odd number of column values, we can just take the center value\r\n--> 488             column_median = column_values[1][0]  # True center value\r\n    489         return column_median\r\n    490 \r\n\r\nIndexError: list index out of range\r\n```\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS\r\n - GE Version: 0.10.8\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1399", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1399/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1399/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1399/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1399", "id": 614171772, "node_id": "MDU6SXNzdWU2MTQxNzE3NzI=", "number": 1399, "title": "Configuring GCS for Data Docs `prefix` key should be optional", "user": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-07T16:02:51Z", "updated_at": "2020-08-12T23:25:16Z", "closed_at": "2020-08-12T23:24:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\nConfiguring a data docs site on GCS requires the `prefix`.\r\n\r\n**To Reproduce**\r\n\r\n1. Configure a backend like this (note the lack of `prefix` key):\r\n```yaml\r\ndata_docs_sites:\r\n  gcs_site:\r\n    class_name: SiteBuilder\r\n    store_backend:\r\n      class_name: TupleGCSStoreBackend\r\n      bucket: ge-support\r\n      project: my-project\r\n    site_index_builder:\r\n      class_name: DefaultSiteIndexBuilder\r\n```\r\n2. run `great_expectations docs build`\r\n3. Note the stacktrace:\r\n```bash\r\nCouldn't instantiate class : TupleGCSStoreBackend with config : \r\n\tfilepath_prefix\t\texpectations\r\n\tfilepath_suffix\t\t.html\r\n\tbucket\t\tge-support\r\n\tproject\t\tmy-project\r\n \r\n__init__() missing 1 required positional argument: 'prefix'\r\n```\r\n\r\n**Expected behavior**\r\nI would expect the `prefix` key to be optional.\r\n\r\nNote as a workaround you can include the key with an empty string like this:\r\n\r\n```yaml\r\ndata_docs_sites:\r\n  gcs_site:\r\n    class_name: SiteBuilder\r\n    store_backend:\r\n      class_name: TupleGCSStoreBackend\r\n      bucket: ge-support\r\n      prefix: \"\"\r\n      project: my-project\r\n    site_index_builder:\r\n      class_name: DefaultSiteIndexBuilder\r\n```\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS\r\n - GE Version: version 0.10.8+8.g45e7dc06\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1398", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1398/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1398/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1398/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1398", "id": 614168342, "node_id": "MDU6SXNzdWU2MTQxNjgzNDI=", "number": 1398, "title": "Data Docs url does not include GCS prefix if configured", "user": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-07T15:58:01Z", "updated_at": "2020-08-12T23:26:16Z", "closed_at": "2020-08-12T23:26:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\n**To Reproduce**\r\n\r\n1. Configure a backend like this:\r\n```yaml\r\ndata_docs_sites:\r\n  gcs_site:\r\n    class_name: SiteBuilder\r\n    store_backend:\r\n      class_name: TupleGCSStoreBackend\r\n      bucket: ge-support\r\n      prefix: bar\r\n      project: my-project\r\n    site_index_builder:\r\n      class_name: DefaultSiteIndexBuilder\r\n```\r\n2. run `great_expectations docs build`\r\n3. Note the url `https://storage.googleapis.com/ge-support/index.html` that does not include the `prefix` set to `bar` in this case.\r\n\r\n**Expected behavior**\r\nI would expect the url to be `https://storage.googleapis.com/ge-support/bar/index.html`\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS\r\n - GE Version: version 0.10.8+8.g45e7dc06\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1393", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1393/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1393/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1393/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1393", "id": 613435042, "node_id": "MDU6SXNzdWU2MTM0MzUwNDI=", "number": 1393, "title": "Build docs hosted on GCS fails due to unexpected keyword argument 'content_encoding'", "user": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-06T16:03:45Z", "updated_at": "2020-05-07T00:08:46Z", "closed_at": "2020-05-07T00:08:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen attempting to build docs hosted on GCS a stacktrace is thrown.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Set up a project with a Data Docs site configured as follows:\r\n```yaml\r\ndata_docs_sites:\r\n   gcs_site:\r\n    class_name: SiteBuilder\r\n    store_backend:\r\n      class_name: TupleGCSStoreBackend\r\n      bucket: taylor-ge-support\r\n      prefix: bar\r\n      project: my_project\r\n    site_index_builder:\r\n      class_name: DefaultSiteIndexBuilder\r\n```\r\n2. Confirm you have your GCS bucket credentials working\r\n3. Run `great_expectations docs build`\r\n4. Note the error:\r\n\r\n```python\r\n$ great_expectations docs build\r\nBuilding Data Docs...\r\nTraceback (most recent call last):\r\n  File \"/Users/taylor/repos/great_expectations/.venv/bin/great_expectations\", line 11, in <module>\r\n    load_entry_point('great-expectations', 'console_scripts', 'great_expectations')()\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/cli/cli.py\", line 67, in main\r\n    cli()\r\n  File \"/Users/taylor/repos/great_expectations/.venv/lib/python3.7/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/Users/taylor/repos/great_expectations/.venv/lib/python3.7/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/Users/taylor/repos/great_expectations/.venv/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/Users/taylor/repos/great_expectations/.venv/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/Users/taylor/repos/great_expectations/.venv/lib/python3.7/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/Users/taylor/repos/great_expectations/.venv/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/cli/docs.py\", line 40, in docs_build\r\n    build_docs(context, site_name=site_name, view=view)\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/cli/docs.py\", line 132, in build_docs\r\n    index_page_locator_infos = context.build_data_docs(site_names=site_names)\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/core/usage_statistics/usage_statistics.py\", line 217, in usage_statistics_wrapped_method\r\n    result = func(*args, **kwargs)\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/data_context/data_context.py\", line 1255, in build_data_docs\r\n    index_page_resource_identifier_tuple = site_builder.build(resource_identifiers)\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/render/renderer/site_builder.py\", line 237, in build\r\n    site_section_builder.build(resource_identifiers=resource_identifiers)\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/render/renderer/site_builder.py\", line 389, in build\r\n    viewable_content\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/data_context/store/html_site_store.py\", line 144, in set\r\n    content_encoding='utf-8', content_type='text/html; charset=utf-8')\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/data_context/store/store_backend.py\", line 32, in set\r\n    return self._set(key, value, **kwargs)\r\n  File \"/Users/taylor/repos/great_expectations/great_expectations/data_context/store/tuple_store_backend.py\", line 473, in _set\r\n    content_type=content_type)\r\nTypeError: upload_from_string() got an unexpected keyword argument 'content_encoding'\r\n```\r\n\r\n**Expected behavior**\r\nDocs to build and upload successfully.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: macOS\r\n - GE Version: version 0.10.8+7.g22935faf\r\n\r\nGoogle library versions:\r\n```\r\ngoogle-api-core          1.17.0\r\ngoogle-auth              1.14.1\r\ngoogle-cloud             0.34.0\r\ngoogle-cloud-core        1.3.0\r\ngoogle-cloud-storage     1.28.1\r\ngoogle-resumable-media   0.5.0\r\ngoogleapis-common-protos 1.51.0\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1391", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1391/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1391/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1391/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1391", "id": 612956416, "node_id": "MDU6SXNzdWU2MTI5NTY0MTY=", "number": 1391, "title": "expect_column_quantile_values_to_be_between expectation throws an \"unexpected keyword WITHIN\" on BigQuery", "user": {"login": "eugmandel", "id": 80363, "node_id": "MDQ6VXNlcjgwMzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/80363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugmandel", "html_url": "https://github.com/eugmandel", "followers_url": "https://api.github.com/users/eugmandel/followers", "following_url": "https://api.github.com/users/eugmandel/following{/other_user}", "gists_url": "https://api.github.com/users/eugmandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugmandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugmandel/subscriptions", "organizations_url": "https://api.github.com/users/eugmandel/orgs", "repos_url": "https://api.github.com/users/eugmandel/repos", "events_url": "https://api.github.com/users/eugmandel/events{/privacy}", "received_events_url": "https://api.github.com/users/eugmandel/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-05T23:30:52Z", "updated_at": "2020-05-11T20:55:10Z", "closed_at": "2020-05-11T20:55:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\nexpect_column_quantile_values_to_be_between expectation throws an \"unexpected keyword WITHIN\" on BigQuery\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\nrun this on a batch (table or query) obtained from a BigQuery datasource:\r\n\r\n```\r\nbatch.expect_column_quantile_values_to_be_between(\r\n    \"MY_LOLUMN_NAME\",\r\n    quantile_ranges={\r\n        \"quantiles\": [0.05, 0.25, 0.5, 0.75, 0.95],\r\n        \"value_ranges\": [\r\n            [None, None],\r\n            [None, None],\r\n            [None, None],\r\n            [None, None],\r\n            [None, None],\r\n        ],\r\n    },\r\n)\r\n```\r\nSee the exception:\r\n![image (2)](https://user-images.githubusercontent.com/80363/81125693-c1eab800-8eed-11ea-807e-9496fce93f73.png)\r\n\r\n\r\n**Expected behavior**\r\nShould return a validation result\r\n\r\n**Environment (please complete the following information):**\r\n - OS: any\r\n - GE Version: 0.10.8\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1389", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1389/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1389/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1389/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1389", "id": 612895509, "node_id": "MDU6SXNzdWU2MTI4OTU1MDk=", "number": 1389, "title": "Python API for creating suites", "user": {"login": "edublancas", "id": 989250, "node_id": "MDQ6VXNlcjk4OTI1MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/989250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edublancas", "html_url": "https://github.com/edublancas", "followers_url": "https://api.github.com/users/edublancas/followers", "following_url": "https://api.github.com/users/edublancas/following{/other_user}", "gists_url": "https://api.github.com/users/edublancas/gists{/gist_id}", "starred_url": "https://api.github.com/users/edublancas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edublancas/subscriptions", "organizations_url": "https://api.github.com/users/edublancas/orgs", "repos_url": "https://api.github.com/users/edublancas/repos", "events_url": "https://api.github.com/users/edublancas/events{/privacy}", "received_events_url": "https://api.github.com/users/edublancas/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721239, "node_id": "MDU6TGFiZWw2ODg3MjEyMzk=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-05T21:07:04Z", "updated_at": "2020-05-07T00:48:41Z", "closed_at": "2020-05-07T00:48:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nI have a pipeline that I want to integrate with great expectations, and would like to automate creating suites for each file.\r\n\r\n**Describe the solution you'd like**\r\n\r\nInstead of doing this for every file:\r\n\r\n```sh\r\ngreat_expectations suite new\r\n\r\n(prompt for file location)\r\n(confirm suite name)\r\n```\r\n\r\nI'd like to code a Python script:\r\n\r\n```python\r\nfor path in paths:\r\n    ge.create_suite(path)\r\n```\r\n\r\n**Additional context**\r\n\r\nI started looking at the source code to see what happens when I type (`great_expectations suite new`), this is what I have:\r\n\r\n```python\r\nfrom great_expectations.cli import toolkit\r\n\r\ncontext = toolkit.load_data_context_with_error_handling('great_expectations')\r\n\r\ntoolkit.create_expectation_suite()\r\n```\r\nBut `toolkit.create_expectation_suite()` uses `click.prompt`, seems like there is no Python API and everything should be done interactively. \r\n\r\nAre there any plans to provide a Python API to support this? Am I on the right track to get this done? (I'm ok mocking user input if it's my only choice).\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1379", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1379/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1379/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1379/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1379", "id": 611978253, "node_id": "MDU6SXNzdWU2MTE5NzgyNTM=", "number": 1379, "title": "[BUG] FileNotFoundError:checkpoint_template.yml", "user": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-05-04T15:48:08Z", "updated_at": "2020-05-04T19:01:07Z", "closed_at": "2020-05-04T19:01:07Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "**Describe the bug**\r\n\r\nThe checkpoint_template.yml file did not get included in packaging.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n```\r\n\u276f great_expectations checkpoint new foo 10k.warning\r\nHeads up! This feature is Experimental. It may change. Please give us your feedback!\r\n\r\nEnter the path (relative or absolute) of a data file\r\n: ../data/10k.csv\r\nTraceback (most recent call last):\r\n  File \"/repro/.venv/bin/great_expectations\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/repro/.venv/lib/python3.7/site-packages/great_expectations/cli/cli.py\", line 67, in main\r\n    cli()\r\n  File \"/repro/.venv/lib/python3.7/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/repro/.venv/lib/python3.7/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/repro/.venv/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/repro/.venv/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/repro/.venv/lib/python3.7/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/repro/.venv/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/repro/.venv/lib/python3.7/site-packages/great_expectations/cli/mark.py\", line 28, in wrapper\r\n    func(*args, **kwargs)\r\n  File \"/repro/.venv/lib/python3.7/site-packages/great_expectations/cli/checkpoint.py\", line 56, in checkpoint_new\r\n    template = _load_checkpoint_yml_template()\r\n  File \"/repro/.venv/lib/python3.7/site-packages/great_expectations/cli/checkpoint.py\", line 98, in _load_checkpoint_yml_template\r\n    with open(template_file, \"r\") as f:\r\nFileNotFoundError: [Errno 2] No such file or directory: '/repro/.venv/lib/python3.7/site-packages/great_expectations/cli/../data_context/checkpoint_template.yml'\r\n```\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: [e.g. iOS]\r\n - GE Version: [e.g. 0.10.0]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1378", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1378/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1378/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1378/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1378", "id": 611889940, "node_id": "MDU6SXNzdWU2MTE4ODk5NDA=", "number": 1378, "title": "Docs Build --site-name bug", "user": {"login": "ddaltonrtr", "id": 45404401, "node_id": "MDQ6VXNlcjQ1NDA0NDAx", "avatar_url": "https://avatars2.githubusercontent.com/u/45404401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ddaltonrtr", "html_url": "https://github.com/ddaltonrtr", "followers_url": "https://api.github.com/users/ddaltonrtr/followers", "following_url": "https://api.github.com/users/ddaltonrtr/following{/other_user}", "gists_url": "https://api.github.com/users/ddaltonrtr/gists{/gist_id}", "starred_url": "https://api.github.com/users/ddaltonrtr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ddaltonrtr/subscriptions", "organizations_url": "https://api.github.com/users/ddaltonrtr/orgs", "repos_url": "https://api.github.com/users/ddaltonrtr/repos", "events_url": "https://api.github.com/users/ddaltonrtr/events{/privacy}", "received_events_url": "https://api.github.com/users/ddaltonrtr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-05-04T13:49:39Z", "updated_at": "2020-05-05T22:36:53Z", "closed_at": "2020-05-05T22:36:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nIf you have a local site and S3 site configured in the yml and run the command `great_expectations docs build --site-name local_site`, great expectations still tries to verify the S3 credentials and run stuff related to the S3 site in the background.\r\n\r\nThis is an issue because a user testing locally should not need access to the production S3 credentials (or any AWS credentials).\r\n\r\n**Temporary Workaround**\r\nIf you add `--no-view` to the end of the command (so the command becomes `great_expectations docs build --site-name local_site --no-view`) you can circumvent this error and achieve the expected behavior. This isn't exactly obvious though to the end user without being told.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Put something like the below in the grea_expectations.yml file:\r\n```\r\ndata_docs_sites:\r\n  # Data Docs make it simple to visualize data quality in your project. These\r\n  # include Expectations, Validations & Profiles. The are built for all\r\n  # Datasources from JSON artifacts in the local repo including validations &\r\n  # profiles from the uncommitted directory. Read more at https://docs.greatexpectations.io/en/latest/features/data_docs.html\r\n  local_site:\r\n    class_name: SiteBuilder\r\n    # set to false to hide how-to buttons in Data Docs\r\n    # show_how_to_buttons: false\r\n    store_backend:\r\n      class_name: TupleFilesystemStoreBackend\r\n      base_directory: uncommitted/data_docs/local_site/\r\n    site_index_builder:\r\n      class_name: DefaultSiteIndexBuilder\r\n  s3_site:\r\n    class_name: SiteBuilder\r\n    store_backend:\r\n      class_name: TupleS3StoreBackend\r\n      bucket: bucket_name\r\n      prefix: sub_directory\r\n```\r\n2. Run `great_expectations docs build --site-name local_site`\r\n3. See error\r\n```\r\nRunning great_expectations docs build --site-name local_site\r\nBuilding Data Docs...\r\nThe following Data Docs sites were built:\r\n - local_site: file:///great_expectations/uncommitted/data_docs/local_site/index.html\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/great_expectations\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python3.7/site-packages/great_expectations/cli/cli.py\", line 67, in main\r\n    cli()\r\n  File \"/usr/local/lib/python3.7/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/usr/local/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/usr/local/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/usr/local/lib/python3.7/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/usr/local/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/great_expectations/cli/docs.py\", line 40, in docs_build\r\n    build_docs(context, site_name=site_name, view=view)\r\n  File \"/usr/local/lib/python3.7/site-packages/great_expectations/cli/docs.py\", line 147, in build_docs\r\n    context.open_data_docs()\r\n  File \"/usr/local/lib/python3.7/site-packages/great_expectations/core/usage_statistics/usage_statistics.py\", line 215, in usage_statistics_wrapped_method\r\n    result = func(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/great_expectations/data_context/data_context.py\", line 428, in open_data_docs\r\n    data_docs_urls = self.get_docs_sites_urls(resource_identifier=resource_identifier)\r\n  File \"/usr/local/lib/python3.7/site-packages/great_expectations/data_context/data_context.py\", line 411, in get_docs_sites_urls\r\n    url = site_builder.get_resource_url(resource_identifier=resource_identifier)\r\n  File \"/usr/local/lib/python3.7/site-packages/great_expectations/render/renderer/site_builder.py\", line 253, in get_resource_url\r\n    return self.target_store.get_url_for_resource(resource_identifier=resource_identifier)\r\n  File \"/usr/local/lib/python3.7/site-packages/great_expectations/data_context/store/html_site_store.py\", line 168, in get_url_for_resource\r\n    return store_backend.get_url_for_key(key)\r\n  File \"/usr/local/lib/python3.7/site-packages/great_expectations/data_context/store/tuple_store_backend.py\", line 380, in get_url_for_key\r\n    location = boto3.client('s3').get_bucket_location(Bucket=self.bucket)['LocationConstraint']\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/client.py\", line 357, in _api_call\r\n    return self._make_api_call(operation_name, kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/botocore/client.py\", line 661, in _make_api_call\r\n    raise error_class(parsed_response, operation_name)\r\nbotocore.exceptions.ClientError: An error occurred (InvalidAccessKeyId) when calling the GetBucketLocation operation: The AWS Access Key Id you provided does not exist in our records.\r\n```\r\n\r\n**Expected behavior**\r\nI expect that by specifying `local_site`, only the local site will be updated and surfaced. Great_expectations will not try to validate/open/update the S3 site.\r\n\r\n**Environment (please complete the following information):**\r\n - python:3.7.6-slim base docker image\r\n - GE Version: 0.10.6\r\n\r\n**Additional context**\r\nI discussed this via slack with @jcampbell and he recommended opening an issue here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1375", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1375/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1375/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1375/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1375", "id": 611076170, "node_id": "MDU6SXNzdWU2MTEwNzYxNzA=", "number": 1375, "title": "Use click.(s)echo and click.style for terminal printing", "user": {"login": "mzjp2", "id": 30357972, "node_id": "MDQ6VXNlcjMwMzU3OTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/30357972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzjp2", "html_url": "https://github.com/mzjp2", "followers_url": "https://api.github.com/users/mzjp2/followers", "following_url": "https://api.github.com/users/mzjp2/following{/other_user}", "gists_url": "https://api.github.com/users/mzjp2/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzjp2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzjp2/subscriptions", "organizations_url": "https://api.github.com/users/mzjp2/orgs", "repos_url": "https://api.github.com/users/mzjp2/repos", "events_url": "https://api.github.com/users/mzjp2/events{/privacy}", "received_events_url": "https://api.github.com/users/mzjp2/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": {"login": "mzjp2", "id": 30357972, "node_id": "MDQ6VXNlcjMwMzU3OTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/30357972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzjp2", "html_url": "https://github.com/mzjp2", "followers_url": "https://api.github.com/users/mzjp2/followers", "following_url": "https://api.github.com/users/mzjp2/following{/other_user}", "gists_url": "https://api.github.com/users/mzjp2/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzjp2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzjp2/subscriptions", "organizations_url": "https://api.github.com/users/mzjp2/orgs", "repos_url": "https://api.github.com/users/mzjp2/repos", "events_url": "https://api.github.com/users/mzjp2/events{/privacy}", "received_events_url": "https://api.github.com/users/mzjp2/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "mzjp2", "id": 30357972, "node_id": "MDQ6VXNlcjMwMzU3OTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/30357972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzjp2", "html_url": "https://github.com/mzjp2", "followers_url": "https://api.github.com/users/mzjp2/followers", "following_url": "https://api.github.com/users/mzjp2/following{/other_user}", "gists_url": "https://api.github.com/users/mzjp2/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzjp2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzjp2/subscriptions", "organizations_url": "https://api.github.com/users/mzjp2/orgs", "repos_url": "https://api.github.com/users/mzjp2/repos", "events_url": "https://api.github.com/users/mzjp2/events{/privacy}", "received_events_url": "https://api.github.com/users/mzjp2/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2020-05-02T00:55:35Z", "updated_at": "2020-08-10T00:42:12Z", "closed_at": "2020-08-10T00:42:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nMinimal impact on end-user, but I notice that codebase has a pretty hacky `cli_message` functionality that `print`s things to the terminal -- which isn't ideal. `print` shouldn't really be part of a codebase. I suspect things might have been done this way because of prior support of Python 2?\r\n\r\n**Describe the solution you'd like**\r\nReplace `cli_message` with `click.secho` or `click.style`, so `cli_message(\"<cyan>my_terminal_string</cyan>)\"` that then gets regexed (slow?) and replaced gets replaced with `click.secho(\"my_terminal_string\", fg=\"cyan\")`.\r\n\r\n`cli_message(\"<cyan>hi</cyan><green>bye</green>\")` becomes `click.echo(click.style(\"hi\", fg=\"cyan\") + click.style(\"bye\", fg=\"green\")` and moreover `click` will fail if `fg` isn't a correct color, unlike `cli_message` which will simply print malformed text (e.g I can see one instance of `</greem>` in the codebase right now).\r\n\r\nAdditionally, you get to drop an extra dependency `termcolor` and the import error handling there, since `click` will just work on all/most? environments and is already a dependency. It also leaves the intricacies of dealing with `stdout` to `click` instead of simple `print` statements on GE's side.\r\n\r\nThoughts? I'm happy to give this a go piecemeal, but it'll be a rather large rewrite and will take a while on my side.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1368", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1368/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1368/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1368/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1368", "id": 610816137, "node_id": "MDU6SXNzdWU2MTA4MTYxMzc=", "number": 1368, "title": "Scaffolding improvements - recipes and JSON structure", "user": {"login": "darrenhaken", "id": 953467, "node_id": "MDQ6VXNlcjk1MzQ2Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/953467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/darrenhaken", "html_url": "https://github.com/darrenhaken", "followers_url": "https://api.github.com/users/darrenhaken/followers", "following_url": "https://api.github.com/users/darrenhaken/following{/other_user}", "gists_url": "https://api.github.com/users/darrenhaken/gists{/gist_id}", "starred_url": "https://api.github.com/users/darrenhaken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/darrenhaken/subscriptions", "organizations_url": "https://api.github.com/users/darrenhaken/orgs", "repos_url": "https://api.github.com/users/darrenhaken/repos", "events_url": "https://api.github.com/users/darrenhaken/events{/privacy}", "received_events_url": "https://api.github.com/users/darrenhaken/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-01T15:41:34Z", "updated_at": "2020-08-07T00:42:19Z", "closed_at": "2020-08-07T00:42:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nThis is related to the new scaffolding feature\r\n\r\n**Describe the solution you'd like**\r\nEvolving the scaffolding to support the following:\r\n* Recipes (support multiple)\r\n* Structure the JSON expectation files to mirror the cells within the notebook.\r\n\r\n## Example/detail on recipes\r\nAn example of this is inspired by the [Six Dimensions of Data Quality](https://www.whitepapers.em360tech.com/wp-content/files_mf/1407250286DAMAUKDQDimensionsWhitePaperR37.pdf).\r\n\r\nThis recipe could generate a notebook with sections like:\r\n* Correctness Expectations\r\n* Completeness Expectations \r\n\r\nIt would be even better if the recipe could also generate some pre-generated GE expectations.\r\nI imagine this would be really for generating reusable expectations like a \"credit card\" or \"us addresses\". These could also be viewed as `packages`.\r\n\r\n## Detail on JSON structure\r\n\r\nIf expectations could be scaffolded with recipes that create a structure in the notebook, it would be awesome if this could be persisted into the JSON files and then during a follow-up edit re-rendered.\r\n\r\nUsing the above example, if tests are written under the `Correctness Expectations` it would be great if that notebook section was re-created.\r\n ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1361", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1361/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1361/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1361/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1361", "id": 609306750, "node_id": "MDU6SXNzdWU2MDkzMDY3NTA=", "number": 1361, "title": "Add site_names parameter to context.open_data_docs() function", "user": {"login": "kolaworld", "id": 17794050, "node_id": "MDQ6VXNlcjE3Nzk0MDUw", "avatar_url": "https://avatars3.githubusercontent.com/u/17794050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kolaworld", "html_url": "https://github.com/kolaworld", "followers_url": "https://api.github.com/users/kolaworld/followers", "following_url": "https://api.github.com/users/kolaworld/following{/other_user}", "gists_url": "https://api.github.com/users/kolaworld/gists{/gist_id}", "starred_url": "https://api.github.com/users/kolaworld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kolaworld/subscriptions", "organizations_url": "https://api.github.com/users/kolaworld/orgs", "repos_url": "https://api.github.com/users/kolaworld/repos", "events_url": "https://api.github.com/users/kolaworld/events{/privacy}", "received_events_url": "https://api.github.com/users/kolaworld/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-29T19:35:59Z", "updated_at": "2020-08-05T00:39:41Z", "closed_at": "2020-08-05T00:39:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nIt would be great to have the ability to `open_data_docs` when developing locally (back-end: TupleFilesystemStoreBackend), and not have _ge_ attempt to open other data_doc_sites with cloud back-ends, ie TupleGCSStoreBackend.\r\n\r\n**Describe the solution you'd like**\r\n\r\nAdd a site_names parameter to the `call context.open_data_docs()` similar to `context.build_data_docs(site_names=[\"dev_site\"])`\r\n\r\n**Describe alternatives you've considered**\r\nNone.\r\n\r\n**Additional context**\r\nNone.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1356", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1356/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1356/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1356/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1356", "id": 608736803, "node_id": "MDU6SXNzdWU2MDg3MzY4MDM=", "number": 1356, "title": "MSSQL Server: non-boolean expression where condition is expected", "user": {"login": "user1002", "id": 24513069, "node_id": "MDQ6VXNlcjI0NTEzMDY5", "avatar_url": "https://avatars1.githubusercontent.com/u/24513069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/user1002", "html_url": "https://github.com/user1002", "followers_url": "https://api.github.com/users/user1002/followers", "following_url": "https://api.github.com/users/user1002/following{/other_user}", "gists_url": "https://api.github.com/users/user1002/gists{/gist_id}", "starred_url": "https://api.github.com/users/user1002/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/user1002/subscriptions", "organizations_url": "https://api.github.com/users/user1002/orgs", "repos_url": "https://api.github.com/users/user1002/repos", "events_url": "https://api.github.com/users/user1002/events{/privacy}", "received_events_url": "https://api.github.com/users/user1002/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "alexsherstinsky", "id": 339166, "node_id": "MDQ6VXNlcjMzOTE2Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/339166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexsherstinsky", "html_url": "https://github.com/alexsherstinsky", "followers_url": "https://api.github.com/users/alexsherstinsky/followers", "following_url": "https://api.github.com/users/alexsherstinsky/following{/other_user}", "gists_url": "https://api.github.com/users/alexsherstinsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexsherstinsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexsherstinsky/subscriptions", "organizations_url": "https://api.github.com/users/alexsherstinsky/orgs", "repos_url": "https://api.github.com/users/alexsherstinsky/repos", "events_url": "https://api.github.com/users/alexsherstinsky/events{/privacy}", "received_events_url": "https://api.github.com/users/alexsherstinsky/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "alexsherstinsky", "id": 339166, "node_id": "MDQ6VXNlcjMzOTE2Ng==", "avatar_url": "https://avatars3.githubusercontent.com/u/339166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexsherstinsky", "html_url": "https://github.com/alexsherstinsky", "followers_url": "https://api.github.com/users/alexsherstinsky/followers", "following_url": "https://api.github.com/users/alexsherstinsky/following{/other_user}", "gists_url": "https://api.github.com/users/alexsherstinsky/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexsherstinsky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexsherstinsky/subscriptions", "organizations_url": "https://api.github.com/users/alexsherstinsky/orgs", "repos_url": "https://api.github.com/users/alexsherstinsky/repos", "events_url": "https://api.github.com/users/alexsherstinsky/events{/privacy}", "received_events_url": "https://api.github.com/users/alexsherstinsky/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2020-04-29T02:34:52Z", "updated_at": "2020-07-27T23:56:32Z", "closed_at": "2020-07-27T23:56:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nWhen running the init command on my MS SQL Server Query, I can getting the error\r\n\r\n> [31m(pymssql.OperationalError) (4145, b\"An expression of non-boolean type specified in a context where a condition is expected, near 'THEN'.DB-Lib error message 20018, severity 15:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\") [SQL: 'SELECT count(*) AS element_count, sum(CASE WHEN %(param_1)s THEN %(param_2)s ELSE %(param_3)s END) AS null_count, sum(CASE WHEN ([Result] IS NULL AND %(param_1)s = 0) THEN %(param_4)s ELSE %(param_5)s END) AS unexpected_count \\nFROM [#ge_tmp_6e03e335]'] [parameters: {'param_1': 0, 'param_2': 1, 'param_3': 0, 'param_4': 1, 'param_5': 0}] (Background on this error at: http://sqlalche.me/e/e3q8)[0m[0m\r\n\r\nI believe the error is happening within this logic:\r\n` sum(CASE WHEN %(param_1)s THEN %(param_2)s ELSE %(param_3)s END) AS null_count`\r\n\r\nBefore WHEN, it should be a condition. Pasting this query in SQL Management Studio gives you this result:\r\n\r\n_An expression of non-boolean type specified in a context where a condition is expected, near 'THEN'._\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Connect to MS SQL Server via SQL Alchemy\r\n2. CLI great_expectations init\r\n3. Provide query\r\n\r\n\r\n**Expected behavior**\r\nWhen the package generates this query, there should be a conidtion before **WHEN**\r\n\r\n**Environment (please complete the following information):**\r\n - Windows 10 \r\n - GE Version: [e.g. 0.10.0]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1350", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1350/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1350/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1350/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1350", "id": 607774171, "node_id": "MDU6SXNzdWU2MDc3NzQxNzE=", "number": 1350, "title": "Allow result_format to be configurable at the run_validation_operator level", "user": {"login": "colmsnowplow", "id": 25744626, "node_id": "MDQ6VXNlcjI1NzQ0NjI2", "avatar_url": "https://avatars3.githubusercontent.com/u/25744626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colmsnowplow", "html_url": "https://github.com/colmsnowplow", "followers_url": "https://api.github.com/users/colmsnowplow/followers", "following_url": "https://api.github.com/users/colmsnowplow/following{/other_user}", "gists_url": "https://api.github.com/users/colmsnowplow/gists{/gist_id}", "starred_url": "https://api.github.com/users/colmsnowplow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colmsnowplow/subscriptions", "organizations_url": "https://api.github.com/users/colmsnowplow/orgs", "repos_url": "https://api.github.com/users/colmsnowplow/repos", "events_url": "https://api.github.com/users/colmsnowplow/events{/privacy}", "received_events_url": "https://api.github.com/users/colmsnowplow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 688721237, "node_id": "MDU6TGFiZWw2ODg3MjEyMzc=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-27T18:54:50Z", "updated_at": "2020-08-05T00:39:41Z", "closed_at": "2020-08-05T00:39:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Is your feature request related to a problem? Please describe.**\r\nIf one would like to use different result formats for local and automated execution, this feature would improve workflow.\r\n\r\n**Describe the solution you'd like**\r\nConfigure the result format per validation config. Perhaps this over-rides any configuration configured at expectation level.\r\n\r\n**Additional context**\r\nAsked about whether it's possible in Slack and was asked to raise an issue - so here you go! :) \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1348", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1348/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1348/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1348/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1348", "id": 607205323, "node_id": "MDU6SXNzdWU2MDcyMDUzMjM=", "number": 1348, "title": "What happened to InMemoryGenerator?", "user": {"login": "josh-cooper", "id": 41467557, "node_id": "MDQ6VXNlcjQxNDY3NTU3", "avatar_url": "https://avatars2.githubusercontent.com/u/41467557?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josh-cooper", "html_url": "https://github.com/josh-cooper", "followers_url": "https://api.github.com/users/josh-cooper/followers", "following_url": "https://api.github.com/users/josh-cooper/following{/other_user}", "gists_url": "https://api.github.com/users/josh-cooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/josh-cooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josh-cooper/subscriptions", "organizations_url": "https://api.github.com/users/josh-cooper/orgs", "repos_url": "https://api.github.com/users/josh-cooper/repos", "events_url": "https://api.github.com/users/josh-cooper/events{/privacy}", "received_events_url": "https://api.github.com/users/josh-cooper/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-27T03:32:55Z", "updated_at": "2020-08-05T00:39:42Z", "closed_at": "2020-08-05T00:39:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Was present in 0.8 but there's no equivalent under batch_kwargs_generators. Documentation still mentions it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1336", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1336/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1336/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1336/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1336", "id": 606229701, "node_id": "MDU6SXNzdWU2MDYyMjk3MDE=", "number": 1336, "title": "Validation-operator should support overwriting validation_operator_name and injecting values", "user": {"login": "dmateusp", "id": 8832050, "node_id": "MDQ6VXNlcjg4MzIwNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8832050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmateusp", "html_url": "https://github.com/dmateusp", "followers_url": "https://api.github.com/users/dmateusp/followers", "following_url": "https://api.github.com/users/dmateusp/following{/other_user}", "gists_url": "https://api.github.com/users/dmateusp/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmateusp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmateusp/subscriptions", "organizations_url": "https://api.github.com/users/dmateusp/orgs", "repos_url": "https://api.github.com/users/dmateusp/repos", "events_url": "https://api.github.com/users/dmateusp/events{/privacy}", "received_events_url": "https://api.github.com/users/dmateusp/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, {"login": "dmateusp", "id": 8832050, "node_id": "MDQ6VXNlcjg4MzIwNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8832050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmateusp", "html_url": "https://github.com/dmateusp", "followers_url": "https://api.github.com/users/dmateusp/followers", "following_url": "https://api.github.com/users/dmateusp/following{/other_user}", "gists_url": "https://api.github.com/users/dmateusp/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmateusp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmateusp/subscriptions", "organizations_url": "https://api.github.com/users/dmateusp/orgs", "repos_url": "https://api.github.com/users/dmateusp/repos", "events_url": "https://api.github.com/users/dmateusp/events{/privacy}", "received_events_url": "https://api.github.com/users/dmateusp/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2020-04-24T11:01:26Z", "updated_at": "2020-08-06T00:40:05Z", "closed_at": "2020-08-06T00:40:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I currently have a cli script which offers many of the features provided now by `validation-operator` CLI command. So I would like to deprecate this custom cli script, but I'm lacking some features.\r\n\r\n* I think the `--name` should be usable along with `--validation_config_file` to overwrite the validation_operator_name, in my case I would want users to be able to use a validation_operator that publishes docs locally, and use the same config file in production but with S3 targets\r\n\r\n* I would like to be able to template some parts of the validation_config_file or be able to pass it completely from the CLI, this is because we want to run QC on a subset of the data, based on timestamp: SELECT * FROM table WHERE event_time>'{{ some date that depends on today}}'\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1332", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1332/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1332/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1332/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1332", "id": 605474662, "node_id": "MDU6SXNzdWU2MDU0NzQ2NjI=", "number": 1332, "title": "Prefect integration", "user": {"login": "RoyalTS", "id": 702580, "node_id": "MDQ6VXNlcjcwMjU4MA==", "avatar_url": "https://avatars1.githubusercontent.com/u/702580?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoyalTS", "html_url": "https://github.com/RoyalTS", "followers_url": "https://api.github.com/users/RoyalTS/followers", "following_url": "https://api.github.com/users/RoyalTS/following{/other_user}", "gists_url": "https://api.github.com/users/RoyalTS/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoyalTS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoyalTS/subscriptions", "organizations_url": "https://api.github.com/users/RoyalTS/orgs", "repos_url": "https://api.github.com/users/RoyalTS/repos", "events_url": "https://api.github.com/users/RoyalTS/events{/privacy}", "received_events_url": "https://api.github.com/users/RoyalTS/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1675427655, "node_id": "MDU6TGFiZWwxNjc1NDI3NjU1", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/docs", "name": "docs", "color": "006b75", "default": false, "description": ""}, {"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-23T12:00:09Z", "updated_at": "2020-07-31T00:39:05Z", "closed_at": "2020-07-31T00:39:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I noticed that the great expectations docs mention GE working together with [Prefect](https://www.prefect.io/).\r\n\r\nAre there examples of this that you could point to? Is there a GreatExpectationsTask someone has cooked up that I could use? Or is this something I would still largely have to roll myself?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1331", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1331/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1331/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1331/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1331", "id": 605267963, "node_id": "MDU6SXNzdWU2MDUyNjc5NjM=", "number": 1331, "title": "Notes not rendered by ValidationResultsPageRenderer in DataDocs", "user": {"login": "mlondschien", "id": 61679398, "node_id": "MDQ6VXNlcjYxNjc5Mzk4", "avatar_url": "https://avatars1.githubusercontent.com/u/61679398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mlondschien", "html_url": "https://github.com/mlondschien", "followers_url": "https://api.github.com/users/mlondschien/followers", "following_url": "https://api.github.com/users/mlondschien/following{/other_user}", "gists_url": "https://api.github.com/users/mlondschien/gists{/gist_id}", "starred_url": "https://api.github.com/users/mlondschien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mlondschien/subscriptions", "organizations_url": "https://api.github.com/users/mlondschien/orgs", "repos_url": "https://api.github.com/users/mlondschien/repos", "events_url": "https://api.github.com/users/mlondschien/events{/privacy}", "received_events_url": "https://api.github.com/users/mlondschien/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-23T06:14:04Z", "updated_at": "2020-08-06T00:40:06Z", "closed_at": "2020-08-06T00:40:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Describe the bug**\r\nNotes added to expectations via meta are not rendered when rendering using the `ValidationResultsPageRenderer`\r\n\r\n**To Reproduce**\r\nMinimal reproducible example:\r\n\r\n```python\r\nimport pandas as pd\r\nimport great_expectations as ge\r\ndf_test = pd.DataFrame({\"test_column\": [1, 2, 3]})\r\nge_df = ge.from_pandas(df_test)\r\nge_df.expect_column_to_exist(\r\n    column=\"test_column\",\r\n    meta={\r\n        \"notes\": {\r\n            \"format\": \"markdown\",\r\n            \"content\": [\r\n                \"#### These are expectation notes \\n - you can use markdown \\n - or just strings\"\r\n            ],\r\n        }\r\n    },\r\n    result_format=\"COMPLETE\",\r\n)\r\nvalidation_result = ge_df.validate()\r\ndocument_model = ge.render.renderer.ValidationResultsPageRenderer().render(\r\n    validation_result\r\n)\r\nwith open(\"path_to_file.html\", \"w\") as writer:\r\n    writer.write(ge.render.view.DefaultJinjaPageView().render(document_model))\r\n```\r\n\r\n**Expected behavior**\r\nI would expect notes to be rendered with the validation results in the Data Docs.\r\n\r\n**Environment (please complete the following information):**\r\n - OS: Linux\r\n - both GE 0.9.11, 0.10.2\r\n\r\n**Additional context**\r\nThanks @eugmandel for helping me out!\r\n\r\nAdditionally it would be nice if one could add notes to the variables. We have notes describing each variable and it would be great if there was a possibility to add them to the Data Docs below the variable name.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1326", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1326/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1326/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1326/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1326", "id": 604791213, "node_id": "MDU6SXNzdWU2MDQ3OTEyMTM=", "number": 1326, "title": "`expect_column_quantile_values_to_be_between` throws error for redshift datasource", "user": {"login": "colmsnowplow", "id": 25744626, "node_id": "MDQ6VXNlcjI1NzQ0NjI2", "avatar_url": "https://avatars3.githubusercontent.com/u/25744626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colmsnowplow", "html_url": "https://github.com/colmsnowplow", "followers_url": "https://api.github.com/users/colmsnowplow/followers", "following_url": "https://api.github.com/users/colmsnowplow/following{/other_user}", "gists_url": "https://api.github.com/users/colmsnowplow/gists{/gist_id}", "starred_url": "https://api.github.com/users/colmsnowplow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colmsnowplow/subscriptions", "organizations_url": "https://api.github.com/users/colmsnowplow/orgs", "repos_url": "https://api.github.com/users/colmsnowplow/repos", "events_url": "https://api.github.com/users/colmsnowplow/events{/privacy}", "received_events_url": "https://api.github.com/users/colmsnowplow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-22T14:12:57Z", "updated_at": "2020-08-04T00:39:37Z", "closed_at": "2020-08-04T00:39:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\npsycopg2.errors.SyntaxError: Aggregate function \"percentile_disc\" is not supported; use approximate percentile_disc or percentile_cont instead.\r\n```\r\n\r\nNot sure yet if this is Redshift-specific or not but will be testing Snowflake and BQ at some point too.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1325", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1325/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1325/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1325/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1325", "id": 604785188, "node_id": "MDU6SXNzdWU2MDQ3ODUxODg=", "number": 1325, "title": "`suite new` command throws error", "user": {"login": "colmsnowplow", "id": 25744626, "node_id": "MDQ6VXNlcjI1NzQ0NjI2", "avatar_url": "https://avatars3.githubusercontent.com/u/25744626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colmsnowplow", "html_url": "https://github.com/colmsnowplow", "followers_url": "https://api.github.com/users/colmsnowplow/followers", "following_url": "https://api.github.com/users/colmsnowplow/following{/other_user}", "gists_url": "https://api.github.com/users/colmsnowplow/gists{/gist_id}", "starred_url": "https://api.github.com/users/colmsnowplow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colmsnowplow/subscriptions", "organizations_url": "https://api.github.com/users/colmsnowplow/orgs", "repos_url": "https://api.github.com/users/colmsnowplow/repos", "events_url": "https://api.github.com/users/colmsnowplow/events{/privacy}", "received_events_url": "https://api.github.com/users/colmsnowplow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-22T14:05:04Z", "updated_at": "2020-08-04T00:39:37Z", "closed_at": "2020-08-04T00:39:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Autogeneration of a new suite for a Redshift table threw the following error:\r\n\r\n```\r\nBuilding Data Docs...\r\n--- Logging error ---\r\nTraceback (most recent call last):\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/great_expectations/render/renderer/site_builder.py\", line 368, in build\r\n    rendered_content = self.renderer_class.render(resource)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/great_expectations/render/renderer/page_renderer.py\", line 69, in render\r\n    if column not in columns:\r\nTypeError: unhashable type: 'list'\r\n```\r\n\r\nEventually the docs (and the test suite) were generated just fine, so not a blocking issue.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1320", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1320/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1320/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1320/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1320", "id": 604119467, "node_id": "MDU6SXNzdWU2MDQxMTk0Njc=", "number": 1320, "title": "Defining multiple 'column' keys in expectation config json results in silently ignoring one of them", "user": {"login": "colmsnowplow", "id": 25744626, "node_id": "MDQ6VXNlcjI1NzQ0NjI2", "avatar_url": "https://avatars3.githubusercontent.com/u/25744626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/colmsnowplow", "html_url": "https://github.com/colmsnowplow", "followers_url": "https://api.github.com/users/colmsnowplow/followers", "following_url": "https://api.github.com/users/colmsnowplow/following{/other_user}", "gists_url": "https://api.github.com/users/colmsnowplow/gists{/gist_id}", "starred_url": "https://api.github.com/users/colmsnowplow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/colmsnowplow/subscriptions", "organizations_url": "https://api.github.com/users/colmsnowplow/orgs", "repos_url": "https://api.github.com/users/colmsnowplow/repos", "events_url": "https://api.github.com/users/colmsnowplow/events{/privacy}", "received_events_url": "https://api.github.com/users/colmsnowplow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-21T16:36:55Z", "updated_at": "2020-08-03T00:40:16Z", "closed_at": "2020-08-03T00:40:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "I noticed some unexpected behaviour when testing how the tool works - if I define two columns in an expectation, running it can still pass even though one of the two columns is ignored. For example:\r\n\r\n```\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\",\r\n      \"kwargs\": {\r\n        \"column\": \"page_view_id\",\r\n        \"column\": \"session_id\"\r\n      },\r\n      \"meta\": {\r\n        \"BasicSuiteBuilderProfiler\": {\r\n          \"confidence\": \"very low\"\r\n        }\r\n      }\r\n    }\r\n```\r\n\r\nResults in a passed config test, but only `session_id` is in the result set. \r\n\r\nAssuming `page_view_id` has been ignored, I would expect this to either throw a warning or an error - otherwise there's a risk of accidentally missing the fact that a (badly configured) test didn't run. It's the users fault, but still sub-optimal UX IMO.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1316", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1316/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1316/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1316/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1316", "id": 602815558, "node_id": "MDU6SXNzdWU2MDI4MTU1NTg=", "number": 1316, "title": "Expectations to all columns", "user": {"login": "solalatus", "id": 11365719, "node_id": "MDQ6VXNlcjExMzY1NzE5", "avatar_url": "https://avatars0.githubusercontent.com/u/11365719?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solalatus", "html_url": "https://github.com/solalatus", "followers_url": "https://api.github.com/users/solalatus/followers", "following_url": "https://api.github.com/users/solalatus/following{/other_user}", "gists_url": "https://api.github.com/users/solalatus/gists{/gist_id}", "starred_url": "https://api.github.com/users/solalatus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solalatus/subscriptions", "organizations_url": "https://api.github.com/users/solalatus/orgs", "repos_url": "https://api.github.com/users/solalatus/repos", "events_url": "https://api.github.com/users/solalatus/events{/privacy}", "received_events_url": "https://api.github.com/users/solalatus/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-19T20:43:55Z", "updated_at": "2020-08-18T19:26:25Z", "closed_at": "2020-07-30T00:37:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "For `expect_column_values_to_not_be_null` and alike, it might make sense to make it easily possible to be applied to all columns (in case of eg. hundreds of columns, one does not have to loop)...\r\n\r\nSeparate expectations with an \"all\" prefix are maybe an overkill. How about an \"all\" string as column name in the existing function?\r\n\r\n(If such facilities exist, please point me to them and accept my apologies...) ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1309", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1309/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1309/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1309/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1309", "id": 601145876, "node_id": "MDU6SXNzdWU2MDExNDU4NzY=", "number": 1309, "title": "unhashable type: 'dict' on files with nested map/object", "user": {"login": "shahinism", "id": 698857, "node_id": "MDQ6VXNlcjY5ODg1Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/698857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shahinism", "html_url": "https://github.com/shahinism", "followers_url": "https://api.github.com/users/shahinism/followers", "following_url": "https://api.github.com/users/shahinism/following{/other_user}", "gists_url": "https://api.github.com/users/shahinism/gists{/gist_id}", "starred_url": "https://api.github.com/users/shahinism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shahinism/subscriptions", "organizations_url": "https://api.github.com/users/shahinism/orgs", "repos_url": "https://api.github.com/users/shahinism/repos", "events_url": "https://api.github.com/users/shahinism/events{/privacy}", "received_events_url": "https://api.github.com/users/shahinism/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-16T15:09:32Z", "updated_at": "2020-04-21T23:53:32Z", "closed_at": "2020-04-21T23:53:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "## Problem\r\n\r\nIf you try to load an object with nested `dict` (JSON object, or map/Struct in Parquet), on Pandas computation engine, will raise this error (the same data is fine with PySpark):\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/bin/great_expectations\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/great_expectations/cli/cli.py\", line 66, in main\r\n    cli()\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/click/core.py\", line 829, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/click/core.py\", line 782, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/click/core.py\", line 1259, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/click/core.py\", line 1066, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/click/core.py\", line 610, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/great_expectations/cli/suite.py\", line 318, in suite_new\r\n    raise e\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/great_expectations/cli/suite.py\", line 275, in suite_new\r\n    open_docs=view,\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/great_expectations/cli/datasource.py\", line 906, in create_expectation_suite\r\n    additional_batch_kwargs=additional_batch_kwargs)\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/great_expectations/cli/datasource.py\", line 833, in get_batch_kwargs\r\n    batch_kwargs_generator_name=batch_kwargs_generator_name,\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/great_expectations/cli/datasource.py\", line 1107, in _get_batch_kwargs_from_generator_or_from_file_path\r\n    batch = datasource.get_batch(batch_kwargs=batch_kwargs)\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/great_expectations/datasource/pandas_datasource.py\", line 205, in get_batch\r\n    df, index=True).values).hexdigest()\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/pandas/core/util/hashing.py\", line 137, in hash_pandas_object\r\n    h = _combine_hash_arrays(hashes, num_items)\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/pandas/core/util/hashing.py\", line 40, in _combine_hash_arrays\r\n    first = next(arrays)\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/pandas/core/util/hashing.py\", line 136, in <genexpr>\r\n    hashes = (x for x in _hashes)\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/pandas/core/util/hashing.py\", line 119, in <genexpr>\r\n    hashes = (hash_array(series.values) for _, series in obj.items())\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/pandas/core/util/hashing.py\", line 306, in hash_array\r\n    codes, categories = factorize(vals, sort=False)\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/pandas/core/algorithms.py\", line 636, in factorize\r\n    values, na_sentinel=na_sentinel, size_hint=size_hint, na_value=na_value\r\n  File \"/home/shahin/Work/Experiment/ge_app/.direnv/python-3.7.2/lib/python3.7/site-packages/pandas/core/algorithms.py\", line 484, in _factorize_array\r\n    uniques, codes = table.factorize(values, na_sentinel=na_sentinel, na_value=na_value)\r\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 1815, in pandas._libs.hashtable.PyObjectHashTable.factorize\r\n  File \"pandas/_libs/hashtable_class_helper.pxi\", line 1731, in pandas._libs.hashtable.PyObjectHashTable._unique\r\nTypeError: unhashable type: 'dict'\r\n```\r\n\r\nOf course, if you use a non-compressed file, it'll show a more polite version of the same error:\r\n\r\n```\r\nCannot load file.\r\n  - Please check the file and try again or select a different data file.\r\n  - Error: unhashable type: 'dict'\r\n```\r\n\r\n## How to reproduce\r\n\r\nCreate a JSON file with the following content and try to create a suite out of it:\r\n\r\n```json\r\n[\r\n    {\"key\": {\"type\": 2}}\r\n]\r\n```\r\n\r\n## Resolution\r\n\r\nAs it's visible in the exception error, it's happening on [this call to](https://github.com/great-expectations/great_expectations/blob/develop/great_expectations/datasource/pandas_datasource.py#L205) `pandas.util.hash_pandas_object`. And that happens when the data frame size is below a fixed [threshold](https://github.com/great-expectations/great_expectations/blob/ff03bb0c8bf91ffe4d7f21108d6d4a6b4a3b165f/great_expectations/datasource/pandas_datasource.py#L27). ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1305", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1305/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1305/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1305/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1305", "id": 599916275, "node_id": "MDU6SXNzdWU1OTk5MTYyNzU=", "number": 1305, "title": "Add Functionality to Delete old Validations AND/OR expectation suites", "user": {"login": "PSUlion16", "id": 24613077, "node_id": "MDQ6VXNlcjI0NjEzMDc3", "avatar_url": "https://avatars2.githubusercontent.com/u/24613077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PSUlion16", "html_url": "https://github.com/PSUlion16", "followers_url": "https://api.github.com/users/PSUlion16/followers", "following_url": "https://api.github.com/users/PSUlion16/following{/other_user}", "gists_url": "https://api.github.com/users/PSUlion16/gists{/gist_id}", "starred_url": "https://api.github.com/users/PSUlion16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PSUlion16/subscriptions", "organizations_url": "https://api.github.com/users/PSUlion16/orgs", "repos_url": "https://api.github.com/users/PSUlion16/repos", "events_url": "https://api.github.com/users/PSUlion16/events{/privacy}", "received_events_url": "https://api.github.com/users/PSUlion16/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-14T23:21:15Z", "updated_at": "2020-07-24T00:37:09Z", "closed_at": "2020-07-24T00:37:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As a User,\r\n\r\nI would like to have the ability to delete validations that are older than a certain number of days, or on an adhoc basis specifying the days. These validations would no longer clutter up the data_docs once cleansed. Additionally, removing expectation suites would be great as well if a source of expectations is deprecated.\r\n\r\nI initially was taking the approach of cleaning up my own validations and expectation suites, but I corrupted my folders enough (and I would think other users would need this) to have this functionality built into the GE tool.\r\n\r\nProposed addition of new CLI or CONTEXT functions:\r\n      great_expectations suite delete <suite_name> # Deletes expectation suite along with Validations\r\n      great_expectations suite clean_validations <suite_name> <days_back> #Clean up validations older than the days back for given expectation suite\r\n\r\nI realize this is similar to issue #658. I propose closing that item, and refreshing to this. Would make maintenance off suites / validations easier.\r\n\r\nChris", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1304", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1304/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1304/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1304/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1304", "id": 599704853, "node_id": "MDU6SXNzdWU1OTk3MDQ4NTM=", "number": 1304, "title": "ExpectationSuite equality and equivalence should ignore expectation order", "user": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-14T16:34:55Z", "updated_at": "2020-07-21T00:36:09Z", "closed_at": "2020-07-21T00:36:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This snippet illustrates the bug\r\n\r\n```\r\nfrom great_expectations.core import ExpectationSuite\r\na = ExpectationSuite(\r\n  \"default\",\r\n  data_asset_type=\"Dataset\",\r\n  expectations=[\r\n    {\r\n      \"kwargs\": {\r\n        \"column\": \"first\"\r\n      },\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\"\r\n    },\r\n    {\r\n      \"kwargs\": {\r\n        \"column\": \"second\"\r\n      },\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\"\r\n    },\r\n  ]\r\n)\r\nprint(a)\r\nb = ExpectationSuite(\r\n  \"default\",\r\n  data_asset_type=\"Dataset\",\r\n  expectations=[\r\n    {\r\n      \"kwargs\": {\r\n        \"column\": \"second\"\r\n      },\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\"\r\n    },\r\n    {\r\n      \"kwargs\": {\r\n        \"column\": \"first\"\r\n      },\r\n      \"expectation_type\": \"expect_column_values_to_not_be_null\"\r\n    },\r\n  ]\r\n)\r\nprint(b)\r\nprint(f\"Equality: {a == b}\") ## False\r\nprint(f\"isEquivalentTo: {a.isEquivalentTo(b)}\") ## False\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1290", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1290/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1290/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1290/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1290", "id": 598064168, "node_id": "MDU6SXNzdWU1OTgwNjQxNjg=", "number": 1290, "title": "QueryBatchKwargsGenerator._get_raw_query produces incorrect filepath", "user": {"login": "ian-whitestone", "id": 11096727, "node_id": "MDQ6VXNlcjExMDk2NzI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11096727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ian-whitestone", "html_url": "https://github.com/ian-whitestone", "followers_url": "https://api.github.com/users/ian-whitestone/followers", "following_url": "https://api.github.com/users/ian-whitestone/following{/other_user}", "gists_url": "https://api.github.com/users/ian-whitestone/gists{/gist_id}", "starred_url": "https://api.github.com/users/ian-whitestone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ian-whitestone/subscriptions", "organizations_url": "https://api.github.com/users/ian-whitestone/orgs", "repos_url": "https://api.github.com/users/ian-whitestone/repos", "events_url": "https://api.github.com/users/ian-whitestone/events{/privacy}", "received_events_url": "https://api.github.com/users/ian-whitestone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-10T19:52:50Z", "updated_at": "2020-04-10T22:47:34Z", "closed_at": "2020-04-10T22:47:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using the `QueryBatchKwargsGenerator` to generate `BATCH_KWARGS` using a SQL file I have stored on disk. My `great_expectations.yml` looks like:\r\n\r\n```yaml\r\ndatasources:\r\n    domi:\r\n      class_name: SqlAlchemyDatasource\r\n      module_name:\r\n      data_asset_type:\r\n        class_name: SqlAlchemyDataset\r\n      credentials:\r\n        drivername: postgres\r\n        host: ${HOST}\r\n        port: ${PORT}\r\n        username: ${USER}\r\n        password: ${PASSWORD}\r\n        database: ${DBNAME}\r\n      generators:\r\n        apartments-generator:\r\n          class_name: QueryBatchKwargsGenerator\r\n          name: apartments\r\n```\r\n\r\nI am running the following:\r\n\r\n```python\r\n>>> import great_expectations as get\r\n\r\n>>> context = ge.data_context.DataContext()\r\n>>> context.get_available_data_asset_names()\r\n{'domi': {'apartments-generator': {'names': [('listings', 'query')]}}}\r\n\r\n>>> context.build_batch_kwargs(\r\n    datasource='domi', generator='apartments-generator', name='listings'\r\n)\r\n```\r\n\r\nWhich raises this error:\r\n\r\n![image](https://user-images.githubusercontent.com/11096727/79018747-8e14b080-7b42-11ea-9564-7b35b23dac72.png)\r\n\r\nThis happens because `_get_raw_query` is doing `tuple('listings')` which returns: `('l', 'i', 's', 't', 'i', 'n', 'g', 's')`)\r\n\r\n```python\r\n    def _get_raw_query(self, generator_asset):\r\n        return self._store_backend.get(tuple(generator_asset))\r\n```\r\n\r\nI believe this should just be replaced with:\r\n\r\n```python\r\n    def _get_raw_query(self, generator_asset):\r\n        return self._store_backend.get((generator_asset,))\r\n```\r\n\r\nCurrently I can get around this by providing a tuple instead of a string, i.e.\r\n\r\n```python\r\ncontext.build_batch_kwargs(\r\n    datasource='domi',\r\n    generator='apartments-generator',\r\n    name=('listings', )\r\n)\r\n```\r\n\r\nBut that goes against what the docs are saying [here](https://docs.greatexpectations.io/en/latest/module_docs/data_context_module.html#great_expectations.data_context.BaseDataContext.build_batch_kwargs):\r\n\r\n![image](https://user-images.githubusercontent.com/11096727/79018985-30cd2f00-7b43-11ea-962c-3a563f19acc6.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1289", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1289/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1289/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1289/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1289", "id": 598022964, "node_id": "MDU6SXNzdWU1OTgwMjI5NjQ=", "number": 1289, "title": "QueryBatchKwargsGenerator should accept name in recognized_batch_parameters", "user": {"login": "ian-whitestone", "id": 11096727, "node_id": "MDQ6VXNlcjExMDk2NzI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11096727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ian-whitestone", "html_url": "https://github.com/ian-whitestone", "followers_url": "https://api.github.com/users/ian-whitestone/followers", "following_url": "https://api.github.com/users/ian-whitestone/following{/other_user}", "gists_url": "https://api.github.com/users/ian-whitestone/gists{/gist_id}", "starred_url": "https://api.github.com/users/ian-whitestone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ian-whitestone/subscriptions", "organizations_url": "https://api.github.com/users/ian-whitestone/orgs", "repos_url": "https://api.github.com/users/ian-whitestone/repos", "events_url": "https://api.github.com/users/ian-whitestone/events{/privacy}", "received_events_url": "https://api.github.com/users/ian-whitestone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-10T18:17:25Z", "updated_at": "2020-04-10T22:47:33Z", "closed_at": "2020-04-10T22:47:33Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using the `QueryBatchKwargsGenerator` to generate `BATCH_KWARGS` using a SQL file I have stored on disk. My `great_expectations.yml` looks like:\r\n\r\n```yaml\r\ndatasources:\r\n    domi:\r\n      class_name: SqlAlchemyDatasource\r\n      module_name:\r\n      data_asset_type:\r\n        class_name: SqlAlchemyDataset\r\n      credentials:\r\n        drivername: postgres\r\n        host: ${HOST}\r\n        port: ${PORT}\r\n        username: ${USER}\r\n        password: ${PASSWORD}\r\n        database: ${DBNAME}\r\n      generators:\r\n        apartments-generator:\r\n          class_name: QueryBatchKwargsGenerator\r\n          name: apartments\r\n```\r\n\r\nI am running the following:\r\n\r\n```python\r\n>>> import great_expectations as get\r\n\r\n>>> context = ge.data_context.DataContext()\r\n>>> context.get_available_data_asset_names()\r\n{'domi': {'apartments-generator': {'names': [('listings', 'query')]}}}\r\n\r\n>>> context.build_batch_kwargs(datasource='domi', generator='apartments-generator', name=('listings',))\r\n2020-04-10T14:05:41-0400 - WARNING - Unrecognized batch_parameter(s): {'name'}\r\n{'query_parameters': None,\r\n 'query': \"SELECT * from listings where created_at > date'2020-01-01'\",\r\n 'datasource': 'domi'}\r\n```\r\n\r\nYou can see this warning `Unrecognized batch_parameter(s): {'name'}` gets raised, but the `_build_batch_kwargs` method is clearly looking for a parameter named `name` [source](https://github.com/great-expectations/great_expectations/blob/develop/great_expectations/datasource/generator/query_generator.py#L101-L103):\r\n\r\n```python\r\n    def _build_batch_kwargs(self, batch_parameters):\r\n        \"\"\"Build batch kwargs from a partition id.\"\"\"\r\n        generator_asset = batch_parameters.pop(\"name\")\r\n```\r\n\r\nTherefore I believe `name` should be added to the `recognized_batch_parameters` property here:\r\n\r\n```python\r\nclass QueryBatchKwargsGenerator(BatchKwargsGenerator):\r\n    \"\"\"Produce query-style batch_kwargs from sql files stored on disk\r\n    \"\"\"\r\n    recognized_batch_parameters = {'query_parameters', 'partition_id'}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1287", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1287/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1287/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1287/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1287", "id": 597797281, "node_id": "MDU6SXNzdWU1OTc3OTcyODE=", "number": 1287, "title": "Why can't you have to expect_column_pair_values_to_be_equal() calls in an expection suite?", "user": {"login": "akozlu", "id": 11183473, "node_id": "MDQ6VXNlcjExMTgzNDcz", "avatar_url": "https://avatars1.githubusercontent.com/u/11183473?v=4", "gravatar_id": "", "url": "https://api.github.com/users/akozlu", "html_url": "https://github.com/akozlu", "followers_url": "https://api.github.com/users/akozlu/followers", "following_url": "https://api.github.com/users/akozlu/following{/other_user}", "gists_url": "https://api.github.com/users/akozlu/gists{/gist_id}", "starred_url": "https://api.github.com/users/akozlu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/akozlu/subscriptions", "organizations_url": "https://api.github.com/users/akozlu/orgs", "repos_url": "https://api.github.com/users/akozlu/repos", "events_url": "https://api.github.com/users/akozlu/events{/privacy}", "received_events_url": "https://api.github.com/users/akozlu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": {"login": "abegong", "id": 1239085, "node_id": "MDQ6VXNlcjEyMzkwODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1239085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abegong", "html_url": "https://github.com/abegong", "followers_url": "https://api.github.com/users/abegong/followers", "following_url": "https://api.github.com/users/abegong/following{/other_user}", "gists_url": "https://api.github.com/users/abegong/gists{/gist_id}", "starred_url": "https://api.github.com/users/abegong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abegong/subscriptions", "organizations_url": "https://api.github.com/users/abegong/orgs", "repos_url": "https://api.github.com/users/abegong/repos", "events_url": "https://api.github.com/users/abegong/events{/privacy}", "received_events_url": "https://api.github.com/users/abegong/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "abegong", "id": 1239085, "node_id": "MDQ6VXNlcjEyMzkwODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1239085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abegong", "html_url": "https://github.com/abegong", "followers_url": "https://api.github.com/users/abegong/followers", "following_url": "https://api.github.com/users/abegong/following{/other_user}", "gists_url": "https://api.github.com/users/abegong/gists{/gist_id}", "starred_url": "https://api.github.com/users/abegong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abegong/subscriptions", "organizations_url": "https://api.github.com/users/abegong/orgs", "repos_url": "https://api.github.com/users/abegong/repos", "events_url": "https://api.github.com/users/abegong/events{/privacy}", "received_events_url": "https://api.github.com/users/abegong/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2020-04-10T09:34:24Z", "updated_at": "2020-08-02T00:40:32Z", "closed_at": "2020-08-02T00:40:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm just curious why, \r\n\r\nbatch.expect_column_pair_values_to_be_equal( column_A= **A**, column_B= **B**')\r\nbatch.expect_column_pair_values_to_be_equal(column_A=**C**, column_B=**D**)\r\n\r\nonly creates a single expectation, overriding all previous calls. Even though both expectations are on different pairs of columns. Same goes for batch.expect_column_pair_values_A_to_be_greater_than_B. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1284", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1284/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1284/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1284/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1284", "id": 597550798, "node_id": "MDU6SXNzdWU1OTc1NTA3OTg=", "number": 1284, "title": "WarningAndFailureExpectationSuitesValidationOperator doesn't accept evaluation_parameters when run", "user": {"login": "balexander", "id": 1220846, "node_id": "MDQ6VXNlcjEyMjA4NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1220846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balexander", "html_url": "https://github.com/balexander", "followers_url": "https://api.github.com/users/balexander/followers", "following_url": "https://api.github.com/users/balexander/following{/other_user}", "gists_url": "https://api.github.com/users/balexander/gists{/gist_id}", "starred_url": "https://api.github.com/users/balexander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balexander/subscriptions", "organizations_url": "https://api.github.com/users/balexander/orgs", "repos_url": "https://api.github.com/users/balexander/repos", "events_url": "https://api.github.com/users/balexander/events{/privacy}", "received_events_url": "https://api.github.com/users/balexander/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "balexander", "id": 1220846, "node_id": "MDQ6VXNlcjEyMjA4NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1220846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balexander", "html_url": "https://github.com/balexander", "followers_url": "https://api.github.com/users/balexander/followers", "following_url": "https://api.github.com/users/balexander/following{/other_user}", "gists_url": "https://api.github.com/users/balexander/gists{/gist_id}", "starred_url": "https://api.github.com/users/balexander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balexander/subscriptions", "organizations_url": "https://api.github.com/users/balexander/orgs", "repos_url": "https://api.github.com/users/balexander/repos", "events_url": "https://api.github.com/users/balexander/events{/privacy}", "received_events_url": "https://api.github.com/users/balexander/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "balexander", "id": 1220846, "node_id": "MDQ6VXNlcjEyMjA4NDY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1220846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/balexander", "html_url": "https://github.com/balexander", "followers_url": "https://api.github.com/users/balexander/followers", "following_url": "https://api.github.com/users/balexander/following{/other_user}", "gists_url": "https://api.github.com/users/balexander/gists{/gist_id}", "starred_url": "https://api.github.com/users/balexander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/balexander/subscriptions", "organizations_url": "https://api.github.com/users/balexander/orgs", "repos_url": "https://api.github.com/users/balexander/repos", "events_url": "https://api.github.com/users/balexander/events{/privacy}", "received_events_url": "https://api.github.com/users/balexander/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2020-04-09T21:01:36Z", "updated_at": "2020-04-10T14:21:07Z", "closed_at": "2020-04-10T14:21:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The `run` method of `WarningAndFailureExpectationSuitesValidationOperator` does not accept evaluation_parameters. This is different than the same method in `ActionListValidationOperator` as of version 0.9.9.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1282", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1282/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1282/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1282/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1282", "id": 597529810, "node_id": "MDU6SXNzdWU1OTc1Mjk4MTA=", "number": 1282, "title": "Disabling table of contents in data docs webpage", "user": {"login": "tejsvirai", "id": 45521667, "node_id": "MDQ6VXNlcjQ1NTIxNjY3", "avatar_url": "https://avatars2.githubusercontent.com/u/45521667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tejsvirai", "html_url": "https://github.com/tejsvirai", "followers_url": "https://api.github.com/users/tejsvirai/followers", "following_url": "https://api.github.com/users/tejsvirai/following{/other_user}", "gists_url": "https://api.github.com/users/tejsvirai/gists{/gist_id}", "starred_url": "https://api.github.com/users/tejsvirai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tejsvirai/subscriptions", "organizations_url": "https://api.github.com/users/tejsvirai/orgs", "repos_url": "https://api.github.com/users/tejsvirai/repos", "events_url": "https://api.github.com/users/tejsvirai/events{/privacy}", "received_events_url": "https://api.github.com/users/tejsvirai/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721239, "node_id": "MDU6TGFiZWw2ODg3MjEyMzk=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2020-04-09T20:20:48Z", "updated_at": "2020-04-16T13:39:39Z", "closed_at": "2020-04-16T13:39:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is there any way to disable the Table of Contents scroll bar on the left side of the data docs webpage? Even with the new fix to scrolling, the scrolling experience is still jumpy and I suspect it's because it tries to pair the scrolling in the table of contents with that of the main page. A quick way to disable the ToC would be helpful especially if it currently exists.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1281", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1281/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1281/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1281/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1281", "id": 597454154, "node_id": "MDU6SXNzdWU1OTc0NTQxNTQ=", "number": 1281, "title": "Add `expect_join_columns`", "user": {"login": "peleyal", "id": 3082873, "node_id": "MDQ6VXNlcjMwODI4NzM=", "avatar_url": "https://avatars0.githubusercontent.com/u/3082873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peleyal", "html_url": "https://github.com/peleyal", "followers_url": "https://api.github.com/users/peleyal/followers", "following_url": "https://api.github.com/users/peleyal/following{/other_user}", "gists_url": "https://api.github.com/users/peleyal/gists{/gist_id}", "starred_url": "https://api.github.com/users/peleyal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peleyal/subscriptions", "organizations_url": "https://api.github.com/users/peleyal/orgs", "repos_url": "https://api.github.com/users/peleyal/repos", "events_url": "https://api.github.com/users/peleyal/events{/privacy}", "received_events_url": "https://api.github.com/users/peleyal/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-04-09T17:55:58Z", "updated_at": "2020-07-09T02:42:54Z", "closed_at": "2020-07-09T02:42:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, in the last few days I was looking into the library and its expectations and I found the library to be very promising! \r\n\r\nHowever, I didn't find any example of joinable columns. I'm looking for some expectation that column A in table boo is a foreign key (or joinable...) of column B in table foo.\r\nThis is useful for a database like BigQuery where Foreign Key is not part of the schema.\r\n\r\nIs there an open request for that or is it on anyone radar?\r\n\r\nThanks!\r\nEyal", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1279", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1279/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1279/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1279/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1279", "id": 597352261, "node_id": "MDU6SXNzdWU1OTczNTIyNjE=", "number": 1279, "title": "Standardize Validation \"Observed Value\" outputs in HTML Documents", "user": {"login": "PSUlion16", "id": 24613077, "node_id": "MDQ6VXNlcjI0NjEzMDc3", "avatar_url": "https://avatars2.githubusercontent.com/u/24613077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PSUlion16", "html_url": "https://github.com/PSUlion16", "followers_url": "https://api.github.com/users/PSUlion16/followers", "following_url": "https://api.github.com/users/PSUlion16/following{/other_user}", "gists_url": "https://api.github.com/users/PSUlion16/gists{/gist_id}", "starred_url": "https://api.github.com/users/PSUlion16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PSUlion16/subscriptions", "organizations_url": "https://api.github.com/users/PSUlion16/orgs", "repos_url": "https://api.github.com/users/PSUlion16/repos", "events_url": "https://api.github.com/users/PSUlion16/events{/privacy}", "received_events_url": "https://api.github.com/users/PSUlion16/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 688721237, "node_id": "MDU6TGFiZWw2ODg3MjEyMzc=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-09T15:10:31Z", "updated_at": "2020-07-24T00:37:10Z", "closed_at": "2020-07-24T00:37:10Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As a user,\r\n\r\nIt would be nice to have the \"Observed Value\" Field be standardized to show percentages of \"successful\" validations, vs a mix of 0% / 100%. This causes confusion as there are different levels of validation outputs with different verbage (making someone not used to the expectations confused) I've given an example below in a screenshot for what I mean:\r\n\r\n![image](https://user-images.githubusercontent.com/24613077/78909763-9b01a900-7a49-11ea-8912-275f7304bef8.png)\r\n\r\nIn this example we have a mix of No output, 100% not null and 0% unexpected.\r\n\r\nIt would be helpful to standardize out to percentage of conformance to expectation, such as \"100% expected\". Perhaps change \"Observed Value\" to \"Validation Result\" and output values as a percentage with # of records out of total.\r\n\r\nFor example, a field marked as NOT NULL with 50000 records could display 80% Expected (40000 out of 50000). I realize we are putting the error counts below the expectations, but putting into the observed value field with consistent messaging would be more user (in our case Biz user) friendly. I've already received feedback from a few people in my Organization on the helpfulness of consistent validation messaging, this would be a great win!\r\n\r\nChris", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1278", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1278/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1278/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1278/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1278", "id": 597296010, "node_id": "MDU6SXNzdWU1OTcyOTYwMTA=", "number": 1278, "title": "Clean up and document conventions for example notebooks", "user": {"login": "abegong", "id": 1239085, "node_id": "MDQ6VXNlcjEyMzkwODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1239085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abegong", "html_url": "https://github.com/abegong", "followers_url": "https://api.github.com/users/abegong/followers", "following_url": "https://api.github.com/users/abegong/following{/other_user}", "gists_url": "https://api.github.com/users/abegong/gists{/gist_id}", "starred_url": "https://api.github.com/users/abegong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abegong/subscriptions", "organizations_url": "https://api.github.com/users/abegong/orgs", "repos_url": "https://api.github.com/users/abegong/repos", "events_url": "https://api.github.com/users/abegong/events{/privacy}", "received_events_url": "https://api.github.com/users/abegong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-09T13:48:58Z", "updated_at": "2020-07-16T00:35:12Z", "closed_at": "2020-07-16T00:35:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently, not all the notebooks in `examples/notebooks` run.\r\n\r\nI suggest we adopt the following conventions, and clean up notebooks to match:\r\n\r\nAll example notebooks should live in `examples/notebooks`.\r\nAll example data should live in `examples/data`.\r\n\r\nEach notebook should be self-contained, using only data in `examples/data`. For example, we should not use data in `tests/`, even if that means some duplication of data within the repo. Datasets should be small anyway: 5MB absolute max, with most datasets under 1MB.\r\n\r\nNotebooks should be run from `examples/notebooks`, not `examples/` or the great_expectations root.\r\n\r\nTherefore, data should be imported from relative directory as follows: `df_test = ge.read_csv('../data/adult.data.b_2_test.csv')`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1271", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1271/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1271/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1271/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1271", "id": 596045511, "node_id": "MDU6SXNzdWU1OTYwNDU1MTE=", "number": 1271, "title": "profile CLI help text mistakenly includes Python parameter docstrings", "user": {"login": "mzjp2", "id": 30357972, "node_id": "MDQ6VXNlcjMwMzU3OTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/30357972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzjp2", "html_url": "https://github.com/mzjp2", "followers_url": "https://api.github.com/users/mzjp2/followers", "following_url": "https://api.github.com/users/mzjp2/following{/other_user}", "gists_url": "https://api.github.com/users/mzjp2/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzjp2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzjp2/subscriptions", "organizations_url": "https://api.github.com/users/mzjp2/orgs", "repos_url": "https://api.github.com/users/mzjp2/repos", "events_url": "https://api.github.com/users/mzjp2/events{/privacy}", "received_events_url": "https://api.github.com/users/mzjp2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-07T17:50:43Z", "updated_at": "2020-04-08T15:22:32Z", "closed_at": "2020-04-08T15:22:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For CLI commands (like all the other `great_expectations` ones) the docstrings for the Click command shouldn't include traditional docstring elements like argument specifications.\r\n\r\nIt looks like `great_expectations datasource profile --help` includes this: (see all the `:param:` entries in the second paragraph)\r\n\r\n<img width=\"628\" alt=\"image\" src=\"https://user-images.githubusercontent.com/30357972/78701953-c2e4f580-78ff-11ea-8b2a-3cb8004f8d83.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1270", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1270/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1270/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1270/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1270", "id": 596031649, "node_id": "MDU6SXNzdWU1OTYwMzE2NDk=", "number": 1270, "title": "SubdirReaderBatchKwargsGenerator nested directories bug", "user": {"login": "ArseniiDunaevQC", "id": 58420451, "node_id": "MDQ6VXNlcjU4NDIwNDUx", "avatar_url": "https://avatars1.githubusercontent.com/u/58420451?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArseniiDunaevQC", "html_url": "https://github.com/ArseniiDunaevQC", "followers_url": "https://api.github.com/users/ArseniiDunaevQC/followers", "following_url": "https://api.github.com/users/ArseniiDunaevQC/following{/other_user}", "gists_url": "https://api.github.com/users/ArseniiDunaevQC/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArseniiDunaevQC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArseniiDunaevQC/subscriptions", "organizations_url": "https://api.github.com/users/ArseniiDunaevQC/orgs", "repos_url": "https://api.github.com/users/ArseniiDunaevQC/repos", "events_url": "https://api.github.com/users/ArseniiDunaevQC/events{/privacy}", "received_events_url": "https://api.github.com/users/ArseniiDunaevQC/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-07T17:25:55Z", "updated_at": "2020-07-14T00:34:54Z", "closed_at": "2020-07-14T00:34:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If I understand it right, the SubdirReader Generator should recognize generator assets from files with known extensions and directories, if they contain at least one valid file (no matter how deep it is hidden inside of the further sub-directories). \r\n\r\nFor example, a SubdirReaderBatchKwargsGenerator with _base_directory=data/dataset/_ would not recognize any data asset in the following directory tree:\r\n```\r\ndata \r\n\u2502\r\n\u2514\u2500\u2500\u2500dataset\r\n|   \u2502\r\n|   \u2514\u2500\u2500\u2500subset\r\n|   |   |\r\n|   |   \u2514\u2500\u2500\u2500subsubset\r\n|   |   |   \u2502   data_1.csv\r\n|   |   |   \u2502   data_2.csv\r\n|   |   |   \u2502   ...\r\n```\r\nAlthough the correct output (e.g. of `get_available_data_asset_names()`) should include the _(\"subset\", \"directory\")_ tuple.\r\n\r\nI consider this to be a bug and have already found a solution, which works at least for me: In the following line https://github.com/great-expectations/great_expectations/blob/a956471d7f3e3af260f28d70c33feefbd2291c47/great_expectations/datasource/generator/subdir_reader_generator.py#L143 it should be `base_directory` instead of `self.base_directory`, which is hopefully enough to resolve the problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1268", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1268/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1268/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1268/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1268", "id": 595849332, "node_id": "MDU6SXNzdWU1OTU4NDkzMzI=", "number": 1268, "title": "Expectations stacked on top of column which may be null, will throw exception (expect_column_value_lengths_to_equal)", "user": {"login": "PSUlion16", "id": 24613077, "node_id": "MDQ6VXNlcjI0NjEzMDc3", "avatar_url": "https://avatars2.githubusercontent.com/u/24613077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PSUlion16", "html_url": "https://github.com/PSUlion16", "followers_url": "https://api.github.com/users/PSUlion16/followers", "following_url": "https://api.github.com/users/PSUlion16/following{/other_user}", "gists_url": "https://api.github.com/users/PSUlion16/gists{/gist_id}", "starred_url": "https://api.github.com/users/PSUlion16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PSUlion16/subscriptions", "organizations_url": "https://api.github.com/users/PSUlion16/orgs", "repos_url": "https://api.github.com/users/PSUlion16/repos", "events_url": "https://api.github.com/users/PSUlion16/events{/privacy}", "received_events_url": "https://api.github.com/users/PSUlion16/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": {"login": "PSUlion16", "id": 24613077, "node_id": "MDQ6VXNlcjI0NjEzMDc3", "avatar_url": "https://avatars2.githubusercontent.com/u/24613077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PSUlion16", "html_url": "https://github.com/PSUlion16", "followers_url": "https://api.github.com/users/PSUlion16/followers", "following_url": "https://api.github.com/users/PSUlion16/following{/other_user}", "gists_url": "https://api.github.com/users/PSUlion16/gists{/gist_id}", "starred_url": "https://api.github.com/users/PSUlion16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PSUlion16/subscriptions", "organizations_url": "https://api.github.com/users/PSUlion16/orgs", "repos_url": "https://api.github.com/users/PSUlion16/repos", "events_url": "https://api.github.com/users/PSUlion16/events{/privacy}", "received_events_url": "https://api.github.com/users/PSUlion16/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "PSUlion16", "id": 24613077, "node_id": "MDQ6VXNlcjI0NjEzMDc3", "avatar_url": "https://avatars2.githubusercontent.com/u/24613077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PSUlion16", "html_url": "https://github.com/PSUlion16", "followers_url": "https://api.github.com/users/PSUlion16/followers", "following_url": "https://api.github.com/users/PSUlion16/following{/other_user}", "gists_url": "https://api.github.com/users/PSUlion16/gists{/gist_id}", "starred_url": "https://api.github.com/users/PSUlion16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PSUlion16/subscriptions", "organizations_url": "https://api.github.com/users/PSUlion16/orgs", "repos_url": "https://api.github.com/users/PSUlion16/repos", "events_url": "https://api.github.com/users/PSUlion16/events{/privacy}", "received_events_url": "https://api.github.com/users/PSUlion16/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2020-04-07T12:59:19Z", "updated_at": "2020-07-16T00:35:12Z", "closed_at": "2020-07-16T00:35:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As a user - we may want to stack multiple expectations on a column checking both for NULL as well as length attributes when NOT NULL.\r\n\r\nIn a use where have a column in a PandasDataframe which has null values, the expectation expect_column_value_lengths_to_equal will fail due to the implementation of the len() attribute check.\r\n\r\nLine 1078 of great_expectations\\dataset\\PandasDataset.py uses the str.len() operator on the column value, which will fail on NULL values as this operator is only applicable to actual string values.\r\n\r\nI've looked at the other expectations and can see similar implementations - I would recommend using a coalesce on the series element or changing the implementation to do purely a .len() which would return NULL - with a slight modification on the return logic.\r\n\r\nAs an editorial comment - I suppose we would want to only output offending % of lines for NON NULL variables in this stacking of expectations situation. This would be a larger feature.\r\n\r\nSee screenshot for offending line as well as output on the docs:\r\n![image](https://user-images.githubusercontent.com/24613077/78671781-5b01c100-78a5-11ea-8ca1-b570dc670551.png)\r\n![image](https://user-images.githubusercontent.com/24613077/78671917-8a183280-78a5-11ea-97b1-779fe83b0430.png)\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1265", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1265/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1265/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1265/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1265", "id": 595520630, "node_id": "MDU6SXNzdWU1OTU1MjA2MzA=", "number": 1265, "title": "Config.yml to allow extra Args for jupyter notebook commands", "user": {"login": "nehiljain", "id": 2761999, "node_id": "MDQ6VXNlcjI3NjE5OTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/2761999?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nehiljain", "html_url": "https://github.com/nehiljain", "followers_url": "https://api.github.com/users/nehiljain/followers", "following_url": "https://api.github.com/users/nehiljain/following{/other_user}", "gists_url": "https://api.github.com/users/nehiljain/gists{/gist_id}", "starred_url": "https://api.github.com/users/nehiljain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nehiljain/subscriptions", "organizations_url": "https://api.github.com/users/nehiljain/orgs", "repos_url": "https://api.github.com/users/nehiljain/repos", "events_url": "https://api.github.com/users/nehiljain/events{/privacy}", "received_events_url": "https://api.github.com/users/nehiljain/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 688721237, "node_id": "MDU6TGFiZWw2ODg3MjEyMzc=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-07T01:06:01Z", "updated_at": "2020-05-04T15:28:49Z", "closed_at": "2020-05-04T15:28:48Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It would be very helpful to allow running adding extra args to config.yml. This is useful for editing great expectation suites with extra params that can be passed to the underlying jupyter notebook process. For example, for dockerizing GE the jupyter command is `jupyter notebook --allow-root --notebook-dir=. --ip=0.0.0.0 --port=8888 --no-browser`. But if I run `great_expectations suite edit npi_small_db_table.critical` then I get an error\r\n```Traceback (most recent call last):\r\n  File \"/usr/local/bin/jupyter-notebook\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python3.7/site-packages/jupyter_core/application.py\", line 270, in launch_instance\r\n    return super(JupyterApp, cls).launch_instance(argv=argv, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/traitlets/config/application.py\", line 663, in launch_instance\r\n    app.initialize(argv)\r\n  File \"<decorator-gen-7>\", line 2, in initialize\r\n  File \"/usr/local/lib/python3.7/site-packages/traitlets/config/application.py\", line 87, in catch_config_error\r\n    return method(app, *args, **kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/notebook/notebookapp.py\", line 1769, in initialize\r\n    self.init_webapp()\r\n  File \"/usr/local/lib/python3.7/site-packages/notebook/notebookapp.py\", line 1490, in init_webapp\r\n    self.http_server.listen(port, self.ip)\r\n  File \"/usr/local/lib/python3.7/site-packages/tornado/tcpserver.py\", line 143, in listen\r\n    sockets = bind_sockets(port, address=address)\r\n  File \"/usr/local/lib/python3.7/site-packages/tornado/netutil.py\", line 168, in bind_sockets\r\n    sock.bind(sockaddr)\r\nOSError: [Errno 99] Cannot assign requested address\r\n```\r\n \r\nThese args should be optional for developers to use if they chose to do so.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1262", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1262/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1262/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1262/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1262", "id": 595325970, "node_id": "MDU6SXNzdWU1OTUzMjU5NzA=", "number": 1262, "title": "DataContext.create cannot create directory inside a azure function", "user": {"login": "shrutikaponde-vc", "id": 54018124, "node_id": "MDQ6VXNlcjU0MDE4MTI0", "avatar_url": "https://avatars3.githubusercontent.com/u/54018124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shrutikaponde-vc", "html_url": "https://github.com/shrutikaponde-vc", "followers_url": "https://api.github.com/users/shrutikaponde-vc/followers", "following_url": "https://api.github.com/users/shrutikaponde-vc/following{/other_user}", "gists_url": "https://api.github.com/users/shrutikaponde-vc/gists{/gist_id}", "starred_url": "https://api.github.com/users/shrutikaponde-vc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shrutikaponde-vc/subscriptions", "organizations_url": "https://api.github.com/users/shrutikaponde-vc/orgs", "repos_url": "https://api.github.com/users/shrutikaponde-vc/repos", "events_url": "https://api.github.com/users/shrutikaponde-vc/events{/privacy}", "received_events_url": "https://api.github.com/users/shrutikaponde-vc/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721240, "node_id": "MDU6TGFiZWw2ODg3MjEyNDA=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-06T18:18:32Z", "updated_at": "2020-04-09T17:51:29Z", "closed_at": "2020-04-09T17:51:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to run GE profiler inside serverless function,  \r\non creating context\r\n`context = DataContext.create(context.function_directory)`\r\n\r\nit gives following error :\r\n```\r\nException: OSError: [Errno 38] Function not implemented: '/home/site/wwwroot/Function1/great_expectations'\r\n    context = DataContext.create(context.function_directory)\r\n  File \"/home/site/wwwroot/.python_packages/lib/python3.6/site-packages/great_expectations/data_context/data_context.py\", line 1377, in create\r\n    safe_mmkdir(ge_dir, exist_ok=True)\r\n  File \"/home/site/wwwroot/.python_packages/lib/python3.6/site-packages/great_expectations/data_context/util.py\", line 33, in safe_mmkdir\r\n    os.makedirs(directory)\r\n  File \"/usr/local/lib/python3.6/os.py\", line 220, in makedirs\r\n    mkdir(name, mode)\r\n```\r\n\r\nInside the serverless function, I can create the directory using os.makedirs directly, but not using datacontext.create(dir). The same code runs on the local machine and able to generate profiling results.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1261", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1261/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1261/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1261/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1261", "id": 594622416, "node_id": "MDU6SXNzdWU1OTQ2MjI0MTY=", "number": 1261, "title": "Suggestions for making great_expectations.yml more flexible", "user": {"login": "ian-whitestone", "id": 11096727, "node_id": "MDQ6VXNlcjExMDk2NzI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11096727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ian-whitestone", "html_url": "https://github.com/ian-whitestone", "followers_url": "https://api.github.com/users/ian-whitestone/followers", "following_url": "https://api.github.com/users/ian-whitestone/following{/other_user}", "gists_url": "https://api.github.com/users/ian-whitestone/gists{/gist_id}", "starred_url": "https://api.github.com/users/ian-whitestone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ian-whitestone/subscriptions", "organizations_url": "https://api.github.com/users/ian-whitestone/orgs", "repos_url": "https://api.github.com/users/ian-whitestone/repos", "events_url": "https://api.github.com/users/ian-whitestone/events{/privacy}", "received_events_url": "https://api.github.com/users/ian-whitestone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-04-05T20:11:51Z", "updated_at": "2020-07-22T00:36:21Z", "closed_at": "2020-07-22T00:36:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to use a portion of the great expectations functionality. I just want to be able to store and run expectations, along with the dataset configuration for the SQLAlchemy datasource. At this point, I don't need/want docs, any validation operators, plugins, etc..., but the `great_expectations.yml` requires pretty much everything to be specified: a plugins directory, `validation_operators`, `data_docs_sites`, `evaluation_parameter_store`, and the list goes on. \r\n\r\nI believe the default should be to raise warnings instead of errors, and there should be an option for advanced users to suppress these warnings if they are intentionally not providing these parameters/configurations.\r\n\r\nIn terms of extensibility, it would also be really nice to be able to specify additional configuration/fields in `great_expectations.yml`, and then be able to access them through the `context` object. Right now an error is raised if you have additional configs. (for context, I would like to specify some batches in the config, and add a convenience \"run_all\" method which picks up all these batches and their associated expectations, then runs them).\r\n\r\nWould love to hear your thoughts!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1259", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1259/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1259/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1259/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1259", "id": 594600713, "node_id": "MDU6SXNzdWU1OTQ2MDA3MTM=", "number": 1259, "title": "Formatting error in docs", "user": {"login": "ian-whitestone", "id": 11096727, "node_id": "MDQ6VXNlcjExMDk2NzI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11096727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ian-whitestone", "html_url": "https://github.com/ian-whitestone", "followers_url": "https://api.github.com/users/ian-whitestone/followers", "following_url": "https://api.github.com/users/ian-whitestone/following{/other_user}", "gists_url": "https://api.github.com/users/ian-whitestone/gists{/gist_id}", "starred_url": "https://api.github.com/users/ian-whitestone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ian-whitestone/subscriptions", "organizations_url": "https://api.github.com/users/ian-whitestone/orgs", "repos_url": "https://api.github.com/users/ian-whitestone/repos", "events_url": "https://api.github.com/users/ian-whitestone/events{/privacy}", "received_events_url": "https://api.github.com/users/ian-whitestone/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-05T19:11:10Z", "updated_at": "2020-04-06T15:09:03Z", "closed_at": "2020-04-06T15:09:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Just fyi, this code block is not rendered properly:\r\n\r\nhttps://docs.greatexpectations.io/en/latest/tutorials/create_expectations.html#finalize\r\n\r\n![image](https://user-images.githubusercontent.com/11096727/78507685-9db18500-774f-11ea-9644-e5aa5bfb0e5e.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1258", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1258/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1258/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1258/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1258", "id": 594562188, "node_id": "MDU6SXNzdWU1OTQ1NjIxODg=", "number": 1258, "title": "config_variables.yml does not support environment variables", "user": {"login": "ian-whitestone", "id": 11096727, "node_id": "MDQ6VXNlcjExMDk2NzI3", "avatar_url": "https://avatars2.githubusercontent.com/u/11096727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ian-whitestone", "html_url": "https://github.com/ian-whitestone", "followers_url": "https://api.github.com/users/ian-whitestone/followers", "following_url": "https://api.github.com/users/ian-whitestone/following{/other_user}", "gists_url": "https://api.github.com/users/ian-whitestone/gists{/gist_id}", "starred_url": "https://api.github.com/users/ian-whitestone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ian-whitestone/subscriptions", "organizations_url": "https://api.github.com/users/ian-whitestone/orgs", "repos_url": "https://api.github.com/users/ian-whitestone/repos", "events_url": "https://api.github.com/users/ian-whitestone/events{/privacy}", "received_events_url": "https://api.github.com/users/ian-whitestone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 688721237, "node_id": "MDU6TGFiZWw2ODg3MjEyMzc=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-05T17:14:26Z", "updated_at": "2020-08-13T00:41:34Z", "closed_at": "2020-08-13T00:41:34Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the default setup created through `great_expectations init` for a SQL datasource, an uncommitted `config_variables.yml` file is created. This file stores all things required to establish a database connection. By default, this file is designed to **not** be committed to source control. However, there are some cases where it would be beneficial to have this file committed. In this case, you would want to be able to have some keys specified as environment variables, for example:\r\n\r\n\r\n`great_expectations.yml`\r\n\r\n```yaml\r\nconfig_version: 1\r\n\r\ndatasources:\r\n  domi:\r\n    class_name: SqlAlchemyDatasource\r\n    module_name:\r\n    data_asset_type:\r\n      module_name:\r\n      class_name: SqlAlchemyDataset\r\n    credentials: ${my-example-db}\r\n```\r\n\r\n`config_variables.yml`\r\n\r\n```yaml\r\nge_comment_preservation_key: 1\r\n\r\nmy-example-db:\r\n  drivername: postgres\r\n  host: host-endpoint-to-use\r\n  port: '5432'\r\n  username: ${USER}\r\n  password: ${PASSWORD}\r\n  database: database_name\r\n```\r\n\r\nIn this example, I have the host, port and database name exposed but the username/password kept as secrets that should live in environment variables. Unfortunately, this doesn't work.\r\n\r\nI recognize I could just move this all into the `great_expectations.yml`, and then it would work, but I like the idea of having datasource configurations stored separately, so I think it would be nice to support this eventually.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1248", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1248/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1248/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1248/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1248", "id": 593384488, "node_id": "MDU6SXNzdWU1OTMzODQ0ODg=", "number": 1248, "title": "Typo in Data Docs", "user": {"login": "stevenbeeckman", "id": 399360, "node_id": "MDQ6VXNlcjM5OTM2MA==", "avatar_url": "https://avatars0.githubusercontent.com/u/399360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stevenbeeckman", "html_url": "https://github.com/stevenbeeckman", "followers_url": "https://api.github.com/users/stevenbeeckman/followers", "following_url": "https://api.github.com/users/stevenbeeckman/following{/other_user}", "gists_url": "https://api.github.com/users/stevenbeeckman/gists{/gist_id}", "starred_url": "https://api.github.com/users/stevenbeeckman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stevenbeeckman/subscriptions", "organizations_url": "https://api.github.com/users/stevenbeeckman/orgs", "repos_url": "https://api.github.com/users/stevenbeeckman/repos", "events_url": "https://api.github.com/users/stevenbeeckman/events{/privacy}", "received_events_url": "https://api.github.com/users/stevenbeeckman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-04-03T13:30:49Z", "updated_at": "2020-04-05T19:25:02Z", "closed_at": "2020-04-05T19:25:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "There's a missing \"l\" in \"pipeines\" in `/render/view/templates/carousel_modal.j2`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1244", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1244/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1244/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1244/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1244", "id": 592652546, "node_id": "MDU6SXNzdWU1OTI2NTI1NDY=", "number": 1244, "title": "Regex Error with BigQuery", "user": {"login": "webernathan", "id": 14100929, "node_id": "MDQ6VXNlcjE0MTAwOTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/14100929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webernathan", "html_url": "https://github.com/webernathan", "followers_url": "https://api.github.com/users/webernathan/followers", "following_url": "https://api.github.com/users/webernathan/following{/other_user}", "gists_url": "https://api.github.com/users/webernathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/webernathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webernathan/subscriptions", "organizations_url": "https://api.github.com/users/webernathan/orgs", "repos_url": "https://api.github.com/users/webernathan/repos", "events_url": "https://api.github.com/users/webernathan/events{/privacy}", "received_events_url": "https://api.github.com/users/webernathan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-04-02T13:55:48Z", "updated_at": "2020-04-07T21:16:14Z", "closed_at": "2020-04-07T21:16:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "We are having an issue running the following expectation on a string column:\r\n```python\r\nbatch.expect_column_values_to_match_regex(\"UNIQUE_ID\", \"^[0-9]*$\", catch_exceptions=True)\r\n```\r\n\r\nError is as follow:\r\n\r\nDatabaseError: (google.cloud.bigquery.dbapi.exceptions.DatabaseError) 400 Syntax error: Parenthesized expression cannot be parsed as an expression, struct constructor, or subquery at [1:154] [SQL: 'SELECT count(*) AS `element_count`, sum(CASE WHEN (`UNIQUE_ID` IS NULL) THEN %(param_1)s ELSE %(param_2)s END) AS `null_count`, sum(CASE WHEN (NOT (`UNIQUE_ID` REGEXP_CONTAINS %(param_3)s) AND `UNIQUE_ID` IS NOT NULL) THEN %(param_4)s ELSE %(param_5)s END) AS `unexpected_count` \\\\nFROM `dataset.raw_table`'] [parameters: {'param_1': 1, 'param_2': 0, 'param_3': '^[0-9]*$', 'param_4': 1, 'param_5': 0}] (Background on this error at: http://sqlalche.me/e/4xp6)\"\r\n\r\nWhen checking the query in BQ, we see that the NOT in sum(CASE WHEN (**NOT** ( is throwing a syntax error.\r\n\r\nLuckily, the regex is quite simple...and as a temporary work around we are casting column as int and doing a null check. More complicated regex would certainly fail. Note: We prefer to run ge on raw tables whenever possible, as maintaining custom SQL is one more thing that we have to update in our pipeline.\r\n\r\nThanks in advance!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1243", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1243/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1243/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1243/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1243", "id": 592451219, "node_id": "MDU6SXNzdWU1OTI0NTEyMTk=", "number": 1243, "title": "Data Docs jumps with to many columns", "user": {"login": "krlng", "id": 1107509, "node_id": "MDQ6VXNlcjExMDc1MDk=", "avatar_url": "https://avatars2.githubusercontent.com/u/1107509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krlng", "html_url": "https://github.com/krlng", "followers_url": "https://api.github.com/users/krlng/followers", "following_url": "https://api.github.com/users/krlng/following{/other_user}", "gists_url": "https://api.github.com/users/krlng/gists{/gist_id}", "starred_url": "https://api.github.com/users/krlng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krlng/subscriptions", "organizations_url": "https://api.github.com/users/krlng/orgs", "repos_url": "https://api.github.com/users/krlng/repos", "events_url": "https://api.github.com/users/krlng/events{/privacy}", "received_events_url": "https://api.github.com/users/krlng/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "roblim", "id": 3468435, "node_id": "MDQ6VXNlcjM0Njg0MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3468435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roblim", "html_url": "https://github.com/roblim", "followers_url": "https://api.github.com/users/roblim/followers", "following_url": "https://api.github.com/users/roblim/following{/other_user}", "gists_url": "https://api.github.com/users/roblim/gists{/gist_id}", "starred_url": "https://api.github.com/users/roblim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roblim/subscriptions", "organizations_url": "https://api.github.com/users/roblim/orgs", "repos_url": "https://api.github.com/users/roblim/repos", "events_url": "https://api.github.com/users/roblim/events{/privacy}", "received_events_url": "https://api.github.com/users/roblim/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roblim", "id": 3468435, "node_id": "MDQ6VXNlcjM0Njg0MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3468435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roblim", "html_url": "https://github.com/roblim", "followers_url": "https://api.github.com/users/roblim/followers", "following_url": "https://api.github.com/users/roblim/following{/other_user}", "gists_url": "https://api.github.com/users/roblim/gists{/gist_id}", "starred_url": "https://api.github.com/users/roblim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roblim/subscriptions", "organizations_url": "https://api.github.com/users/roblim/orgs", "repos_url": "https://api.github.com/users/roblim/repos", "events_url": "https://api.github.com/users/roblim/events{/privacy}", "received_events_url": "https://api.github.com/users/roblim/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2020-04-02T08:28:55Z", "updated_at": "2020-04-07T18:37:18Z", "closed_at": "2020-04-07T18:37:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The Data Docs UI jumps to the last expectation and can't be scrolled up after, if you have more columns than those fitting to the left sidebar on your screen. As soon as you scroll bellow the last visible column header, the gui jumps to the bottom. (Version 0.9.7, Browser Chrome)\r\n\r\nBest work-around I found till now is zooming out as far as you can (which is definitely limited when dealing with really man columns)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1236", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1236/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1236/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1236/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1236", "id": 588789384, "node_id": "MDU6SXNzdWU1ODg3ODkzODQ=", "number": 1236, "title": "Indenting Expectations to enable Pull Request Diff", "user": {"login": "troxil", "id": 7352293, "node_id": "MDQ6VXNlcjczNTIyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7352293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troxil", "html_url": "https://github.com/troxil", "followers_url": "https://api.github.com/users/troxil/followers", "following_url": "https://api.github.com/users/troxil/following{/other_user}", "gists_url": "https://api.github.com/users/troxil/gists{/gist_id}", "starred_url": "https://api.github.com/users/troxil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troxil/subscriptions", "organizations_url": "https://api.github.com/users/troxil/orgs", "repos_url": "https://api.github.com/users/troxil/repos", "events_url": "https://api.github.com/users/troxil/events{/privacy}", "received_events_url": "https://api.github.com/users/troxil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721235, "node_id": "MDU6TGFiZWw2ODg3MjEyMzU=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 688721237, "node_id": "MDU6TGFiZWw2ODg3MjEyMzc=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-26T23:29:52Z", "updated_at": "2020-04-03T12:20:32Z", "closed_at": "2020-04-03T12:20:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi Team, \r\n\r\nI intend to use GE within a team environment. We will probably be storing them along side our project.\r\nThe expectations are stored in a single-lined JSON blob in your expectation store, but with no indentation and thus will make diffing the parameters challenging.\r\n\r\nAny ideas on the best way to do pull requests with expectations?\r\n\r\nCheers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1235", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1235/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1235/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1235/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1235", "id": 588757712, "node_id": "MDU6SXNzdWU1ODg3NTc3MTI=", "number": 1235, "title": "Data Docs > S3 > Links to runs are access Denied", "user": {"login": "troxil", "id": 7352293, "node_id": "MDQ6VXNlcjczNTIyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7352293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troxil", "html_url": "https://github.com/troxil", "followers_url": "https://api.github.com/users/troxil/followers", "following_url": "https://api.github.com/users/troxil/following{/other_user}", "gists_url": "https://api.github.com/users/troxil/gists{/gist_id}", "starred_url": "https://api.github.com/users/troxil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troxil/subscriptions", "organizations_url": "https://api.github.com/users/troxil/orgs", "repos_url": "https://api.github.com/users/troxil/repos", "events_url": "https://api.github.com/users/troxil/events{/privacy}", "received_events_url": "https://api.github.com/users/troxil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "Aylr", "id": 928247, "node_id": "MDQ6VXNlcjkyODI0Nw==", "avatar_url": "https://avatars1.githubusercontent.com/u/928247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aylr", "html_url": "https://github.com/Aylr", "followers_url": "https://api.github.com/users/Aylr/followers", "following_url": "https://api.github.com/users/Aylr/following{/other_user}", "gists_url": "https://api.github.com/users/Aylr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aylr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aylr/subscriptions", "organizations_url": "https://api.github.com/users/Aylr/orgs", "repos_url": "https://api.github.com/users/Aylr/repos", "events_url": "https://api.github.com/users/Aylr/events{/privacy}", "received_events_url": "https://api.github.com/users/Aylr/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-03-26T22:05:50Z", "updated_at": "2020-04-15T02:58:00Z", "closed_at": "2020-04-15T02:58:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi All!\r\n\r\nWhen I use GE to create data docs through either `docs build` or the API `context.build_data_docs()` I find that the created files arrive fine in S3, however the index.html page does not link to them properly and I get 403 S3 errors. \r\n\r\nI find that if I navigate to the created html in the docs/validations prefix on S3 it is fine. After comparing the link provided by the index.html and the direct link available in S3 UI - they are identical except that the one from S3 is url encoded.\r\n\r\nThis is otherwise fine if running locally.\r\n\r\n```yaml\r\ndata_docs_sites:\r\n  s3_site:\r\n    class_name: SiteBuilder\r\n    store_backend:\r\n      class_name: TupleS3StoreBackend\r\n      bucket: mybucket.org.com\r\n      prefix: docs/\r\n```\r\n\r\nCheers, ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1234", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1234/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1234/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1234/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1234", "id": 588473169, "node_id": "MDU6SXNzdWU1ODg0NzMxNjk=", "number": 1234, "title": "Building of HTML Documents raises exceptions (0.9.7)", "user": {"login": "PSUlion16", "id": 24613077, "node_id": "MDQ6VXNlcjI0NjEzMDc3", "avatar_url": "https://avatars2.githubusercontent.com/u/24613077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PSUlion16", "html_url": "https://github.com/PSUlion16", "followers_url": "https://api.github.com/users/PSUlion16/followers", "following_url": "https://api.github.com/users/PSUlion16/following{/other_user}", "gists_url": "https://api.github.com/users/PSUlion16/gists{/gist_id}", "starred_url": "https://api.github.com/users/PSUlion16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PSUlion16/subscriptions", "organizations_url": "https://api.github.com/users/PSUlion16/orgs", "repos_url": "https://api.github.com/users/PSUlion16/repos", "events_url": "https://api.github.com/users/PSUlion16/events{/privacy}", "received_events_url": "https://api.github.com/users/PSUlion16/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2020-03-26T14:41:35Z", "updated_at": "2020-04-08T21:23:05Z", "closed_at": "2020-04-08T21:23:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "All,\r\n\r\nThis is the first time we've tried to build documents on 0.9.7 but we receive an exception when running the context.build_docs(). I have also tried to do this from CLI with 'great_expectations build docs' with same exception.\r\n\r\nInitially I thought I had messed up my folder structure locally, so I completely rebuilt doing the following:\r\n\r\n1. great_expectations init (CLI)\r\n2. Created a simple expectation suite:\r\n         expectation_suite_name = 'tplt_inbound.transactions.failure'\r\n         context.create_expectation_suite(expectation_suite_name, overwrite_existing=False)\r\n\r\n3. Loaded a batch of data from a DF and Added a simple expectation:\r\n         my_batch.expect_column_values_to_be_in_set('ISO_ALPH2_CNTRY_CD', ['CN', 'ID'])\r\n4. Validated the batch:\r\n         my_batch.validate()\r\n5. Saved the Suite:\r\n         my_batch.save_expectation_suite()\r\n6. Using my initial context - tried to build my docs:\r\n         context.build_data_docs()\r\n\r\nPresented with the following error:\r\n\r\n![image](https://user-images.githubusercontent.com/24613077/77659186-b945b000-6f45-11ea-8abd-68162fdfe37a.png)\r\n\r\nFrom CLI, error is similar - with more traceback:\r\n\r\n![image](https://user-images.githubusercontent.com/24613077/77659267-d8444200-6f45-11ea-8e9f-cb89298d34e7.png)\r\n\r\n\r\n\r\n\r\n         \r\n          \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1233", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1233/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1233/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1233/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1233", "id": 588469880, "node_id": "MDU6SXNzdWU1ODg0Njk4ODA=", "number": 1233, "title": "SiteIndexBuilder should support validations_source_store_name", "user": {"login": "dmateusp", "id": 8832050, "node_id": "MDQ6VXNlcjg4MzIwNTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/8832050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmateusp", "html_url": "https://github.com/dmateusp", "followers_url": "https://api.github.com/users/dmateusp/followers", "following_url": "https://api.github.com/users/dmateusp/following{/other_user}", "gists_url": "https://api.github.com/users/dmateusp/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmateusp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmateusp/subscriptions", "organizations_url": "https://api.github.com/users/dmateusp/orgs", "repos_url": "https://api.github.com/users/dmateusp/repos", "events_url": "https://api.github.com/users/dmateusp/events{/privacy}", "received_events_url": "https://api.github.com/users/dmateusp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "roblim", "id": 3468435, "node_id": "MDQ6VXNlcjM0Njg0MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3468435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roblim", "html_url": "https://github.com/roblim", "followers_url": "https://api.github.com/users/roblim/followers", "following_url": "https://api.github.com/users/roblim/following{/other_user}", "gists_url": "https://api.github.com/users/roblim/gists{/gist_id}", "starred_url": "https://api.github.com/users/roblim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roblim/subscriptions", "organizations_url": "https://api.github.com/users/roblim/orgs", "repos_url": "https://api.github.com/users/roblim/repos", "events_url": "https://api.github.com/users/roblim/events{/privacy}", "received_events_url": "https://api.github.com/users/roblim/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "roblim", "id": 3468435, "node_id": "MDQ6VXNlcjM0Njg0MzU=", "avatar_url": "https://avatars2.githubusercontent.com/u/3468435?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roblim", "html_url": "https://github.com/roblim", "followers_url": "https://api.github.com/users/roblim/followers", "following_url": "https://api.github.com/users/roblim/following{/other_user}", "gists_url": "https://api.github.com/users/roblim/gists{/gist_id}", "starred_url": "https://api.github.com/users/roblim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roblim/subscriptions", "organizations_url": "https://api.github.com/users/roblim/orgs", "repos_url": "https://api.github.com/users/roblim/repos", "events_url": "https://api.github.com/users/roblim/events{/privacy}", "received_events_url": "https://api.github.com/users/roblim/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-03-26T14:37:01Z", "updated_at": "2020-06-10T16:42:19Z", "closed_at": "2020-06-10T16:42:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Use case:\r\n\r\nI want to have validations stored on S3 so `great_expectation` batches can run on different schedules and different containers to build iteratively common docs\r\n\r\nThere's no equivalent of the `SiteSectionBuilder`'s `source_store_name`  in `SiteIndexBuilder`, so the \"validations\" pages are created correctly on S3 but the index is generated using the local docs which would be incomplete in that scenario", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1232", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1232/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1232/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1232/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1232", "id": 588430442, "node_id": "MDU6SXNzdWU1ODg0MzA0NDI=", "number": 1232, "title": "Instantiating Batch of data not allowed without 'datasource' defined", "user": {"login": "PSUlion16", "id": 24613077, "node_id": "MDQ6VXNlcjI0NjEzMDc3", "avatar_url": "https://avatars2.githubusercontent.com/u/24613077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PSUlion16", "html_url": "https://github.com/PSUlion16", "followers_url": "https://api.github.com/users/PSUlion16/followers", "following_url": "https://api.github.com/users/PSUlion16/following{/other_user}", "gists_url": "https://api.github.com/users/PSUlion16/gists{/gist_id}", "starred_url": "https://api.github.com/users/PSUlion16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PSUlion16/subscriptions", "organizations_url": "https://api.github.com/users/PSUlion16/orgs", "repos_url": "https://api.github.com/users/PSUlion16/repos", "events_url": "https://api.github.com/users/PSUlion16/events{/privacy}", "received_events_url": "https://api.github.com/users/PSUlion16/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-26T13:41:59Z", "updated_at": "2020-07-02T00:33:05Z", "closed_at": "2020-07-02T00:33:05Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As a user, I would like to instantiate a batch of data using a specific suite for validation -- or to add to an existing expectation suite -- however, if we do not provide the 'datasource' batch_kwarg, this will cause an exception at line 628 in data context.py in the overall catch.\r\n\r\nIn our case, we are loading data from a DataFrame for validation. I know through trial and error, that the datasource I apply does not make a difference to if I can validate the data with the expectation suite - can we have the context changed to return null for the datasource (making it an optional arguement?)\r\n\r\nOur use case is sourcing raw input files from ECS (object storage) dynamically (using boto3) loading into a batch (against a known expectation suite), validating, then outputting documents.\r\n\r\nAs an aside, it would be great from the CLI if we can define a PANDAS datasource, but not specify a directory (we are forced to choose one). In the case a user is validating a DF, there will be no source directory in many cases (think HDFS, GP, DB2, ORACLE, etc....)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1231", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1231/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1231/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1231/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1231", "id": 588041427, "node_id": "MDU6SXNzdWU1ODgwNDE0Mjc=", "number": 1231, "title": "Instantiating a DataContext will fail when done outside of the GE provided notebook folders", "user": {"login": "PSUlion16", "id": 24613077, "node_id": "MDQ6VXNlcjI0NjEzMDc3", "avatar_url": "https://avatars2.githubusercontent.com/u/24613077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PSUlion16", "html_url": "https://github.com/PSUlion16", "followers_url": "https://api.github.com/users/PSUlion16/followers", "following_url": "https://api.github.com/users/PSUlion16/following{/other_user}", "gists_url": "https://api.github.com/users/PSUlion16/gists{/gist_id}", "starred_url": "https://api.github.com/users/PSUlion16/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PSUlion16/subscriptions", "organizations_url": "https://api.github.com/users/PSUlion16/orgs", "repos_url": "https://api.github.com/users/PSUlion16/repos", "events_url": "https://api.github.com/users/PSUlion16/events{/privacy}", "received_events_url": "https://api.github.com/users/PSUlion16/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-03-25T22:58:25Z", "updated_at": "2020-04-02T19:14:12Z", "closed_at": "2020-04-02T19:14:02Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As a user, we have a use case where a python file may invoke GE from outside the great_expectations/ folder structure. In this scenario, the following command will fail:\r\n\r\n# Grab Context for GE Run\r\ncontext = ge.data_context.DataContext()\r\n\r\n![image](https://user-images.githubusercontent.com/24613077/77593078-8bb72300-6ec1-11ea-9413-f3f7fd80a882.png)\r\n\r\nIt would be ideal if GE could search for the YAML file from the relative path as part of this script if result is NONE.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1228", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1228/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1228/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1228/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1228", "id": 587934376, "node_id": "MDU6SXNzdWU1ODc5MzQzNzY=", "number": 1228, "title": "Great Expectations is still marked as Python 2 compatible", "user": {"login": "mzjp2", "id": 30357972, "node_id": "MDQ6VXNlcjMwMzU3OTcy", "avatar_url": "https://avatars2.githubusercontent.com/u/30357972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mzjp2", "html_url": "https://github.com/mzjp2", "followers_url": "https://api.github.com/users/mzjp2/followers", "following_url": "https://api.github.com/users/mzjp2/following{/other_user}", "gists_url": "https://api.github.com/users/mzjp2/gists{/gist_id}", "starred_url": "https://api.github.com/users/mzjp2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mzjp2/subscriptions", "organizations_url": "https://api.github.com/users/mzjp2/orgs", "repos_url": "https://api.github.com/users/mzjp2/repos", "events_url": "https://api.github.com/users/mzjp2/events{/privacy}", "received_events_url": "https://api.github.com/users/mzjp2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-25T19:22:44Z", "updated_at": "2020-03-25T20:04:06Z", "closed_at": "2020-03-25T20:04:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It looks like running `pip install great_expectations==0.9.7` in a Python 2 environment starts working, before failing when pulling `marshmallow`. This is expected since this PR: https://github.com/great-expectations/great_expectations/pull/1187 but on PyPI, GE is still marked as Python 2 compatible because of the `setup.py` file.\r\n\r\nI'm opening a PR that fixes this in a sec, but feel free to close if I'm missing something! :)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1224", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1224/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1224/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1224/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1224", "id": 587318032, "node_id": "MDU6SXNzdWU1ODczMTgwMzI=", "number": 1224, "title": "Documentation : BatchKwargs Examples and explaination", "user": {"login": "troxil", "id": 7352293, "node_id": "MDQ6VXNlcjczNTIyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7352293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troxil", "html_url": "https://github.com/troxil", "followers_url": "https://api.github.com/users/troxil/followers", "following_url": "https://api.github.com/users/troxil/following{/other_user}", "gists_url": "https://api.github.com/users/troxil/gists{/gist_id}", "starred_url": "https://api.github.com/users/troxil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troxil/subscriptions", "organizations_url": "https://api.github.com/users/troxil/orgs", "repos_url": "https://api.github.com/users/troxil/repos", "events_url": "https://api.github.com/users/troxil/events{/privacy}", "received_events_url": "https://api.github.com/users/troxil/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1675427655, "node_id": "MDU6TGFiZWwxNjc1NDI3NjU1", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/docs", "name": "docs", "color": "006b75", "default": false, "description": ""}, {"id": 688721237, "node_id": "MDU6TGFiZWw2ODg3MjEyMzc=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}, {"id": 688721236, "node_id": "MDU6TGFiZWw2ODg3MjEyMzY=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/help%20wanted", "name": "help wanted", "color": "33aa3f", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-24T22:28:35Z", "updated_at": "2020-07-16T00:35:13Z", "closed_at": "2020-07-16T00:35:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi All!\r\n\r\nI found it confusing to find how to use the different flavours of `BatchKwargs` against different datasources. \r\n\r\nThere's plenty of documentation on the purpose of batch generators as they relate to Datasources and highlight their integral need. But I found it confusing to link how to string my own set together.\r\n\r\nWhat I really wanted was to create a new data source using `SparkDFDatasource` with just a single S3 Path pointing to Parquet files. \r\n\r\nThis was not obvious throughout my reading. But seemed doable. \r\n\r\nA page or diagram or something similar on how these `BatchKwargs` plug in to datasources and how they can be used would great. \r\n\r\nDataSource > Generator > Assets > Parameters for data source?\r\n\r\nThank you\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1223", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1223/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1223/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1223/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1223", "id": 587315507, "node_id": "MDU6SXNzdWU1ODczMTU1MDc=", "number": 1223, "title": "Spark Connectivity via Livy to avoid raw pyspark use", "user": {"login": "troxil", "id": 7352293, "node_id": "MDQ6VXNlcjczNTIyOTM=", "avatar_url": "https://avatars0.githubusercontent.com/u/7352293?v=4", "gravatar_id": "", "url": "https://api.github.com/users/troxil", "html_url": "https://github.com/troxil", "followers_url": "https://api.github.com/users/troxil/followers", "following_url": "https://api.github.com/users/troxil/following{/other_user}", "gists_url": "https://api.github.com/users/troxil/gists{/gist_id}", "starred_url": "https://api.github.com/users/troxil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/troxil/subscriptions", "organizations_url": "https://api.github.com/users/troxil/orgs", "repos_url": "https://api.github.com/users/troxil/repos", "events_url": "https://api.github.com/users/troxil/events{/privacy}", "received_events_url": "https://api.github.com/users/troxil/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-24T22:22:13Z", "updated_at": "2020-04-13T09:41:32Z", "closed_at": "2020-04-13T09:41:32Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hey All!\r\n\r\nI very much love this project and also love Spark. Our current stack is Airflow + EMR for compute with S3 storage.\r\n\r\nCommonly to do exploration I use Jupyterhub with sparkmagic to interface with that EMR cluster which runs anything in cells over Livy. This helps as the Jupyterhub server doesn't require pyspark installation, but merely makes API calls.\r\n\r\nWhat I'd love to do is launch GE natively in Airflow (or via CLI) on my laptop and have all operations to my dataframes end up in EMR cluster. Pyspark can be used locally on EMR master to do this or as Jupyterhub sparkmagic does - via Livy API. \r\n\r\nThough with Livy it still means I may need GE to be installed over there. But I'm probably jumping to solution.\r\n\r\nLet me know your thoughts!\r\nCheers", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1222", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1222/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1222/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1222/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1222", "id": 587201115, "node_id": "MDU6SXNzdWU1ODcyMDExMTU=", "number": 1222, "title": "HDFS Support with Spark", "user": {"login": "lfpll", "id": 6969067, "node_id": "MDQ6VXNlcjY5NjkwNjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6969067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfpll", "html_url": "https://github.com/lfpll", "followers_url": "https://api.github.com/users/lfpll/followers", "following_url": "https://api.github.com/users/lfpll/following{/other_user}", "gists_url": "https://api.github.com/users/lfpll/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfpll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfpll/subscriptions", "organizations_url": "https://api.github.com/users/lfpll/orgs", "repos_url": "https://api.github.com/users/lfpll/repos", "events_url": "https://api.github.com/users/lfpll/events{/privacy}", "received_events_url": "https://api.github.com/users/lfpll/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721233, "node_id": "MDU6TGFiZWw2ODg3MjEyMzM=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/bug", "name": "bug", "color": "ee0701", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": {"login": "lfpll", "id": 6969067, "node_id": "MDQ6VXNlcjY5NjkwNjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6969067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfpll", "html_url": "https://github.com/lfpll", "followers_url": "https://api.github.com/users/lfpll/followers", "following_url": "https://api.github.com/users/lfpll/following{/other_user}", "gists_url": "https://api.github.com/users/lfpll/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfpll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfpll/subscriptions", "organizations_url": "https://api.github.com/users/lfpll/orgs", "repos_url": "https://api.github.com/users/lfpll/repos", "events_url": "https://api.github.com/users/lfpll/events{/privacy}", "received_events_url": "https://api.github.com/users/lfpll/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "lfpll", "id": 6969067, "node_id": "MDQ6VXNlcjY5NjkwNjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/6969067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lfpll", "html_url": "https://github.com/lfpll", "followers_url": "https://api.github.com/users/lfpll/followers", "following_url": "https://api.github.com/users/lfpll/following{/other_user}", "gists_url": "https://api.github.com/users/lfpll/gists{/gist_id}", "starred_url": "https://api.github.com/users/lfpll/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lfpll/subscriptions", "organizations_url": "https://api.github.com/users/lfpll/orgs", "repos_url": "https://api.github.com/users/lfpll/repos", "events_url": "https://api.github.com/users/lfpll/events{/privacy}", "received_events_url": "https://api.github.com/users/lfpll/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2020-03-24T18:42:54Z", "updated_at": "2020-07-31T00:39:05Z", "closed_at": "2020-07-31T00:39:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Guys,\r\n\r\nI'm trying to start great expectations on some hdfs files but it's not working\r\n\r\nSimply when it asks:\r\n\r\n`Enter the path (relative or absolute) of a data file`\r\n\r\nI input with my hdfs absolut path of my csv which is a folder.\r\n\r\n`hdfs://***`\r\n\r\nAnd respond with the file not working, but I'm able to open with spark.read.csv is this a bug?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1219", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1219/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1219/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1219/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1219", "id": 586537365, "node_id": "MDU6SXNzdWU1ODY1MzczNjU=", "number": 1219, "title": "Alternative APIs for validation, especially using method chaining", "user": {"login": "abegong", "id": 1239085, "node_id": "MDQ6VXNlcjEyMzkwODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1239085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abegong", "html_url": "https://github.com/abegong", "followers_url": "https://api.github.com/users/abegong/followers", "following_url": "https://api.github.com/users/abegong/following{/other_user}", "gists_url": "https://api.github.com/users/abegong/gists{/gist_id}", "starred_url": "https://api.github.com/users/abegong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abegong/subscriptions", "organizations_url": "https://api.github.com/users/abegong/orgs", "repos_url": "https://api.github.com/users/abegong/repos", "events_url": "https://api.github.com/users/abegong/events{/privacy}", "received_events_url": "https://api.github.com/users/abegong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-23T21:44:06Z", "updated_at": "2020-07-01T00:34:29Z", "closed_at": "2020-07-01T00:34:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I had a great conversation with @ericmjl about this today, including some prototyping in notebooks.\r\n\r\nThe gist: it'd be great if GE could support alternative APIs for validation:\r\n1. No indirection\r\n2. No indirection, plus chaining\r\n3. Indirection\r\n\r\n(I'll add examples once I get a copy of @ericmjl's notebooks.)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1215", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1215/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1215/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1215/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1215", "id": 585641203, "node_id": "MDU6SXNzdWU1ODU2NDEyMDM=", "number": 1215, "title": "12 tests fail on master when running pytest locally", "user": {"login": "abegong", "id": 1239085, "node_id": "MDQ6VXNlcjEyMzkwODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1239085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abegong", "html_url": "https://github.com/abegong", "followers_url": "https://api.github.com/users/abegong/followers", "following_url": "https://api.github.com/users/abegong/following{/other_user}", "gists_url": "https://api.github.com/users/abegong/gists{/gist_id}", "starred_url": "https://api.github.com/users/abegong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abegong/subscriptions", "organizations_url": "https://api.github.com/users/abegong/orgs", "repos_url": "https://api.github.com/users/abegong/repos", "events_url": "https://api.github.com/users/abegong/events{/privacy}", "received_events_url": "https://api.github.com/users/abegong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-03-22T04:11:21Z", "updated_at": "2020-03-23T05:54:52Z", "closed_at": "2020-03-23T05:54:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When I follow the standard setup instructions and run pytest locally, I get 12 test failures.\r\n\r\n```\r\npip install -r requirements-dev.txt \r\npip install -e .\r\npytest \u2014no-spark \u2014no-sqlalchemy\r\n```\r\n\r\nThe failing tests are mostly in the CLI (`tests/cli/test_datasource_pandas.py` and `tests/cli/test_datasource_sqlite.py`), plus a few in `tests/core/test_serialization.py`, `tests/datasource/generator/test_s3_generator.py`, `tests/jupyter_ux/test_jupyter_ux.py`.\r\n\r\nThis is similar in spirit to #1150 from a week ago, although it looks like the root cause is different.\r\n\r\nI think we're playing whack-a-mole here, and it's going to make things painful for new contributors to the project.\r\n\r\nI propose that we add a travis build that strictly replicates the contributor setup instructions to stop the drift between our instructions and test suites.\r\n\r\n(I thought this might be part of @Aylr's implementation of MacOS builds in travis, but that `.travis.yml` file includes references to postgresql and slack that are not included in our developer setup instructions.)\r\n\r\n```\r\n$ pytest --no-spark --no-sqlalchemy --disable-pytest-warnings\r\n=========================================================================================== test session starts ============================================================================================\r\nplatform darwin -- Python 3.7.4, pytest-5.3.5, py-1.8.0, pluggy-0.12.0\r\nrootdir: /Users/abe/Documents/superconductive/tools/great_expectations, inifile: pytest.ini\r\nplugins: logbook-1.2.0, cov-2.7.1\r\ncollected 959 items                                                                                                                                                                                        \r\n\r\ntests/test_autoinspect.py .....                                                                                                                                                                      [  0%]\r\ntests/test_configs.py ...                                                                                                                                                                            [  0%]\r\ntests/test_ge_utils.py ...........                                                                                                                                                                   [  1%]\r\ntests/test_great_expectations.py ..................                                                                                                                                                  [  3%]\r\ntests/actions/test_core_actions.py ..                                                                                                                                                                [  4%]\r\ntests/actions/test_store_metric_action.py ..                                                                                                                                                         [  4%]\r\ntests/actions/test_validation_operators.py .                                                                                                                                                         [  4%]\r\ntests/actions/test_validation_operators_in_data_context.py ..                                                                                                                                        [  4%]\r\ntests/cli/test_cli.py ....                                                                                                                                                                           [  5%]\r\ntests/cli/test_datasource_pandas.py ...FFFF.                                                                                                                                                         [  5%]\r\ntests/cli/test_datasource_sqlite.py ....FFFFF.                                                                                                                                                       [  6%]\r\ntests/cli/test_docs.py ...                                                                                                                                                                           [  7%]\r\ntests/cli/test_init.py ...                                                                                                                                                                           [  7%]\r\ntests/cli/test_init_missing_libraries.py .ssss                                                                                                                                                       [  8%]\r\ntests/cli/test_init_pandas.py ........                                                                                                                                                               [  8%]\r\ntests/cli/test_init_sqlite.py .......                                                                                                                                                                [  9%]\r\ntests/cli/test_project.py ...                                                                                                                                                                        [  9%]\r\ntests/cli/test_suite.py .......................                                                                                                                                                      [ 12%]\r\ntests/cli/test_taps_pandas.py ........                                                                                                                                                               [ 13%]\r\ntests/core/test_expectation_configuration.py ..                                                                                                                                                      [ 13%]\r\ntests/core/test_expectation_kwargs.py ...                                                                                                                                                            [ 13%]\r\ntests/core/test_expectation_suite.py ..........                                                                                                                                                      [ 14%]\r\ntests/core/test_serialization.py F                                                                                                                                                                   [ 14%]\r\ntests/data_asset/test_data_asset.py ....                                                                                                                                                             [ 15%]\r\ntests/data_asset/test_data_asset_citations.py .                                                                                                                                                      [ 15%]\r\ntests/data_asset/test_data_asset_internals.py ............                                                                                                                                           [ 16%]\r\ntests/data_asset/test_data_asset_util.py ..                                                                                                                                                          [ 16%]\r\ntests/data_asset/test_expectation_decorators.py ........                                                                                                                                             [ 17%]\r\ntests/data_asset/test_filedata_asset.py ...                                                                                                                                                          [ 17%]\r\ntests/data_asset/test_filedata_asset_expectations.py .......                                                                                                                                         [ 18%]\r\ntests/data_asset/test_parameter_substitution.py ......                                                                                                                                               [ 19%]\r\ntests/data_context/test_configuration_storage.py s                                                                                                                                                   [ 19%]\r\ntests/data_context/test_data_context.py .......................................................                                                                                                      [ 25%]\r\ntests/data_context/test_data_context_config_errors.py ......                                                                                                                                         [ 25%]\r\ntests/data_context/test_data_context_config_variables.py ...                                                                                                                                         [ 26%]\r\ntests/data_context/test_data_context_on_teams.py .                                                                                                                                                   [ 26%]\r\ntests/data_context/test_data_context_resource_identifiers.py .                                                                                                                                       [ 26%]\r\ntests/data_context/test_data_context_store_configs.py ...                                                                                                                                            [ 26%]\r\ntests/data_context/test_data_context_utils.py ...                                                                                                                                                    [ 26%]\r\ntests/data_context/store/test_evaluation_parameter_store.py .ssss                                                                                                                                    [ 27%]\r\ntests/data_context/store/test_expectations_store.py ..                                                                                                                                               [ 27%]\r\ntests/data_context/store/test_html_site_store.py ..                                                                                                                                                  [ 27%]\r\ntests/data_context/store/test_store_backends.py .......                                                                                                                                              [ 28%]\r\ntests/data_context/store/test_validations_store.py ....                                                                                                                                              [ 28%]\r\ntests/dataset/test_dataset.py .                                                                                                                                                                      [ 29%]\r\ntests/dataset/test_dataset_legacy.py ..                                                                                                                                                              [ 29%]\r\ntests/dataset/test_dataset_util_legacy.py .................                                                                                                                                          [ 31%]\r\ntests/dataset/test_pandas_dataset.py ...............                                                                                                                                                 [ 32%]\r\ntests/dataset/test_util.py .                                                                                                                                                                         [ 32%]\r\ntests/datasource/test_batch_generators.py ....                                                                                                                                                       [ 33%]\r\ntests/datasource/test_batch_kwargs.py ..                                                                                                                                                             [ 33%]\r\ntests/datasource/test_pandas_datasource.py ...s...                                                                                                                                                   [ 34%]\r\ntests/datasource/test_sparkdf_datasource.py s.s....                                                                                                                                                  [ 34%]\r\ntests/datasource/test_sqlalchemy_datasource.py ss.sss                                                                                                                                                [ 35%]\r\ntests/datasource/test_sqlalchemy_datasource_workarounds.py s                                                                                                                                         [ 35%]\r\ntests/datasource/generator/test_batch_kwargs_generator.py .                                                                                                                                          [ 35%]\r\ntests/datasource/generator/test_glob_reader_generator.py ....                                                                                                                                        [ 36%]\r\ntests/datasource/generator/test_manual_generator.py .                                                                                                                                                [ 36%]\r\ntests/datasource/generator/test_query_generator.py sss.                                                                                                                                              [ 36%]\r\ntests/datasource/generator/test_s3_generator.py .F...                                                                                                                                                [ 37%]\r\ntests/datasource/generator/test_subdir_reader_generator.py ...                                                                                                                                       [ 37%]\r\ntests/datasource/generator/test_table_generator.py sss                                                                                                                                               [ 37%]\r\ntests/jupyter_ux/test_jupyter_ux.py ..F                                                                                                                                                              [ 38%]\r\ntests/profile/test_SampleExpectationsDatasetProfiler.py ...........                                                                                                                                  [ 39%]\r\ntests/profile/test_profile.py ................                                                                                                                                                       [ 40%]\r\ntests/render/test_SlackRenderer.py .                                                                                                                                                                 [ 40%]\r\ntests/render/test_column_section_renderer.py ..................                                                                                                                                      [ 42%]\r\ntests/render/test_data_documentation_site_builder.py .                                                                                                                                               [ 42%]\r\ntests/render/test_default_jinja_view.py .........                                                                                                                                                    [ 43%]\r\ntests/render/test_page_renderer.py .......                                                                                                                                                           [ 44%]\r\ntests/render/test_render.py ..............                                                                                                                                                           [ 46%]\r\ntests/render/test_render_BulletListContentBlock.py ..                                                                                                                                                [ 46%]\r\ntests/render/test_render_ExceptionListContentBlockRenderer.py .                                                                                                                                      [ 46%]\r\ntests/render/test_render_ValidationResultsTableContentBlockRenderer.py .......                                                                                                                       [ 47%]\r\ntests/render/test_renderer.py ....                                                                                                                                                                   [ 47%]\r\ntests/render/test_styled_string_template.py .                                                                                                                                                        [ 47%]\r\ntests/render/test_util.py .                                                                                                                                                                          [ 47%]\r\ntests/render/renderer/test_notebook_renderer.py ...........                                                                                                                                          [ 48%]\r\ntests/render/renderer/content_block/test_expectation_string_renderer.py .                                                                                                                            [ 49%]\r\ntests/sqlalchemy_dataset/test_sqlalchemydataset.py sssssssssss                                                                                                                                       [ 50%]\r\ntests/test_dataset_implementations/test_dataset_implementations.py ...............................................                                                                                   [ 55%]\r\ntests/test_definitions/test_expectations.py .............................................................................................................................................s.......... [ 70%]\r\n.................................................................................................................................................................................................... [ 91%]\r\n.................................s.................................................                                                                                                                  [100%]\r\n```\r\n\r\n\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1201", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1201/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1201/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1201/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1201", "id": 583907166, "node_id": "MDU6SXNzdWU1ODM5MDcxNjY=", "number": 1201, "title": "Suggestion: Load DataContext without making connections to datasources.", "user": {"login": "kkwanyang", "id": 12190891, "node_id": "MDQ6VXNlcjEyMTkwODkx", "avatar_url": "https://avatars0.githubusercontent.com/u/12190891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kkwanyang", "html_url": "https://github.com/kkwanyang", "followers_url": "https://api.github.com/users/kkwanyang/followers", "following_url": "https://api.github.com/users/kkwanyang/following{/other_user}", "gists_url": "https://api.github.com/users/kkwanyang/gists{/gist_id}", "starred_url": "https://api.github.com/users/kkwanyang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kkwanyang/subscriptions", "organizations_url": "https://api.github.com/users/kkwanyang/orgs", "repos_url": "https://api.github.com/users/kkwanyang/repos", "events_url": "https://api.github.com/users/kkwanyang/events{/privacy}", "received_events_url": "https://api.github.com/users/kkwanyang/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721237, "node_id": "MDU6TGFiZWw2ODg3MjEyMzc=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-18T17:58:06Z", "updated_at": "2020-05-05T14:01:06Z", "closed_at": "2020-05-05T14:01:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "That title is probably incorrect but I can't seem to find the 1 liner to describe this.\r\n\r\nThe first step in using GE (after initial setup) is to basically load the DataContext. The datacontext contains all the GE configuration including datasources, loading the datacontext invokes connections to these datasources. If per chance one of these datasources is configured incorrectly, you are unable to load the datacontext, thus unable to use GE. \r\n\r\nIn my head it seems like a pattern of determining the suite that is being used before attempting to use connections is a more natural way to  go about this.\r\n\r\nTLDR: loading the datacontext involves making connection attempts, and that could fail if a datasource is broken, even though the suite you are trying to create/modify/validate does not depend on that datasource.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1200", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1200/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1200/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1200/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1200", "id": 583902540, "node_id": "MDU6SXNzdWU1ODM5MDI1NDA=", "number": 1200, "title": "Suggestion: enable creating new suites or datasources from Commandline when an existing source is offline", "user": {"login": "pentatone", "id": 62351529, "node_id": "MDQ6VXNlcjYyMzUxNTI5", "avatar_url": "https://avatars2.githubusercontent.com/u/62351529?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pentatone", "html_url": "https://github.com/pentatone", "followers_url": "https://api.github.com/users/pentatone/followers", "following_url": "https://api.github.com/users/pentatone/following{/other_user}", "gists_url": "https://api.github.com/users/pentatone/gists{/gist_id}", "starred_url": "https://api.github.com/users/pentatone/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pentatone/subscriptions", "organizations_url": "https://api.github.com/users/pentatone/orgs", "repos_url": "https://api.github.com/users/pentatone/repos", "events_url": "https://api.github.com/users/pentatone/events{/privacy}", "received_events_url": "https://api.github.com/users/pentatone/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 688721237, "node_id": "MDU6TGFiZWw2ODg3MjEyMzc=", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/good%20first%20issue", "name": "good first issue", "color": "7057ff", "default": true, "description": null}, {"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-18T17:49:51Z", "updated_at": "2020-06-27T00:27:05Z", "closed_at": "2020-06-27T00:27:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the moment if a connection fails, the commandline tool crashes out.\r\nI think adding or redefining a Datasource or Suite from commandline tool should be facilitated, as it can rapidly fix configurations for sandbox environments where sources and connections might change quickly. Although the workaround isn't complex, I would suggest you to consider implementing this behaviour.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1194", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1194/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1194/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1194/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1194", "id": 583334386, "node_id": "MDU6SXNzdWU1ODMzMzQzODY=", "number": 1194, "title": "suite edit CLI command fails with \"KeyError: 'column'\"", "user": {"login": "eugmandel", "id": 80363, "node_id": "MDQ6VXNlcjgwMzYz", "avatar_url": "https://avatars2.githubusercontent.com/u/80363?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eugmandel", "html_url": "https://github.com/eugmandel", "followers_url": "https://api.github.com/users/eugmandel/followers", "following_url": "https://api.github.com/users/eugmandel/following{/other_user}", "gists_url": "https://api.github.com/users/eugmandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/eugmandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eugmandel/subscriptions", "organizations_url": "https://api.github.com/users/eugmandel/orgs", "repos_url": "https://api.github.com/users/eugmandel/repos", "events_url": "https://api.github.com/users/eugmandel/events{/privacy}", "received_events_url": "https://api.github.com/users/eugmandel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-17T22:22:06Z", "updated_at": "2020-03-19T16:52:01Z", "closed_at": "2020-03-19T16:52:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "User report:\r\n\r\nI\u2019m trying out Great Expectations right now and running into an issue where I can no longer run great_expectations suite edit <suite-name> to change any of my expectations due to the following error:\r\n\r\n> File \"/Users/blake/.virtualenvs/great-expectations/lib/python3.7/site-packages/great_expectations/render/renderer/notebook_renderer.py\", line 29, in _get_expectations_by_column\r\n>     col = exp[\"kwargs\"][\"column\"]\r\n> KeyError: 'column'\r\n> \r\n\r\nI can still run great_expectations docs build and a validation script with no problems. It\u2019s just the editing that\u2019s not working. Any ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1190", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1190/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1190/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1190/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1190", "id": 582748937, "node_id": "MDU6SXNzdWU1ODI3NDg5Mzc=", "number": 1190, "title": "`DataContext` docs don't include `get_batch` method.", "user": {"login": "abegong", "id": 1239085, "node_id": "MDQ6VXNlcjEyMzkwODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1239085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abegong", "html_url": "https://github.com/abegong", "followers_url": "https://api.github.com/users/abegong/followers", "following_url": "https://api.github.com/users/abegong/following{/other_user}", "gists_url": "https://api.github.com/users/abegong/gists{/gist_id}", "starred_url": "https://api.github.com/users/abegong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abegong/subscriptions", "organizations_url": "https://api.github.com/users/abegong/orgs", "repos_url": "https://api.github.com/users/abegong/repos", "events_url": "https://api.github.com/users/abegong/events{/privacy}", "received_events_url": "https://api.github.com/users/abegong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-17T04:37:10Z", "updated_at": "2020-03-24T20:06:16Z", "closed_at": "2020-03-24T20:06:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://docs.greatexpectations.io/en/latest/module_docs/data_context_module.html", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1189", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1189/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1189/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1189/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1189", "id": 582743205, "node_id": "MDU6SXNzdWU1ODI3NDMyMDU=", "number": 1189, "title": "`jupyter_ux.show_available_data_asset_names` crashes", "user": {"login": "abegong", "id": 1239085, "node_id": "MDQ6VXNlcjEyMzkwODU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1239085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abegong", "html_url": "https://github.com/abegong", "followers_url": "https://api.github.com/users/abegong/followers", "following_url": "https://api.github.com/users/abegong/following{/other_user}", "gists_url": "https://api.github.com/users/abegong/gists{/gist_id}", "starred_url": "https://api.github.com/users/abegong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abegong/subscriptions", "organizations_url": "https://api.github.com/users/abegong/orgs", "repos_url": "https://api.github.com/users/abegong/repos", "events_url": "https://api.github.com/users/abegong/events{/privacy}", "received_events_url": "https://api.github.com/users/abegong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-17T04:16:29Z", "updated_at": "2020-07-13T00:35:37Z", "closed_at": "2020-07-13T00:35:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\r\nimport json\r\nimport os\r\nimport great_expectations as ge\r\nimport great_expectations.jupyter_ux\r\nimport pandas as pd\r\n\r\ncontext = ge.data_context.DataContext()\r\n\r\ngreat_expectations.jupyter_ux.show_available_data_asset_names(context)\r\n```\r\nThrows:\r\n```\r\nInspecting your data sources. This may take a moment...\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-12-5bd6941c0910> in <module>\r\n----> 1 great_expectations.jupyter_ux.show_available_data_asset_names(context)\r\n\r\n~/anaconda2/envs/py3/lib/python3.7/site-packages/great_expectations/jupyter_ux/__init__.py in show_available_data_asset_names(context, data_source_name)\r\n    165                 for data_asset_name in data_asset_names:\r\n    166                     html += '<li>{0:s}</li>'.format(data_asset_name)\r\n--> 167                     data_asset_expectation_suite_keys = [es_key for es_key in expectation_suite_keys if \\\r\n    168                                                          es_key.data_asset_name.datasource == datasource['name'] and \\\r\n    169                                                          es_key.data_asset_name.generator == generator_info['name'] and \\\r\n\r\n~/anaconda2/envs/py3/lib/python3.7/site-packages/great_expectations/jupyter_ux/__init__.py in <listcomp>(.0)\r\n    166                     html += '<li>{0:s}</li>'.format(data_asset_name)\r\n    167                     data_asset_expectation_suite_keys = [es_key for es_key in expectation_suite_keys if \\\r\n--> 168                                                          es_key.data_asset_name.datasource == datasource['name'] and \\\r\n    169                                                          es_key.data_asset_name.generator == generator_info['name'] and \\\r\n    170                                                          es_key.data_asset_name.generator_asset == data_asset_name]\r\n\r\nAttributeError: 'ExpectationSuiteIdentifier' object has no attribute 'data_asset_name'\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1185", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1185/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1185/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1185/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1185", "id": 582493213, "node_id": "MDU6SXNzdWU1ODI0OTMyMTM=", "number": 1185, "title": "Documentation typo", "user": {"login": "tatianamck", "id": 53178461, "node_id": "MDQ6VXNlcjUzMTc4NDYx", "avatar_url": "https://avatars1.githubusercontent.com/u/53178461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tatianamck", "html_url": "https://github.com/tatianamck", "followers_url": "https://api.github.com/users/tatianamck/followers", "following_url": "https://api.github.com/users/tatianamck/following{/other_user}", "gists_url": "https://api.github.com/users/tatianamck/gists{/gist_id}", "starred_url": "https://api.github.com/users/tatianamck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tatianamck/subscriptions", "organizations_url": "https://api.github.com/users/tatianamck/orgs", "repos_url": "https://api.github.com/users/tatianamck/repos", "events_url": "https://api.github.com/users/tatianamck/events{/privacy}", "received_events_url": "https://api.github.com/users/tatianamck/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-16T17:52:50Z", "updated_at": "2020-04-02T21:17:25Z", "closed_at": "2020-04-02T21:17:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, first, thank you for this incredible library.\r\n\r\nI found a documentation typo, it should be _min_ instead of _sum_:\r\nhttps://great-expectations.readthedocs.io/en/v0.4.5/dataset_module.html\r\n![image](https://user-images.githubusercontent.com/53178461/76786285-bacce680-6795-11ea-84a7-77ea34f21d6d.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1183", "repository_url": "https://api.github.com/repos/great-expectations/great_expectations", "labels_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1183/labels{/name}", "comments_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1183/comments", "events_url": "https://api.github.com/repos/great-expectations/great_expectations/issues/1183/events", "html_url": "https://github.com/great-expectations/great_expectations/issues/1183", "id": 581267305, "node_id": "MDU6SXNzdWU1ODEyNjczMDU=", "number": 1183, "title": "Expectations for time series data", "user": {"login": "seeM", "id": 559360, "node_id": "MDQ6VXNlcjU1OTM2MA==", "avatar_url": "https://avatars3.githubusercontent.com/u/559360?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seeM", "html_url": "https://github.com/seeM", "followers_url": "https://api.github.com/users/seeM/followers", "following_url": "https://api.github.com/users/seeM/following{/other_user}", "gists_url": "https://api.github.com/users/seeM/gists{/gist_id}", "starred_url": "https://api.github.com/users/seeM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seeM/subscriptions", "organizations_url": "https://api.github.com/users/seeM/orgs", "repos_url": "https://api.github.com/users/seeM/repos", "events_url": "https://api.github.com/users/seeM/events{/privacy}", "received_events_url": "https://api.github.com/users/seeM/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1901311827, "node_id": "MDU6TGFiZWwxOTAxMzExODI3", "url": "https://api.github.com/repos/great-expectations/great_expectations/labels/stale", "name": "stale", "color": "f9c8a7", "default": false, "description": "Stale issues and PRs"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2020-03-14T16:07:15Z", "updated_at": "2020-07-20T00:36:36Z", "closed_at": "2020-07-20T00:36:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "This project looks really cool, but since we work with time series data, it'd only cover about half of the checks we'd like to be able to do. Here are some rough ideas for possible improvements. I'm happy to try contributing here as well.\r\n\r\n### Expectations on `datetime` columns themselves\r\n\r\n```python\r\nmy_filehandle.expect_column_datetime_values_to_have_frequency(\r\n    \"datetime_column_name\",\r\n    freq=\"30s\",\r\n)\r\n```\r\n\r\nNot sure of how else to namespace / specify `datetime` columns as distinct from other columns. Maybe `expect_datetime_column`?\r\n\r\nAlso may be preferable to use `freq` as shorthand for `frequency`, given that it's such a long function name already, and `freq` is widely used in pandas. I noticed that longer and more descriptive variable names are preferred here, though.\r\n\r\n`freq` can be specified using the existing pandas [Offset Aliases](https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases).\r\n\r\nWe could also have a variety of checks on ordering:\r\n\r\n```python\r\nmy_filehandle.expect_column_datetime_values_to_be_increasing(\"datetime_column_name\")\r\n\r\n# This is possibly unnecessary, since you could check whether its both increasing + unique.\r\nmy_filehandle.expect_column_datetime_values_to_be_strictly_increasing(\"datetime_column_name\")\r\n\r\nmy_filehandle.expect_column_datetime_values_to_be_decreasing(\"datetime_column_name\")\r\n```\r\n\r\n### Expectations on a `value` column with `datetime` indexes\r\n\r\n```python\r\nmy_filehandle.expect_column_datetime_values_to_be_stationary(\r\n    datetime_column=\"datetime_column_name\",\r\n    value_column=\"value_column_name\",\r\n    statsmodels_test_name=\"kpss\",\r\n    statsmodels_test_args={},\r\n)\r\n```\r\n\r\nwhere `statsmodels_test_name` is from `statsmodels.tsa.stattools`.\r\n\r\nI can't think of a good naming convention to separate when we're talking about expectations on an actual `datetime` column versus another column that's assumed to have a `datetime` index. Any ideas?\r\n\r\nOr it could be more general, something like\r\n\r\n```python\r\nmy_filehandle.expect_column_datetime_values_to_pass_test(\r\n    datetime_column=\"datetime_column_name\",\r\n    value_column=\"value_column_name\",\r\n    statsmodels_test_name=\"kpss\",\r\n    statsmodels_test_args={},\r\n)\r\n```\r\n\r\n### Expectations on multiple `value` columns with `datetime` indexes\r\n\r\n```python\r\nmy_filehandle.expect_column_datetime_pair_values_to_have_crosscorrelation(\r\n    datetime_column=\"datetime_column_name\",\r\n    value_column=\"value_column_name\",\r\n    correlation_coefficient=0.3,\r\n)\r\n```\r\n\r\nAgain, any ideas on naming conventions here would be great.\r\n", "performed_via_github_app": null, "score": 1.0}]}