{"total_count": 203, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/rq/django-rq/issues/437", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/437/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/437/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/437/events", "html_url": "https://github.com/rq/django-rq/issues/437", "id": 668115490, "node_id": "MDU6SXNzdWU2NjgxMTU0OTA=", "number": 437, "title": "How to scale Django RQ workers that can read from source directory & be able to write to database?", "user": {"login": "taewookim", "id": 5768898, "node_id": "MDQ6VXNlcjU3Njg4OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5768898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taewookim", "html_url": "https://github.com/taewookim", "followers_url": "https://api.github.com/users/taewookim/followers", "following_url": "https://api.github.com/users/taewookim/following{/other_user}", "gists_url": "https://api.github.com/users/taewookim/gists{/gist_id}", "starred_url": "https://api.github.com/users/taewookim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taewookim/subscriptions", "organizations_url": "https://api.github.com/users/taewookim/orgs", "repos_url": "https://api.github.com/users/taewookim/repos", "events_url": "https://api.github.com/users/taewookim/events{/privacy}", "received_events_url": "https://api.github.com/users/taewookim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-29T20:03:42Z", "updated_at": "2020-07-31T10:59:51Z", "closed_at": "2020-07-31T10:59:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to \"Scale\" RQ workers?\r\n\r\nI have architecture like this\r\n\r\n`uwsgi/django (machine 1) <=> RQ server (machine 1) <=> RQ worker 1...n (machine 1)`\r\n\r\nProblem is.. RQ workers are eating up all the CPU so the Django/uwsgi is almost unresponsive during high load\r\n\r\nSo I want to do something liket his\r\n\r\n```\r\nuwsgi/django (machine 1) <=> RQ server (machine 1)\r\n                                -> RQ worker 1 (machine 2)\r\n                                -> RQ worker 2 (machine 3)\r\n                                -> ...\r\n                                -> RQ worker n (machine n-1)\r\n\r\n```\r\nProblem is, I'm using Django RQ (django wrapper for RQ).. and the RQ workers are spawned from a specific directory and need to be able to write to database\r\n\r\nIf I split up the RQ workers into other machines, i need the workers to be able to\r\n\r\nread from django source directory\r\nbe able to write to Django App database\r\n#2 can be solved with microservice.. however I'm a bit stuck\r\n\r\nI can do something like SSHFS but i am not 100% certain if this is a \"good\" design in terms of scalability, security, and of course, complexity ( i dont' want to keep adding more monitors / software stack).\r\n\r\nOf course, I can just have a script that pulls down source code before RQ worker runs but i was wondering if anyone else has better way of doing this.\r\n\r\n[edit] Posted in [SO](https://stackoverflow.com/questions/63161593/how-to-scale-django-rq-workers-that-can-read-from-source-directory-be-able-to)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/436", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/436/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/436/events", "html_url": "https://github.com/rq/django-rq/issues/436", "id": 663911040, "node_id": "MDU6SXNzdWU2NjM5MTEwNDA=", "number": 436, "title": "How to Scale Django RQ?", "user": {"login": "taewookim", "id": 5768898, "node_id": "MDQ6VXNlcjU3Njg4OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5768898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taewookim", "html_url": "https://github.com/taewookim", "followers_url": "https://api.github.com/users/taewookim/followers", "following_url": "https://api.github.com/users/taewookim/following{/other_user}", "gists_url": "https://api.github.com/users/taewookim/gists{/gist_id}", "starred_url": "https://api.github.com/users/taewookim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taewookim/subscriptions", "organizations_url": "https://api.github.com/users/taewookim/orgs", "repos_url": "https://api.github.com/users/taewookim/repos", "events_url": "https://api.github.com/users/taewookim/events{/privacy}", "received_events_url": "https://api.github.com/users/taewookim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-22T16:58:07Z", "updated_at": "2020-07-27T00:40:33Z", "closed_at": "2020-07-27T00:40:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Im working on an architecture that does this\r\n- web dashboard => RQ queue => RQ worker => puppeteer\r\n\r\nCurrently, writing im hosting RQ queue server/worker in same box as the web dashboard since not too many users, however, i am starting to notice that the RQ worker launching nodejs that connects to a remote puppeteer is starting to eat more memory than I anticipated.\r\n\r\nBUT.. since django RQ requires django directory structure to run correctly, how can I separate out RQ worker onto a different machine w/o having to write microservices? \r\n\r\nI thought of having having RQ worker server do SSHFS mount onto dashboard (so i dont have to rip out the code) \r\n\r\ni.e. do something like this\r\n\r\n- [server 1] web dashboard => [server 2] RQ server => [server3-5] RQ worker with SSHFS mounted to server1 => [server 6] puppeteer\r\n\r\nProblem is, im not sure if this is a good design.\r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/435", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/435/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/435/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/435/events", "html_url": "https://github.com/rq/django-rq/issues/435", "id": 656876052, "node_id": "MDU6SXNzdWU2NTY4NzYwNTI=", "number": 435, "title": "Multiple Django RQ worker on Systemd?", "user": {"login": "taewookim", "id": 5768898, "node_id": "MDQ6VXNlcjU3Njg4OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5768898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taewookim", "html_url": "https://github.com/taewookim", "followers_url": "https://api.github.com/users/taewookim/followers", "following_url": "https://api.github.com/users/taewookim/following{/other_user}", "gists_url": "https://api.github.com/users/taewookim/gists{/gist_id}", "starred_url": "https://api.github.com/users/taewookim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taewookim/subscriptions", "organizations_url": "https://api.github.com/users/taewookim/orgs", "repos_url": "https://api.github.com/users/taewookim/repos", "events_url": "https://api.github.com/users/taewookim/events{/privacy}", "received_events_url": "https://api.github.com/users/taewookim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-14T20:23:41Z", "updated_at": "2020-07-27T00:37:32Z", "closed_at": "2020-07-27T00:37:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I tried following few examples like [this one](https://blog.miguelgrinberg.com/post/running-a-flask-application-as-a-service-with-systemd) but my server ends up freezing and it's close to impossible to debug b/c the server keeps freezing on me.\r\n\r\nAny examples of how this is done?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/432", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/432/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/432/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/432/events", "html_url": "https://github.com/rq/django-rq/issues/432", "id": 645909649, "node_id": "MDU6SXNzdWU2NDU5MDk2NDk=", "number": 432, "title": "Does DjangoRQ \"block\"?", "user": {"login": "taewookim", "id": 5768898, "node_id": "MDQ6VXNlcjU3Njg4OTg=", "avatar_url": "https://avatars1.githubusercontent.com/u/5768898?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taewookim", "html_url": "https://github.com/taewookim", "followers_url": "https://api.github.com/users/taewookim/followers", "following_url": "https://api.github.com/users/taewookim/following{/other_user}", "gists_url": "https://api.github.com/users/taewookim/gists{/gist_id}", "starred_url": "https://api.github.com/users/taewookim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taewookim/subscriptions", "organizations_url": "https://api.github.com/users/taewookim/orgs", "repos_url": "https://api.github.com/users/taewookim/repos", "events_url": "https://api.github.com/users/taewookim/events{/privacy}", "received_events_url": "https://api.github.com/users/taewookim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-25T23:27:20Z", "updated_at": "2020-07-02T23:41:37Z", "closed_at": "2020-07-02T23:41:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have two scheduled jobs..\r\n\r\nJob A => scheduled at 10:00 AM\r\nJob B => scheduled at 10:10 AM\r\n\r\nAnd they are queued on same queue... but job A takes over 30 minutes.. does job B start execution at 10:30 AM?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/430", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/430/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/430/events", "html_url": "https://github.com/rq/django-rq/issues/430", "id": 631470951, "node_id": "MDU6SXNzdWU2MzE0NzA5NTE=", "number": 430, "title": "It is possible to use LIFO method instead of FIFO?", "user": {"login": "nicolalandro", "id": 18419702, "node_id": "MDQ6VXNlcjE4NDE5NzAy", "avatar_url": "https://avatars2.githubusercontent.com/u/18419702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicolalandro", "html_url": "https://github.com/nicolalandro", "followers_url": "https://api.github.com/users/nicolalandro/followers", "following_url": "https://api.github.com/users/nicolalandro/following{/other_user}", "gists_url": "https://api.github.com/users/nicolalandro/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicolalandro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicolalandro/subscriptions", "organizations_url": "https://api.github.com/users/nicolalandro/orgs", "repos_url": "https://api.github.com/users/nicolalandro/repos", "events_url": "https://api.github.com/users/nicolalandro/events{/privacy}", "received_events_url": "https://api.github.com/users/nicolalandro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-05T10:02:45Z", "updated_at": "2020-06-18T16:57:50Z", "closed_at": "2020-06-18T16:57:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need to use LIFO(Last In First Out) like using \"at_front\" with [rq](http://python-rq.org/docs/). Is it possible to do it? How? If is not possible can I contribute to this project adding this features?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/427", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/427/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/427/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/427/events", "html_url": "https://github.com/rq/django-rq/issues/427", "id": 625831429, "node_id": "MDU6SXNzdWU2MjU4MzE0Mjk=", "number": 427, "title": "Set Sentry environment from config variable in job", "user": {"login": "ttinjic", "id": 59559228, "node_id": "MDQ6VXNlcjU5NTU5MjI4", "avatar_url": "https://avatars2.githubusercontent.com/u/59559228?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ttinjic", "html_url": "https://github.com/ttinjic", "followers_url": "https://api.github.com/users/ttinjic/followers", "following_url": "https://api.github.com/users/ttinjic/following{/other_user}", "gists_url": "https://api.github.com/users/ttinjic/gists{/gist_id}", "starred_url": "https://api.github.com/users/ttinjic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ttinjic/subscriptions", "organizations_url": "https://api.github.com/users/ttinjic/orgs", "repos_url": "https://api.github.com/users/ttinjic/repos", "events_url": "https://api.github.com/users/ttinjic/events{/privacy}", "received_events_url": "https://api.github.com/users/ttinjic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-27T16:08:32Z", "updated_at": "2020-08-21T12:56:32Z", "closed_at": "2020-06-05T00:59:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nWhen I running jobs, Sentry tags : `environment` shows nothing and `server_name` our localhost name even with `environment` and `server_name` arguments in `sentry_sdk.init`.\r\n\r\nconfig :\r\n\r\n```\r\nsentry_sdk.init(\r\n dsn=SENTRY_DSN,\r\n integrations=[DjangoIntegration(), RqIntegration(), sentry_logging],\r\n send_default_pii=True,\r\n max_breadcrumbs=50,\r\n environment=SENTRY_ENVIRONMENT,\r\n server_name=SENTRY_ENVIRONMENT,\r\n)\r\n```\r\n\r\nwhen I look at the value of the env var `SENTRY_ENVIRONMENT`, I get\r\n`INFO 2020-05-27 15:00:43,666 [statistics] SENTRY_ENVIRONMENT:tti.test`\r\n\r\nhowever `environment` show nothing and `server_name` tag still show hostname\r\n\r\nDo you know how to use the proper environment in a job?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/426", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/426/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/426/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/426/events", "html_url": "https://github.com/rq/django-rq/issues/426", "id": 624777069, "node_id": "MDU6SXNzdWU2MjQ3NzcwNjk=", "number": 426, "title": "InvalidTemplateLibrary masking ImportError", "user": {"login": "vladignatyev", "id": 513940, "node_id": "MDQ6VXNlcjUxMzk0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/513940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vladignatyev", "html_url": "https://github.com/vladignatyev", "followers_url": "https://api.github.com/users/vladignatyev/followers", "following_url": "https://api.github.com/users/vladignatyev/following{/other_user}", "gists_url": "https://api.github.com/users/vladignatyev/gists{/gist_id}", "starred_url": "https://api.github.com/users/vladignatyev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vladignatyev/subscriptions", "organizations_url": "https://api.github.com/users/vladignatyev/orgs", "repos_url": "https://api.github.com/users/vladignatyev/repos", "events_url": "https://api.github.com/users/vladignatyev/events{/privacy}", "received_events_url": "https://api.github.com/users/vladignatyev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-26T10:28:49Z", "updated_at": "2020-06-05T00:53:29Z", "closed_at": "2020-06-05T00:53:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \r\n\r\nI'm getting the following exception raised on a production environment:\r\n```\r\nImportError raised when trying to load 'django_rq.templatetags.django_rq': cannot import name 'UnpickleError' from 'rq.exceptions' (/usr/local/lib/python3.8/site-packages/rq/exceptions.py)\r\n```\r\nI use `django-rq==2.3.0`. How can I resolve this issue? I have no idea where to dig first.\r\n\r\nCan somebody help me resolving this issue? I have a complete Sentry log for the problem. Can this help?\r\n\r\n\r\nThe complete stacktrace:\r\n```\r\nTraceback (most recent call last):\r\n  File \"manage.py\", line 21, in <module>\r\n    main()\r\n  File \"manage.py\", line 17, in main\r\n    execute_from_command_line(sys.argv)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/management/__init__.py\", line 401, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/management/__init__.py\", line 395, in execute\r\n    self.fetch_command(subcommand).run_from_argv(self.argv)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/management/base.py\", line 328, in run_from_argv\r\n    self.execute(*args, **cmd_options)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/management/base.py\", line 366, in execute\r\n    self.check()\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/management/base.py\", line 392, in check\r\n    all_issues = self._run_checks(\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/management/base.py\", line 382, in _run_checks\r\n    return checks.run_checks(**kwargs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/core/checks/registry.py\", line 72, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/contrib/admin/checks.py\", line 76, in check_dependencies\r\n    for engine in engines.all():\r\n  File \"/usr/local/lib/python3.8/site-packages/django/template/utils.py\", line 90, in all\r\n    return [self[alias] for alias in self]\r\n  File \"/usr/local/lib/python3.8/site-packages/django/template/utils.py\", line 90, in <listcomp>\r\n    return [self[alias] for alias in self]\r\n  File \"/usr/local/lib/python3.8/site-packages/django/template/utils.py\", line 81, in __getitem__\r\n    engine = engine_cls(params)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/template/backends/django.py\", line 25, in __init__\r\n    options['libraries'] = self.get_templatetag_libraries(libraries)\r\n  File \"/usr/local/lib/python3.8/site-packages/django/template/backends/django.py\", line 43, in get_templatetag_libraries\r\n    libraries = get_installed_libraries()\r\n  File \"/usr/local/lib/python3.8/site-packages/django/template/backends/django.py\", line 108, in get_installed_libraries\r\n    for name in get_package_libraries(pkg):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/template/backends/django.py\", line 123, in get_package_libraries\r\n    raise InvalidTemplateLibrary(\r\ndjango.template.library.InvalidTemplateLibrary: Invalid template library specified. ImportError raised when trying to load 'django_rq.templatetags.django_rq': cannot import name 'UnpickleError' from 'rq.exceptions' (/usr/local/lib/python3.8/site-packages/rq/exceptions.py)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/424", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/424/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/424/events", "html_url": "https://github.com/rq/django-rq/issues/424", "id": 619949333, "node_id": "MDU6SXNzdWU2MTk5NDkzMzM=", "number": 424, "title": "Can two different Django projects using django-rq with the same keyspace?", "user": {"login": "kegan", "id": 21737, "node_id": "MDQ6VXNlcjIxNzM3", "avatar_url": "https://avatars2.githubusercontent.com/u/21737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kegan", "html_url": "https://github.com/kegan", "followers_url": "https://api.github.com/users/kegan/followers", "following_url": "https://api.github.com/users/kegan/following{/other_user}", "gists_url": "https://api.github.com/users/kegan/gists{/gist_id}", "starred_url": "https://api.github.com/users/kegan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kegan/subscriptions", "organizations_url": "https://api.github.com/users/kegan/orgs", "repos_url": "https://api.github.com/users/kegan/repos", "events_url": "https://api.github.com/users/kegan/events{/privacy}", "received_events_url": "https://api.github.com/users/kegan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-18T06:38:24Z", "updated_at": "2020-06-05T00:55:06Z", "closed_at": "2020-06-05T00:55:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "If I have more than one Django projects (they are different projects altogether). And I am using django-rq in all these projects.\r\n\r\nCan I use the same redis keyspace for all the different projects?\r\n\r\nFor example, `redis://localhost:6379/0` this uses `keyspace=0`.\r\n\r\nCan I use the same django-rq settings for all my different Django projects connecting to the same redis instance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/423", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/423/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/423/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/423/events", "html_url": "https://github.com/rq/django-rq/issues/423", "id": 618916103, "node_id": "MDU6SXNzdWU2MTg5MTYxMDM=", "number": 423, "title": "RQ 1.4.0 breaks django_rq", "user": {"login": "dglinyanov", "id": 888035, "node_id": "MDQ6VXNlcjg4ODAzNQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/888035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dglinyanov", "html_url": "https://github.com/dglinyanov", "followers_url": "https://api.github.com/users/dglinyanov/followers", "following_url": "https://api.github.com/users/dglinyanov/following{/other_user}", "gists_url": "https://api.github.com/users/dglinyanov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dglinyanov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dglinyanov/subscriptions", "organizations_url": "https://api.github.com/users/dglinyanov/orgs", "repos_url": "https://api.github.com/users/dglinyanov/repos", "events_url": "https://api.github.com/users/dglinyanov/events{/privacy}", "received_events_url": "https://api.github.com/users/dglinyanov/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-15T12:00:18Z", "updated_at": "2020-05-15T12:01:25Z", "closed_at": "2020-05-15T12:01:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "When rq version is not fixed in requirements (`django-rq==2.3.1` - this is in requirements):\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/site-packages/django/template/backends/django.py\", line 121, in get_package_libraries\r\n    module = import_module(entry[1])\r\n  File \"/usr/local/lib/python3.8/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 671, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 783, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/usr/local/lib/python3.8/site-packages/django_rq/templatetags/django_rq.py\", line 4, in <module>\r\n    from rq.exceptions import UnpickleError\r\nImportError: cannot import name 'UnpickleError' from 'rq.exceptions' (/usr/local/lib/python3.8/site-packages/rq/exceptions.py)\r\n```\r\n\r\nManually adding `rq==1.3.0` (latest that worked) fixes problem.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/421", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/421/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/421/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/421/events", "html_url": "https://github.com/rq/django-rq/issues/421", "id": 617114901, "node_id": "MDU6SXNzdWU2MTcxMTQ5MDE=", "number": 421, "title": "New changes in python-rq is breaking django-rq", "user": {"login": "ayys", "id": 48376475, "node_id": "MDQ6VXNlcjQ4Mzc2NDc1", "avatar_url": "https://avatars0.githubusercontent.com/u/48376475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayys", "html_url": "https://github.com/ayys", "followers_url": "https://api.github.com/users/ayys/followers", "following_url": "https://api.github.com/users/ayys/following{/other_user}", "gists_url": "https://api.github.com/users/ayys/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayys/subscriptions", "organizations_url": "https://api.github.com/users/ayys/orgs", "repos_url": "https://api.github.com/users/ayys/repos", "events_url": "https://api.github.com/users/ayys/events{/privacy}", "received_events_url": "https://api.github.com/users/ayys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-05-13T03:37:07Z", "updated_at": "2020-05-14T08:55:54Z", "closed_at": "2020-05-14T08:55:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "With the recent changes in python-rq, they have removed `UnpickleError` from rq/exceptions.py in this [commit](https://github.com/rq/rq/commit/e1cbc3736c55d7a72be121a170d1b8c811619dc2#diff-27817b1a9be843cacb4ebeb20393c486L22)\r\n\r\nSo now when I install django-rq, I get the following error\r\n```\r\n  File \"/root/.local/share/virtualenvs/src-VBU3rafc/lib/python3.7/site-packages/django_rq/urls.py\", line 3, in <module>\r\n    from . import views\r\n  File \"/root/.local/share/virtualenvs/src-VBU3rafc/lib/python3.7/site-packages/django_rq/views.py\", line 12, in <module>\r\n    from rq.exceptions import NoSuchJobError, UnpickleError\r\nImportError: cannot import name 'UnpickleError' from 'rq.exceptions' (/root/.local/share/virtualenvs/src-VBU3rafc/lib/python3.7/site-packages/rq/exceptions.py)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/418", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/418/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/418/events", "html_url": "https://github.com/rq/django-rq/issues/418", "id": 607909242, "node_id": "MDU6SXNzdWU2MDc5MDkyNDI=", "number": 418, "title": "django-rq don't load Django Enviroment settings", "user": {"login": "l2radamanthys", "id": 125394, "node_id": "MDQ6VXNlcjEyNTM5NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/125394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/l2radamanthys", "html_url": "https://github.com/l2radamanthys", "followers_url": "https://api.github.com/users/l2radamanthys/followers", "following_url": "https://api.github.com/users/l2radamanthys/following{/other_user}", "gists_url": "https://api.github.com/users/l2radamanthys/gists{/gist_id}", "starred_url": "https://api.github.com/users/l2radamanthys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/l2radamanthys/subscriptions", "organizations_url": "https://api.github.com/users/l2radamanthys/orgs", "repos_url": "https://api.github.com/users/l2radamanthys/repos", "events_url": "https://api.github.com/users/l2radamanthys/events{/privacy}", "received_events_url": "https://api.github.com/users/l2radamanthys/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-27T23:03:22Z", "updated_at": "2020-06-05T00:57:09Z", "closed_at": "2020-06-05T00:57:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I try to run a job in server django-rq don't load django enviroment settings\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/app/.heroku/python/lib/python3.6/site-packages/rq/worker.py\", line 884, in perform_job\r\n    rv = job.perform()\r\n  File \"/app/.heroku/python/lib/python3.6/site-packages/rq/job.py\", line 664, in perform\r\n    self._result = self._execute()\r\n  File \"/app/.heroku/python/lib/python3.6/site-packages/rq/job.py\", line 670, in _execute\r\n    return self.func(*self.args, **self.kwargs)\r\n  File \"/app/.heroku/python/lib/python3.6/site-packages/rq/job.py\", line 215, in func\r\n    return import_attribute(self.func_name)\r\n  File \"/app/.heroku/python/lib/python3.6/site-packages/rq/utils.py\", line 152, in import_attribute\r\n    module = importlib.import_module(module_name)\r\n  File \"/app/.heroku/python/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 953, in _find_and_load_unlocked\r\nModuleNotFoundError: No module named 'app.trabajos.pdf_seven_day_notification'\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/413", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/413/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/413/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/413/events", "html_url": "https://github.com/rq/django-rq/issues/413", "id": 591220349, "node_id": "MDU6SXNzdWU1OTEyMjAzNDk=", "number": 413, "title": "Setting Sentry environment?", "user": {"login": "threewordphrase", "id": 1591971, "node_id": "MDQ6VXNlcjE1OTE5NzE=", "avatar_url": "https://avatars1.githubusercontent.com/u/1591971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/threewordphrase", "html_url": "https://github.com/threewordphrase", "followers_url": "https://api.github.com/users/threewordphrase/followers", "following_url": "https://api.github.com/users/threewordphrase/following{/other_user}", "gists_url": "https://api.github.com/users/threewordphrase/gists{/gist_id}", "starred_url": "https://api.github.com/users/threewordphrase/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/threewordphrase/subscriptions", "organizations_url": "https://api.github.com/users/threewordphrase/orgs", "repos_url": "https://api.github.com/users/threewordphrase/repos", "events_url": "https://api.github.com/users/threewordphrase/events{/privacy}", "received_events_url": "https://api.github.com/users/threewordphrase/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-31T15:50:55Z", "updated_at": "2020-03-31T15:52:22Z", "closed_at": "2020-03-31T15:52:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm using `sentry-sdk` and everything is working, but I don't see a way to set the sentry environment (e.g. production, staging, etc) for my RQ worker. How can I do this?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/411", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/411/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/411/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/411/events", "html_url": "https://github.com/rq/django-rq/issues/411", "id": 589955258, "node_id": "MDU6SXNzdWU1ODk5NTUyNTg=", "number": 411, "title": " Restrict 'django-rq' URL access to non-admin users", "user": {"login": "prabin-lp", "id": 48715153, "node_id": "MDQ6VXNlcjQ4NzE1MTUz", "avatar_url": "https://avatars3.githubusercontent.com/u/48715153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/prabin-lp", "html_url": "https://github.com/prabin-lp", "followers_url": "https://api.github.com/users/prabin-lp/followers", "following_url": "https://api.github.com/users/prabin-lp/following{/other_user}", "gists_url": "https://api.github.com/users/prabin-lp/gists{/gist_id}", "starred_url": "https://api.github.com/users/prabin-lp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/prabin-lp/subscriptions", "organizations_url": "https://api.github.com/users/prabin-lp/orgs", "repos_url": "https://api.github.com/users/prabin-lp/repos", "events_url": "https://api.github.com/users/prabin-lp/events{/privacy}", "received_events_url": "https://api.github.com/users/prabin-lp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-30T02:49:10Z", "updated_at": "2020-03-30T05:59:22Z", "closed_at": "2020-03-30T05:59:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "`urlpatterns += [\r\n    path('django-rq/', include('django_rq.urls'))\r\n]`\r\n\r\nIf we insert the above code in **urls.py**, then everyone can access the URL _http://127.0.0.1:8000/django-rq/_ from the browser without login. This leads to some security issues.\r\n\r\nWe need to access the **django-rq** user interface through the browser only after login.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/409", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/409/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/409/events", "html_url": "https://github.com/rq/django-rq/issues/409", "id": 583177588, "node_id": "MDU6SXNzdWU1ODMxNzc1ODg=", "number": 409, "title": "Using the new ScheduledJobRegistry", "user": {"login": "JethroMV", "id": 50832990, "node_id": "MDQ6VXNlcjUwODMyOTkw", "avatar_url": "https://avatars3.githubusercontent.com/u/50832990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JethroMV", "html_url": "https://github.com/JethroMV", "followers_url": "https://api.github.com/users/JethroMV/followers", "following_url": "https://api.github.com/users/JethroMV/following{/other_user}", "gists_url": "https://api.github.com/users/JethroMV/gists{/gist_id}", "starred_url": "https://api.github.com/users/JethroMV/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JethroMV/subscriptions", "organizations_url": "https://api.github.com/users/JethroMV/orgs", "repos_url": "https://api.github.com/users/JethroMV/repos", "events_url": "https://api.github.com/users/JethroMV/events{/privacy}", "received_events_url": "https://api.github.com/users/JethroMV/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-17T17:27:43Z", "updated_at": "2020-03-31T10:15:34Z", "closed_at": "2020-03-31T10:15:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, I was very glad to see the native Job Scheduler supported in the 2.3.0 release!\r\nhttps://github.com/rq/django-rq/releases/tag/v2.3.0\r\n\r\nHowever I'm having trouble enabling it.\r\n\r\nI've updated to `django-rq==2.3.0` and `rq==1.3`, but my `python manage.py rqworker` doesn't seem to have the `--with-scheduler` flag.  \r\n\r\nI see the flag in the codebase on git https://github.com/rq/django-rq/blob/8ede92d136bc33c355d523158788bf265cfb94d8/django_rq/management/commands/rqworker.py#L40\r\n\r\nBut it seems the flag is possibly missing from the latest version in pip?\r\n\r\n```\r\n$ pip show django-rq\r\nName: django-rq\r\nVersion: 2.3.0\r\nSummary: An app that provides django integration for RQ (Redis Queue)\r\nHome-page: https://github.com/rq/django-rq\r\nAuthor: Selwin Ong\r\nAuthor-email: selwin.ong@gmail.com\r\nLicense: MIT\r\nLocation: /home/me/venv/lib/python3.7/site-packages\r\nRequires: redis, django, rq\r\nRequired-by: UNKNOWN\r\n\r\n$ python manage.py rqworker my_queue --with-scheduler\r\nusage: manage.py rqworker [-h] [--worker-class WORKER_CLASS] [--pid PID]\r\n                          [--burst] [--name NAME] [--queue-class QUEUE_CLASS]\r\n                          [--job-class JOB_CLASS] [--worker-ttl WORKER_TTL]\r\n                          [--sentry-dsn SENTRY-DSN] [--version] [-v {0,1,2,3}]\r\n                          [--settings SETTINGS] [--pythonpath PYTHONPATH]\r\n                          [--traceback] [--no-color] [--force-color]\r\n                          [args [args ...]]\r\nmanage.py rqworker: error: unrecognized arguments: --with-scheduler\r\n```\r\nManually patching the commit that passes that argument through seems to make the scheduler work. It's just not included with 2.3.0 as far as I can tell?\r\n\r\nWould love to see https://github.com/rq/django-rq#support-for-rq-scheduler updated for the native scheduler!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/407", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/407/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/407/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/407/events", "html_url": "https://github.com/rq/django-rq/issues/407", "id": 572381259, "node_id": "MDU6SXNzdWU1NzIzODEyNTk=", "number": 407, "title": "Help Needed : Work-horse process was terminated unexpectedly (waitpid returned None)", "user": {"login": "arbazkiraak", "id": 13177578, "node_id": "MDQ6VXNlcjEzMTc3NTc4", "avatar_url": "https://avatars2.githubusercontent.com/u/13177578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arbazkiraak", "html_url": "https://github.com/arbazkiraak", "followers_url": "https://api.github.com/users/arbazkiraak/followers", "following_url": "https://api.github.com/users/arbazkiraak/following{/other_user}", "gists_url": "https://api.github.com/users/arbazkiraak/gists{/gist_id}", "starred_url": "https://api.github.com/users/arbazkiraak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arbazkiraak/subscriptions", "organizations_url": "https://api.github.com/users/arbazkiraak/orgs", "repos_url": "https://api.github.com/users/arbazkiraak/repos", "events_url": "https://api.github.com/users/arbazkiraak/events{/privacy}", "received_events_url": "https://api.github.com/users/arbazkiraak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-27T21:48:43Z", "updated_at": "2020-03-08T09:45:08Z", "closed_at": "2020-03-08T09:45:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "* What are the common reasons for the following exception, I noticed that below exception halts my scheduler jobs in the middle and put them into a failed state?\r\n\r\n```\r\nMoving job to FailedJobRegistry\r\nWork-horse process was terminated unexpectedly (waitpid returned None)\r\n```\r\n\r\nThe issue has been previously logged at https://github.com/rq/rq/issues/1041 or https://github.com/rq/rq/issues/1014 which indicates the high memory usage on the server could be the reason.\r\n\r\n* My tasks spawns so many child processes and utilize high  CPU/Memory usage.\r\n* I had been using celery over the year on the same workspace with the same amount/load of tasks but I had never experienced any `Job` termination due to high memory usage but since I moved to `django-rq` I have been getting above exception more often.\r\n* Is there any way to handle the exception or make it a bypass so that our tasks stay continue. \r\n\r\n```\r\n\u2192 redis-server -v\r\nRedis server v=5.0.7 sha=00000000:0 malloc=jemalloc-5.1.0 bits=64 build=1660b25130e5921c\r\n\r\nrq=1.2.2\r\ndjango-rq=2.3.0\r\nredis =3.4.1\r\n\r\n\u2192 python3 -V\r\nPython 3.7.6\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/399", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/399/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/399/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/399/events", "html_url": "https://github.com/rq/django-rq/issues/399", "id": 553420880, "node_id": "MDU6SXNzdWU1NTM0MjA4ODA=", "number": 399, "title": "Error using custom decorator", "user": {"login": "k0t3n", "id": 13064229, "node_id": "MDQ6VXNlcjEzMDY0MjI5", "avatar_url": "https://avatars1.githubusercontent.com/u/13064229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k0t3n", "html_url": "https://github.com/k0t3n", "followers_url": "https://api.github.com/users/k0t3n/followers", "following_url": "https://api.github.com/users/k0t3n/following{/other_user}", "gists_url": "https://api.github.com/users/k0t3n/gists{/gist_id}", "starred_url": "https://api.github.com/users/k0t3n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k0t3n/subscriptions", "organizations_url": "https://api.github.com/users/k0t3n/orgs", "repos_url": "https://api.github.com/users/k0t3n/repos", "events_url": "https://api.github.com/users/k0t3n/events{/privacy}", "received_events_url": "https://api.github.com/users/k0t3n/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-22T09:42:55Z", "updated_at": "2020-01-28T00:39:55Z", "closed_at": "2020-01-28T00:39:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "When using a custom decorator for a job the error `The process has forked and you cannot use this CoreFoundation functionality safely. You MUST exec ().\r\nBreak on __THE_PROCESS_HAS_FORKED_AND_YOU_CANNOT_USE_THIS_COREFOUNDATION_FUNCTIONALITY ___ YOU_MUST_EXEC __ () to debug.` occurs.\r\n\r\nExample:\r\n```python\r\nimport time\r\nfrom functools import wraps\r\n\r\ndef simple_decorator(f):\r\n    @wraps(f)\r\n    def wrapper(*args, **kwds):\r\n        print('decorated')\r\n        return f(*args, **kwds)\r\n\r\n    return wrapper\r\n\r\n@simple_decorator\r\ndef simple_job():\r\n    print('doing some stuff')\r\n    time.sleep(5)\r\n```\r\n\r\nStarting worker from `python manage.py rqworker`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/397", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/397/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/397/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/397/events", "html_url": "https://github.com/rq/django-rq/issues/397", "id": 552976919, "node_id": "MDU6SXNzdWU1NTI5NzY5MTk=", "number": 397, "title": "Extend url pattern to include '$' for job_id?", "user": {"login": "gowthamk63", "id": 19832125, "node_id": "MDQ6VXNlcjE5ODMyMTI1", "avatar_url": "https://avatars1.githubusercontent.com/u/19832125?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gowthamk63", "html_url": "https://github.com/gowthamk63", "followers_url": "https://api.github.com/users/gowthamk63/followers", "following_url": "https://api.github.com/users/gowthamk63/following{/other_user}", "gists_url": "https://api.github.com/users/gowthamk63/gists{/gist_id}", "starred_url": "https://api.github.com/users/gowthamk63/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gowthamk63/subscriptions", "organizations_url": "https://api.github.com/users/gowthamk63/orgs", "repos_url": "https://api.github.com/users/gowthamk63/repos", "events_url": "https://api.github.com/users/gowthamk63/events{/privacy}", "received_events_url": "https://api.github.com/users/gowthamk63/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-21T16:11:01Z", "updated_at": "2020-02-10T15:04:47Z", "closed_at": "2020-02-10T15:04:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Can we extend the url pattern to include '$' symbol? \r\nI don't see any issue adding the '$' symbol to the url pattern. Please let me know if you have any concerns\r\n\r\nThe URL that failed for me with a NoReverseMatch exception:\r\nurl(r'^queues/(?P<queue_index>[\\d]+)/(?P<job_id>[-\\w]+)/$',views.job_detail, name='rq_job_detail'),", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/396", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/396/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/396/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/396/events", "html_url": "https://github.com/rq/django-rq/issues/396", "id": 552447926, "node_id": "MDU6SXNzdWU1NTI0NDc5MjY=", "number": 396, "title": "Cron", "user": {"login": "anovas2", "id": 25807751, "node_id": "MDQ6VXNlcjI1ODA3NzUx", "avatar_url": "https://avatars1.githubusercontent.com/u/25807751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anovas2", "html_url": "https://github.com/anovas2", "followers_url": "https://api.github.com/users/anovas2/followers", "following_url": "https://api.github.com/users/anovas2/following{/other_user}", "gists_url": "https://api.github.com/users/anovas2/gists{/gist_id}", "starred_url": "https://api.github.com/users/anovas2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anovas2/subscriptions", "organizations_url": "https://api.github.com/users/anovas2/orgs", "repos_url": "https://api.github.com/users/anovas2/repos", "events_url": "https://api.github.com/users/anovas2/events{/privacy}", "received_events_url": "https://api.github.com/users/anovas2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-20T18:16:29Z", "updated_at": "2020-02-12T02:08:07Z", "closed_at": "2020-02-12T02:08:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "rq_scheduler is working for queuing task , but i cant get cron jobs to work. I tried every configuration and I still get the following message. There's not many examples for this.\r\n\r\nscheduler.cron(\r\n    '*/5 * * * *',                # A cron string (e.g. \"0 0 * * 0\")\r\n    func=rp.main(),\r\n    repeat=10,                  # Repeat this number of times (None means repeat forever)\r\n    queue_name='default',    # In which queue the job should be put in\r\n\r\n)\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"scheduled.py\", line 56, in <module>\r\n    queue_name='default',    # In which queue the job should be put in\r\n  File \"/home/anovas/lib/python3.6/site-packages/rq_scheduler/scheduler.py\", line 233, in cron\r\n    description=description, timeout=timeout, meta=meta)\r\n  File \"/home/anovas/lib/python3.6/site-packages/rq_scheduler/scheduler.py\", line 125, in _create_job\r\n    description=description, timeout=timeout, meta=meta)\r\n  File \"/home/anovas/lib/python3.6/site-packages/rq/job.py\", line 126, in create\r\n    raise TypeError('Expected a callable or a string, but got: {0}'.format(func))\r\nTypeError: Expected a callable or a string, but got: None\r\n\r\n```\r\n\r\nAny guidance would appreciated it.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/390", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/390/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/390/events", "html_url": "https://github.com/rq/django-rq/issues/390", "id": 535024821, "node_id": "MDU6SXNzdWU1MzUwMjQ4MjE=", "number": 390, "title": "NoSuchJobError not handled when requeueing from failed registry", "user": {"login": "thomasmatecki", "id": 10324649, "node_id": "MDQ6VXNlcjEwMzI0NjQ5", "avatar_url": "https://avatars1.githubusercontent.com/u/10324649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasmatecki", "html_url": "https://github.com/thomasmatecki", "followers_url": "https://api.github.com/users/thomasmatecki/followers", "following_url": "https://api.github.com/users/thomasmatecki/following{/other_user}", "gists_url": "https://api.github.com/users/thomasmatecki/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasmatecki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasmatecki/subscriptions", "organizations_url": "https://api.github.com/users/thomasmatecki/orgs", "repos_url": "https://api.github.com/users/thomasmatecki/repos", "events_url": "https://api.github.com/users/thomasmatecki/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasmatecki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-09T15:59:17Z", "updated_at": "2020-01-19T11:34:24Z", "closed_at": "2020-01-19T11:34:23Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When attempting to _requeue all_ failed jobs in a queue, [`NoSuchJobError`](https://github.com/rq/rq/blob/cf501518534429640a9a6d14e022f9329225e701/rq/exceptions.py#L6) may be raised and not handled gracefully.\r\n\r\nIt appears to occur in this loop:\r\nhttps://github.com/rq/django-rq/blob/f63b984f4bc1be7df39128c98c0ccdd89db0c226/django_rq/views.py#L359\r\n\r\nI propose we simply catch this exception and set a warning message.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/389", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/389/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/389/events", "html_url": "https://github.com/rq/django-rq/issues/389", "id": 534941351, "node_id": "MDU6SXNzdWU1MzQ5NDEzNTE=", "number": 389, "title": "BUG in urls.py: django < 2.0 not supported", "user": {"login": "lboc80", "id": 6185656, "node_id": "MDQ6VXNlcjYxODU2NTY=", "avatar_url": "https://avatars3.githubusercontent.com/u/6185656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lboc80", "html_url": "https://github.com/lboc80", "followers_url": "https://api.github.com/users/lboc80/followers", "following_url": "https://api.github.com/users/lboc80/following{/other_user}", "gists_url": "https://api.github.com/users/lboc80/gists{/gist_id}", "starred_url": "https://api.github.com/users/lboc80/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lboc80/subscriptions", "organizations_url": "https://api.github.com/users/lboc80/orgs", "repos_url": "https://api.github.com/users/lboc80/repos", "events_url": "https://api.github.com/users/lboc80/events{/privacy}", "received_events_url": "https://api.github.com/users/lboc80/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-09T13:44:59Z", "updated_at": "2019-12-17T02:40:38Z", "closed_at": "2019-12-17T02:40:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "this:\r\nhttps://github.com/rq/django-rq/blob/f63b984f4bc1be7df39128c98c0ccdd89db0c226/django_rq/urls.py#L1\r\n\r\nbreaks the support for django versions before 2.0.\r\nTested with `Django==1.11.6` and it does not work, had to revert to `django-rq==2.1.0`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/382", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/382/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/382/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/382/events", "html_url": "https://github.com/rq/django-rq/issues/382", "id": 531131391, "node_id": "MDU6SXNzdWU1MzExMzEzOTE=", "number": 382, "title": "Django 3.0 Compatibility", "user": {"login": "dneuhaeuser-zalando", "id": 37899626, "node_id": "MDQ6VXNlcjM3ODk5NjI2", "avatar_url": "https://avatars2.githubusercontent.com/u/37899626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dneuhaeuser-zalando", "html_url": "https://github.com/dneuhaeuser-zalando", "followers_url": "https://api.github.com/users/dneuhaeuser-zalando/followers", "following_url": "https://api.github.com/users/dneuhaeuser-zalando/following{/other_user}", "gists_url": "https://api.github.com/users/dneuhaeuser-zalando/gists{/gist_id}", "starred_url": "https://api.github.com/users/dneuhaeuser-zalando/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dneuhaeuser-zalando/subscriptions", "organizations_url": "https://api.github.com/users/dneuhaeuser-zalando/orgs", "repos_url": "https://api.github.com/users/dneuhaeuser-zalando/repos", "events_url": "https://api.github.com/users/dneuhaeuser-zalando/events{/privacy}", "received_events_url": "https://api.github.com/users/dneuhaeuser-zalando/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-12-02T13:33:41Z", "updated_at": "2019-12-08T00:15:55Z", "closed_at": "2019-12-08T00:15:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just upgraded to Django 3.0 and this failed for my project with the following exception:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/dneuhaeuser/dev/pricing-steering/manage.py\", line 21, in <module>\r\n    execute_from_command_line(sys.argv)\r\n  File \"/Users/dneuhaeuser/dev/pricing-steering/.tox/py37/lib/python3.7/site-packages/django/core/management/__init__.py\", line 401, in execute_from_command_line\r\n    utility.execute()\r\n  File \"/Users/dneuhaeuser/dev/pricing-steering/.tox/py37/lib/python3.7/site-packages/django/core/management/__init__.py\", line 377, in execute\r\n    django.setup()\r\n  File \"/Users/dneuhaeuser/dev/pricing-steering/.tox/py37/lib/python3.7/site-packages/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/Users/dneuhaeuser/dev/pricing-steering/.tox/py37/lib/python3.7/site-packages/django/apps/registry.py\", line 91, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"/Users/dneuhaeuser/dev/pricing-steering/.tox/py37/lib/python3.7/site-packages/django/apps/config.py\", line 90, in create\r\n    module = import_module(entry)\r\n  File \"/Users/dneuhaeuser/dev/pricing-steering/.tox/py37/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"/Users/dneuhaeuser/dev/pricing-steering/.tox/py37/lib/python3.7/site-packages/django_rq/__init__.py\", line 3, in <module>\r\n    from .decorators import job\r\n  File \"/Users/dneuhaeuser/dev/pricing-steering/.tox/py37/lib/python3.7/site-packages/django_rq/decorators.py\", line 4, in <module>\r\n    from django.utils import six\r\nImportError: cannot import name 'six' from 'django.utils' (/Users/dneuhaeuser/dev/pricing-steering/.tox/py37/lib/python3.7/site-packages/django/utils/__init__.py)\r\n```\r\n\r\nThis looks like django-rq isn't compatible with Django 3.0, yet. It would be great, if that could be fixed.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/381", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/381/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/381/events", "html_url": "https://github.com/rq/django-rq/issues/381", "id": 530862176, "node_id": "MDU6SXNzdWU1MzA4NjIxNzY=", "number": 381, "title": "Systemd + Azure Redis Authentication error", "user": {"login": "StriveForBest", "id": 867864, "node_id": "MDQ6VXNlcjg2Nzg2NA==", "avatar_url": "https://avatars2.githubusercontent.com/u/867864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/StriveForBest", "html_url": "https://github.com/StriveForBest", "followers_url": "https://api.github.com/users/StriveForBest/followers", "following_url": "https://api.github.com/users/StriveForBest/following{/other_user}", "gists_url": "https://api.github.com/users/StriveForBest/gists{/gist_id}", "starred_url": "https://api.github.com/users/StriveForBest/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/StriveForBest/subscriptions", "organizations_url": "https://api.github.com/users/StriveForBest/orgs", "repos_url": "https://api.github.com/users/StriveForBest/repos", "events_url": "https://api.github.com/users/StriveForBest/events{/privacy}", "received_events_url": "https://api.github.com/users/StriveForBest/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-02T03:14:41Z", "updated_at": "2019-12-08T03:51:02Z", "closed_at": "2019-12-08T03:51:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am hoping to get some guidance, not sure if it's an issue per se.\r\n\r\nI am using Azure Redis cluster and using django-rq for my async tasks.\r\n\r\nI have the following configuration in my settings:\r\n```\r\nIn [1]: settings.RQ_QUEUES\r\nOut[1]:\r\n{\r\n    'default': {\r\n        'HOST': 'mydomain.redis.cache.windows.net',\r\n        'PORT': 6379,\r\n        'DB': 1,\r\n        'PASSWORD': 'my-pass',\r\n        'DEFAULT_TIMEOUT': 600,\r\n        'ASYNC': True\r\n    }\r\n}\r\n```\r\n\r\nAnd it works fine:\r\n```\r\n/srv/www/eon/.venv/bin/python /srv/www/eon/manage.py rqworker default\r\n22:12:39 Worker rq:worker:e892be893b59439a9669c0ee7563cb38: started, version 1.1.0\r\n22:12:39 *** Listening on default...\r\n22:12:39 Cleaning registries for queue: default\r\n```\r\n\r\nHowever, my systemd service fails despite using the same configuration, here is the context of my service:\r\n```\r\n[Unit]\r\nDescription=Django-RQ Async Service\r\nAfter=network.target\r\n\r\n[Service]\r\nEnvironment=DJANGO_SETTINGS_MODULE=eon.settings\r\nEnvironment=DJANGO_CONFIGURATION=Production\r\nWorkingDirectory=/srv/www/eon/\r\nExecStart=/srv/www/eon/.venv/bin/python /srv/www/eon/manage.py rqworker default\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\n```\r\n\r\nIt is failing with the auth issue:\r\n```\r\nDec 02 03:08:12 eon-production systemd[1]: Started Django-RQ Async Service.\r\nDec 02 03:08:13 eon-production python[11134]: Authentication required.\r\nDec 02 03:08:14 eon-production systemd[1]: rq-async.service: Main process exited, code=exited, status=1/FAILURE\r\nDec 02 03:08:14 eon-production systemd[1]: rq-async.service: Failed with result 'exit-code'.\r\n```\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/376", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/376/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/376/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/376/events", "html_url": "https://github.com/rq/django-rq/issues/376", "id": 527849760, "node_id": "MDU6SXNzdWU1Mjc4NDk3NjA=", "number": 376, "title": "Required one positional argument 'description' is missing", "user": {"login": "KanishkTanwar", "id": 38759253, "node_id": "MDQ6VXNlcjM4NzU5MjUz", "avatar_url": "https://avatars2.githubusercontent.com/u/38759253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KanishkTanwar", "html_url": "https://github.com/KanishkTanwar", "followers_url": "https://api.github.com/users/KanishkTanwar/followers", "following_url": "https://api.github.com/users/KanishkTanwar/following{/other_user}", "gists_url": "https://api.github.com/users/KanishkTanwar/gists{/gist_id}", "starred_url": "https://api.github.com/users/KanishkTanwar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KanishkTanwar/subscriptions", "organizations_url": "https://api.github.com/users/KanishkTanwar/orgs", "repos_url": "https://api.github.com/users/KanishkTanwar/repos", "events_url": "https://api.github.com/users/KanishkTanwar/events{/privacy}", "received_events_url": "https://api.github.com/users/KanishkTanwar/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-25T05:08:26Z", "updated_at": "2019-12-08T03:49:53Z", "closed_at": "2019-12-08T03:49:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, idk if its actually a reserved keyword in your package, but i lost couple of hours trying to fix it, the easy fix was to change the description name to anything in my case i did de, so if anyone has a similar problem thats the fix\r\n\r\nkudos", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/368", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/368/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/368/events", "html_url": "https://github.com/rq/django-rq/issues/368", "id": 507290644, "node_id": "MDU6SXNzdWU1MDcyOTA2NDQ=", "number": 368, "title": "NotImplementedError", "user": {"login": "marcus-campos", "id": 5151894, "node_id": "MDQ6VXNlcjUxNTE4OTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/5151894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcus-campos", "html_url": "https://github.com/marcus-campos", "followers_url": "https://api.github.com/users/marcus-campos/followers", "following_url": "https://api.github.com/users/marcus-campos/following{/other_user}", "gists_url": "https://api.github.com/users/marcus-campos/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcus-campos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcus-campos/subscriptions", "organizations_url": "https://api.github.com/users/marcus-campos/orgs", "repos_url": "https://api.github.com/users/marcus-campos/repos", "events_url": "https://api.github.com/users/marcus-campos/events{/privacy}", "received_events_url": "https://api.github.com/users/marcus-campos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-10-15T14:39:44Z", "updated_at": "2019-10-16T19:13:35Z", "closed_at": "2019-10-16T19:13:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have following config in settings.py.\r\n```\r\nCACHES = {\r\n        \"default\": {\r\n            \"BACKEND\": \"django_redis.cache.RedisCache\",\r\n            \"LOCATION\": \"MY_URI_HOST\",\r\n            \"OPTIONS\": {\r\n                \"CLIENT_CLASS\": \"django_redis.client.DefaultClient\"\r\n            }\r\n        }\r\n    }\r\n````\r\n\r\nI run the app with django shell, it just raise the NotImplementedError.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/venv/lib/python3.7/site-packages/django/core/handlers/exception.py\", line 34, in inner\r\n    response = get_response(request)\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/venv/lib/python3.7/site-packages/django/core/handlers/base.py\", line 115, in _get_response\r\n    response = self.process_exception_by_middleware(e, request)\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/venv/lib/python3.7/site-packages/django/core/handlers/base.py\", line 113, in _get_response\r\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/venv/lib/python3.7/site-packages/django/views/decorators/csrf.py\", line 54, in wrapped_view\r\n    return view_func(*args, **kwargs)\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/venv/lib/python3.7/site-packages/django/views/generic/base.py\", line 71, in view\r\n    return self.dispatch(request, *args, **kwargs)\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/venv/lib/python3.7/site-packages/rest_framework/views.py\", line 495, in dispatch\r\n    response = self.handle_exception(exc)\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/venv/lib/python3.7/site-packages/rest_framework/views.py\", line 455, in handle_exception\r\n    self.raise_uncaught_exception(exc)\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/venv/lib/python3.7/site-packages/rest_framework/views.py\", line 492, in dispatch\r\n    response = handler(request, *args, **kwargs)\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/apps/v1/hook/views.py\", line 21, in post\r\n    self.queue_class.dispatch(job='hook.notification')\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/apps/v1/queue/queue.py\", line 16, in dispatch\r\n    queue = django_rq.get_queue(queue, autocommit=True, is_async=run_async, default_timeout=360)\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/venv/lib/python3.7/site-packages/django_rq/queues.py\", line 148, in get_queue\r\n    connection = get_connection(name)\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/venv/lib/python3.7/site-packages/django_rq/queues.py\", line 125, in get_connection\r\n    return get_redis_connection(QUEUES[name], use_strict_redis)\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/venv/lib/python3.7/site-packages/django_rq/queues.py\", line 89, in get_redis_connection\r\n    return get_redis(config['USE_REDIS_CACHE'])\r\n  File \"/Users/marcuscampos/Documents/Clientes/integration-orchestrator/venv/lib/python3.7/site-packages/django_redis/__init__.py\", line 17, in get_redis_connection\r\n    raise NotImplementedError(\"This backend does not support this feature\")\r\nNotImplementedError: This backend does not support this feature\r\n[15/Oct/2019 14:33:20] \"POST /api/v1/hook/ HTTP/1.1\" 500 16985\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/366", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/366/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/366/events", "html_url": "https://github.com/rq/django-rq/issues/366", "id": 504545006, "node_id": "MDU6SXNzdWU1MDQ1NDUwMDY=", "number": 366, "title": "Make disabling default sentry initialization more obvious", "user": {"login": "karech", "id": 2458776, "node_id": "MDQ6VXNlcjI0NTg3NzY=", "avatar_url": "https://avatars0.githubusercontent.com/u/2458776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/karech", "html_url": "https://github.com/karech", "followers_url": "https://api.github.com/users/karech/followers", "following_url": "https://api.github.com/users/karech/following{/other_user}", "gists_url": "https://api.github.com/users/karech/gists{/gist_id}", "starred_url": "https://api.github.com/users/karech/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/karech/subscriptions", "organizations_url": "https://api.github.com/users/karech/orgs", "repos_url": "https://api.github.com/users/karech/repos", "events_url": "https://api.github.com/users/karech/events{/privacy}", "received_events_url": "https://api.github.com/users/karech/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-10-09T10:01:51Z", "updated_at": "2019-11-14T15:57:55Z", "closed_at": "2019-11-12T11:42:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Currently docs says:\r\n> Disable RQ sentry plugin\r\n\r\n> If your project use sentry-sdk, the DSN is not compatible with RQ's sentry plugin (based on raven). In that case you have to disable the sentry plugin by setting --sentry-dsn=\"\".\r\n\r\nThis is not obvious and looks not good.\r\n\r\nBetter to allow do it via settings.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/364", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/364/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/364/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/364/events", "html_url": "https://github.com/rq/django-rq/issues/364", "id": 496018078, "node_id": "MDU6SXNzdWU0OTYwMTgwNzg=", "number": 364, "title": "Django redis URL setting fails", "user": {"login": "alekhrycaiko", "id": 12000039, "node_id": "MDQ6VXNlcjEyMDAwMDM5", "avatar_url": "https://avatars1.githubusercontent.com/u/12000039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alekhrycaiko", "html_url": "https://github.com/alekhrycaiko", "followers_url": "https://api.github.com/users/alekhrycaiko/followers", "following_url": "https://api.github.com/users/alekhrycaiko/following{/other_user}", "gists_url": "https://api.github.com/users/alekhrycaiko/gists{/gist_id}", "starred_url": "https://api.github.com/users/alekhrycaiko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alekhrycaiko/subscriptions", "organizations_url": "https://api.github.com/users/alekhrycaiko/orgs", "repos_url": "https://api.github.com/users/alekhrycaiko/repos", "events_url": "https://api.github.com/users/alekhrycaiko/events{/privacy}", "received_events_url": "https://api.github.com/users/alekhrycaiko/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-19T20:45:57Z", "updated_at": "2019-12-08T03:48:32Z", "closed_at": "2019-12-08T03:48:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "On django-rq 1.3.x I've been using the `url` parameter to set my redis-uri; and have had success with this. \r\n\r\nRecently I've tried to upgrade to django-rq 2.1, and I've noticed that my builds fail in a value error stating that the redis uri cannot be found. However, I am certain that I am passing a redis URI. \r\nError in question is below:\r\n```\r\nValueError: Redis URL must specify one of the followingschemes (redis://, rediss://, unix://)\r\n```\r\n\r\nI was able to circumvent this issue by using the `host` and `port` keys on my django-rq settings integration. I was able to get a redis connection working this way for my queues. However,  the failure of the `url` key appears quite mysterious. I am suspicious as to whether a regression may have occurred here?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/363", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/363/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/363/events", "html_url": "https://github.com/rq/django-rq/issues/363", "id": 493345554, "node_id": "MDU6SXNzdWU0OTMzNDU1NTQ=", "number": 363, "title": "Check worker health for kubernetes", "user": {"login": "bat79a", "id": 10594983, "node_id": "MDQ6VXNlcjEwNTk0OTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/10594983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bat79a", "html_url": "https://github.com/bat79a", "followers_url": "https://api.github.com/users/bat79a/followers", "following_url": "https://api.github.com/users/bat79a/following{/other_user}", "gists_url": "https://api.github.com/users/bat79a/gists{/gist_id}", "starred_url": "https://api.github.com/users/bat79a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bat79a/subscriptions", "organizations_url": "https://api.github.com/users/bat79a/orgs", "repos_url": "https://api.github.com/users/bat79a/repos", "events_url": "https://api.github.com/users/bat79a/events{/privacy}", "received_events_url": "https://api.github.com/users/bat79a/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-13T14:07:16Z", "updated_at": "2019-09-17T12:19:43Z", "closed_at": "2019-09-17T12:19:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi All.\r\n\r\nCan I check with a http request or tcp or command if the worker is up in my pod ?\r\nI need this health check for kubernetes.\r\n\r\nThx a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/362", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/362/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/362/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/362/events", "html_url": "https://github.com/rq/django-rq/issues/362", "id": 492764770, "node_id": "MDU6SXNzdWU0OTI3NjQ3NzA=", "number": 362, "title": "admin/static not found or sw.js not found.", "user": {"login": "bat79a", "id": 10594983, "node_id": "MDQ6VXNlcjEwNTk0OTgz", "avatar_url": "https://avatars0.githubusercontent.com/u/10594983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bat79a", "html_url": "https://github.com/bat79a", "followers_url": "https://api.github.com/users/bat79a/followers", "following_url": "https://api.github.com/users/bat79a/following{/other_user}", "gists_url": "https://api.github.com/users/bat79a/gists{/gist_id}", "starred_url": "https://api.github.com/users/bat79a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bat79a/subscriptions", "organizations_url": "https://api.github.com/users/bat79a/orgs", "repos_url": "https://api.github.com/users/bat79a/repos", "events_url": "https://api.github.com/users/bat79a/events{/privacy}", "received_events_url": "https://api.github.com/users/bat79a/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-12T12:09:12Z", "updated_at": "2019-12-08T03:42:14Z", "closed_at": "2019-12-08T03:42:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello all.\r\n\r\n**My stack is :**\r\n- python:3.7.4-alpine3.10\r\n- django==2.2.5\r\n- django-rq==2.1.0\r\n\r\nWithout django-rq admin/static are created and there is no probleme.\r\nBut when I add django-rq in the INSTALLED_APPS, all the admin/static files are not created.\r\n\r\nI found this settings : \r\n```\r\nRQ_SHOW_ADMIN_LINK = False \r\n```\r\nin settings.py who solve admin/static problem but I have always the sw.js file in error.\r\n\r\n**Here is my settings.py :** \r\n\r\n```python\r\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\r\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\r\n\r\n# APPS Root\r\nPROJECT_APPS_DIR = os.path.join(BASE_DIR, 'apps')\r\nsys.path.append(PROJECT_APPS_DIR)\r\n\r\n\r\n############################\r\n# Static files (CSS, JavaScript, Images)\r\n\r\nSTATIC_URL = '/static/'\r\n\r\nSTATICFILES_DIRS = (\r\n    os.path.join(PROJECT_APPS_DIR, \"my_app_1/static\"),\r\n    os.path.join(PROJECT_APPS_DIR, \"my_app_2/static\"),\r\n)\r\n\r\n# path for statics on the server\r\nSTATIC_ROOT = os.path.join(BASE_DIR, \"static/\")\r\n\r\n# extra places for statics\r\n# STATICFILES_ROOT = []\r\n\r\n# MEDIA\r\n\r\nMEDIA_ROOT = os.path.join(BASE_DIR, \"media/uploads/\")\r\n\r\nMEDIA_URL = '/srv/media/uploads/'\r\n\r\n```\r\n\r\nThx a lot.\r\nBaptiste.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/358", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/358/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/358/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/358/events", "html_url": "https://github.com/rq/django-rq/issues/358", "id": 478360110, "node_id": "MDU6SXNzdWU0NzgzNjAxMTA=", "number": 358, "title": "('Could not unpickle', LookupError(\"App 'openbook_common' doesn't have a 'Language' model.\",))", "user": {"login": "lifenautjoe", "id": 12737509, "node_id": "MDQ6VXNlcjEyNzM3NTA5", "avatar_url": "https://avatars1.githubusercontent.com/u/12737509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifenautjoe", "html_url": "https://github.com/lifenautjoe", "followers_url": "https://api.github.com/users/lifenautjoe/followers", "following_url": "https://api.github.com/users/lifenautjoe/following{/other_user}", "gists_url": "https://api.github.com/users/lifenautjoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifenautjoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifenautjoe/subscriptions", "organizations_url": "https://api.github.com/users/lifenautjoe/orgs", "repos_url": "https://api.github.com/users/lifenautjoe/repos", "events_url": "https://api.github.com/users/lifenautjoe/events{/privacy}", "received_events_url": "https://api.github.com/users/lifenautjoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-08T09:41:18Z", "updated_at": "2019-08-08T11:23:01Z", "closed_at": "2019-08-08T10:07:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "**Version:**\r\nrq==1.1.0\r\ndjango-rq==2.1.0\r\n\r\n\r\n\r\nGiven an rq job where a `User` and `Notification` instances are passed, the `User` has a ForeignKey reference to the model `openbook_common.Language` as in\r\n\r\n```python\r\nclass User(AbstractUser):\r\n    # ...\r\n    language = models.ForeignKey('openbook_common.Language', null=True, blank=True,\r\n                                 on_delete=models.SET_NULL, related_name='users')\r\n    # ...\r\n```\r\n\r\n**openbook_notifications/django_rq_jobs.py**\r\n\r\n```python\r\nfrom hashlib import sha256\r\nimport onesignal as onesignal_sdk\r\nfrom django.conf import settings\r\n\r\nonesignal_client = onesignal_sdk.Client(\r\n    app_id=settings.ONE_SIGNAL_APP_ID,\r\n    app_auth_key=settings.ONE_SIGNAL_API_KEY\r\n)\r\n\r\n\r\ndef send_notification_to_user(user, notification):\r\n    for device in user.devices.all():\r\n        notification.set_parameter('ios_badgeType', 'Increase')\r\n        notification.set_parameter('ios_badgeCount', '1')\r\n\r\n        user_id_contents = (str(user.uuid) + str(user.id)).encode('utf-8')\r\n\r\n        user_id = sha256(user_id_contents).hexdigest()\r\n\r\n        notification.set_filters([\r\n            {\"field\": \"tag\", \"key\": \"user_id\", \"relation\": \"=\", \"value\": user_id},\r\n            {\"field\": \"tag\", \"key\": \"device_uuid\", \"relation\": \"=\", \"value\": device.uuid},\r\n        ])\r\n\r\n        onesignal_client.send_notification(notification)\r\n\r\n```\r\nThis job is enqueued like\r\n\r\n**openbook_notifications/helpers.py**\r\n```python\r\n# get user instance, create notification object...\r\ndjango_rq.enqueue(send_notification_to_user, user=user, notification=notification)\r\n# ...\r\n```\r\n\r\nWhen called, the job throws an `UnpickleError`\r\n\r\n```python\r\nKeyError: 'language'\r\n  File \"django/apps/config.py\", line 178, in get_model\r\n    return self.models[model_name.lower()]\r\n\r\nLookupError: App 'openbook_common' doesn't have a 'Language' model.\r\n  File \"rq/job.py\", line 52, in unpickle\r\n    obj = loads(pickled_string)\r\n  File \"django/db/models/base.py\", line 1825, in model_unpickle\r\n    model = apps.get_model(*model_id)\r\n  File \"django/apps/registry.py\", line 210, in get_model\r\n    return app_config.get_model(model_name, require_ready=require_ready)\r\n  File \"django/apps/config.py\", line 181, in get_model\r\n    \"App '%s' doesn't have a '%s' model.\" % (self.label, model_name))\r\n\r\nUnpickleError: ('Could not unpickle', LookupError(\"App 'openbook_common' doesn't have a 'Language' model.\",))\r\n  File \"rq/worker.py\", line 477, in work\r\n    self.execute_job(job, queue)\r\n  File \"rq/worker.py\", line 664, in execute_job\r\n    self.fork_work_horse(job, queue)\r\n  File \"rq/worker.py\", line 603, in fork_work_horse\r\n    self.main_work_horse(job, queue)\r\n  File \"rq/worker.py\", line 681, in main_work_horse\r\n    raise e\r\n  File \"rq/worker.py\", line 678, in main_work_horse\r\n    self.perform_job(job, queue)\r\n  File \"rq/worker.py\", line 801, in perform_job\r\n    self.prepare_job_execution(job, heartbeat_ttl)\r\n  File \"rq/worker.py\", line 719, in prepare_job_execution\r\n    self.procline(msg.format(job.func_name, job.origin, time.time()))\r\n  File \"rq/job.py\", line 234, in func_name\r\n    self._unpickle_data()\r\n  File \"rq/job.py\", line 202, in _unpickle_data\r\n    self._func_name, self._instance, self._args, self._kwargs = unpickle(self.data)\r\n  File \"rq/job.py\", line 54, in unpickle\r\n    raise UnpickleError('Could not unpickle', pickled_string, e)\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/12737509/62692629-4c3ed380-b9d1-11e9-9b6c-7a2342f36319.png)\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/12737509/62692652-5c56b300-b9d1-11e9-9902-e11adf5fabf1.png)\r\n\r\nAm I doing something wrong? Are we not to pass model references to the scheduled jobs?\r\n\r\nCheers.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/353", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/353/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/353/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/353/events", "html_url": "https://github.com/rq/django-rq/issues/353", "id": 459564635, "node_id": "MDU6SXNzdWU0NTk1NjQ2MzU=", "number": 353, "title": "Background tasks with django-rq : Jobs overridden and lost", "user": {"login": "pyronlaboratory", "id": 12792626, "node_id": "MDQ6VXNlcjEyNzkyNjI2", "avatar_url": "https://avatars0.githubusercontent.com/u/12792626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pyronlaboratory", "html_url": "https://github.com/pyronlaboratory", "followers_url": "https://api.github.com/users/pyronlaboratory/followers", "following_url": "https://api.github.com/users/pyronlaboratory/following{/other_user}", "gists_url": "https://api.github.com/users/pyronlaboratory/gists{/gist_id}", "starred_url": "https://api.github.com/users/pyronlaboratory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pyronlaboratory/subscriptions", "organizations_url": "https://api.github.com/users/pyronlaboratory/orgs", "repos_url": "https://api.github.com/users/pyronlaboratory/repos", "events_url": "https://api.github.com/users/pyronlaboratory/events{/privacy}", "received_events_url": "https://api.github.com/users/pyronlaboratory/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-23T11:20:27Z", "updated_at": "2019-06-28T03:49:24Z", "closed_at": "2019-06-28T03:49:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm working with a django application hosted on heroku with redistogo addon:nano pack. I'm using django-rq, to execute tasks in the background - the tasks are initiated by online users.\r\n\r\nI've configured my settings.py file with the following queue:\r\n```\r\nRQ_QUEUES = {\r\n\r\n    'default': {\r\n        'URL': os.getenv('REDISTOGO_URL', 'redis://localhost:6379/0'),\r\n        'DEFAULT_TIMEOUT': 3600,\r\n    }\r\n}\r\n...\r\n\r\n```\r\nAlso added provision for logging.\r\n\r\nMy views.py file, makes a call to initiate.py when user invokes a request\r\n```\r\n# intitate.py\r\n\r\nimport django_rq\r\n\r\ndef tasks(**data):    \r\n    if condition:\r\n            q1 = django_rq.get_queue('default')\r\n            job1 = q1.enqueue(background_task_1.main, data)\r\n    if other_condition:\r\n            q2 = django_rq.get_queue('default')\r\n\t\t\tjob2 = q2.enqueue(background_task_2.main, data)\r\n\tif some_other_condition:\r\n            q3 = django_rq.get_queue('default')\r\n\t\t\tjob3 = q3.enqueue(background_task_3.main, data)\r\n\t...\r\n```\r\n\r\nAt runtime, I'm facing two issues: \r\n> - Jobs are getting overridden with other jobs data. \r\n> - Another case is of jobs getting lost.\r\n\r\nCASE:1 takes place when there is a job already in execution, for instance `background_task_1`, and two or more jobs are placed in the queue, lets say `background_task_2` and `background_task_3`. When `background_task_1` is completed, I observe that `background_task_3` is triggered twice! At times, it is `background_task_2`, that is triggered twice.\r\n\r\nCASE:2 If any job is taking much longer time, which in my case can go upto 5 mins, the jobs are lost. \r\n\r\n \r\nI would appreciate, if you could throw light on any case, point out my silly errors or a rookie mistake!\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/352", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/352/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/352/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/352/events", "html_url": "https://github.com/rq/django-rq/issues/352", "id": 458578932, "node_id": "MDU6SXNzdWU0NTg1Nzg5MzI=", "number": 352, "title": "ImportError: cannot import name FailedQueue", "user": {"login": "gkpo", "id": 951412, "node_id": "MDQ6VXNlcjk1MTQxMg==", "avatar_url": "https://avatars2.githubusercontent.com/u/951412?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkpo", "html_url": "https://github.com/gkpo", "followers_url": "https://api.github.com/users/gkpo/followers", "following_url": "https://api.github.com/users/gkpo/following{/other_user}", "gists_url": "https://api.github.com/users/gkpo/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkpo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkpo/subscriptions", "organizations_url": "https://api.github.com/users/gkpo/orgs", "repos_url": "https://api.github.com/users/gkpo/repos", "events_url": "https://api.github.com/users/gkpo/events{/privacy}", "received_events_url": "https://api.github.com/users/gkpo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-20T10:38:55Z", "updated_at": "2019-06-24T23:14:39Z", "closed_at": "2019-06-24T23:14:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "It seems that rq - FailQueue has been deprecated and replaced with FailJobRegistry:\r\nhttps://github.com/rq/rq/releases/tag/v1.0\r\n\r\nSo i'm getting this error when trying to run my server.\r\n\r\n> File \"/myproject/virtualenv/lib/python2.7/site-packages/django_rq/queues.py\", line 5, in <module>\r\n>     from rq.queue import FailedQueue, Queue\r\n\r\nThe documentation should mention which version of \"rq\", django-rq is compatible with.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/344", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/344/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/344/events", "html_url": "https://github.com/rq/django-rq/issues/344", "id": 453094387, "node_id": "MDU6SXNzdWU0NTMwOTQzODc=", "number": 344, "title": "Can't find media files", "user": {"login": "jvlomax", "id": 1144696, "node_id": "MDQ6VXNlcjExNDQ2OTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/1144696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvlomax", "html_url": "https://github.com/jvlomax", "followers_url": "https://api.github.com/users/jvlomax/followers", "following_url": "https://api.github.com/users/jvlomax/following{/other_user}", "gists_url": "https://api.github.com/users/jvlomax/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvlomax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvlomax/subscriptions", "organizations_url": "https://api.github.com/users/jvlomax/orgs", "repos_url": "https://api.github.com/users/jvlomax/repos", "events_url": "https://api.github.com/users/jvlomax/events{/privacy}", "received_events_url": "https://api.github.com/users/jvlomax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-06T15:23:25Z", "updated_at": "2019-06-15T00:38:29Z", "closed_at": "2019-06-15T00:38:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "We just moved from using python-rq to django-rq. Since the update, our workers are no longer able to find media files. django on it's own is able to find the files just fine, but any worker that is looking for a file in our /media folder throws an exception.\r\n\r\nfwiw, our media folder is outside of the django project folder.\r\n\r\nIs there any additional config, or anything that could potentially cause this issue?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/343", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/343/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/343/events", "html_url": "https://github.com/rq/django-rq/issues/343", "id": 448266570, "node_id": "MDU6SXNzdWU0NDgyNjY1NzA=", "number": 343, "title": "Jobs on other hosts?", "user": {"login": "jordi-petit", "id": 2351822, "node_id": "MDQ6VXNlcjIzNTE4MjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2351822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jordi-petit", "html_url": "https://github.com/jordi-petit", "followers_url": "https://api.github.com/users/jordi-petit/followers", "following_url": "https://api.github.com/users/jordi-petit/following{/other_user}", "gists_url": "https://api.github.com/users/jordi-petit/gists{/gist_id}", "starred_url": "https://api.github.com/users/jordi-petit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jordi-petit/subscriptions", "organizations_url": "https://api.github.com/users/jordi-petit/orgs", "repos_url": "https://api.github.com/users/jordi-petit/repos", "events_url": "https://api.github.com/users/jordi-petit/events{/privacy}", "received_events_url": "https://api.github.com/users/jordi-petit/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-24T16:59:24Z", "updated_at": "2019-06-13T01:25:26Z", "closed_at": "2019-06-13T01:25:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! Could you please clarify whether django-rq is able to run jobs on differents hosts different from the one that is executing the web server? How? Thank you. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/342", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/342/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/342/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/342/events", "html_url": "https://github.com/rq/django-rq/issues/342", "id": 445712496, "node_id": "MDU6SXNzdWU0NDU3MTI0OTY=", "number": 342, "title": "django-rq 2.0 requeue-all failed jobs doesn't work", "user": {"login": "dpaluch-rp", "id": 17312107, "node_id": "MDQ6VXNlcjE3MzEyMTA3", "avatar_url": "https://avatars1.githubusercontent.com/u/17312107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpaluch-rp", "html_url": "https://github.com/dpaluch-rp", "followers_url": "https://api.github.com/users/dpaluch-rp/followers", "following_url": "https://api.github.com/users/dpaluch-rp/following{/other_user}", "gists_url": "https://api.github.com/users/dpaluch-rp/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpaluch-rp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpaluch-rp/subscriptions", "organizations_url": "https://api.github.com/users/dpaluch-rp/orgs", "repos_url": "https://api.github.com/users/dpaluch-rp/repos", "events_url": "https://api.github.com/users/dpaluch-rp/events{/privacy}", "received_events_url": "https://api.github.com/users/dpaluch-rp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-18T12:44:40Z", "updated_at": "2019-06-14T08:01:50Z", "closed_at": "2019-06-14T08:01:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/341", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/341/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/341/events", "html_url": "https://github.com/rq/django-rq/issues/341", "id": 439188253, "node_id": "MDU6SXNzdWU0MzkxODgyNTM=", "number": 341, "title": "is there a way for different sentry integration?", "user": {"login": "vlinhart", "id": 874223, "node_id": "MDQ6VXNlcjg3NDIyMw==", "avatar_url": "https://avatars2.githubusercontent.com/u/874223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlinhart", "html_url": "https://github.com/vlinhart", "followers_url": "https://api.github.com/users/vlinhart/followers", "following_url": "https://api.github.com/users/vlinhart/following{/other_user}", "gists_url": "https://api.github.com/users/vlinhart/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlinhart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlinhart/subscriptions", "organizations_url": "https://api.github.com/users/vlinhart/orgs", "repos_url": "https://api.github.com/users/vlinhart/repos", "events_url": "https://api.github.com/users/vlinhart/events{/privacy}", "received_events_url": "https://api.github.com/users/vlinhart/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-01T14:42:13Z", "updated_at": "2019-05-01T14:59:23Z", "closed_at": "2019-05-01T14:59:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to do this, enabling the logging integration as well:\r\n```python\r\n    import sentry_sdk\r\n    from sentry_sdk.integrations.rq import RqIntegration\r\n    from sentry_sdk.integrations.logging import LoggingIntegration\r\n    sentry_sdk.init(\r\n        sentry_dsn,\r\n        integrations=[RqIntegration(), LoggingIntegration(event_level=logging.WARNING)]\r\n    )\r\n```\r\n\r\nBut there seems to be no way of doing it in rqworker management command. There is a way for `rq worker` though. \r\n//cc @untitaker", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/339", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/339/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/339/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/339/events", "html_url": "https://github.com/rq/django-rq/issues/339", "id": 438478312, "node_id": "MDU6SXNzdWU0Mzg0NzgzMTI=", "number": 339, "title": "django-rq should declare sentry-sdk as a dependency", "user": {"login": "sconstable", "id": 4720868, "node_id": "MDQ6VXNlcjQ3MjA4Njg=", "avatar_url": "https://avatars1.githubusercontent.com/u/4720868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sconstable", "html_url": "https://github.com/sconstable", "followers_url": "https://api.github.com/users/sconstable/followers", "following_url": "https://api.github.com/users/sconstable/following{/other_user}", "gists_url": "https://api.github.com/users/sconstable/gists{/gist_id}", "starred_url": "https://api.github.com/users/sconstable/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sconstable/subscriptions", "organizations_url": "https://api.github.com/users/sconstable/orgs", "repos_url": "https://api.github.com/users/sconstable/repos", "events_url": "https://api.github.com/users/sconstable/events{/privacy}", "received_events_url": "https://api.github.com/users/sconstable/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-04-29T19:48:55Z", "updated_at": "2019-05-06T23:34:01Z", "closed_at": "2019-05-05T10:46:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "We recently updated our `requirements.txt` file and pulled in the new version of django-rq.  We recently encountered an issue where in development and CI everything worked fine but when deployed to staging everything broke.  It turns out that since our staging server uses Sentry, the `sentry_dsn` flag gets set to True and django-rq fails to import sentry-sdk, prints an error message instructing the user to install sentry-sdk, and exits.  This is definitely not expected behaviour, and could be easily fixed by declaring sentry-sdk as a dependency in `setup.py` so that other people don't get surprised by this.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/338", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/338/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/338/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/338/events", "html_url": "https://github.com/rq/django-rq/issues/338", "id": 437307396, "node_id": "MDU6SXNzdWU0MzczMDczOTY=", "number": 338, "title": "Deleting a rq-scheduler instance does not actually delete it ", "user": {"login": "geonyoro", "id": 10379310, "node_id": "MDQ6VXNlcjEwMzc5MzEw", "avatar_url": "https://avatars2.githubusercontent.com/u/10379310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geonyoro", "html_url": "https://github.com/geonyoro", "followers_url": "https://api.github.com/users/geonyoro/followers", "following_url": "https://api.github.com/users/geonyoro/following{/other_user}", "gists_url": "https://api.github.com/users/geonyoro/gists{/gist_id}", "starred_url": "https://api.github.com/users/geonyoro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geonyoro/subscriptions", "organizations_url": "https://api.github.com/users/geonyoro/orgs", "repos_url": "https://api.github.com/users/geonyoro/repos", "events_url": "https://api.github.com/users/geonyoro/events{/privacy}", "received_events_url": "https://api.github.com/users/geonyoro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-25T17:10:25Z", "updated_at": "2019-06-15T00:36:41Z", "closed_at": "2019-06-15T00:36:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/335", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/335/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/335/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/335/events", "html_url": "https://github.com/rq/django-rq/issues/335", "id": 434566340, "node_id": "MDU6SXNzdWU0MzQ1NjYzNDA=", "number": 335, "title": "django-rq 2 on pypi but does not match repo", "user": {"login": "terencehonles", "id": 438813, "node_id": "MDQ6VXNlcjQzODgxMw==", "avatar_url": "https://avatars3.githubusercontent.com/u/438813?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terencehonles", "html_url": "https://github.com/terencehonles", "followers_url": "https://api.github.com/users/terencehonles/followers", "following_url": "https://api.github.com/users/terencehonles/following{/other_user}", "gists_url": "https://api.github.com/users/terencehonles/gists{/gist_id}", "starred_url": "https://api.github.com/users/terencehonles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terencehonles/subscriptions", "organizations_url": "https://api.github.com/users/terencehonles/orgs", "repos_url": "https://api.github.com/users/terencehonles/repos", "events_url": "https://api.github.com/users/terencehonles/events{/privacy}", "received_events_url": "https://api.github.com/users/terencehonles/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-18T02:48:41Z", "updated_at": "2019-05-08T18:17:03Z", "closed_at": "2019-05-05T10:50:28Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm seeing a v2 on PyPi https://pypi.org/project/django-rq/2.0/ but I'm not finding a changelog here.\r\n\r\nThanks in advance!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/331", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/331/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/331/events", "html_url": "https://github.com/rq/django-rq/issues/331", "id": 425151609, "node_id": "MDU6SXNzdWU0MjUxNTE2MDk=", "number": 331, "title": "confusion about manage.py -- is it needed?", "user": {"login": "williamh", "id": 64355, "node_id": "MDQ6VXNlcjY0MzU1", "avatar_url": "https://avatars0.githubusercontent.com/u/64355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/williamh", "html_url": "https://github.com/williamh", "followers_url": "https://api.github.com/users/williamh/followers", "following_url": "https://api.github.com/users/williamh/following{/other_user}", "gists_url": "https://api.github.com/users/williamh/gists{/gist_id}", "starred_url": "https://api.github.com/users/williamh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/williamh/subscriptions", "organizations_url": "https://api.github.com/users/williamh/orgs", "repos_url": "https://api.github.com/users/williamh/repos", "events_url": "https://api.github.com/users/williamh/events{/privacy}", "received_events_url": "https://api.github.com/users/williamh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-25T22:56:12Z", "updated_at": "2019-03-30T23:23:27Z", "closed_at": "2019-03-30T02:36:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have looked over the documentation for this package (I'm getting ready to package it for Gentoo) and do not understand the function of manage.py.\r\nIt looks to be part of the test suite based on its location (integration_tests/manage.py) and it doesn't appear to be part of what would be installed by pip (it isn't mentioned in setup.py). However, the README seems to imply that it is needed.\r\nCan you please clarify the status of manage.py, and if it should be installed, please give it a name that isn't so generic?\r\n\r\nThanks much for your time.\r\n\r\nWilliam", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/330", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/330/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/330/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/330/events", "html_url": "https://github.com/rq/django-rq/issues/330", "id": 424099857, "node_id": "MDU6SXNzdWU0MjQwOTk4NTc=", "number": 330, "title": "django-rq is not compatible with django-redis", "user": {"login": "Iliyass", "id": 4491807, "node_id": "MDQ6VXNlcjQ0OTE4MDc=", "avatar_url": "https://avatars1.githubusercontent.com/u/4491807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Iliyass", "html_url": "https://github.com/Iliyass", "followers_url": "https://api.github.com/users/Iliyass/followers", "following_url": "https://api.github.com/users/Iliyass/following{/other_user}", "gists_url": "https://api.github.com/users/Iliyass/gists{/gist_id}", "starred_url": "https://api.github.com/users/Iliyass/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Iliyass/subscriptions", "organizations_url": "https://api.github.com/users/Iliyass/orgs", "repos_url": "https://api.github.com/users/Iliyass/repos", "events_url": "https://api.github.com/users/Iliyass/events{/privacy}", "received_events_url": "https://api.github.com/users/Iliyass/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-22T08:42:00Z", "updated_at": "2019-03-30T02:25:35Z", "closed_at": "2019-03-30T02:25:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\n\r\nWell, I think django-rq is not compatible with django-redis, because each module requires different version of redis-py\r\n\r\ndjango-redis (requires redis <3) [Issue Link](https://github.com/niwinz/django-redis/issues/342)\r\ndjango-rq (requires redis>=3)\r\n\r\nHow you think I can solve this issue ? using both modules \r\n\r\nthanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/328", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/328/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/328/events", "html_url": "https://github.com/rq/django-rq/issues/328", "id": 423882424, "node_id": "MDU6SXNzdWU0MjM4ODI0MjQ=", "number": 328, "title": "Add page title to admin pages", "user": {"login": "rvernica", "id": 241185, "node_id": "MDQ6VXNlcjI0MTE4NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/241185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rvernica", "html_url": "https://github.com/rvernica", "followers_url": "https://api.github.com/users/rvernica/followers", "following_url": "https://api.github.com/users/rvernica/following{/other_user}", "gists_url": "https://api.github.com/users/rvernica/gists{/gist_id}", "starred_url": "https://api.github.com/users/rvernica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rvernica/subscriptions", "organizations_url": "https://api.github.com/users/rvernica/orgs", "repos_url": "https://api.github.com/users/rvernica/repos", "events_url": "https://api.github.com/users/rvernica/events{/privacy}", "received_events_url": "https://api.github.com/users/rvernica/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-21T18:34:59Z", "updated_at": "2019-04-06T09:45:31Z", "closed_at": "2019-04-06T09:45:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "When browsing the queues, workers, or jobs in the Django admin interface, the pages don't have specific titles. The title shown in the browser for any of these pages is _| Django site admin_.\r\n\r\nFor comparison, the title shown when browsing the Django Users is _Select user to change | Django site admin_. When viewing a specific user the title is _Change user | Django site admin_.\r\n\r\nIt would be nice to have specific titles for the queues, workers, and jobs in Django admin.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/327", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/327/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/327/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/327/events", "html_url": "https://github.com/rq/django-rq/issues/327", "id": 421760870, "node_id": "MDU6SXNzdWU0MjE3NjA4NzA=", "number": 327, "title": "Enqueue button should not show up on failed job admin interface", "user": {"login": "SeiryuZ", "id": 1240672, "node_id": "MDQ6VXNlcjEyNDA2NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1240672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeiryuZ", "html_url": "https://github.com/SeiryuZ", "followers_url": "https://api.github.com/users/SeiryuZ/followers", "following_url": "https://api.github.com/users/SeiryuZ/following{/other_user}", "gists_url": "https://api.github.com/users/SeiryuZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeiryuZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeiryuZ/subscriptions", "organizations_url": "https://api.github.com/users/SeiryuZ/orgs", "repos_url": "https://api.github.com/users/SeiryuZ/repos", "events_url": "https://api.github.com/users/SeiryuZ/events{/privacy}", "received_events_url": "https://api.github.com/users/SeiryuZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-16T02:40:56Z", "updated_at": "2019-06-13T01:37:00Z", "closed_at": "2019-06-13T01:37:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/325", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/325/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/325/events", "html_url": "https://github.com/rq/django-rq/issues/325", "id": 419703718, "node_id": "MDU6SXNzdWU0MTk3MDM3MTg=", "number": 325, "title": "shared Instance of class", "user": {"login": "pinkynrg", "id": 1474127, "node_id": "MDQ6VXNlcjE0NzQxMjc=", "avatar_url": "https://avatars1.githubusercontent.com/u/1474127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pinkynrg", "html_url": "https://github.com/pinkynrg", "followers_url": "https://api.github.com/users/pinkynrg/followers", "following_url": "https://api.github.com/users/pinkynrg/following{/other_user}", "gists_url": "https://api.github.com/users/pinkynrg/gists{/gist_id}", "starred_url": "https://api.github.com/users/pinkynrg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pinkynrg/subscriptions", "organizations_url": "https://api.github.com/users/pinkynrg/orgs", "repos_url": "https://api.github.com/users/pinkynrg/repos", "events_url": "https://api.github.com/users/pinkynrg/events{/privacy}", "received_events_url": "https://api.github.com/users/pinkynrg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-11T21:58:44Z", "updated_at": "2019-03-30T02:34:10Z", "closed_at": "2019-03-30T02:33:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have 2 jobs A, B that needs to be executed by the same worker:\r\n\r\nA. This Job needs to refresh the instance of a Driver class if some configuration data has changed by the user. Executes every 5 seconds.\r\nB. This Job reads data from a hardware controller using the Driver class instance.\r\n\r\nWhat is the best approach to share an instance of class across jobs?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/323", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/323/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/323/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/323/events", "html_url": "https://github.com/rq/django-rq/issues/323", "id": 415888063, "node_id": "MDU6SXNzdWU0MTU4ODgwNjM=", "number": 323, "title": "Gunicorn spawning Django-RQ workers", "user": {"login": "jlimas", "id": 368854, "node_id": "MDQ6VXNlcjM2ODg1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/368854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlimas", "html_url": "https://github.com/jlimas", "followers_url": "https://api.github.com/users/jlimas/followers", "following_url": "https://api.github.com/users/jlimas/following{/other_user}", "gists_url": "https://api.github.com/users/jlimas/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlimas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlimas/subscriptions", "organizations_url": "https://api.github.com/users/jlimas/orgs", "repos_url": "https://api.github.com/users/jlimas/repos", "events_url": "https://api.github.com/users/jlimas/events{/privacy}", "received_events_url": "https://api.github.com/users/jlimas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-01T00:38:34Z", "updated_at": "2019-03-15T12:25:38Z", "closed_at": "2019-03-15T12:25:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Not sure if this is the right place to ask about this but suddenly I noticed I had 2 workers in the /jobs/workers/0/ web interface, 1 is idle and ready to pick jobs but there is another one that is busy like if it's stuck. I already tried restarting Gunicorn and the Django RQ worker. \r\n\r\nIf I stop the Django RQ worker (running on supervisord) the worker count lowers to 1,  but there is still this other worker in the busy status. It seems to be tied to the Gunicorn process (even on the same PID).\r\n\r\nIs there any way to know why or how the Gunicorn / Django process is starting a worker?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/322", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/322/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/322/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/322/events", "html_url": "https://github.com/rq/django-rq/issues/322", "id": 410145350, "node_id": "MDU6SXNzdWU0MTAxNDUzNTA=", "number": 322, "title": "Django admin workers count different", "user": {"login": "Yiling-J", "id": 20703055, "node_id": "MDQ6VXNlcjIwNzAzMDU1", "avatar_url": "https://avatars2.githubusercontent.com/u/20703055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yiling-J", "html_url": "https://github.com/Yiling-J", "followers_url": "https://api.github.com/users/Yiling-J/followers", "following_url": "https://api.github.com/users/Yiling-J/following{/other_user}", "gists_url": "https://api.github.com/users/Yiling-J/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yiling-J/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yiling-J/subscriptions", "organizations_url": "https://api.github.com/users/Yiling-J/orgs", "repos_url": "https://api.github.com/users/Yiling-J/repos", "events_url": "https://api.github.com/users/Yiling-J/events{/privacy}", "received_events_url": "https://api.github.com/users/Yiling-J/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-14T06:16:44Z", "updated_at": "2019-06-06T16:03:03Z", "closed_at": "2019-04-08T03:53:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Example: on stats page, count is 6, but on workers page, there is only one worker\r\n\r\n<img width=\"1197\" alt=\"screen shot 2019-02-14 at 12 27 19 pm\" src=\"https://user-images.githubusercontent.com/20703055/52762812-10473900-3054-11e9-80a8-2b0426727633.png\">\r\n<img width=\"1212\" alt=\"screen shot 2019-02-14 at 12 27 50 pm\" src=\"https://user-images.githubusercontent.com/20703055/52762817-14735680-3054-11e9-89e0-f9c710ca7a52.png\">\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/319", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/319/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/319/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/319/events", "html_url": "https://github.com/rq/django-rq/issues/319", "id": 401643246, "node_id": "MDU6SXNzdWU0MDE2NDMyNDY=", "number": 319, "title": "Support Sentry with sentry-sdk", "user": {"login": "Bolayniuss", "id": 1089654, "node_id": "MDQ6VXNlcjEwODk2NTQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/1089654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bolayniuss", "html_url": "https://github.com/Bolayniuss", "followers_url": "https://api.github.com/users/Bolayniuss/followers", "following_url": "https://api.github.com/users/Bolayniuss/following{/other_user}", "gists_url": "https://api.github.com/users/Bolayniuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bolayniuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bolayniuss/subscriptions", "organizations_url": "https://api.github.com/users/Bolayniuss/orgs", "repos_url": "https://api.github.com/users/Bolayniuss/repos", "events_url": "https://api.github.com/users/Bolayniuss/events{/privacy}", "received_events_url": "https://api.github.com/users/Bolayniuss/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-22T08:10:09Z", "updated_at": "2019-04-06T09:46:46Z", "closed_at": "2019-04-06T09:46:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Since April 2018 Sentry has release it's own package (`sentry-sdk`) to report issues. Using raven is now deprecated. With this package they have dropped the password part of the DSN. Therefore `django-rq` is not compatible with project using `sentry-sdk` as raven internally requires that the DSN is composed of a username *AND*  a password.\r\n\r\n`sentry-sdk` has a built-in integration of RQ. According to the doc (https://docs.sentry.io/platforms/python/rq/)  we should just by-pass the registration of sentry in RQ by setting `--sentry_dsn` to an empty string.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/318", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/318/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/318/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/318/events", "html_url": "https://github.com/rq/django-rq/issues/318", "id": 401124785, "node_id": "MDU6SXNzdWU0MDExMjQ3ODU=", "number": 318, "title": "haystack update_index as periodic job", "user": {"login": "lucas03", "id": 2773622, "node_id": "MDQ6VXNlcjI3NzM2MjI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2773622?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucas03", "html_url": "https://github.com/lucas03", "followers_url": "https://api.github.com/users/lucas03/followers", "following_url": "https://api.github.com/users/lucas03/following{/other_user}", "gists_url": "https://api.github.com/users/lucas03/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucas03/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucas03/subscriptions", "organizations_url": "https://api.github.com/users/lucas03/orgs", "repos_url": "https://api.github.com/users/lucas03/repos", "events_url": "https://api.github.com/users/lucas03/events{/privacy}", "received_events_url": "https://api.github.com/users/lucas03/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-20T18:21:35Z", "updated_at": "2019-04-06T09:47:22Z", "closed_at": "2019-04-06T09:47:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to update search index daily, I think I tested it in the past on localhost and it worked, but not sure. \r\n\r\nBasically, this is in my cron job I schedule:\r\n```\r\n    dict(\r\n        cron_string=\"30 3 * * *\",\r\n        func=management.call_command,\r\n        args=[\"update_index --workers=4 --remove\"],\r\n        kwargs={},\r\n        repeat=None,\r\n        queue_name=\"default\",\r\n        timeout=1000,\r\n    ),\r\n```\r\nbut this call ends with error in django_rq admin page:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/management/__init__.py\", line 102, in call_command\r\n    app_name = get_commands()[command_name]\r\nKeyError: 'update_index --workers=4 --remove'\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.6/site-packages/rq/worker.py\", line 793, in perform_job\r\n    rv = job.perform()\r\n  File \"/usr/local/lib/python3.6/site-packages/rq/job.py\", line 599, in perform\r\n    self._result = self._execute()\r\n  File \"/usr/local/lib/python3.6/site-packages/rq/job.py\", line 605, in _execute\r\n    return self.func(*self.args, **self.kwargs)\r\n  File \"/usr/local/lib/python3.6/site-packages/django/core/management/__init__.py\", line 104, in call_command\r\n    raise CommandError(\"Unknown command: %r\" % command_name)\r\ndjango.core.management.base.CommandError: Unknown command: 'update_index --workers=4 --remove'\r\n```\r\n\r\nAnybody has an idea what I might be doing wrong? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/315", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/315/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/315/events", "html_url": "https://github.com/rq/django-rq/issues/315", "id": 398862761, "node_id": "MDU6SXNzdWUzOTg4NjI3NjE=", "number": 315, "title": "{% load admin_static %} DeprecationWarning", "user": {"login": "lorenzomorandini", "id": 10210433, "node_id": "MDQ6VXNlcjEwMjEwNDMz", "avatar_url": "https://avatars0.githubusercontent.com/u/10210433?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lorenzomorandini", "html_url": "https://github.com/lorenzomorandini", "followers_url": "https://api.github.com/users/lorenzomorandini/followers", "following_url": "https://api.github.com/users/lorenzomorandini/following{/other_user}", "gists_url": "https://api.github.com/users/lorenzomorandini/gists{/gist_id}", "starred_url": "https://api.github.com/users/lorenzomorandini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lorenzomorandini/subscriptions", "organizations_url": "https://api.github.com/users/lorenzomorandini/orgs", "repos_url": "https://api.github.com/users/lorenzomorandini/repos", "events_url": "https://api.github.com/users/lorenzomorandini/events{/privacy}", "received_events_url": "https://api.github.com/users/lorenzomorandini/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-01-14T12:15:02Z", "updated_at": "2019-01-29T23:52:50Z", "closed_at": "2019-01-29T23:52:50Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "All the templates from django_rq use {% load admin_static %} which will be removed in djaango 3.0 in favor of {% load static %}\r\n\r\nhttps://docs.djangoproject.com/en/dev/releases/2.1/#deprecated-features-2-1\r\n\r\nCan we change it?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/314", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/314/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/314/events", "html_url": "https://github.com/rq/django-rq/issues/314", "id": 394693640, "node_id": "MDU6SXNzdWUzOTQ2OTM2NDA=", "number": 314, "title": "django-rq 1.1.0 fails on job received with rq 0.12.0", "user": {"login": "streamnsight", "id": 10981776, "node_id": "MDQ6VXNlcjEwOTgxNzc2", "avatar_url": "https://avatars1.githubusercontent.com/u/10981776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/streamnsight", "html_url": "https://github.com/streamnsight", "followers_url": "https://api.github.com/users/streamnsight/followers", "following_url": "https://api.github.com/users/streamnsight/following{/other_user}", "gists_url": "https://api.github.com/users/streamnsight/gists{/gist_id}", "starred_url": "https://api.github.com/users/streamnsight/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/streamnsight/subscriptions", "organizations_url": "https://api.github.com/users/streamnsight/orgs", "repos_url": "https://api.github.com/users/streamnsight/repos", "events_url": "https://api.github.com/users/streamnsight/events{/privacy}", "received_events_url": "https://api.github.com/users/streamnsight/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-28T18:24:57Z", "updated_at": "2019-03-18T11:20:01Z", "closed_at": "2019-03-18T11:20:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "Just putting it out here for others in case they encounter the issue.\r\n\r\nI am running django-rq 1.1.0 and it has a loose dependency on rq.\r\n\r\non our staging env, django-rq 1.1.0 pulled rq 0.12.0 recently and workers failed to start when sent a job, with errors like\r\n\r\n`redis.exceptions.RedisError: ZADD requires an equal number of values and scores `\r\n\r\nas well as \r\n\r\n`AttributeError: 'int' object has no attribute 'iteritems'` in the ZADD function when looking at it in debug mode.\r\n\r\nUpgrading rq to 0.13.0 fixed the problem", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/310", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/310/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/310/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/310/events", "html_url": "https://github.com/rq/django-rq/issues/310", "id": 386619906, "node_id": "MDU6SXNzdWUzODY2MTk5MDY=", "number": 310, "title": "Support Redis 3", "user": {"login": "selwin", "id": 188658, "node_id": "MDQ6VXNlcjE4ODY1OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/188658?v=4", "gravatar_id": "", "url": "https://api.github.com/users/selwin", "html_url": "https://github.com/selwin", "followers_url": "https://api.github.com/users/selwin/followers", "following_url": "https://api.github.com/users/selwin/following{/other_user}", "gists_url": "https://api.github.com/users/selwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/selwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/selwin/subscriptions", "organizations_url": "https://api.github.com/users/selwin/orgs", "repos_url": "https://api.github.com/users/selwin/repos", "events_url": "https://api.github.com/users/selwin/events{/privacy}", "received_events_url": "https://api.github.com/users/selwin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-03T00:32:56Z", "updated_at": "2018-12-20T00:21:49Z", "closed_at": "2018-12-20T00:21:49Z", "author_association": "COLLABORATOR", "active_lock_reason": null, "body": "RQ already supports Redis 3 here: https://github.com/rq/rq/pull/1016", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/309", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/309/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/309/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/309/events", "html_url": "https://github.com/rq/django-rq/issues/309", "id": 385388165, "node_id": "MDU6SXNzdWUzODUzODgxNjU=", "number": 309, "title": "Work-horse process was terminated unexpectedly (waitpid returned 256)", "user": {"login": "amarksteadman", "id": 3310393, "node_id": "MDQ6VXNlcjMzMTAzOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3310393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amarksteadman", "html_url": "https://github.com/amarksteadman", "followers_url": "https://api.github.com/users/amarksteadman/followers", "following_url": "https://api.github.com/users/amarksteadman/following{/other_user}", "gists_url": "https://api.github.com/users/amarksteadman/gists{/gist_id}", "starred_url": "https://api.github.com/users/amarksteadman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amarksteadman/subscriptions", "organizations_url": "https://api.github.com/users/amarksteadman/orgs", "repos_url": "https://api.github.com/users/amarksteadman/repos", "events_url": "https://api.github.com/users/amarksteadman/events{/privacy}", "received_events_url": "https://api.github.com/users/amarksteadman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-28T17:53:27Z", "updated_at": "2018-12-04T14:41:56Z", "closed_at": "2018-11-29T10:27:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all.\r\n\r\nReceiving the above error on around 60-80% of tasks running in a Kubernetes cluster. I don't get a full stack trace; the `exc_info` of the job is just the following:\r\n\r\n```\r\nWork-horse process was terminated unexpectedly (waitpid returned 256)\r\n```\r\n\r\nSome (hopefully) helpful info:\r\n\r\nPython version: 3.6.3\r\nredis: 2.10.6\r\nrq: 0.12\r\ndjango-rq: 1.2.0\r\n\r\nThe tasks the workers are doing are irrelevant (in that disparate, unrelated tasks throw up the same error, so there isn't a commonality).\r\n\r\nI know there's been talk of a similar error to do with Redis v>3, but that doesn't apply here. I've checked to make sure the Docker image is being built with the correct requirements.\r\n\r\nMemory isn't the issue as the container's using <80mb and I've played around with resource allocations in K8s. Locally of course it all runs fine :)\r\n\r\nI doubt it's K8s-specific and I don't _think_ it's Docker-related, but would appreciate someone getting back and maybe asking for more info to see if I can help narrow down the issue. I've been using django-rq in production for about 4 years and I'm fairly sure this is a new one for me.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/305", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/305/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/305/events", "html_url": "https://github.com/rq/django-rq/issues/305", "id": 377041421, "node_id": "MDU6SXNzdWUzNzcwNDE0MjE=", "number": 305, "title": "django-rq not working for jobs that use multiprocess.Pool", "user": {"login": "nguyenhuyanhh", "id": 1654817, "node_id": "MDQ6VXNlcjE2NTQ4MTc=", "avatar_url": "https://avatars3.githubusercontent.com/u/1654817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nguyenhuyanhh", "html_url": "https://github.com/nguyenhuyanhh", "followers_url": "https://api.github.com/users/nguyenhuyanhh/followers", "following_url": "https://api.github.com/users/nguyenhuyanhh/following{/other_user}", "gists_url": "https://api.github.com/users/nguyenhuyanhh/gists{/gist_id}", "starred_url": "https://api.github.com/users/nguyenhuyanhh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nguyenhuyanhh/subscriptions", "organizations_url": "https://api.github.com/users/nguyenhuyanhh/orgs", "repos_url": "https://api.github.com/users/nguyenhuyanhh/repos", "events_url": "https://api.github.com/users/nguyenhuyanhh/events{/privacy}", "received_events_url": "https://api.github.com/users/nguyenhuyanhh/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-03T10:10:49Z", "updated_at": "2018-12-20T00:24:27Z", "closed_at": "2018-12-20T00:24:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a job that is internally using `multiprocess.Pool` and it's not running in django-rq. When not run under django-rq the job run successfully. I also try another job which does not use `Pool` and it also runs, so there should not be any problem with django-rq.\r\n\r\nIs my assumption correct? Attaching the job and the logs for your reference:\r\n\r\n```\r\n@job('vista')\r\ndef run_operation(operation_id):\r\n    obj = Operation.objects.get(id=operation_id)\r\n    result = obj._sync_run()\r\n    obj.result = json.dumps(result)\r\n    obj.save()\r\n```\r\n\r\n```\r\n[03/Nov/2018 18:02:25] [INFO:worker(523):19741] vista: demo.apis.run_operation(24) (3e45f3fc-ecc6-42fd-9885-efa0b9fc560a)\r\n[03/Nov/2018 18:02:25] [DEBUG:worker(548):19741] Sent heartbeat to prevent worker timeout. Next one should arrive within 420 seconds.\r\n[03/Nov/2018 18:02:25] [DEBUG:worker(548):20070] Sent heartbeat to prevent worker timeout. Next one should arrive within 35 seconds.\r\n[03/Nov/2018 18:02:35] [ERROR:worker(839):20070] rq.timeouts.JobTimeoutException: Task exceeded maximum timeout value (10 seconds)\r\nTraceback (most recent call last):\r\n  File \"/home/nhanh/graymatics/gmtc-vista/.venv/lib/python3.6/site-packages/rq/worker.py\", line 793, in perform_job\r\n    rv = job.perform()\r\n  File \"/home/nhanh/graymatics/gmtc-vista/.venv/lib/python3.6/site-packages/rq/job.py\", line 599, in perform\r\n    self._result = self._execute()\r\n  File \"/home/nhanh/graymatics/gmtc-vista/.venv/lib/python3.6/site-packages/rq/job.py\", line 605, in _execute\r\n    return self.func(*self.args, **self.kwargs)\r\n  File \"/home/nhanh/graymatics/gmtc-vista/demo/apis.py\", line 143, in run_operation\r\n    result = obj._sync_run()\r\n  File \"/home/nhanh/graymatics/gmtc-vista/demo/models.py\", line 568, in _sync_run\r\n    return self.upload.run(self._subscriptions_list, self.user.is_staff)\r\n  File \"/home/nhanh/graymatics/gmtc-vista/demo/models.py\", line 475, in run\r\n    result_list = self.pool.map(_run_single, subscription_list)\r\n  File \"/usr/lib/python3.6/multiprocessing/pool.py\", line 266, in map\r\n    return self._map_async(func, iterable, mapstar, chunksize).get()\r\n  File \"/usr/lib/python3.6/multiprocessing/pool.py\", line 638, in get\r\n    self.wait(timeout)\r\n  File \"/usr/lib/python3.6/multiprocessing/pool.py\", line 635, in wait\r\n    self._event.wait(timeout)\r\n  File \"/usr/lib/python3.6/threading.py\", line 551, in wait\r\n    signaled = self._cond.wait(timeout)\r\n  File \"/usr/lib/python3.6/threading.py\", line 295, in wait\r\n    waiter.acquire()\r\n  File \"/home/nhanh/graymatics/gmtc-vista/.venv/lib/python3.6/site-packages/rq/timeouts.py\", line 64, in handle_death_penalty\r\n    '({0} seconds)'.format(self._timeout))\r\nrq.timeouts.JobTimeoutException: Task exceeded maximum timeout value (10 seconds)\r\nTraceback (most recent call last):\r\n  File \"/home/nhanh/graymatics/gmtc-vista/.venv/lib/python3.6/site-packages/rq/worker.py\", line 793, in perform_job\r\n    rv = job.perform()\r\n  File \"/home/nhanh/graymatics/gmtc-vista/.venv/lib/python3.6/site-packages/rq/job.py\", line 599, in perform\r\n    self._result = self._execute()\r\n  File \"/home/nhanh/graymatics/gmtc-vista/.venv/lib/python3.6/site-packages/rq/job.py\", line 605, in _execute\r\n    return self.func(*self.args, **self.kwargs)\r\n  File \"/home/nhanh/graymatics/gmtc-vista/demo/apis.py\", line 143, in run_operation\r\n    result = obj._sync_run()\r\n  File \"/home/nhanh/graymatics/gmtc-vista/demo/models.py\", line 568, in _sync_run\r\n    return self.upload.run(self._subscriptions_list, self.user.is_staff)\r\n  File \"/home/nhanh/graymatics/gmtc-vista/demo/models.py\", line 475, in run\r\n    result_list = self.pool.map(_run_single, subscription_list)\r\n  File \"/usr/lib/python3.6/multiprocessing/pool.py\", line 266, in map\r\n    return self._map_async(func, iterable, mapstar, chunksize).get()\r\n  File \"/usr/lib/python3.6/multiprocessing/pool.py\", line 638, in get\r\n    self.wait(timeout)\r\n  File \"/usr/lib/python3.6/multiprocessing/pool.py\", line 635, in wait\r\n    self._event.wait(timeout)\r\n  File \"/usr/lib/python3.6/threading.py\", line 551, in wait\r\n    signaled = self._cond.wait(timeout)\r\n  File \"/usr/lib/python3.6/threading.py\", line 295, in wait\r\n    waiter.acquire()\r\n  File \"/home/nhanh/graymatics/gmtc-vista/.venv/lib/python3.6/site-packages/rq/timeouts.py\", line 64, in handle_death_penalty\r\n    '({0} seconds)'.format(self._timeout))\r\nrq.timeouts.JobTimeoutException: Task exceeded maximum timeout value (10 seconds)\r\n[03/Nov/2018 18:02:35] [DEBUG:worker(843):20070] Invoking exception handler <bound method Worker.move_to_failed_queue of <rq.worker.Worker object at 0x7fed54604710>>\r\n[03/Nov/2018 18:02:35] [WARNING:worker(856):20070] Moving job to 'failed' queue\r\n```\r\n\r\nThanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/302", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/302/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/302/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/302/events", "html_url": "https://github.com/rq/django-rq/issues/302", "id": 361630451, "node_id": "MDU6SXNzdWUzNjE2MzA0NTE=", "number": 302, "title": "When sentinel is used it does not respect socket_timeout", "user": {"login": "pnuckowski", "id": 6205090, "node_id": "MDQ6VXNlcjYyMDUwOTA=", "avatar_url": "https://avatars1.githubusercontent.com/u/6205090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnuckowski", "html_url": "https://github.com/pnuckowski", "followers_url": "https://api.github.com/users/pnuckowski/followers", "following_url": "https://api.github.com/users/pnuckowski/following{/other_user}", "gists_url": "https://api.github.com/users/pnuckowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnuckowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnuckowski/subscriptions", "organizations_url": "https://api.github.com/users/pnuckowski/orgs", "repos_url": "https://api.github.com/users/pnuckowski/repos", "events_url": "https://api.github.com/users/pnuckowski/events{/privacy}", "received_events_url": "https://api.github.com/users/pnuckowski/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-19T08:15:01Z", "updated_at": "2018-12-04T13:30:47Z", "closed_at": "2018-12-04T13:30:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nwe are using rq/django-rq together with redis sentinel.\r\nAnd we experience some error when one of sentinel instance went down.\r\n\r\n**Environment**\r\n4 instances with redis/sentinel (2 instance for each DC)\r\n\r\n**Bad behavior**\r\nWhen using django-rq with sentinel it does not respect (socket_timeout), so when one sentinel instance went down (planned maintenance, system upgrade or failure) django-rq hangsout until request timeout. \r\n\r\n**Detailed explanation**\r\nCurrently Sentinel is initialized like [that](https://github.com/rq/django-rq/blob/v1.2.0/django_rq/queues.py#L117-L121)\r\n```python\r\n        sentinel = Sentinel(config['SENTINELS'])\r\n        return sentinel.master_for(\r\n            service_name=config['MASTER_NAME'], redis_class=redis_cls, db=config.get('DB'),\r\n            password=config.get('PASSWORD'), socket_timeout=config.get('SOCKET_TIMEOUT')\r\n        )\r\n```\r\n\r\nWhen new connection is made redis-py calls [this method](https://github.com/andymccurdy/redis-py/blob/2.10.6/redis/connection.py#L978-L983)\r\n```python\r\n    def make_connection(self):\r\n        \"Create a new connection\"\r\n        if self._created_connections >= self.max_connections:\r\n            raise ConnectionError(\"Too many connections\")\r\n        self._created_connections += 1\r\n        return self.connection_class(**self.connection_kwargs)\r\n```\r\n\r\nThe most important line is \r\n`self.connection_class(**self.connection_kwargs)`\r\n\r\nSince Sentinel was initialized without any `kwargs` and inside `Sentinel.__init__` method it creates multiple instances of `StrictRedis` instances (without knowledge about our `socket_timeout`)\r\n\r\nIn some cases when new connection is made `self.connection_kwargs` is empty and value for `socket_timeout` is None. Under the neath connection is made using `socket` module [like that](https://github.com/andymccurdy/redis-py/blob/2.10.6/redis/connection.py#L526-L532)\r\n```python\r\n                sock.settimeout(self.socket_connect_timeout)\r\n\r\n                # connect\r\n                sock.connect(socket_address)\r\n\r\n                # set the socket_timeout now that we're connected\r\n                sock.settimeout(self.socket_timeout)\r\n``` \r\nfrom socket.settimeout [documentation](https://docs.python.org/3/library/socket.html#socket.socket.settimeout)\r\n```\r\n.... If None is given, the socket is put in blocking mode.\r\n```\r\n\r\nat this point when at least one sentinel instance is unavailable, request to (for example) `/django/django-rq/` will wait until 504 timeout (in my case)\r\n\r\n\r\nPR with fix is almost ready.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/301", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/301/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/301/events", "html_url": "https://github.com/rq/django-rq/issues/301", "id": 359884935, "node_id": "MDU6SXNzdWUzNTk4ODQ5MzU=", "number": 301, "title": "Worker disappears after a while", "user": {"login": "frbry", "id": 1176119, "node_id": "MDQ6VXNlcjExNzYxMTk=", "avatar_url": "https://avatars3.githubusercontent.com/u/1176119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frbry", "html_url": "https://github.com/frbry", "followers_url": "https://api.github.com/users/frbry/followers", "following_url": "https://api.github.com/users/frbry/following{/other_user}", "gists_url": "https://api.github.com/users/frbry/gists{/gist_id}", "starred_url": "https://api.github.com/users/frbry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frbry/subscriptions", "organizations_url": "https://api.github.com/users/frbry/orgs", "repos_url": "https://api.github.com/users/frbry/repos", "events_url": "https://api.github.com/users/frbry/events{/privacy}", "received_events_url": "https://api.github.com/users/frbry/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-09-13T12:59:49Z", "updated_at": "2018-09-15T17:09:48Z", "closed_at": "2018-09-15T17:09:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "We've started to face an issue after upgrading django-rq from `0.9.4` to `1.2.0`.\r\n\r\nWorkers disappear from the admin panel after running for a while. We couldn't track the exact amount of time it takes to happen but it feels random. However, it seems to happen to workers that don't receive jobs often.\r\n\r\nNote: Disappeared workers continue to complete jobs.\r\n\r\nThis has become an issue for us as we use the below code to check if there are workers for a given queue - we notify the user if there isn't any. This returns `0` after the worker \"disappears\".\r\n\r\n```\r\ndef get_num_active_workers(queue_name):\r\n    \"\"\"Taken from django_rq admin stats page\"\"\"\r\n    connection = get_connection()\r\n    queue = get_queue(queue_name)\r\n    all_workers = Worker.all(connection=connection)\r\n    queue_workers = [worker for worker in all_workers if queue in worker.queues]\r\n    return len(queue_workers)\r\n```\r\n\r\n**Edit:**\r\nAfter some more debugging, we found this: when we enqueue a new job we see the below output in debug log. And if the job is not finished within 35 seconds, the worker disappears. I don't know where the number 35 is coming but it's the same every time.\r\n\r\n```\r\n4:40:00 PM orders-worker.1  |  19:40:00 orders: project.apps.project_app.tasks.test_job() (7f0fe235-6151-4d45-85be-70b2f6ebbfd0)\r\n4:40:00 PM orders-worker.1  |  19:40:00 Sent heartbeat to prevent worker timeout. Next one should arrive within 420 seconds.\r\n4:40:00 PM orders-worker.1  |  19:40:00 Sent heartbeat to prevent worker timeout. Next one should arrive within 35 seconds.\r\n```\r\n\r\nAnd here is the `RQ_QUEUES` setting:\r\n```\r\nRQ_QUEUES = {\r\n    'orders': {\r\n        'USE_REDIS_CACHE': 'redis-cache',\r\n    }\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/299", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/299/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/299/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/299/events", "html_url": "https://github.com/rq/django-rq/issues/299", "id": 347463341, "node_id": "MDU6SXNzdWUzNDc0NjMzNDE=", "number": 299, "title": "question:  \"finished\" column in django admin", "user": {"login": "ccurvey", "id": 385577, "node_id": "MDQ6VXNlcjM4NTU3Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/385577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ccurvey", "html_url": "https://github.com/ccurvey", "followers_url": "https://api.github.com/users/ccurvey/followers", "following_url": "https://api.github.com/users/ccurvey/following{/other_user}", "gists_url": "https://api.github.com/users/ccurvey/gists{/gist_id}", "starred_url": "https://api.github.com/users/ccurvey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ccurvey/subscriptions", "organizations_url": "https://api.github.com/users/ccurvey/orgs", "repos_url": "https://api.github.com/users/ccurvey/repos", "events_url": "https://api.github.com/users/ccurvey/events{/privacy}", "received_events_url": "https://api.github.com/users/ccurvey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-03T16:38:24Z", "updated_at": "2018-08-19T07:13:00Z", "closed_at": "2018-08-19T07:13:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I can't seem to find an answer to this...so I'll just ask.\r\n\r\non the Django admin page for Django-RQ, there's a \"finished jobs\" column.  I'm assuming that is a count of jobs finished in the last N minutes.\r\n\r\nWhat is N?\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/298", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/298/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/298/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/298/events", "html_url": "https://github.com/rq/django-rq/issues/298", "id": 344732228, "node_id": "MDU6SXNzdWUzNDQ3MzIyMjg=", "number": 298, "title": "Version in PyPI is 1.2.0, but version in GitHub is 1.1.1", "user": {"login": "Flimm", "id": 355454, "node_id": "MDQ6VXNlcjM1NTQ1NA==", "avatar_url": "https://avatars3.githubusercontent.com/u/355454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Flimm", "html_url": "https://github.com/Flimm", "followers_url": "https://api.github.com/users/Flimm/followers", "following_url": "https://api.github.com/users/Flimm/following{/other_user}", "gists_url": "https://api.github.com/users/Flimm/gists{/gist_id}", "starred_url": "https://api.github.com/users/Flimm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Flimm/subscriptions", "organizations_url": "https://api.github.com/users/Flimm/orgs", "repos_url": "https://api.github.com/users/Flimm/repos", "events_url": "https://api.github.com/users/Flimm/events{/privacy}", "received_events_url": "https://api.github.com/users/Flimm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-26T07:48:52Z", "updated_at": "2018-08-19T07:11:24Z", "closed_at": "2018-08-19T07:11:24Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The latest version on PyPI is named 1.2.0:\r\n\r\nhttps://pypi.org/project/django-rq/\r\n\r\nHowever, the `version` in [`setup.py`](https://github.com/rq/django-rq/blob/master/setup.py) in this GitHub repo is only 1.1.1.\r\n\r\nThere seems to be a mismatch.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/296", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/296/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/296/events", "html_url": "https://github.com/rq/django-rq/issues/296", "id": 337992302, "node_id": "MDU6SXNzdWUzMzc5OTIzMDI=", "number": 296, "title": "workers crashing:  ValueError: There exists an active worker named ... already", "user": {"login": "ccurvey", "id": 385577, "node_id": "MDQ6VXNlcjM4NTU3Nw==", "avatar_url": "https://avatars3.githubusercontent.com/u/385577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ccurvey", "html_url": "https://github.com/ccurvey", "followers_url": "https://api.github.com/users/ccurvey/followers", "following_url": "https://api.github.com/users/ccurvey/following{/other_user}", "gists_url": "https://api.github.com/users/ccurvey/gists{/gist_id}", "starred_url": "https://api.github.com/users/ccurvey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ccurvey/subscriptions", "organizations_url": "https://api.github.com/users/ccurvey/orgs", "repos_url": "https://api.github.com/users/ccurvey/repos", "events_url": "https://api.github.com/users/ccurvey/events{/privacy}", "received_events_url": "https://api.github.com/users/ccurvey/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-03T17:33:12Z", "updated_at": "2019-07-21T10:56:27Z", "closed_at": "2019-07-21T10:56:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been using django-rq for about four years, and I love it.  I'm trying to port my site to Docker, and use docker-compose in my development environment.  When I start my site with \"docker-compose up\" (which is supposed to start all my services), my workers crash with a message like:\r\n\r\n> ValueError: There exists an active worker named u'00ec99547605.7' already\r\n\r\nI suspect that this is because a previous startup registered some workers, but then never cleanly shut them down.   (For Docker fans, I'm actually running my Redis as a separate service outside of Docker.)\r\n\r\nIs there a way to tell Django-RQ that these workers no longer exist?  Or a way to configure them so that they time out quickly (at least in development?)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/295", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/295/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/295/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/295/events", "html_url": "https://github.com/rq/django-rq/issues/295", "id": 337760073, "node_id": "MDU6SXNzdWUzMzc3NjAwNzM=", "number": 295, "title": "\"async\" function argument causing SyntaxError since Python3.7", "user": {"login": "Madi7", "id": 34916330, "node_id": "MDQ6VXNlcjM0OTE2MzMw", "avatar_url": "https://avatars3.githubusercontent.com/u/34916330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Madi7", "html_url": "https://github.com/Madi7", "followers_url": "https://api.github.com/users/Madi7/followers", "following_url": "https://api.github.com/users/Madi7/following{/other_user}", "gists_url": "https://api.github.com/users/Madi7/gists{/gist_id}", "starred_url": "https://api.github.com/users/Madi7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Madi7/subscriptions", "organizations_url": "https://api.github.com/users/Madi7/orgs", "repos_url": "https://api.github.com/users/Madi7/repos", "events_url": "https://api.github.com/users/Madi7/events{/privacy}", "received_events_url": "https://api.github.com/users/Madi7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-07-03T06:21:31Z", "updated_at": "2018-07-23T00:56:43Z", "closed_at": "2018-07-23T00:56:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "In django_rq/queues.py:\r\n\r\n    def get_queue(name='default', default_timeout=None, async=None,\r\n                  autocommit=None, queue_class=None, job_class=None, **kwargs):\r\n        ...\r\n\r\nPython3.7's release note:\r\n\r\n    Backwards incompatible syntax changes:\r\n\r\n        async and await are now reserved keywords.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/292", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/292/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/292/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/292/events", "html_url": "https://github.com/rq/django-rq/issues/292", "id": 327059278, "node_id": "MDU6SXNzdWUzMjcwNTkyNzg=", "number": 292, "title": "rqscheduler does not use TIMEOUT set in settings.py", "user": {"login": "nmiletic", "id": 4791316, "node_id": "MDQ6VXNlcjQ3OTEzMTY=", "avatar_url": "https://avatars1.githubusercontent.com/u/4791316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nmiletic", "html_url": "https://github.com/nmiletic", "followers_url": "https://api.github.com/users/nmiletic/followers", "following_url": "https://api.github.com/users/nmiletic/following{/other_user}", "gists_url": "https://api.github.com/users/nmiletic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nmiletic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nmiletic/subscriptions", "organizations_url": "https://api.github.com/users/nmiletic/orgs", "repos_url": "https://api.github.com/users/nmiletic/repos", "events_url": "https://api.github.com/users/nmiletic/events{/privacy}", "received_events_url": "https://api.github.com/users/nmiletic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-28T15:20:07Z", "updated_at": "2019-04-06T14:38:47Z", "closed_at": "2019-04-06T14:38:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nIt seems that rqscheduler does not use TIMEOUT set in settings.py.\r\nwhen Queue instance is returned using from_queue key timeout is not set and default of 180sec is used it seems. \r\n\r\nThanks\r\nNemanja", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/290", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/290/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/290/events", "html_url": "https://github.com/rq/django-rq/issues/290", "id": 323504810, "node_id": "MDU6SXNzdWUzMjM1MDQ4MTA=", "number": 290, "title": "How to use django rq in CBV listview?", "user": {"login": "robbiibadi", "id": 30530690, "node_id": "MDQ6VXNlcjMwNTMwNjkw", "avatar_url": "https://avatars3.githubusercontent.com/u/30530690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/robbiibadi", "html_url": "https://github.com/robbiibadi", "followers_url": "https://api.github.com/users/robbiibadi/followers", "following_url": "https://api.github.com/users/robbiibadi/following{/other_user}", "gists_url": "https://api.github.com/users/robbiibadi/gists{/gist_id}", "starred_url": "https://api.github.com/users/robbiibadi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/robbiibadi/subscriptions", "organizations_url": "https://api.github.com/users/robbiibadi/orgs", "repos_url": "https://api.github.com/users/robbiibadi/repos", "events_url": "https://api.github.com/users/robbiibadi/events{/privacy}", "received_events_url": "https://api.github.com/users/robbiibadi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-05-16T07:46:15Z", "updated_at": "2019-07-21T10:56:55Z", "closed_at": "2019-07-21T10:56:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "i cant figure out how to use django rq in sample queryset\r\n\r\nclass PartnerCatalogueView(generic.ListView):\r\n    \"\"\"\r\n    Browse all products in the catalogue\r\n    \"\"\"\r\n    template_name = 'catalogue/partner.html'\r\n    paginate_by = 9\r\n    model = Product\r\n    context_object_name = 'prod'\r\n\r\n    def get_queryset(self, **kwargs):\r\n        queryset = super(PartnerCatalogueView, self).get_queryset()\r\n        queryset = queryset.filter(stockrecords__partner__id=self.kwargs['pk'])\r\n        return queryset", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/289", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/289/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/289/events", "html_url": "https://github.com/rq/django-rq/issues/289", "id": 320363864, "node_id": "MDU6SXNzdWUzMjAzNjM4NjQ=", "number": 289, "title": "ModuleNotFoundError: No module named 'django-rq'", "user": {"login": "erikdao", "id": 26970731, "node_id": "MDQ6VXNlcjI2OTcwNzMx", "avatar_url": "https://avatars3.githubusercontent.com/u/26970731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdao", "html_url": "https://github.com/erikdao", "followers_url": "https://api.github.com/users/erikdao/followers", "following_url": "https://api.github.com/users/erikdao/following{/other_user}", "gists_url": "https://api.github.com/users/erikdao/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdao/subscriptions", "organizations_url": "https://api.github.com/users/erikdao/orgs", "repos_url": "https://api.github.com/users/erikdao/repos", "events_url": "https://api.github.com/users/erikdao/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-05-04T17:37:52Z", "updated_at": "2018-05-04T18:15:17Z", "closed_at": "2018-05-04T18:15:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "I couldn't get the latest `django-rq` to run with my `django` setup. I'm using `django==2.0.4` with `pipevn`, when I tried to run the development server, it said:\r\n\r\n```\r\nUnhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x10645bd08>\r\nTraceback (most recent call last):\r\n  File \"/Users/username/.local/share/virtualenvs/project_x-5muY3MWa/lib/python3.6/site-packages/django/utils/autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/username/.local/share/virtualenvs/project_x-5muY3MWa/lib/python3.6/site-packages/django/core/management/commands/runserver.py\", line 112, in inner_run\r\n    autoreload.raise_last_exception()\r\n  File \"/Users/username/.local/share/virtualenvs/project_x-5muY3MWa/lib/python3.6/site-packages/django/utils/autoreload.py\", line 248, in raise_last_exception\r\n    raise _exception[1]\r\n  File \"/Users/username/.local/share/virtualenvs/project_x-5muY3MWa/lib/python3.6/site-packages/django/core/management/__init__.py\", line 327, in execute\r\n    autoreload.check_errors(django.setup)()\r\n  File \"/Users/username/.local/share/virtualenvs/project_x-5muY3MWa/lib/python3.6/site-packages/django/utils/autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/username/.local/share/virtualenvs/project_x-5muY3MWa/lib/python3.6/site-packages/django/__init__.py\", line 24, in setup\r\n    apps.populate(settings.INSTALLED_APPS)\r\n  File \"/Users/username/.local/share/virtualenvs/project_x-5muY3MWa/lib/python3.6/site-packages/django/apps/registry.py\", line 89, in populate\r\n    app_config = AppConfig.create(entry)\r\n  File \"/Users/username/.local/share/virtualenvs/project_x-5muY3MWa/lib/python3.6/site-packages/django/apps/config.py\", line 90, in create\r\n    module = import_module(entry)\r\n  File \"/Users/username/.local/share/virtualenvs/project_x-5muY3MWa/lib/python3.6/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 994, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 971, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 953, in _find_and_load_unlocked\r\nModuleNotFoundError: No module named 'django-rq'\r\n```\r\n\r\nHere is my `django-rq` info:\r\n\r\n```\r\nName: django-rq\r\nVersion: 1.1.0\r\nSummary: An app that provides django integration for RQ (Redis Queue)\r\nHome-page: https://github.com/ui/django-rq\r\nAuthor: Selwin Ong\r\nAuthor-email: selwin.ong@gmail.com\r\nLicense: MIT\r\nLocation: /Users/username/.local/share/virtualenvs/project_x-5muY3MWa/lib/python3.6/site-packages\r\nRequires: rq, django\r\nRequired-by:\r\n```\r\n\r\nDoes anyone encounter this error?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/287", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/287/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/287/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/287/events", "html_url": "https://github.com/rq/django-rq/issues/287", "id": 317565220, "node_id": "MDU6SXNzdWUzMTc1NjUyMjA=", "number": 287, "title": "RecursionError: maximum recursion depth exceeded (urls.py and Django 2.0.4)", "user": {"login": "richardgiddings", "id": 17292519, "node_id": "MDQ6VXNlcjE3MjkyNTE5", "avatar_url": "https://avatars0.githubusercontent.com/u/17292519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richardgiddings", "html_url": "https://github.com/richardgiddings", "followers_url": "https://api.github.com/users/richardgiddings/followers", "following_url": "https://api.github.com/users/richardgiddings/following{/other_user}", "gists_url": "https://api.github.com/users/richardgiddings/gists{/gist_id}", "starred_url": "https://api.github.com/users/richardgiddings/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richardgiddings/subscriptions", "organizations_url": "https://api.github.com/users/richardgiddings/orgs", "repos_url": "https://api.github.com/users/richardgiddings/repos", "events_url": "https://api.github.com/users/richardgiddings/events{/privacy}", "received_events_url": "https://api.github.com/users/richardgiddings/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-04-25T10:18:14Z", "updated_at": "2018-04-25T14:58:59Z", "closed_at": "2018-04-25T14:58:58Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I include the following in my application urls.py\r\n```\r\n# For Django >= 2.0\r\nurlpatterns += [\r\n    url(r'^django-rq/', (urlpatterns, '', 'django_rq'))\r\n]\r\n```\r\nI get the following error when running 'python manage.py runserver':\r\n```\r\nUnhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x1033c89d8>\r\nTraceback (most recent call last):\r\n  File \"/Users/richardgiddings/django/code/nicethingshappen/lib/python3.5/site-packages/django/utils/autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/richardgiddings/django/code/nicethingshappen/lib/python3.5/site-packages/django/core/management/commands/runserver.py\", line 120, in inner_run\r\n    self.check(display_num_errors=True)\r\n  File \"/Users/richardgiddings/django/code/nicethingshappen/lib/python3.5/site-packages/django/core/management/base.py\", line 364, in check\r\n    include_deployment_checks=include_deployment_checks,\r\n  File \"/Users/richardgiddings/django/code/nicethingshappen/lib/python3.5/site-packages/django/core/management/base.py\", line 351, in _run_checks\r\n    return checks.run_checks(**kwargs)\r\n  File \"/Users/richardgiddings/django/code/nicethingshappen/lib/python3.5/site-packages/django/core/checks/registry.py\", line 73, in run_checks\r\n    new_errors = check(app_configs=app_configs)\r\n  File \"/Users/richardgiddings/django/code/nicethingshappen/lib/python3.5/site-packages/django/core/checks/urls.py\", line 40, in check_url_namespaces_unique\r\n    all_namespaces = _load_all_namespaces(resolver)\r\n  File \"/Users/richardgiddings/django/code/nicethingshappen/lib/python3.5/site-packages/django/core/checks/urls.py\", line 67, in _load_all_namespaces\r\n.\r\n.\r\n.\r\n  File \"/Users/richardgiddings/django/code/nicethingshappen/lib/python3.5/site-packages/django/core/checks/urls.py\", line 59, in _load_all_namespaces\r\n    ':'.join(parents + (url.namespace,)) for url in url_patterns\r\nRecursionError: maximum recursion depth exceeded\r\n```\r\n\r\nIs there something obvious I have done wrong?\r\n\r\nAlso can we use path() rather than url()? Something like:\r\n`path('django-rq/', include('django_rq.urls'))`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/286", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/286/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/286/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/286/events", "html_url": "https://github.com/rq/django-rq/issues/286", "id": 317472463, "node_id": "MDU6SXNzdWUzMTc0NzI0NjM=", "number": 286, "title": "Any advice on how to run a django-rq worker on AWS Elastic Beanstalk?", "user": {"login": "jacobevans", "id": 306223, "node_id": "MDQ6VXNlcjMwNjIyMw==", "avatar_url": "https://avatars1.githubusercontent.com/u/306223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacobevans", "html_url": "https://github.com/jacobevans", "followers_url": "https://api.github.com/users/jacobevans/followers", "following_url": "https://api.github.com/users/jacobevans/following{/other_user}", "gists_url": "https://api.github.com/users/jacobevans/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacobevans/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacobevans/subscriptions", "organizations_url": "https://api.github.com/users/jacobevans/orgs", "repos_url": "https://api.github.com/users/jacobevans/repos", "events_url": "https://api.github.com/users/jacobevans/events{/privacy}", "received_events_url": "https://api.github.com/users/jacobevans/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-04-25T04:08:41Z", "updated_at": "2019-07-31T23:34:33Z", "closed_at": "2019-07-21T10:57:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "Elastic beanstalk uses WSGI to serve web apps, so my .config file has something like this:\r\n\r\n    option_settings:\r\n      aws:elasticbeanstalk:container:python:\r\n        WSGIPath: widget/wsgi.py\r\n\r\nIs there a way to run a django-rq worker with the same approach?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/284", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/284/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/284/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/284/events", "html_url": "https://github.com/rq/django-rq/issues/284", "id": 316176095, "node_id": "MDU6SXNzdWUzMTYxNzYwOTU=", "number": 284, "title": "DeprecationWarning: 'async' and 'await' will become reserved keywords in Python 3.7", "user": {"login": "OrDuan", "id": 5006049, "node_id": "MDQ6VXNlcjUwMDYwNDk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5006049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OrDuan", "html_url": "https://github.com/OrDuan", "followers_url": "https://api.github.com/users/OrDuan/followers", "following_url": "https://api.github.com/users/OrDuan/following{/other_user}", "gists_url": "https://api.github.com/users/OrDuan/gists{/gist_id}", "starred_url": "https://api.github.com/users/OrDuan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OrDuan/subscriptions", "organizations_url": "https://api.github.com/users/OrDuan/orgs", "repos_url": "https://api.github.com/users/OrDuan/repos", "events_url": "https://api.github.com/users/OrDuan/events{/privacy}", "received_events_url": "https://api.github.com/users/OrDuan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-04-20T08:33:27Z", "updated_at": "2018-07-17T05:53:06Z", "closed_at": "2018-07-17T05:53:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "Since there are few places that `async` keyword is used, we get this warning, which means RQ will break on 3.7.\r\n\r\nHere is what PEP8 advised to do in these cases:\r\n\r\n> single_trailing_underscore_: used by convention to avoid conflicts with Python keyword, e.g.\r\n> \r\n> Tkinter.Toplevel(master, class_='ClassName')\r\n\r\nI would open a PR to change it to `async_`  but this will be breaking change, what do you guys think?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/282", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/282/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/282/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/282/events", "html_url": "https://github.com/rq/django-rq/issues/282", "id": 311929197, "node_id": "MDU6SXNzdWUzMTE5MjkxOTc=", "number": 282, "title": "run subprocess as a Job in django rq", "user": {"login": "faizalprbw", "id": 7609337, "node_id": "MDQ6VXNlcjc2MDkzMzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/7609337?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faizalprbw", "html_url": "https://github.com/faizalprbw", "followers_url": "https://api.github.com/users/faizalprbw/followers", "following_url": "https://api.github.com/users/faizalprbw/following{/other_user}", "gists_url": "https://api.github.com/users/faizalprbw/gists{/gist_id}", "starred_url": "https://api.github.com/users/faizalprbw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faizalprbw/subscriptions", "organizations_url": "https://api.github.com/users/faizalprbw/orgs", "repos_url": "https://api.github.com/users/faizalprbw/repos", "events_url": "https://api.github.com/users/faizalprbw/events{/privacy}", "received_events_url": "https://api.github.com/users/faizalprbw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-06T10:41:34Z", "updated_at": "2018-04-09T03:59:50Z", "closed_at": "2018-04-07T00:11:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been trying to run python file by using subprocess inside job like this :\r\n```\r\n@job('high')\r\ndef run_program(value):\r\n    path_to_file = '/home/dir1/program.py'\r\n    subprocess.call(['sudo', 'python', path_to_file, '--parameter', value])\r\n```\r\nthen the job is failed and  i got this error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/vagrant/.virtualenvs/otoklim/local/lib/python2.7/site-packages/rq/worker.py\", line 789, in perform_job\r\n    rv = job.perform()\r\n  File \"/home/vagrant/.virtualenvs/otoklim/local/lib/python2.7/site-packages/rq/job.py\", line 573, in perform\r\n    self._result = self._execute()\r\n  File \"/home/vagrant/.virtualenvs/otoklim/local/lib/python2.7/site-packages/rq/job.py\", line 579, in _execute\r\n    return self.func(*self.args, **self.kwargs)\r\n  File \"/home/vagrant/otoklim/otoklim/otoklim/tasks.py\", line 105, in run_otoklim\r\n    subprocess.call(['sudo', 'python', path_to_file, '--parameter', value])\r\n  File \"/usr/lib/python2.7/subprocess.py\", line 523, in call\r\n    return Popen(*popenargs, **kwargs).wait()\r\n  File \"/usr/lib/python2.7/subprocess.py\", line 711, in __init__\r\n    errread, errwrite)\r\n  File \"/usr/lib/python2.7/subprocess.py\", line 1343, in _execute_child\r\n    raise child_exception\r\nOSError: [Errno 2] No such file or directory\r\n```\r\ni'm sure that the file is exists and it will be work if i run it without using django rq..\r\nI also has try to run something like this..\r\n`subprocess.call('sudo python /home/dir1/program.py --parameter value', shell=True)`\r\nThe job is finished but the program seems like not working at all. The expected result is not created..\r\n\r\nIs there any way to run python file `sudo python program.py` by using django rq?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/279", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/279/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/279/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/279/events", "html_url": "https://github.com/rq/django-rq/issues/279", "id": 305084478, "node_id": "MDU6SXNzdWUzMDUwODQ0Nzg=", "number": 279, "title": "Problem with url include in Django 2.0.3", "user": {"login": "koddr", "id": 11155743, "node_id": "MDQ6VXNlcjExMTU1NzQz", "avatar_url": "https://avatars2.githubusercontent.com/u/11155743?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koddr", "html_url": "https://github.com/koddr", "followers_url": "https://api.github.com/users/koddr/followers", "following_url": "https://api.github.com/users/koddr/following{/other_user}", "gists_url": "https://api.github.com/users/koddr/gists{/gist_id}", "starred_url": "https://api.github.com/users/koddr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koddr/subscriptions", "organizations_url": "https://api.github.com/users/koddr/orgs", "repos_url": "https://api.github.com/users/koddr/repos", "events_url": "https://api.github.com/users/koddr/events{/privacy}", "received_events_url": "https://api.github.com/users/koddr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-14T09:40:16Z", "updated_at": "2018-04-05T15:42:52Z", "closed_at": "2018-04-05T15:42:52Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello.\r\n\r\n*Is there really support for Django 2.x?!* I want to use Django-RQ in Django `2.0.3`, but if I include url to my `urls.py`, I have error (I'm using Pipenv `11.7.1`):\r\n\r\n```bash\r\nFile \"/Users/user/.local/share/virtualenvs/myproject-fiOUaYzG/lib/python3.6/site-packages/django_rq/urls.py\", line 1, in <module>\r\n    from django.conf.urls import patterns, url\r\nImportError: cannot import name 'patterns'\r\n```\r\n\r\nOn `.../lib/python3.6/site-packages/django_rq/urls.py` we're have old style url's paths and (probably) deprecated in `2.x` method `patterns`:\r\n\r\n```python\r\nfrom django.conf.urls import patterns, url\r\n\r\nurlpatterns = patterns('django_rq.views',\r\n    url(r'^$', 'stats', name='rq_home'),\r\n    url(r'^queues/(?P<queue_index>[\\d]+)/$', 'jobs', name='rq_jobs'),\r\n    url(r'^queues/(?P<queue_index>[\\d]+)/finished/$',\r\n        'finished_jobs', name='rq_finished_jobs'),\r\n    url(r'^queues/(?P<queue_index>[\\d]+)/started/$',\r\n        'started_jobs', name='rq_started_jobs'),\r\n    url(r'^queues/(?P<queue_index>[\\d]+)/deferred/$',\r\n        'deferred_jobs', name='rq_deferred_jobs'),\r\n    url(r'^queues/(?P<queue_index>[\\d]+)/empty/$', 'clear_queue', name='rq_clear'),\r\n    url(r'^queues/(?P<queue_index>[\\d]+)/(?P<job_id>[-\\w]+)/$', 'job_detail',\r\n        name='rq_job_detail'),\r\n    url(r'^queues/(?P<queue_index>[\\d]+)/(?P<job_id>[-\\w]+)/delete/$',\r\n        'delete_job', name='rq_delete_job'),\r\n    url(r'^queues/actions/(?P<queue_index>[\\d]+)/$',\r\n        'actions', name='rq_actions'),\r\n    url(r'^queues/(?P<queue_index>[\\d]+)/(?P<job_id>[-\\w]+)/requeue/$',\r\n        'requeue_job_view', name='rq_requeue_job'),\r\n)\r\n```\r\n\r\nHow to solve this? Help please.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/277", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/277/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/277/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/277/events", "html_url": "https://github.com/rq/django-rq/issues/277", "id": 301639296, "node_id": "MDU6SXNzdWUzMDE2MzkyOTY=", "number": 277, "title": "Unable to update model from job while testing", "user": {"login": "sean-dooher", "id": 21182202, "node_id": "MDQ6VXNlcjIxMTgyMjAy", "avatar_url": "https://avatars1.githubusercontent.com/u/21182202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sean-dooher", "html_url": "https://github.com/sean-dooher", "followers_url": "https://api.github.com/users/sean-dooher/followers", "following_url": "https://api.github.com/users/sean-dooher/following{/other_user}", "gists_url": "https://api.github.com/users/sean-dooher/gists{/gist_id}", "starred_url": "https://api.github.com/users/sean-dooher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sean-dooher/subscriptions", "organizations_url": "https://api.github.com/users/sean-dooher/orgs", "repos_url": "https://api.github.com/users/sean-dooher/repos", "events_url": "https://api.github.com/users/sean-dooher/events{/privacy}", "received_events_url": "https://api.github.com/users/sean-dooher/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-02T03:14:33Z", "updated_at": "2019-08-22T12:10:21Z", "closed_at": "2019-07-21T10:59:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am having trouble testing a job that modifies and saves the model. In the debugger, I can evaluate code inside of the job and run refresh_from_db() and it seems like it works, but once the job function returns the results are lost. It does work in a non-testing environment, but I'd prefer to be able to test my code.\r\n\r\nI figure this has something to do with django's testing database setup, but I have been unable to find a solution so far. I have managed to make a simple test case that reproduces the error below.\r\n\r\nI have the following django_rq job function that I have created.\r\n```\r\n@job\r\ndef simple_job(model)\r\n    model.num = 100\r\n    model.save()\r\n```\r\n\r\nFor the following model:\r\n```\r\nclass Model1(models.Model):\r\n    num = models.IntegerField()\r\n```\r\n\r\nThis is my test that is failing\r\n```\r\ndef test_model(self):\r\n\tmodel1 = Model1(num=0)\r\n\tmodel1.save()\r\n\r\n\tsimple_job.delay(model1) # also doesn't work using enqueue\r\n\tget_worker().work(burst=True)\r\n\r\n\tmodel1.refresh_from_db()\r\n\r\n\tself.assertEqual(model1.num, 100) # Fails with 0 != 100\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/273", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/273/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/273/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/273/events", "html_url": "https://github.com/rq/django-rq/issues/273", "id": 292454060, "node_id": "MDU6SXNzdWUyOTI0NTQwNjA=", "number": 273, "title": "it 's possible to remove job/task from queue ?", "user": {"login": "RodEspinoza", "id": 8152377, "node_id": "MDQ6VXNlcjgxNTIzNzc=", "avatar_url": "https://avatars3.githubusercontent.com/u/8152377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RodEspinoza", "html_url": "https://github.com/RodEspinoza", "followers_url": "https://api.github.com/users/RodEspinoza/followers", "following_url": "https://api.github.com/users/RodEspinoza/following{/other_user}", "gists_url": "https://api.github.com/users/RodEspinoza/gists{/gist_id}", "starred_url": "https://api.github.com/users/RodEspinoza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RodEspinoza/subscriptions", "organizations_url": "https://api.github.com/users/RodEspinoza/orgs", "repos_url": "https://api.github.com/users/RodEspinoza/repos", "events_url": "https://api.github.com/users/RodEspinoza/events{/privacy}", "received_events_url": "https://api.github.com/users/RodEspinoza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-01-29T15:41:48Z", "updated_at": "2018-04-07T00:18:16Z", "closed_at": "2018-04-07T00:18:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/272", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/272/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/272/events", "html_url": "https://github.com/rq/django-rq/issues/272", "id": 288100408, "node_id": "MDU6SXNzdWUyODgxMDA0MDg=", "number": 272, "title": "Mabye move django-rq to the rq organisation", "user": {"login": "samuelcolvin", "id": 4039449, "node_id": "MDQ6VXNlcjQwMzk0NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4039449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelcolvin", "html_url": "https://github.com/samuelcolvin", "followers_url": "https://api.github.com/users/samuelcolvin/followers", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-12T12:12:49Z", "updated_at": "2018-01-17T01:01:33Z", "closed_at": "2018-01-17T01:01:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "rq has now moved to an organisation https://github.com/rq.\r\n\r\nWould you consider moving `django-rq` to that organisation. Obviously all collaborators can become collaborators on the organisation.\r\n\r\nThoughts?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/268", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/268/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/268/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/268/events", "html_url": "https://github.com/rq/django-rq/issues/268", "id": 281092197, "node_id": "MDU6SXNzdWUyODEwOTIxOTc=", "number": 268, "title": "Option to run multiple workers from the rqworker management command", "user": {"login": "as3445", "id": 2430012, "node_id": "MDQ6VXNlcjI0MzAwMTI=", "avatar_url": "https://avatars0.githubusercontent.com/u/2430012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/as3445", "html_url": "https://github.com/as3445", "followers_url": "https://api.github.com/users/as3445/followers", "following_url": "https://api.github.com/users/as3445/following{/other_user}", "gists_url": "https://api.github.com/users/as3445/gists{/gist_id}", "starred_url": "https://api.github.com/users/as3445/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/as3445/subscriptions", "organizations_url": "https://api.github.com/users/as3445/orgs", "repos_url": "https://api.github.com/users/as3445/repos", "events_url": "https://api.github.com/users/as3445/events{/privacy}", "received_events_url": "https://api.github.com/users/as3445/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-12-11T17:01:55Z", "updated_at": "2020-07-14T19:51:59Z", "closed_at": "2018-01-17T00:35:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be useful if the rqworker management command allowed me to specify if I wanted to run multiple workers at the same time.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/266", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/266/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/266/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/266/events", "html_url": "https://github.com/rq/django-rq/issues/266", "id": 279410456, "node_id": "MDU6SXNzdWUyNzk0MTA0NTY=", "number": 266, "title": "Is there support for Django 2.0?", "user": {"login": "GasparPizarro", "id": 3129848, "node_id": "MDQ6VXNlcjMxMjk4NDg=", "avatar_url": "https://avatars1.githubusercontent.com/u/3129848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GasparPizarro", "html_url": "https://github.com/GasparPizarro", "followers_url": "https://api.github.com/users/GasparPizarro/followers", "following_url": "https://api.github.com/users/GasparPizarro/following{/other_user}", "gists_url": "https://api.github.com/users/GasparPizarro/gists{/gist_id}", "starred_url": "https://api.github.com/users/GasparPizarro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GasparPizarro/subscriptions", "organizations_url": "https://api.github.com/users/GasparPizarro/orgs", "repos_url": "https://api.github.com/users/GasparPizarro/repos", "events_url": "https://api.github.com/users/GasparPizarro/events{/privacy}", "received_events_url": "https://api.github.com/users/GasparPizarro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-12-05T15:10:51Z", "updated_at": "2017-12-19T07:45:46Z", "closed_at": "2017-12-19T07:45:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "Django 2.0 has been released. Is there support for it as of now?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/264", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/264/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/264/events", "html_url": "https://github.com/rq/django-rq/issues/264", "id": 277615102, "node_id": "MDU6SXNzdWUyNzc2MTUxMDI=", "number": 264, "title": "Current job statistics on worker details page are shown twice", "user": {"login": "SeiryuZ", "id": 1240672, "node_id": "MDQ6VXNlcjEyNDA2NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1240672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeiryuZ", "html_url": "https://github.com/SeiryuZ", "followers_url": "https://api.github.com/users/SeiryuZ/followers", "following_url": "https://api.github.com/users/SeiryuZ/following{/other_user}", "gists_url": "https://api.github.com/users/SeiryuZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeiryuZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeiryuZ/subscriptions", "organizations_url": "https://api.github.com/users/SeiryuZ/orgs", "repos_url": "https://api.github.com/users/SeiryuZ/repos", "events_url": "https://api.github.com/users/SeiryuZ/events{/privacy}", "received_events_url": "https://api.github.com/users/SeiryuZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-29T03:12:39Z", "updated_at": "2017-11-30T08:28:26Z", "closed_at": "2017-11-30T08:28:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "\r\n![selection_548](https://user-images.githubusercontent.com/1240672/33356206-cd8c4b4a-d4ed-11e7-95df-4a5a37c9b613.png)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/261", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/261/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/261/events", "html_url": "https://github.com/rq/django-rq/issues/261", "id": 276936874, "node_id": "MDU6SXNzdWUyNzY5MzY4NzQ=", "number": 261, "title": "Oldest queued job use wrong index", "user": {"login": "SeiryuZ", "id": 1240672, "node_id": "MDQ6VXNlcjEyNDA2NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1240672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeiryuZ", "html_url": "https://github.com/SeiryuZ", "followers_url": "https://api.github.com/users/SeiryuZ/followers", "following_url": "https://api.github.com/users/SeiryuZ/following{/other_user}", "gists_url": "https://api.github.com/users/SeiryuZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeiryuZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeiryuZ/subscriptions", "organizations_url": "https://api.github.com/users/SeiryuZ/orgs", "repos_url": "https://api.github.com/users/SeiryuZ/repos", "events_url": "https://api.github.com/users/SeiryuZ/events{/privacy}", "received_events_url": "https://api.github.com/users/SeiryuZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-11-27T08:34:13Z", "updated_at": "2017-11-30T08:28:26Z", "closed_at": "2017-11-30T08:28:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Oldest queud job should've used the first job id in the list. Latest job_id means we're showing the newest job queue time", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/258", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/258/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/258/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/258/events", "html_url": "https://github.com/rq/django-rq/issues/258", "id": 275383907, "node_id": "MDU6SXNzdWUyNzUzODM5MDc=", "number": 258, "title": "How do I prevent concurrent multiple jobs with the same parameters", "user": {"login": "VidJa", "id": 6108142, "node_id": "MDQ6VXNlcjYxMDgxNDI=", "avatar_url": "https://avatars1.githubusercontent.com/u/6108142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VidJa", "html_url": "https://github.com/VidJa", "followers_url": "https://api.github.com/users/VidJa/followers", "following_url": "https://api.github.com/users/VidJa/following{/other_user}", "gists_url": "https://api.github.com/users/VidJa/gists{/gist_id}", "starred_url": "https://api.github.com/users/VidJa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VidJa/subscriptions", "organizations_url": "https://api.github.com/users/VidJa/orgs", "repos_url": "https://api.github.com/users/VidJa/repos", "events_url": "https://api.github.com/users/VidJa/events{/privacy}", "received_events_url": "https://api.github.com/users/VidJa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-20T14:57:25Z", "updated_at": "2017-11-28T16:36:06Z", "closed_at": "2017-11-28T16:36:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "How do I prevent multiple jobs in the queue with the same parameters. I am getting issues with jobs trying to write to the same file or the same db record at the same time if I run multiple workers.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/255", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/255/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/255/events", "html_url": "https://github.com/rq/django-rq/issues/255", "id": 272465815, "node_id": "MDU6SXNzdWUyNzI0NjU4MTU=", "number": 255, "title": "Basic monitoring statistics for queues without all the HTML", "user": {"login": "SeiryuZ", "id": 1240672, "node_id": "MDQ6VXNlcjEyNDA2NzI=", "avatar_url": "https://avatars0.githubusercontent.com/u/1240672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeiryuZ", "html_url": "https://github.com/SeiryuZ", "followers_url": "https://api.github.com/users/SeiryuZ/followers", "following_url": "https://api.github.com/users/SeiryuZ/following{/other_user}", "gists_url": "https://api.github.com/users/SeiryuZ/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeiryuZ/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeiryuZ/subscriptions", "organizations_url": "https://api.github.com/users/SeiryuZ/orgs", "repos_url": "https://api.github.com/users/SeiryuZ/repos", "events_url": "https://api.github.com/users/SeiryuZ/events{/privacy}", "received_events_url": "https://api.github.com/users/SeiryuZ/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-11-09T07:33:40Z", "updated_at": "2019-07-21T10:58:15Z", "closed_at": "2019-07-21T10:58:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Really useful for statistics to be sent to monitoring services like datadog", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/252", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/252/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/252/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/252/events", "html_url": "https://github.com/rq/django-rq/issues/252", "id": 266269760, "node_id": "MDU6SXNzdWUyNjYyNjk3NjA=", "number": 252, "title": "Sending exceptions to Sentry", "user": {"login": "efi-mk", "id": 822542, "node_id": "MDQ6VXNlcjgyMjU0Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/822542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/efi-mk", "html_url": "https://github.com/efi-mk", "followers_url": "https://api.github.com/users/efi-mk/followers", "following_url": "https://api.github.com/users/efi-mk/following{/other_user}", "gists_url": "https://api.github.com/users/efi-mk/gists{/gist_id}", "starred_url": "https://api.github.com/users/efi-mk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/efi-mk/subscriptions", "organizations_url": "https://api.github.com/users/efi-mk/orgs", "repos_url": "https://api.github.com/users/efi-mk/repos", "events_url": "https://api.github.com/users/efi-mk/events{/privacy}", "received_events_url": "https://api.github.com/users/efi-mk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-10-17T20:36:26Z", "updated_at": "2017-12-06T00:44:17Z", "closed_at": "2017-12-06T00:44:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello,\r\n\r\nFirst of all thank you very much for the wonderful library. \r\n\r\nHow do connect django-RQ to sentry. Nothing seems to work. I've configured sentry + logger under my django app. Everything works flawlessly when outside of RQ context, configured according to  sentry's documentation, but the moment I move to jobs executed in RQ nothing works. \r\nI was naive and looked at the code of rq , hoping that just setting SENTRY_DSN in settings.py will work, I guess not.\r\n\r\nUsed https://docs.sentry.io/clients/python/integrations/django/ for configuration\r\n\r\nWhat am I missing, what should I do ? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/250", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/250/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/250/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/250/events", "html_url": "https://github.com/rq/django-rq/issues/250", "id": 265102480, "node_id": "MDU6SXNzdWUyNjUxMDI0ODA=", "number": 250, "title": "Cannot view deferred queue", "user": {"login": "Hovercross", "id": 5103864, "node_id": "MDQ6VXNlcjUxMDM4NjQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/5103864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Hovercross", "html_url": "https://github.com/Hovercross", "followers_url": "https://api.github.com/users/Hovercross/followers", "following_url": "https://api.github.com/users/Hovercross/following{/other_user}", "gists_url": "https://api.github.com/users/Hovercross/gists{/gist_id}", "starred_url": "https://api.github.com/users/Hovercross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Hovercross/subscriptions", "organizations_url": "https://api.github.com/users/Hovercross/orgs", "repos_url": "https://api.github.com/users/Hovercross/repos", "events_url": "https://api.github.com/users/Hovercross/events{/privacy}", "received_events_url": "https://api.github.com/users/Hovercross/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-12T22:02:19Z", "updated_at": "2017-11-14T02:20:36Z", "closed_at": "2017-11-14T02:20:36Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When trying to view the deferred queue, I'm getting an error is encountered in the to_localtime in django_rq/templatetags/django_rq.py:14, seemingly because the enqueued_at attribute for a deferred job is None.\r\n\r\nRelevant error sections:\r\nInternal Server Error: /django-rq/queues/0/deferred/\r\n\r\nAttributeError at /django-rq/queues/0/deferred/\r\n'NoneType' object has no attribute 'replace'\r\n\r\nRelevant line of the traceback:\r\nFile \"/srv/app/env/lib/python3.6/site-packages/django_rq/templatetags/django_rq.py\" in to_localtime\r\n  14.     utc_time = time.replace(tzinfo=timezone.utc)\r\n\r\ndjango_rq version: django-rq==0.9.6\r\ndjango version: Django==1.11.6\r\n\r\nSteps to reproduce:\r\nEnqueue a new job\r\nCreate another new job, which depends on the first job\r\nTry to view the deferred queue", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/249", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/249/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/249/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/249/events", "html_url": "https://github.com/rq/django-rq/issues/249", "id": 261000256, "node_id": "MDU6SXNzdWUyNjEwMDAyNTY=", "number": 249, "title": "Support for multiple queues with different connections", "user": {"login": "jetxr", "id": 13171853, "node_id": "MDQ6VXNlcjEzMTcxODUz", "avatar_url": "https://avatars3.githubusercontent.com/u/13171853?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jetxr", "html_url": "https://github.com/jetxr", "followers_url": "https://api.github.com/users/jetxr/followers", "following_url": "https://api.github.com/users/jetxr/following{/other_user}", "gists_url": "https://api.github.com/users/jetxr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jetxr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jetxr/subscriptions", "organizations_url": "https://api.github.com/users/jetxr/orgs", "repos_url": "https://api.github.com/users/jetxr/repos", "events_url": "https://api.github.com/users/jetxr/events{/privacy}", "received_events_url": "https://api.github.com/users/jetxr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-27T14:40:26Z", "updated_at": "2017-12-06T00:46:12Z", "closed_at": "2017-12-06T00:46:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I couldn't see anywhere why this was a limitation, or if this was planned already. But it seems like a useful thing to support multiple Redis instances (so that queues can be scaled independently)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/247", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/247/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/247/events", "html_url": "https://github.com/rq/django-rq/issues/247", "id": 260044926, "node_id": "MDU6SXNzdWUyNjAwNDQ5MjY=", "number": 247, "title": "manage command fails in example app with empty database - 'relation \"integration_app_mymodel\" does not exist'", "user": {"login": "therefromhere", "id": 197540, "node_id": "MDQ6VXNlcjE5NzU0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/197540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therefromhere", "html_url": "https://github.com/therefromhere", "followers_url": "https://api.github.com/users/therefromhere/followers", "following_url": "https://api.github.com/users/therefromhere/following{/other_user}", "gists_url": "https://api.github.com/users/therefromhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/therefromhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therefromhere/subscriptions", "organizations_url": "https://api.github.com/users/therefromhere/orgs", "repos_url": "https://api.github.com/users/therefromhere/repos", "events_url": "https://api.github.com/users/therefromhere/events{/privacy}", "received_events_url": "https://api.github.com/users/therefromhere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-23T23:14:59Z", "updated_at": "2019-07-21T11:00:26Z", "closed_at": "2019-07-21T11:00:26Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "With an empty database, the `integration_test` app manage.py fails with this error:\r\n\r\n```\r\ndjango.db.utils.ProgrammingError: relation \"integration_app_mymodel\" does not exist\r\nLINE 1: ...odel\".\"id\", \"integration_app_mymodel\".\"name\" FROM \"integrati...\r\n\r\n```\r\nTo reproduce:\r\n\r\ndrop/create database as per `integration_test/README.md`\r\n```\r\ncd integration_test\r\n./manage.py\r\n# or\r\n./manage.py migrate\r\n```\r\n\r\nNote that ./manage.py fails, even before running commands.\r\n\r\nThis occurs on python 2.7 and python 3.6, and with Django 1.10 and 1.11.\r\n\r\nThe cause seems to be this from `integration_test/integration_app/models.py`\r\n\r\n```\r\n# causes a DB connection at import-time\r\n# see TestIntegration.test_worker_lost_connection\r\nlist(MyModel.objects.all())\r\n```\r\n(removing that line resolves the issue)\r\n\r\nThat code was added in 67fb7debcc9b020a52d212bdf92788dd5928744e by @depaolim in relation to #216  - is it not possible to test hit the tested issue in another way?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/244", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/244/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/244/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/244/events", "html_url": "https://github.com/rq/django-rq/issues/244", "id": 258359456, "node_id": "MDU6SXNzdWUyNTgzNTk0NTY=", "number": 244, "title": "Memory exhaustion when doing \"Requeue all\" with a large number of failed jobs", "user": {"login": "therefromhere", "id": 197540, "node_id": "MDQ6VXNlcjE5NzU0MA==", "avatar_url": "https://avatars2.githubusercontent.com/u/197540?v=4", "gravatar_id": "", "url": "https://api.github.com/users/therefromhere", "html_url": "https://github.com/therefromhere", "followers_url": "https://api.github.com/users/therefromhere/followers", "following_url": "https://api.github.com/users/therefromhere/following{/other_user}", "gists_url": "https://api.github.com/users/therefromhere/gists{/gist_id}", "starred_url": "https://api.github.com/users/therefromhere/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/therefromhere/subscriptions", "organizations_url": "https://api.github.com/users/therefromhere/orgs", "repos_url": "https://api.github.com/users/therefromhere/repos", "events_url": "https://api.github.com/users/therefromhere/events{/privacy}", "received_events_url": "https://api.github.com/users/therefromhere/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-09-18T02:57:49Z", "updated_at": "2017-11-01T10:18:21Z", "closed_at": "2017-11-01T10:18:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I think I hit a memory exhaustion issue when trying to requeue ~90,000 failed jobs\r\n\r\nIt looks like this could be avoided if django_rq.views.requeue_all used a generator to iterate through each job rather than loading all into memory at the start.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/243", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/243/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/243/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/243/events", "html_url": "https://github.com/rq/django-rq/issues/243", "id": 255384338, "node_id": "MDU6SXNzdWUyNTUzODQzMzg=", "number": 243, "title": "Retry a job using a custom exception handler generates duplicated failed tasks", "user": {"login": "Simonefardella", "id": 5062855, "node_id": "MDQ6VXNlcjUwNjI4NTU=", "avatar_url": "https://avatars2.githubusercontent.com/u/5062855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Simonefardella", "html_url": "https://github.com/Simonefardella", "followers_url": "https://api.github.com/users/Simonefardella/followers", "following_url": "https://api.github.com/users/Simonefardella/following{/other_user}", "gists_url": "https://api.github.com/users/Simonefardella/gists{/gist_id}", "starred_url": "https://api.github.com/users/Simonefardella/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Simonefardella/subscriptions", "organizations_url": "https://api.github.com/users/Simonefardella/orgs", "repos_url": "https://api.github.com/users/Simonefardella/repos", "events_url": "https://api.github.com/users/Simonefardella/events{/privacy}", "received_events_url": "https://api.github.com/users/Simonefardella/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-05T19:33:48Z", "updated_at": "2019-07-21T11:03:02Z", "closed_at": "2019-07-21T11:03:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, i can't figure out how this strange issue it's present on my code.\r\n\r\nI've a custom exception handler, and, i what i want, it's that the same job will be retried for a maximum 3 times, and then, if it's still in a fail state, put it on the failed queue.\r\n\r\nThe below code will works, but it's generating a lot of duplicates on my failed queue, why?\r\n```\r\n\r\nimport time\r\nfrom django_rq import get_worker\r\nfrom rq import requeue_job\r\n\r\nMAX_FAILURES = 3\r\n\r\ndef retry_failed_tasks(job, *exc_info):\r\n\r\n    if 'failures' in job.meta:\r\n        job.meta['failures'] += 1\r\n    else:\r\n        job.meta['failures'] = 0\r\n\r\n    if job.meta['failures'] == MAX_FAILURES:\r\n        print(\"Putting Job with id: {0} after: {1} seconds to failed queue, Too many retries\".format(job.id, job.meta['retry_time']))\r\n        job.meta['failures'] = 0\r\n        return True\r\n\r\n\r\n\r\n    if not 'retry_time' in job.meta or 'retry_time' in job.meta and job.meta['retry_time'] == 20:\r\n        job.meta['retry_time'] = 5\r\n    else:\r\n        job.meta['retry_time'] = job.meta['retry_time'] * 2\r\n    job.save_meta()\r\n    time.sleep(job.meta['retry_time'])\r\n\r\n    print(\"Requequing Job with id: {0} after: {1} seconds\".format(job.id, job.meta['retry_time']))\r\n\r\n    worker = get_worker(job.origin)\r\n    worker.move_to_failed_queue(job, *exc_info)\r\n    requeue_job(job.id)\r\n\r\n    return False\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/242", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/242/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/242/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/242/events", "html_url": "https://github.com/rq/django-rq/issues/242", "id": 253233868, "node_id": "MDU6SXNzdWUyNTMyMzM4Njg=", "number": 242, "title": "rq enqueue function: fails with TypeError:function_xxx() takes 2 positional arguments but 3 were given.", "user": {"login": "brajbong", "id": 9849238, "node_id": "MDQ6VXNlcjk4NDkyMzg=", "avatar_url": "https://avatars3.githubusercontent.com/u/9849238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brajbong", "html_url": "https://github.com/brajbong", "followers_url": "https://api.github.com/users/brajbong/followers", "following_url": "https://api.github.com/users/brajbong/following{/other_user}", "gists_url": "https://api.github.com/users/brajbong/gists{/gist_id}", "starred_url": "https://api.github.com/users/brajbong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brajbong/subscriptions", "organizations_url": "https://api.github.com/users/brajbong/orgs", "repos_url": "https://api.github.com/users/brajbong/repos", "events_url": "https://api.github.com/users/brajbong/events{/privacy}", "received_events_url": "https://api.github.com/users/brajbong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-28T06:00:34Z", "updated_at": "2017-08-30T20:56:54Z", "closed_at": "2017-08-30T20:56:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using `django-rq` to enqueue some long running tasks. In my `tasks.py`, I have the following:\r\n\r\n```\r\ndef long_running_task(hash, url, file_path):\r\n\r\n     #doing some work\r\n```\r\n\r\nand in my `views.py`,\r\n\r\n\r\n\r\n```\r\ndef post(self, request, hash, file_path, format=None):\r\n    URL = \"http://127.0.0.1:9000/work/\"\r\n    task = django_rq.enqueue(long_running_task, hash, URL, file_path)\r\n    print(\"job result is: \", task.result)\r\n    return JsonResponse({\"task_result\": task.result})\r\n```\r\n\r\nWhen I run it, however, it fails with the following message-\r\n\r\n`TypeError: long_running_task() takes 2 positional arguments but 3 were given`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/240", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/240/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/240/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/240/events", "html_url": "https://github.com/rq/django-rq/issues/240", "id": 246948607, "node_id": "MDU6SXNzdWUyNDY5NDg2MDc=", "number": 240, "title": "django_rg.enqueue or my_func.delay() don't return immediately", "user": {"login": "EmSyndio", "id": 25390527, "node_id": "MDQ6VXNlcjI1MzkwNTI3", "avatar_url": "https://avatars1.githubusercontent.com/u/25390527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EmSyndio", "html_url": "https://github.com/EmSyndio", "followers_url": "https://api.github.com/users/EmSyndio/followers", "following_url": "https://api.github.com/users/EmSyndio/following{/other_user}", "gists_url": "https://api.github.com/users/EmSyndio/gists{/gist_id}", "starred_url": "https://api.github.com/users/EmSyndio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EmSyndio/subscriptions", "organizations_url": "https://api.github.com/users/EmSyndio/orgs", "repos_url": "https://api.github.com/users/EmSyndio/repos", "events_url": "https://api.github.com/users/EmSyndio/events{/privacy}", "received_events_url": "https://api.github.com/users/EmSyndio/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-01T03:57:26Z", "updated_at": "2017-08-01T13:02:58Z", "closed_at": "2017-08-01T13:02:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Trying to use django_rq\r\n\r\nI have a long running job (5-10min) that I added the `@job('default', timeout=3600)` decorator to\r\n\r\nyet when I call \r\n`my_func.delay(param1=param1, param2=param2)`\r\n\r\nthe job runs synchronously and does not return until done.\r\n\r\nI tried enqueue too, and it does the same.\r\n\r\nI'm trying to run this in a request, which I guess django_rq is designed to do, so I don't get what I'm missing.\r\n\r\nRedis gets `rq:workers` and `rq:worker:id` registered.\r\nI see `rq:job:<id>` also registered when I call the endpoint, so it seems to do it's thing.\r\nYet the worker does not report anything in the log, and the function runs synchronously.\r\n\r\nHow do  I troubleshoot that things are setup properly?\r\n\r\nThanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/239", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/239/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/239/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/239/events", "html_url": "https://github.com/rq/django-rq/issues/239", "id": 245811105, "node_id": "MDU6SXNzdWUyNDU4MTExMDU=", "number": 239, "title": "Using AUTOCOMMIT=False breaks enqueuing jobs from management commands", "user": {"login": "honi", "id": 130202, "node_id": "MDQ6VXNlcjEzMDIwMg==", "avatar_url": "https://avatars1.githubusercontent.com/u/130202?v=4", "gravatar_id": "", "url": "https://api.github.com/users/honi", "html_url": "https://github.com/honi", "followers_url": "https://api.github.com/users/honi/followers", "following_url": "https://api.github.com/users/honi/following{/other_user}", "gists_url": "https://api.github.com/users/honi/gists{/gist_id}", "starred_url": "https://api.github.com/users/honi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/honi/subscriptions", "organizations_url": "https://api.github.com/users/honi/orgs", "repos_url": "https://api.github.com/users/honi/repos", "events_url": "https://api.github.com/users/honi/events{/privacy}", "received_events_url": "https://api.github.com/users/honi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-07-26T18:22:48Z", "updated_at": "2017-08-07T12:32:01Z", "closed_at": "2017-08-07T10:53:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm currently doing this as a work around: I run my workers / management commands with a `WORKER` env var defined, and so in settings.py:\r\n```\r\nRQ = {\r\n    'AUTOCOMMIT': True if bool(environ.get('WORKER')) else False,\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/238", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/238/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/238/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/238/events", "html_url": "https://github.com/rq/django-rq/issues/238", "id": 244715066, "node_id": "MDU6SXNzdWUyNDQ3MTUwNjY=", "number": 238, "title": "Stopping `rqworker` as a service, mid-task", "user": {"login": "amarksteadman", "id": 3310393, "node_id": "MDQ6VXNlcjMzMTAzOTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3310393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amarksteadman", "html_url": "https://github.com/amarksteadman", "followers_url": "https://api.github.com/users/amarksteadman/followers", "following_url": "https://api.github.com/users/amarksteadman/following{/other_user}", "gists_url": "https://api.github.com/users/amarksteadman/gists{/gist_id}", "starred_url": "https://api.github.com/users/amarksteadman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amarksteadman/subscriptions", "organizations_url": "https://api.github.com/users/amarksteadman/orgs", "repos_url": "https://api.github.com/users/amarksteadman/repos", "events_url": "https://api.github.com/users/amarksteadman/events{/privacy}", "received_events_url": "https://api.github.com/users/amarksteadman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-21T16:06:19Z", "updated_at": "2017-08-07T11:28:36Z", "closed_at": "2017-08-07T10:43:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've been using django-rq for a good while now and love it. As one of my projects scales, the big fear I have is that my CI script - which stops and restarts workers as new code is deployed - will force jobs that are mid-way through running, to cancel.\r\n\r\nPresumably in Linux, sending a `stop` using something like Upstart will send a SIGKILL to the worker process. Is this like hitting Ctrl+X or Ctrl+C, whereby usually an iterative job finishes before it recognises the cancellation?\r\n\r\nSorry for such a noob question. I'm just wondering what the best way would be, to ensure a job has finished before the process executing it is killed.\r\n\r\nI know that the process is supposed to be able to pick up on new code changes, but I find that it doesn't quite work as I need it to, as sometimes environment variables change and those changes aren't picked up when the worker reloads in-process (if I'm getting the terminology wrong, I apologise). Hence why I really need to stop and start the process, to make sure new environment variables are picked up.\r\n\r\nThanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/236", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/236/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/236/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/236/events", "html_url": "https://github.com/rq/django-rq/issues/236", "id": 238177231, "node_id": "MDU6SXNzdWUyMzgxNzcyMzE=", "number": 236, "title": "example how to use for bulk_create", "user": {"login": "pmtolk", "id": 398321, "node_id": "MDQ6VXNlcjM5ODMyMQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/398321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmtolk", "html_url": "https://github.com/pmtolk", "followers_url": "https://api.github.com/users/pmtolk/followers", "following_url": "https://api.github.com/users/pmtolk/following{/other_user}", "gists_url": "https://api.github.com/users/pmtolk/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmtolk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmtolk/subscriptions", "organizations_url": "https://api.github.com/users/pmtolk/orgs", "repos_url": "https://api.github.com/users/pmtolk/repos", "events_url": "https://api.github.com/users/pmtolk/events{/privacy}", "received_events_url": "https://api.github.com/users/pmtolk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-06-23T15:31:40Z", "updated_at": "2019-07-21T11:01:23Z", "closed_at": "2019-07-21T11:01:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was wondering if you could provide some guidance on how to use django-rq for a bulk_create operation.\r\n\r\nWhen numerous requests come in to add data to a database, how would you queue the requests model data by using rq to store the data in redis? And then get a bunch at once on a timer and every minute insert all the records?\r\n\r\nhttps://docs.djangoproject.com/en/1.11/ref/models/querysets/#bulk-create\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/234", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/234/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/234/events", "html_url": "https://github.com/rq/django-rq/issues/234", "id": 226775591, "node_id": "MDU6SXNzdWUyMjY3NzU1OTE=", "number": 234, "title": "Jobs Failing", "user": {"login": "ssanthosh243", "id": 5424133, "node_id": "MDQ6VXNlcjU0MjQxMzM=", "avatar_url": "https://avatars1.githubusercontent.com/u/5424133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssanthosh243", "html_url": "https://github.com/ssanthosh243", "followers_url": "https://api.github.com/users/ssanthosh243/followers", "following_url": "https://api.github.com/users/ssanthosh243/following{/other_user}", "gists_url": "https://api.github.com/users/ssanthosh243/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssanthosh243/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssanthosh243/subscriptions", "organizations_url": "https://api.github.com/users/ssanthosh243/orgs", "repos_url": "https://api.github.com/users/ssanthosh243/repos", "events_url": "https://api.github.com/users/ssanthosh243/events{/privacy}", "received_events_url": "https://api.github.com/users/ssanthosh243/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-05-06T14:26:39Z", "updated_at": "2017-05-08T05:29:05Z", "closed_at": "2017-05-08T05:29:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI have been using django-rq in the project and suddenly i started receiving this error when submitting the jobs.\r\n\r\n`Traceback (most recent call last):\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/rq/worker.py\", line 700, in perform_job\r\n    rv = job.perform()\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/rq/job.py\", line 500, in perform\r\n    self._result = self.func(*self.args, **self.kwargs)\r\n  File \"/app/.heroku/python/lib/python2.7/site-packages/django/contrib/auth/decorators.py\", line 22, in _wrapped_view\r\n    if test_func(request.user):\r\nAttributeError: 'unicode' object has no attribute 'user'`\r\n\r\nIf it helps, I have this project running in Heroku. I have verified my project code, and also tried submitting jobs manually. Still the jobs keep failing.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/232", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/232/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/232/events", "html_url": "https://github.com/rq/django-rq/issues/232", "id": 225890599, "node_id": "MDU6SXNzdWUyMjU4OTA1OTk=", "number": 232, "title": "rq and serializer", "user": {"login": "elcolie", "id": 18206728, "node_id": "MDQ6VXNlcjE4MjA2NzI4", "avatar_url": "https://avatars0.githubusercontent.com/u/18206728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elcolie", "html_url": "https://github.com/elcolie", "followers_url": "https://api.github.com/users/elcolie/followers", "following_url": "https://api.github.com/users/elcolie/following{/other_user}", "gists_url": "https://api.github.com/users/elcolie/gists{/gist_id}", "starred_url": "https://api.github.com/users/elcolie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elcolie/subscriptions", "organizations_url": "https://api.github.com/users/elcolie/orgs", "repos_url": "https://api.github.com/users/elcolie/repos", "events_url": "https://api.github.com/users/elcolie/events{/privacy}", "received_events_url": "https://api.github.com/users/elcolie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-03T05:59:12Z", "updated_at": "2017-05-05T03:58:52Z", "closed_at": "2017-05-05T03:58:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have validator in the model. It does validation and then validated data will be saved to database.<br>\r\n\r\n**Problem:**<br>\r\nValidation and commit to database takes very long time. <br>\r\nTherefore I decided to use `Django-rq` to handle the time consuming task<br>\r\nAfter implement the `rq` I got the error as below.\r\n\r\n`views.py`\r\n\r\n    def save_serializer(serializer, request):\r\n        serializer.save()\r\n        if bool(serializer.errors):\r\n            # If it has no errors it will be empty dictionary and bool({}) is False\r\n            msg = serializer.errors\r\n        else:\r\n            msg = serializer.data\r\n    \r\n        email = EmailMessage(\r\n            'Message From jobs.siamsbrand.com',\r\n            msg,\r\n            settings.C0D1UM_SENDER,\r\n            [request.user.email]\r\n        )\r\n        email.send()\r\n    \r\n    \r\n    class PriceListExcelFileList(generics.ListCreateAPIView):\r\n        permission_classes = (DRYPermissions,)\r\n        queryset = PriceListExcelFile.objects.all()\r\n        serializer_class = PriceListExcelFileSerializer\r\n    \r\n        def perform_create(self, serializer, request):\r\n            \"\"\"\r\n            :param serializer: \r\n            :return: \r\n            \"\"\"\r\n            django_rq.enqueue(save_serializer, serializer, request)\r\n    \r\n        def create(self, request, *args, **kwargs):\r\n            \"\"\"\r\n            I need to override the default behaviour because I am going to use rq and let it be an email notification\r\n            :param request: \r\n            :param args: \r\n            :param kwargs: \r\n            :return: \r\n            \"\"\"\r\n            serializer = self.get_serializer(data=request.data)\r\n            serializer.is_valid(raise_exception=True)\r\n            self.perform_create(serializer, request)\r\n            headers = self.get_success_headers(serializer.data)\r\n            data = {\r\n                \"id\": \"Processing\",\r\n                \"file\": \"The response will be email to \" + str(request.user.email) + \" shortly\",\r\n                \"permission\": \"-\"\r\n            }\r\n            return Response(data, status=status.HTTP_201_CREATED, headers=headers)\r\n\r\n**Error Messages:**<br>\r\n\r\n    File \"/Users/el/Code/siam-sbrand/portal/apps/price_list_excel_files/views.py\", line 52, in create\r\n        self.perform_create(serializer, request)\r\n      File \"/Users/el/Code/siam-sbrand/portal/apps/price_list_excel_files/views.py\", line 40, in perform_create\r\n        django_rq.enqueue(save_serializer, serializer, request)\r\n      File \"/Users/el/.pyenv/versions/siam-sbrand/lib/python3.6/site-packages/django_rq/queues.py\", line 208, in enqueue\r\n        return get_queue().enqueue(func, *args, **kwargs)\r\n      File \"/Users/el/.pyenv/versions/siam-sbrand/lib/python3.6/site-packages/rq/queue.py\", line 274, in enqueue\r\n        job_id=job_id, at_front=at_front, meta=meta)\r\n      File \"/Users/el/.pyenv/versions/siam-sbrand/lib/python3.6/site-packages/django_rq/queues.py\", line 60, in enqueue_call\r\n        return self.original_enqueue_call(*args, **kwargs)\r\n      File \"/Users/el/.pyenv/versions/siam-sbrand/lib/python3.6/site-packages/django_rq/queues.py\", line 56, in original_enqueue_call\r\n        return super(DjangoRQ, self).enqueue_call(*args, **kwargs)\r\n      File \"/Users/el/.pyenv/versions/siam-sbrand/lib/python3.6/site-packages/rq/queue.py\", line 227, in enqueue_call\r\n        job = self.enqueue_job(job, at_front=at_front)\r\n      File \"/Users/el/.pyenv/versions/siam-sbrand/lib/python3.6/site-packages/rq/queue.py\", line 292, in enqueue_job\r\n        job.save(pipeline=pipe)\r\n      File \"/Users/el/.pyenv/versions/siam-sbrand/lib/python3.6/site-packages/rq/job.py\", line 465, in save\r\n        connection.hmset(key, self.to_dict())\r\n      File \"/Users/el/.pyenv/versions/siam-sbrand/lib/python3.6/site-packages/rq/job.py\", line 429, in to_dict\r\n        obj['data'] = self.data\r\n      File \"/Users/el/.pyenv/versions/siam-sbrand/lib/python3.6/site-packages/rq/job.py\", line 227, in data\r\n        self._data = dumps(job_tuple)\r\n    TypeError: cannot serialize '_io.BufferedReader' object\r\n    \"POST /api/price-list-excel-files/ HTTP/1.1\" 500 20430", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/231", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/231/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/231/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/231/events", "html_url": "https://github.com/rq/django-rq/issues/231", "id": 225066523, "node_id": "MDU6SXNzdWUyMjUwNjY1MjM=", "number": 231, "title": "Django-rq slow interface", "user": {"login": "lucastamoios", "id": 399327, "node_id": "MDQ6VXNlcjM5OTMyNw==", "avatar_url": "https://avatars2.githubusercontent.com/u/399327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucastamoios", "html_url": "https://github.com/lucastamoios", "followers_url": "https://api.github.com/users/lucastamoios/followers", "following_url": "https://api.github.com/users/lucastamoios/following{/other_user}", "gists_url": "https://api.github.com/users/lucastamoios/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucastamoios/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucastamoios/subscriptions", "organizations_url": "https://api.github.com/users/lucastamoios/orgs", "repos_url": "https://api.github.com/users/lucastamoios/repos", "events_url": "https://api.github.com/users/lucastamoios/events{/privacy}", "received_events_url": "https://api.github.com/users/lucastamoios/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-28T12:29:46Z", "updated_at": "2017-06-23T06:21:15Z", "closed_at": "2017-06-23T06:21:15Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have 4 worker servers orchestrated by docker swarm, running more than 600 workers. I noticed the interface `rq_home` got slow because of the number of workers.\r\n\r\nWhen running the function `django_rq.views.stats` alone, it took me 10 seconds to respond. This part in special seems slower\r\n\r\n    all_workers = Worker.all(connection=connection)\r\n\r\nThis is really annoying me because we depend on the interface. Is there any way to get through this slowness?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/229", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/229/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/229/events", "html_url": "https://github.com/rq/django-rq/issues/229", "id": 219707764, "node_id": "MDU6SXNzdWUyMTk3MDc3NjQ=", "number": 229, "title": "What happens to dependencies when queuing a job in custom exception handler?", "user": {"login": "daphnawegner", "id": 977705, "node_id": "MDQ6VXNlcjk3NzcwNQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/977705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daphnawegner", "html_url": "https://github.com/daphnawegner", "followers_url": "https://api.github.com/users/daphnawegner/followers", "following_url": "https://api.github.com/users/daphnawegner/following{/other_user}", "gists_url": "https://api.github.com/users/daphnawegner/gists{/gist_id}", "starred_url": "https://api.github.com/users/daphnawegner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daphnawegner/subscriptions", "organizations_url": "https://api.github.com/users/daphnawegner/orgs", "repos_url": "https://api.github.com/users/daphnawegner/repos", "events_url": "https://api.github.com/users/daphnawegner/events{/privacy}", "received_events_url": "https://api.github.com/users/daphnawegner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-05T20:38:56Z", "updated_at": "2017-04-06T01:39:03Z", "closed_at": "2017-04-06T01:39:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a custom exception handle that retries jobs a few times before sending them to the fail queue.\r\n\r\nI have noticed that when a job that is caught by the exception handler is a dependant of another job the next job starts without waiting for the first job to finish after it was retried. \r\n\r\nfirst_job = some job\r\nsecond_job = some job which has a dependency to first_job\r\n\r\nwhen first_job is caught by the custom exception handler, second-job immediately starts without waiting for first_job to finish it retry.\r\n\r\nIs there a way to prevent this behaviour and make sure second_job waits for first_job to finish after it is being queued again?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/225", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/225/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/225/events", "html_url": "https://github.com/rq/django-rq/issues/225", "id": 214081972, "node_id": "MDU6SXNzdWUyMTQwODE5NzI=", "number": 225, "title": "Remove args in rqworker", "user": {"login": "rubusidaeus", "id": 25115607, "node_id": "MDQ6VXNlcjI1MTE1NjA3", "avatar_url": "https://avatars2.githubusercontent.com/u/25115607?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rubusidaeus", "html_url": "https://github.com/rubusidaeus", "followers_url": "https://api.github.com/users/rubusidaeus/followers", "following_url": "https://api.github.com/users/rubusidaeus/following{/other_user}", "gists_url": "https://api.github.com/users/rubusidaeus/gists{/gist_id}", "starred_url": "https://api.github.com/users/rubusidaeus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rubusidaeus/subscriptions", "organizations_url": "https://api.github.com/users/rubusidaeus/orgs", "repos_url": "https://api.github.com/users/rubusidaeus/repos", "events_url": "https://api.github.com/users/rubusidaeus/events{/privacy}", "received_events_url": "https://api.github.com/users/rubusidaeus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-03-14T14:04:13Z", "updated_at": "2017-03-15T13:48:53Z", "closed_at": "2017-03-15T13:48:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "With django 1.9.7, the default queue is always selected.\r\n\r\npython manage.py rqworker premium\r\n14:42:21 Registering birth of worker rubusidaeus.21159\r\n14:42:21 RQ worker 'rq:worker:rubusidaeus.21159' started, version 0.7.1\r\n14:42:21 Cleaning registries for queue: default\r\n14:42:21\r\n14:42:21 *** Listening on default...\r\n14:42:21 Sent heartbeat to prevent worker timeout. Next one should arrive within 420 seconds.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/223", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/223/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/223/events", "html_url": "https://github.com/rq/django-rq/issues/223", "id": 212819931, "node_id": "MDU6SXNzdWUyMTI4MTk5MzE=", "number": 223, "title": "Paging through Registry jobs does not work correctly", "user": {"login": "smaccona", "id": 394952, "node_id": "MDQ6VXNlcjM5NDk1Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/394952?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smaccona", "html_url": "https://github.com/smaccona", "followers_url": "https://api.github.com/users/smaccona/followers", "following_url": "https://api.github.com/users/smaccona/following{/other_user}", "gists_url": "https://api.github.com/users/smaccona/gists{/gist_id}", "starred_url": "https://api.github.com/users/smaccona/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smaccona/subscriptions", "organizations_url": "https://api.github.com/users/smaccona/orgs", "repos_url": "https://api.github.com/users/smaccona/repos", "events_url": "https://api.github.com/users/smaccona/events{/privacy}", "received_events_url": "https://api.github.com/users/smaccona/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-08T18:40:46Z", "updated_at": "2017-03-15T12:23:41Z", "closed_at": "2017-03-10T00:06:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the Django RQ views, when there are multiple pages of jobs in any of the RQ registries (finished jobs, started jobs, deferred jobs), paging through these jobs in the UI does not work correctly.\r\n\r\nThis is easily reproducible in any system where there is moderately high job throughput (say a few hundred jobs in the `FinishedJobRegistry` at any given point in time) by examining the finished jobs view for a queue. The first page displays fine, but subsequent pages display only one job (for page 2) or none at all (for all subsequent pages), though the number of pages is listed correctly. Here are pages 2 and 3 for the finished jobs in my `default` queue on one of our production systems right now:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/394952/23718198/93fe596e-0404-11e7-944c-8669ebe31014.png)\r\n\r\n![image](https://cloud.githubusercontent.com/assets/394952/23718246/b80bfa28-0404-11e7-84b7-a3842eba620a.png)\r\n\r\nThis is happening because the function signatures in RQ for `Queue.get_job_ids` / `Queue.get_jobs` and `BaseRegistry.get_job_ids` are different. Below are the relevant signatures from RQ.\r\n\r\nhttps://github.com/nvie/rq/blob/master/rq/queue.py#L121: \r\n```python\r\ndef get_job_ids(self, offset=0, length=-1):\r\n```\r\n\r\nhttps://github.com/nvie/rq/blob/master/rq/queue.py#L131:\r\n```python\r\ndef get_jobs(self, offset=0, length=-1):\r\n```\r\n\r\nhttps://github.com/nvie/rq/blob/master/rq/registry.py#L57\r\n```\r\ndef get_job_ids(self, start=0, end=-1):\r\n```\r\n\r\nSo `Queue.get_jobs` and `Queue.get_job_ids` expect an offset and a length when requesting jobs, and `BaseRegistry.get_job_ids` expects a start point (same thing as offset) and an end point (not at all the same as a length), but Django RQ uses a length when calling both - e.g. here's the line which gets the jobs for a particular page on the `FinishedJobsRegistry` for a queue:\r\n\r\nhttps://github.com/ui/django-rq/blob/master/django_rq/views.py#L107\r\n```python\r\njob_ids = registry.get_job_ids(offset, items_per_page)\r\n```\r\n\r\nThe obvious way to fix this is to change the calls in Django RQ to correctly match the signature for RQ's `BaseRegistry.get_job_ids`. There is an argument to be made that RQ's `BaseRegistry.get_job_ids` signature should be changed to be consistent with `Queue.get_job_ids`, but that could be a breaking change for other downstream apps or libraries that are depending on the current signature. @selwin, if you agree with changing this in Django RQ, I will make a PR.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/222", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/222/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/222/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/222/events", "html_url": "https://github.com/rq/django-rq/issues/222", "id": 212417417, "node_id": "MDU6SXNzdWUyMTI0MTc0MTc=", "number": 222, "title": "add python 3.5 compatibility to PyPI", "user": {"login": "jberends", "id": 1391724, "node_id": "MDQ6VXNlcjEzOTE3MjQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/1391724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jberends", "html_url": "https://github.com/jberends", "followers_url": "https://api.github.com/users/jberends/followers", "following_url": "https://api.github.com/users/jberends/following{/other_user}", "gists_url": "https://api.github.com/users/jberends/gists{/gist_id}", "starred_url": "https://api.github.com/users/jberends/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jberends/subscriptions", "organizations_url": "https://api.github.com/users/jberends/orgs", "repos_url": "https://api.github.com/users/jberends/repos", "events_url": "https://api.github.com/users/jberends/events{/privacy}", "received_events_url": "https://api.github.com/users/jberends/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-03-07T12:24:43Z", "updated_at": "2017-03-15T12:19:26Z", "closed_at": "2017-03-15T12:19:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Add in the trove classifiers the python 3.5 compatibility.\r\n\r\n(just for completeness sake)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/221", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/221/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/221/events", "html_url": "https://github.com/rq/django-rq/issues/221", "id": 209674342, "node_id": "MDU6SXNzdWUyMDk2NzQzNDI=", "number": 221, "title": "tests fail with working runtime given worker or async=false", "user": {"login": "davidthewatson", "id": 150892, "node_id": "MDQ6VXNlcjE1MDg5Mg==", "avatar_url": "https://avatars1.githubusercontent.com/u/150892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidthewatson", "html_url": "https://github.com/davidthewatson", "followers_url": "https://api.github.com/users/davidthewatson/followers", "following_url": "https://api.github.com/users/davidthewatson/following{/other_user}", "gists_url": "https://api.github.com/users/davidthewatson/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidthewatson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidthewatson/subscriptions", "organizations_url": "https://api.github.com/users/davidthewatson/orgs", "repos_url": "https://api.github.com/users/davidthewatson/repos", "events_url": "https://api.github.com/users/davidthewatson/events{/privacy}", "received_events_url": "https://api.github.com/users/davidthewatson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-23T06:21:26Z", "updated_at": "2019-07-21T11:00:43Z", "closed_at": "2019-07-21T11:00:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using django-rq==0.9.4.\r\n\r\nI have test code such as this:\r\n\r\n    from django.test import TestCase\r\n    from django.core.management import call_command\r\n    from django_rq import get_worker\r\n\r\n    from crawl.models import FileResource, JsonResource\r\n\r\n\r\n    class LocalFeedCommandTestCase(TestCase):\r\n        fixtures = ['apartmentlistfeed', 'apartmentlistsourcetypes']\r\n\r\n        def test_ingest_feeds(self):\r\n            call_command('ingest_local_feeds')\r\n            file_resource = FileResource.objects.get()\r\n            self.assertIsInstance(file_resource, FileResource)\r\n            json_resource = JsonResource.objects.get()\r\n            self.assertIsInstance(json_resource, JsonResource)\r\n\r\nThe code fails on the file_resource line if I use the method under \"Synchronous mode\" in the README or it fails on the json_resource line if I use the \"Testing tip\". The code runs without exception at normal runtime.\r\n\r\nIs there any testing method that will work under django 1.10? \r\n\r\nMy @job functions are fired with the delay method from django signals and look like this:\r\n\r\n    @job\r\n    def process_feed_file(instance):\r\n        parsed_json = json.loads(instance.source_file.read().decode('utf-8'))\r\n        for p in parsed_json['properties']:\r\n            try:\r\n                json_item = JsonResourceItem()\r\n                json_item['file_resource'] = instance\r\n                json_item['json'] = p\r\n                json_item.save()\r\n                logging.info('SAVED JSON ITEM: {}'.format(instance))\r\n            except Exception as e:\r\n                logging.info('EXCEPTION: {}'.format(e))\r\n                raise DropItem\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/218", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/218/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/218/events", "html_url": "https://github.com/rq/django-rq/issues/218", "id": 206745795, "node_id": "MDU6SXNzdWUyMDY3NDU3OTU=", "number": 218, "title": "command to cleanup a queue", "user": {"login": "depaolim", "id": 443745, "node_id": "MDQ6VXNlcjQ0Mzc0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/443745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/depaolim", "html_url": "https://github.com/depaolim", "followers_url": "https://api.github.com/users/depaolim/followers", "following_url": "https://api.github.com/users/depaolim/following{/other_user}", "gists_url": "https://api.github.com/users/depaolim/gists{/gist_id}", "starred_url": "https://api.github.com/users/depaolim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/depaolim/subscriptions", "organizations_url": "https://api.github.com/users/depaolim/orgs", "repos_url": "https://api.github.com/users/depaolim/repos", "events_url": "https://api.github.com/users/depaolim/events{/privacy}", "received_events_url": "https://api.github.com/users/depaolim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-02-10T09:22:38Z", "updated_at": "2017-03-03T16:37:12Z", "closed_at": "2017-03-03T16:37:12Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Create a new command ```rqclean``` that removes all queue jobs for the queue specified in the command line", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/216", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/216/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/216/events", "html_url": "https://github.com/rq/django-rq/issues/216", "id": 205825391, "node_id": "MDU6SXNzdWUyMDU4MjUzOTE=", "number": 216, "title": "If the worker loses the DB connection it is not able to reconnect and you must restart it", "user": {"login": "depaolim", "id": 443745, "node_id": "MDQ6VXNlcjQ0Mzc0NQ==", "avatar_url": "https://avatars2.githubusercontent.com/u/443745?v=4", "gravatar_id": "", "url": "https://api.github.com/users/depaolim", "html_url": "https://github.com/depaolim", "followers_url": "https://api.github.com/users/depaolim/followers", "following_url": "https://api.github.com/users/depaolim/following{/other_user}", "gists_url": "https://api.github.com/users/depaolim/gists{/gist_id}", "starred_url": "https://api.github.com/users/depaolim/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/depaolim/subscriptions", "organizations_url": "https://api.github.com/users/depaolim/orgs", "repos_url": "https://api.github.com/users/depaolim/repos", "events_url": "https://api.github.com/users/depaolim/events{/privacy}", "received_events_url": "https://api.github.com/users/depaolim/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2017-02-07T08:59:03Z", "updated_at": "2017-03-15T12:09:09Z", "closed_at": "2017-03-15T12:09:09Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "If the worker loses the DB connection it isn't able to reconnect and you must restart it\r\n\r\nWorkers should adopt the same DB connection/reconnection policy that Django uses in his request/response cycle\r\n\r\nEvery time a django-rq worker performs a job, the worker should assure the database-orm-connections are in a valid state.\r\nThis policy is enforced by django in its request/response cycle via the function ```close_old_connections```\r\n\r\nLook at:\r\nhttps://github.com/django/django/blob/master/django/db/__init__.py\r\n\r\nSimilary, in django-rq worker, the ```close_old_connections``` should be called before and after the execution of each job\r\n\r\n(see also #49 for some preliminary thoughts)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/212", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/212/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/212/events", "html_url": "https://github.com/rq/django-rq/issues/212", "id": 203647946, "node_id": "MDU6SXNzdWUyMDM2NDc5NDY=", "number": 212, "title": "Custom Exception Handler are not beeing called", "user": {"login": "fchevitarese", "id": 32967, "node_id": "MDQ6VXNlcjMyOTY3", "avatar_url": "https://avatars0.githubusercontent.com/u/32967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fchevitarese", "html_url": "https://github.com/fchevitarese", "followers_url": "https://api.github.com/users/fchevitarese/followers", "following_url": "https://api.github.com/users/fchevitarese/following{/other_user}", "gists_url": "https://api.github.com/users/fchevitarese/gists{/gist_id}", "starred_url": "https://api.github.com/users/fchevitarese/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fchevitarese/subscriptions", "organizations_url": "https://api.github.com/users/fchevitarese/orgs", "repos_url": "https://api.github.com/users/fchevitarese/repos", "events_url": "https://api.github.com/users/fchevitarese/events{/privacy}", "received_events_url": "https://api.github.com/users/fchevitarese/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-01-27T14:26:12Z", "updated_at": "2017-01-27T14:27:10Z", "closed_at": "2017-01-27T14:27:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there. \r\n\r\nIdk if im doing anything wrong, but , i've configurated my custom exception handler on settings, but still, the function is not beeing called. \r\n\r\nFor the records, im using version 0.7.0\r\nI tried to upgrade but it forces me to use a newer version of Django, and it's a legacy app. \r\n\r\nAnyway, there goes:\r\nI've created a module with my custom handler, that just write a file for now, but will do some stuff later on, as long as i get it working :P \r\n\r\nThis function lives in:\r\ndry.exception_handler\r\nhttps://gist.github.com/fchevitarese/b1ddfa7dbc2ea615621ece53bfe94e6b\r\n\r\nIn settings:\r\nRQ_EXCEPTION_HANDLERS = ['dry.exception_handler.custom_exception_handler']\r\n\r\nAny help will be appreciated ;)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/209", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/209/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/209/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/209/events", "html_url": "https://github.com/rq/django-rq/issues/209", "id": 199752516, "node_id": "MDU6SXNzdWUxOTk3NTI1MTY=", "number": 209, "title": "Heartbeat spams even at --verbosity=0", "user": {"login": "jleclanche", "id": 235410, "node_id": "MDQ6VXNlcjIzNTQxMA==", "avatar_url": "https://avatars1.githubusercontent.com/u/235410?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jleclanche", "html_url": "https://github.com/jleclanche", "followers_url": "https://api.github.com/users/jleclanche/followers", "following_url": "https://api.github.com/users/jleclanche/following{/other_user}", "gists_url": "https://api.github.com/users/jleclanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/jleclanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jleclanche/subscriptions", "organizations_url": "https://api.github.com/users/jleclanche/orgs", "repos_url": "https://api.github.com/users/jleclanche/repos", "events_url": "https://api.github.com/users/jleclanche/events{/privacy}", "received_events_url": "https://api.github.com/users/jleclanche/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-01-10T07:40:41Z", "updated_at": "2017-03-15T12:23:01Z", "closed_at": "2017-03-15T12:23:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "The heartbeat() method of rq does `self.log.debug(\"Sent heartbeat to prevent worker timeout.\" ...)`.\r\n\r\nDespite this going into `debug`, `./manage.py rqworker --verbosity=0` picks up on it. Easy to replicate with `./manage.py rqworker --worker-ttl 1 --verbosity 0`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/205", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/205/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/205/events", "html_url": "https://github.com/rq/django-rq/issues/205", "id": 196048798, "node_id": "MDU6SXNzdWUxOTYwNDg3OTg=", "number": 205, "title": "Could not resolve a Redis connection", "user": {"login": "tnedev", "id": 4305270, "node_id": "MDQ6VXNlcjQzMDUyNzA=", "avatar_url": "https://avatars3.githubusercontent.com/u/4305270?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tnedev", "html_url": "https://github.com/tnedev", "followers_url": "https://api.github.com/users/tnedev/followers", "following_url": "https://api.github.com/users/tnedev/following{/other_user}", "gists_url": "https://api.github.com/users/tnedev/gists{/gist_id}", "starred_url": "https://api.github.com/users/tnedev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tnedev/subscriptions", "organizations_url": "https://api.github.com/users/tnedev/orgs", "repos_url": "https://api.github.com/users/tnedev/repos", "events_url": "https://api.github.com/users/tnedev/events{/privacy}", "received_events_url": "https://api.github.com/users/tnedev/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-16T12:28:27Z", "updated_at": "2016-12-16T14:34:15Z", "closed_at": "2016-12-16T14:30:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nI'm trying to enqueue a dependent function, but django_rq raises an exception: Could not resolve a Redis connection\r\n\r\nAny thoughts?\r\n\r\n`import django_rq\r\nqueue = django_rq.get_queue('default')\r\njob = queue.enqueue(func)\r\nqueue.enqueue(func2, depends_on=job)   # raises the exception\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/rq/django-rq/issues/203", "repository_url": "https://api.github.com/repos/rq/django-rq", "labels_url": "https://api.github.com/repos/rq/django-rq/issues/203/labels{/name}", "comments_url": "https://api.github.com/repos/rq/django-rq/issues/203/comments", "events_url": "https://api.github.com/repos/rq/django-rq/issues/203/events", "html_url": "https://github.com/rq/django-rq/issues/203", "id": 188580243, "node_id": "MDU6SXNzdWUxODg1ODAyNDM=", "number": 203, "title": "Release 0.9.3 is not a patch release!", "user": {"login": "samuelcolvin", "id": 4039449, "node_id": "MDQ6VXNlcjQwMzk0NDk=", "avatar_url": "https://avatars3.githubusercontent.com/u/4039449?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samuelcolvin", "html_url": "https://github.com/samuelcolvin", "followers_url": "https://api.github.com/users/samuelcolvin/followers", "following_url": "https://api.github.com/users/samuelcolvin/following{/other_user}", "gists_url": "https://api.github.com/users/samuelcolvin/gists{/gist_id}", "starred_url": "https://api.github.com/users/samuelcolvin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samuelcolvin/subscriptions", "organizations_url": "https://api.github.com/users/samuelcolvin/orgs", "repos_url": "https://api.github.com/users/samuelcolvin/repos", "events_url": "https://api.github.com/users/samuelcolvin/events{/privacy}", "received_events_url": "https://api.github.com/users/samuelcolvin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-10T18:14:31Z", "updated_at": "2016-11-14T01:51:51Z", "closed_at": "2016-11-14T01:51:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Python has a sensible and well document versioning system: Major, Minor, Patch versions. See [PEP 440](https://www.python.org/dev/peps/pep-0440/) for details.\r\n\r\nThis exists for a reason, please heed it.\r\n\r\n0.9.3 is not a patch release, it changes a whole raft of things and effects usage in a numerous ways. 16 files are change with 186+, 26- changes - this is a new minor version at least.\r\n\r\nIt would also be good if the change log accurately explained the potential consequences of changes, particularly for minor and patch releases.\r\n\r\n# What snapped?\r\n\r\nYou made what presumably felt like a small change which broke our tests in a fairly hard to diagnose way:\r\n\r\nadding to `rqworker.py`:\r\n```python\r\n        parser.add_argument('queues', nargs='*', type=str,\r\n                            help='The queues to work on, separated by space')\r\n```\r\n\r\nMeant that `call_command('rqworker', 'high', 'default', 'low')` suddenly only actually ran the `default` queue (at least on dj 1.8).\r\n\r\nTo fix this we needed to change it to `call_command('rqworker', queues=['high', 'default', 'low'])` but this change of usage would not be expected from a patch release and was not clear from the change log.\r\n\r\n`</grumble>`\r\n\r\nSorry to sound negative, thanks again for rq and django-rq.", "performed_via_github_app": null, "score": 1.0}]}