{"total_count": 195, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/aleju/imgaug/issues/708", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/708/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/708/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/708/events", "html_url": "https://github.com/aleju/imgaug/issues/708", "id": 676147422, "node_id": "MDU6SXNzdWU2NzYxNDc0MjI=", "number": 708, "title": "AssertionError: Expected number of channels to be three, got 400 channels (shape (4, 400, 400)).", "user": {"login": "nachiketmore99", "id": 26516508, "node_id": "MDQ6VXNlcjI2NTE2NTA4", "avatar_url": "https://avatars2.githubusercontent.com/u/26516508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nachiketmore99", "html_url": "https://github.com/nachiketmore99", "followers_url": "https://api.github.com/users/nachiketmore99/followers", "following_url": "https://api.github.com/users/nachiketmore99/following{/other_user}", "gists_url": "https://api.github.com/users/nachiketmore99/gists{/gist_id}", "starred_url": "https://api.github.com/users/nachiketmore99/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nachiketmore99/subscriptions", "organizations_url": "https://api.github.com/users/nachiketmore99/orgs", "repos_url": "https://api.github.com/users/nachiketmore99/repos", "events_url": "https://api.github.com/users/nachiketmore99/events{/privacy}", "received_events_url": "https://api.github.com/users/nachiketmore99/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-08-10T13:43:09Z", "updated_at": "2020-08-12T10:27:50Z", "closed_at": "2020-08-12T10:27:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "/usr/local/lib/python3.6/dist-packages/imgaug/augmenters/base.py:60: SuspiciousSingleImageShapeWarning: You provided a numpy array of shape (4, 400, 400) as a single-image augmentation input, which was interpreted as (H, W, C). The last dimension however has a size of >=32, which indicates that you provided a multi-image array with shape (N, H, W) instead. If that is the case, you should use e.g. augmenter(imageS=<your input>) or augment_imageS(<your input>). Otherwise your multi-image input will be interpreted as a single image during augmentation.\r\n  category=SuspiciousSingleImageShapeWarning)\r\n\r\nI am getting this error please help, it was working fine before\r\nI am referring to this tutorial: https://towardsdatascience.com/how-to-create-your-own-custom-object-detector-766cb11ccd1c", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/706", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/706/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/706/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/706/events", "html_url": "https://github.com/aleju/imgaug/issues/706", "id": 668492745, "node_id": "MDU6SXNzdWU2Njg0OTI3NDU=", "number": 706, "title": "how to know which augmenters are used?", "user": {"login": "TyrionChou", "id": 25079938, "node_id": "MDQ6VXNlcjI1MDc5OTM4", "avatar_url": "https://avatars3.githubusercontent.com/u/25079938?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TyrionChou", "html_url": "https://github.com/TyrionChou", "followers_url": "https://api.github.com/users/TyrionChou/followers", "following_url": "https://api.github.com/users/TyrionChou/following{/other_user}", "gists_url": "https://api.github.com/users/TyrionChou/gists{/gist_id}", "starred_url": "https://api.github.com/users/TyrionChou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TyrionChou/subscriptions", "organizations_url": "https://api.github.com/users/TyrionChou/orgs", "repos_url": "https://api.github.com/users/TyrionChou/repos", "events_url": "https://api.github.com/users/TyrionChou/events{/privacy}", "received_events_url": "https://api.github.com/users/TyrionChou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-30T08:33:55Z", "updated_at": "2020-08-03T04:16:53Z", "closed_at": "2020-08-03T04:16:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi~,\r\n    i want to know when i use (Someof), how to know which augmenters are used?\r\n    thank you very much!\r\n    and i got a problem it seem like that\r\n    error: OpenCV(4.1.1) C:\\projects\\opencv-python\\opencv\\modules\\core\\src\\alloc.app:72:error(-4:Insufficient memory) Failed to allocate ***** bytes in function 'cv::OutofMemoryError'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/703", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/703/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/703/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/703/events", "html_url": "https://github.com/aleju/imgaug/issues/703", "id": 664662021, "node_id": "MDU6SXNzdWU2NjQ2NjIwMjE=", "number": 703, "title": "ValueError: Got dtype 'float64', which is a forbidden dtype", "user": {"login": "MeteoRex11", "id": 46354723, "node_id": "MDQ6VXNlcjQ2MzU0NzIz", "avatar_url": "https://avatars3.githubusercontent.com/u/46354723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MeteoRex11", "html_url": "https://github.com/MeteoRex11", "followers_url": "https://api.github.com/users/MeteoRex11/followers", "following_url": "https://api.github.com/users/MeteoRex11/following{/other_user}", "gists_url": "https://api.github.com/users/MeteoRex11/gists{/gist_id}", "starred_url": "https://api.github.com/users/MeteoRex11/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MeteoRex11/subscriptions", "organizations_url": "https://api.github.com/users/MeteoRex11/orgs", "repos_url": "https://api.github.com/users/MeteoRex11/repos", "events_url": "https://api.github.com/users/MeteoRex11/events{/privacy}", "received_events_url": "https://api.github.com/users/MeteoRex11/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-07-23T17:53:58Z", "updated_at": "2020-07-30T08:43:13Z", "closed_at": "2020-07-30T08:43:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am using np.ndarrays to train a model using augmented images, but I keep getting the following error:\r\n\r\n`ValueError: Got dtype 'float64', which is a forbidden dtype (bool, uint16, uint32, uint64, uint128, uint256, int8, int16, int32, int64, int128, int256, float16, float32, float64, float96, float128, float256).\r\n`\r\nWhat is the correct dtype for the imgaug model?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/699", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/699/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/699/events", "html_url": "https://github.com/aleju/imgaug/issues/699", "id": 655328397, "node_id": "MDU6SXNzdWU2NTUzMjgzOTc=", "number": 699, "title": "How can use aug.augment_batches  with polygon?", "user": {"login": "ibrahimLearning", "id": 48087127, "node_id": "MDQ6VXNlcjQ4MDg3MTI3", "avatar_url": "https://avatars0.githubusercontent.com/u/48087127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibrahimLearning", "html_url": "https://github.com/ibrahimLearning", "followers_url": "https://api.github.com/users/ibrahimLearning/followers", "following_url": "https://api.github.com/users/ibrahimLearning/following{/other_user}", "gists_url": "https://api.github.com/users/ibrahimLearning/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibrahimLearning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibrahimLearning/subscriptions", "organizations_url": "https://api.github.com/users/ibrahimLearning/orgs", "repos_url": "https://api.github.com/users/ibrahimLearning/repos", "events_url": "https://api.github.com/users/ibrahimLearning/events{/privacy}", "received_events_url": "https://api.github.com/users/ibrahimLearning/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-07-12T04:23:15Z", "updated_at": "2020-07-12T05:46:44Z", "closed_at": "2020-07-12T05:46:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "@aleju @wkentaro \r\nThank you very much for this nice repo. \r\nI know how to use imgaug for polygon, as for example:\r\n```\r\nExample: Augment Images and Polygons\r\nimport numpy as np\r\nimport imgaug as ia\r\nimport imgaug.augmenters as iaa\r\n\r\nimages = np.zeros((2, 128, 128, 3), dtype=np.uint8)  # two example images\r\nimages[:, 64, 64, :] = 255\r\npolygons = [\r\n    [ia.Polygon([(10.5, 10.5), (50.5, 10.5), (50.5, 50.5)])],\r\n    [ia.Polygon([(0.0, 64.5), (64.5, 0.0), (128.0, 128.0), (64.5, 128.0)])]\r\n]\r\n\r\nseq = iaa.Sequential([\r\n    iaa.AdditiveGaussianNoise(scale=0.05*255),\r\n    iaa.Affine(translate_px={\"x\": (1, 5)})\r\n])\r\nimages_aug, polygons_aug = seq(images=images, polygons=polygons)\r\n```\r\n\r\nI want to apply augmentation using augment_batches. how can I use image and polygon together?\r\nhttps://nbviewer.jupyter.org/github/aleju/imgaug-doc/blob/master/notebooks/A03%20-%20Multicore%20Augmentation.ipynb", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/698", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/698/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/698/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/698/events", "html_url": "https://github.com/aleju/imgaug/issues/698", "id": 654750609, "node_id": "MDU6SXNzdWU2NTQ3NTA2MDk=", "number": 698, "title": "Inconsistent behaviour of imgaug", "user": {"login": "pritul2", "id": 41751718, "node_id": "MDQ6VXNlcjQxNzUxNzE4", "avatar_url": "https://avatars1.githubusercontent.com/u/41751718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pritul2", "html_url": "https://github.com/pritul2", "followers_url": "https://api.github.com/users/pritul2/followers", "following_url": "https://api.github.com/users/pritul2/following{/other_user}", "gists_url": "https://api.github.com/users/pritul2/gists{/gist_id}", "starred_url": "https://api.github.com/users/pritul2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pritul2/subscriptions", "organizations_url": "https://api.github.com/users/pritul2/orgs", "repos_url": "https://api.github.com/users/pritul2/repos", "events_url": "https://api.github.com/users/pritul2/events{/privacy}", "received_events_url": "https://api.github.com/users/pritul2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-07-10T12:36:15Z", "updated_at": "2020-08-01T13:06:36Z", "closed_at": "2020-08-01T13:06:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "### For Fliplr \r\nFirst time When I applied the fliplr as follows\r\n![image](https://user-images.githubusercontent.com/41751718/87153642-6cf46500-c2d5-11ea-8741-234749ae346d.png)\r\n-------------------------------------------------------------------------------------------\r\nSecond time I again rerun the fliplr then it works perfectly fine\r\n![image](https://user-images.githubusercontent.com/41751718/87153688-7da4db00-c2d5-11ea-91a0-c010304b232a.png)\r\n-------------------------------------------------------------------------------------------\r\nThird time I changed the value of p=1.0 then I do not observe any change\r\n![image](https://user-images.githubusercontent.com/41751718/87153729-8dbcba80-c2d5-11ea-84a2-b09af0ce8618.png)\r\n-------------------------------------------------------------------------------------------\r\n### For Channel Shuffle\r\n--------------------------------------------------------------------------------------------------------\r\nFirst time When I applied the ChannelShuffle\r\n![image](https://user-images.githubusercontent.com/41751718/87155600-d75ad480-c2d8-11ea-9538-851034ffebb7.png)\r\n\r\n--------------------------------------------------------------------------------------------------------\r\nSecond time when I applied the channel shuffle\r\n![image](https://user-images.githubusercontent.com/41751718/87155107-015fc700-c2d8-11ea-88fa-21a01f12451b.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/697", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/697/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/697/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/697/events", "html_url": "https://github.com/aleju/imgaug/issues/697", "id": 652710249, "node_id": "MDU6SXNzdWU2NTI3MTAyNDk=", "number": 697, "title": "Can't pass array of masks to seq", "user": {"login": "MikitaBelikau", "id": 20436051, "node_id": "MDQ6VXNlcjIwNDM2MDUx", "avatar_url": "https://avatars0.githubusercontent.com/u/20436051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MikitaBelikau", "html_url": "https://github.com/MikitaBelikau", "followers_url": "https://api.github.com/users/MikitaBelikau/followers", "following_url": "https://api.github.com/users/MikitaBelikau/following{/other_user}", "gists_url": "https://api.github.com/users/MikitaBelikau/gists{/gist_id}", "starred_url": "https://api.github.com/users/MikitaBelikau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MikitaBelikau/subscriptions", "organizations_url": "https://api.github.com/users/MikitaBelikau/orgs", "repos_url": "https://api.github.com/users/MikitaBelikau/repos", "events_url": "https://api.github.com/users/MikitaBelikau/events{/privacy}", "received_events_url": "https://api.github.com/users/MikitaBelikau/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-07T22:46:42Z", "updated_at": "2020-07-13T22:12:12Z", "closed_at": "2020-07-13T22:11:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "I want to pass image and array of corresponding binary masks to seq. Each mask file has only 1 mask.\r\n\r\nCode\r\n\r\n`\r\n    img = imread(imagePath)\r\n\r\n    img = resize(img, (IMAGE_HEIGHT, IMAGE_WIDTH), mode='constant', preserve_range=True)\r\n    img = np.expand_dims(img, axis=-1)\r\n    img = np.expand_dims(img, axis=0)\r\n\r\n    masksFolderPath = os.path.join(path, 'masks')\r\n    masksCount = len(os.listdir(masksFolderPath)) \r\n\r\n    mask = np.zeros((masksCount, IMAGE_HEIGHT, IMAGE_WIDTH, 1), dtype=np.int)\r\n\r\n    i = 0\r\n    for mask_file in next(os.walk(masksFolderPath))[2]:\r\n        maskPath = os.path.join(masksFolderPath, mask_file)\r\n        mask_ = imread(maskPath)\r\n\r\n        ...................................\r\n\r\n        mask_ = np.expand_dims(mask_, axis=-1)\r\n\r\n        #mask = np.maximum(mask, mask_) # accumulate all masks in one image\r\n        mask[i, :, :] = mask_\r\n        i += 1\r\n\r\n\r\n    #mask = np.expand_dims(mask, axis=0)\r\n    mask = np.array(mask, dtype=np.int)\r\n\r\n    i = 0\r\n    for i in range(AUGMANTED_IMAGES_NUMBER):\r\n        augmented_image, augmented_mask = seq(images=img, segmentation_maps=mask)\r\n` \r\n\r\nat the last line I got \r\n\r\n\"Tried to convert data of form 'array[int]' to 'List[SegmentationMapsOnImage]'. This required exactly 2 corresponding image shapes, but instead 1 were provided. This can happen e.g. if more images were provided than corresponding augmentables, e.g. 10 images but only 5 segmentation maps. It can also happen if there was a misunderstanding about how an augmentable input would be parsed. E.g. if a list of N (x,y)-tuples was provided as keypoints and the expectation was that this would be parsed as one keypoint per image for N images, but instead it was parsed as N keypoints on 1 image (i.e. 'shapes' would have to contain 1 shape, but N would be provided). To avoid this, it is recommended to provide imgaug standard classes, e.g. KeypointsOnImage for keypoints instead of lists of tuples.\"\r\n\r\nI can not understand why this is happening, cause I am passing mask in a correct shape. \r\nCan you, please, help me?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/692", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/692/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/692/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/692/events", "html_url": "https://github.com/aleju/imgaug/issues/692", "id": 642457682, "node_id": "MDU6SXNzdWU2NDI0NTc2ODI=", "number": 692, "title": "pip install will only download version 0.2.6", "user": {"login": "jklemisch", "id": 14991438, "node_id": "MDQ6VXNlcjE0OTkxNDM4", "avatar_url": "https://avatars2.githubusercontent.com/u/14991438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jklemisch", "html_url": "https://github.com/jklemisch", "followers_url": "https://api.github.com/users/jklemisch/followers", "following_url": "https://api.github.com/users/jklemisch/following{/other_user}", "gists_url": "https://api.github.com/users/jklemisch/gists{/gist_id}", "starred_url": "https://api.github.com/users/jklemisch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jklemisch/subscriptions", "organizations_url": "https://api.github.com/users/jklemisch/orgs", "repos_url": "https://api.github.com/users/jklemisch/repos", "events_url": "https://api.github.com/users/jklemisch/events{/privacy}", "received_events_url": "https://api.github.com/users/jklemisch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-20T22:39:11Z", "updated_at": "2020-06-21T16:30:47Z", "closed_at": "2020-06-21T16:30:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "From the log, it looks like v4 is the latest version.  import imgaug; print(imgaug.__version__) shows version 0.2.6.  I've tried it downloading it as well and loading it into kaggle as a dataset and that shows v 0.2.6.  Is this correct?  \r\n\r\nI'm getting a \"'Sequential' object is not callable\" error. \r\n\r\n`seq = iaa.Sequential([\r\n    iaa.Crop(px=(1, 16), keep_size=False),\r\n    iaa.Fliplr(0.5),\r\n    iaa.GaussianBlur(sigma=(0, 3.0))\r\n])\r\naug=seq(images=img)`\r\n\r\nThank you for your assistance,\r\n\r\nJennifer", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/691", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/691/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/691/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/691/events", "html_url": "https://github.com/aleju/imgaug/issues/691", "id": 641541510, "node_id": "MDU6SXNzdWU2NDE1NDE1MTA=", "number": 691, "title": "Batch processing with multiple Bounding Boxes", "user": {"login": "johnny-mueller", "id": 64581980, "node_id": "MDQ6VXNlcjY0NTgxOTgw", "avatar_url": "https://avatars2.githubusercontent.com/u/64581980?v=4", "gravatar_id": "", "url": "https://api.github.com/users/johnny-mueller", "html_url": "https://github.com/johnny-mueller", "followers_url": "https://api.github.com/users/johnny-mueller/followers", "following_url": "https://api.github.com/users/johnny-mueller/following{/other_user}", "gists_url": "https://api.github.com/users/johnny-mueller/gists{/gist_id}", "starred_url": "https://api.github.com/users/johnny-mueller/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/johnny-mueller/subscriptions", "organizations_url": "https://api.github.com/users/johnny-mueller/orgs", "repos_url": "https://api.github.com/users/johnny-mueller/repos", "events_url": "https://api.github.com/users/johnny-mueller/events{/privacy}", "received_events_url": "https://api.github.com/users/johnny-mueller/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-18T20:51:29Z", "updated_at": "2020-06-19T14:54:32Z", "closed_at": "2020-06-19T14:54:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to set up a data augmentation pipline with imgaug. The transformation of the images works and does not throw any errors. In the second attempt I tried to transform the N Bounding Boxes for each image and I get not percise results.\r\n\r\n```pyton\r\ndef image_batch_augmentation(batch_images, batch_bbox, batch_image_shape):\r\n\r\n    def create_BoundingBox(bbox, w, h):\r\n        return BoundingBox(bbox[0]*h, bbox[1]*w, bbox[2]*h, bbox[3]*w, tf.cast(bbox[4], tf.int32))\r\n    \r\n    \r\n    \r\n    bbox = [[create_BoundingBox(bbox, float(w), float(h)) for bbox in batch if sum(bbox) != 0] for batch, w, h in zip(batch_bbox, batch_image_shape[0], batch_image_shape[1])]\r\n\r\n    bbox = [BoundingBoxesOnImage(batch, shape=(int(w),int(h))) for batch, w, h in zip(bbox,batch_image_shape[0], batch_image_shape[1]) ]\r\n\r\n    seq_det = seq.to_deterministic()\r\n    images_aug = seq_det.augment_images(image.numpy())\r\n    bbsoi_aug = seq_det.augment_bounding_boxes(bbox)\r\n    bbox = [batch.remove_out_of_image().cut_out_of_image()  for batch in bbsoi_aug]\r\n    \r\n    return images_aug, bbsoi_aug\r\n```\r\n\r\nI have already tried several different approaches, but I am not getting anywhere. The bounding boxes are not really accurate. And I'm sure it's the code and not the framework.\r\nAlso, I haven't found any information in the docs or on other known platforms that would help me to get better results. Maybe somebody here can see the error. If you need more information, just comment.\r\n\r\nHere is an example of an image augmentation that I get as a result. The image with the green bounding boxes is before the augmentation and the blue bounding boxes after the augmentation:\r\n![transformed](https://user-images.githubusercontent.com/64581980/85127307-771fc800-b22f-11ea-8052-eb07416655dd.PNG)\r\n\r\n![original](https://user-images.githubusercontent.com/64581980/85127311-7a1ab880-b22f-11ea-946b-edb1aa380b4a.PNG)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/690", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/690/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/690/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/690/events", "html_url": "https://github.com/aleju/imgaug/issues/690", "id": 640459147, "node_id": "MDU6SXNzdWU2NDA0NTkxNDc=", "number": 690, "title": "Unclear how to get to_deterministic to work with just images  ", "user": {"login": "rmcavoy", "id": 47895156, "node_id": "MDQ6VXNlcjQ3ODk1MTU2", "avatar_url": "https://avatars0.githubusercontent.com/u/47895156?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rmcavoy", "html_url": "https://github.com/rmcavoy", "followers_url": "https://api.github.com/users/rmcavoy/followers", "following_url": "https://api.github.com/users/rmcavoy/following{/other_user}", "gists_url": "https://api.github.com/users/rmcavoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/rmcavoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rmcavoy/subscriptions", "organizations_url": "https://api.github.com/users/rmcavoy/orgs", "repos_url": "https://api.github.com/users/rmcavoy/repos", "events_url": "https://api.github.com/users/rmcavoy/events{/privacy}", "received_events_url": "https://api.github.com/users/rmcavoy/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-06-17T13:49:46Z", "updated_at": "2020-07-16T17:29:02Z", "closed_at": "2020-07-16T17:29:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nfrom PIL import Image\r\nimport imgaug.augmenters as iaa\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n\r\nimg_fpath = \"img.png\"\r\nwith Image.open(img_fpath) as f:\r\n    in_image = f.convert('RGB')\r\nimg_np = np.asarray(in_image)\r\n\r\n#aug_seq = iaa.RandAugment(n=2, m=9)\r\naug_seq = iaa.Fliplr(0.5)\r\n\r\naug_seq.to_deterministic()\r\nimage1 = aug_seq.augment_images(images=[img_np])[0]\r\nimage2 = aug_seq.augment_images(images=[img_np])[0]\r\n\r\nprint(np.mean(image1-image2))\r\n\r\nf, axarr = plt.subplots(1,2)\r\naxarr[0].imshow(image1)\r\naxarr[1].imshow(image2)\r\n\r\nplt.show()\r\n```\r\n\r\nI am trying to use to deterministic to make so multiple images are augmented the same. As a test case, I tried making the above script to augment the same image multiple times and even used \"augment_images\" as suggested in other similar issues but this does not seem to have helped. The difference is exceedingly clear using RandAugment but it even happens with just fliplr.\r\n\r\nPerhaps, you could add a topline section to the documentation on the use of to_deterministic with examples as I found it difficult to find instructions and examples on using it and determinism should be a major advantage of imgaug over say Torchvision.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/686", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/686/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/686/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/686/events", "html_url": "https://github.com/aleju/imgaug/issues/686", "id": 629189091, "node_id": "MDU6SXNzdWU2MjkxODkwOTE=", "number": 686, "title": "MixUp || CutMix Augmentation! Implementation Possible?", "user": {"login": "innat", "id": 17668390, "node_id": "MDQ6VXNlcjE3NjY4Mzkw", "avatar_url": "https://avatars1.githubusercontent.com/u/17668390?v=4", "gravatar_id": "", "url": "https://api.github.com/users/innat", "html_url": "https://github.com/innat", "followers_url": "https://api.github.com/users/innat/followers", "following_url": "https://api.github.com/users/innat/following{/other_user}", "gists_url": "https://api.github.com/users/innat/gists{/gist_id}", "starred_url": "https://api.github.com/users/innat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/innat/subscriptions", "organizations_url": "https://api.github.com/users/innat/orgs", "repos_url": "https://api.github.com/users/innat/repos", "events_url": "https://api.github.com/users/innat/events{/privacy}", "received_events_url": "https://api.github.com/users/innat/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-06-02T13:08:04Z", "updated_at": "2020-06-27T20:01:47Z", "closed_at": "2020-06-27T20:01:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to implement mixup and `cutmix `augmentation in `matterport/maskrcnn` network which is mainly allows augmentation of this library. I've tried out some cool library with it, however, jut to know is it possible to implement `cutmix` or `mixup `augmentation as well?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/679", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/679/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/679/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/679/events", "html_url": "https://github.com/aleju/imgaug/issues/679", "id": 623613653, "node_id": "MDU6SXNzdWU2MjM2MTM2NTM=", "number": 679, "title": "keypoints augment bug", "user": {"login": "www516717402", "id": 30460509, "node_id": "MDQ6VXNlcjMwNDYwNTA5", "avatar_url": "https://avatars2.githubusercontent.com/u/30460509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/www516717402", "html_url": "https://github.com/www516717402", "followers_url": "https://api.github.com/users/www516717402/followers", "following_url": "https://api.github.com/users/www516717402/following{/other_user}", "gists_url": "https://api.github.com/users/www516717402/gists{/gist_id}", "starred_url": "https://api.github.com/users/www516717402/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/www516717402/subscriptions", "organizations_url": "https://api.github.com/users/www516717402/orgs", "repos_url": "https://api.github.com/users/www516717402/repos", "events_url": "https://api.github.com/users/www516717402/events{/privacy}", "received_events_url": "https://api.github.com/users/www516717402/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-23T08:57:14Z", "updated_at": "2020-05-23T09:39:59Z", "closed_at": "2020-05-23T09:34:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I use Imgaug module for keypoints, appear return huge points sometimes. Like follows:\r\nimage shape: 420*333\r\n21 keypoints in range x to [0,420], y to [0, 333],\r\nafter imgaug:\r\n[[ 2.6665572e+04  3.7316871e+04]\r\n [-1.0000000e+00 -1.0000000e+00]\r\n [-1.0000000e+00 -1.0000000e+00]\r\n [-1.0000000e+00 -1.0000000e+00]\r\n [-1.0000000e+00 -1.0000000e+00]\r\n [ 7.5649336e+03  5.3332388e+03]\r\n [-1.8632604e+03 -6.7687222e+03]\r\n [-8.5360547e+03 -1.43413]", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/675", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/675/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/675/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/675/events", "html_url": "https://github.com/aleju/imgaug/issues/675", "id": 623103788, "node_id": "MDU6SXNzdWU2MjMxMDM3ODg=", "number": 675, "title": "Shifted augumented segmentation mask", "user": {"login": "Adblu", "id": 34426707, "node_id": "MDQ6VXNlcjM0NDI2NzA3", "avatar_url": "https://avatars3.githubusercontent.com/u/34426707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Adblu", "html_url": "https://github.com/Adblu", "followers_url": "https://api.github.com/users/Adblu/followers", "following_url": "https://api.github.com/users/Adblu/following{/other_user}", "gists_url": "https://api.github.com/users/Adblu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Adblu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Adblu/subscriptions", "organizations_url": "https://api.github.com/users/Adblu/orgs", "repos_url": "https://api.github.com/users/Adblu/repos", "events_url": "https://api.github.com/users/Adblu/events{/privacy}", "received_events_url": "https://api.github.com/users/Adblu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-05-22T10:12:09Z", "updated_at": "2020-05-25T10:04:45Z", "closed_at": "2020-05-25T10:04:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am getting shifted segmentation mask. It keeps proportions, which is good but is shifted....\r\nWhy such weird behavior ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/671", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/671/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/671/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/671/events", "html_url": "https://github.com/aleju/imgaug/issues/671", "id": 622577286, "node_id": "MDU6SXNzdWU2MjI1NzcyODY=", "number": 671, "title": "Multiple annotations on single image.", "user": {"login": "Adblu", "id": 34426707, "node_id": "MDQ6VXNlcjM0NDI2NzA3", "avatar_url": "https://avatars3.githubusercontent.com/u/34426707?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Adblu", "html_url": "https://github.com/Adblu", "followers_url": "https://api.github.com/users/Adblu/followers", "following_url": "https://api.github.com/users/Adblu/following{/other_user}", "gists_url": "https://api.github.com/users/Adblu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Adblu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Adblu/subscriptions", "organizations_url": "https://api.github.com/users/Adblu/orgs", "repos_url": "https://api.github.com/users/Adblu/repos", "events_url": "https://api.github.com/users/Adblu/events{/privacy}", "received_events_url": "https://api.github.com/users/Adblu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-21T15:24:37Z", "updated_at": "2020-05-21T15:39:42Z", "closed_at": "2020-05-21T15:39:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "My image has let's say 9 objects annotated. \r\n\r\nIm having problems to implement that in your code. \r\nSince:\r\n```\r\n    images_aug, polygons_aug = seq(images=images, polygons=polygons)\r\n```\r\nin images I want to have 1 image, and in polygons I placed a list with polygon objects.\r\n\r\nAm having following error:\r\n```\r\nValueError: Tried to convert data of form 'iterable-iterable-Polygon' to 'List[PolygonsOnImage]'. This required exactly 9 corresponding image shapes, but instead 1 were provided. This can happen e.g. if more images were provided than corresponding augmentables, e.g. 10 images but only 5 segmentation maps. It can also happen if there was a misunderstanding about how an augmentable input would be parsed. E.g. if a list of N (x,y)-tuples was provided as keypoints and the expectation was that this would be parsed as one keypoint per image for N images, but instead it was parsed as N keypoints on 1 image (i.e. 'shapes' would have to contain 1 shape, but N would be provided). To avoid this, it is recommended to provide imgaug standard classes, e.g. KeypointsOnImage for keypoints instead of lists of tuples.\r\n\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/669", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/669/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/669/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/669/events", "html_url": "https://github.com/aleju/imgaug/issues/669", "id": 621848992, "node_id": "MDU6SXNzdWU2MjE4NDg5OTI=", "number": 669, "title": "cval not behaving correctly when given float value", "user": {"login": "cdjameson", "id": 65251787, "node_id": "MDQ6VXNlcjY1MjUxNzg3", "avatar_url": "https://avatars1.githubusercontent.com/u/65251787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdjameson", "html_url": "https://github.com/cdjameson", "followers_url": "https://api.github.com/users/cdjameson/followers", "following_url": "https://api.github.com/users/cdjameson/following{/other_user}", "gists_url": "https://api.github.com/users/cdjameson/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdjameson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdjameson/subscriptions", "organizations_url": "https://api.github.com/users/cdjameson/orgs", "repos_url": "https://api.github.com/users/cdjameson/repos", "events_url": "https://api.github.com/users/cdjameson/events{/privacy}", "received_events_url": "https://api.github.com/users/cdjameson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234896470, "node_id": "MDU6TGFiZWwyMzQ4OTY0NzA=", "url": "https://api.github.com/repos/aleju/imgaug/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-20T15:18:42Z", "updated_at": "2020-05-25T19:47:49Z", "closed_at": "2020-05-25T19:47:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "According to [the docs](https://imgaug.readthedocs.io/en/latest/source/api_augmenters_geometric.html) `cval` should accept float values and create new pixels according to the given value:\r\n> **cval** (number ... ) \u2013 The constant value to use when filling in newly created pixels. ... _It may be a float value._\r\n\r\nHowever in practice (with imgaug.augmenters.Affine at least) this does not work. It appears that the actual value being returned is `int(cval)`. My particular use case is with `float32` images ranging from `[0.0, 1.0]`.\r\n\r\nThe issue can be reproduced this way:\r\n```\r\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\nimport imgaug as ia\r\nimport imgaug.augmenters as iaa\r\n\r\nim = np.array(ia.quokka(size=(256,256)),dtype=np.float32)\r\nim = im/(2**8-1)\r\nprint(\"First pixel = \" + str(im[0,0,:]))\r\n\r\naug = iaa.Affine(scale=0.8,cval=0.4)\r\naug_im = aug(image=im)\r\nprint(\"First pixel = \" + str(aug_im[0,0,:]))\r\n\r\nplt.imsave('./regular.png',im)\r\nplt.imsave('./scaled.png',aug_im)\r\n```\r\n\r\nOutput:\r\n```\r\nFirst pixel = [0.19215687 0.30588236 0.32156864]\r\nFirst pixel = [0. 0. 0.]\r\n```\r\nWhere this should now be `[0.4 0.4 0.4]`.\r\n\r\nResulting images:\r\n![regular](https://user-images.githubusercontent.com/65251787/82463686-1e6fda80-9a8b-11ea-9548-f18daa8fadf3.png)\r\n![scaled](https://user-images.githubusercontent.com/65251787/82463697-20399e00-9a8b-11ea-8e3d-869dd97ec31c.png)\r\n\r\nIf this can't be fixed please update the documentation, as currently this is not the expected behavior.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/667", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/667/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/667/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/667/events", "html_url": "https://github.com/aleju/imgaug/issues/667", "id": 620563893, "node_id": "MDU6SXNzdWU2MjA1NjM4OTM=", "number": 667, "title": "Different cval per channel", "user": {"login": "cdjameson", "id": 65251787, "node_id": "MDQ6VXNlcjY1MjUxNzg3", "avatar_url": "https://avatars1.githubusercontent.com/u/65251787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cdjameson", "html_url": "https://github.com/cdjameson", "followers_url": "https://api.github.com/users/cdjameson/followers", "following_url": "https://api.github.com/users/cdjameson/following{/other_user}", "gists_url": "https://api.github.com/users/cdjameson/gists{/gist_id}", "starred_url": "https://api.github.com/users/cdjameson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cdjameson/subscriptions", "organizations_url": "https://api.github.com/users/cdjameson/orgs", "repos_url": "https://api.github.com/users/cdjameson/repos", "events_url": "https://api.github.com/users/cdjameson/events{/privacy}", "received_events_url": "https://api.github.com/users/cdjameson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-05-18T23:20:01Z", "updated_at": "2020-05-26T19:57:53Z", "closed_at": "2020-05-26T19:57:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm needing to have different `cval` arguments for each channel of the image, specifically for the Affine augmentation class.\r\n\r\nSpecifics:\r\nI have a two channel image where the first channel has a \"white\" background the the second channel has a \"black\" background, so when I'm performing Affine transformations I need `cval = 255` for the first channel and `cval = 0` for the second, but this doesn't seem to be supported in the API docs. I'm thinking something along the lines of\r\n```\r\naug = iaa.Affine(scale=(0.7,1.2),cval=[(255,255),(0,0)])\r\n```\r\nI would like to augment the channels together so that I can continue doing random translations/scales/etc instead of having to augment them with separate augmenter objects which would require doing deterministic augmentations.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/660", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/660/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/660/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/660/events", "html_url": "https://github.com/aleju/imgaug/issues/660", "id": 613906411, "node_id": "MDU6SXNzdWU2MTM5MDY0MTE=", "number": 660, "title": "aug_bbs coordinates", "user": {"login": "SushiDay", "id": 26812572, "node_id": "MDQ6VXNlcjI2ODEyNTcy", "avatar_url": "https://avatars1.githubusercontent.com/u/26812572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SushiDay", "html_url": "https://github.com/SushiDay", "followers_url": "https://api.github.com/users/SushiDay/followers", "following_url": "https://api.github.com/users/SushiDay/following{/other_user}", "gists_url": "https://api.github.com/users/SushiDay/gists{/gist_id}", "starred_url": "https://api.github.com/users/SushiDay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SushiDay/subscriptions", "organizations_url": "https://api.github.com/users/SushiDay/orgs", "repos_url": "https://api.github.com/users/SushiDay/repos", "events_url": "https://api.github.com/users/SushiDay/events{/privacy}", "received_events_url": "https://api.github.com/users/SushiDay/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-05-07T09:24:07Z", "updated_at": "2020-05-07T09:29:02Z", "closed_at": "2020-05-07T09:29:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "How to extract separately x1, x2, y1, y2 of augmented bounding box?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/656", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/656/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/656/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/656/events", "html_url": "https://github.com/aleju/imgaug/issues/656", "id": 604635325, "node_id": "MDU6SXNzdWU2MDQ2MzUzMjU=", "number": 656, "title": "Using DataLoader with imgaug", "user": {"login": "apophatique", "id": 44003762, "node_id": "MDQ6VXNlcjQ0MDAzNzYy", "avatar_url": "https://avatars1.githubusercontent.com/u/44003762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apophatique", "html_url": "https://github.com/apophatique", "followers_url": "https://api.github.com/users/apophatique/followers", "following_url": "https://api.github.com/users/apophatique/following{/other_user}", "gists_url": "https://api.github.com/users/apophatique/gists{/gist_id}", "starred_url": "https://api.github.com/users/apophatique/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apophatique/subscriptions", "organizations_url": "https://api.github.com/users/apophatique/orgs", "repos_url": "https://api.github.com/users/apophatique/repos", "events_url": "https://api.github.com/users/apophatique/events{/privacy}", "received_events_url": "https://api.github.com/users/apophatique/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-22T10:16:41Z", "updated_at": "2020-05-12T03:26:21Z", "closed_at": "2020-04-23T11:47:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "i'm new to machine learning and pytorch\r\n\r\nI have this code:\r\n\r\n```\r\nclass ImgAugTransform:\r\n    def __init__(self):\r\n        self.aug = seq = iaa.Sequential(\r\n            [\r\n                iaa.Fliplr(0.5), # horizontally flip 50% of all images\r\n                iaa.Flipud(0.2),  # vertically flip 20% of all images\r\n                random_aug_use(iaa.CropAndPad( # crop images by -5% to 10% of their height/width\r\n                    percent=(-0.1, 0.2),\r\n                    pad_mode=ia.ALL,\r\n                    pad_cval=(0.,255)\r\n                )),\r\n                random_aug_use(iaa.Affine(\r\n                    scale={\"x\": (0.8, 1.2), \"y\": (0.8, 1.2)}, # scale images to 80-120% of their size, individually per axis\r\n                    translate_percent={\"x\": (-0.2, 0.2), \"y\": (-0.2, 0.2)}, # translate by -20 to +20 percent (per axis)\r\n                    rotate=(-45, 45), # rotate by -45 to +45 degrees\r\n                    shear=(-16, 16), # shear by -16 to +16 degrees\r\n                    order=[0, 1], # use nearest neighbour or bilinear interpolation (fast)\r\n                    cval=(0, 255), # if mode is constant, use a cval between 0 and 255\r\n                    mode=ia.ALL # use any of scikit-image's warping modes (see 2nd image from the top for examples)\r\n                ))\r\n            ], \r\n            random_order=True)\r\n\r\n    def __call__(self, img):\r\n        img = np.array(img)\r\n        return self.aug.augment_image(img)\r\n\r\ntrain_transforms = ImgAugTransform()\r\n\r\ntrain_dataset = torchvision.datasets.ImageFolder(train_dir, train_transforms)\r\n\r\ntrain_dataloader = torch.utils.data.DataLoader(\r\n    train_dataset, batch_size=batch_size, shuffle=True, num_workers=batch_size)\r\n```\r\n\r\nSo now i cant do this:\r\n\r\n```\r\nX_batch, y_batch = next(iter(train_dataloader))\r\n```\r\n\r\nI get error:\r\n\r\nValueError: some of the strides of a given numpy array are negative. This is currently not supported, but will be added in future releases.\r\nPlease, help me to deal with it. I just dont understand what i should do. I really wanna use this cool libraty, not torchvision.transform\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/654", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/654/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/654/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/654/events", "html_url": "https://github.com/aleju/imgaug/issues/654", "id": 602765636, "node_id": "MDU6SXNzdWU2MDI3NjU2MzY=", "number": 654, "title": "Unzoom without padding", "user": {"login": "Neabfi", "id": 8831940, "node_id": "MDQ6VXNlcjg4MzE5NDA=", "avatar_url": "https://avatars0.githubusercontent.com/u/8831940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Neabfi", "html_url": "https://github.com/Neabfi", "followers_url": "https://api.github.com/users/Neabfi/followers", "following_url": "https://api.github.com/users/Neabfi/following{/other_user}", "gists_url": "https://api.github.com/users/Neabfi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Neabfi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Neabfi/subscriptions", "organizations_url": "https://api.github.com/users/Neabfi/orgs", "repos_url": "https://api.github.com/users/Neabfi/repos", "events_url": "https://api.github.com/users/Neabfi/events{/privacy}", "received_events_url": "https://api.github.com/users/Neabfi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-19T16:54:35Z", "updated_at": "2020-04-19T17:16:41Z", "closed_at": "2020-04-19T17:16:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nIs it possible to unzoom without padding?\r\n\r\n```\r\nimg_trans_train = iaa.Sequential([\r\n        iaa.Affine(scale=(0.32, 1)),\r\n        iaa.CropToFixedSize(width=1920, height=1280),\r\n    ]) \r\n```\r\n\r\nMy original images are 6000x4000. If a scale of 0.32 is applied, the images become 1920x1280 so CropToFixedSize shouldn\u2019t do anything. My problem is \" iaa.Affine\u201d does add padding to keep the image at the same size. As a result, CropToFixedSize can contain padding.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/653", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/653/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/653/events", "html_url": "https://github.com/aleju/imgaug/issues/653", "id": 601516159, "node_id": "MDU6SXNzdWU2MDE1MTYxNTk=", "number": 653, "title": "Squared does not seem to change the shape of the cutouts", "user": {"login": "Aaronzinhoo", "id": 26849064, "node_id": "MDQ6VXNlcjI2ODQ5MDY0", "avatar_url": "https://avatars2.githubusercontent.com/u/26849064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaronzinhoo", "html_url": "https://github.com/Aaronzinhoo", "followers_url": "https://api.github.com/users/Aaronzinhoo/followers", "following_url": "https://api.github.com/users/Aaronzinhoo/following{/other_user}", "gists_url": "https://api.github.com/users/Aaronzinhoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaronzinhoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaronzinhoo/subscriptions", "organizations_url": "https://api.github.com/users/Aaronzinhoo/orgs", "repos_url": "https://api.github.com/users/Aaronzinhoo/repos", "events_url": "https://api.github.com/users/Aaronzinhoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaronzinhoo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-04-16T21:49:33Z", "updated_at": "2020-04-19T07:37:38Z", "closed_at": "2020-04-19T07:37:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am on a conda evironment using imgaug v0.4.0 on Windows 10.\r\n\r\nWhen using the code below and applying it to an image the cutouts do not change shape and are consistently square. I am sure this is not intended behaviour and have tried this with squared set to False as well with no change. \r\n\r\n(Note: I am running other augmentations as well but this is the only one that does not produce intended results.)\r\n```\r\naug = iaa.Cutout(nb_iterations=(1, 3), size=0.25, squared=0.5,\r\n                   fill_mode=\"constant\", cval=(0, 255),\r\n                   fill_per_channel=0.5)\r\n```\r\n\r\nAny help or info would be great! Thanks", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/647", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/647/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/647/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/647/events", "html_url": "https://github.com/aleju/imgaug/issues/647", "id": 591400579, "node_id": "MDU6SXNzdWU1OTE0MDA1Nzk=", "number": 647, "title": "draw_on_image only works for RGB (three channel) images?", "user": {"login": "Jayzh7", "id": 19549969, "node_id": "MDQ6VXNlcjE5NTQ5OTY5", "avatar_url": "https://avatars2.githubusercontent.com/u/19549969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jayzh7", "html_url": "https://github.com/Jayzh7", "followers_url": "https://api.github.com/users/Jayzh7/followers", "following_url": "https://api.github.com/users/Jayzh7/following{/other_user}", "gists_url": "https://api.github.com/users/Jayzh7/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jayzh7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jayzh7/subscriptions", "organizations_url": "https://api.github.com/users/Jayzh7/orgs", "repos_url": "https://api.github.com/users/Jayzh7/repos", "events_url": "https://api.github.com/users/Jayzh7/events{/privacy}", "received_events_url": "https://api.github.com/users/Jayzh7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-31T20:24:12Z", "updated_at": "2020-03-31T20:26:18Z", "closed_at": "2020-03-31T20:26:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "The [source code](https://github.com/aleju/imgaug/blob/master/imgaug/augmentables/kps.py#L314) shows that the input must be a 3 channel image while augmentation works on gray images. Probably should extend it to support both?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/646", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/646/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/646/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/646/events", "html_url": "https://github.com/aleju/imgaug/issues/646", "id": 588479688, "node_id": "MDU6SXNzdWU1ODg0Nzk2ODg=", "number": 646, "title": "Array broadcast error in Change Color Temperatures", "user": {"login": "WillNichols726", "id": 45394583, "node_id": "MDQ6VXNlcjQ1Mzk0NTgz", "avatar_url": "https://avatars1.githubusercontent.com/u/45394583?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WillNichols726", "html_url": "https://github.com/WillNichols726", "followers_url": "https://api.github.com/users/WillNichols726/followers", "following_url": "https://api.github.com/users/WillNichols726/following{/other_user}", "gists_url": "https://api.github.com/users/WillNichols726/gists{/gist_id}", "starred_url": "https://api.github.com/users/WillNichols726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WillNichols726/subscriptions", "organizations_url": "https://api.github.com/users/WillNichols726/orgs", "repos_url": "https://api.github.com/users/WillNichols726/repos", "events_url": "https://api.github.com/users/WillNichols726/events{/privacy}", "received_events_url": "https://api.github.com/users/WillNichols726/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234896470, "node_id": "MDU6TGFiZWwyMzQ4OTY0NzA=", "url": "https://api.github.com/repos/aleju/imgaug/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-26T14:50:12Z", "updated_at": "2020-04-13T15:09:11Z", "closed_at": "2020-04-13T15:09:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Getting the following broadcast error when trying to use the Change color temperature augmenter\r\n\r\nCalling code:\r\n```\r\nself.augmenter = iaa.SomeOf((0,2), [\r\n                iaa.AdditiveGaussianNoise(scale=0.3*255, per_channel=True),\r\n                iaa.Cutout(nb_iterations=(1,8), size=0.1, fill_mode='gaussian', fill_per_channel=True),\r\n                iaa.GaussianBlur(sigma=(0, 0.2)),\r\n                iaa.MultiplyAndAddToBrightness(mul=(0.5, 1.5), add=(-30, 30)),\r\n                iaa.ChangeColorTemperature((1100, 10000)),\r\n                iaa.GammaContrast((0.5, 2.0)),\r\n                iaa.Clouds()\r\n            ],\r\n            random_order=True            \r\n            )\r\n\r\n#images is a numpy array (N, 96, 96, 3)\r\nimages = self.augmenter.augment_images(images=images)\r\n```\r\n\r\n\r\nException Stack:\r\n```\r\nFile \"C:\\Users\\Will.Nichols\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\imgaug\\augmenters\\meta.py\", line 825, in augment_images\r\n    hooks=hooks\r\n  File \"C:\\Users\\Will.Nichols\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\imgaug\\augmenters\\meta.py\", line 645, in augment_batch_\r\n    hooks=hooks)\r\n  File \"C:\\Users\\Will.Nichols\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\imgaug\\augmenters\\meta.py\", line 3406, in _augment_batch_\r\n    hooks=hooks\r\n  File \"C:\\Users\\Will.Nichols\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\imgaug\\augmenters\\meta.py\", line 645, in augment_batch_\r\n    hooks=hooks)\r\n  File \"C:\\Users\\Will.Nichols\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\imgaug\\augmenters\\color.py\", line 3093, in _augment_batch_\r\n    batch.images, kelvins, from_colorspaces=self.from_colorspace)\r\n  File \"C:\\Users\\Will.Nichols\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\imgaug\\augmenters\\color.py\", line 926, in change_color_temperatures_\r\n    rgb_multipliers = table.transform_kelvins_to_rgb_multipliers(kelvins)\r\n  File \"C:\\Users\\Will.Nichols\\AppData\\Local\\Continuum\\miniconda3\\lib\\site-packages\\imgaug\\augmenters\\color.py\", line 451, in transform_kelvins_to_rgb_multipliers\r\n    * (multipliers_ceiled - multipliers_floored)\r\nValueError: operands could not be broadcast together with shapes (4,) (4,3)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/644", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/644/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/644/events", "html_url": "https://github.com/aleju/imgaug/issues/644", "id": 586837553, "node_id": "MDU6SXNzdWU1ODY4Mzc1NTM=", "number": 644, "title": "ValueError: Tried to convert an array to a list of BoundingBoxesOnImage. Expected the array's last dimension to have size 4, but got 3 instead (array shape: (640, 640, 3)).", "user": {"login": "jediofgever", "id": 18460336, "node_id": "MDQ6VXNlcjE4NDYwMzM2", "avatar_url": "https://avatars1.githubusercontent.com/u/18460336?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jediofgever", "html_url": "https://github.com/jediofgever", "followers_url": "https://api.github.com/users/jediofgever/followers", "following_url": "https://api.github.com/users/jediofgever/following{/other_user}", "gists_url": "https://api.github.com/users/jediofgever/gists{/gist_id}", "starred_url": "https://api.github.com/users/jediofgever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jediofgever/subscriptions", "organizations_url": "https://api.github.com/users/jediofgever/orgs", "repos_url": "https://api.github.com/users/jediofgever/repos", "events_url": "https://api.github.com/users/jediofgever/events{/privacy}", "received_events_url": "https://api.github.com/users/jediofgever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-24T10:02:03Z", "updated_at": "2020-03-25T01:32:17Z", "closed_at": "2020-03-25T01:32:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/642", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/642/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/642/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/642/events", "html_url": "https://github.com/aleju/imgaug/issues/642", "id": 583538729, "node_id": "MDU6SXNzdWU1ODM1Mzg3Mjk=", "number": 642, "title": "Combination of EdgeDetection and SomeOf", "user": {"login": "Trevirirus", "id": 28948395, "node_id": "MDQ6VXNlcjI4OTQ4Mzk1", "avatar_url": "https://avatars0.githubusercontent.com/u/28948395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Trevirirus", "html_url": "https://github.com/Trevirirus", "followers_url": "https://api.github.com/users/Trevirirus/followers", "following_url": "https://api.github.com/users/Trevirirus/following{/other_user}", "gists_url": "https://api.github.com/users/Trevirirus/gists{/gist_id}", "starred_url": "https://api.github.com/users/Trevirirus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Trevirirus/subscriptions", "organizations_url": "https://api.github.com/users/Trevirirus/orgs", "repos_url": "https://api.github.com/users/Trevirirus/repos", "events_url": "https://api.github.com/users/Trevirirus/events{/privacy}", "received_events_url": "https://api.github.com/users/Trevirirus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-03-18T07:57:44Z", "updated_at": "2020-03-19T15:17:55Z", "closed_at": "2020-03-19T15:17:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "Is it possible to apply the Edge Detection Augmenter always to the Image and with the SomeOf class?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/637", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/637/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/637/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/637/events", "html_url": "https://github.com/aleju/imgaug/issues/637", "id": 579110002, "node_id": "MDU6SXNzdWU1NzkxMTAwMDI=", "number": 637, "title": "Augment overlapping segmentation masks", "user": {"login": "pluniak", "id": 26723758, "node_id": "MDQ6VXNlcjI2NzIzNzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/26723758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pluniak", "html_url": "https://github.com/pluniak", "followers_url": "https://api.github.com/users/pluniak/followers", "following_url": "https://api.github.com/users/pluniak/following{/other_user}", "gists_url": "https://api.github.com/users/pluniak/gists{/gist_id}", "starred_url": "https://api.github.com/users/pluniak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pluniak/subscriptions", "organizations_url": "https://api.github.com/users/pluniak/orgs", "repos_url": "https://api.github.com/users/pluniak/repos", "events_url": "https://api.github.com/users/pluniak/events{/privacy}", "received_events_url": "https://api.github.com/users/pluniak/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-11T09:08:38Z", "updated_at": "2020-03-25T13:45:32Z", "closed_at": "2020-03-25T13:45:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have N segmentation maps per image that I need to augment together with the image. I'm doing this with this awesome repo using `ia.augmentables.segmaps.SegmentationMapsOnImage()` and passing in the resulting image and mask objects to `iaa.Sequential()` . That's working fine, but from my understanding it doesn't allow for overlapping masks as `ia.augmentables.segmaps.SegmentationMapsOnImage()` takes an integer mask with N values instead of a cube of boolean masks with N channels. That is a problem e.g. if you want to segment complete humans and human eyes at the same time, because the according segmentation masks are overlapping.\r\nIs there any solution/workaround for this like passing in a list of boolean masks to `iaa.Sequential()` instead of the single integer mask? I've been looking for a possibility for a while but haven't found one yet, so any help is greatly appreciated.\r\n\r\nBest,\r\nPhilipp", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/636", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/636/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/636/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/636/events", "html_url": "https://github.com/aleju/imgaug/issues/636", "id": 577836782, "node_id": "MDU6SXNzdWU1Nzc4MzY3ODI=", "number": 636, "title": "import problem with imgaug and tensorflow at the same time", "user": {"login": "galitus", "id": 13887867, "node_id": "MDQ6VXNlcjEzODg3ODY3", "avatar_url": "https://avatars1.githubusercontent.com/u/13887867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/galitus", "html_url": "https://github.com/galitus", "followers_url": "https://api.github.com/users/galitus/followers", "following_url": "https://api.github.com/users/galitus/following{/other_user}", "gists_url": "https://api.github.com/users/galitus/gists{/gist_id}", "starred_url": "https://api.github.com/users/galitus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/galitus/subscriptions", "organizations_url": "https://api.github.com/users/galitus/orgs", "repos_url": "https://api.github.com/users/galitus/repos", "events_url": "https://api.github.com/users/galitus/events{/privacy}", "received_events_url": "https://api.github.com/users/galitus/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-03-09T11:25:12Z", "updated_at": "2020-05-17T23:09:00Z", "closed_at": "2020-05-17T23:09:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "Alright, I'm using gentoo linux, so everything is compiled from source.\r\nI have problem to import imgaug and tensorflow at the same time.\r\n\r\npython: 3.6.9\r\ngcc 9.2.0\r\nprotobuf 3.8.0\r\ntensorflow 1.14.0\r\nmatplotlib 2.2.2\r\nscikits_image 0.14.2\r\nimageio 2.6.1\r\nscipy 1.1.0\r\nnumpy 1.15.4\r\n\r\nProblem:\r\n`Python 3.6.9 (default, Nov 14 2019, 17:07:05) \r\n[GCC 9.2.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import imgaug\r\n>>> import tensorflow\r\n[libprotobuf ERROR /var/tmp/portage/dev-libs/protobuf-3.8.0/work/protobuf-3.8.0/src/google/protobuf/descriptor_database.cc:172] Symbol name \"tensorflow.TensorShapeProto\" conflicts with the existing symbol \"tensorflow.TensorShapeProto\".\r\n[libprotobuf FATAL /var/tmp/portage/dev-libs/protobuf-3.8.0/work/protobuf-3.8.0/src/google/protobuf/descriptor.cc:1367] CHECK failed: GeneratedDatabase()->Add(encoded_file_descriptor, size): \r\nterminate called after throwing an instance of 'google::protobuf::FatalException'\r\n  what():  CHECK failed: GeneratedDatabase()->Add(encoded_file_descriptor, size): \r\nAborted`\r\n\r\nSo python is aborting in the end.\r\n\r\nAny idea why? \r\nI recompiled tensorflow, reinstalled imgaug and everything but it didn't help.\r\nPlease push me in the right direction.\r\n\r\nGreetings", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/633", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/633/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/633/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/633/events", "html_url": "https://github.com/aleju/imgaug/issues/633", "id": 575143142, "node_id": "MDU6SXNzdWU1NzUxNDMxNDI=", "number": 633, "title": "Multiple segmentation maps on one image", "user": {"login": "Mabinogiysk", "id": 12441989, "node_id": "MDQ6VXNlcjEyNDQxOTg5", "avatar_url": "https://avatars1.githubusercontent.com/u/12441989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mabinogiysk", "html_url": "https://github.com/Mabinogiysk", "followers_url": "https://api.github.com/users/Mabinogiysk/followers", "following_url": "https://api.github.com/users/Mabinogiysk/following{/other_user}", "gists_url": "https://api.github.com/users/Mabinogiysk/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mabinogiysk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mabinogiysk/subscriptions", "organizations_url": "https://api.github.com/users/Mabinogiysk/orgs", "repos_url": "https://api.github.com/users/Mabinogiysk/repos", "events_url": "https://api.github.com/users/Mabinogiysk/events{/privacy}", "received_events_url": "https://api.github.com/users/Mabinogiysk/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-03-04T05:15:21Z", "updated_at": "2020-03-05T02:46:42Z", "closed_at": "2020-03-05T02:46:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "I need bounding box and segmentation at the same time. If two adjacent objects on one image belong to the same category, I cannot separate them from each other after augmentation using `SegmentationMapsOnImage`. What I need is one segmentation map for one object and multiple segmentaion maps on one image.\r\nIs there any solutions?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/629", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/629/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/629/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/629/events", "html_url": "https://github.com/aleju/imgaug/issues/629", "id": 572535970, "node_id": "MDU6SXNzdWU1NzI1MzU5NzA=", "number": 629, "title": "Keep information during rotate ", "user": {"login": "sizhky", "id": 3656100, "node_id": "MDQ6VXNlcjM2NTYxMDA=", "avatar_url": "https://avatars1.githubusercontent.com/u/3656100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sizhky", "html_url": "https://github.com/sizhky", "followers_url": "https://api.github.com/users/sizhky/followers", "following_url": "https://api.github.com/users/sizhky/following{/other_user}", "gists_url": "https://api.github.com/users/sizhky/gists{/gist_id}", "starred_url": "https://api.github.com/users/sizhky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sizhky/subscriptions", "organizations_url": "https://api.github.com/users/sizhky/orgs", "repos_url": "https://api.github.com/users/sizhky/repos", "events_url": "https://api.github.com/users/sizhky/events{/privacy}", "received_events_url": "https://api.github.com/users/sizhky/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-28T05:50:24Z", "updated_at": "2020-03-14T13:53:17Z", "closed_at": "2020-03-14T13:53:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nIs it possible to return a rotated image without losing the information? E.g.\r\n\r\nSometimes if the rotation is too aggressive there is missing content - \r\n![image](https://user-images.githubusercontent.com/3656100/75513912-36036e00-5a1c-11ea-82f5-27c9f16e064e.png)\r\n\r\nInstead what I am asking is a way to return image with a modified aspect ratio such that original image is intact.\r\n![image](https://user-images.githubusercontent.com/3656100/75513886-1ff5ad80-5a1c-11ea-95d4-a67ab0a7cddb.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/627", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/627/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/627/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/627/events", "html_url": "https://github.com/aleju/imgaug/issues/627", "id": 570420947, "node_id": "MDU6SXNzdWU1NzA0MjA5NDc=", "number": 627, "title": "Python2 compatibility broken : Imageio", "user": {"login": "MSutt", "id": 19779928, "node_id": "MDQ6VXNlcjE5Nzc5OTI4", "avatar_url": "https://avatars0.githubusercontent.com/u/19779928?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MSutt", "html_url": "https://github.com/MSutt", "followers_url": "https://api.github.com/users/MSutt/followers", "following_url": "https://api.github.com/users/MSutt/following{/other_user}", "gists_url": "https://api.github.com/users/MSutt/gists{/gist_id}", "starred_url": "https://api.github.com/users/MSutt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MSutt/subscriptions", "organizations_url": "https://api.github.com/users/MSutt/orgs", "repos_url": "https://api.github.com/users/MSutt/repos", "events_url": "https://api.github.com/users/MSutt/events{/privacy}", "received_events_url": "https://api.github.com/users/MSutt/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-25T09:16:02Z", "updated_at": "2020-02-25T21:18:05Z", "closed_at": "2020-02-25T21:15:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "The new imageio version does not support python2 anymore.\r\nrunning `pip install imgaug` with python2 leads to this error :\r\n```Collecting imageio\r\n  Using cached imageio-2.8.0.tar.gz (3.3 MB)\r\nERROR: Package 'imageio' requires a different Python: 2.7.16 not in '>=3.5't```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/621", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/621/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/621/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/621/events", "html_url": "https://github.com/aleju/imgaug/issues/621", "id": 569309709, "node_id": "MDU6SXNzdWU1NjkzMDk3MDk=", "number": 621, "title": "PiecewiseAffine optimization when only using keypoints - no image", "user": {"login": "AmitMY", "id": 5757359, "node_id": "MDQ6VXNlcjU3NTczNTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5757359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AmitMY", "html_url": "https://github.com/AmitMY", "followers_url": "https://api.github.com/users/AmitMY/followers", "following_url": "https://api.github.com/users/AmitMY/following{/other_user}", "gists_url": "https://api.github.com/users/AmitMY/gists{/gist_id}", "starred_url": "https://api.github.com/users/AmitMY/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AmitMY/subscriptions", "organizations_url": "https://api.github.com/users/AmitMY/orgs", "repos_url": "https://api.github.com/users/AmitMY/repos", "events_url": "https://api.github.com/users/AmitMY/events{/privacy}", "received_events_url": "https://api.github.com/users/AmitMY/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-02-22T09:38:09Z", "updated_at": "2020-02-22T18:52:22Z", "closed_at": "2020-02-22T18:52:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have the following list of key points that are not bound to an image:\r\n![image](https://user-images.githubusercontent.com/5757359/75089965-c8ac9480-5566-11ea-883f-1d1e1cfb1e06.png)\r\n\r\nI would like to create some distorted humans, like this one:\r\n![image](https://user-images.githubusercontent.com/5757359/75089980-ef6acb00-5566-11ea-8cfe-eb164673ce3b.png)\r\n\r\nTo create this distorted human, I used (among other augmentations) the `PiecewiseAffine` augmentation. \r\nBut, I find it to be too slow for my needs.\r\n \r\nI was thinking, as my use case is just to augment 100 key points, rather than hundreds of thousands of pixels, that there might be a faster algorithm to apply this transformation.\r\n\r\nCode:\r\n```py\r\nimport imgaug.augmenters as iaa\r\nfrom imgaug.augmentables import Keypoint, KeypointsOnImage\r\n\r\nkps = KeypointsOnImage([\r\n    Keypoint(x=65, y=100),\r\n    Keypoint(x=75, y=200),\r\n    Keypoint(x=100, y=100),\r\n    Keypoint(x=200, y=80)\r\n], shape=(256, 256))\r\n\r\nseq = iaa.Sequential([\r\n    iaa.PiecewiseAffine(scale=(0.01, 0.05)),  # Distort keypoints\r\n])\r\n\r\n# Augment keypoints\r\nkps_aug = seq(keypoints=kps)\r\n\r\nfor i in range(len(kps.keypoints)):\r\n    before = kps.keypoints[i]\r\n    after = kps_aug.keypoints[i]\r\n    print(\"Keypoint %d: (%.8f, %.8f) -> (%.8f, %.8f)\" % (i, before.x, before.y, after.x, after.y))\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/617", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/617/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/617/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/617/events", "html_url": "https://github.com/aleju/imgaug/issues/617", "id": 565991531, "node_id": "MDU6SXNzdWU1NjU5OTE1MzE=", "number": 617, "title": "Augment bounding boxes is broken when only _augment_keypoints is defined", "user": {"login": "Erotemic", "id": 3186211, "node_id": "MDQ6VXNlcjMxODYyMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3186211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erotemic", "html_url": "https://github.com/Erotemic", "followers_url": "https://api.github.com/users/Erotemic/followers", "following_url": "https://api.github.com/users/Erotemic/following{/other_user}", "gists_url": "https://api.github.com/users/Erotemic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erotemic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erotemic/subscriptions", "organizations_url": "https://api.github.com/users/Erotemic/orgs", "repos_url": "https://api.github.com/users/Erotemic/repos", "events_url": "https://api.github.com/users/Erotemic/events{/privacy}", "received_events_url": "https://api.github.com/users/Erotemic/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-16T23:40:51Z", "updated_at": "2020-02-17T20:08:51Z", "closed_at": "2020-02-17T20:08:07Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have an augmenter that implements `_augment_keypoints` and `_augment_images`, which should be sufficient for augmenting both vector and raster representations of data. However, I noticed when I updated imgaug, my boxes were no longer being augmented. \r\n\r\nIt looks like 0.4.0 broke the behavior where `augment_bounding_boxes` used to work as long as `_augment_keypoints` was defined. \r\n\r\nThe currently implementation in Augmenter is:\r\n\r\n```python\r\n    def _augment_bounding_boxes(self, bounding_boxes_on_images, random_state,\r\n                                parents, hooks):\r\n        return bounding_boxes_on_images\r\n\r\n    def _augment_polygons(self, polygons_on_images, random_state, parents,\r\n                          hooks):\r\n        return polygons_on_images\r\n```\r\n\r\nHowever, if only the two aforementioned functions are implemented then the augmenter will change the image, but the boxes will be unchanged. At the very least this should cause an Exception, but I think a better fix would simply be to use the _augment_keypoints function if it exists: \r\n\r\n```python\r\n    def _augment_bounding_boxes(self, bounding_boxes_on_images, random_state,\r\n                                parents, hooks):\r\n        return self._augment_bounding_boxes_as_keypoints(\r\n            bounding_boxes_on_images, random_state, parents, hooks)\r\n\r\n    def _augment_polygons(self, polygons_on_images, random_state, parents,\r\n                          hooks):\r\n\r\n        return self._augment_polygons_boxes_as_keypoints(\r\n            polygons_on_images, random_state, parents, hooks)\r\n```\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/616", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/616/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/616/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/616/events", "html_url": "https://github.com/aleju/imgaug/issues/616", "id": 565988884, "node_id": "MDU6SXNzdWU1NjU5ODg4ODQ=", "number": 616, "title": "normalize_shape causes ambiguities ", "user": {"login": "Erotemic", "id": 3186211, "node_id": "MDQ6VXNlcjMxODYyMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3186211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erotemic", "html_url": "https://github.com/Erotemic", "followers_url": "https://api.github.com/users/Erotemic/followers", "following_url": "https://api.github.com/users/Erotemic/following{/other_user}", "gists_url": "https://api.github.com/users/Erotemic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erotemic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erotemic/subscriptions", "organizations_url": "https://api.github.com/users/Erotemic/orgs", "repos_url": "https://api.github.com/users/Erotemic/repos", "events_url": "https://api.github.com/users/Erotemic/events{/privacy}", "received_events_url": "https://api.github.com/users/Erotemic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1122782516, "node_id": "MDU6TGFiZWwxMTIyNzgyNTE2", "url": "https://api.github.com/repos/aleju/imgaug/labels/TODO", "name": "TODO", "color": "d9c4ff", "default": false, "description": "Planned to be added to the library or changed in the future"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-16T23:21:28Z", "updated_at": "2020-02-29T15:34:26Z", "closed_at": "2020-02-29T15:30:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just spent a good hour tracking down this bug. \r\n\r\nIt turns out that when you pass the `shape` keyword argument to `KeypointsOnImage`  or `BoundingBoxesOnImage` they use `normalize_shape` to preprocess the input. If `shape` is a tuple then there is no problem. \r\n\r\nHowever, the issue happens when I pass `shape` as a numpy array. Instead of trusting that what I gave it represents the shape of the image, I guess it assumes I'm passing the image itself and returns the `arr.shape` attribute, which turns out to be (2,) when the ndarray is actually representing the shape (which happens often when you want to mathematically manipulate shapes). \r\n\r\nI'm going to guess that this was probably put in there as a convenience, but I found the behavior unintuitive. I'm guessing others might as well. It might be a good idea to discourage the passing of ndarrays as the shape parameter. Because this feature has already been released, I don't think it would be a good idea to backtrack on it, but it may be a good idea to raise a warning whenever the user passes a ndarray into normalize_shape saying that they should be passing the shape tuple instead. \r\n\r\nIf the maintainers of the repo really like the current behavior of normalize shape and want to keep it that way, I would understand. It is somewhat convenient if you are in the know, but my intuition is that this might trip up a lot of other users and it might be a good idea to simplify the API and disallow or discourage passing the actual image as the shape parameter. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/602", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/602/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/602/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/602/events", "html_url": "https://github.com/aleju/imgaug/issues/602", "id": 558527537, "node_id": "MDU6SXNzdWU1NTg1Mjc1Mzc=", "number": 602, "title": "Problem about Rotation 90 degrees with bounding box", "user": {"login": "Demo5284", "id": 60341993, "node_id": "MDQ6VXNlcjYwMzQxOTkz", "avatar_url": "https://avatars2.githubusercontent.com/u/60341993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Demo5284", "html_url": "https://github.com/Demo5284", "followers_url": "https://api.github.com/users/Demo5284/followers", "following_url": "https://api.github.com/users/Demo5284/following{/other_user}", "gists_url": "https://api.github.com/users/Demo5284/gists{/gist_id}", "starred_url": "https://api.github.com/users/Demo5284/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Demo5284/subscriptions", "organizations_url": "https://api.github.com/users/Demo5284/orgs", "repos_url": "https://api.github.com/users/Demo5284/repos", "events_url": "https://api.github.com/users/Demo5284/events{/privacy}", "received_events_url": "https://api.github.com/users/Demo5284/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2020-02-01T11:29:56Z", "updated_at": "2020-02-21T09:37:26Z", "closed_at": "2020-02-21T09:37:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "Thank you and this useful tool. It is easy to augment my image. However, there is a small problem that bothers me.\r\n\r\nAfter running iaa.Rot90(k=1) and checking the bounding box, I got a wired result of bounding box, and iaa.Affine(rotate=90) was the same.  I also tried iaa.Rot90(k=3) and it looked great. \r\n![\u87a2\u5e55\u5feb\u7167 2020-02-01 \u4e0b\u53487 06 30](https://user-images.githubusercontent.com/60341993/73591162-2df00580-4526-11ea-8593-60c31e6dbe44.png)\r\n\r\nHow could I solve this?\r\n\r\np.s. I run another image with iaa.Rot90(k=1) and it doesn't have this mistake. It seems to have this problem with the example above.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/559", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/559/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/559/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/559/events", "html_url": "https://github.com/aleju/imgaug/issues/559", "id": 548139360, "node_id": "MDU6SXNzdWU1NDgxMzkzNjA=", "number": 559, "title": "padding not working ?", "user": {"login": "FenryrMKIII", "id": 13049443, "node_id": "MDQ6VXNlcjEzMDQ5NDQz", "avatar_url": "https://avatars0.githubusercontent.com/u/13049443?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FenryrMKIII", "html_url": "https://github.com/FenryrMKIII", "followers_url": "https://api.github.com/users/FenryrMKIII/followers", "following_url": "https://api.github.com/users/FenryrMKIII/following{/other_user}", "gists_url": "https://api.github.com/users/FenryrMKIII/gists{/gist_id}", "starred_url": "https://api.github.com/users/FenryrMKIII/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FenryrMKIII/subscriptions", "organizations_url": "https://api.github.com/users/FenryrMKIII/orgs", "repos_url": "https://api.github.com/users/FenryrMKIII/repos", "events_url": "https://api.github.com/users/FenryrMKIII/events{/privacy}", "received_events_url": "https://api.github.com/users/FenryrMKIII/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-10T15:24:34Z", "updated_at": "2020-01-13T10:45:48Z", "closed_at": "2020-01-13T10:45:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "MWE : \r\n\r\n```\r\nimport imgaug as ia\r\nfrom imgaug import augmenters as iaa\r\n\r\nimage = ia.quokka(size=(256, 256))\r\nia.imshow(image) \r\n\r\nmargin = 50\r\nbbox = ia.BoundingBoxesOnImage([\r\n    ia.BoundingBox(x1=0+margin, y1=0+margin, \r\n                x2=image.shape[1]-margin, y2=image.shape[0]-margin)], \r\n                shape=image.shape)\r\nia.imshow(bbox.draw_on_image(image)) \r\n\r\nseq = iaa.Sequential([iaa.Pad(px=100,pad_mode='constant', pad_cval=0, keep_size=False)])\r\nimgAug, bboxAug = seq.augment(images = image, bounding_boxes=bbox)\r\nia.imshow(bboxAug.draw_on_image(imgAug))\r\n\r\n```\r\n\r\nreturns the error : \r\n\r\n`ValueError: shape mismatch: value array of shape (3,) could not be broadcast to indexing result of shape (369,203)`\r\n\r\nso somehow when using padding the third dimensions (channels) get modified from 3 (RGB) to 203.  What is the issue here ? I don't know the package well enough yet to find the issue. \r\n\r\nI will keep looking but if someone has the solution in the meantime I am all hear", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/558", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/558/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/558/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/558/events", "html_url": "https://github.com/aleju/imgaug/issues/558", "id": 548048058, "node_id": "MDU6SXNzdWU1NDgwNDgwNTg=", "number": 558, "title": "AttributeError: 'list' object has no attribute 'ndim'", "user": {"login": "purvikpatel", "id": 18680764, "node_id": "MDQ6VXNlcjE4NjgwNzY0", "avatar_url": "https://avatars2.githubusercontent.com/u/18680764?v=4", "gravatar_id": "", "url": "https://api.github.com/users/purvikpatel", "html_url": "https://github.com/purvikpatel", "followers_url": "https://api.github.com/users/purvikpatel/followers", "following_url": "https://api.github.com/users/purvikpatel/following{/other_user}", "gists_url": "https://api.github.com/users/purvikpatel/gists{/gist_id}", "starred_url": "https://api.github.com/users/purvikpatel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/purvikpatel/subscriptions", "organizations_url": "https://api.github.com/users/purvikpatel/orgs", "repos_url": "https://api.github.com/users/purvikpatel/repos", "events_url": "https://api.github.com/users/purvikpatel/events{/privacy}", "received_events_url": "https://api.github.com/users/purvikpatel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-01-10T12:16:12Z", "updated_at": "2020-01-18T14:58:59Z", "closed_at": "2020-01-18T14:58:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "**I am using the below given code to augment a list of images but It is giving me error mention below the code . Can anyone check my code and tell me where I am making the mistake?**\r\n\r\n\r\n```\r\nimport os\r\nimport cv2 \r\nimport glob\r\nimport numpy as np\r\nimport imgaug as ia\r\nimport imgaug.augmenters as iaa\r\n\r\ndef GetImage():\r\n    images = []\r\n    for imgFile in glob.glob(\"images/*.jpg\"):\r\n        img = cv2.imread(imgFile)\r\n        images.append(img)\r\n\r\n    return images\r\n\r\n\r\ndef augmentation():\r\n\r\n    images = GetImage()\r\n\r\n    seq = iaa.Sequential([\r\n    iaa.Fliplr(0.5), \r\n    iaa.Crop(percent=(0, 0.1)),\r\n    iaa.Sometimes(0.5,\r\n        iaa.GaussianBlur(sigma=(0, 0.5))\r\n    ),\r\n    iaa.LinearContrast((0.75, 1.5)),\r\n    iaa.AdditiveGaussianNoise(loc=0, scale=(0.0, 0.05*255), per_channel=0.5),\r\n    iaa.Multiply((0.8, 1.2), per_channel=0.2),\r\n    iaa.Affine(\r\n        scale={\"x\": (0.8, 1.2), \"y\": (0.8, 1.2)},\r\n        translate_percent={\"x\": (-0.2, 0.2), \"y\": (-0.2, 0.2)},\r\n        rotate=(-25, 25),\r\n        shear=(-8, 8)\r\n    )\r\n    ], random_order=True)\r\n\r\n    image_aug = seq(image=images)\r\n\r\n    i = 1\r\n    \r\n    for images  in image_aug:\r\n        path = \"/home/purvik/Desktop/AUV/Augmentation/newImages/\" \r\n        cv2.imwrite(os.path.join(path + str(i) + \".jpg\"),image_aug)\r\n        i = i + 1\r\n  \r\nif __name__ == \"__main__\":\r\n    augmentation()\r\n```\r\n\r\n\r\n\r\n```Traceback (most recent call last):\r\n  File \"aug.py\", line 125, in <module>\r\n    augmentation()\r\n  File \"aug.py\", line 80, in augmentation\r\n    image_aug = seq(image=images)\r\n  File \"/home/purvik/.local/lib/python2.7/site-packages/imgaug/augmenters/meta.py\", line 1913, in __call__\r\n    return self.augment(*args, **kwargs)\r\n  File \"/home/purvik/.local/lib/python2.7/site-packages/imgaug/augmenters/meta.py\", line 1884, in augment\r\n    batch_aug = self.augment_batch(batch, hooks=hooks)\r\n  File \"/home/purvik/.local/lib/python2.7/site-packages/imgaug/augmenters/meta.py\", line 511, in augment_batch\r\n    batch = batch.to_normalized_batch()\r\n  File \"/home/purvik/.local/lib/python2.7/site-packages/imgaug/augmentables/batches.py\", line 147, in to_normalized_batch\r\n    images_unaug = nlib.normalize_images(self.images_unaug)\r\n  File \"/home/purvik/.local/lib/python2.7/site-packages/imgaug/augmentables/normalization.py\", line 140, in normalize_images\r\n    assert image.ndim in [2, 3], (\r\nAttributeError: 'list' object has no attribute 'ndim'\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/555", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/555/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/555/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/555/events", "html_url": "https://github.com/aleju/imgaug/issues/555", "id": 546428284, "node_id": "MDU6SXNzdWU1NDY0MjgyODQ=", "number": 555, "title": "Random seed / state examples?", "user": {"login": "cclaan", "id": 346001, "node_id": "MDQ6VXNlcjM0NjAwMQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/346001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cclaan", "html_url": "https://github.com/cclaan", "followers_url": "https://api.github.com/users/cclaan/followers", "following_url": "https://api.github.com/users/cclaan/following{/other_user}", "gists_url": "https://api.github.com/users/cclaan/gists{/gist_id}", "starred_url": "https://api.github.com/users/cclaan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cclaan/subscriptions", "organizations_url": "https://api.github.com/users/cclaan/orgs", "repos_url": "https://api.github.com/users/cclaan/repos", "events_url": "https://api.github.com/users/cclaan/events{/privacy}", "received_events_url": "https://api.github.com/users/cclaan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-07T18:05:07Z", "updated_at": "2020-01-07T23:35:46Z", "closed_at": "2020-01-07T20:58:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having trouble setting a random state or seed to create a reproducible augmenter. Using to_deterministic() does work, but I'm working with someone else's code so it would be difficult to use. \r\nIs it possible to set a seed or state and expect future calls to some augmenter to be repeatable?  ( assuming none have used to_deterministic() internally ) \r\nI've seen a few issues here regarding this, but some are out of date and don't work for me. \r\nI've attached a very basic notebook where I can't seem to get a reproducible augmentation for a single Affine rotation. The first time I use the seed everything seems to work, but after plotting the images and re-running, the output has changed. I'm assuming I've done something stupid, but I've tried several methods of setting the seed and haven't had luck. \r\nThanks\r\n\r\n[imgaug seed.ipynb.zip](https://github.com/aleju/imgaug/files/4031833/imgaug.seed.ipynb.zip)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/549", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/549/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/549/events", "html_url": "https://github.com/aleju/imgaug/issues/549", "id": 545414481, "node_id": "MDU6SXNzdWU1NDU0MTQ0ODE=", "number": 549, "title": "imgaug augmenters spoil the image", "user": {"login": "DmitryVlasovPrm", "id": 57285246, "node_id": "MDQ6VXNlcjU3Mjg1MjQ2", "avatar_url": "https://avatars1.githubusercontent.com/u/57285246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DmitryVlasovPrm", "html_url": "https://github.com/DmitryVlasovPrm", "followers_url": "https://api.github.com/users/DmitryVlasovPrm/followers", "following_url": "https://api.github.com/users/DmitryVlasovPrm/following{/other_user}", "gists_url": "https://api.github.com/users/DmitryVlasovPrm/gists{/gist_id}", "starred_url": "https://api.github.com/users/DmitryVlasovPrm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DmitryVlasovPrm/subscriptions", "organizations_url": "https://api.github.com/users/DmitryVlasovPrm/orgs", "repos_url": "https://api.github.com/users/DmitryVlasovPrm/repos", "events_url": "https://api.github.com/users/DmitryVlasovPrm/events{/privacy}", "received_events_url": "https://api.github.com/users/DmitryVlasovPrm/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-05T12:58:22Z", "updated_at": "2020-01-05T14:52:18Z", "closed_at": "2020-01-05T14:52:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello! I has faced such a problem. I try to rotate the image and get the spoiled image.\r\nI can't understand what's the problem?\r\nI used the following code:\r\n```\r\nfrom imgaug import augmenters as iaa\r\nimport matplotlib.pyplot as plt\r\nimport cv2\r\n\r\nseq = iaa.Sequential([\r\n    iaa.Affine(\r\n        rotate=(-25, 25)\r\n    )\r\n])\r\n\r\nimage = cv2.imread(\"/Users/dmitry/Desktop/car.png\")\r\nimage = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\r\nimage_aug = seq(images=image)\r\n\r\nplt.imshow(image_aug)\r\n```\r\nInput image:\r\n![car](https://user-images.githubusercontent.com/57285246/71780472-c016f380-2fe4-11ea-892e-256e143f5a82.png)\r\nOutput image:\r\n![output_car](https://user-images.githubusercontent.com/57285246/71780467-ad042380-2fe4-11ea-9065-a911aae4becd.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/544", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/544/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/544/events", "html_url": "https://github.com/aleju/imgaug/issues/544", "id": 544346670, "node_id": "MDU6SXNzdWU1NDQzNDY2NzA=", "number": 544, "title": "sporadic segfault while augmenting, makes imgaug unusable", "user": {"login": "InnovArul", "id": 4779147, "node_id": "MDQ6VXNlcjQ3NzkxNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/4779147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/InnovArul", "html_url": "https://github.com/InnovArul", "followers_url": "https://api.github.com/users/InnovArul/followers", "following_url": "https://api.github.com/users/InnovArul/following{/other_user}", "gists_url": "https://api.github.com/users/InnovArul/gists{/gist_id}", "starred_url": "https://api.github.com/users/InnovArul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/InnovArul/subscriptions", "organizations_url": "https://api.github.com/users/InnovArul/orgs", "repos_url": "https://api.github.com/users/InnovArul/repos", "events_url": "https://api.github.com/users/InnovArul/events{/privacy}", "received_events_url": "https://api.github.com/users/InnovArul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-01T11:30:18Z", "updated_at": "2020-01-01T15:12:41Z", "closed_at": "2020-01-01T15:12:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am facing sporadic segmentation faults while augmenting the images (images alone or with segmentation maps).\r\nI have a simple augmentation script here: https://gist.github.com/InnovArul/9923bb2b19f98f251998d8d74d3c171b\r\n\r\n```\r\nOS: Ubuntu 16.04.3\r\nimgaug version: 0.3.0\r\n```\r\n\r\nWhen the script is executed, sometimes it runs full 100 augmentations. But other times, it gives out a segmentation fault.\r\n\r\nWhen I backtraced it in GDB, I got:\r\n```\r\nThread 26 \"python\" received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0x7fff737fe700 (LWP 34404)]\r\n__GI___libc_free (mem=0x4015) at malloc.c:2951\r\n2951 malloc.c: No such file or directory.\r\n(gdb) backtrace\r\n#0 __GI___libc_free (mem=0x4015) at malloc.c:2951\r\n#1 0x00007fffe6d29a39 in ?? () from /home/arul/miniconda3/envs/vos/lib/python3.7/site-packages/cv2/cv2.cpython-37m-x86_64-linux-gnu.so\r\n#2 0x00007fffe69a0ef5 in ?? () from /home/arul/miniconda3/envs/vos/lib/python3.7/site-packages/cv2/cv2.cpython-37m-x86_64-linux-gnu.so\r\n#3 0x00007fffe70a16c5 in ?? () from /home/arul/miniconda3/envs/vos/lib/python3.7/site-packages/cv2/cv2.cpython-37m-x86_64-linux-gnu.so\r\n#4 0x00007fffe6de97e9 in ?? () from /home/arul/miniconda3/envs/vos/lib/python3.7/site-packages/cv2/cv2.cpython-37m-x86_64-linux-gnu.so\r\n#5 0x00007fffe70a6c31 in ?? () from /home/arul/miniconda3/envs/vos/lib/python3.7/site-packages/cv2/cv2.cpython-37m-x86_64-linux-gnu.so\r\n#6 0x00007fffe70aa5a7 in ?? () from /home/arul/miniconda3/envs/vos/lib/python3.7/site-packages/cv2/cv2.cpython-37m-x86_64-linux-gnu.so\r\n#7 0x00007fffe6de963e in ?? () from /home/arul/miniconda3/envs/vos/lib/python3.7/site-packages/cv2/cv2.cpython-37m-x86_64-linux-gnu.so\r\n#8 0x00007fffe6dea04a in ?? () from /home/arul/miniconda3/envs/vos/lib/python3.7/site-packages/cv2/cv2.cpython-37m-x86_64-linux-gnu.so\r\n#9 0x00007fffe6dead1d in ?? () from /home/arul/miniconda3/envs/vos/lib/python3.7/site-packages/cv2/cv2.cpython-37m-x86_64-linux-gnu.so\r\n#10 0x00007fffe6deae89 in ?? () from /home/arul/miniconda3/envs/vos/lib/python3.7/site-packages/cv2/cv2.cpython-37m-x86_64-linux-gnu.so\r\n#11 0x00007ffff7bc16ba in start_thread (arg=0x7fff737fe700) at pthread_create.c:333\r\n#12 0x00007ffff78f741d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n```\r\n\r\nAny idea on what could be wrong?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/543", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/543/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/543/events", "html_url": "https://github.com/aleju/imgaug/issues/543", "id": 544064066, "node_id": "MDU6SXNzdWU1NDQwNjQwNjY=", "number": 543, "title": "AttributeError: module 'imgaug.augmenters' has no attribute 'MultiplyHueAndSaturation'", "user": {"login": "erwangccc", "id": 47174977, "node_id": "MDQ6VXNlcjQ3MTc0OTc3", "avatar_url": "https://avatars2.githubusercontent.com/u/47174977?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erwangccc", "html_url": "https://github.com/erwangccc", "followers_url": "https://api.github.com/users/erwangccc/followers", "following_url": "https://api.github.com/users/erwangccc/following{/other_user}", "gists_url": "https://api.github.com/users/erwangccc/gists{/gist_id}", "starred_url": "https://api.github.com/users/erwangccc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erwangccc/subscriptions", "organizations_url": "https://api.github.com/users/erwangccc/orgs", "repos_url": "https://api.github.com/users/erwangccc/repos", "events_url": "https://api.github.com/users/erwangccc/events{/privacy}", "received_events_url": "https://api.github.com/users/erwangccc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-31T02:00:21Z", "updated_at": "2020-01-12T12:28:18Z", "closed_at": "2020-01-12T12:28:17Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,guys,I meet this error when using imgaug. Meet this error when running `train.py`, I can use imgaug normally on other `.py` which is at same project. Is there a solution for this error?\r\nI would appreciate it if you have suggestions.\r\n\r\n    OS:ubantu16.04\r\n    imgaug:0.3.0\r\n\r\n`images = iaa.MultiplyHueAndSaturation(mul_hue=(0.8, 1.3), mul_saturation=(0.5, 1.5),per_channel=True)(image=images)`\r\n\r\n```\r\nOriginal Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/utils/data/_utils/worker.py\", line 178, in _worker_loop\r\n    data = fetcher.fetch(index)\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/utils/data/_utils/fetch.py\", line 44, in fetch\r\n    data = [self.dataset[idx] for idx in possibly_batched_index]\r\n  File \"/usr/local/lib/python3.5/dist-packages/torch/utils/data/_utils/fetch.py\", line 44, in <listcomp>\r\n    data = [self.dataset[idx] for idx in possibly_batched_index]\r\n  File \"utils/datasets.py\", line 107, in __getitem__\r\n    img_ia = color_enhance(img_ia)\r\n  File \"utils/augmentations.py\", line 151, in color_enhance\r\n    images = iaa.MultiplyHueAndSaturation(mul_hue=(0.8, 1.3), mul_saturation=(0.5, 1.5),per_channel=True)(image=images)\r\nAttributeError: module 'imgaug.augmenters' has no attribute 'MultiplyHueAndSaturation''\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/533", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/533/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/533/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/533/events", "html_url": "https://github.com/aleju/imgaug/issues/533", "id": 541420695, "node_id": "MDU6SXNzdWU1NDE0MjA2OTU=", "number": 533, "title": "I want aug img to specific num", "user": {"login": "Usernamezhx", "id": 14010625, "node_id": "MDQ6VXNlcjE0MDEwNjI1", "avatar_url": "https://avatars3.githubusercontent.com/u/14010625?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Usernamezhx", "html_url": "https://github.com/Usernamezhx", "followers_url": "https://api.github.com/users/Usernamezhx/followers", "following_url": "https://api.github.com/users/Usernamezhx/following{/other_user}", "gists_url": "https://api.github.com/users/Usernamezhx/gists{/gist_id}", "starred_url": "https://api.github.com/users/Usernamezhx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Usernamezhx/subscriptions", "organizations_url": "https://api.github.com/users/Usernamezhx/orgs", "repos_url": "https://api.github.com/users/Usernamezhx/repos", "events_url": "https://api.github.com/users/Usernamezhx/events{/privacy}", "received_events_url": "https://api.github.com/users/Usernamezhx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-12-22T07:58:34Z", "updated_at": "2019-12-23T07:31:47Z", "closed_at": "2019-12-23T07:31:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "first of all. thanks for your work.\r\n\r\ndef process_folder(path, want_num=500):\r\n    all_files = [os.path.join(path, item) for item in os.listdir(path) if not item.startswith('.')]\r\n    if len(all_files) >= want_num:\r\n        return\r\n\r\n    num_iter = math.ceil(want_num * 1.0 / len(all_files))\r\n\r\n    block_list = split_list(all_files, num_work)\r\n    block_img = get_block_img(block_list)\r\n    print('read all img ok')\r\n\r\n    batches = [UnnormalizedBatch(images=block_img[i]) for i in range(num_work)]\r\n\r\n    with augment.pool(processes=-1, seed=1) as pool:\r\n        for _ in range(num_iter):\r\n            my_generator = create_generator(batches)\r\n            batches_aug = pool.imap_batches(my_generator, output_buffer_size=5)\r\n            for one_batch in batches_aug:\r\n                for item in one_batch.images_aug:\r\n                    try:\r\n                        save_img(path, item)\r\n                    except:\r\n                        continue\r\n                if len(os.listdir(path)) >= want_num:\r\n                    return\r\n\r\n                print('current num {}'.format(len(os.listdir(path))))\r\n\r\nbut it show me that:\r\n\r\nTraceback (most recent call last):\r\n  File \"multible_aug_v2.py\", line 111, in <module>\r\n    main()\r\n  File \"multible_aug_v2.py\", line 106, in main\r\n    process_folder(folder_path)\r\n  File \"multible_aug_v2.py\", line 91, in process_folder\r\n    for one_batch in batches_aug:\r\n  File \"/data2/zhx3/env3/lib/python3.5/site-packages/imgaug/multicore.py\", line 269, in imap_batches\r\n    for batch in gen:\r\n  File \"/usr/lib/python3.5/multiprocessing/pool.py\", line 695, in next\r\n    raise value\r\nmultiprocessing.pool.MaybeEncodingError: Error sending result: '<imgaug.augmentables.batches.UnnormalizedBatch object at 0x7fd7dbde7588>'. Reason: 'error(\"'i' format requires -2147483648 <= number <= 2147483647\",)'", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/524", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/524/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/524/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/524/events", "html_url": "https://github.com/aleju/imgaug/issues/524", "id": 538726945, "node_id": "MDU6SXNzdWU1Mzg3MjY5NDU=", "number": 524, "title": "Mathematical operations don't re-sample parameters", "user": {"login": "soswow", "id": 108065, "node_id": "MDQ6VXNlcjEwODA2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/108065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soswow", "html_url": "https://github.com/soswow", "followers_url": "https://api.github.com/users/soswow/followers", "following_url": "https://api.github.com/users/soswow/following{/other_user}", "gists_url": "https://api.github.com/users/soswow/gists{/gist_id}", "starred_url": "https://api.github.com/users/soswow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soswow/subscriptions", "organizations_url": "https://api.github.com/users/soswow/orgs", "repos_url": "https://api.github.com/users/soswow/repos", "events_url": "https://api.github.com/users/soswow/events{/privacy}", "received_events_url": "https://api.github.com/users/soswow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-16T22:59:35Z", "updated_at": "2019-12-16T23:09:12Z", "closed_at": "2019-12-16T23:09:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "```python\r\nscale_param = iap.Uniform(0.2, 0.6)\r\nprint(scale_param.draw_samples(5))\r\ntranslate_px_x = iap.Divide(-200, scale_param)\r\nprint(translate_px_x.draw_samples(5))\r\n```\r\n\r\nActual result:\r\n```\r\n[0.4469926  0.44466126 0.20282652 0.20922497 0.40990986]\r\n[-767.30352088 -767.30352088 -767.30352088 -767.30352088 -767.30352088]\r\n```\r\n\r\nThe expected result would have second samples to be result of division of -200 by each of the samples from first random variable.\r\n\r\nCalling `draw_sample()` does seems to be getting new value from `scale_param` everytime it's called.\r\n```python\r\nfor i in range(5):\r\n    print(translate_px_x.draw_sample())\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/521", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/521/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/521/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/521/events", "html_url": "https://github.com/aleju/imgaug/issues/521", "id": 536095794, "node_id": "MDU6SXNzdWU1MzYwOTU3OTQ=", "number": 521, "title": "Flip.Fliplr does not modify bounding boxes appropriately", "user": {"login": "mathild7", "id": 10726578, "node_id": "MDQ6VXNlcjEwNzI2NTc4", "avatar_url": "https://avatars1.githubusercontent.com/u/10726578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mathild7", "html_url": "https://github.com/mathild7", "followers_url": "https://api.github.com/users/mathild7/followers", "following_url": "https://api.github.com/users/mathild7/following{/other_user}", "gists_url": "https://api.github.com/users/mathild7/gists{/gist_id}", "starred_url": "https://api.github.com/users/mathild7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mathild7/subscriptions", "organizations_url": "https://api.github.com/users/mathild7/orgs", "repos_url": "https://api.github.com/users/mathild7/repos", "events_url": "https://api.github.com/users/mathild7/events{/privacy}", "received_events_url": "https://api.github.com/users/mathild7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-12-11T02:00:14Z", "updated_at": "2020-02-03T19:57:43Z", "closed_at": "2019-12-11T04:53:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/520", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/520/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/520/events", "html_url": "https://github.com/aleju/imgaug/issues/520", "id": 536052380, "node_id": "MDU6SXNzdWU1MzYwNTIzODA=", "number": 520, "title": "Dropout Applied Per Channel When per_channel=False", "user": {"login": "gcmurray", "id": 25459632, "node_id": "MDQ6VXNlcjI1NDU5NjMy", "avatar_url": "https://avatars3.githubusercontent.com/u/25459632?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gcmurray", "html_url": "https://github.com/gcmurray", "followers_url": "https://api.github.com/users/gcmurray/followers", "following_url": "https://api.github.com/users/gcmurray/following{/other_user}", "gists_url": "https://api.github.com/users/gcmurray/gists{/gist_id}", "starred_url": "https://api.github.com/users/gcmurray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gcmurray/subscriptions", "organizations_url": "https://api.github.com/users/gcmurray/orgs", "repos_url": "https://api.github.com/users/gcmurray/repos", "events_url": "https://api.github.com/users/gcmurray/events{/privacy}", "received_events_url": "https://api.github.com/users/gcmurray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-12-10T23:26:18Z", "updated_at": "2019-12-21T02:40:54Z", "closed_at": "2019-12-16T22:19:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI am trying to use Dropout augmentation on images for training a model, and I can't seem to get it to work per image so as to \"black out\" pixels. Instead, I'm getting pixels being dropped out per channel, even though per_channel=False. ~~Looking at the code, and comparing it with [this fork, line 4925](https://github.com/abnera/imgaug/blob/master/imgaug/augmenters.py) it seems like the PyPI package version 0.3.0 isn't applying the samples to every channel in a tiled fashion.~~ Presenting images as a batch seems to be the requirement to have it work properly. I am using a picture that starts as grayscale, and is converted to RGB. Here is example code:\r\n```\r\nfrom imgaug import augmenters as iaa\r\nimport skimage\r\nimport skimage.io\r\n\r\ndef augmentation_protocol(mode):\r\n\t\r\n\tif mode in ['val']:\r\n\t\taug = iaa.Dropout(p=(0.15,0.20), per_channel=False)   \r\n\t\t\r\n\t\treturn aug\r\n\t\r\n\tif mode in ['train']:\r\n\t\treturn None\r\n\t\r\n\treturn None\r\n\r\ndef main():\r\n\timport matplotlib\r\n\tmatplotlib.use('Qt4Agg')\r\n\timport matplotlib.pyplot as plt\r\n\timport matplotlib.image as mpimg\r\n\t\r\n\timg = mpimg.imread(\"grayimage.jpg\", format='jpg')\r\n\tif img.ndim != 3:\r\n\t\timg = skimage.color.gray2rgb(img)\r\n\tif img.shape[-1] == 4:\r\n\t\timg = img[..., :3]\r\n\taug = augmentation_protocol('val')\r\n\taug_img = aug(images=img)\r\n\t\r\n\timgplot = plt.imshow(aug_img)\r\n\t#imgplot = plt.imshow(img)\r\n\tplt.show()\r\n\t\r\n\t\r\nif __name__ == \"__main__\":\r\n\tmain()\r\n```\r\nIs this an untracked bug, and if so, can we find a way around this? I've attempted to apply a sequential augmentation, converting to gray colorspace then applying dropout, then back to RGB, however this is an exception due to the colorspace augmentation not allowing conversion from GRAY to RGB.\r\n\r\n*Workaround / proper procedure*\r\nBe sure to present your images in a list.\r\n```     ...\r\n\taug_img = aug(images=[img])\r\n\timgplot = plt.imshow(aug_img[0])\r\n        ...\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/511", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/511/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/511/events", "html_url": "https://github.com/aleju/imgaug/issues/511", "id": 530339666, "node_id": "MDU6SXNzdWU1MzAzMzk2NjY=", "number": 511, "title": "Affine: Translation question", "user": {"login": "r0f1", "id": 7324891, "node_id": "MDQ6VXNlcjczMjQ4OTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7324891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r0f1", "html_url": "https://github.com/r0f1", "followers_url": "https://api.github.com/users/r0f1/followers", "following_url": "https://api.github.com/users/r0f1/following{/other_user}", "gists_url": "https://api.github.com/users/r0f1/gists{/gist_id}", "starred_url": "https://api.github.com/users/r0f1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r0f1/subscriptions", "organizations_url": "https://api.github.com/users/r0f1/orgs", "repos_url": "https://api.github.com/users/r0f1/repos", "events_url": "https://api.github.com/users/r0f1/events{/privacy}", "received_events_url": "https://api.github.com/users/r0f1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-29T13:10:49Z", "updated_at": "2019-11-30T13:07:32Z", "closed_at": "2019-11-30T13:07:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nIs the `translate_percent` parameter of the `Affine` class really in percent? It seems that the whole transformation is really sensitive to this single parameter.  And another question: In which order to you apply the transformations? Do you first rotate and then translate, or first translate and then rotate? \r\nThank you.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/507", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/507/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/507/events", "html_url": "https://github.com/aleju/imgaug/issues/507", "id": 529745588, "node_id": "MDU6SXNzdWU1Mjk3NDU1ODg=", "number": 507, "title": "iaa.Affine translate_px applies same number for x and y", "user": {"login": "soswow", "id": 108065, "node_id": "MDQ6VXNlcjEwODA2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/108065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soswow", "html_url": "https://github.com/soswow", "followers_url": "https://api.github.com/users/soswow/followers", "following_url": "https://api.github.com/users/soswow/following{/other_user}", "gists_url": "https://api.github.com/users/soswow/gists{/gist_id}", "starred_url": "https://api.github.com/users/soswow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soswow/subscriptions", "organizations_url": "https://api.github.com/users/soswow/orgs", "repos_url": "https://api.github.com/users/soswow/repos", "events_url": "https://api.github.com/users/soswow/events{/privacy}", "received_events_url": "https://api.github.com/users/soswow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-11-28T07:45:47Z", "updated_at": "2019-11-28T19:54:13Z", "closed_at": "2019-11-28T08:00:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Something like this:\r\n```python\r\nseq = iaa.Sequential([\r\n      iaa.Affine(\r\n          translate_px=(-500, 500)\r\n      ),\r\n  ])\r\n```\r\nSeems to be producing augmentation with x and y having same sign. Specifically I can see visually that augmentation either moves bounding boxes up left or right bottom. Which I think means it uses same number for x and y modification. They are always seems to be on the same diagonal, which means x and y translation number is the same.\r\n\r\nI can come up with simple reproduce code if needed if it's something to do with my setup.\r\n\r\nThis is how it looks for me:\r\n<img width=\"815\" alt=\"Screen Shot 2019-11-28 at 6 39 58 PM\" src=\"https://user-images.githubusercontent.com/108065/69786787-3159ce80-120f-11ea-9023-3f45d8df51a8.png\">\r\n<img width=\"812\" alt=\"Screen Shot 2019-11-28 at 6 39 21 PM\" src=\"https://user-images.githubusercontent.com/108065/69786789-31f26500-120f-11ea-953e-4d4f9043e6bf.png\">\r\n<img width=\"815\" alt=\"Screen Shot 2019-11-28 at 6 38 58 PM\" src=\"https://user-images.githubusercontent.com/108065/69786790-31f26500-120f-11ea-8f5c-13ca13519b8c.png\">\r\n(they all start in the middle)\r\n\r\nThe expected behaviour would be to randomly move it around +- number I say.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/505", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/505/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/505/events", "html_url": "https://github.com/aleju/imgaug/issues/505", "id": 528685227, "node_id": "MDU6SXNzdWU1Mjg2ODUyMjc=", "number": 505, "title": "iap.Uniform with translate_px causes translation well beyond specified limits ", "user": {"login": "soswow", "id": 108065, "node_id": "MDQ6VXNlcjEwODA2NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/108065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/soswow", "html_url": "https://github.com/soswow", "followers_url": "https://api.github.com/users/soswow/followers", "following_url": "https://api.github.com/users/soswow/following{/other_user}", "gists_url": "https://api.github.com/users/soswow/gists{/gist_id}", "starred_url": "https://api.github.com/users/soswow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/soswow/subscriptions", "organizations_url": "https://api.github.com/users/soswow/orgs", "repos_url": "https://api.github.com/users/soswow/repos", "events_url": "https://api.github.com/users/soswow/events{/privacy}", "received_events_url": "https://api.github.com/users/soswow/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234896470, "node_id": "MDU6TGFiZWwyMzQ4OTY0NzA=", "url": "https://api.github.com/repos/aleju/imgaug/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-26T12:12:52Z", "updated_at": "2019-11-28T19:50:24Z", "closed_at": "2019-11-28T19:50:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Here is an example of a problem:\r\nhttps://colab.research.google.com/drive/1OM--s8zhyesrzugQxWvHdWRiawko8odx\r\n\r\n```python\r\nseq = iaa.Sequential([\r\n    iaa.Affine(\r\n      translate_px=iap.Uniform(-100, 100) # BUG!\r\n      # translate_px=(-100, 100) # Works fine\r\n    ),\r\n])\r\n\r\nbbs = BoundingBoxesOnImage([\r\n  BoundingBox(x1=200, x2=400, y1=200, y2=400)\r\n], shape=img.shape)\r\n\r\nimgs, bbois = seq(images=[img], bounding_boxes=[bbs])\r\n```\r\nUsing this code ^ the resulting translation is massive. It's in hundreds of thousands when  I use Uniform instead of defining `translate_px` as just a tuple.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/497", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/497/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/497/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/497/events", "html_url": "https://github.com/aleju/imgaug/issues/497", "id": 523002598, "node_id": "MDU6SXNzdWU1MjMwMDI1OTg=", "number": 497, "title": " augment_batches(..., background=True) relaunches the same script it has been called upon.", "user": {"login": "Attrezzi", "id": 26741549, "node_id": "MDQ6VXNlcjI2NzQxNTQ5", "avatar_url": "https://avatars3.githubusercontent.com/u/26741549?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Attrezzi", "html_url": "https://github.com/Attrezzi", "followers_url": "https://api.github.com/users/Attrezzi/followers", "following_url": "https://api.github.com/users/Attrezzi/following{/other_user}", "gists_url": "https://api.github.com/users/Attrezzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Attrezzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Attrezzi/subscriptions", "organizations_url": "https://api.github.com/users/Attrezzi/orgs", "repos_url": "https://api.github.com/users/Attrezzi/repos", "events_url": "https://api.github.com/users/Attrezzi/events{/privacy}", "received_events_url": "https://api.github.com/users/Attrezzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-14T17:30:16Z", "updated_at": "2019-11-14T19:16:25Z", "closed_at": "2019-11-14T19:16:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, \r\nI've been using imgaug these days and due to the amount of augmentations I need to perform, I decided to give a shot and use the multicore version of the augmentation.\r\nIn my script, I'm looping over the images contained in a folder. Once an image has been loaded, I copy it 100 times and fit these copies inside some UnnormalizedBatches. Then, I simply call  augment_batches(..., background=True) as provided in the notebook, but something strange happens. It seems that each generated thread launches itself the script in which I call augment_batches.\r\n\r\nThe error shows in the console is:\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\spawn.py\", line 105, in spawn_main\r\n    exitcode = _main(fd)\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\spawn.py\", line 114, in _main\r\n    prepare(preparation_data)\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\spawn.py\", line 225, in prepare\r\n    _fixup_main_from_path(data['init_main_from_path'])\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\spawn.py\", line 277, in _fixup_main_from_path\r\n    run_name=\"__mp_main__\")\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\runpy.py\", line 263, in run_path\r\n    pkg_name=pkg_name, script_name=fname)\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\runpy.py\", line 96, in _run_module_code\r\n    mod_name, mod_spec, pkg_name, script_name)\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\runpy.py\", line 85, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Users\\Gabri\\Desktop\\Thesis\\UICThesis\\DataPreprocessing\\data_augmentation.py\", line 147, in <module>\r\n    create_augmented_dataset()\r\n  File \"C:\\Users\\Gabri\\Desktop\\Thesis\\UICThesis\\DataPreprocessing\\data_augmentation.py\", line 123, in create_augmented_dataset\r\n    for augmented_batch in augmentations.augment_batches(batches, background=True):\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\imgaug\\augmenters\\meta.py\", line 473, in augment_batches\r\n    with multicore.Pool(self) as pool:\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\imgaug\\multicore.py\", line 337, in __enter__\r\n    _ = self.pool  # initialize internal multiprocessing pool instance\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\imgaug\\multicore.py\", line 152, in pool\r\n    maxtasksperchild=self.maxtasksperchild)\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\context.py\", line 119, in Pool\r\n    context=self.get_context())\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\pool.py\", line 174, in __init__\r\n    self._repopulate_pool()\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\pool.py\", line 239, in _repopulate_pool\r\n    w.start()\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\process.py\", line 105, in start\r\n    self._popen = self._Popen(self)\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\context.py\", line 322, in _Popen\r\n    return Popen(process_obj)\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\popen_spawn_win32.py\", line 33, in __init__\r\n    prep_data = spawn.get_preparation_data(process_obj._name)\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\spawn.py\", line 143, in get_preparation_data\r\n    _check_not_importing_main()\r\n  File \"C:\\Users\\Gabri\\AppData\\Local\\Programs\\Python\\Python36\\lib\\multiprocessing\\spawn.py\", line 136, in _check_not_importing_main\r\n    is not going to be frozen to produce an executable.''')\r\nRuntimeError: \r\n        An attempt has been made to start a new process before the\r\n        current process has finished its bootstrapping phase.\r\n\r\n        This probably means that you are not using fork to start your\r\n        child processes and you have forgotten to use the proper idiom\r\n        in the main module:\r\n\r\n            if __name__ == '__main__':\r\n                freeze_support()\r\n                ...\r\n\r\n        The \"freeze_support()\" line can be omitted if the program\r\n        is not going to be frozen to produce an executable.\r\n\r\nDoes someone have some hints on why this problem appears and how to solve it?\r\n\r\nThanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/496", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/496/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/496/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/496/events", "html_url": "https://github.com/aleju/imgaug/issues/496", "id": 522850421, "node_id": "MDU6SXNzdWU1MjI4NTA0MjE=", "number": 496, "title": "Keypoints relocate wrongly when rotated", "user": {"login": "off99555", "id": 15215732, "node_id": "MDQ6VXNlcjE1MjE1NzMy", "avatar_url": "https://avatars3.githubusercontent.com/u/15215732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/off99555", "html_url": "https://github.com/off99555", "followers_url": "https://api.github.com/users/off99555/followers", "following_url": "https://api.github.com/users/off99555/following{/other_user}", "gists_url": "https://api.github.com/users/off99555/gists{/gist_id}", "starred_url": "https://api.github.com/users/off99555/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/off99555/subscriptions", "organizations_url": "https://api.github.com/users/off99555/orgs", "repos_url": "https://api.github.com/users/off99555/repos", "events_url": "https://api.github.com/users/off99555/events{/privacy}", "received_events_url": "https://api.github.com/users/off99555/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-11-14T13:15:33Z", "updated_at": "2019-11-16T08:53:19Z", "closed_at": "2019-11-16T08:53:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I observed that when I use `iaa.Affine(rotate=\"anything that is not zero\")`, the keypoints shifted wrongly on the small image.\r\n\r\nIn the following image, the 3rd plot is rotated by 180 degrees, but somehow the keypoints are not in the center of the circle. The problem is more noticeable when you resize the image further to 30x30.\r\n![image](https://user-images.githubusercontent.com/15215732/68859953-0b1a3600-071b-11ea-8a56-03a6e2655ea0.png)\r\n\r\n\r\nHere's the minimal code to reproduce the issue:\r\n```python\r\nimport cv2 as cv\r\nimport numpy as np\r\nimport imgaug as ia\r\nfrom imgaug import augmenters as iaa\r\nfrom imgaug.augmentables.kps import KeypointsOnImage\r\n\r\ndef enlarge_and_plot(img, koi):\r\n    plot = cv.resize(img, (600, 600))\r\n    plot = koi.on(plot).draw_on_image(plot, size=10)\r\n    return plot\r\n\r\n# creating big image and big keypoints\r\nimg = np.ones((500,500,3), dtype=np.uint8) * 255\r\ncoords = [100,100,200,200,300,300,400,400,100,400]  # list of XY coordinates\r\ncoords = np.float32(coords).reshape((-1, 2))\r\nfor coord in coords:\r\n    cv.circle(img, tuple(coord), 10, (0,0,0), thickness=3)\r\nkoi = KeypointsOnImage.from_xy_array(coords, img.shape)\r\nplot1 = enlarge_and_plot(img, koi)\r\n\r\n# make small image and small keypoints\r\nimg = cv.resize(img, (45, 45))\r\nkoi = koi.on(img)\r\nplot2 = enlarge_and_plot(img, koi)\r\n\r\n# rotate small image and small keypoints\r\nprint(koi)\r\nimg, koi = iaa.Affine(rotate=180)(image=img, keypoints=koi)\r\nprint(koi)\r\nplot3 = enlarge_and_plot(img, koi)\r\n\r\nia.imshow(np.hstack([plot1, plot2, plot3]))\r\n```\r\n\r\nI don't know if this is a bug or it's simply my mistake of how I'm using the library. Please give me insight. @aleju \r\n\r\nBut I think it's kind of an off-by-one error. I see that the first coordinate (100,100) gets mapped to (9,9) on 45x45 image, which is correct, but after rotation, the coordinate gets mapped to (35,35) which should be (36,36) if I understand correctly.\r\nHere's the output of the program:\r\n```python\r\nKeypointsOnImage([Keypoint(x=9.00000000, y=9.00000000), Keypoint(x=18.00000000, y=18.00000000), Keypoint(x=27.00000191, y=27.00000191), Keypoint(x=36.00000000, y=36.00000000), Keypoint(x=9.00000000, y=36.00000000)], shape=(45, 45, 3))\r\nKeypointsOnImage([Keypoint(x=35.00000000, y=35.00000000), Keypoint(x=26.00000000, y=26.00000000), Keypoint(x=16.99999809, y=16.99999809), Keypoint(x=8.00000000, y=8.00000000), Keypoint(x=35.00000000, y=8.00000000)], shape=(45, 45, 3))\r\n```\r\n\r\nIf this is the case, it means that you won't notice this bug in a big image because one pixel wrong is not  visible to the naked eyes", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/494", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/494/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/494/events", "html_url": "https://github.com/aleju/imgaug/issues/494", "id": 522099547, "node_id": "MDU6SXNzdWU1MjIwOTk1NDc=", "number": 494, "title": "Is this a mistake in the tutorial?", "user": {"login": "off99555", "id": 15215732, "node_id": "MDQ6VXNlcjE1MjE1NzMy", "avatar_url": "https://avatars3.githubusercontent.com/u/15215732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/off99555", "html_url": "https://github.com/off99555", "followers_url": "https://api.github.com/users/off99555/followers", "following_url": "https://api.github.com/users/off99555/following{/other_user}", "gists_url": "https://api.github.com/users/off99555/gists{/gist_id}", "starred_url": "https://api.github.com/users/off99555/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/off99555/subscriptions", "organizations_url": "https://api.github.com/users/off99555/orgs", "repos_url": "https://api.github.com/users/off99555/repos", "events_url": "https://api.github.com/users/off99555/events{/privacy}", "received_events_url": "https://api.github.com/users/off99555/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1122782516, "node_id": "MDU6TGFiZWwxMTIyNzgyNTE2", "url": "https://api.github.com/repos/aleju/imgaug/labels/TODO", "name": "TODO", "color": "d9c4ff", "default": false, "description": "Planned to be added to the library or changed in the future"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-13T10:16:10Z", "updated_at": "2020-02-02T12:52:21Z", "closed_at": "2020-02-02T12:52:21Z", "author_association": "NONE", "active_lock_reason": null, "body": "![image](https://user-images.githubusercontent.com/15215732/68754441-417f8480-0639-11ea-880a-ceceff02ee2f.png)\r\nShould this be `kpsoi.shape` ?\r\n\r\nhttps://nbviewer.jupyter.org/github/aleju/imgaug-doc/blob/master/notebooks/B01%20-%20Augment%20Keypoints.ipynb", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/488", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/488/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/488/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/488/events", "html_url": "https://github.com/aleju/imgaug/issues/488", "id": 520555958, "node_id": "MDU6SXNzdWU1MjA1NTU5NTg=", "number": 488, "title": "Can I do keypoint occlusion with this library?", "user": {"login": "off99555", "id": 15215732, "node_id": "MDQ6VXNlcjE1MjE1NzMy", "avatar_url": "https://avatars3.githubusercontent.com/u/15215732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/off99555", "html_url": "https://github.com/off99555", "followers_url": "https://api.github.com/users/off99555/followers", "following_url": "https://api.github.com/users/off99555/following{/other_user}", "gists_url": "https://api.github.com/users/off99555/gists{/gist_id}", "starred_url": "https://api.github.com/users/off99555/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/off99555/subscriptions", "organizations_url": "https://api.github.com/users/off99555/orgs", "repos_url": "https://api.github.com/users/off99555/repos", "events_url": "https://api.github.com/users/off99555/events{/privacy}", "received_events_url": "https://api.github.com/users/off99555/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-10T05:18:38Z", "updated_at": "2019-11-12T19:54:25Z", "closed_at": "2019-11-12T19:54:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Suppose that I want to randomly put another image on top of the training image, or some synthetic erasing, the library has to tell me which points are occluded.\r\n\r\nFor example, if I have an image of a face with some keypoints, I want to put a finger image with transparent background on top of some of the keypoints (randomly), is this something achievable with this library? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/485", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/485/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/485/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/485/events", "html_url": "https://github.com/aleju/imgaug/issues/485", "id": 518192583, "node_id": "MDU6SXNzdWU1MTgxOTI1ODM=", "number": 485, "title": "AttributeError: 'RNG' object has no attribute 'randint'", "user": {"login": "KUR-creative", "id": 20921187, "node_id": "MDQ6VXNlcjIwOTIxMTg3", "avatar_url": "https://avatars0.githubusercontent.com/u/20921187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KUR-creative", "html_url": "https://github.com/KUR-creative", "followers_url": "https://api.github.com/users/KUR-creative/followers", "following_url": "https://api.github.com/users/KUR-creative/following{/other_user}", "gists_url": "https://api.github.com/users/KUR-creative/gists{/gist_id}", "starred_url": "https://api.github.com/users/KUR-creative/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KUR-creative/subscriptions", "organizations_url": "https://api.github.com/users/KUR-creative/orgs", "repos_url": "https://api.github.com/users/KUR-creative/repos", "events_url": "https://api.github.com/users/KUR-creative/events{/privacy}", "received_events_url": "https://api.github.com/users/KUR-creative/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-11-06T02:13:45Z", "updated_at": "2019-11-06T23:36:41Z", "closed_at": "2019-11-06T18:49:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "When updated v0.3.0, It crashes.\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"train.py\", line 403, in <module>\r\n    main(experiment_yml_path) \r\n  File \"train.py\", line 364, in main\r\n    callbacks=[model_checkpoint,tboard,reduce_lr])\r\n  File \"/usr/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training.py\", line 1297, in fit_generator\r\n    steps_name='steps_per_epoch')\r\n  File \"/usr/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_generator.py\", line 221, in model_iteration\r\n    batch_data = _get_next_batch(generator)\r\n  File \"/usr/lib/python3.7/site-packages/tensorflow_core/python/keras/engine/training_generator.py\", line 363, in _get_next_batch\r\n    generator_output = next(generator)\r\n  File \"/usr/lib/python3.7/site-packages/tensorflow_core/python/keras/utils/data_utils.py\", line 918, in get\r\n    six.reraise(*sys.exc_info())\r\n  File \"/home/deep-dos/.local/lib/python3.7/site-packages/six.py\", line 696, in reraise\r\n    raise value\r\n  File \"/usr/lib/python3.7/site-packages/tensorflow_core/python/keras/utils/data_utils.py\", line 894, in get\r\n    inputs = self.queue.get(block=True).get()\r\n  File \"/usr/lib/python3.7/multiprocessing/pool.py\", line 657, in get\r\n    raise self._value\r\n  File \"/usr/lib/python3.7/multiprocessing/pool.py\", line 121, in worker\r\n    result = (True, func(*args, **kwds))\r\n  File \"/usr/lib/python3.7/site-packages/tensorflow_core/python/keras/utils/data_utils.py\", line 828, in next_sample\r\n    return six.next(_SHARED_SEQUENCES[uid])\r\n  File \"train.py\", line 74, in batch_gen\r\n    img_batch = aug_det.augment_images(img_batch)\r\n  File \"/home/deep-dos/.local/lib/python3.7/site-packages/imgaug/augmenters/meta.py\", line 695, in augment_images\r\n    hooks=hooks\r\n  File \"/home/deep-dos/.local/lib/python3.7/site-packages/imgaug/augmenters/meta.py\", line 2961, in _augment_images\r\n    images, random_state, parents, hooks, \"augment_images\")\r\n  File \"/home/deep-dos/.local/lib/python3.7/site-packages/imgaug/augmenters/meta.py\", line 2995, in _augment_augmentables\r\n    hooks=hooks\r\n  File \"/home/deep-dos/.local/lib/python3.7/site-packages/imgaug/augmenters/meta.py\", line 633, in augment_images\r\n    hooks=hooks\r\n  File \"/home/deep-dos/.local/lib/python3.7/site-packages/imgaug/augmenters/meta.py\", line 4093, in _augment_images\r\n    return self.func_images(images, random_state, parents, hooks)\r\n  File \"train.py\", line 40, in func_images\r\n    y = random_state.randint(0, h - size)\r\nAttributeError: 'RNG' object has no attribute 'randint'\r\n```\r\n\r\nI fixed it by downgrading imgaug to v0.2.9\r\n\r\nThanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/472", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/472/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/472/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/472/events", "html_url": "https://github.com/aleju/imgaug/issues/472", "id": 514444644, "node_id": "MDU6SXNzdWU1MTQ0NDQ2NDQ=", "number": 472, "title": "What is `Sometimes()` for?", "user": {"login": "Raazzta", "id": 52389138, "node_id": "MDQ6VXNlcjUyMzg5MTM4", "avatar_url": "https://avatars2.githubusercontent.com/u/52389138?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Raazzta", "html_url": "https://github.com/Raazzta", "followers_url": "https://api.github.com/users/Raazzta/followers", "following_url": "https://api.github.com/users/Raazzta/following{/other_user}", "gists_url": "https://api.github.com/users/Raazzta/gists{/gist_id}", "starred_url": "https://api.github.com/users/Raazzta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Raazzta/subscriptions", "organizations_url": "https://api.github.com/users/Raazzta/orgs", "repos_url": "https://api.github.com/users/Raazzta/repos", "events_url": "https://api.github.com/users/Raazzta/events{/privacy}", "received_events_url": "https://api.github.com/users/Raazzta/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-30T07:08:46Z", "updated_at": "2019-10-30T07:32:24Z", "closed_at": "2019-10-30T07:32:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "After reading over and over again, I still cant get the point of this function:\r\n```\r\n# Sometimes(0.5, ...) applies the given augmenter in 50% of all cases,\r\n# e.g. Sometimes(0.5, GaussianBlur(0.3)) would blur roughly every second image.\r\nsometimes = lambda aug: iaa.Sometimes(0.5, aug)\r\n```\r\nCan somebody tell me what `Sometimes()` is for? Sorry for this naive question. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/464", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/464/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/464/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/464/events", "html_url": "https://github.com/aleju/imgaug/issues/464", "id": 510144290, "node_id": "MDU6SXNzdWU1MTAxNDQyOTA=", "number": 464, "title": "Make BoundingBoxesOnImage iterable", "user": {"login": "doraemon96", "id": 1503935, "node_id": "MDQ6VXNlcjE1MDM5MzU=", "avatar_url": "https://avatars1.githubusercontent.com/u/1503935?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doraemon96", "html_url": "https://github.com/doraemon96", "followers_url": "https://api.github.com/users/doraemon96/followers", "following_url": "https://api.github.com/users/doraemon96/following{/other_user}", "gists_url": "https://api.github.com/users/doraemon96/gists{/gist_id}", "starred_url": "https://api.github.com/users/doraemon96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doraemon96/subscriptions", "organizations_url": "https://api.github.com/users/doraemon96/orgs", "repos_url": "https://api.github.com/users/doraemon96/repos", "events_url": "https://api.github.com/users/doraemon96/events{/privacy}", "received_events_url": "https://api.github.com/users/doraemon96/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1122782516, "node_id": "MDU6TGFiZWwxMTIyNzgyNTE2", "url": "https://api.github.com/repos/aleju/imgaug/labels/TODO", "name": "TODO", "color": "d9c4ff", "default": false, "description": "Planned to be added to the library or changed in the future"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-21T17:30:20Z", "updated_at": "2019-11-24T09:55:52Z", "closed_at": "2019-11-24T09:55:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "It would be useful to perform some operations on bounding boxes. For that matter, you should be able to iterate through them as a container for BoundingBox elements.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/449", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/449/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/449/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/449/events", "html_url": "https://github.com/aleju/imgaug/issues/449", "id": 501281011, "node_id": "MDU6SXNzdWU1MDEyODEwMTE=", "number": 449, "title": "Error when augmenting segmentation maps with non-continuous classs", "user": {"login": "thezaza101", "id": 27200279, "node_id": "MDQ6VXNlcjI3MjAwMjc5", "avatar_url": "https://avatars1.githubusercontent.com/u/27200279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thezaza101", "html_url": "https://github.com/thezaza101", "followers_url": "https://api.github.com/users/thezaza101/followers", "following_url": "https://api.github.com/users/thezaza101/following{/other_user}", "gists_url": "https://api.github.com/users/thezaza101/gists{/gist_id}", "starred_url": "https://api.github.com/users/thezaza101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thezaza101/subscriptions", "organizations_url": "https://api.github.com/users/thezaza101/orgs", "repos_url": "https://api.github.com/users/thezaza101/repos", "events_url": "https://api.github.com/users/thezaza101/events{/privacy}", "received_events_url": "https://api.github.com/users/thezaza101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-02T05:14:51Z", "updated_at": "2019-10-02T06:13:14Z", "closed_at": "2019-10-02T06:13:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Error seems to occur when the classes present on a segmentation map is not continuous (0-n classes) . For example the following error occurs on a image with the following classes: `[ 0,  1,  2,  7, 18, 19, 22, 26, 31, 36, 39]` but doesnt occur if i flatten the classes to `[ 0,  1,  2,  3, 4, 5, 6, 7, 8, 9, 10]`\r\n\r\n```\r\n<ipython-input-3-075ab524a373> in processImages(filterCol, inputImagePairs, filePairPaths, dataPathImg, dataPathAnnot)\r\n    108             outputAugment = []\r\n    109             for tup in inputImagePairs:\r\n--> 110                 outputAugment.append(augment_seg(tup, value))\r\n    111             #print('Saving output of filter \\''+ key +'\\'')\r\n    112             saveAugmentOutputs(outputAugment, filePairPaths, key, dataPathImg, dataPathAnnot)\r\n\r\n<ipython-input-3-075ab524a373> in augment_seg(imSegTuple, filterSeq)\r\n     39     aug_det = filterSeq.to_deterministic()\r\n     40     image_aug = aug_det.augment_image( img )\r\n---> 41     segmap = ia.SegmentationMapOnImage( seg , nb_classes=len(np.unique(seg)), shape=img.shape )\r\n     42     segmap_aug = aug_det.augment_segmentation_maps( segmap )\r\n     43     segmap_aug = segmap_aug.get_arr_int()\r\n\r\nc:\\program files\\python37\\lib\\site-packages\\imgaug\\augmentables\\segmaps.py in __init__(self, arr, shape, nb_classes)\r\n    115             # TODO improve efficiency here by building only sub-heatmaps for classes actually\r\n    116             # present in the image. This would also get rid of nb_classes.\r\n--> 117             arr = np.eye(nb_classes)[arr]  # from class indices to one hot\r\n    118             arr = arr.astype(np.float32)\r\n    119         elif arr.dtype.kind == \"f\":\r\n\r\nIndexError: index 22 is out of bounds for axis 0 with size 11\r\n\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/442", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/442/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/442/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/442/events", "html_url": "https://github.com/aleju/imgaug/issues/442", "id": 498844464, "node_id": "MDU6SXNzdWU0OTg4NDQ0NjQ=", "number": 442, "title": "Resize precision issue.", "user": {"login": "atranitell", "id": 10227574, "node_id": "MDQ6VXNlcjEwMjI3NTc0", "avatar_url": "https://avatars2.githubusercontent.com/u/10227574?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atranitell", "html_url": "https://github.com/atranitell", "followers_url": "https://api.github.com/users/atranitell/followers", "following_url": "https://api.github.com/users/atranitell/following{/other_user}", "gists_url": "https://api.github.com/users/atranitell/gists{/gist_id}", "starred_url": "https://api.github.com/users/atranitell/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atranitell/subscriptions", "organizations_url": "https://api.github.com/users/atranitell/orgs", "repos_url": "https://api.github.com/users/atranitell/repos", "events_url": "https://api.github.com/users/atranitell/events{/privacy}", "received_events_url": "https://api.github.com/users/atranitell/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234896470, "node_id": "MDU6TGFiZWwyMzQ4OTY0NzA=", "url": "https://api.github.com/repos/aleju/imgaug/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-26T12:11:19Z", "updated_at": "2019-09-29T08:37:07Z", "closed_at": "2019-09-29T08:37:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, when converting a image to float type and calling Resize operation, we found that it is different with the result by only using cv.imread(). Then, we find that\r\n\r\n```python\r\n# in imgaug/augmentors/size.py line: 373\r\n if not isinstance(images, list):\r\n     all_same_size = (len(set([image.shape for image in result])) == 1)\r\n     if all_same_size:\r\n         result = np.array(result, dtype=np.uint8)\r\n```\r\nif the input is not list, it will make a numpy array and **convert to uint8**. The opeartion will result in the inconsistent with our expectation.\r\n\r\nWhile, we could pass the parameters with (images=[image]) to solve the problem, but I'm not sure the intention to do that.\r\n\r\nBest,\r\nKJ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/438", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/438/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/438/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/438/events", "html_url": "https://github.com/aleju/imgaug/issues/438", "id": 497031359, "node_id": "MDU6SXNzdWU0OTcwMzEzNTk=", "number": 438, "title": "CropToFixedSize position issue", "user": {"login": "r0f1", "id": 7324891, "node_id": "MDQ6VXNlcjczMjQ4OTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7324891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r0f1", "html_url": "https://github.com/r0f1", "followers_url": "https://api.github.com/users/r0f1/followers", "following_url": "https://api.github.com/users/r0f1/following{/other_user}", "gists_url": "https://api.github.com/users/r0f1/gists{/gist_id}", "starred_url": "https://api.github.com/users/r0f1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r0f1/subscriptions", "organizations_url": "https://api.github.com/users/r0f1/orgs", "repos_url": "https://api.github.com/users/r0f1/repos", "events_url": "https://api.github.com/users/r0f1/events{/privacy}", "received_events_url": "https://api.github.com/users/r0f1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-23T11:06:10Z", "updated_at": "2019-09-23T21:21:02Z", "closed_at": "2019-09-23T21:21:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Consider the following piece of code:\r\n\r\n```python\r\nimport numpy as np\r\nnp.set_printoptions(linewidth=160)\r\nimage = np.arange(20*20).reshape((20,20))\r\n\r\nxs, ys, w, h = [0,10,15]*3, sorted([0,10,15]*3), 5, 5\r\nres = [image[slice(y, y+h), slice(x, x+w)] for x, y in zip(xs, ys)]\r\n```\r\n<img width=\"668\" alt=\"Unbenannt\" src=\"https://user-images.githubusercontent.com/7324891/65420716-25fab900-de02-11e9-83c6-07cfc2ecb891.PNG\">\r\n<img width=\"156\" alt=\"Unbenannt2\" src=\"https://user-images.githubusercontent.com/7324891/65420717-26934f80-de02-11e9-95fa-5b38eedd0506.PNG\">\r\n\r\nThis code splits up an image, into 9 smaller subimages.\r\nNow look at the following piece of code:\r\n\r\n```python\r\nfrom imgaug.augmenters import CropToFixedSize\r\naugs = [\r\n    CropToFixedSize(width=5, height=5, position=\"right-bottom\"),\r\n    CropToFixedSize(width=5, height=5, position=\"center-bottom\"),\r\n    CropToFixedSize(width=5, height=5, position=\"left-bottom\"),\r\n    CropToFixedSize(width=5, height=5, position=\"right-center\"),\r\n    CropToFixedSize(width=5, height=5, position=\"center-center\"),\r\n    CropToFixedSize(width=5, height=5, position=\"left-center\"),\r\n    CropToFixedSize(width=5, height=5, position=\"right-top\"),\r\n    CropToFixedSize(width=5, height=5, position=\"center-top\"),\r\n    CropToFixedSize(width=5, height=5, position=\"left-top\")\r\n]\r\nfor a in augs:\r\n    print(a.augment_image(image))\r\n```\r\n\r\nThis piece will produce exactly the same result. I am confused however with the parameters of passed to the `position` argument. E.g. `\"right-bottom\"` is not in the bottom right, but rather in the top left. `\"cencer-bottom\"` is in the center at the top. etc. You can maybe explain why that is?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/434", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/434/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/434/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/434/events", "html_url": "https://github.com/aleju/imgaug/issues/434", "id": 495686762, "node_id": "MDU6SXNzdWU0OTU2ODY3NjI=", "number": 434, "title": "Rot90 in all 4 possible rotations, k=imgaug.ALL gives error", "user": {"login": "sbj028", "id": 5548128, "node_id": "MDQ6VXNlcjU1NDgxMjg=", "avatar_url": "https://avatars2.githubusercontent.com/u/5548128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sbj028", "html_url": "https://github.com/sbj028", "followers_url": "https://api.github.com/users/sbj028/followers", "following_url": "https://api.github.com/users/sbj028/following{/other_user}", "gists_url": "https://api.github.com/users/sbj028/gists{/gist_id}", "starred_url": "https://api.github.com/users/sbj028/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sbj028/subscriptions", "organizations_url": "https://api.github.com/users/sbj028/orgs", "repos_url": "https://api.github.com/users/sbj028/repos", "events_url": "https://api.github.com/users/sbj028/events{/privacy}", "received_events_url": "https://api.github.com/users/sbj028/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-19T09:39:08Z", "updated_at": "2019-09-23T07:27:30Z", "closed_at": "2019-09-23T07:27:30Z", "author_association": "NONE", "active_lock_reason": null, "body": "Considering the documentation for:\r\n _imgaug.augmenters.geometric.Rot90(k, keep_size=True, name=None, deterministic=False, random_state=None)_\r\n\r\n**k** is defined to be an int, list of int, tuple of int or imgaug.ALL, where imgaug.ALL, then equivalant to list [0, 1, 2, 3]. \r\nSince I'm interested in all four possible rotations I try with k = imgaug.ALL but receive the following error: \r\n\r\nTraceback (most recent call last):\r\n  File \"<input>\", line 1, in <module>\r\n  File \"/snap/pycharm-community/150/helpers/pydev/_pydev_bundle/pydev_umd.py\", line 197, in runfile\r\n    pydev_imports.execfile(filename, global_vars, local_vars)  # execute the script\r\n  File \"/snap/pycharm-community/150/helpers/pydev/_pydev_imps/_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \".../test_lib_imgaug.py\", line 18, in <module>\r\n    rotate = iaa.geometric.Rot90(k=imgaug.ALL, keep_size=True, name=None, deterministic=False, random_state=None)\r\n  File \".../lib/python3.6/site-packages/imgaug/augmenters/geometric.py\", line 3138, in __init__\r\n    allow_floats=False)\r\n  File \".../lib/python3.6/site-packages/imgaug/parameters.py\", line 98, in handle_discrete_param\r\n    name, \"number\" if allow_floats else \"integer\", [type(v) for v in param],))\r\n  File .../lib/python3.6/site-packages/imgaug/imgaug.py\", line 1869, in do_assert\r\n    raise AssertionError(str(message))\r\nAssertionError: Expected iterable parameter 'k' to only contain integer, got [<class 'str'>, <class 'str'>, <class 'str'>].\r\n\r\nIt seems like it's not possible to use k=imgaug.ALL as an argument? Or could you please explain how to be able to retrieve all 4 rotations. \r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/430", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/430/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/430/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/430/events", "html_url": "https://github.com/aleju/imgaug/issues/430", "id": 494563387, "node_id": "MDU6SXNzdWU0OTQ1NjMzODc=", "number": 430, "title": "Augmenting dimension size 0 raises SIGSEGV or returns dimension size 512", "user": {"login": "rugheid", "id": 9199556, "node_id": "MDQ6VXNlcjkxOTk1NTY=", "avatar_url": "https://avatars0.githubusercontent.com/u/9199556?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rugheid", "html_url": "https://github.com/rugheid", "followers_url": "https://api.github.com/users/rugheid/followers", "following_url": "https://api.github.com/users/rugheid/following{/other_user}", "gists_url": "https://api.github.com/users/rugheid/gists{/gist_id}", "starred_url": "https://api.github.com/users/rugheid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rugheid/subscriptions", "organizations_url": "https://api.github.com/users/rugheid/orgs", "repos_url": "https://api.github.com/users/rugheid/repos", "events_url": "https://api.github.com/users/rugheid/events{/privacy}", "received_events_url": "https://api.github.com/users/rugheid/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234896470, "node_id": "MDU6TGFiZWwyMzQ4OTY0NzA=", "url": "https://api.github.com/repos/aleju/imgaug/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-09-17T11:24:05Z", "updated_at": "2019-09-22T16:50:35Z", "closed_at": "2019-09-22T13:03:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "When I run the following code:\r\n```python\r\nimport imgaug\r\nimport numpy\r\n\r\naugmentation = imgaug.augmenters.Sequential([\r\n    imgaug.augmenters.Affine(rotate=(-90.0, 90.0)),\r\n])\r\ndet = augmentation.to_deterministic()\r\n\r\n\r\nmask = numpy.zeros((1024, 1024, 0), dtype=numpy.uint8)\r\naugmented = det.augment_image(mask)\r\nprint(mask.shape, augmented.shape)\r\n```\r\nIt prints `(1024, 1024, 0) (1024, 1024, 512)` or raises a `SIGSEGV` error. I know passing a numpy array with shape size 0 is weird, but it's handy to support it when using images without any instances.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/425", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/425/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/425/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/425/events", "html_url": "https://github.com/aleju/imgaug/issues/425", "id": 493825242, "node_id": "MDU6SXNzdWU0OTM4MjUyNDI=", "number": 425, "title": "What is the principle of elastic deformation implement of key points?", "user": {"login": "hhaAndroid", "id": 17425982, "node_id": "MDQ6VXNlcjE3NDI1OTgy", "avatar_url": "https://avatars2.githubusercontent.com/u/17425982?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hhaAndroid", "html_url": "https://github.com/hhaAndroid", "followers_url": "https://api.github.com/users/hhaAndroid/followers", "following_url": "https://api.github.com/users/hhaAndroid/following{/other_user}", "gists_url": "https://api.github.com/users/hhaAndroid/gists{/gist_id}", "starred_url": "https://api.github.com/users/hhaAndroid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hhaAndroid/subscriptions", "organizations_url": "https://api.github.com/users/hhaAndroid/orgs", "repos_url": "https://api.github.com/users/hhaAndroid/repos", "events_url": "https://api.github.com/users/hhaAndroid/events{/privacy}", "received_events_url": "https://api.github.com/users/hhaAndroid/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-16T02:54:58Z", "updated_at": "2019-09-17T11:59:40Z", "closed_at": "2019-09-17T11:59:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I looked at the code, but I don\u2019t know what the principle is.\r\n1. kp_neighborhood = kp.generate_similar_points_manhattan(\r\n                        self.NB_NEIGHBOURING_KEYPOINTS,\r\n                        self.NEIGHBOURING_KEYPOINTS_DISTANCE,\r\n                        return_array=True\r\n                    )\r\n2. xxyy_aug[:, 0] += dx[yy, xx] \r\n    xxyy_aug[:, 1] += dy[yy, xx]\r\n3.med = ia.compute_geometric_median(xxyy_aug)\r\n\r\nIs this an approximation algorithm?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/414", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/414/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/414/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/414/events", "html_url": "https://github.com/aleju/imgaug/issues/414", "id": 492622613, "node_id": "MDU6SXNzdWU0OTI2MjI2MTM=", "number": 414, "title": "AssertionError install tests for 0.2.9 build on NixOS", "user": {"login": "Rakesh4G", "id": 50867187, "node_id": "MDQ6VXNlcjUwODY3MTg3", "avatar_url": "https://avatars2.githubusercontent.com/u/50867187?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rakesh4G", "html_url": "https://github.com/Rakesh4G", "followers_url": "https://api.github.com/users/Rakesh4G/followers", "following_url": "https://api.github.com/users/Rakesh4G/following{/other_user}", "gists_url": "https://api.github.com/users/Rakesh4G/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rakesh4G/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rakesh4G/subscriptions", "organizations_url": "https://api.github.com/users/Rakesh4G/orgs", "repos_url": "https://api.github.com/users/Rakesh4G/repos", "events_url": "https://api.github.com/users/Rakesh4G/events{/privacy}", "received_events_url": "https://api.github.com/users/Rakesh4G/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 37, "created_at": "2019-09-12T07:00:08Z", "updated_at": "2020-01-07T08:43:34Z", "closed_at": "2020-01-07T08:43:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Team,\r\n\r\nI was trying to enable the test cases for pythonPackages.imgaug https://github.com/NixOS/nixpkgs/pull/67494\r\n\r\nDuring this process i am able to execute the test cases but facing **AssertionError** and this is causing 5 failures.\r\nSummary of test run:\r\n`============ **5 failed, 383 passed, 3 warnings in 199.71s (0:03:19)** =============`\r\n\r\ndetailed log :\r\n[imgaug_test_failures.txt](https://github.com/aleju/imgaug/files/3604110/imgaug_test_failures.txt)\r\n\r\nPlease suggest. Thanks.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/412", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/412/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/412/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/412/events", "html_url": "https://github.com/aleju/imgaug/issues/412", "id": 492106579, "node_id": "MDU6SXNzdWU0OTIxMDY1Nzk=", "number": 412, "title": "Feature request: get_arr_int in SegmentationMapOnImage to return multiple segmaps", "user": {"login": "FelixAbrahamsson", "id": 19688421, "node_id": "MDQ6VXNlcjE5Njg4NDIx", "avatar_url": "https://avatars0.githubusercontent.com/u/19688421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FelixAbrahamsson", "html_url": "https://github.com/FelixAbrahamsson", "followers_url": "https://api.github.com/users/FelixAbrahamsson/followers", "following_url": "https://api.github.com/users/FelixAbrahamsson/following{/other_user}", "gists_url": "https://api.github.com/users/FelixAbrahamsson/gists{/gist_id}", "starred_url": "https://api.github.com/users/FelixAbrahamsson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FelixAbrahamsson/subscriptions", "organizations_url": "https://api.github.com/users/FelixAbrahamsson/orgs", "repos_url": "https://api.github.com/users/FelixAbrahamsson/repos", "events_url": "https://api.github.com/users/FelixAbrahamsson/events{/privacy}", "received_events_url": "https://api.github.com/users/FelixAbrahamsson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-09-11T09:00:05Z", "updated_at": "2019-09-13T08:02:38Z", "closed_at": "2019-09-13T08:02:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a situation where one image has multiple overlapping segmentation maps, and I want to be able to extract the overlapping segmaps after augmentation. \r\nSegmentationMapOnImage allows for multiple, overlapping segmaps to be input as different channels. However, the get_arr_int method of SegmentationMapOnImage squashes the overlapping maps into one channel. Maybe a parameter could be added to this method to allow the user to make it return the individual maps instead?\r\n\r\nEDIT: Looking at the source code I see that all segmaps can be simply accessed from the .arr attribute, so perhaps a method isn't really necessary here. But maybe it should still be in the documentation.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/404", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/404/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/404/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/404/events", "html_url": "https://github.com/aleju/imgaug/issues/404", "id": 485213975, "node_id": "MDU6SXNzdWU0ODUyMTM5NzU=", "number": 404, "title": "Wrong order of dimensions when Resize the KeypointsOnImage", "user": {"login": "filonenkoa", "id": 15009511, "node_id": "MDQ6VXNlcjE1MDA5NTEx", "avatar_url": "https://avatars0.githubusercontent.com/u/15009511?v=4", "gravatar_id": "", "url": "https://api.github.com/users/filonenkoa", "html_url": "https://github.com/filonenkoa", "followers_url": "https://api.github.com/users/filonenkoa/followers", "following_url": "https://api.github.com/users/filonenkoa/following{/other_user}", "gists_url": "https://api.github.com/users/filonenkoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/filonenkoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/filonenkoa/subscriptions", "organizations_url": "https://api.github.com/users/filonenkoa/orgs", "repos_url": "https://api.github.com/users/filonenkoa/repos", "events_url": "https://api.github.com/users/filonenkoa/events{/privacy}", "received_events_url": "https://api.github.com/users/filonenkoa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-26T12:36:26Z", "updated_at": "2019-08-26T13:13:48Z", "closed_at": "2019-08-26T13:13:48Z", "author_association": "NONE", "active_lock_reason": null, "body": "When you define Resize, \"width\" is actually y-axis and \"height\" represents the x-axis.\r\nExample:\r\nI open the image with width and height 20 and 40 pixels respectively.\r\n`image = ia.quokka(size=(20, 40))`\r\n`image.shape` -> _(20, 40, 3)_\r\nI put a keypoint to the center of the image\r\n`kps = KeypointsOnImage([Keypoint(x=10.0,y=20.0)], shape=(20, 40))`\r\nthen I enlarge the image and expect the center point remain in the center.\r\n`seq = iaa.Sequential([iaa.Resize({\"width\": 40, \"height\": 80}, interpolation=\"linear\", deterministic=True)])`\r\nExpectations: the new center is at (x=20, y=40). Reality:\r\n`seq.augment_image(image).shape` -> _(80, 40, 3)_\r\n`seq.augment_keypoints(kps)` -> _KeypointsOnImage([Keypoint(x=10.00000000, y=80.00000000)], shape=(80, 40))_\r\nKeypoint location is wrong. Note that the order of dimensions for **KeypointsOnImage** is changed for the **shape** field.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/395", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/395/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/395/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/395/events", "html_url": "https://github.com/aleju/imgaug/issues/395", "id": 484789656, "node_id": "MDU6SXNzdWU0ODQ3ODk2NTY=", "number": 395, "title": "imgaug resize error", "user": {"login": "as754770178", "id": 21017850, "node_id": "MDQ6VXNlcjIxMDE3ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/21017850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/as754770178", "html_url": "https://github.com/as754770178", "followers_url": "https://api.github.com/users/as754770178/followers", "following_url": "https://api.github.com/users/as754770178/following{/other_user}", "gists_url": "https://api.github.com/users/as754770178/gists{/gist_id}", "starred_url": "https://api.github.com/users/as754770178/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/as754770178/subscriptions", "organizations_url": "https://api.github.com/users/as754770178/orgs", "repos_url": "https://api.github.com/users/as754770178/repos", "events_url": "https://api.github.com/users/as754770178/events{/privacy}", "received_events_url": "https://api.github.com/users/as754770178/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-08-24T07:34:03Z", "updated_at": "2019-08-24T08:45:01Z", "closed_at": "2019-08-24T08:45:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\nimg_resize = iaa.Resize(size={\"height\": self.final_width, \"width\": self.final_height},\r\n                                interpolation=\"cubic\",\r\n                                name=\"resize\")\r\nimg = img_resize.augment_image(img)\r\n\r\ncv2_img = cv2.resize(img, (self.final_width, self.final_height))\r\n```\r\nI use ` iaa.Resize` to resize the picture, the result is different from `cv2.resize`.\r\nWhen the train image use  ` iaa.Resize` and eval image use  `cv2.resize`, the eval result is bad. Unless the train image and eval all use `iaa.Resize` or `cv2.resize`.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/394", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/394/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/394/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/394/events", "html_url": "https://github.com/aleju/imgaug/issues/394", "id": 484376072, "node_id": "MDU6SXNzdWU0ODQzNzYwNzI=", "number": 394, "title": "Is there any way to apply augmentation to only the bounding box area?", "user": {"login": "ydixon", "id": 22487836, "node_id": "MDQ6VXNlcjIyNDg3ODM2", "avatar_url": "https://avatars0.githubusercontent.com/u/22487836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ydixon", "html_url": "https://github.com/ydixon", "followers_url": "https://api.github.com/users/ydixon/followers", "following_url": "https://api.github.com/users/ydixon/following{/other_user}", "gists_url": "https://api.github.com/users/ydixon/gists{/gist_id}", "starred_url": "https://api.github.com/users/ydixon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ydixon/subscriptions", "organizations_url": "https://api.github.com/users/ydixon/orgs", "repos_url": "https://api.github.com/users/ydixon/repos", "events_url": "https://api.github.com/users/ydixon/events{/privacy}", "received_events_url": "https://api.github.com/users/ydixon/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-08-23T07:36:16Z", "updated_at": "2020-01-23T20:12:48Z", "closed_at": "2019-08-27T08:47:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I took a look at writing custom augmenters.\r\nIt seems both `_augment_images()` and `_augment_keypoints` have access to images and keypoints separately. \r\nSo I can't read a keypoint(bounding box) and perform augmentation on the image(let's just say I want to assign gray pixels to the entire bounding box area).\r\nIs there any recommended way to approach this problem?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/391", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/391/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/391/events", "html_url": "https://github.com/aleju/imgaug/issues/391", "id": 483823898, "node_id": "MDU6SXNzdWU0ODM4MjM4OTg=", "number": 391, "title": "bgr image preprocess problem", "user": {"login": "as754770178", "id": 21017850, "node_id": "MDQ6VXNlcjIxMDE3ODUw", "avatar_url": "https://avatars1.githubusercontent.com/u/21017850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/as754770178", "html_url": "https://github.com/as754770178", "followers_url": "https://api.github.com/users/as754770178/followers", "following_url": "https://api.github.com/users/as754770178/following{/other_user}", "gists_url": "https://api.github.com/users/as754770178/gists{/gist_id}", "starred_url": "https://api.github.com/users/as754770178/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/as754770178/subscriptions", "organizations_url": "https://api.github.com/users/as754770178/orgs", "repos_url": "https://api.github.com/users/as754770178/repos", "events_url": "https://api.github.com/users/as754770178/events{/privacy}", "received_events_url": "https://api.github.com/users/as754770178/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-22T07:41:48Z", "updated_at": "2019-08-23T05:55:41Z", "closed_at": "2019-08-23T05:55:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I use cv2 read the image, but after use the function of  `imgaug` preprocess the image. I think the image auto become to `rgb` channel. How to use `imgaug` preprocess the `bgr` image?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/390", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/390/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/390/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/390/events", "html_url": "https://github.com/aleju/imgaug/issues/390", "id": 482948402, "node_id": "MDU6SXNzdWU0ODI5NDg0MDI=", "number": 390, "title": "Bounding Boxes: Filter Support", "user": {"login": "MentalGear", "id": 2837147, "node_id": "MDQ6VXNlcjI4MzcxNDc=", "avatar_url": "https://avatars0.githubusercontent.com/u/2837147?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MentalGear", "html_url": "https://github.com/MentalGear", "followers_url": "https://api.github.com/users/MentalGear/followers", "following_url": "https://api.github.com/users/MentalGear/following{/other_user}", "gists_url": "https://api.github.com/users/MentalGear/gists{/gist_id}", "starred_url": "https://api.github.com/users/MentalGear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MentalGear/subscriptions", "organizations_url": "https://api.github.com/users/MentalGear/orgs", "repos_url": "https://api.github.com/users/MentalGear/repos", "events_url": "https://api.github.com/users/MentalGear/events{/privacy}", "received_events_url": "https://api.github.com/users/MentalGear/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-20T15:59:21Z", "updated_at": "2019-08-21T12:43:44Z", "closed_at": "2019-08-21T12:43:44Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off, thanks for this nice plugin and the mostly great documentation. However, when I was going through some filters with a dataset that has bounding boxes, I noticed that for some filters, the bounding boxes disappaer for the augmented images.\r\n\r\nIs there a list somewhere which indicates what filters are safe and keep bounding boxes, or is there any other way to identify filters that don't return labels ?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/379", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/379/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/379/events", "html_url": "https://github.com/aleju/imgaug/issues/379", "id": 479927359, "node_id": "MDU6SXNzdWU0Nzk5MjczNTk=", "number": 379, "title": "Does this work with the official opencv3 python bindings as well", "user": {"login": "CMCDragonkai", "id": 640797, "node_id": "MDQ6VXNlcjY0MDc5Nw==", "avatar_url": "https://avatars2.githubusercontent.com/u/640797?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CMCDragonkai", "html_url": "https://github.com/CMCDragonkai", "followers_url": "https://api.github.com/users/CMCDragonkai/followers", "following_url": "https://api.github.com/users/CMCDragonkai/following{/other_user}", "gists_url": "https://api.github.com/users/CMCDragonkai/gists{/gist_id}", "starred_url": "https://api.github.com/users/CMCDragonkai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CMCDragonkai/subscriptions", "organizations_url": "https://api.github.com/users/CMCDragonkai/orgs", "repos_url": "https://api.github.com/users/CMCDragonkai/repos", "events_url": "https://api.github.com/users/CMCDragonkai/events{/privacy}", "received_events_url": "https://api.github.com/users/CMCDragonkai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-08-13T02:15:59Z", "updated_at": "2020-02-19T01:15:42Z", "closed_at": "2020-02-19T01:15:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to use this in NixOS, and having to package every single opencv variant on pypi is difficult. NixOS has the proper `opencv3` package that exports python bindings. Does imgaug just work with that without having to install opencv-python-headless?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/378", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/378/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/378/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/378/events", "html_url": "https://github.com/aleju/imgaug/issues/378", "id": 479364172, "node_id": "MDU6SXNzdWU0NzkzNjQxNzI=", "number": 378, "title": "Question: augmentor parallelism", "user": {"login": "Liron-Toledo", "id": 32307087, "node_id": "MDQ6VXNlcjMyMzA3MDg3", "avatar_url": "https://avatars2.githubusercontent.com/u/32307087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Liron-Toledo", "html_url": "https://github.com/Liron-Toledo", "followers_url": "https://api.github.com/users/Liron-Toledo/followers", "following_url": "https://api.github.com/users/Liron-Toledo/following{/other_user}", "gists_url": "https://api.github.com/users/Liron-Toledo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Liron-Toledo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Liron-Toledo/subscriptions", "organizations_url": "https://api.github.com/users/Liron-Toledo/orgs", "repos_url": "https://api.github.com/users/Liron-Toledo/repos", "events_url": "https://api.github.com/users/Liron-Toledo/events{/privacy}", "received_events_url": "https://api.github.com/users/Liron-Toledo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-11T12:26:03Z", "updated_at": "2019-08-12T13:10:24Z", "closed_at": "2019-08-12T13:10:24Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there. Love the library. Just wanted to ask a quick question. I'm curious to know if you have used parallelism in any way to speed up the augmentation process and if so is there any way at all to manipulate or turn off said parallelism (e.g. run augs on one thread, choose how many threads to use, etc). Thanks and have a great day.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/374", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/374/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/374/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/374/events", "html_url": "https://github.com/aleju/imgaug/issues/374", "id": 475967202, "node_id": "MDU6SXNzdWU0NzU5NjcyMDI=", "number": 374, "title": "Feature Request: methods of boundingboxes extended", "user": {"login": "Kongsea", "id": 4168984, "node_id": "MDQ6VXNlcjQxNjg5ODQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4168984?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kongsea", "html_url": "https://github.com/Kongsea", "followers_url": "https://api.github.com/users/Kongsea/followers", "following_url": "https://api.github.com/users/Kongsea/following{/other_user}", "gists_url": "https://api.github.com/users/Kongsea/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kongsea/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kongsea/subscriptions", "organizations_url": "https://api.github.com/users/Kongsea/orgs", "repos_url": "https://api.github.com/users/Kongsea/repos", "events_url": "https://api.github.com/users/Kongsea/events{/privacy}", "received_events_url": "https://api.github.com/users/Kongsea/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1122782516, "node_id": "MDU6TGFiZWwxMTIyNzgyNTE2", "url": "https://api.github.com/repos/aleju/imgaug/labels/TODO", "name": "TODO", "color": "d9c4ff", "default": false, "description": "Planned to be added to the library or changed in the future"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-08-02T02:29:27Z", "updated_at": "2019-11-23T14:11:15Z", "closed_at": "2019-11-23T14:11:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "First, thank you for this amazing tools.\r\nThen, I think we can add a parameter, say, percentage, for methods of boundingboxes such as:\r\nis_fully_within_image(image)\r\nis_out_of_image(image[,\u00a0fully,\u00a0partly])\r\nis_partly_within_image(image)\r\nand so on.\r\nSo these boundingboxes can be determined whether out or not of an image according to this parameter.\r\nThank you.\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/373", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/373/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/373/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/373/events", "html_url": "https://github.com/aleju/imgaug/issues/373", "id": 475595981, "node_id": "MDU6SXNzdWU0NzU1OTU5ODE=", "number": 373, "title": "The format of the output image", "user": {"login": "WallZFE", "id": 45250343, "node_id": "MDQ6VXNlcjQ1MjUwMzQz", "avatar_url": "https://avatars0.githubusercontent.com/u/45250343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WallZFE", "html_url": "https://github.com/WallZFE", "followers_url": "https://api.github.com/users/WallZFE/followers", "following_url": "https://api.github.com/users/WallZFE/following{/other_user}", "gists_url": "https://api.github.com/users/WallZFE/gists{/gist_id}", "starred_url": "https://api.github.com/users/WallZFE/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WallZFE/subscriptions", "organizations_url": "https://api.github.com/users/WallZFE/orgs", "repos_url": "https://api.github.com/users/WallZFE/repos", "events_url": "https://api.github.com/users/WallZFE/events{/privacy}", "received_events_url": "https://api.github.com/users/WallZFE/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-08-01T10:13:42Z", "updated_at": "2019-08-05T02:06:27Z", "closed_at": "2019-08-02T01:20:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,Thank you for providing such good code.I have a question now,I wonder if the format of the converted image is RGB or BGR,Because I need to read it in opencv format.Please let me know if you know. Thank you", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/372", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/372/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/372/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/372/events", "html_url": "https://github.com/aleju/imgaug/issues/372", "id": 473329063, "node_id": "MDU6SXNzdWU0NzMzMjkwNjM=", "number": 372, "title": "Wrong bounding box", "user": {"login": "fabiofumarola", "id": 1550672, "node_id": "MDQ6VXNlcjE1NTA2NzI=", "avatar_url": "https://avatars2.githubusercontent.com/u/1550672?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabiofumarola", "html_url": "https://github.com/fabiofumarola", "followers_url": "https://api.github.com/users/fabiofumarola/followers", "following_url": "https://api.github.com/users/fabiofumarola/following{/other_user}", "gists_url": "https://api.github.com/users/fabiofumarola/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabiofumarola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabiofumarola/subscriptions", "organizations_url": "https://api.github.com/users/fabiofumarola/orgs", "repos_url": "https://api.github.com/users/fabiofumarola/repos", "events_url": "https://api.github.com/users/fabiofumarola/events{/privacy}", "received_events_url": "https://api.github.com/users/fabiofumarola/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-26T12:14:47Z", "updated_at": "2019-07-27T15:42:25Z", "closed_at": "2019-07-27T15:42:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have made a simple example to check how the bounding box is performed when Resizing an image. I've found that the box on the target image is wrong with respect the original one.\r\n\r\n### Original Image\r\n![original image](https://user-images.githubusercontent.com/1550672/61950855-7d6ddb80-afaf-11e9-8534-44dfe06c12ba.png)\r\n\r\n\r\n### Scaled image with imgaug\r\n![scaled_image_imgaug](https://user-images.githubusercontent.com/1550672/61950860-83fc5300-afaf-11e9-817e-73cb71b25f6f.png)\r\n\r\n```\r\nimport imgaug as ia\r\nimport imgaug.augmenters as iaa\r\nfrom imgaug.augmentables.bbs import BoundingBox, BoundingBoxesOnImage\r\n\r\nbbs = BoundingBoxesOnImage([BoundingBox(*box) for box in updated_boxes], shape=img.shape)\r\nseq = iaa.Sequential([iaa.Resize(target_shape)])\r\n\r\nmod_img_2, updated_boxes_2 = seq(image=img, bounding_boxes=bbs)\r\n\r\nax = utils.show_img(mod_img_2)\r\nfor box in updated_boxes_2.bounding_boxes:\r\n    utils.draw_rect(ax, [box.x1_int, box.y1_int, box.x2_int, box.y2_int])\r\nplt.show()\r\n```\r\n\r\n\r\n### Right scaled image\r\n![right_scaled_image](https://user-images.githubusercontent.com/1550672/61950879-8c548e00-afaf-11e9-9491-a265771c48e9.png)\r\n\r\n```\r\ninput_h, input_w = input_shape\r\ntarget_h, target_w = target_shape\r\nscale_w = target_w / input_w\r\nscale_h = target_h / input_h\r\nprint(scale_w, scale_h)\r\n\r\nupdated_boxes2 = boxes.copy()\r\nupdated_boxes2[:, [0, 2]] = updated_boxes2[:, [0, 2]] * scale_w\r\nupdated_boxes2[:, [1, 3]] = updated_boxes2[:, [1, 3]] * scale_h\r\nupdated_boxes2[updated_boxes2 < 0] = 0\r\nupdated_boxes2\r\n```\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/363", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/363/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/363/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/363/events", "html_url": "https://github.com/aleju/imgaug/issues/363", "id": 469772273, "node_id": "MDU6SXNzdWU0Njk3NzIyNzM=", "number": 363, "title": "Possible to pass your own arguments to lambda function", "user": {"login": "Liron-Toledo", "id": 32307087, "node_id": "MDQ6VXNlcjMyMzA3MDg3", "avatar_url": "https://avatars2.githubusercontent.com/u/32307087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Liron-Toledo", "html_url": "https://github.com/Liron-Toledo", "followers_url": "https://api.github.com/users/Liron-Toledo/followers", "following_url": "https://api.github.com/users/Liron-Toledo/following{/other_user}", "gists_url": "https://api.github.com/users/Liron-Toledo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Liron-Toledo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Liron-Toledo/subscriptions", "organizations_url": "https://api.github.com/users/Liron-Toledo/orgs", "repos_url": "https://api.github.com/users/Liron-Toledo/repos", "events_url": "https://api.github.com/users/Liron-Toledo/events{/privacy}", "received_events_url": "https://api.github.com/users/Liron-Toledo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-18T13:32:59Z", "updated_at": "2019-07-18T18:20:40Z", "closed_at": "2019-07-18T18:20:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, so ive been adding my own custom functions as a lambda function so they can be used with Sequential. Its been working so far but recently I've attempted to pass my own arguments for the function to use but I just cant figure out how to do this. I looked at the examples in the docs and cant see any instance of passing your own arguments. Is this currently possible?\r\n\r\nExample of my code is below:\r\n\r\n\r\n```\r\ndef Edges(images, random_state, parents, hooks, min, max):\r\n\r\n        new_imgs = []\r\n\r\n        for img in images:\r\n\r\n            # convert images to greyscale\r\n            grey_img = np.array(Image.fromarray(img).convert('L'))\r\n            # extract edges from image\r\n            edges = cv2.Canny(grey_img, min, max)\r\n            # add images to list\r\n            new_imgs.append(edges)\r\n\r\n        # Convert list to numpy array\r\n        aug_imgs = np.asarray(new_imgs)\r\n        return aug_imgs\r\n\r\naug = iaa.Lambda(func_images=Edges)\r\n```\r\n\r\nhow would you enter values for min and max here?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/361", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/361/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/361/events", "html_url": "https://github.com/aleju/imgaug/issues/361", "id": 469171785, "node_id": "MDU6SXNzdWU0NjkxNzE3ODU=", "number": 361, "title": "Vertical Shearing", "user": {"login": "pigubaoza", "id": 5568223, "node_id": "MDQ6VXNlcjU1NjgyMjM=", "avatar_url": "https://avatars0.githubusercontent.com/u/5568223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pigubaoza", "html_url": "https://github.com/pigubaoza", "followers_url": "https://api.github.com/users/pigubaoza/followers", "following_url": "https://api.github.com/users/pigubaoza/following{/other_user}", "gists_url": "https://api.github.com/users/pigubaoza/gists{/gist_id}", "starred_url": "https://api.github.com/users/pigubaoza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pigubaoza/subscriptions", "organizations_url": "https://api.github.com/users/pigubaoza/orgs", "repos_url": "https://api.github.com/users/pigubaoza/repos", "events_url": "https://api.github.com/users/pigubaoza/events{/privacy}", "received_events_url": "https://api.github.com/users/pigubaoza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-07-17T12:44:51Z", "updated_at": "2019-11-04T20:26:33Z", "closed_at": "2019-11-04T20:26:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Right now the affine shear function does a horizontal shear. Are there plans to add shearing in the vertical direction? Or is there another way of doing it? ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/360", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/360/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/360/events", "html_url": "https://github.com/aleju/imgaug/issues/360", "id": 469039067, "node_id": "MDU6SXNzdWU0NjkwMzkwNjc=", "number": 360, "title": "Find Out Transformation Matrix", "user": {"login": "r0f1", "id": 7324891, "node_id": "MDQ6VXNlcjczMjQ4OTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/7324891?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r0f1", "html_url": "https://github.com/r0f1", "followers_url": "https://api.github.com/users/r0f1/followers", "following_url": "https://api.github.com/users/r0f1/following{/other_user}", "gists_url": "https://api.github.com/users/r0f1/gists{/gist_id}", "starred_url": "https://api.github.com/users/r0f1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r0f1/subscriptions", "organizations_url": "https://api.github.com/users/r0f1/orgs", "repos_url": "https://api.github.com/users/r0f1/repos", "events_url": "https://api.github.com/users/r0f1/events{/privacy}", "received_events_url": "https://api.github.com/users/r0f1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-17T07:46:34Z", "updated_at": "2019-07-18T21:47:04Z", "closed_at": "2019-07-18T21:47:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nI have the following list of transformers:\r\n```\r\n    a = [\r\n        iaa.Noop(),\r\n        iaa.Affine(rotate=90),\r\n        iaa.Affine(rotate=180),\r\n        iaa.Affine(rotate=270),\r\n        iaa.Fliplr(1),\r\n        iaa.Flipud(1)\r\n    ]\r\n```\r\nIs there a way to get the transformatition matrices out of all of these transformers?\r\n[I see that there is a parameter for it](https://github.com/aleju/imgaug/blob/c55742d019423602b7b6e47efe146f8bdf59a6bc/imgaug/augmenters/geometric.py#L624\r\n), but I am not sure how to use it. \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/357", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/357/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/357/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/357/events", "html_url": "https://github.com/aleju/imgaug/issues/357", "id": 468395543, "node_id": "MDU6SXNzdWU0NjgzOTU1NDM=", "number": 357, "title": "parallel imread()", "user": {"login": "linfan68", "id": 4918344, "node_id": "MDQ6VXNlcjQ5MTgzNDQ=", "avatar_url": "https://avatars2.githubusercontent.com/u/4918344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/linfan68", "html_url": "https://github.com/linfan68", "followers_url": "https://api.github.com/users/linfan68/followers", "following_url": "https://api.github.com/users/linfan68/following{/other_user}", "gists_url": "https://api.github.com/users/linfan68/gists{/gist_id}", "starred_url": "https://api.github.com/users/linfan68/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/linfan68/subscriptions", "organizations_url": "https://api.github.com/users/linfan68/orgs", "repos_url": "https://api.github.com/users/linfan68/repos", "events_url": "https://api.github.com/users/linfan68/events{/privacy}", "received_events_url": "https://api.github.com/users/linfan68/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-16T00:52:48Z", "updated_at": "2019-07-18T02:30:29Z", "closed_at": "2019-07-18T02:30:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to build an data pipeline using imgaug. And in the document it mentioned clearly we should try to avoid imgaug with other multi-core/parallel processing pipelines.\r\nHowever, I cannot find a easy way to distribute imread() to multiple CPU cores. The input source of imgaug is numpy arrays. Did I missed something? Do I need another data parallel framework (like tensorpack) to feed imgaug in order to make imread running on multiple cores?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/350", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/350/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/350/events", "html_url": "https://github.com/aleju/imgaug/issues/350", "id": 466204351, "node_id": "MDU6SXNzdWU0NjYyMDQzNTE=", "number": 350, "title": "Imgaug is not compatiable with numpy==1.16+", "user": {"login": "KokeCacao", "id": 13199775, "node_id": "MDQ6VXNlcjEzMTk5Nzc1", "avatar_url": "https://avatars2.githubusercontent.com/u/13199775?v=4", "gravatar_id": "", "url": "https://api.github.com/users/KokeCacao", "html_url": "https://github.com/KokeCacao", "followers_url": "https://api.github.com/users/KokeCacao/followers", "following_url": "https://api.github.com/users/KokeCacao/following{/other_user}", "gists_url": "https://api.github.com/users/KokeCacao/gists{/gist_id}", "starred_url": "https://api.github.com/users/KokeCacao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/KokeCacao/subscriptions", "organizations_url": "https://api.github.com/users/KokeCacao/orgs", "repos_url": "https://api.github.com/users/KokeCacao/repos", "events_url": "https://api.github.com/users/KokeCacao/events{/privacy}", "received_events_url": "https://api.github.com/users/KokeCacao/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-10T09:33:26Z", "updated_at": "2019-07-11T09:01:25Z", "closed_at": "2019-07-11T09:01:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Imgaug is not compatible with numpy==1.16\r\nThis following line gives an error\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-11-90b8a2a05c2e> in <module>\r\n      3 import numpy as np\r\n      4 import cv2\r\n----> 5 from imgaug import augmenters as iaa\r\n      6 from matplotlib import pyplot as plt\r\n\r\n~/miniconda3/envs/ml/lib/python3.6/site-packages/imgaug/__init__.py in <module>\r\n      1 from __future__ import absolute_import\r\n----> 2 from imgaug.imgaug import *\r\n      3 import imgaug.augmenters as augmenters\r\n      4 import imgaug.parameters as parameters\r\n      5 \r\n\r\n~/miniconda3/envs/ml/lib/python3.6/site-packages/imgaug/imgaug.py in <module>\r\n     20 import six\r\n     21 import six.moves as sm\r\n---> 22 import skimage.draw\r\n     23 import skimage.measure\r\n     24 import collections\r\n\r\n~/miniconda3/envs/ml/lib/python3.6/site-packages/skimage/__init__.py in <module>\r\n    174                              dtype_limits)\r\n    175 \r\n--> 176     from .util.lookfor import lookfor\r\n    177     from .data import data_dir\r\n    178 \r\n\r\n~/miniconda3/envs/ml/lib/python3.6/site-packages/skimage/util/__init__.py in <module>\r\n      6 from .apply_parallel import apply_parallel\r\n      7 \r\n----> 8 from .arraycrop import crop\r\n      9 from ._regular_grid import regular_grid, regular_seeds\r\n     10 from .unique import unique_rows\r\n\r\n~/miniconda3/envs/ml/lib/python3.6/site-packages/skimage/util/arraycrop.py in <module>\r\n      6 \r\n      7 import numpy as np\r\n----> 8 from numpy.lib.arraypad import _validate_lengths\r\n      9 \r\n     10 \r\n\r\nImportError: cannot import name '_validate_lengths'\r\n```\r\n\r\nRelated Issue: https://github.com/numpy/numpy/issues/12744", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/344", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/344/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/344/events", "html_url": "https://github.com/aleju/imgaug/issues/344", "id": 464383878, "node_id": "MDU6SXNzdWU0NjQzODM4Nzg=", "number": 344, "title": "Returning labels", "user": {"login": "Liron-Toledo", "id": 32307087, "node_id": "MDQ6VXNlcjMyMzA3MDg3", "avatar_url": "https://avatars2.githubusercontent.com/u/32307087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Liron-Toledo", "html_url": "https://github.com/Liron-Toledo", "followers_url": "https://api.github.com/users/Liron-Toledo/followers", "following_url": "https://api.github.com/users/Liron-Toledo/following{/other_user}", "gists_url": "https://api.github.com/users/Liron-Toledo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Liron-Toledo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Liron-Toledo/subscriptions", "organizations_url": "https://api.github.com/users/Liron-Toledo/orgs", "repos_url": "https://api.github.com/users/Liron-Toledo/repos", "events_url": "https://api.github.com/users/Liron-Toledo/events{/privacy}", "received_events_url": "https://api.github.com/users/Liron-Toledo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-07-04T20:07:42Z", "updated_at": "2019-08-11T12:18:14Z", "closed_at": "2019-08-11T12:18:14Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, just discovered this library and have been loving it so far. There is one bit of functionality that I cant seem to find anywhere in the documention though. Is it at all possible to return a list of the image labels of a group of augmented images?\r\n\r\nFor instance I've been loading images from MNIST to train my classifier and have two seperate lists containing my images (numpy arrays) and their labels. Ideally I would like to make an augmentation function to return a new list of augmented images as well as new list containing their labels.\r\n\r\nIs this currently possible? or do you intend on ever adding this functionality. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/341", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/341/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/341/events", "html_url": "https://github.com/aleju/imgaug/issues/341", "id": 462435588, "node_id": "MDU6SXNzdWU0NjI0MzU1ODg=", "number": 341, "title": "Error when applying snowflake to image", "user": {"login": "EricThomson", "id": 6643322, "node_id": "MDQ6VXNlcjY2NDMzMjI=", "avatar_url": "https://avatars2.githubusercontent.com/u/6643322?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EricThomson", "html_url": "https://github.com/EricThomson", "followers_url": "https://api.github.com/users/EricThomson/followers", "following_url": "https://api.github.com/users/EricThomson/following{/other_user}", "gists_url": "https://api.github.com/users/EricThomson/gists{/gist_id}", "starred_url": "https://api.github.com/users/EricThomson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EricThomson/subscriptions", "organizations_url": "https://api.github.com/users/EricThomson/orgs", "repos_url": "https://api.github.com/users/EricThomson/repos", "events_url": "https://api.github.com/users/EricThomson/events{/privacy}", "received_events_url": "https://api.github.com/users/EricThomson/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 234896470, "node_id": "MDU6TGFiZWwyMzQ4OTY0NzA=", "url": "https://api.github.com/repos/aleju/imgaug/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-30T19:01:51Z", "updated_at": "2019-07-05T18:45:50Z", "closed_at": "2019-07-05T18:45:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a greyscale image (`image.shape` returns `(330,228)` with dtype `uint8`). \r\nI try the following:\r\n```\r\nsnowflakes = iaa.Snowflakes(flake_size = (0.1, 0.4), speed = (0.01, 0.05))\r\nimage_sf = snowflakes.augment_image(image)\r\n```\r\nAnd receive the following error with the second line:\r\n\r\n>   File \"<ipython-input-71-bea75e84833a>\", line 1, in <module>\r\n>     image_sf = snowflakes.augment_image(image)\r\n> \r\n>   File \"/home/eric/miniconda3/envs/auger/lib/python3.7/site-packages/imgaug/augmenters/meta.py\", line 470, in augment_image\r\n>     return self.augment_images([image], hooks=hooks)[0]\r\n> \r\n>   File \"/home/eric/miniconda3/envs/auger/lib/python3.7/site-packages/imgaug/augmenters/meta.py\", line 639, in augment_images\r\n>     images_result[i] = np.squeeze(images_result[i], axis=2)\r\n> \r\n>   File \"/home/eric/miniconda3/envs/auger/lib/python3.7/site-packages/numpy/core/fromnumeric.py\", line 1388, in squeeze\r\n>     return squeeze(axis=axis)\r\n> \r\n> ValueError: cannot select an axis to squeeze out which has size not equal to one\r\n\r\nI am in Python 3.7, imgaug 0.2.9, Ubuntu 18.\r\n\r\nThe other augmenters I have tried have worked fine on the image (e.g., GaussianBlur, MotionBlur, Affine, CoarseDropout).", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/321", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/321/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/321/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/321/events", "html_url": "https://github.com/aleju/imgaug/issues/321", "id": 448543854, "node_id": "MDU6SXNzdWU0NDg1NDM4NTQ=", "number": 321, "title": "Dtype error in some augmentations", "user": {"login": "derNorweg", "id": 35899158, "node_id": "MDQ6VXNlcjM1ODk5MTU4", "avatar_url": "https://avatars0.githubusercontent.com/u/35899158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/derNorweg", "html_url": "https://github.com/derNorweg", "followers_url": "https://api.github.com/users/derNorweg/followers", "following_url": "https://api.github.com/users/derNorweg/following{/other_user}", "gists_url": "https://api.github.com/users/derNorweg/gists{/gist_id}", "starred_url": "https://api.github.com/users/derNorweg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/derNorweg/subscriptions", "organizations_url": "https://api.github.com/users/derNorweg/orgs", "repos_url": "https://api.github.com/users/derNorweg/repos", "events_url": "https://api.github.com/users/derNorweg/events{/privacy}", "received_events_url": "https://api.github.com/users/derNorweg/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-05-26T08:45:26Z", "updated_at": "2019-05-26T20:47:26Z", "closed_at": "2019-05-26T20:47:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "While using some of the augmentations i get the following error:\r\nGot dtype 'float64' in augmenter 'UnnamedCoarseDropout' (class 'MultiplyElementwise'), which is a forbidden dtype (uint32, uint64, uint128, uint256, int32, int64, int128, int256, float64, float96, float128, float256)\r\n\r\nThe case is i explicitly convert input data to np.uint8 line before using those augmentations. Also, there are other augmentations, that do not throw exception. All of the cases with errors throw dtype error.\r\n\r\n\r\nThese are throwing an error:\r\n#iaa.Superpixels(p_replace=0.5, n_segments=64),\r\n#iaa.AdditiveGaussianNoise(scale=(0, 0.05*255)),\r\n#iaa.Multiply((0.5, 1.5)),\r\n#iaa.CoarseDropout(0.02, size_percent=0.5),\r\n\r\nWhile these are working perfectly fine:\r\niaa.Invert(0.5),\r\niaa.ContrastNormalization((0.5, 1.5)),\r\niaa.Affine(shear=(-16, 16)),\r\niaa.Affine(rotate=(-10, 10)),\r\niaa.PiecewiseAffine(scale=(0.01, 0.03)),\r\niaa.ElasticTransformation(alpha=(0, 1.0), sigma=0.7)\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/315", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/315/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/315/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/315/events", "html_url": "https://github.com/aleju/imgaug/issues/315", "id": 445010100, "node_id": "MDU6SXNzdWU0NDUwMTAxMDA=", "number": 315, "title": "iaa.Grayscale may be more intuitive if it defaulted to alpha=1", "user": {"login": "Erotemic", "id": 3186211, "node_id": "MDQ6VXNlcjMxODYyMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3186211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erotemic", "html_url": "https://github.com/Erotemic", "followers_url": "https://api.github.com/users/Erotemic/followers", "following_url": "https://api.github.com/users/Erotemic/following{/other_user}", "gists_url": "https://api.github.com/users/Erotemic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erotemic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erotemic/subscriptions", "organizations_url": "https://api.github.com/users/Erotemic/orgs", "repos_url": "https://api.github.com/users/Erotemic/repos", "events_url": "https://api.github.com/users/Erotemic/events{/privacy}", "received_events_url": "https://api.github.com/users/Erotemic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1122782516, "node_id": "MDU6TGFiZWwxMTIyNzgyNTE2", "url": "https://api.github.com/repos/aleju/imgaug/labels/TODO", "name": "TODO", "color": "d9c4ff", "default": false, "description": "Planned to be added to the library or changed in the future"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-05-16T15:06:55Z", "updated_at": "2020-01-25T13:45:53Z", "closed_at": "2020-01-25T13:45:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm writing this issue to propose a minor API change. \r\n\r\nWhen using `iaa.Grayscale`, I was initially calling it with all default parameters and I was confused as to why my images still had color.  Upon inspection of the docstring, I discovered that `alpha` defaults to zero, which explained the behavior I was seeing. \r\n\r\nWhile this is all perfectly sensible and consistent, my feeling is that it may be more intuitive to have the default parameters for `iaa.Grayscale` actually perform the de-saturation operation rather than defaulting to a no-op.\r\n\r\nWhile this is not a huge API change, it is still and API change, and this library is widely used, so I understand concerns about that. However, the library hasn't hit 1.0, yet so if the maintainer(s) think this proposal is sensible, now is the time to do it. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/314", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/314/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/314/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/314/events", "html_url": "https://github.com/aleju/imgaug/issues/314", "id": 444968904, "node_id": "MDU6SXNzdWU0NDQ5Njg5MDQ=", "number": 314, "title": "BoundingBox misalignment for Affine+PerspectiveTransform case", "user": {"login": "killer9619", "id": 17000685, "node_id": "MDQ6VXNlcjE3MDAwNjg1", "avatar_url": "https://avatars3.githubusercontent.com/u/17000685?v=4", "gravatar_id": "", "url": "https://api.github.com/users/killer9619", "html_url": "https://github.com/killer9619", "followers_url": "https://api.github.com/users/killer9619/followers", "following_url": "https://api.github.com/users/killer9619/following{/other_user}", "gists_url": "https://api.github.com/users/killer9619/gists{/gist_id}", "starred_url": "https://api.github.com/users/killer9619/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/killer9619/subscriptions", "organizations_url": "https://api.github.com/users/killer9619/orgs", "repos_url": "https://api.github.com/users/killer9619/repos", "events_url": "https://api.github.com/users/killer9619/events{/privacy}", "received_events_url": "https://api.github.com/users/killer9619/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-05-16T13:51:34Z", "updated_at": "2019-05-20T02:10:58Z", "closed_at": "2019-05-20T02:10:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the following example, I feed an image along with a bounding box to an augmenter. The boxes misaligned with the image after transform.\r\n\r\nI'd say if the original image is not cropped due during rotation, the bounding box seems to fit the image. However, if the original image is cropped, the bounding box looked weird in this case.\r\n\r\nI am using imgaug 0.2.9\r\n\r\ncode:\r\nhttps://gist.github.com/killer9619/ff0f949ae438c8351aac55c39724b798\r\n\r\noriginal image with box:\r\n![original](https://user-images.githubusercontent.com/17000685/57858916-88282980-7824-11e9-9f23-2deb206ae6a7.png)\r\n\r\ntransformed image with misaligned box\r\n![misalignment](https://user-images.githubusercontent.com/17000685/57858940-9118fb00-7824-11e9-8b09-530c340fd516.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/313", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/313/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/313/events", "html_url": "https://github.com/aleju/imgaug/issues/313", "id": 444949748, "node_id": "MDU6SXNzdWU0NDQ5NDk3NDg=", "number": 313, "title": "Bug: Polygon error. If number of key point over 118, last point will be missing", "user": {"login": "CBCBCBCBCBCBCBCB", "id": 36307315, "node_id": "MDQ6VXNlcjM2MzA3MzE1", "avatar_url": "https://avatars1.githubusercontent.com/u/36307315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CBCBCBCBCBCBCBCB", "html_url": "https://github.com/CBCBCBCBCBCBCBCB", "followers_url": "https://api.github.com/users/CBCBCBCBCBCBCBCB/followers", "following_url": "https://api.github.com/users/CBCBCBCBCBCBCBCB/following{/other_user}", "gists_url": "https://api.github.com/users/CBCBCBCBCBCBCBCB/gists{/gist_id}", "starred_url": "https://api.github.com/users/CBCBCBCBCBCBCBCB/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CBCBCBCBCBCBCBCB/subscriptions", "organizations_url": "https://api.github.com/users/CBCBCBCBCBCBCBCB/orgs", "repos_url": "https://api.github.com/users/CBCBCBCBCBCBCBCB/repos", "events_url": "https://api.github.com/users/CBCBCBCBCBCBCBCB/events{/privacy}", "received_events_url": "https://api.github.com/users/CBCBCBCBCBCBCBCB/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-16T13:15:13Z", "updated_at": "2019-05-17T06:57:10Z", "closed_at": "2019-05-17T06:57:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "My code is in below, please run my code first and read this simple code description.\r\n\r\nI made 'my_list' list object that contains 236 elements.\r\nElements with odd index mean x coordinate, when even index for y coordinate.\r\n'polygon_list' has 118 tuples which mean 118 keypoints for polygon.\r\nWhen I made 'my_pol' Polygon object, and print it,\r\nI only has 117 points. Last point that (320,787) was missing.\r\n\r\nDid I make mistake?\r\n\r\nThanks.\r\n\r\nThis is my code,\r\n\r\nfrom imgaug.augmentables.polys import Polygon, PolygonsOnImage\r\n\r\ncnt = 0\r\nmy_list = [320.0, 787.5, 284.0, 787.5, 260.0, 781.5, 233.0, 779.5, 227.5, 771.0, 228.5, 762.0, 233.5, 756.0, 231.0,\r\n           742.5, 227.0, 747.5, 220.0, 749.5, 210.0, 749.5, 201.0, 743.5, 196.0, 748.5, 181.0, 748.5, 169.0, 744.5,\r\n           148.5, 725.0, 141.5, 707.0, 132.0, 705.5, 122.0, 699.5, 107.5, 680.0, 107.5, 671.0, 115.0, 661.5, 136.0,\r\n           648.5, 152.0, 645.5, 153.5, 638.0, 164.0, 631.5, 176.0, 616.5, 204.5, 593.0, 206.5, 588.0, 203.0, 571.5,\r\n           196.0, 578.5, 187.5, 575.0, 187.5, 571.0, 195.5, 562.0, 195.5, 557.0, 186.0, 545.5, 157.0, 549.5, 149.5,\r\n           542.0, 151.5, 528.0, 144.5, 510.0, 144.5, 493.0, 132.5, 455.0, 129.5, 418.0, 132.5, 374.0, 118.5, 316.0,\r\n           109.5, 298.0, 103.5, 267.0, 97.5, 256.0, 92.5, 235.0, 93.5, 218.0, 110.5, 188.0, 136.0, 163.5, 144.5,\r\n           161.0, 140.0, 159.5, 133.5, 150.0, 134.5, 129.0, 127.0, 126.5, 112.5, 108.0, 112.5, 101.0, 116.5, 95.0,\r\n           115.5, 75.0, 119.5, 70.0, 119.5, 59.0, 146.0, 30.5, 166.0, 22.5, 190.0, 23.5, 215.0, 30.5, 246.5, 65.0,\r\n           247.5, 107.0, 253.5, 124.0, 250.5, 159.0, 244.0, 166.5, 226.0, 173.5, 221.5, 181.0, 232.0, 183.5, 245.5,\r\n           193.0, 272.5, 237.0, 291.5, 257.0, 299.5, 270.0, 303.5, 284.0, 303.5, 304.0, 299.5, 324.0, 291.5, 341.0,\r\n           313.5, 397.0, 324.5, 416.0, 335.5, 428.0, 333.5, 443.0, 322.5, 455.0, 330.5, 491.0, 338.5, 508.0, 337.5,\r\n           516.0, 333.0, 519.5, 324.0, 519.5, 320.5, 529.0, 321.5, 539.0, 330.5, 555.0, 331.5, 571.0, 323.5, 583.0,\r\n           297.5, 605.0, 292.0, 617.5, 270.5, 621.0, 269.5, 634.0, 274.5, 651.0, 269.5, 657.0, 267.5, 672.0, 268.5,\r\n           693.0, 280.5, 727.0, 288.0, 729.5, 296.0, 741.5, 303.0, 741.5, 309.0, 736.5, 317.0, 737.5, 333.0, 755.5,\r\n           341.0, 756.5, 346.5, 763.0, 346.5, 768.0, 339.0, 778.5, 320.0, 787.5]\r\n\r\npolygon_list=[]\r\n\r\n###################\r\n#loop part\r\n###################\r\nfor i in range(int(len(my_list)/2)):\r\n    x = my_list[cnt]\r\n    y = my_list[cnt+1]\r\n    tmp = (int(x), int(y))\r\n    polygon_list.append(tmp)\r\n    cnt+=2\r\n###################\r\n\r\nmy_pol = Polygon(polygon_list)\r\n\r\nprint(polygon_list)\r\nprint(my_pol)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/312", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/312/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/312/events", "html_url": "https://github.com/aleju/imgaug/issues/312", "id": 444822674, "node_id": "MDU6SXNzdWU0NDQ4MjI2NzQ=", "number": 312, "title": "I love it", "user": {"login": "M4gicT0", "id": 7703484, "node_id": "MDQ6VXNlcjc3MDM0ODQ=", "avatar_url": "https://avatars0.githubusercontent.com/u/7703484?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M4gicT0", "html_url": "https://github.com/M4gicT0", "followers_url": "https://api.github.com/users/M4gicT0/followers", "following_url": "https://api.github.com/users/M4gicT0/following{/other_user}", "gists_url": "https://api.github.com/users/M4gicT0/gists{/gist_id}", "starred_url": "https://api.github.com/users/M4gicT0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M4gicT0/subscriptions", "organizations_url": "https://api.github.com/users/M4gicT0/orgs", "repos_url": "https://api.github.com/users/M4gicT0/repos", "events_url": "https://api.github.com/users/M4gicT0/events{/privacy}", "received_events_url": "https://api.github.com/users/M4gicT0/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-05-16T08:32:00Z", "updated_at": "2019-05-16T19:33:00Z", "closed_at": "2019-05-16T19:33:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just love your package so much, I needed to say it.\r\n\r\nThank you so much, it makes my life so much easier!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/308", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/308/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/308/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/308/events", "html_url": "https://github.com/aleju/imgaug/issues/308", "id": 441524298, "node_id": "MDU6SXNzdWU0NDE1MjQyOTg=", "number": 308, "title": "ImpulseNoise error with TypeError: 'ReplaceElementwise' object is not callable", "user": {"login": "YubinXie", "id": 16257776, "node_id": "MDQ6VXNlcjE2MjU3Nzc2", "avatar_url": "https://avatars1.githubusercontent.com/u/16257776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YubinXie", "html_url": "https://github.com/YubinXie", "followers_url": "https://api.github.com/users/YubinXie/followers", "following_url": "https://api.github.com/users/YubinXie/following{/other_user}", "gists_url": "https://api.github.com/users/YubinXie/gists{/gist_id}", "starred_url": "https://api.github.com/users/YubinXie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YubinXie/subscriptions", "organizations_url": "https://api.github.com/users/YubinXie/orgs", "repos_url": "https://api.github.com/users/YubinXie/repos", "events_url": "https://api.github.com/users/YubinXie/events{/privacy}", "received_events_url": "https://api.github.com/users/YubinXie/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-05-08T02:39:10Z", "updated_at": "2019-05-08T20:21:57Z", "closed_at": "2019-05-08T20:21:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "For the same image,\r\n\r\n```images_aug = iaa.ImpulseNoise(p=0.1)(images=images)``` gives error:\r\n TypeError: 'ReplaceElementwise' object is not callable\r\n\r\nWhile this works:\r\n```\r\nnoise = iaa.ImpulseNoise(p=0.1)\r\nimages_aug = noise.augment_images(images)\r\n```\r\nMany examples in the tutorial are in the first form. Is there a difference in usage between different function? thanks!\r\n\r\n![B19D5EBE-AD82-46D5-8502-F6430FDF97C7](https://user-images.githubusercontent.com/16257776/57345278-40185100-7118-11e9-913d-45591434c2c7.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/296", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/296/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/296/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/296/events", "html_url": "https://github.com/aleju/imgaug/issues/296", "id": 428012067, "node_id": "MDU6SXNzdWU0MjgwMTIwNjc=", "number": 296, "title": "How can I do batch bounding box augmentation? ", "user": {"login": "RiverBridge", "id": 749727, "node_id": "MDQ6VXNlcjc0OTcyNw==", "avatar_url": "https://avatars0.githubusercontent.com/u/749727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RiverBridge", "html_url": "https://github.com/RiverBridge", "followers_url": "https://api.github.com/users/RiverBridge/followers", "following_url": "https://api.github.com/users/RiverBridge/following{/other_user}", "gists_url": "https://api.github.com/users/RiverBridge/gists{/gist_id}", "starred_url": "https://api.github.com/users/RiverBridge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RiverBridge/subscriptions", "organizations_url": "https://api.github.com/users/RiverBridge/orgs", "repos_url": "https://api.github.com/users/RiverBridge/repos", "events_url": "https://api.github.com/users/RiverBridge/events{/privacy}", "received_events_url": "https://api.github.com/users/RiverBridge/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-02T03:54:24Z", "updated_at": "2019-04-02T20:23:50Z", "closed_at": "2019-04-02T20:23:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to augment the single Quokka image and transfer the bounding box to 5 new augmented images. But my bounding boxes aren't transferring correctly. Could someone please point me in the right direction?\r\n\r\nThe below code does work. It just doesn't transfer the bounding boxes correctly.  Any help is much appreciated. Thanks for a great library!\r\n\r\n````\r\nimport imageio\r\nimport numpy as np\r\nimport imgaug as ia\r\nfrom imgaug import augmenters as iaa\r\n\r\n# How many images do you want to generate from 1 source?\r\nGEN_IMG = 5\r\n\r\nia.seed(1)\r\n\r\nsingleImage = ia.quokka(size=(256, 256))\r\n\r\nimages = np.array(\r\n\t[singleImage for _ in range(GEN_IMG)], dtype=np.uint8)\r\n\r\nbbs = ia.BoundingBoxesOnImage([\r\n    ia.BoundingBox(x1=65, y1=100, x2=200, y2=150),\r\n    ia.BoundingBox(x1=150, y1=80, x2=200, y2=130)\r\n], shape=images.shape)\r\n\r\nseq = iaa.Sequential([\r\n    iaa.Fliplr(0.5),\r\n    iaa.Crop(percent=(0, 0.1)), \r\n    iaa.Sometimes(0.5,\r\n        iaa.GaussianBlur(sigma=(0, 0.5))\r\n    ),\r\n    iaa.ContrastNormalization((0.75, 1.5)),\r\n    iaa.AdditiveGaussianNoise(loc=0, scale=(0.0, 0.05*255), per_channel=0.5),\r\n    iaa.Multiply((0.8, 1.2), per_channel=0.2),\r\n    iaa.Affine(\r\n        scale={\"x\": (0.8, 1.2), \"y\": (0.8, 1.2)},\r\n        translate_percent={\"x\": (-0.2, 0.2), \"y\": (-0.2, 0.2)},\r\n        rotate=(-25, 25),\r\n        shear=(-8, 8)\r\n    )\r\n], random_order=True) # apply augmenters in random order\r\n\r\nfor i in range(GEN_IMG):\r\n\ttry:\r\n\t\tseq_det = seq.to_deterministic()\r\n\t\tbbs_aug = seq_det.augment_bounding_boxes([bbs])[0]\r\n\t\timage_aug = seq_det.augment_images([images[i]])[0]\r\n\t\timage_after = bbs_aug.draw_on_image(image_aug, thickness=2, color=[0, 0, 255])\r\n\t\timageio.imwrite('/home/pi/imgaug-train/xmlTransferTest/' + str('image_after') + str(i) + '.jpg', image_after)\r\n\texcept IndexError:\r\n\t\tpass\r\n\t\t\r\nimage_before = bbs.draw_on_image(singleImage, thickness=2)\r\nimageio.imwrite('/home/pi/imgaug-train/xmlTransferTest/' + str('image_before') + '.jpg', image_before)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/291", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/291/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/291/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/291/events", "html_url": "https://github.com/aleju/imgaug/issues/291", "id": 426217773, "node_id": "MDU6SXNzdWU0MjYyMTc3NzM=", "number": 291, "title": "[Documentation Question] Upsizing segmentation masks", "user": {"login": "austinmw", "id": 12224358, "node_id": "MDQ6VXNlcjEyMjI0MzU4", "avatar_url": "https://avatars0.githubusercontent.com/u/12224358?v=4", "gravatar_id": "", "url": "https://api.github.com/users/austinmw", "html_url": "https://github.com/austinmw", "followers_url": "https://api.github.com/users/austinmw/followers", "following_url": "https://api.github.com/users/austinmw/following{/other_user}", "gists_url": "https://api.github.com/users/austinmw/gists{/gist_id}", "starred_url": "https://api.github.com/users/austinmw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/austinmw/subscriptions", "organizations_url": "https://api.github.com/users/austinmw/orgs", "repos_url": "https://api.github.com/users/austinmw/repos", "events_url": "https://api.github.com/users/austinmw/events{/privacy}", "received_events_url": "https://api.github.com/users/austinmw/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-27T22:51:47Z", "updated_at": "2019-03-29T19:52:09Z", "closed_at": "2019-03-29T19:52:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm curious how a type uint segmentation mask is able to be resized larger. The only method that makes sense to me would be KNN, but the docs say, \"Note that segmentation maps are handled internally as heatmaps (one per class) and as such can be resized using cubic interpolation.\" \r\n\r\nBut wouldn't cubic interpolation fill intermediate pixels with float values instead of only using the integer values present in the original mask?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/289", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/289/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/289/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/289/events", "html_url": "https://github.com/aleju/imgaug/issues/289", "id": 424198867, "node_id": "MDU6SXNzdWU0MjQxOTg4Njc=", "number": 289, "title": "Error in iaa.Affine()", "user": {"login": "Rysias", "id": 39084161, "node_id": "MDQ6VXNlcjM5MDg0MTYx", "avatar_url": "https://avatars2.githubusercontent.com/u/39084161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rysias", "html_url": "https://github.com/Rysias", "followers_url": "https://api.github.com/users/Rysias/followers", "following_url": "https://api.github.com/users/Rysias/following{/other_user}", "gists_url": "https://api.github.com/users/Rysias/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rysias/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rysias/subscriptions", "organizations_url": "https://api.github.com/users/Rysias/orgs", "repos_url": "https://api.github.com/users/Rysias/repos", "events_url": "https://api.github.com/users/Rysias/events{/privacy}", "received_events_url": "https://api.github.com/users/Rysias/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-03-22T13:02:42Z", "updated_at": "2019-03-22T13:03:06Z", "closed_at": "2019-03-22T13:03:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/274", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/274/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/274/events", "html_url": "https://github.com/aleju/imgaug/issues/274", "id": 415756312, "node_id": "MDU6SXNzdWU0MTU3NTYzMTI=", "number": 274, "title": "Numpy version required in `setup.py` does not match `requirements.txt`", "user": {"login": "dmsammons", "id": 7942627, "node_id": "MDQ6VXNlcjc5NDI2Mjc=", "avatar_url": "https://avatars2.githubusercontent.com/u/7942627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dmsammons", "html_url": "https://github.com/dmsammons", "followers_url": "https://api.github.com/users/dmsammons/followers", "following_url": "https://api.github.com/users/dmsammons/following{/other_user}", "gists_url": "https://api.github.com/users/dmsammons/gists{/gist_id}", "starred_url": "https://api.github.com/users/dmsammons/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dmsammons/subscriptions", "organizations_url": "https://api.github.com/users/dmsammons/orgs", "repos_url": "https://api.github.com/users/dmsammons/repos", "events_url": "https://api.github.com/users/dmsammons/events{/privacy}", "received_events_url": "https://api.github.com/users/dmsammons/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-02-28T18:12:43Z", "updated_at": "2019-03-04T17:51:37Z", "closed_at": "2019-03-04T17:51:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "Specifically, [requirements.txt](https://github.com/aleju/imgaug/blob/master/requirements.txt#L4) requires `numpy>=1.15,<1.16` whereas [setup.py](https://github.com/aleju/imgaug/blob/master/setup.py#L14) requires `numpy>=1.15.0`. This means that `pip install imgaug` will install the latest version of numpy which is greater than 1.16. As noted in issue https://github.com/aleju/imgaug/issues/235, there is a compatibility issue with latest `numpy`/`scikit-image`.\r\n\r\nIt looks like a fix is coming to make compatible with `numpy>=1.16` in PR https://github.com/aleju/imgaug/pull/267. Until then, should `setup.py` also require `numpy>=1.15,<1.16`?\r\n\r\nI can submit a PR to fix this if necessary.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/272", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/272/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/272/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/272/events", "html_url": "https://github.com/aleju/imgaug/issues/272", "id": 414939952, "node_id": "MDU6SXNzdWU0MTQ5Mzk5NTI=", "number": 272, "title": "BoundingBoxesOnImage Draw_on_image", "user": {"login": "DindinGS", "id": 45856870, "node_id": "MDQ6VXNlcjQ1ODU2ODcw", "avatar_url": "https://avatars2.githubusercontent.com/u/45856870?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DindinGS", "html_url": "https://github.com/DindinGS", "followers_url": "https://api.github.com/users/DindinGS/followers", "following_url": "https://api.github.com/users/DindinGS/following{/other_user}", "gists_url": "https://api.github.com/users/DindinGS/gists{/gist_id}", "starred_url": "https://api.github.com/users/DindinGS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DindinGS/subscriptions", "organizations_url": "https://api.github.com/users/DindinGS/orgs", "repos_url": "https://api.github.com/users/DindinGS/repos", "events_url": "https://api.github.com/users/DindinGS/events{/privacy}", "received_events_url": "https://api.github.com/users/DindinGS/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-27T04:29:52Z", "updated_at": "2019-02-27T04:38:56Z", "closed_at": "2019-02-27T04:38:56Z", "author_association": "NONE", "active_lock_reason": null, "body": " File \"thinaug.py\", line 35, in <module>\r\n    main()\r\n  File \"thinaug.py\", line 32, in main\r\n    ia.imshow(bbs.draw_on_image(img, thickness = 2))\r\n  File \"C:\\Users\\<username>\r\n\\Anaconda3\\lib\\site-packages\\imgaug-0.2.8-py3.6.egg\\imgaug\\imgaug.py\", line 3555, in draw_on_image\r\n    image = bb.draw_on_image(\r\nAttributeError: 'list' object has no attribute 'draw_on_image'\r\n\r\nFix: \r\nChecking the self.bounding_boxes returns a list within a list\r\n[[BoundingBox(x1=76.1483, y1=106.4417, x2=109.9920, y2=147.9472, label=0), BoundingBox(x1=545.4483, y1=127.1945, x2=564.0621, y2=152.6335, label=0), BoundingBox(x1=419.0983, y1=448.5280, x2=432.0719, y2=466.6030, label=0), BoundingBox(x1=263.9812, y1=429.1140, x2=286.5437, y2=451.8750, label=0)]]\r\nWhich upon iteration for each bounding box reads the inner list.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/265", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/265/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/265/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/265/events", "html_url": "https://github.com/aleju/imgaug/issues/265", "id": 413342879, "node_id": "MDU6SXNzdWU0MTMzNDI4Nzk=", "number": 265, "title": "can not use weather augmenter ", "user": {"login": "cam4ani", "id": 22814621, "node_id": "MDQ6VXNlcjIyODE0NjIx", "avatar_url": "https://avatars2.githubusercontent.com/u/22814621?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cam4ani", "html_url": "https://github.com/cam4ani", "followers_url": "https://api.github.com/users/cam4ani/followers", "following_url": "https://api.github.com/users/cam4ani/following{/other_user}", "gists_url": "https://api.github.com/users/cam4ani/gists{/gist_id}", "starred_url": "https://api.github.com/users/cam4ani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cam4ani/subscriptions", "organizations_url": "https://api.github.com/users/cam4ani/orgs", "repos_url": "https://api.github.com/users/cam4ani/repos", "events_url": "https://api.github.com/users/cam4ani/events{/privacy}", "received_events_url": "https://api.github.com/users/cam4ani/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-02-22T10:36:10Z", "updated_at": "2019-02-25T16:37:48Z", "closed_at": "2019-02-25T16:37:47Z", "author_association": "NONE", "active_lock_reason": null, "body": "First a big thanks for this great tool!\r\n\r\nDo you have any idea why I can't use any of the weather augmenters (with imgaug version '0.2.6')? It always give me an error : \"AttributeError: module 'imgaug.augmenters' has no attribute 'X'\"\r\n\r\ne.g.:\r\nfrom imgaug import augmenters as iaa\r\nseq = iaa.Sequential([iaa.Snowflakes()])\r\n#AttributeError: module 'imgaug.augmenters' has no attribute 'Snowflakes'\r\n\r\nThank you very much!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/264", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/264/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/264/events", "html_url": "https://github.com/aleju/imgaug/issues/264", "id": 413295201, "node_id": "MDU6SXNzdWU0MTMyOTUyMDE=", "number": 264, "title": "Feature request: Improve performance for segmentation maps", "user": {"login": "jnd77", "id": 3433639, "node_id": "MDQ6VXNlcjM0MzM2Mzk=", "avatar_url": "https://avatars3.githubusercontent.com/u/3433639?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jnd77", "html_url": "https://github.com/jnd77", "followers_url": "https://api.github.com/users/jnd77/followers", "following_url": "https://api.github.com/users/jnd77/following{/other_user}", "gists_url": "https://api.github.com/users/jnd77/gists{/gist_id}", "starred_url": "https://api.github.com/users/jnd77/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jnd77/subscriptions", "organizations_url": "https://api.github.com/users/jnd77/orgs", "repos_url": "https://api.github.com/users/jnd77/repos", "events_url": "https://api.github.com/users/jnd77/events{/privacy}", "received_events_url": "https://api.github.com/users/jnd77/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1122782516, "node_id": "MDU6TGFiZWwxMTIyNzgyNTE2", "url": "https://api.github.com/repos/aleju/imgaug/labels/TODO", "name": "TODO", "color": "d9c4ff", "default": false, "description": "Planned to be added to the library or changed in the future"}, {"id": 234896472, "node_id": "MDU6TGFiZWwyMzQ4OTY0NzI=", "url": "https://api.github.com/repos/aleju/imgaug/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-22T08:32:28Z", "updated_at": "2019-10-04T09:11:59Z", "closed_at": "2019-10-04T09:11:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\n\r\nFirst, I would like to thank you for the great library. Very user-friendly and full of features. :)\r\n\r\nI've noticed the overall process (augmentation of images, bounding boxes and segmentation maps) is spending most of its time on the segmentation maps.\r\nIn particular whichever augmenter is used, there is some significant overhead in transforming the seg map into a heat map, and then back to the seg map. Am wondering if it could be improved by doing it only when necessary, as some augmenters have no effect on the seg map (e.g. Add brightness) or could work directly on the seg map (e.g. Flip, Translate) ?\r\n\r\nThanks a lot !\r\n\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/261", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/261/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/261/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/261/events", "html_url": "https://github.com/aleju/imgaug/issues/261", "id": 411673180, "node_id": "MDU6SXNzdWU0MTE2NzMxODA=", "number": 261, "title": "Overwriting augment_segmentation_maps", "user": {"login": "kilsenp", "id": 5173119, "node_id": "MDQ6VXNlcjUxNzMxMTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/5173119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kilsenp", "html_url": "https://github.com/kilsenp", "followers_url": "https://api.github.com/users/kilsenp/followers", "following_url": "https://api.github.com/users/kilsenp/following{/other_user}", "gists_url": "https://api.github.com/users/kilsenp/gists{/gist_id}", "starred_url": "https://api.github.com/users/kilsenp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kilsenp/subscriptions", "organizations_url": "https://api.github.com/users/kilsenp/orgs", "repos_url": "https://api.github.com/users/kilsenp/repos", "events_url": "https://api.github.com/users/kilsenp/events{/privacy}", "received_events_url": "https://api.github.com/users/kilsenp/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-18T22:44:18Z", "updated_at": "2019-02-25T10:10:51Z", "closed_at": "2019-02-25T10:10:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hi,\r\n\r\nthe following case.\r\nI want to flip a segmentation map left, right. However, the class labels change (from left_x to right_x and vice versa).\r\nCurrently, I found it impossible to implement without api changes.\r\n\r\nMy original idea was to just use the original implementation, but then overwrite augment_segmentation_maps and there change the non_empty_indices accordingly. In theory, the from_heatmaps method should build the Segmentation map than with switched class labels.\r\n\r\n\r\nBut I realized, that I cannot overwrite the augment_segmentation maps method because the Augmenter Base class defines a augment_segmentation_maps that calls directly augment_heatmaps.\r\nSo when I use Sequential, my augment_segmentation_maps  method is never called.\r\n\r\nI would therefore suggest using a similar design as for all the other augmentation methods instead. \r\n\r\nI am of course also open for other suggestions how to implement this.\r\n\r\nThanks a lot!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/259", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/259/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/259/events", "html_url": "https://github.com/aleju/imgaug/issues/259", "id": 409713239, "node_id": "MDU6SXNzdWU0MDk3MTMyMzk=", "number": 259, "title": "Error with to_deterministic() function", "user": {"login": "lbps", "id": 40689135, "node_id": "MDQ6VXNlcjQwNjg5MTM1", "avatar_url": "https://avatars1.githubusercontent.com/u/40689135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lbps", "html_url": "https://github.com/lbps", "followers_url": "https://api.github.com/users/lbps/followers", "following_url": "https://api.github.com/users/lbps/following{/other_user}", "gists_url": "https://api.github.com/users/lbps/gists{/gist_id}", "starred_url": "https://api.github.com/users/lbps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lbps/subscriptions", "organizations_url": "https://api.github.com/users/lbps/orgs", "repos_url": "https://api.github.com/users/lbps/repos", "events_url": "https://api.github.com/users/lbps/events{/privacy}", "received_events_url": "https://api.github.com/users/lbps/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-02-13T09:44:40Z", "updated_at": "2019-02-13T10:06:57Z", "closed_at": "2019-02-13T10:06:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\r\n\r\nI have a problem when I try to use to_deterministic() function:\r\n\r\n```\r\nfrom imgaug import augmenters as iaa\r\naug=iaa.Fliplr(0.5)\r\naug_det = aug.to_deterministic()\r\n```\r\n\r\nWhen I execute this code, I obtain the following error:\r\n\r\n\r\n```\r\n  File \"<ipython-input-8-3b3918f28e00>\", line 1, in <module>\r\n    aug_det = aug.to_deterministic()\r\n\r\n  File \"C:\\Users\\luis\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\imgaug\\augmenters\\meta.py\", line 1257, in to_deterministic\r\n    return self.to_deterministic(1)[0]\r\n\r\n  File \"C:\\Users\\luis\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\imgaug\\augmenters\\meta.py\", line 1259, in to_deterministic\r\n    return [self._to_deterministic() for _ in sm.xrange(n)]\r\n\r\n  File \"C:\\Users\\luis\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\imgaug\\augmenters\\meta.py\", line 1259, in <listcomp>\r\n    return [self._to_deterministic() for _ in sm.xrange(n)]\r\n\r\n  File \"C:\\Users\\luis\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\imgaug\\augmenters\\meta.py\", line 1274, in _to_deterministic\r\n    aug.random_state = ia.new_random_state()\r\n\r\n  File \"C:\\Users\\luis\\Anaconda\\envs\\tensorflow-gpu\\lib\\site-packages\\imgaug\\imgaug.py\", line 349, in new_random_state\r\n    seed = CURRENT_RANDOM_STATE.randint(SEED_MIN_VALUE, SEED_MAX_VALUE, 1)[0]\r\n\r\n  File \"mtrand.pyx\", line 991, in mtrand.RandomState.randint\r\n\r\nValueError: high is out of bounds for int32\r\n```\r\nIt occurs with any augmentator.\r\nDo you know how I can solve it?\r\n\r\nThanks.\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/257", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/257/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/257/events", "html_url": "https://github.com/aleju/imgaug/issues/257", "id": 408498639, "node_id": "MDU6SXNzdWU0MDg0OTg2Mzk=", "number": 257, "title": "Always getting black image", "user": {"login": "drbrown7", "id": 43002537, "node_id": "MDQ6VXNlcjQzMDAyNTM3", "avatar_url": "https://avatars2.githubusercontent.com/u/43002537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/drbrown7", "html_url": "https://github.com/drbrown7", "followers_url": "https://api.github.com/users/drbrown7/followers", "following_url": "https://api.github.com/users/drbrown7/following{/other_user}", "gists_url": "https://api.github.com/users/drbrown7/gists{/gist_id}", "starred_url": "https://api.github.com/users/drbrown7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/drbrown7/subscriptions", "organizations_url": "https://api.github.com/users/drbrown7/orgs", "repos_url": "https://api.github.com/users/drbrown7/repos", "events_url": "https://api.github.com/users/drbrown7/events{/privacy}", "received_events_url": "https://api.github.com/users/drbrown7/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-02-10T04:10:47Z", "updated_at": "2019-02-10T18:01:56Z", "closed_at": "2019-02-10T18:01:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am trying to display a picture I pulled from a local folder. I have tried changing the data type of the numpy array, trying draw_grid instead of show_grid (which I have figured out doesn't display anything) and I've tried changing the show_grid parameters. No matter what I do the displayed image is always a black screen, if it displays at all. Sometimes python just freezes and I have to restart my computer. If you could help me figure out this problem I would really appreciate it.\r\n![python black screen](https://user-images.githubusercontent.com/43002537/52529462-e55d8d80-2cbf-11e9-9fce-922c7f0362a6.png)\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/235", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/235/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/235/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/235/events", "html_url": "https://github.com/aleju/imgaug/issues/235", "id": 400305790, "node_id": "MDU6SXNzdWU0MDAzMDU3OTA=", "number": 235, "title": "Problem with latest verison of Numpy 1.16.0", "user": {"login": "epratheeban", "id": 15340153, "node_id": "MDQ6VXNlcjE1MzQwMTUz", "avatar_url": "https://avatars1.githubusercontent.com/u/15340153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/epratheeban", "html_url": "https://github.com/epratheeban", "followers_url": "https://api.github.com/users/epratheeban/followers", "following_url": "https://api.github.com/users/epratheeban/following{/other_user}", "gists_url": "https://api.github.com/users/epratheeban/gists{/gist_id}", "starred_url": "https://api.github.com/users/epratheeban/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/epratheeban/subscriptions", "organizations_url": "https://api.github.com/users/epratheeban/orgs", "repos_url": "https://api.github.com/users/epratheeban/repos", "events_url": "https://api.github.com/users/epratheeban/events{/privacy}", "received_events_url": "https://api.github.com/users/epratheeban/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-01-17T14:37:21Z", "updated_at": "2019-08-10T10:23:19Z", "closed_at": "2019-08-10T10:23:19Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, \r\n\r\nWhen importing \r\n\r\nimport imgaug as ia \r\n\r\nI get this error \r\n```\r\nPython 3.5.3 (default, Sep 27 2018, 17:25:39) \r\n[GCC 6.3.0 20170516] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import imgaug as ia\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/prat/.local/lib/python3.5/site-packages/imgaug/__init__.py\", line 2, in <module>\r\n    from imgaug.imgaug import *\r\n  File \"/home/prat/.local/lib/python3.5/site-packages/imgaug/imgaug.py\", line 22, in <module>\r\n    import skimage.draw\r\n  File \"/home/prat/.local/lib/python3.5/site-packages/skimage/__init__.py\", line 167, in <module>\r\n    from .util.dtype import (img_as_float32,\r\n  File \"/home/prat/.local/lib/python3.5/site-packages/skimage/util/__init__.py\", line 8, in <module>\r\n    from .arraycrop import crop\r\n  File \"/home/prat/.local/lib/python3.5/site-packages/skimage/util/arraycrop.py\", line 8, in <module>\r\n    from numpy.lib.arraypad import _validate_lengths\r\nImportError: cannot import name '_validate_lengths'\r\n\r\n```\r\nAlso I cant downgrade my numpy. \r\n\r\nAny help please !\r\n\r\nTIA", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/228", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/228/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/228/events", "html_url": "https://github.com/aleju/imgaug/issues/228", "id": 396277141, "node_id": "MDU6SXNzdWUzOTYyNzcxNDE=", "number": 228, "title": "BUG?: reseed() does nothing for deterministic augmenters when given a RandomState", "user": {"login": "ig177", "id": 46423597, "node_id": "MDQ6VXNlcjQ2NDIzNTk3", "avatar_url": "https://avatars0.githubusercontent.com/u/46423597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ig177", "html_url": "https://github.com/ig177", "followers_url": "https://api.github.com/users/ig177/followers", "following_url": "https://api.github.com/users/ig177/following{/other_user}", "gists_url": "https://api.github.com/users/ig177/gists{/gist_id}", "starred_url": "https://api.github.com/users/ig177/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ig177/subscriptions", "organizations_url": "https://api.github.com/users/ig177/orgs", "repos_url": "https://api.github.com/users/ig177/repos", "events_url": "https://api.github.com/users/ig177/events{/privacy}", "received_events_url": "https://api.github.com/users/ig177/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-01-06T17:24:46Z", "updated_at": "2019-01-06T18:42:10Z", "closed_at": "2019-01-06T18:42:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI've just learned about this great library, but I'm having some trouble using it. Will be happy to get your help with the issue below.\r\n\r\nWhen trying to call reseed() on a deterministic augmenter and provide it with a previously constructed RandomState(), reseed() has no effect.\r\n\r\nFor example, let's construct an augmenter as follows:\r\n`aug = iaa.Pad(percent=(0,0.5), random_state=np.random.RandomState(17), deterministic=True)`\r\nAnd then plot an augmented image:\r\n`plt.imshow(aug.augment_image(im))`\r\nNow, let's reseed the augmenter (with a different random state):\r\n`aug.reseed(np.random.RandomState(1234))`\r\nThe following will plot the same image as before:\r\n`plt.imshow(aug.augment_image(im))`\r\n\r\nI believe the reason is this code in Augmenter.reseed():\r\n```\r\n        if random_state is None:\r\n            random_state = ia.current_random_state()\r\n        elif isinstance(random_state, np.random.RandomState):\r\n            pass # just use the provided random state without change\r\n        else:\r\n            random_state = ia.new_random_state(random_state)\r\n\r\n```\r\nI guess that `pass` should be replaced with `self.random_state = random_state`.\r\nAm I missing something?\r\n\r\nThank you!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/225", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/225/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/225/events", "html_url": "https://github.com/aleju/imgaug/issues/225", "id": 394916636, "node_id": "MDU6SXNzdWUzOTQ5MTY2MzY=", "number": 225, "title": "Matplotlib's pyplot should not be imported at the top-level", "user": {"login": "Erotemic", "id": 3186211, "node_id": "MDQ6VXNlcjMxODYyMTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/3186211?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Erotemic", "html_url": "https://github.com/Erotemic", "followers_url": "https://api.github.com/users/Erotemic/followers", "following_url": "https://api.github.com/users/Erotemic/following{/other_user}", "gists_url": "https://api.github.com/users/Erotemic/gists{/gist_id}", "starred_url": "https://api.github.com/users/Erotemic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Erotemic/subscriptions", "organizations_url": "https://api.github.com/users/Erotemic/orgs", "repos_url": "https://api.github.com/users/Erotemic/repos", "events_url": "https://api.github.com/users/Erotemic/events{/privacy}", "received_events_url": "https://api.github.com/users/Erotemic/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1122782516, "node_id": "MDU6TGFiZWwxMTIyNzgyNTE2", "url": "https://api.github.com/repos/aleju/imgaug/labels/TODO", "name": "TODO", "color": "d9c4ff", "default": false, "description": "Planned to be added to the library or changed in the future"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-31T01:22:04Z", "updated_at": "2019-01-06T14:31:44Z", "closed_at": "2019-01-06T14:31:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Importing the pyplot library from matplotlib has unintended side effects at import time. Specifically it causes the matplotlib backend to lock into whatever the current setting is. This (1) makes it difficult to change later using `matplotlib.use`, (2) means that matplotlib must be installed to use `imgaug`, and (3) takes unnecessary time on import that may be better being lazily loaded. \r\n\r\nA lot of libraries make the mistake of importing pyplot at the top level. When this happens (and the developer invariably runs into problems), you will often see them them work around it with a ugly global configuration as such:\r\n\r\n```python\r\nimport matplotlib\r\nmatplotlib.use('agg')\r\nimport <module-that-imports-pyplot-at-the-top-level>\r\n```\r\n\r\nNot only is this ugly, it is fragile, because now importing whatever the module you are creating will cause the matplotlib backend to be configured and frozen.  \r\n\r\nThe solution is to simply move all:  `import matplotlib.pyplot as plt` into the functions that use them. This will allow a user to (1) import imgaug without having to absolutely require that matplotlib is installed and (2) avoid having to execute any nasty global configuration code at import time. \r\n\r\nFrom what I see only two files use pyplot:  [imgaug.py](https://github.com/aleju/imgaug/blob/master/imgaug/imgaug.py) and [parameters.py](https://github.com/aleju/imgaug/blob/master/imgaug/parameters.py), and each of these files only references `plt` 4 times, so it should be an easy fix. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/223", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/223/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/223/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/223/events", "html_url": "https://github.com/aleju/imgaug/issues/223", "id": 394772331, "node_id": "MDU6SXNzdWUzOTQ3NzIzMzE=", "number": 223, "title": "Make Rot90 direction clear", "user": {"login": "ck244", "id": 20911321, "node_id": "MDQ6VXNlcjIwOTExMzIx", "avatar_url": "https://avatars2.githubusercontent.com/u/20911321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ck244", "html_url": "https://github.com/ck244", "followers_url": "https://api.github.com/users/ck244/followers", "following_url": "https://api.github.com/users/ck244/following{/other_user}", "gists_url": "https://api.github.com/users/ck244/gists{/gist_id}", "starred_url": "https://api.github.com/users/ck244/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ck244/subscriptions", "organizations_url": "https://api.github.com/users/ck244/orgs", "repos_url": "https://api.github.com/users/ck244/repos", "events_url": "https://api.github.com/users/ck244/events{/privacy}", "received_events_url": "https://api.github.com/users/ck244/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 1122782516, "node_id": "MDU6TGFiZWwxMTIyNzgyNTE2", "url": "https://api.github.com/repos/aleju/imgaug/labels/TODO", "name": "TODO", "color": "d9c4ff", "default": false, "description": "Planned to be added to the library or changed in the future"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-12-29T08:01:32Z", "updated_at": "2019-01-06T14:34:54Z", "closed_at": "2019-01-06T14:34:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "First off thanks so much for this tool! I think it's really helpful for preparing datasets.\r\n\r\nI just wanted to mention something I found while working with the Rot90 augmenter. I was rotating my images with PIL and found that the direction of rotation was opposite. PIL rotates images counterclockwise (ROTATE_90 means to the left), while Rot90 rotates the bounding box clockwise. So I had to do 3 Rot90's to get the same as PIL's ROTATE_90. \r\n\r\nGuess it's not really an issue with the implementation, just would be useful to note this in the documentation. Thanks again!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/220", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/220/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/220/events", "html_url": "https://github.com/aleju/imgaug/issues/220", "id": 393797768, "node_id": "MDU6SXNzdWUzOTM3OTc3Njg=", "number": 220, "title": "Swapping of axis in BoundingBoxesOnImage", "user": {"login": "Niellai", "id": 9927452, "node_id": "MDQ6VXNlcjk5Mjc0NTI=", "avatar_url": "https://avatars3.githubusercontent.com/u/9927452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Niellai", "html_url": "https://github.com/Niellai", "followers_url": "https://api.github.com/users/Niellai/followers", "following_url": "https://api.github.com/users/Niellai/following{/other_user}", "gists_url": "https://api.github.com/users/Niellai/gists{/gist_id}", "starred_url": "https://api.github.com/users/Niellai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Niellai/subscriptions", "organizations_url": "https://api.github.com/users/Niellai/orgs", "repos_url": "https://api.github.com/users/Niellai/repos", "events_url": "https://api.github.com/users/Niellai/events{/privacy}", "received_events_url": "https://api.github.com/users/Niellai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-12-24T02:19:09Z", "updated_at": "2018-12-24T09:07:00Z", "closed_at": "2018-12-24T09:07:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "For some reason set bounding box will swap the coordinates when you try to access it.\r\nThese swapping behavior can also happen to the x axis too.\r\n\r\n```\r\nbbs = ia.BoundingBoxesOnImage([\r\n    ia.BoundingBox(x1=119, y1=332, x2=191, y2=132)\r\n], shape=(500, 500, 3))\r\n\r\nprint(bbs.bounding_boxes[0])\r\n\r\n# print out for some reason y1 swap with y2\r\nBoundingBox(x1=119.0000, y1=132.0000, x2=191.0000, y2=332.0000, label=None)\r\n```\r\nI suspect is a bug. Do let me know if I did anything wrong here.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/219", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/219/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/219/events", "html_url": "https://github.com/aleju/imgaug/issues/219", "id": 392849918, "node_id": "MDU6SXNzdWUzOTI4NDk5MTg=", "number": 219, "title": "How to use extra information when augmenting images?", "user": {"login": "Remember2018", "id": 43327429, "node_id": "MDQ6VXNlcjQzMzI3NDI5", "avatar_url": "https://avatars3.githubusercontent.com/u/43327429?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Remember2018", "html_url": "https://github.com/Remember2018", "followers_url": "https://api.github.com/users/Remember2018/followers", "following_url": "https://api.github.com/users/Remember2018/following{/other_user}", "gists_url": "https://api.github.com/users/Remember2018/gists{/gist_id}", "starred_url": "https://api.github.com/users/Remember2018/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Remember2018/subscriptions", "organizations_url": "https://api.github.com/users/Remember2018/orgs", "repos_url": "https://api.github.com/users/Remember2018/repos", "events_url": "https://api.github.com/users/Remember2018/events{/privacy}", "received_events_url": "https://api.github.com/users/Remember2018/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-12-20T01:31:56Z", "updated_at": "2018-12-20T09:03:13Z", "closed_at": "2018-12-20T09:03:13Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi there, thanks a lot for your endevours on this great package!\r\nI have a question, in the following function,\r\nhttps://github.com/aleju/imgaug/blob/86768da789c2ffdf04df3125a1b1cf0f7289fe45/imgaug/augmenters/meta.py#L577\r\nit seems there is a `info` parameter in the previous versions, but in this version, this parameter has been removed. The `info` parameter can be used to deliver other extra parameters into the augmentation, e.g., the bounding boxes, etc. \r\n\r\nWhen using the latest version without the `info` parameter, how can I transfer extra information into the `_augment_images`? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/aleju/imgaug/issues/218", "repository_url": "https://api.github.com/repos/aleju/imgaug", "labels_url": "https://api.github.com/repos/aleju/imgaug/issues/218/labels{/name}", "comments_url": "https://api.github.com/repos/aleju/imgaug/issues/218/comments", "events_url": "https://api.github.com/repos/aleju/imgaug/issues/218/events", "html_url": "https://github.com/aleju/imgaug/issues/218", "id": 391826873, "node_id": "MDU6SXNzdWUzOTE4MjY4NzM=", "number": 218, "title": "Cannot install opencv and imgaug in the same `pip install` line", "user": {"login": "craigcitro", "id": 468559, "node_id": "MDQ6VXNlcjQ2ODU1OQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/468559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/craigcitro", "html_url": "https://github.com/craigcitro", "followers_url": "https://api.github.com/users/craigcitro/followers", "following_url": "https://api.github.com/users/craigcitro/following{/other_user}", "gists_url": "https://api.github.com/users/craigcitro/gists{/gist_id}", "starred_url": "https://api.github.com/users/craigcitro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/craigcitro/subscriptions", "organizations_url": "https://api.github.com/users/craigcitro/orgs", "repos_url": "https://api.github.com/users/craigcitro/repos", "events_url": "https://api.github.com/users/craigcitro/events{/privacy}", "received_events_url": "https://api.github.com/users/craigcitro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-12-17T17:59:53Z", "updated_at": "2019-02-09T12:43:33Z", "closed_at": "2019-01-06T14:36:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Repro steps:\r\n\r\n* make a fresh virtualenv\r\n* run `python3 -m pip install imgaug opencv-python`\r\n\r\nWant: imgaug and cv2 are both installed\r\nGot: error during imgaug setup.py, nothing is installed.\r\n\r\nThe problem here is that `setup.py` is looking for `cv2` to already be installed, which it may not yet be.\r\n\r\nMy use case is installing `imgaug` along with several other packages via `pip3 install -r requirements.txt`; I understand that there's an env var to skip this check, but I'd rather not start collecting env vars in every script that wants to set up an environment this way.", "performed_via_github_app": null, "score": 1.0}]}