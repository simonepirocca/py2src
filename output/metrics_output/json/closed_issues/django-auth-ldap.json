{"total_count": 40, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/195", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/195/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/195/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/195", "id": 642490459, "node_id": "MDU6SXNzdWU2NDI0OTA0NTk=", "number": 195, "title": "AUTH_LDAP_USER_FLAGS_BY_GROUP is_superuser does not allow access to admin site", "user": {"login": "politas", "id": 2109967, "node_id": "MDQ6VXNlcjIxMDk5Njc=", "avatar_url": "https://avatars1.githubusercontent.com/u/2109967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/politas", "html_url": "https://github.com/politas", "followers_url": "https://api.github.com/users/politas/followers", "following_url": "https://api.github.com/users/politas/following{/other_user}", "gists_url": "https://api.github.com/users/politas/gists{/gist_id}", "starred_url": "https://api.github.com/users/politas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/politas/subscriptions", "organizations_url": "https://api.github.com/users/politas/orgs", "repos_url": "https://api.github.com/users/politas/repos", "events_url": "https://api.github.com/users/politas/events{/privacy}", "received_events_url": "https://api.github.com/users/politas/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-21T04:07:01Z", "updated_at": "2020-06-21T04:19:14Z", "closed_at": "2020-06-21T04:17:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to avoid creating a special superuser account by using what the documentation appears to show as the method:\r\n\r\nsettings.py:\r\n\r\n```\r\nimport ldap\r\n\r\nfrom django_auth_ldap.config import LDAPSearch, PosixGroupType\r\n\r\nMIDDLEWARE = [\r\n\t'django.middleware.security.SecurityMiddleware',\r\n\t'django.contrib.sessions.middleware.SessionMiddleware',\r\n\t'django.middleware.common.CommonMiddleware',\r\n\t'django.middleware.csrf.CsrfViewMiddleware',\r\n\t'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n\t'django.contrib.messages.middleware.MessageMiddleware',\r\n\t'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n]\r\nAUTHENTICATION_BACKENDS = [\r\n\t\"django_auth_ldap.backend.LDAPBackend\",\r\n\t\"django.contrib.auth.backends.ModelBackend\"\r\n]\r\n\r\n#AUTH_LDAP_CONNECTION_OPTIONS = {ldap.OPT_REFERRALS: 0}\r\nAUTH_LDAP_START_TLS = True\r\nAUTH_LDAP_SERVER_URI = \"ldap://bangdash.space\"\r\n\r\n# Perform user search anonymously\r\nAUTH_LDAP_BIND_DN = \"\"\r\nAUTH_LDAP_BIND_PASSWORD = \"\"\r\n# pylint: disable=maybe-no-member\r\nAUTH_LDAP_USER_SEARCH = LDAPSearch(\r\n\t\"ou=People,dc=bangdash,dc=space\", ldap.SCOPE_ONELEVEL, \"(uid=%(user)s)\"\r\n)\r\n\r\nAUTH_LDAP_BIND_AS_AUTHENTICATING_USER = True\r\n\r\n# Require user be in the \"tangohab\" LDAP group\r\n# pylint: disable=maybe-no-member\r\nAUTH_LDAP_GROUP_SEARCH = LDAPSearch(\r\n\t\"ou=tangohab,ou=Groups,dc=bangdash,dc=space\", ldap.SCOPE_SUBTREE, \"(objectClass=posixGroup)\"\r\n)\r\nAUTH_LDAP_GROUP_TYPE = PosixGroupType()\r\nAUTH_LDAP_REQUIRE_GROUP = \"cn=users,ou=tangohab,ou=Groups,dc=bangdash,dc=space\"\r\n\r\n# Populate User\r\nAUTH_LDAP_USER_ATTR_MAP = {\r\n\t\"first_name\": \"givenName\", \r\n\t\"last_name\": \"sn\"\r\n}\r\n\r\nAUTH_LDAP_USER_FLAGS_BY_GROUP = {\r\n\t\"is_superuser\": \"cn=superuser,ou=tangohab,ou=Groups,dc=bangdash,dc=space\",\r\n}\r\n\r\nAUTH_LDAP_FIND_GROUP_PERMS = True\r\nAUTH_LDAP_MIRROR_GROUPS = [\r\n\t\"users\",\r\n\t\"operators\",\r\n]\r\n```\r\n\r\nOn trying to open the admin screen, logging shows:\r\n\r\n```\r\nInitiating TLS\r\nsearch_s('ou=People,dc=bangdash,dc=space', 1, '(uid=%(user)s)') returned 1 objects: uid=tangomyk,ou=people,dc=bangdash,dc=space\r\nuid=tangomyk,ou=people,dc=bangdash,dc=space is a member of cn=users,ou=tangohab,ou=groups,dc=bangdash,dc=space\r\nPopulating Django user tangomyk\r\nuid=tangomyk,ou=people,dc=bangdash,dc=space is a member of cn=superuser,ou=tangohab,ou=groups,dc=bangdash,dc=space\r\nsearch_s('ou=tangohab,ou=Groups,dc=bangdash,dc=space', 2, '(&(objectClass=posixGroup)(|(gidNumber=5000)(memberUid=tangomyk)))') returned 3 objects: cn=users,ou=tangohab,ou=groups,dc=bangdash,dc=space; cn=operators,ou=tangohab,ou=groups,dc=bangdash,dc=space; cn=superuser,ou=tangohab,ou=groups,dc=bangdash,dc=space\r\n```\r\n\r\nSo, it it happily authenticating my user, and it sees and reports that it is a member of the required group to set the \"is_superuser\" flag, but it doesn't seem to actually set the \"is_superuser\" flag, because it refuses to let my user into the admin panel.\r\n\r\nI've tried looking in the code for how AUTH_LDAP_USER_FLAGS_BY_GROUP is programmed, but I can't find that string at all.\r\n\r\nIf you need some more information, I'm afraid I'll need some pointers on how to collect it. ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/192", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/192/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/192/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/192/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/192", "id": 631522056, "node_id": "MDU6SXNzdWU2MzE1MjIwNTY=", "number": 192, "title": "LDAP auth can't find cn=Domain Users", "user": {"login": "nighttray", "id": 54712547, "node_id": "MDQ6VXNlcjU0NzEyNTQ3", "avatar_url": "https://avatars0.githubusercontent.com/u/54712547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nighttray", "html_url": "https://github.com/nighttray", "followers_url": "https://api.github.com/users/nighttray/followers", "following_url": "https://api.github.com/users/nighttray/following{/other_user}", "gists_url": "https://api.github.com/users/nighttray/gists{/gist_id}", "starred_url": "https://api.github.com/users/nighttray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nighttray/subscriptions", "organizations_url": "https://api.github.com/users/nighttray/orgs", "repos_url": "https://api.github.com/users/nighttray/repos", "events_url": "https://api.github.com/users/nighttray/events{/privacy}", "received_events_url": "https://api.github.com/users/nighttray/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-06-05T11:30:47Z", "updated_at": "2020-06-09T07:14:02Z", "closed_at": "2020-06-09T07:14:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "If i use AUTH_LDAP_FIND_GROUP_PERMS then he can't find cn=Domain Users in AD. Others groups ok, but not only this! \"cn=test,ou=it,dc=dc,dc=lan is not a member of cn=domain users,cn=users,dc=dc,dc=lan\"", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/186", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/186/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/186/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/186", "id": 612893685, "node_id": "MDU6SXNzdWU2MTI4OTM2ODU=", "number": 186, "title": "Support escape argument in LDAPSearchUnion.execute", "user": {"login": "Natureshadow", "id": 212972, "node_id": "MDQ6VXNlcjIxMjk3Mg==", "avatar_url": "https://avatars3.githubusercontent.com/u/212972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Natureshadow", "html_url": "https://github.com/Natureshadow", "followers_url": "https://api.github.com/users/Natureshadow/followers", "following_url": "https://api.github.com/users/Natureshadow/following{/other_user}", "gists_url": "https://api.github.com/users/Natureshadow/gists{/gist_id}", "starred_url": "https://api.github.com/users/Natureshadow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Natureshadow/subscriptions", "organizations_url": "https://api.github.com/users/Natureshadow/orgs", "repos_url": "https://api.github.com/users/Natureshadow/repos", "events_url": "https://api.github.com/users/Natureshadow/events{/privacy}", "received_events_url": "https://api.github.com/users/Natureshadow/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-05-05T21:03:36Z", "updated_at": "2020-06-02T23:52:11Z", "closed_at": "2020-06-02T23:35:18Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "In the AlekSIS project, we have been relying on the `escape` keyword argument to `LDAPSearch.execute`. Now, we want to also support the `LDAPSearchUnion` for some utility code, but it does not support the `escape` keyword argument. It should accept this argument and pass it on to `search._begin`.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/183", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/183/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/183/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/183", "id": 600603644, "node_id": "MDU6SXNzdWU2MDA2MDM2NDQ=", "number": 183, "title": "Cant see user groups", "user": {"login": "DennyD17", "id": 22785732, "node_id": "MDQ6VXNlcjIyNzg1NzMy", "avatar_url": "https://avatars3.githubusercontent.com/u/22785732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DennyD17", "html_url": "https://github.com/DennyD17", "followers_url": "https://api.github.com/users/DennyD17/followers", "following_url": "https://api.github.com/users/DennyD17/following{/other_user}", "gists_url": "https://api.github.com/users/DennyD17/gists{/gist_id}", "starred_url": "https://api.github.com/users/DennyD17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DennyD17/subscriptions", "organizations_url": "https://api.github.com/users/DennyD17/orgs", "repos_url": "https://api.github.com/users/DennyD17/repos", "events_url": "https://api.github.com/users/DennyD17/events{/privacy}", "received_events_url": "https://api.github.com/users/DennyD17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-04-15T21:37:57Z", "updated_at": "2020-04-21T12:59:15Z", "closed_at": "2020-04-21T12:59:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\r\nI want to use ldap auth in my Django project and not store anything about user in DB except Groups and Permissions.\r\nrequest.user.ldap_user.group_names always empty.\r\nI can't understand where is my mistake.\r\n\r\nENV: \r\nPython 3.6\r\nDjango 3.0\r\nDjango-auth-ldap 2.1.1\r\n\r\n**Settings.py:**\r\n`import ldap\r\nfrom django_auth_ldap.config import LDAPSearch, GroupOfNamesType, PosixGroupType\r\n\r\n\r\nAUTHENTICATION_BACKENDS = [\r\n    'django_auth_ldap.backend.LDAPBackend',\r\n]\r\n\r\nAUTH_LDAP_SERVER_URI = 'ldap://ipa.dev.df.ru'\r\n\r\nAUTH_LDAP_BIND_AS_AUTHENTICATING_USER = True\r\n\r\nAUTH_LDAP_USER_DN_TEMPLATE = 'uid=%(user)s,cn=users,cn=accounts,dc=dev,dc=df,dc=ru'\r\nAUTH_LDAP_USER_FLAGS_BY_GROUP = {\r\n    \"is_active\": \"cn=ipausers,cn=groups,cn=accounts,dc=dev,dc=df,dc=ru\",\r\n}\r\n\r\nAUTH_LDAP_GROUP_SEARCH =     LDAPSearch(\"cn=groups,cn=accounts,dc=dev,dc=df,dc=ru\",\r\n                                    ldap.SCOPE_SUBTREE, \"(objectClass=*)\")\r\n\r\nAUTH_LDAP_GROUP_TYPE = GroupOfNamesType()\r\nAUTH_LDAP_FIND_GROUP_PERMS = True\r\nAUTH_LDAP_USER_ATTR_MAP = {\"first_name\": \"givenName\", \"last_name\": \"sn\", \"email\": \"mail\"}\r\n\r\nAUTH_LDAP_CACHE_TIMEOUT = 3600`\r\n\r\n\r\nWhen I login I put a breakpoint to the return of _process_results method - there are all my groups, all right.\r\n\r\nBut when I renew page after authentication there are no groups.\r\n\r\nIn Django-ldap-logging I see:\r\nsearch_s('cn=groups,cn=accounts,dc=dev,dc=df,dc=ru', 2, '(&(objectClass=*)(member=uid=avramenko-da,cn=users,cn=accounts,dc=dev,dc=df,dc=sbrf,dc=ru))') returned 0 objects:\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/176", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/176/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/176/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/176/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/176", "id": 568964932, "node_id": "MDU6SXNzdWU1Njg5NjQ5MzI=", "number": 176, "title": "Installation via Pipenv", "user": {"login": "jursed", "id": 27785024, "node_id": "MDQ6VXNlcjI3Nzg1MDI0", "avatar_url": "https://avatars2.githubusercontent.com/u/27785024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jursed", "html_url": "https://github.com/jursed", "followers_url": "https://api.github.com/users/jursed/followers", "following_url": "https://api.github.com/users/jursed/following{/other_user}", "gists_url": "https://api.github.com/users/jursed/gists{/gist_id}", "starred_url": "https://api.github.com/users/jursed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jursed/subscriptions", "organizations_url": "https://api.github.com/users/jursed/orgs", "repos_url": "https://api.github.com/users/jursed/repos", "events_url": "https://api.github.com/users/jursed/events{/privacy}", "received_events_url": "https://api.github.com/users/jursed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-02-21T13:47:01Z", "updated_at": "2020-04-15T17:52:25Z", "closed_at": "2020-04-15T17:52:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI tried installing this module via Pipenv, but during the GCC building phase of `LDAPObject.o`, the process fails. The following is an excerpt from the Pipenv stack trace (the full trace is unreadable):\r\n\r\n```\r\n\"  building '_ldap' extension\",\r\n'  creating build/temp.linux-x86_64-3.7',\r\n'  creating build/temp.linux-x86_64-3.7/Modules',\r\n'  x86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall  -g -fdebug-prefix-map=/build/python3.7-WA8NgD/python3.7-3.7.6=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -DHAVE_SASL -DHAVE_TLS -DHAVE_LIBLDAP_R -DHAVE_LIB LDAP_R -DLDAPMODULE_VERSION=3.2.0 -DLDAPMODULE_AUTHOR=python-ldap project -DLDAPMODULE_LICENSE=Python style -IModules -I/usr/include/python3.7m -I/home/xxxxxx/.local/share/virtualenvs/xxxxxx-vxG78si7 /include/python3.7m -c Modules/LDAPObject.c -o build/temp.linux-x86_64-3.7/Modules/LDAPObject.o',\r\n'  In file included from Modules/LDAPObject.c:3:0:',\r\n'  Modules/common.h:9:10: fatal error: Python.h: No such file or directory',\r\n'   #include \"Python.h\"', '            ^~~~~~~~~~',\r\n'  compilation terminated.',\r\n\"  error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\",\r\n'  ----------------------------------------',\r\n'  ERROR: Failed building wheel for python-ldap',\r\n'    ERROR: Command errored out with exit status 1:',\r\n```\r\n\r\nI admit that I do not grasp the packaging and building concerns for Python modules which have external C dependencies. (So, I do not understand the above.)\r\n\r\nI'm using Ubuntu Server 18.04 and Python 3.7.5. The OS-provided package (`apt install python-ldap`) installs fine, however, it is incompatible with the Pipenv Python interpreter. When I try to \"force\" the import via `sys.path.append(\"path/to/OS/installed/packages\")`, I get the following stack trace:\r\n```\r\n---------------------------------------------------------------------------\r\nModuleNotFoundError                       Traceback (most recent call last)\r\n<ipython-input-5-d1ac9892a452> in <module>\r\n----> 1 import ldap\r\n\r\n/usr/lib/python3/dist-packages/ldap/__init__.py in <module>\r\n     18   _trace_stack_limit = None\r\n     19 \r\n---> 20 import _ldap\r\n     21 assert _ldap.__version__==__version__, \\\r\n     22        ImportError('ldap %s and _ldap %s version mismatch!' % (__version__,_ldap.__version__))\r\n\r\nModuleNotFoundError: No module named '_ldap'\r\n```\r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/163", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/163/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/163/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/163", "id": 531672043, "node_id": "MDU6SXNzdWU1MzE2NzIwNDM=", "number": 163, "title": "Failed to map the username to a DN after switching to LDAPS", "user": {"login": "Linightz", "id": 33850654, "node_id": "MDQ6VXNlcjMzODUwNjU0", "avatar_url": "https://avatars3.githubusercontent.com/u/33850654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Linightz", "html_url": "https://github.com/Linightz", "followers_url": "https://api.github.com/users/Linightz/followers", "following_url": "https://api.github.com/users/Linightz/following{/other_user}", "gists_url": "https://api.github.com/users/Linightz/gists{/gist_id}", "starred_url": "https://api.github.com/users/Linightz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Linightz/subscriptions", "organizations_url": "https://api.github.com/users/Linightz/orgs", "repos_url": "https://api.github.com/users/Linightz/repos", "events_url": "https://api.github.com/users/Linightz/events{/privacy}", "received_events_url": "https://api.github.com/users/Linightz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-03T02:36:31Z", "updated_at": "2019-12-03T08:00:02Z", "closed_at": "2019-12-03T07:59:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm building a django project for my company, I had settings like below when I just use simple bind without SSL:\r\n```python\r\nAUTH_LDAP_SERVER_URI = 'ldap://some.example.server:389'\r\nAUTH_LDAP_BASE_DN = 'some-base-dn'\r\nAUTH_LDAP_BIND_DN = 'some-bind-dn'\r\nAUTH_LDAP_BIND_PASSWORD = 'some-password'\r\nAUTH_LDAP_USER_SEARCH = LDAPSearch(\r\n    AUTH_LDAP_BASE_DN, ldap.SCOPE_SUBTREE, '(sAMAccountName=%(user)s)')\r\n```\r\nand it worked perfectly.\r\n\r\nHowever, due to the security enhancement of our company's LDAP server, we're asked to use LDAP over SSL. So I get a certificate and change my code like this:\r\n```python\r\nAUTH_LDAP_GLOBAL_OPTIONS = {\r\n    ldap.OPT_X_TLS_REQUIRE_CERT: True,\r\n    ldap.OPT_X_TLS_DEMAND: True,\r\n    ldap.OPT_REFERRALS: 0,\r\n    ldap.OPT_X_TLS_CACERTFILE: '/etc/ssl/certs/mycertfile.pem'\r\n}\r\nAUTH_LDAP_SERVER_URI = 'ldaps://some.example.server:636'\r\nAUTH_LDAP_BASE_DN = 'some-base-dn'\r\nAUTH_LDAP_BIND_DN = 'some-bind-dn'\r\nAUTH_LDAP_BIND_PASSWORD = 'some-password'\r\nAUTH_LDAP_USER_SEARCH = LDAPSearch(\r\n    AUTH_LDAP_BASE_DN, ldap.SCOPE_SUBTREE, '(sAMAccountName=%(user)s)')\r\n```\r\nIt no longer works. It keeps saying search_s(xxx) returned 0 objects: Authentication failed for : failed to map the username to a DN.\r\n\r\nBut if I change the filter string for the LDAPSearch() from\r\n```python\r\n'(sAMAccountName=%(user)s)'\r\n```\r\nto\r\n```python\r\n'(sAMAccountName=<hard-coded-id>)'\r\n```\r\nit works.\r\n\r\nI've been trying to dig out why this happens and so far no luck. Does anyone have any idea why this is happening?\r\n\r\nMuch Appreciated.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/162", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/162/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/162/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/162", "id": 531481732, "node_id": "MDU6SXNzdWU1MzE0ODE3MzI=", "number": 162, "title": "Django 3.0 - cannot import name 'six' from 'django.utils'", "user": {"login": "kevin-olbrich", "id": 503085, "node_id": "MDQ6VXNlcjUwMzA4NQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/503085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevin-olbrich", "html_url": "https://github.com/kevin-olbrich", "followers_url": "https://api.github.com/users/kevin-olbrich/followers", "following_url": "https://api.github.com/users/kevin-olbrich/following{/other_user}", "gists_url": "https://api.github.com/users/kevin-olbrich/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevin-olbrich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevin-olbrich/subscriptions", "organizations_url": "https://api.github.com/users/kevin-olbrich/orgs", "repos_url": "https://api.github.com/users/kevin-olbrich/repos", "events_url": "https://api.github.com/users/kevin-olbrich/events{/privacy}", "received_events_url": "https://api.github.com/users/kevin-olbrich/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-12-02T19:19:54Z", "updated_at": "2019-12-03T18:19:56Z", "closed_at": "2019-12-03T18:19:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using the module is impossible with Django 3.0 as six has been removed from 'django.utils'.\r\n\r\nExample of fix:\r\nhttps://github.com/django-compressor/django-compressor/pull/950/files", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/152", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/152/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/152/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/152/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/152", "id": 496065147, "node_id": "MDU6SXNzdWU0OTYwNjUxNDc=", "number": 152, "title": "django-auth-ldap sets ldap trace level to 2", "user": {"login": "rrauenza", "id": 1376251, "node_id": "MDQ6VXNlcjEzNzYyNTE=", "avatar_url": "https://avatars0.githubusercontent.com/u/1376251?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rrauenza", "html_url": "https://github.com/rrauenza", "followers_url": "https://api.github.com/users/rrauenza/followers", "following_url": "https://api.github.com/users/rrauenza/following{/other_user}", "gists_url": "https://api.github.com/users/rrauenza/gists{/gist_id}", "starred_url": "https://api.github.com/users/rrauenza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rrauenza/subscriptions", "organizations_url": "https://api.github.com/users/rrauenza/orgs", "repos_url": "https://api.github.com/users/rrauenza/repos", "events_url": "https://api.github.com/users/rrauenza/events{/privacy}", "received_events_url": "https://api.github.com/users/rrauenza/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-09-19T23:04:42Z", "updated_at": "2019-11-09T02:49:31Z", "closed_at": "2019-11-09T02:49:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "\r\nThere is a line in backend.py that sets the trace level to 2:\r\n\r\n`self._connection = self.backend.ldap.initialize(uri, bytes_mode=False, trace_level=2)`\r\n\r\nThe underlying ldap library uses things like pprint to emit debug information, so this output can't be squelched with logging options.\r\n\r\nIt would be nice if this setting was configurable so that I could set it to 0.\r\n\r\n(It also does not appear to be configurable with AUTH_LDAP_CONNECTION_OPTIONS)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/144", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/144/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/144/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/144/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/144", "id": 464689072, "node_id": "MDU6SXNzdWU0NjQ2ODkwNzI=", "number": 144, "title": "Cannot authenticate in Active Directory ", "user": {"login": "detininroman", "id": 25865133, "node_id": "MDQ6VXNlcjI1ODY1MTMz", "avatar_url": "https://avatars1.githubusercontent.com/u/25865133?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detininroman", "html_url": "https://github.com/detininroman", "followers_url": "https://api.github.com/users/detininroman/followers", "following_url": "https://api.github.com/users/detininroman/following{/other_user}", "gists_url": "https://api.github.com/users/detininroman/gists{/gist_id}", "starred_url": "https://api.github.com/users/detininroman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detininroman/subscriptions", "organizations_url": "https://api.github.com/users/detininroman/orgs", "repos_url": "https://api.github.com/users/detininroman/repos", "events_url": "https://api.github.com/users/detininroman/events{/privacy}", "received_events_url": "https://api.github.com/users/detininroman/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-05T15:28:19Z", "updated_at": "2019-08-12T13:28:28Z", "closed_at": "2019-07-09T15:35:08Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I got stuck with your library usage. I am trying to authenticate in AD with your backend in a way described [here](https://docs.djangoproject.com/en/2.2/topics/auth/default/#topic-authorization). \r\n\r\n![Screenshot 2019-07-05 at 17 59 57](https://user-images.githubusercontent.com/25865133/60730943-f3ea6100-9f4e-11e9-8208-2c7a388de2df.png)\r\n\r\nUnfortunately, `authenticate(..)` always returns `None`.\r\nHere is my `settings.py`. Hope you can help me!\r\n```python \r\nAUTHENTICATION_BACKENDS = [\r\n    \"django.contrib.auth.backends.ModelBackend\",\r\n    \"django_auth_ldap.backend.LDAPBackend\",\r\n]\r\n\r\nAUTH_LDAP_SERVER_URI = \"ldap://server.com\"\r\nAUTH_LDAP_BIND_DN = \"name.surname@domain.com\"\r\nAUTH_LDAP_BIND_PASSWORD = \"password\"\r\nAUTH_LDAP_USER_SEARCH = LDAPSearch(\"OU=someOU,DC=someDC,DC=someDC,DC=someDC\", ldap.SCOPE_SUBTREE, \"(uid=%(user)s)\")\r\nAUTH_LDAP_USER_ATTR_MAP = {\r\n    \"username\": \"sAMAccountName\",\r\n    \"first_name\": \"givenName\",\r\n    \"last_name\": \"sn\",\r\n    \"email\": \"mail\",\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/143", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/143/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/143/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/143/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/143", "id": 463225301, "node_id": "MDU6SXNzdWU0NjMyMjUzMDE=", "number": 143, "title": "Support for multiple LDAP servers (as fallback / high availability ...)", "user": {"login": "mpibpc-mroose", "id": 8191021, "node_id": "MDQ6VXNlcjgxOTEwMjE=", "avatar_url": "https://avatars2.githubusercontent.com/u/8191021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpibpc-mroose", "html_url": "https://github.com/mpibpc-mroose", "followers_url": "https://api.github.com/users/mpibpc-mroose/followers", "following_url": "https://api.github.com/users/mpibpc-mroose/following{/other_user}", "gists_url": "https://api.github.com/users/mpibpc-mroose/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpibpc-mroose/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpibpc-mroose/subscriptions", "organizations_url": "https://api.github.com/users/mpibpc-mroose/orgs", "repos_url": "https://api.github.com/users/mpibpc-mroose/repos", "events_url": "https://api.github.com/users/mpibpc-mroose/events{/privacy}", "received_events_url": "https://api.github.com/users/mpibpc-mroose/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-07-02T13:19:31Z", "updated_at": "2020-01-16T08:34:41Z", "closed_at": "2020-01-16T08:34:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "At the moment `AUTH_LDAP_SERVER_URI` is a string containing the URI for only one particular LDAP server.\r\n\r\nIn terms of preventing a single point of failure when this server goes down one may want to give a list of URI's like this\r\n\r\n```\r\nAUTH_LDAP_SERVER_URI = [\r\n    \"ldaps://ldap1.example.com:636\",\r\n    \"ldaps://ldap2.example.com:636\",\r\n    \"ldaps://ldap3.example.com:636\",\r\n]\r\n```\r\nwhere the AuthenticationBackend tries to authenticate against each of the URIs given in  `AUTH_LDAP_SERVER_URI` until success (or final fail).\r\n\r\nPossible problems may be the sum-up of timeouts.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/141", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/141/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/141/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/141", "id": 458047519, "node_id": "MDU6SXNzdWU0NTgwNDc1MTk=", "number": 141, "title": "initialize() argument 1 must be str, not None", "user": {"login": "wieczorek1990", "id": 1643947, "node_id": "MDQ6VXNlcjE2NDM5NDc=", "avatar_url": "https://avatars2.githubusercontent.com/u/1643947?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wieczorek1990", "html_url": "https://github.com/wieczorek1990", "followers_url": "https://api.github.com/users/wieczorek1990/followers", "following_url": "https://api.github.com/users/wieczorek1990/following{/other_user}", "gists_url": "https://api.github.com/users/wieczorek1990/gists{/gist_id}", "starred_url": "https://api.github.com/users/wieczorek1990/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wieczorek1990/subscriptions", "organizations_url": "https://api.github.com/users/wieczorek1990/orgs", "repos_url": "https://api.github.com/users/wieczorek1990/repos", "events_url": "https://api.github.com/users/wieczorek1990/events{/privacy}", "received_events_url": "https://api.github.com/users/wieczorek1990/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-19T14:27:34Z", "updated_at": "2019-06-19T16:05:53Z", "closed_at": "2019-06-19T16:05:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having this error during authentication:\r\n\r\n```\r\nEnvironment:\r\n\r\n\r\nRequest Method: POST\r\nRequest URL: http://localhost:8000/admin/login/\r\n\r\nDjango Version: 2.0.7\r\nPython Version: 3.7.3\r\nInstalled Applications:\r\n['django.contrib.admin',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.sessions',\r\n 'django.contrib.messages',\r\n 'django.contrib.staticfiles',\r\n 'rest_framework',\r\n 'drf_yasg',\r\n 'django_filters',\r\n 'dashboard.application',\r\n 'advanced_filters']\r\nInstalled Middleware:\r\n['django.middleware.security.SecurityMiddleware',\r\n 'django.contrib.sessions.middleware.SessionMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'dashboard.middlewares.AuthRedirectMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'django.middleware.clickjacking.XFrameOptionsMiddleware']\r\n\r\n\r\n\r\nTraceback:\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/core/handlers/exception.py\" in inner\r\n  35.             response = get_response(request)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/core/handlers/base.py\" in _get_response\r\n  128.                 response = self.process_exception_by_middleware(e, request)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/core/handlers/base.py\" in _get_response\r\n  126.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\r\n  44.         response = view_func(request, *args, **kwargs)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/contrib/admin/sites.py\" in login\r\n  398.         return LoginView.as_view(**defaults)(request)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/views/generic/base.py\" in view\r\n  69.             return self.dispatch(request, *args, **kwargs)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/utils/decorators.py\" in _wrapper\r\n  62.             return bound_func(*args, **kwargs)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/views/decorators/debug.py\" in sensitive_post_parameters_wrapper\r\n  76.             return view(request, *args, **kwargs)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/utils/decorators.py\" in bound_func\r\n  58.                 return func.__get__(self, type(self))(*args2, **kwargs2)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/utils/decorators.py\" in _wrapper\r\n  62.             return bound_func(*args, **kwargs)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/utils/decorators.py\" in _wrapped_view\r\n  142.                     response = view_func(request, *args, **kwargs)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/utils/decorators.py\" in bound_func\r\n  58.                 return func.__get__(self, type(self))(*args2, **kwargs2)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/utils/decorators.py\" in _wrapper\r\n  62.             return bound_func(*args, **kwargs)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\r\n  44.         response = view_func(request, *args, **kwargs)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/utils/decorators.py\" in bound_func\r\n  58.                 return func.__get__(self, type(self))(*args2, **kwargs2)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/contrib/auth/views.py\" in dispatch\r\n  66.         return super().dispatch(request, *args, **kwargs)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/views/generic/base.py\" in dispatch\r\n  89.         return handler(request, *args, **kwargs)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/views/generic/edit.py\" in post\r\n  141.         if form.is_valid():\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/forms/forms.py\" in is_valid\r\n  179.         return self.is_bound and not self.errors\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/forms/forms.py\" in errors\r\n  174.             self.full_clean()\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/forms/forms.py\" in full_clean\r\n  377.         self._clean_form()\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/forms/forms.py\" in _clean_form\r\n  404.             cleaned_data = self.clean()\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/contrib/auth/forms.py\" in clean\r\n  195.             self.user_cache = authenticate(self.request, username=username, password=password)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/contrib/auth/__init__.py\" in authenticate\r\n  70.             user = _authenticate_with_backend(backend, backend_path, request, credentials)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django/contrib/auth/__init__.py\" in _authenticate_with_backend\r\n  116.     return backend.authenticate(*args, **credentials)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django_auth_ldap/backend.py\" in authenticate\r\n  148.             user = self.authenticate_ldap_user(ldap_user, password)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django_auth_ldap/backend.py\" in authenticate_ldap_user\r\n  206.         return ldap_user.authenticate(password)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django_auth_ldap/backend.py\" in authenticate\r\n  348.             self._authenticate_user_dn(password)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django_auth_ldap/backend.py\" in _authenticate_user_dn\r\n  476.         if self.dn is None:\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django_auth_ldap/backend.py\" in dn\r\n  441.             self._load_user_dn()\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django_auth_ldap/backend.py\" in _load_user_dn\r\n  516.                 self._user_dn = self._search_for_user_dn()\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django_auth_ldap/backend.py\" in _search_for_user_dn\r\n  537.         results = search.execute(self.connection, {\"user\": self._username})\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django_auth_ldap/backend.py\" in connection\r\n  463.             self._bind()\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django_auth_ldap/backend.py\" in _bind\r\n  820.         self._bind_as(self.settings.BIND_DN, self.settings.BIND_PASSWORD, sticky=True)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django_auth_ldap/backend.py\" in _bind_as\r\n  831.         self._get_connection().simple_bind_s(bind_dn, bind_password)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/django_auth_ldap/backend.py\" in _get_connection\r\n  854.             self._connection = self.backend.ldap.initialize(uri, bytes_mode=False)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/ldap/functions.py\" in initialize\r\n  92.       uri, trace_level, trace_file, trace_stack_limit, bytes_mode, **kwargs)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/ldap/ldapobject.py\" in __init__\r\n  106.     self._l = ldap.functions._ldap_function_call(ldap._ldap_module_lock,_ldap.initialize,uri)\r\n\r\nFile \"/Users/luke/Documents/venv/lib/python3.7/site-packages/ldap/functions.py\" in _ldap_function_call\r\n  55.       result = func(*args,**kwargs)\r\n\r\nException Type: TypeError at /admin/login/\r\nException Value: initialize() argument 1 must be str, not None\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/133", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/133/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/133/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/133/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/133", "id": 452621556, "node_id": "MDU6SXNzdWU0NTI2MjE1NTY=", "number": 133, "title": "Cryptography not found", "user": {"login": "Rubyj", "id": 4855908, "node_id": "MDQ6VXNlcjQ4NTU5MDg=", "avatar_url": "https://avatars0.githubusercontent.com/u/4855908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rubyj", "html_url": "https://github.com/Rubyj", "followers_url": "https://api.github.com/users/Rubyj/followers", "following_url": "https://api.github.com/users/Rubyj/following{/other_user}", "gists_url": "https://api.github.com/users/Rubyj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rubyj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rubyj/subscriptions", "organizations_url": "https://api.github.com/users/Rubyj/orgs", "repos_url": "https://api.github.com/users/Rubyj/repos", "events_url": "https://api.github.com/users/Rubyj/events{/privacy}", "received_events_url": "https://api.github.com/users/Rubyj/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-06-05T17:19:23Z", "updated_at": "2019-06-05T20:55:39Z", "closed_at": "2019-06-05T20:40:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "@jdufresne \r\n\r\nUpdating from 1.4 to 1.7 results in the following error when my server is started (not when using runserver, when using nginx/caddy)\r\n\r\n`ModuleNotFoundError: No module named 'cryptography'`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/130", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/130/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/130/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/130/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/130", "id": 444826509, "node_id": "MDU6SXNzdWU0NDQ4MjY1MDk=", "number": 130, "title": "LDAP validation was unsuccessful", "user": {"login": "573009114", "id": 25318519, "node_id": "MDQ6VXNlcjI1MzE4NTE5", "avatar_url": "https://avatars3.githubusercontent.com/u/25318519?v=4", "gravatar_id": "", "url": "https://api.github.com/users/573009114", "html_url": "https://github.com/573009114", "followers_url": "https://api.github.com/users/573009114/followers", "following_url": "https://api.github.com/users/573009114/following{/other_user}", "gists_url": "https://api.github.com/users/573009114/gists{/gist_id}", "starred_url": "https://api.github.com/users/573009114/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/573009114/subscriptions", "organizations_url": "https://api.github.com/users/573009114/orgs", "repos_url": "https://api.github.com/users/573009114/repos", "events_url": "https://api.github.com/users/573009114/events{/privacy}", "received_events_url": "https://api.github.com/users/573009114/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 879269003, "node_id": "MDU6TGFiZWw4NzkyNjkwMDM=", "url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2019-05-16T08:40:38Z", "updated_at": "2019-05-17T02:14:09Z", "closed_at": "2019-05-17T02:14:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello, I'll use Python 3.7\uff0cThe Django version is 2.2 , i always failed to configure ldap.\r\nHere is my configuration:\r\n```\r\n## auth ldap\r\nimport ldap\r\nfrom django_auth_ldap.config import LDAPSearch, GroupOfNamesType\r\n\r\n\r\n# Baseline configuration.\r\nAUTH_LDAP_SERVER_URI = 'ldap://ldap.test.com.cn'\r\n\r\nAUTH_LDAP_BIND_DN = 'cn=ldapuser,OU=XXX-USERS,DC=test,DC=com,DC=cn'\r\nAUTH_LDAP_BIND_PASSWORD = '********'\r\nAUTH_LDAP_USER_SEARCH = LDAPSearch(\r\n    'OU=XXX-USERS,DC=test,DC=com,DC=cn',\r\n    ldap.SCOPE_SUBTREE,\r\n    '(sAMAccountName=%(user)s)')\r\n\r\n# Populate the Django user from the LDAP directory.\r\nAUTH_LDAP_USER_ATTR_MAP = {\r\n    'first_name': 'givenName',\r\n    'last_name': 'sn',\r\n    'email': 'mail',\r\n}\r\n\r\n# This is the default, but I like to be explicit.\r\nAUTH_LDAP_ALWAYS_UPDATE_USER = True\r\n\r\n# Keep ModelBackend around for per-user permissions and maybe a local\r\n# superuser.\r\nAUTHENTICATION_BACKENDS = (\r\n    'django_auth_ldap.backend.LDAPBackend',\r\n    'django.contrib.auth.backends.ModelBackend',\r\n)\r\n\r\n```\r\nhere is valid information of LDAP provided to me by operation and maintenance personnel:\r\n```\r\n   host: 'ldap.test.com.cn \r\n    port: 389\r\n    uid: 'sAMAccountName'\r\n    method: 'plain'\r\n    bind_dn: 'ldapuser'\r\n    password: '********'\r\n    active_directory: 'false'\r\n    allow_username_or_email_login: 'true'\r\n    block_auto_created_users: 'false'\r\n    base: 'DC=test,DC=com,DC=cn'\r\n\r\n```\r\nPlease tell me how the Django code corresponds to the parameters.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/124", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/124/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/124/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/124/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/124", "id": 428711969, "node_id": "MDU6SXNzdWU0Mjg3MTE5Njk=", "number": 124, "title": "Support for Django 2.1", "user": {"login": "ryhoo2", "id": 29245321, "node_id": "MDQ6VXNlcjI5MjQ1MzIx", "avatar_url": "https://avatars1.githubusercontent.com/u/29245321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryhoo2", "html_url": "https://github.com/ryhoo2", "followers_url": "https://api.github.com/users/ryhoo2/followers", "following_url": "https://api.github.com/users/ryhoo2/following{/other_user}", "gists_url": "https://api.github.com/users/ryhoo2/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryhoo2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryhoo2/subscriptions", "organizations_url": "https://api.github.com/users/ryhoo2/orgs", "repos_url": "https://api.github.com/users/ryhoo2/repos", "events_url": "https://api.github.com/users/ryhoo2/events{/privacy}", "received_events_url": "https://api.github.com/users/ryhoo2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-04-03T11:24:34Z", "updated_at": "2019-04-04T08:03:05Z", "closed_at": "2019-04-04T01:03:20Z", "author_association": "NONE", "active_lock_reason": null, "body": "After upgrading Django python module from 2.0.13 to 2.1 authentication stopped working - I get \"Incorrect username or password\" message. Unfortunately there's no debug logs coming along.\r\nI looked through the [Release Notes](https://docs.djangoproject.com/en/2.2/releases/2.1/) of Django 2.1 but have no idea what might cause problem.\r\nAny clues? Thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/120", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/120/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/120/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/120/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/120", "id": 426200361, "node_id": "MDU6SXNzdWU0MjYyMDAzNjE=", "number": 120, "title": "The logging documentation snippet isn't complete", "user": {"login": "aaronlelevier", "id": 5514112, "node_id": "MDQ6VXNlcjU1MTQxMTI=", "avatar_url": "https://avatars1.githubusercontent.com/u/5514112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaronlelevier", "html_url": "https://github.com/aaronlelevier", "followers_url": "https://api.github.com/users/aaronlelevier/followers", "following_url": "https://api.github.com/users/aaronlelevier/following{/other_user}", "gists_url": "https://api.github.com/users/aaronlelevier/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaronlelevier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaronlelevier/subscriptions", "organizations_url": "https://api.github.com/users/aaronlelevier/orgs", "repos_url": "https://api.github.com/users/aaronlelevier/repos", "events_url": "https://api.github.com/users/aaronlelevier/events{/privacy}", "received_events_url": "https://api.github.com/users/aaronlelevier/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-27T21:52:58Z", "updated_at": "2019-03-29T13:54:29Z", "closed_at": "2019-03-29T13:54:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "I was trying the [logging documentation](https://django-auth-ldap.readthedocs.io/en/latest/logging.html), but the snippet isn't complete, and I got the error:\r\n\r\n```\r\n(venv) alelevier@ ~/Documents/drifter/drift_backend (ldap) $ ./manage.py runserver\r\nUnhandled exception in thread started by <function check_errors.<locals>.wrapper at 0x10f8858c8>\r\nTraceback (most recent call last):\r\n  File \"/Users/alelevier/Documents/drifter/venv/lib/python3.7/site-packages/django/utils/autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/alelevier/Documents/drifter/venv/lib/python3.7/site-packages/django/core/management/commands/runserver.py\", line 109, in inner_run\r\n    autoreload.raise_last_exception()\r\n  File \"/Users/alelevier/Documents/drifter/venv/lib/python3.7/site-packages/django/utils/autoreload.py\", line 248, in raise_last_exception\r\n    raise _exception[1]\r\n  File \"/Users/alelevier/Documents/drifter/venv/lib/python3.7/site-packages/django/core/management/__init__.py\", line 337, in execute\r\n    autoreload.check_errors(django.setup)()\r\n  File \"/Users/alelevier/Documents/drifter/venv/lib/python3.7/site-packages/django/utils/autoreload.py\", line 225, in wrapper\r\n    fn(*args, **kwargs)\r\n  File \"/Users/alelevier/Documents/drifter/venv/lib/python3.7/site-packages/django/__init__.py\", line 19, in setup\r\n    configure_logging(settings.LOGGING_CONFIG, settings.LOGGING)\r\n  File \"/Users/alelevier/Documents/drifter/venv/lib/python3.7/site-packages/django/utils/log.py\", line 76, in configure_logging\r\n    logging_config_func(logging_settings)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/logging/config.py\", line 799, in dictConfig\r\n    dictConfigClass(config).configure()\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/logging/config.py\", line 495, in configure\r\n    raise ValueError(\"dictionary doesn't specify a version\")\r\nValueError: dictionary doesn't specify a version\r\n```\r\n\r\nI changed the logging to this boilerplate config and it worked:\r\n\r\n```python\r\nLOGGING = {\r\n    'version': 1,\r\n    'disable_existing_loggers': False,\r\n    'handlers': {\r\n        'console': {\r\n            'class': 'logging.StreamHandler',\r\n        },\r\n    },\r\n    'loggers': {\r\n        'django_auth_ldap': {\r\n            'level': 'DEBUG',\r\n            'handlers': ['console'],\r\n        },\r\n    }\r\n}\r\n```\r\n\r\nMaybe the [logging documentation](https://django-auth-ldap.readthedocs.io/en/latest/logging.html) could be updated to the above snippet?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/118", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/118/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/118/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/118/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/118", "id": 418836843, "node_id": "MDU6SXNzdWU0MTg4MzY4NDM=", "number": 118, "title": "No module named 'ldap.filter'", "user": {"login": "elitzer2", "id": 5624305, "node_id": "MDQ6VXNlcjU2MjQzMDU=", "avatar_url": "https://avatars3.githubusercontent.com/u/5624305?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elitzer2", "html_url": "https://github.com/elitzer2", "followers_url": "https://api.github.com/users/elitzer2/followers", "following_url": "https://api.github.com/users/elitzer2/following{/other_user}", "gists_url": "https://api.github.com/users/elitzer2/gists{/gist_id}", "starred_url": "https://api.github.com/users/elitzer2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elitzer2/subscriptions", "organizations_url": "https://api.github.com/users/elitzer2/orgs", "repos_url": "https://api.github.com/users/elitzer2/repos", "events_url": "https://api.github.com/users/elitzer2/events{/privacy}", "received_events_url": "https://api.github.com/users/elitzer2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-03-08T15:34:49Z", "updated_at": "2019-03-08T16:21:04Z", "closed_at": "2019-03-08T16:21:03Z", "author_association": "NONE", "active_lock_reason": null, "body": "I recently upgraded from django-auth-ldap version 1.3.0 to the latest 1.7.0 and when importing  django_auth_ldap.config I am getting the following error:\r\n`>>> import django_auth_ldap.config\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/var/www/venv/lib/python3.6/site-packages/django_auth_ldap/config.py\", line 38, in <module>\r\n    import ldap.filter\r\nModuleNotFoundError: No module named 'ldap.filter'\r\n`\r\n\r\nIf I do a pip list I see the python-ldap module installed and I also have the openldap-devel yum package installed. I am on CentOS 7.6 using Python 3.6.8. Any ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/116", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/116/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/116/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/116/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/116", "id": 414100259, "node_id": "MDU6SXNzdWU0MTQxMDAyNTk=", "number": 116, "title": "Remove user when not present in LDAP anymore", "user": {"login": "t-book", "id": 20478652, "node_id": "MDQ6VXNlcjIwNDc4NjUy", "avatar_url": "https://avatars0.githubusercontent.com/u/20478652?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-book", "html_url": "https://github.com/t-book", "followers_url": "https://api.github.com/users/t-book/followers", "following_url": "https://api.github.com/users/t-book/following{/other_user}", "gists_url": "https://api.github.com/users/t-book/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-book/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-book/subscriptions", "organizations_url": "https://api.github.com/users/t-book/orgs", "repos_url": "https://api.github.com/users/t-book/repos", "events_url": "https://api.github.com/users/t-book/events{/privacy}", "received_events_url": "https://api.github.com/users/t-book/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2019-02-25T13:18:16Z", "updated_at": "2019-02-25T18:05:54Z", "closed_at": "2019-02-25T18:05:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nis there some way function that a created Django user is removed/disabled when it\u00b4s not present in LDAP anymore?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/114", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/114/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/114/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/114/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/114", "id": 409853340, "node_id": "MDU6SXNzdWU0MDk4NTMzNDA=", "number": 114, "title": "When LDAP is misconfigured, stack traces contain user passwords in plain text", "user": {"login": "ben-kuhn", "id": 16821405, "node_id": "MDQ6VXNlcjE2ODIxNDA1", "avatar_url": "https://avatars3.githubusercontent.com/u/16821405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ben-kuhn", "html_url": "https://github.com/ben-kuhn", "followers_url": "https://api.github.com/users/ben-kuhn/followers", "following_url": "https://api.github.com/users/ben-kuhn/following{/other_user}", "gists_url": "https://api.github.com/users/ben-kuhn/gists{/gist_id}", "starred_url": "https://api.github.com/users/ben-kuhn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ben-kuhn/subscriptions", "organizations_url": "https://api.github.com/users/ben-kuhn/orgs", "repos_url": "https://api.github.com/users/ben-kuhn/repos", "events_url": "https://api.github.com/users/ben-kuhn/events{/privacy}", "received_events_url": "https://api.github.com/users/ben-kuhn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2019-02-13T15:13:45Z", "updated_at": "2019-02-26T18:42:20Z", "closed_at": "2019-02-13T16:31:26Z", "author_association": "NONE", "active_lock_reason": null, "body": "When LDAP is misconfigured, the stack trace, often sent to syslog and--in some projects--via email to the configured admins contains the users password in plain text.  This is an information disclosure vulnerability as users of the syslog or monitoring systems, email administrators, and anyone with access to read application logs access to users passwords in plain text.\r\n\r\nIf a server was compromised in some other way, the attacker could use this vulnerability to gather credentials, pivot, potentially escalate privileges, and move throughout the network.\r\n\r\nIf this were to happen accidentally, the user logging in and seeing the login failure may not know that their password was exposed to users with access to the various places the stack trace may be logged and not realize that their password would need to be changed.\r\n\r\nHere is an obfuscated snippet from the email I received containing the full stack trace when I encountered this bug using NetBox:\r\n```\r\nException Type: ImproperlyConfigured at /login/\r\nException Value: AUTH_LDAP_USER_SEARCH must be an LDAPSearch instance.\r\nRequest information:\r\nUSER: AnonymousUser\r\n\r\nGET: No GET data\r\n\r\nPOST:\r\ncsrfmiddlewaretoken = 'token'\r\nnext = '/'\r\nusername = 'myUserName'\r\npassword = 'myPasswordInPlainText'\r\n\r\nFILES: No FILES data\r\n\r\nCOOKIES:\r\ncsrftoken = 'token'\r\n```\r\n\r\n### Environment\r\n* Python version:  3.6.7\r\n* NetBox version:  2.5.5\r\n\r\n### Steps to Reproduce\r\n1. Install NetBox from git\r\n2. Configure Admins and Mail settings \r\n3. Configure Logging\r\n4. Configure LDAP, but make a mistake somewhere so that authentication will not work\r\n5. Attempt to log in.  Don't use a real password if this is a production environment\r\n\r\n<!-- What did you expect to happen? -->\r\n### Expected Behavior\r\nErrors to be logged and potentially emailed with passwords hashed,obfuscated, or not included at all\r\n\r\n\r\n<!-- What happened instead? -->\r\n### Actual Behavior\r\nMy LDAP password was emailed in plain text as part of the stack trace to the entire team, as well as logged in the log file locally and on the remote syslog server\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/109", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/109/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/109/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/109", "id": 396943792, "node_id": "MDU6SXNzdWUzOTY5NDM3OTI=", "number": 109, "title": "Error installing on Windows  py3", "user": {"login": "angelqb17", "id": 40607024, "node_id": "MDQ6VXNlcjQwNjA3MDI0", "avatar_url": "https://avatars2.githubusercontent.com/u/40607024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/angelqb17", "html_url": "https://github.com/angelqb17", "followers_url": "https://api.github.com/users/angelqb17/followers", "following_url": "https://api.github.com/users/angelqb17/following{/other_user}", "gists_url": "https://api.github.com/users/angelqb17/gists{/gist_id}", "starred_url": "https://api.github.com/users/angelqb17/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/angelqb17/subscriptions", "organizations_url": "https://api.github.com/users/angelqb17/orgs", "repos_url": "https://api.github.com/users/angelqb17/repos", "events_url": "https://api.github.com/users/angelqb17/events{/privacy}", "received_events_url": "https://api.github.com/users/angelqb17/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-01-08T14:58:36Z", "updated_at": "2019-01-08T15:24:45Z", "closed_at": "2019-01-08T15:24:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I get the next error when i try to install:\r\n\r\n    c:\\users\\dbasql\\appdata\\local\\temp\\pip-install-taezgy6a\\python-ldap\\modules\\\r\nconstants.h(7): fatal error C1083: Cannot open include file: 'lber.h': No such f\r\nile or directory\r\n    error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Buil\r\ndTools\\\\VC\\\\Tools\\\\MSVC\\\\14.15.26726\\\\bin\\\\HostX86\\\\x86\\\\cl.exe' failed with exi\r\nt status 2\r\n\r\n    ----------------------------------------\r\nCommand \"e:\\flujos\\pyvenv\\scripts\\python.exe -u -c \"import setuptools, tokenize;\r\n__file__='C:\\\\Users\\\\dbasql\\\\AppData\\\\Local\\\\Temp\\\\pip-install-taezgy6a\\\\python-\r\nldap\\\\setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replac\r\ne('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --recor\r\nd C:\\Users\\dbasql\\AppData\\Local\\Temp\\pip-record-zcef9jbv\\install-record.txt --si\r\nngle-version-externally-managed --compile --install-headers e:\\flujos\\pyvenv\\inc\r\nlude\\site\\python3.6\\python-ldap\" failed with error code 1 in C:\\Users\\dbasql\\App\r\nData\\Local\\Temp\\pip-install-taezgy6a\\python-ldap\\\r\n\r\n\r\nY got:\r\n\r\npython 3.6.4\r\ndjango 2.0.8", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/104", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/104/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/104/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/104", "id": 377511122, "node_id": "MDU6SXNzdWUzNzc1MTExMjI=", "number": 104, "title": "#101 Pull Request", "user": {"login": "guibos", "id": 22233599, "node_id": "MDQ6VXNlcjIyMjMzNTk5", "avatar_url": "https://avatars3.githubusercontent.com/u/22233599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guibos", "html_url": "https://github.com/guibos", "followers_url": "https://api.github.com/users/guibos/followers", "following_url": "https://api.github.com/users/guibos/following{/other_user}", "gists_url": "https://api.github.com/users/guibos/gists{/gist_id}", "starred_url": "https://api.github.com/users/guibos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guibos/subscriptions", "organizations_url": "https://api.github.com/users/guibos/orgs", "repos_url": "https://api.github.com/users/guibos/repos", "events_url": "https://api.github.com/users/guibos/events{/privacy}", "received_events_url": "https://api.github.com/users/guibos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-05T17:47:52Z", "updated_at": "2019-06-09T18:16:45Z", "closed_at": "2019-06-09T18:16:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "I would like if you can review this pull request: #101, when you can. Thanks a lot.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/99", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/99/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/99/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/99", "id": 366947561, "node_id": "MDU6SXNzdWUzNjY5NDc1NjE=", "number": 99, "title": "Cannot install on windows", "user": {"login": "kennethmensah", "id": 12115425, "node_id": "MDQ6VXNlcjEyMTE1NDI1", "avatar_url": "https://avatars3.githubusercontent.com/u/12115425?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennethmensah", "html_url": "https://github.com/kennethmensah", "followers_url": "https://api.github.com/users/kennethmensah/followers", "following_url": "https://api.github.com/users/kennethmensah/following{/other_user}", "gists_url": "https://api.github.com/users/kennethmensah/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennethmensah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennethmensah/subscriptions", "organizations_url": "https://api.github.com/users/kennethmensah/orgs", "repos_url": "https://api.github.com/users/kennethmensah/repos", "events_url": "https://api.github.com/users/kennethmensah/events{/privacy}", "received_events_url": "https://api.github.com/users/kennethmensah/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-04T20:00:40Z", "updated_at": "2018-10-11T15:09:46Z", "closed_at": "2018-10-11T15:09:46Z", "author_association": "NONE", "active_lock_reason": null, "body": "I keep getting 'cannot include basetsd.h' error", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/97", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/97/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/97/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/97", "id": 364460958, "node_id": "MDU6SXNzdWUzNjQ0NjA5NTg=", "number": 97, "title": "Get user permissions", "user": {"login": "guibos", "id": 22233599, "node_id": "MDQ6VXNlcjIyMjMzNTk5", "avatar_url": "https://avatars3.githubusercontent.com/u/22233599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guibos", "html_url": "https://github.com/guibos", "followers_url": "https://api.github.com/users/guibos/followers", "following_url": "https://api.github.com/users/guibos/following{/other_user}", "gists_url": "https://api.github.com/users/guibos/gists{/gist_id}", "starred_url": "https://api.github.com/users/guibos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guibos/subscriptions", "organizations_url": "https://api.github.com/users/guibos/orgs", "repos_url": "https://api.github.com/users/guibos/repos", "events_url": "https://api.github.com/users/guibos/events{/privacy}", "received_events_url": "https://api.github.com/users/guibos/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-27T12:50:52Z", "updated_at": "2018-10-11T14:25:34Z", "closed_at": "2018-10-11T14:25:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "#95 \r\nI check backend.py, and I find this:\r\n`def get_all_permissions(self, user, obj=None):\r\n        return self.get_group_permissions(user, obj)`\r\n\r\nI think that is necessary that this function get user and group permissions. I create a pull request that fix it, somehow. I currently I don't have enough experience, so there are problems on tests. I'm learning utils how it works to run tests.\r\n\r\nSorry and thanks!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/96", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/96/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/96/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/96", "id": 363726157, "node_id": "MDU6SXNzdWUzNjM3MjYxNTc=", "number": 96, "title": "How to implement custom GroupType?", "user": {"login": "mbleonardo", "id": 295700, "node_id": "MDQ6VXNlcjI5NTcwMA==", "avatar_url": "https://avatars3.githubusercontent.com/u/295700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbleonardo", "html_url": "https://github.com/mbleonardo", "followers_url": "https://api.github.com/users/mbleonardo/followers", "following_url": "https://api.github.com/users/mbleonardo/following{/other_user}", "gists_url": "https://api.github.com/users/mbleonardo/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbleonardo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbleonardo/subscriptions", "organizations_url": "https://api.github.com/users/mbleonardo/orgs", "repos_url": "https://api.github.com/users/mbleonardo/repos", "events_url": "https://api.github.com/users/mbleonardo/events{/privacy}", "received_events_url": "https://api.github.com/users/mbleonardo/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 879269003, "node_id": "MDU6TGFiZWw4NzkyNjkwMDM=", "url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-09-25T19:11:10Z", "updated_at": "2018-10-11T15:10:27Z", "closed_at": "2018-10-11T15:10:27Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI'm trying to use an application that uses django-auth-ldap (Ansible AWX). We have a very specific \"group\" implementation (we use eDirectory with roles). In case, all the users' groups are in its own attribute called securityEquals - and the \"list\" of all the groups are in different tree, and don't have a list of members. \r\n\r\nBut, before using the attribute itself, I tried to test using: [EdirRoleGroupType.txt](https://github.com/django-auth-ldap/django-auth-ldap/files/2416675/EdirRoleGroupType.txt)\r\n\r\nBut when checking group membership I get the following error:\r\n\r\n`DEBUG    django_auth_ldap cn=leo,ou=users,ou=accounts,o=myorg is not a member of cn=grp-g-adm,cn=network groups,cn=level10,cn=roledefs,cn=roleconfig,cn=appconfig,cn=userapplication,cn=driverset,ou=system,o=myorg`\r\n \r\nHow this method should return group data?\r\n\r\nThank you!\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/94", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/94/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/94/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/94/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/94", "id": 363203543, "node_id": "MDU6SXNzdWUzNjMyMDM1NDM=", "number": 94, "title": "Manage password properties", "user": {"login": "magmax", "id": 584026, "node_id": "MDQ6VXNlcjU4NDAyNg==", "avatar_url": "https://avatars2.githubusercontent.com/u/584026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magmax", "html_url": "https://github.com/magmax", "followers_url": "https://api.github.com/users/magmax/followers", "following_url": "https://api.github.com/users/magmax/following{/other_user}", "gists_url": "https://api.github.com/users/magmax/gists{/gist_id}", "starred_url": "https://api.github.com/users/magmax/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magmax/subscriptions", "organizations_url": "https://api.github.com/users/magmax/orgs", "repos_url": "https://api.github.com/users/magmax/repos", "events_url": "https://api.github.com/users/magmax/events{/privacy}", "received_events_url": "https://api.github.com/users/magmax/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-09-24T15:40:19Z", "updated_at": "2018-11-27T01:11:32Z", "closed_at": "2018-11-27T01:11:32Z", "author_association": "NONE", "active_lock_reason": null, "body": "AFAIK, it is not possible to manage password properties such as expired password grace period, password must be changed (to force the change on first logon) or last login information.\r\n\r\nApacheDS allows to manage this, and I think it would be a good idea to have access to those properties, despite django-auth-ldap does not manage them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/93", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/93/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/93/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/93", "id": 363163907, "node_id": "MDU6SXNzdWUzNjMxNjM5MDc=", "number": 93, "title": "'NoneType' object is not subscriptable when authenticating user", "user": {"login": "vranki", "id": 81116, "node_id": "MDQ6VXNlcjgxMTE2", "avatar_url": "https://avatars1.githubusercontent.com/u/81116?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vranki", "html_url": "https://github.com/vranki", "followers_url": "https://api.github.com/users/vranki/followers", "following_url": "https://api.github.com/users/vranki/following{/other_user}", "gists_url": "https://api.github.com/users/vranki/gists{/gist_id}", "starred_url": "https://api.github.com/users/vranki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vranki/subscriptions", "organizations_url": "https://api.github.com/users/vranki/orgs", "repos_url": "https://api.github.com/users/vranki/repos", "events_url": "https://api.github.com/users/vranki/events{/privacy}", "received_events_url": "https://api.github.com/users/vranki/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-09-24T14:10:57Z", "updated_at": "2019-02-13T16:59:12Z", "closed_at": "2019-02-13T16:59:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a Mezzanine CMS using Django's LDAP authentication backend. Authenticating a user causes a crash in django-auth-ldap code. I'm just setting up the LDAP authentication so there may be some error in the setup, but username and password should be correct and anyway correct behavior would be to throw a proper exception.\r\n\r\nQuickly looking seems that self.attrs[attr] is None and there is no check for it, causing the error.\r\n\r\n\r\n`Environment:\r\n\r\n\r\nRequest Method: POST\r\nRequest URL: http://staging.tampere.hacklab.fi/admin/login/?next=/admin/\r\n\r\nDjango Version: 1.11.15\r\nPython Version: 3.6.6\r\nInstalled Applications:\r\n('mezzanine.boot',\r\n 'django.contrib.auth',\r\n 'django.contrib.contenttypes',\r\n 'django.contrib.redirects',\r\n 'django.contrib.sessions',\r\n 'django.contrib.sites',\r\n 'django.contrib.sitemaps',\r\n 'mezzanine.conf',\r\n 'mezzanine.core',\r\n 'mezzanine.generic',\r\n 'mezzanine.pages',\r\n 'mezzanine.blog',\r\n 'mezzanine.forms',\r\n 'mezzanine.galleries',\r\n 'mezzanine.twitter',\r\n 'filebrowser_safe',\r\n 'grappelli_safe',\r\n 'django.contrib.admin',\r\n 'django.contrib.staticfiles',\r\n 'django_comments')\r\nInstalled Middleware:\r\n('django.contrib.sessions.middleware.SessionMiddleware',\r\n 'django.middleware.common.CommonMiddleware',\r\n 'django.middleware.csrf.CsrfViewMiddleware',\r\n 'django.contrib.auth.middleware.AuthenticationMiddleware',\r\n 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',\r\n 'django.contrib.messages.middleware.MessageMiddleware',\r\n 'django.middleware.clickjacking.XFrameOptionsMiddleware',\r\n 'mezzanine.core.request.CurrentRequestMiddleware',\r\n 'mezzanine.core.middleware.RedirectFallbackMiddleware',\r\n 'mezzanine.core.middleware.TemplateForDeviceMiddleware',\r\n 'mezzanine.core.middleware.TemplateForHostMiddleware',\r\n 'mezzanine.core.middleware.AdminLoginInterfaceSelectorMiddleware',\r\n 'mezzanine.core.middleware.SitePermissionMiddleware',\r\n 'mezzanine.pages.middleware.PageMiddleware')\r\n\r\n\r\n\r\nTraceback:\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/core/handlers/exception.py\" in inner\r\n  41.             response = get_response(request)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/core/handlers/base.py\" in _legacy_get_response\r\n  249.             response = self._get_response(request)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/core/handlers/base.py\" in _get_response\r\n  178.             response = middleware_method(request, callback, callback_args, callback_kwargs)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/mezzanine/core/middleware.py\" in process_view\r\n  40.             response = view_func(request, *view_args, **view_kwargs)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\r\n  57.         response = view_func(request, *args, **kwargs)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/contrib/admin/sites.py\" in login\r\n  393.         return LoginView.as_view(**defaults)(request)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/views/generic/base.py\" in view\r\n  68.             return self.dispatch(request, *args, **kwargs)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/utils/decorators.py\" in _wrapper\r\n  67.             return bound_func(*args, **kwargs)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/views/decorators/debug.py\" in sensitive_post_parameters_wrapper\r\n  76.             return view(request, *args, **kwargs)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/utils/decorators.py\" in bound_func\r\n  63.                 return func.__get__(self, type(self))(*args2, **kwargs2)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/utils/decorators.py\" in _wrapper\r\n  67.             return bound_func(*args, **kwargs)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/utils/decorators.py\" in _wrapped_view\r\n  149.                     response = view_func(request, *args, **kwargs)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/utils/decorators.py\" in bound_func\r\n  63.                 return func.__get__(self, type(self))(*args2, **kwargs2)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/utils/decorators.py\" in _wrapper\r\n  67.             return bound_func(*args, **kwargs)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/views/decorators/cache.py\" in _wrapped_view_func\r\n  57.         response = view_func(request, *args, **kwargs)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/utils/decorators.py\" in bound_func\r\n  63.                 return func.__get__(self, type(self))(*args2, **kwargs2)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/contrib/auth/views.py\" in dispatch\r\n  90.         return super(LoginView, self).dispatch(request, *args, **kwargs)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/views/generic/base.py\" in dispatch\r\n  88.         return handler(request, *args, **kwargs)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/views/generic/edit.py\" in post\r\n  182.         if form.is_valid():\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/forms/forms.py\" in is_valid\r\n  183.         return self.is_bound and not self.errors\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/forms/forms.py\" in errors\r\n  175.             self.full_clean()\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/forms/forms.py\" in full_clean\r\n  385.         self._clean_form()\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/forms/forms.py\" in _clean_form\r\n  412.             cleaned_data = self.clean()\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/contrib/auth/forms.py\" in clean\r\n  187.             self.user_cache = authenticate(self.request, username=username, password=password)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/contrib/auth/__init__.py\" in authenticate\r\n  70.             user = _authenticate_with_backend(backend, backend_path, request, credentials)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django/contrib/auth/__init__.py\" in _authenticate_with_backend\r\n  116.     return backend.authenticate(*args, **credentials)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django_auth_ldap/backend.py\" in authenticate\r\n  150.             user = self.authenticate_ldap_user(ldap_user, password)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django_auth_ldap/backend.py\" in authenticate_ldap_user\r\n  210.         return ldap_user.authenticate(password)\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django_auth_ldap/backend.py\" in authenticate\r\n  350.             self._get_or_create_user()\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django_auth_ldap/backend.py\" in _get_or_create_user\r\n  604.             self._populate_user()\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django_auth_ldap/backend.py\" in _populate_user\r\n  623.         self._populate_user_from_attributes()\r\n\r\nFile \"/mezzanine/virtualenv/lib/python3.6/site-packages/django_auth_ldap/backend.py\" in _populate_user_from_attributes\r\n  629.                 value = self.attrs[attr][0]\r\n\r\nException Type: TypeError at /admin/login/\r\nException Value: 'NoneType' object is not subscriptable\r\n`", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/88", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/88/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/88/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/88/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/88", "id": 355938858, "node_id": "MDU6SXNzdWUzNTU5Mzg4NTg=", "number": 88, "title": "AUTH_LDAP_USER_SEARCH must be an LDAPSearch instance.", "user": {"login": "fleonasb", "id": 40849230, "node_id": "MDQ6VXNlcjQwODQ5MjMw", "avatar_url": "https://avatars3.githubusercontent.com/u/40849230?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fleonasb", "html_url": "https://github.com/fleonasb", "followers_url": "https://api.github.com/users/fleonasb/followers", "following_url": "https://api.github.com/users/fleonasb/following{/other_user}", "gists_url": "https://api.github.com/users/fleonasb/gists{/gist_id}", "starred_url": "https://api.github.com/users/fleonasb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fleonasb/subscriptions", "organizations_url": "https://api.github.com/users/fleonasb/orgs", "repos_url": "https://api.github.com/users/fleonasb/repos", "events_url": "https://api.github.com/users/fleonasb/events{/privacy}", "received_events_url": "https://api.github.com/users/fleonasb/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 879269003, "node_id": "MDU6TGFiZWw4NzkyNjkwMDM=", "url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-31T11:11:06Z", "updated_at": "2018-10-01T12:34:06Z", "closed_at": "2018-10-01T12:34:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm trying to setup multiple LDAP backends. I have already created a multiple_ldap.py file:\r\n```\r\nfrom django_auth_ldap.backend import LDAPBackend\r\nclass LDAPBackend1(LDAPBackend):\r\n    settings_prefix = \"AUTH_LDAP_1\"\r\nclass LDAPBackend2(LDAPBackend):\r\n    settings_prefix = \"AUTH_LDAP_2\"\r\n```\r\nadded two LDAP backends:\r\n```\r\nAUTHENTICATION_BACKENDS = [\r\n    'myapp.multiple_ldap.LDAPBackend1',\r\n    'myapp.multiple_ldap.LDAPBackend2',\r\n]\r\n```\r\nand started renaming the AUTH_LDAP_ settings to match my setup.\r\n\r\nWhen I try to log in, I get this exception:\r\n\r\n> ImproperlyConfigured at /myapp/django-admin/login/\r\n> AUTH_LDAP_USER_SEARCH must be an LDAPSearch instance.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/87", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/87/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/87/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/87/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/87", "id": 353641010, "node_id": "MDU6SXNzdWUzNTM2NDEwMTA=", "number": 87, "title": "how to get user dn?", "user": {"login": "guhongze", "id": 19678448, "node_id": "MDQ6VXNlcjE5Njc4NDQ4", "avatar_url": "https://avatars1.githubusercontent.com/u/19678448?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guhongze", "html_url": "https://github.com/guhongze", "followers_url": "https://api.github.com/users/guhongze/followers", "following_url": "https://api.github.com/users/guhongze/following{/other_user}", "gists_url": "https://api.github.com/users/guhongze/gists{/gist_id}", "starred_url": "https://api.github.com/users/guhongze/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guhongze/subscriptions", "organizations_url": "https://api.github.com/users/guhongze/orgs", "repos_url": "https://api.github.com/users/guhongze/repos", "events_url": "https://api.github.com/users/guhongze/events{/privacy}", "received_events_url": "https://api.github.com/users/guhongze/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 879269003, "node_id": "MDU6TGFiZWw4NzkyNjkwMDM=", "url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-08-24T04:30:47Z", "updated_at": "2018-10-01T12:33:25Z", "closed_at": "2018-10-01T12:33:25Z", "author_association": "NONE", "active_lock_reason": null, "body": "how to get user's Distinguished Name in openladp?\r\n\r\nI have uid sn cn but no dn\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/84", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/84/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/84/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/84/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/84", "id": 350167941, "node_id": "MDU6SXNzdWUzNTAxNjc5NDE=", "number": 84, "title": "Emit a signal if a user was successfully authenticated", "user": {"login": "hetsch", "id": 439359, "node_id": "MDQ6VXNlcjQzOTM1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/439359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hetsch", "html_url": "https://github.com/hetsch", "followers_url": "https://api.github.com/users/hetsch/followers", "following_url": "https://api.github.com/users/hetsch/following{/other_user}", "gists_url": "https://api.github.com/users/hetsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/hetsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hetsch/subscriptions", "organizations_url": "https://api.github.com/users/hetsch/orgs", "repos_url": "https://api.github.com/users/hetsch/repos", "events_url": "https://api.github.com/users/hetsch/events{/privacy}", "received_events_url": "https://api.github.com/users/hetsch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 879269003, "node_id": "MDU6TGFiZWw4NzkyNjkwMDM=", "url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-08-13T19:48:28Z", "updated_at": "2018-10-11T15:08:53Z", "closed_at": "2018-10-11T15:08:53Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "As far as I could read from the documentation, the only signal that gets emitted on the first successful authentication is the `populate_user` signal. What I would need is a signal on every successful authentication, not depending on any population of user data. My current workaround is to set `AUTH_LDAP_ALWAYS_UPDATE_USER` to `True` what triggers the `populate_user` signal on every successful authentication. If I don't want to populate the data on every authentication attempt, I currently don't see any way for getting notified (outside of the function that invokes the backend) if authentication succeeded. Do I miss something and if not, what do you think about implementing such a signal? Thank's again!", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/76", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/76/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/76/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/76/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/76", "id": 345205188, "node_id": "MDU6SXNzdWUzNDUyMDUxODg=", "number": 76, "title": "missing requirements.txt", "user": {"login": "minusf", "id": 3632883, "node_id": "MDQ6VXNlcjM2MzI4ODM=", "avatar_url": "https://avatars3.githubusercontent.com/u/3632883?v=4", "gravatar_id": "", "url": "https://api.github.com/users/minusf", "html_url": "https://github.com/minusf", "followers_url": "https://api.github.com/users/minusf/followers", "following_url": "https://api.github.com/users/minusf/following{/other_user}", "gists_url": "https://api.github.com/users/minusf/gists{/gist_id}", "starred_url": "https://api.github.com/users/minusf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/minusf/subscriptions", "organizations_url": "https://api.github.com/users/minusf/orgs", "repos_url": "https://api.github.com/users/minusf/repos", "events_url": "https://api.github.com/users/minusf/events{/privacy}", "received_events_url": "https://api.github.com/users/minusf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-07-27T12:19:36Z", "updated_at": "2018-07-27T15:06:16Z", "closed_at": "2018-07-27T15:06:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "`docs/contributing.rst` talks about\r\n\r\n> use pip to install from `requirements.txt`\r\n\r\nis it the same as `dev-requirements.txt`, or is there another one for tests?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/75", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/75/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/75/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/75/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/75", "id": 344322078, "node_id": "MDU6SXNzdWUzNDQzMjIwNzg=", "number": 75, "title": "Automatically set password on Django side on successful LDAP authentication", "user": {"login": "malefice", "id": 7114869, "node_id": "MDQ6VXNlcjcxMTQ4Njk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7114869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malefice", "html_url": "https://github.com/malefice", "followers_url": "https://api.github.com/users/malefice/followers", "following_url": "https://api.github.com/users/malefice/following{/other_user}", "gists_url": "https://api.github.com/users/malefice/gists{/gist_id}", "starred_url": "https://api.github.com/users/malefice/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malefice/subscriptions", "organizations_url": "https://api.github.com/users/malefice/orgs", "repos_url": "https://api.github.com/users/malefice/repos", "events_url": "https://api.github.com/users/malefice/events{/privacy}", "received_events_url": "https://api.github.com/users/malefice/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-07-25T07:19:29Z", "updated_at": "2018-08-16T15:03:55Z", "closed_at": "2018-08-16T13:55:30Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "According to the docs, an unusable password is set for any user created by the LDAPBackend. While I agree that this should be the default behavior, I think that we should also add an option that automatically sets/updates/mirrors the password of the user object on the Django side if the LDAP credentials are valid.\r\n\r\nOne scenario where this is especially useful is if one has absolutely no control/visibility over anything involving the LDAP server, like in the case of a 3rd party vendor integrating with a client's LDAP server. If for some reason the client's LDAP server is inaccessible, with this option, the existing users can still use the Django application with the same LDAP credentials w/ no additional steps from a sysadmin. At least this way, you have some form of graceful degradation.\r\n\r\nAnyway, I took a quick look at the code, and I can think of two ways to add this option. Both options involve passing the password to the `_get_or_create_user` method of `_LDAPUser` as shown [here](https://github.com/django-auth-ldap/django-auth-ldap/blob/5c3fbdc9058bdaffb40127dd77d0bf692ecec379/django_auth_ldap/backend.py#L348-L350). From there, we can then create a new setting to run the automatic behavior. If it is more desirable from a design perspective to let the developers handle that explicitly, we can also opt to pass the password to the `django_auth_ldap.backend.populate_user` signal instead.\r\n\r\nThis is all assuming I got things right. If the password is already an attribute of another argument of the `populate_user` signal, then perhaps we can note that in the documentation instead. In any case, I will be glad to create a PR for this. So.. thoughts on this one?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/74", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/74/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/74/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/74/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/74", "id": 343183863, "node_id": "MDU6SXNzdWUzNDMxODM4NjM=", "number": 74, "title": "windows py3 install  django-auth-ldap ERROR\uff01\uff01", "user": {"login": "chaoqunzhai", "id": 17422086, "node_id": "MDQ6VXNlcjE3NDIyMDg2", "avatar_url": "https://avatars0.githubusercontent.com/u/17422086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chaoqunzhai", "html_url": "https://github.com/chaoqunzhai", "followers_url": "https://api.github.com/users/chaoqunzhai/followers", "following_url": "https://api.github.com/users/chaoqunzhai/following{/other_user}", "gists_url": "https://api.github.com/users/chaoqunzhai/gists{/gist_id}", "starred_url": "https://api.github.com/users/chaoqunzhai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chaoqunzhai/subscriptions", "organizations_url": "https://api.github.com/users/chaoqunzhai/orgs", "repos_url": "https://api.github.com/users/chaoqunzhai/repos", "events_url": "https://api.github.com/users/chaoqunzhai/events{/privacy}", "received_events_url": "https://api.github.com/users/chaoqunzhai/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-20T17:14:19Z", "updated_at": "2018-07-21T07:54:14Z", "closed_at": "2018-07-20T17:24:00Z", "author_association": "NONE", "active_lock_reason": null, "body": "building '_ldap' extension\r\n    error: Microsoft Visual C++ 14.0 is required. Get it with \"Microsoft Visual C++ Build Tools\": http://landinghub.visualstudio.com/visual-cpp-build-tools", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/71", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/71/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/71/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/71/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/71", "id": 339641983, "node_id": "MDU6SXNzdWUzMzk2NDE5ODM=", "number": 71, "title": "probleme with ldap groups", "user": {"login": "logxseven", "id": 9774613, "node_id": "MDQ6VXNlcjk3NzQ2MTM=", "avatar_url": "https://avatars3.githubusercontent.com/u/9774613?v=4", "gravatar_id": "", "url": "https://api.github.com/users/logxseven", "html_url": "https://github.com/logxseven", "followers_url": "https://api.github.com/users/logxseven/followers", "following_url": "https://api.github.com/users/logxseven/following{/other_user}", "gists_url": "https://api.github.com/users/logxseven/gists{/gist_id}", "starred_url": "https://api.github.com/users/logxseven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/logxseven/subscriptions", "organizations_url": "https://api.github.com/users/logxseven/orgs", "repos_url": "https://api.github.com/users/logxseven/repos", "events_url": "https://api.github.com/users/logxseven/events{/privacy}", "received_events_url": "https://api.github.com/users/logxseven/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2018-07-09T23:31:03Z", "updated_at": "2019-11-13T05:28:18Z", "closed_at": "2018-09-26T13:02:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "i managed to get ldap authentification working, but the users groups aren't. when a user is autheticated the username, firstname, email ..etc are copied to the session, but the boolean values (gotten from the groups the user belongs to) aren't.\r\n\r\n**this is my settings.py :**\r\n\r\n    AUTHENTICATION_BACKENDS = [\r\n        'django_auth_ldap.backend.LDAPBackend',\r\n        'django.contrib.auth.backends.ModelBackend',\r\n    ]\r\n    \r\n    \r\n    import ldap\r\n    from django_auth_ldap.config import LDAPSearch, GroupOfNamesType, GroupOfUniqueNamesType\r\n    \r\n    AUTH_LDAP_SERVER_URI = \"ldap://openldap\"\r\n    AUTH_LDAP_BIND_DN = \"cn=admin,dc=openldap\"\r\n    AUTH_LDAP_BIND_PASSWORD = \"admin\"\r\n    AUTH_LDAP_USER_SEARCH = LDAPSearch(\"ou=django,dc=openldap\",\r\n        ldap.SCOPE_SUBTREE, \"(cn=%(user)s)\")\r\n    \r\n    AUTH_LDAP_USER_ATTR_MAP = {\r\n        \"first_name\": \"givenName\",\r\n        \"last_name\": \"sn\",\r\n        \"email\": \"mail\",\r\n    }\r\n    \r\n    AUTH_LDAP_CACHE_TIMEOUT = 0\r\n    AUTH_LDAP_GROUP_CACHE_TIMEOUT = 0\r\n    AUTH_LDAP_PROFILE_ATTR_MAP = {\"home_directory\": \"homeDirectory\"}\r\n    AUTH_LDAP_MIRROR_GROUPS = True\r\n    AUTH_LDAP_FIND_GROUP_PERMS = True\r\n    AUTH_LDAP_ALWAYS_UPDATE_USER = True\r\n    \r\n    AUTH_LDAP_GROUP_SEARCH = LDAPSearch(\"dc=openldap\",\r\n        ldap.SCOPE_SUBTREE, \"(objectClass=*)\"\r\n    )\r\n    AUTH_LDAP_GROUP_TYPE = GroupOfNamesType(name_attr='cn')\r\n    \r\n    AUTH_LDAP_USER_FLAGS_BY_GROUP = {\r\n        'is_active': 'cn=active,ou=groups,dc=openldap',\r\n        'is_staff': 'cn=staff,ou=groups,dc=openldap',\r\n        'is_superuser': 'cn=superuser,ou=groups,dc=openldap',\r\n    }\r\n    \r\n    # # Simple group restrictions\r\n    # AUTH_LDAP_REQUIRE_GROUP = 'cn=enabled,ou=groups,dc=openldap',\r\n    # AUTH_LDAP_DENY_GROUP = 'cn=disabled,ou=groups,dc=openldap',\r\n    \r\n    \r\n    ### ERROR LOGGING\r\n    \r\n    import logging\r\n    logger = logging.getLogger('django_auth_ldap')\r\n    logger.addHandler(logging.StreamHandler())\r\n    logger.setLevel(logging.DEBUG)\r\n\r\n**this is my ldap scheme :**\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/csoI3.png\r\n\r\nroot is part of active, staff and superuser.<br>\r\nuser1 is part of active.<br>\r\nthis is what i get when i authenticate a user from a view:\r\ni get the error -> is not a memeber of\r\n\r\n    openldap        | 5b444c1f conn=1015 fd=13 ACCEPT from IP=172.23.0.4:47230 (IP=0.0.0.0:389)\r\n    openldap        | 5b444c1f conn=1015 op=0 BIND dn=\"cn=admin,dc=openldap\" method=128\r\n    openldap        | 5b444c1f conn=1015 op=0 BIND dn=\"cn=admin,dc=openldap\" mech=SIMPLE ssf=0\r\n    openldap        | 5b444c1f conn=1015 op=0 RESULT tag=97 err=0 text=\r\n    openldap        | 5b444c1f conn=1015 op=1 SRCH base=\"ou=django,dc=openldap\" scope=2 deref=0 filter=\"(cn=root)\"\r\n    openldap        | 5b444c1f <= mdb_equality_candidates: (cn) not indexed\r\n    openldap        | 5b444c1f conn=1015 op=1 SEARCH RESULT tag=101 err=0 nentries=1 text=\r\n    django          | search_s('ou=django,dc=openldap', 2, '(cn=%(user)s)') returned 1 objects: cn=root,ou=django,dc=openldap\r\n    openldap        | 5b444c1f conn=1015 op=2 BIND anonymous mech=implicit ssf=0\r\n    openldap        | 5b444c1f conn=1015 op=2 BIND dn=\"cn=root,ou=django,dc=openldap\" method=128\r\n    openldap        | 5b444c1f conn=1015 op=2 BIND dn=\"cn=root,ou=django,dc=openldap\" mech=SIMPLE ssf=0\r\n    openldap        | 5b444c1f conn=1015 op=2 RESULT tag=97 err=0 text=\r\n    django          | Populating Django user root\r\n    openldap        | 5b444c1f conn=1015 op=3 BIND anonymous mech=implicit ssf=0\r\n    openldap        | 5b444c1f conn=1015 op=3 BIND dn=\"cn=admin,dc=openldap\" method=128\r\n    openldap        | 5b444c1f conn=1015 op=3 BIND dn=\"cn=admin,dc=openldap\" mech=SIMPLE ssf=0\r\n    openldap        | 5b444c1f conn=1015 op=3 RESULT tag=97 err=0 text=\r\n    openldap        | 5b444c1f conn=1015 op=4 CMP dn=\"cn=active,ou=groups,dc=openldap\" attr=\"member\"\r\n    openldap        | 5b444c1f conn=1015 op=4 RESULT tag=111 err=16 text=\r\n    django          | cn=root,ou=django,dc=openldap is not a member of cn=active,ou=groups,dc=openldap\r\n    openldap        | 5b444c1f conn=1015 op=5 CMP dn=\"cn=staff,ou=groups,dc=openldap\" attr=\"member\"\r\n    openldap        | 5b444c1f conn=1015 op=5 RESULT tag=111 err=16 text=\r\n    openldap        | 5b444c1f conn=1015 op=6 CMP dn=\"cn=superuser,ou=groups,dc=openldap\" attr=\"member\"\r\n    openldap        | 5b444c1f conn=1015 op=6 RESULT tag=111 err=16 text=\r\n    django          | cn=root,ou=django,dc=openldap is not a member of cn=staff,ou=groups,dc=openldap\r\n    django          | cn=root,ou=django,dc=openldap is not a member of cn=superuser,ou=groups,dc=openldap\r\n    openldap        | 5b444c1f conn=1015 op=7 SRCH base=\"dc=openldap\" scope=2 deref=0 filter=\"(&(objectClass=*)(member=cn=root,ou=django,dc=openldap))\"\r\n    openldap        | 5b444c1f <= mdb_equality_candidates: (member) not indexed\r\n    openldap        | 5b444c1f conn=1015 op=7 SEARCH RESULT tag=101 err=0 nentries=0 text=\r\n    django          | search_s('dc=openldap', 2, '(&(objectClass=*)(member=cn=root,ou=django,dc=openldap))') returned 0 objects:\r\n\r\nPS: the user is autheticated without a problem but when i print `user.is_staff`, `user.is_active` and `user.is_superuser` i get `False` for all of them.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/58", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/58/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/58/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/58/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/58", "id": 334449989, "node_id": "MDU6SXNzdWUzMzQ0NDk5ODk=", "number": 58, "title": "Return different LDAP_SERVER_URI based on the username", "user": {"login": "hetsch", "id": 439359, "node_id": "MDQ6VXNlcjQzOTM1OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/439359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hetsch", "html_url": "https://github.com/hetsch", "followers_url": "https://api.github.com/users/hetsch/followers", "following_url": "https://api.github.com/users/hetsch/following{/other_user}", "gists_url": "https://api.github.com/users/hetsch/gists{/gist_id}", "starred_url": "https://api.github.com/users/hetsch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hetsch/subscriptions", "organizations_url": "https://api.github.com/users/hetsch/orgs", "repos_url": "https://api.github.com/users/hetsch/repos", "events_url": "https://api.github.com/users/hetsch/events{/privacy}", "received_events_url": "https://api.github.com/users/hetsch/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-21T11:22:06Z", "updated_at": "2018-07-12T01:55:46Z", "closed_at": "2018-07-12T01:55:46Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have a usecase where my server uri depends on the username. Currently, users should login with their email addresses which are either `foo@uni-bar.com` or `foo@edu.uni-bar.com`. The difference is the domains is, that one are students (edu) and the others are employees. Both have different LDAP endpoints.\r\n\r\nAccording to the documentation, `settings.SERVER_URI` can be a callable, returning a dynically generated URI. My question would be if you think it would make sense to pass the `request` object to `_LDAPUser` (see: https://github.com/django-auth-ldap/django-auth-ldap/blob/master/django_auth_ldap/backend.py#L148) and to invoke the `setting.SERVER_URI` callback with the request object (https://github.com/django-auth-ldap/django-auth-ldap/blob/master/django_auth_ldap/backend.py#L806). People could then calculate different SERVER_URIs based on the current request.\r\n\r\nDo you think this might be worth implementing, or is there any other way I'm not aware of?\r\n  \r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/57", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/57/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/57/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/57", "id": 331429615, "node_id": "MDU6SXNzdWUzMzE0Mjk2MTU=", "number": 57, "title": "Allow only specific users (no group)", "user": {"login": "dwasyl", "id": 2297074, "node_id": "MDQ6VXNlcjIyOTcwNzQ=", "avatar_url": "https://avatars1.githubusercontent.com/u/2297074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dwasyl", "html_url": "https://github.com/dwasyl", "followers_url": "https://api.github.com/users/dwasyl/followers", "following_url": "https://api.github.com/users/dwasyl/following{/other_user}", "gists_url": "https://api.github.com/users/dwasyl/gists{/gist_id}", "starred_url": "https://api.github.com/users/dwasyl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dwasyl/subscriptions", "organizations_url": "https://api.github.com/users/dwasyl/orgs", "repos_url": "https://api.github.com/users/dwasyl/repos", "events_url": "https://api.github.com/users/dwasyl/events{/privacy}", "received_events_url": "https://api.github.com/users/dwasyl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-06-12T04:02:35Z", "updated_at": "2018-10-01T12:30:06Z", "closed_at": "2018-10-01T12:30:06Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a use case for allowing only a selected set of users. There isn't the flexibility to create a group in the AD, ideally users would be 'selected' by an admin user. Either from a directory listing, or manually typed in. Is it possible to set up something like this using this package? Basically, creating a sort of group on the Django side.\r\n\r\nAny ideas?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/54", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/54/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/54/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/54/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/54", "id": 329461737, "node_id": "MDU6SXNzdWUzMjk0NjE3Mzc=", "number": 54, "title": "'tuple' object has no attribute 'search_with_additional_term_string'", "user": {"login": "krowix", "id": 5384491, "node_id": "MDQ6VXNlcjUzODQ0OTE=", "avatar_url": "https://avatars3.githubusercontent.com/u/5384491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krowix", "html_url": "https://github.com/krowix", "followers_url": "https://api.github.com/users/krowix/followers", "following_url": "https://api.github.com/users/krowix/following{/other_user}", "gists_url": "https://api.github.com/users/krowix/gists{/gist_id}", "starred_url": "https://api.github.com/users/krowix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krowix/subscriptions", "organizations_url": "https://api.github.com/users/krowix/orgs", "repos_url": "https://api.github.com/users/krowix/repos", "events_url": "https://api.github.com/users/krowix/events{/privacy}", "received_events_url": "https://api.github.com/users/krowix/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 879269003, "node_id": "MDU6TGFiZWw4NzkyNjkwMDM=", "url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/labels/question", "name": "question", "color": "d876e3", "default": true, "description": "Further information is requested"}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-06-05T13:40:59Z", "updated_at": "2018-06-08T14:41:40Z", "closed_at": "2018-06-08T14:41:40Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nAfter  successfull login on Active Directory i have this error\r\n\r\n```\r\n[Tue Jun 05 15:35:08 2018] [error] Traceback (most recent call last):\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py\", line 149, in get_response\r\n[Tue Jun 05 15:35:08 2018] [error]     response = self.process_exception_by_middleware(e, request)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\core\\\\handlers\\\\base.py\", line 147, in get_response\r\n[Tue Jun 05 15:35:08 2018] [error]     response = wrapped_callback(request, *callback_args, **callback_kwargs)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\cache.py\", line 57, in _wrapped_view_func\r\n[Tue Jun 05 15:35:08 2018] [error]     response = view_func(request, *args, **kwargs)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\contrib\\\\admin\\\\sites.py\", line 413, in login\r\n[Tue Jun 05 15:35:08 2018] [error]     return login(request, **defaults)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\contrib\\\\auth\\\\views.py\", line 49, in inner\r\n[Tue Jun 05 15:35:08 2018] [error]     return func(*args, **kwargs)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\debug.py\", line 76, in sensitive_post_parameters_wrapper\r\n[Tue Jun 05 15:35:08 2018] [error]     return view(request, *args, **kwargs)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\utils\\\\decorators.py\", line 149, in _wrapped_view\r\n[Tue Jun 05 15:35:08 2018] [error]     response = view_func(request, *args, **kwargs)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\views\\\\decorators\\\\cache.py\", line 57, in _wrapped_view_func\r\n[Tue Jun 05 15:35:08 2018] [error]     response = view_func(request, *args, **kwargs)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\contrib\\\\auth\\\\views.py\", line 69, in login\r\n[Tue Jun 05 15:35:08 2018] [error]     if form.is_valid():\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\forms\\\\forms.py\", line 161, in is_valid\r\n[Tue Jun 05 15:35:08 2018] [error]     return self.is_bound and not self.errors\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\forms\\\\forms.py\", line 153, in errors\r\n[Tue Jun 05 15:35:08 2018] [error]     self.full_clean()\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\forms\\\\forms.py\", line 363, in full_clean\r\n[Tue Jun 05 15:35:08 2018] [error]     self._clean_form()\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\forms\\\\forms.py\", line 390, in _clean_form\r\n[Tue Jun 05 15:35:08 2018] [error]     cleaned_data = self.clean()\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\contrib\\\\auth\\\\forms.py\", line 159, in clean\r\n[Tue Jun 05 15:35:08 2018] [error]     password=password)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django\\\\contrib\\\\auth\\\\__init__.py\", line 74, in authenticate\r\n[Tue Jun 05 15:35:08 2018] [error]     user = backend.authenticate(**credentials)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django_auth_ldap\\\\backend.py\", line 167, in authenticate\r\n[Tue Jun 05 15:35:08 2018] [error]     user = ldap_user.authenticate(password)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django_auth_ldap\\\\backend.py\", line 339, in authenticate\r\n[Tue Jun 05 15:35:08 2018] [error]     self._get_or_create_user()\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django_auth_ldap\\\\backend.py\", line 561, in _get_or_create_user\r\n[Tue Jun 05 15:35:08 2018] [error]     self._populate_user()\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django_auth_ldap\\\\backend.py\", line 588, in _populate_user\r\n[Tue Jun 05 15:35:08 2018] [error]     self._populate_user_from_group_memberships()\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django_auth_ldap\\\\backend.py\", line 601, in _populate_user_from_group_memberships\r\n[Tue Jun 05 15:35:08 2018] [error]     value = any(self._get_groups().is_member_of(dn) for dn in group_dns)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django_auth_ldap\\\\backend.py\", line 601, in <genexpr>\r\n[Tue Jun 05 15:35:08 2018] [error]     value = any(self._get_groups().is_member_of(dn) for dn in group_dns)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django_auth_ldap\\\\backend.py\", line 816, in is_member_of\r\n[Tue Jun 05 15:35:08 2018] [error]     is_member = (group_dn in self.get_group_dns())\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django_auth_ldap\\\\backend.py\", line 828, in get_group_dns\r\n[Tue Jun 05 15:35:08 2018] [error]     group_infos = self._get_group_infos()\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django_auth_ldap\\\\backend.py\", line 840, in _get_group_infos\r\n[Tue Jun 05 15:35:08 2018] [error]     self._group_search)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django_auth_ldap\\\\config.py\", line 543, in user_groups\r\n[Tue Jun 05 15:35:08 2018] [error]     ldap_user.connection)\r\n[Tue Jun 05 15:35:08 2018] [error]   File \"E:\\\\Python27\\\\lib\\\\site-packages\\\\django_auth_ldap\\\\config.py\", line 561, in find_groups_with_any_member\r\n[Tue Jun 05 15:35:08 2018] [error]     search = group_search.search_with_additional_term_string(filterstr)\r\n[Tue Jun 05 15:35:08 2018] [error] AttributeError: 'tuple' object has no attribute 'search_with_additional_term_string'\r\n```\r\n\r\nCould you help me ?\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/44", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/44/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/44/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/44/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/44", "id": 321886762, "node_id": "MDU6SXNzdWUzMjE4ODY3NjI=", "number": 44, "title": "How to access the user object", "user": {"login": "bisco2", "id": 1143280, "node_id": "MDQ6VXNlcjExNDMyODA=", "avatar_url": "https://avatars2.githubusercontent.com/u/1143280?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bisco2", "html_url": "https://github.com/bisco2", "followers_url": "https://api.github.com/users/bisco2/followers", "following_url": "https://api.github.com/users/bisco2/following{/other_user}", "gists_url": "https://api.github.com/users/bisco2/gists{/gist_id}", "starred_url": "https://api.github.com/users/bisco2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bisco2/subscriptions", "organizations_url": "https://api.github.com/users/bisco2/orgs", "repos_url": "https://api.github.com/users/bisco2/repos", "events_url": "https://api.github.com/users/bisco2/events{/privacy}", "received_events_url": "https://api.github.com/users/bisco2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-05-10T10:37:47Z", "updated_at": "2018-06-05T09:48:39Z", "closed_at": "2018-06-05T09:48:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "hi,\r\ni'm a bit stuck- i'm using django-auth-ldap to authenticate users and that works find. after login the user gets redirected to `/accounts/profile` which calls LdapUserDetail.as_view to show the user its attributes (the User model is just the model as provided by django):\r\n```\r\nclass LdapUserDetail(DetailView):                                                     \r\n    model = User                                         \r\n                                                                                                                                                                                                  \r\n    def get_object(self):\r\n        user = User(pk=self.request.user.id)                                                   \r\n        pprint(vars(user))                               \r\n        return user\r\n```\r\nbut the user objects attributes are all empty and there it does not contain an ldap_user object\r\n```\r\n{'_state': <django.db.models.base.ModelState object at 0x7fe2d8e1e0f0>,\r\n 'date_joined': datetime.datetime(2018, 5, 10, 10, 34, 55, 289991, tzinfo=<UTC>),\r\n 'email': '',\r\n 'first_name': '',\r\n 'id': 1,\r\n 'is_active': True,\r\n 'is_staff': False,\r\n 'is_superuser': False,\r\n 'last_login': None,\r\n 'last_name': '',\r\n 'password': '',\r\n 'username': ''}\r\n```\r\n\r\nI tried to output the user in the ```authenticate``` function in backends.py- there i can access the attributes...\r\nHow can i access the user instance as created by django-auth-ldap?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/22", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/22/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/22/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/22/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/22", "id": 315357930, "node_id": "MDU6SXNzdWUzMTUzNTc5MzA=", "number": 22, "title": "Docs at https://django-auth-ldap.readthedocs.io/en/latest/ point to wrong repo", "user": {"login": "takeontom", "id": 423709, "node_id": "MDQ6VXNlcjQyMzcwOQ==", "avatar_url": "https://avatars3.githubusercontent.com/u/423709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/takeontom", "html_url": "https://github.com/takeontom", "followers_url": "https://api.github.com/users/takeontom/followers", "following_url": "https://api.github.com/users/takeontom/following{/other_user}", "gists_url": "https://api.github.com/users/takeontom/gists{/gist_id}", "starred_url": "https://api.github.com/users/takeontom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/takeontom/subscriptions", "organizations_url": "https://api.github.com/users/takeontom/orgs", "repos_url": "https://api.github.com/users/takeontom/repos", "events_url": "https://api.github.com/users/takeontom/events{/privacy}", "received_events_url": "https://api.github.com/users/takeontom/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-04-18T07:14:14Z", "updated_at": "2018-04-20T10:16:30Z", "closed_at": "2018-04-19T01:41:28Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi guys,\r\n\r\nNoticed that your docs at https://django-auth-ldap.readthedocs.io/en/latest/ links to your (dead) Bitbucket repo, rather than this Github repo.\r\n\r\nThe correct URL is in `docs/source/index.rst`, so I guess the readthedocs site is just out of date?\r\n\r\n![image](https://user-images.githubusercontent.com/423709/38916588-eb7fa060-42df-11e8-9ff7-4b5d168c1422.png)", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/20", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/20/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/20/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/20", "id": 314202223, "node_id": "MDU6SXNzdWUzMTQyMDIyMjM=", "number": 20, "title": "Cache key error when DN is unicode", "user": {"login": "nijel", "id": 212189, "node_id": "MDQ6VXNlcjIxMjE4OQ==", "avatar_url": "https://avatars0.githubusercontent.com/u/212189?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nijel", "html_url": "https://github.com/nijel", "followers_url": "https://api.github.com/users/nijel/followers", "following_url": "https://api.github.com/users/nijel/following{/other_user}", "gists_url": "https://api.github.com/users/nijel/gists{/gist_id}", "starred_url": "https://api.github.com/users/nijel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nijel/subscriptions", "organizations_url": "https://api.github.com/users/nijel/orgs", "repos_url": "https://api.github.com/users/nijel/repos", "events_url": "https://api.github.com/users/nijel/events{/privacy}", "received_events_url": "https://api.github.com/users/nijel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2018-04-13T18:10:29Z", "updated_at": "2018-07-05T13:43:18Z", "closed_at": "2018-07-05T13:43:18Z", "author_association": "NONE", "active_lock_reason": null, "body": "When AUTH_LDAP_CACHE_GROUPS is True and user DN contains unicode chars, following error happens when cache backend does not support unicode keys:\r\n\r\n```\r\n  File \"/app/weblate/.local/lib/python2.7/site-packages/django/contrib/auth/models.py\", line 277, in has_perm\r\n    return _user_has_perm(self, perm, obj)\r\n  File \"/app/weblate/.local/lib/python2.7/site-packages/django/contrib/auth/models.py\", line 190, in _user_has_perm\r\n    if backend.has_perm(user, perm, obj):\r\n  File \"/usr/lib/python2.7/dist-packages/django_auth_ldap/backend.py\", line 183, in has_perm\r\n    return perm in self.get_all_permissions(user, obj)\r\n  File \"/usr/lib/python2.7/dist-packages/django_auth_ldap/backend.py\", line 193, in get_all_permissions\r\n    return self.get_group_permissions(user, obj)\r\n  File \"/usr/lib/python2.7/dist-packages/django_auth_ldap/backend.py\", line 200, in get_group_permissions\r\n    return user.ldap_user.get_group_permissions()\r\n  File \"/usr/lib/python2.7/dist-packages/django_auth_ldap/backend.py\", line 367, in get_group_permissions\r\n    self._load_group_permissions()\r\n  File \"/usr/lib/python2.7/dist-packages/django_auth_ldap/backend.py\", line 690, in _load_group_permissions\r\n    group_names = self._get_groups().get_group_names()\r\n  File \"/usr/lib/python2.7/dist-packages/django_auth_ldap/backend.py\", line 789, in get_group_names\r\n    self._load_cached_attr(\"_group_names\")\r\n  File \"/usr/lib/python2.7/dist-packages/django_auth_ldap/backend.py\", line 847, in _load_cached_attr\r\n    value = cache.get(key)\r\n  File \"/usr/lib/python2.7/dist-packages/django_redis/cache.py\", line 34, in _decorator\r\n    return method(self, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/dist-packages/django_redis/cache.py\", line 83, in get\r\n    client=client)\r\n  File \"/usr/lib/python2.7/dist-packages/django_redis/client/default.py\", line 204, in get\r\n    key = self.make_key(key, version=version)\r\n  File \"/usr/lib/python2.7/dist-packages/django_redis/client/default.py\", line 523, in make_key\r\n    return CacheKey(self._backend.key_func(key, prefix, version))\r\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xb4' in position 63: ordinal not in range(128)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/19", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/19/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/19/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/19/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/19", "id": 313450484, "node_id": "MDU6SXNzdWUzMTM0NTA0ODQ=", "number": 19, "title": "Can't authenticate with LDAP after moving user to another OU", "user": {"login": "sergeykorablin", "id": 37698016, "node_id": "MDQ6VXNlcjM3Njk4MDE2", "avatar_url": "https://avatars3.githubusercontent.com/u/37698016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sergeykorablin", "html_url": "https://github.com/sergeykorablin", "followers_url": "https://api.github.com/users/sergeykorablin/followers", "following_url": "https://api.github.com/users/sergeykorablin/following{/other_user}", "gists_url": "https://api.github.com/users/sergeykorablin/gists{/gist_id}", "starred_url": "https://api.github.com/users/sergeykorablin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sergeykorablin/subscriptions", "organizations_url": "https://api.github.com/users/sergeykorablin/orgs", "repos_url": "https://api.github.com/users/sergeykorablin/repos", "events_url": "https://api.github.com/users/sergeykorablin/events{/privacy}", "received_events_url": "https://api.github.com/users/sergeykorablin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2018-04-11T19:08:27Z", "updated_at": "2018-06-02T17:36:51Z", "closed_at": "2018-06-02T17:36:51Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi! \r\nI have setup LDAP auth in zulip with django_auth_ldap, it work fine, but after moving user to another organization unit (OU) he can't login.\r\nMy settings:\r\n```\r\nAUTH_LDAP_SERVER_URI = \"ldap://domain.ru\"\r\n\r\nAUTH_LDAP_CONNECTION_OPTIONS = {\r\n    ldap.OPT_REFERRALS: 0,\r\n}\r\nAUTH_LDAP_USER_SEARCH = LDAPSearch(\"ou=MainDepartment,dc=domain,dc=ru\",\r\nldap.SCOPE_SUBTREE, \"(&(objectclass=person)(objectclass=user)(mail=%(user)s))\")\r\n```\r\n\r\nUser has been moved from\r\nou=**SubDepartment1**,ou=MainDepartment,dc=domain,dc=ru\r\nto\r\nou=**SubDepartment2**,ou=MainDepartment,dc=domain,dc=ru\r\n\r\nI don't understand why this makes a problem. Both DN must match the ldap search filter.\r\n\r\n```\r\n./manage.py shell\r\nfrom django_auth_ldap.backend import LDAPBackend\r\nldapobj = LDAPBackend()\r\nuser = ldapobj.populate_user('username@domain.ru')\r\n\r\n2018-04-11 18:22:48.193 ERR  [django_auth_ldap] search_s('cn=fname lname,ou=subdepartment1,ou=maindepartment,dc=domain,dc=ru', 0, '(objectClass=*)') raised NO_SUCH_OBJECT(\r\n{'info': \"0000208D: NameErr: DSID-03100238, \r\n problem 2001 (NO_OBJECT), \r\n data 0, \r\n best match of:\\n\\t'OU=SubDepartment1,OU=MainDepartment,DC=domain,DC=ru'\\n\",\r\n 'matched': 'OU=SubDepartment1,OU=MainDepartment,DC=domain,DC=ru', \r\n'desc': 'No such object'},)\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/18", "repository_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap", "labels_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/18/labels{/name}", "comments_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/18/comments", "events_url": "https://api.github.com/repos/django-auth-ldap/django-auth-ldap/issues/18/events", "html_url": "https://github.com/django-auth-ldap/django-auth-ldap/issues/18", "id": 312293043, "node_id": "MDU6SXNzdWUzMTIyOTMwNDM=", "number": 18, "title": "Custom user model with extra fields", "user": {"login": "guanxudong", "id": 7720049, "node_id": "MDQ6VXNlcjc3MjAwNDk=", "avatar_url": "https://avatars0.githubusercontent.com/u/7720049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guanxudong", "html_url": "https://github.com/guanxudong", "followers_url": "https://api.github.com/users/guanxudong/followers", "following_url": "https://api.github.com/users/guanxudong/following{/other_user}", "gists_url": "https://api.github.com/users/guanxudong/gists{/gist_id}", "starred_url": "https://api.github.com/users/guanxudong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guanxudong/subscriptions", "organizations_url": "https://api.github.com/users/guanxudong/orgs", "repos_url": "https://api.github.com/users/guanxudong/repos", "events_url": "https://api.github.com/users/guanxudong/events{/privacy}", "received_events_url": "https://api.github.com/users/guanxudong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-04-08T10:18:01Z", "updated_at": "2018-04-09T02:51:33Z", "closed_at": "2018-04-09T02:51:33Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi Guys,\r\n    It seems like get_or_build_user() can not work well with custom user model. \r\n    It only create new user with `username` field ?  If my model need extra required fields, how can I do with it?\r\n    Here is my custom user model below,\r\n```python\r\n    class CustomUser(AbstractUser):\r\n        # extra fields\r\n        company = models.ForeignKey(Company, on_delete=models.CASCADE)\r\n```\r\n  ", "performed_via_github_app": null, "score": 1.0}]}