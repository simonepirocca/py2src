{"total_count": 19, "incomplete_results": false, "items": [{"url": "https://api.github.com/repos/sanand0/xmljson/issues/43", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/43/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/43/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/43/events", "html_url": "https://github.com/sanand0/xmljson/issues/43", "id": 562617560, "node_id": "MDU6SXNzdWU1NjI2MTc1NjA=", "number": 43, "title": "unclosed token: line 191784", "user": {"login": "odo2063", "id": 15078667, "node_id": "MDQ6VXNlcjE1MDc4NjY3", "avatar_url": "https://avatars2.githubusercontent.com/u/15078667?v=4", "gravatar_id": "", "url": "https://api.github.com/users/odo2063", "html_url": "https://github.com/odo2063", "followers_url": "https://api.github.com/users/odo2063/followers", "following_url": "https://api.github.com/users/odo2063/following{/other_user}", "gists_url": "https://api.github.com/users/odo2063/gists{/gist_id}", "starred_url": "https://api.github.com/users/odo2063/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/odo2063/subscriptions", "organizations_url": "https://api.github.com/users/odo2063/orgs", "repos_url": "https://api.github.com/users/odo2063/repos", "events_url": "https://api.github.com/users/odo2063/events{/privacy}", "received_events_url": "https://api.github.com/users/odo2063/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-02-10T14:58:19Z", "updated_at": "2020-02-10T15:10:04Z", "closed_at": "2020-02-10T15:10:04Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi!\r\n\r\nI am getting an error when parsing a file:\r\n```\r\n$ xml2json -o test.json lod1_33358-5804_geb.gml\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/xml2json\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python3.6/dist-packages/xmljson/__main__.py\", line 39, in main\r\n    json.dump(dialect.data(parse(in_file).getroot()), out_file, indent=2)\r\n  File \"/usr/lib/python3.6/xml/etree/ElementTree.py\", line 1196, in parse\r\n    tree.parse(source, parser)\r\n  File \"/usr/lib/python3.6/xml/etree/ElementTree.py\", line 597, in parse\r\n    self._root = parser._parse_whole(source)\r\nxml.etree.ElementTree.ParseError: unclosed token: line 191784, column 8\r\n```\r\n\r\nThe suspected Line is this(the middle one):\r\n```\r\n<gen:stringAttribute name=\"MittlereTraufHoehe\">\r\n        <gen:value>40.65</gen:value>\r\n</gen:stringAttribute>\r\n```\r\n\r\nThe other 16810 files from the Provider are parsed without errors.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/37", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/37/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/37/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/37/events", "html_url": "https://github.com/sanand0/xmljson/issues/37", "id": 398607950, "node_id": "MDU6SXNzdWUzOTg2MDc5NTA=", "number": 37, "title": "Handling Self Closing Tags", "user": {"login": "dvilajeti01", "id": 43216832, "node_id": "MDQ6VXNlcjQzMjE2ODMy", "avatar_url": "https://avatars2.githubusercontent.com/u/43216832?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvilajeti01", "html_url": "https://github.com/dvilajeti01", "followers_url": "https://api.github.com/users/dvilajeti01/followers", "following_url": "https://api.github.com/users/dvilajeti01/following{/other_user}", "gists_url": "https://api.github.com/users/dvilajeti01/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvilajeti01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvilajeti01/subscriptions", "organizations_url": "https://api.github.com/users/dvilajeti01/orgs", "repos_url": "https://api.github.com/users/dvilajeti01/repos", "events_url": "https://api.github.com/users/dvilajeti01/events{/privacy}", "received_events_url": "https://api.github.com/users/dvilajeti01/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 260070850, "node_id": "MDU6TGFiZWwyNjAwNzA4NTA=", "url": "https://api.github.com/repos/sanand0/xmljson/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sanand0", "id": 63734, "node_id": "MDQ6VXNlcjYzNzM0", "avatar_url": "https://avatars3.githubusercontent.com/u/63734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanand0", "html_url": "https://github.com/sanand0", "followers_url": "https://api.github.com/users/sanand0/followers", "following_url": "https://api.github.com/users/sanand0/following{/other_user}", "gists_url": "https://api.github.com/users/sanand0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanand0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanand0/subscriptions", "organizations_url": "https://api.github.com/users/sanand0/orgs", "repos_url": "https://api.github.com/users/sanand0/repos", "events_url": "https://api.github.com/users/sanand0/events{/privacy}", "received_events_url": "https://api.github.com/users/sanand0/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sanand0", "id": 63734, "node_id": "MDQ6VXNlcjYzNzM0", "avatar_url": "https://avatars3.githubusercontent.com/u/63734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanand0", "html_url": "https://github.com/sanand0", "followers_url": "https://api.github.com/users/sanand0/followers", "following_url": "https://api.github.com/users/sanand0/following{/other_user}", "gists_url": "https://api.github.com/users/sanand0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanand0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanand0/subscriptions", "organizations_url": "https://api.github.com/users/sanand0/orgs", "repos_url": "https://api.github.com/users/sanand0/repos", "events_url": "https://api.github.com/users/sanand0/events{/privacy}", "received_events_url": "https://api.github.com/users/sanand0/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 10, "created_at": "2019-01-13T01:03:57Z", "updated_at": "2019-02-12T19:10:51Z", "closed_at": "2019-02-10T08:26:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "How can I treat self closing tags or empty elements as   \"element\": \"\"   **instead of**   \"element\": {}?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/34", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/34/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/34/events", "html_url": "https://github.com/sanand0/xmljson/issues/34", "id": 382824546, "node_id": "MDU6SXNzdWUzODI4MjQ1NDY=", "number": 34, "title": "tail nodes not covered", "user": {"login": "ariejdl", "id": 220554, "node_id": "MDQ6VXNlcjIyMDU1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/220554?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ariejdl", "html_url": "https://github.com/ariejdl", "followers_url": "https://api.github.com/users/ariejdl/followers", "following_url": "https://api.github.com/users/ariejdl/following{/other_user}", "gists_url": "https://api.github.com/users/ariejdl/gists{/gist_id}", "starred_url": "https://api.github.com/users/ariejdl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ariejdl/subscriptions", "organizations_url": "https://api.github.com/users/ariejdl/orgs", "repos_url": "https://api.github.com/users/ariejdl/repos", "events_url": "https://api.github.com/users/ariejdl/events{/privacy}", "received_events_url": "https://api.github.com/users/ariejdl/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-20T19:55:38Z", "updated_at": "2018-11-22T15:13:05Z", "closed_at": "2018-11-22T15:13:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "when parsing a node, the 'tail' text is lost e.g. 'text2' in `<a><span>text</span>text 2</a>`, it would be nice if the library used the `.tail` attribute of lxml nodes.  By the way, as a result of the lack of this feature I moved to the xmltodict library.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/31", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/31/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/31/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/31/events", "html_url": "https://github.com/sanand0/xmljson/issues/31", "id": 309254189, "node_id": "MDU6SXNzdWUzMDkyNTQxODk=", "number": 31, "title": "ImportError: cannot import name 'badgerfish' ", "user": {"login": "PyPatel", "id": 24595575, "node_id": "MDQ6VXNlcjI0NTk1NTc1", "avatar_url": "https://avatars1.githubusercontent.com/u/24595575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PyPatel", "html_url": "https://github.com/PyPatel", "followers_url": "https://api.github.com/users/PyPatel/followers", "following_url": "https://api.github.com/users/PyPatel/following{/other_user}", "gists_url": "https://api.github.com/users/PyPatel/gists{/gist_id}", "starred_url": "https://api.github.com/users/PyPatel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PyPatel/subscriptions", "organizations_url": "https://api.github.com/users/PyPatel/orgs", "repos_url": "https://api.github.com/users/PyPatel/repos", "events_url": "https://api.github.com/users/PyPatel/events{/privacy}", "received_events_url": "https://api.github.com/users/PyPatel/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-03-28T07:41:59Z", "updated_at": "2019-02-08T01:47:06Z", "closed_at": "2018-11-21T17:23:09Z", "author_association": "NONE", "active_lock_reason": null, "body": "    Traceback (most recent call last):\r\n      File \"D:\\Codes\\TPN\\xmljson.py\", line 1, in\r\n        from xmljson import badgerfish as bf\r\n      File \"D:\\Codes\\TPN\\xmljson.py\", line 1, in\r\n        from xmljson import badgerfish as bf\r\n    ImportError: cannot import name 'badgerfish'\r\n\r\nI am using `Python 3.6` ", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/29", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/29/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/29/events", "html_url": "https://github.com/sanand0/xmljson/issues/29", "id": 302906977, "node_id": "MDU6SXNzdWUzMDI5MDY5Nzc=", "number": 29, "title": "None becomes \"None\"", "user": {"login": "jorndoe", "id": 37125735, "node_id": "MDQ6VXNlcjM3MTI1NzM1", "avatar_url": "https://avatars3.githubusercontent.com/u/37125735?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorndoe", "html_url": "https://github.com/jorndoe", "followers_url": "https://api.github.com/users/jorndoe/followers", "following_url": "https://api.github.com/users/jorndoe/following{/other_user}", "gists_url": "https://api.github.com/users/jorndoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorndoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorndoe/subscriptions", "organizations_url": "https://api.github.com/users/jorndoe/orgs", "repos_url": "https://api.github.com/users/jorndoe/repos", "events_url": "https://api.github.com/users/jorndoe/events{/privacy}", "received_events_url": "https://api.github.com/users/jorndoe/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-03-06T23:24:21Z", "updated_at": "2018-11-21T11:58:16Z", "closed_at": "2018-11-21T11:58:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/sanand0/xmljson/blob/93011b14d1536e01283668e377684eef0a2da279/xmljson/__init__.py#L182\r\n\r\nThis line should be:\r\n\r\n```\r\n            if root.text is None:\r\n                return ''\r\n            else:\r\n                return self._fromstring(root.text)\r\n```\r\n\r\nNot good:\r\n`<empty/>` \u2192 `{\"empty\": null}` \u2192 `<empty>None</empty>`\r\n\r\nBetter:\r\n`<empty/>` \u2192 `{\"empty\": null}` \u2192 `<empty></empty>`\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/25", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/25/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/25/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/25/events", "html_url": "https://github.com/sanand0/xmljson/issues/25", "id": 261924485, "node_id": "MDU6SXNzdWUyNjE5MjQ0ODU=", "number": 25, "title": "Have you looked at jxmlease?", "user": {"login": "rcooke", "id": 4250225, "node_id": "MDQ6VXNlcjQyNTAyMjU=", "avatar_url": "https://avatars1.githubusercontent.com/u/4250225?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rcooke", "html_url": "https://github.com/rcooke", "followers_url": "https://api.github.com/users/rcooke/followers", "following_url": "https://api.github.com/users/rcooke/following{/other_user}", "gists_url": "https://api.github.com/users/rcooke/gists{/gist_id}", "starred_url": "https://api.github.com/users/rcooke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rcooke/subscriptions", "organizations_url": "https://api.github.com/users/rcooke/orgs", "repos_url": "https://api.github.com/users/rcooke/repos", "events_url": "https://api.github.com/users/rcooke/events{/privacy}", "received_events_url": "https://api.github.com/users/rcooke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-10-01T15:35:22Z", "updated_at": "2017-10-01T17:48:52Z", "closed_at": "2017-10-01T17:48:52Z", "author_association": "NONE", "active_lock_reason": null, "body": "It was created for a book on automating Juniper 2 years ago.  Seems really sophisticated.  Just wondering if you happened to base your project on it - which would be a cool idea I think.\r\n\r\nhttps://github.com/Juniper/jxmlease\r\n\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/23", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/23/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/23/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/23/events", "html_url": "https://github.com/sanand0/xmljson/issues/23", "id": 242036731, "node_id": "MDU6SXNzdWUyNDIwMzY3MzE=", "number": 23, "title": "\"NAN\"  to invalid json", "user": {"login": "Sasha4ever", "id": 1776959, "node_id": "MDQ6VXNlcjE3NzY5NTk=", "avatar_url": "https://avatars1.githubusercontent.com/u/1776959?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sasha4ever", "html_url": "https://github.com/Sasha4ever", "followers_url": "https://api.github.com/users/Sasha4ever/followers", "following_url": "https://api.github.com/users/Sasha4ever/following{/other_user}", "gists_url": "https://api.github.com/users/Sasha4ever/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sasha4ever/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sasha4ever/subscriptions", "organizations_url": "https://api.github.com/users/Sasha4ever/orgs", "repos_url": "https://api.github.com/users/Sasha4ever/repos", "events_url": "https://api.github.com/users/Sasha4ever/events{/privacy}", "received_events_url": "https://api.github.com/users/Sasha4ever/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-07-11T12:53:45Z", "updated_at": "2017-08-08T09:51:38Z", "closed_at": "2017-08-07T09:28:01Z", "author_association": "NONE", "active_lock_reason": null, "body": "```\r\n>>> from lxml import etree\r\n>>> from xmljson import XMLData\r\n>>> XMLData(attr_prefix=None, dict_type=dict).data(etree.XML('<ROOT test=\"NAN\"/>'))\r\n{'ROOT': {'test': nan}}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/21", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/21/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/21/events", "html_url": "https://github.com/sanand0/xmljson/issues/21", "id": 236677265, "node_id": "MDU6SXNzdWUyMzY2NzcyNjU=", "number": 21, "title": "Abdera child nodes incorrectly placed in same dictionaries", "user": {"login": "mattgd", "id": 9063128, "node_id": "MDQ6VXNlcjkwNjMxMjg=", "avatar_url": "https://avatars1.githubusercontent.com/u/9063128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattgd", "html_url": "https://github.com/mattgd", "followers_url": "https://api.github.com/users/mattgd/followers", "following_url": "https://api.github.com/users/mattgd/following{/other_user}", "gists_url": "https://api.github.com/users/mattgd/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattgd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattgd/subscriptions", "organizations_url": "https://api.github.com/users/mattgd/orgs", "repos_url": "https://api.github.com/users/mattgd/repos", "events_url": "https://api.github.com/users/mattgd/events{/privacy}", "received_events_url": "https://api.github.com/users/mattgd/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-06-17T18:42:39Z", "updated_at": "2017-08-07T02:45:55Z", "closed_at": "2017-08-07T02:45:55Z", "author_association": "NONE", "active_lock_reason": null, "body": "I seemed to have encountered a bug with the Abdera conversion logic, specifically how it converts children:\r\n```\r\nfor child in children:\r\n            child_data = self.data(child)\r\n            if (count[child.tag] == 1\r\n                    and len(children_list) > 1\r\n                    and isinstance(children_list[-1], dict)):\r\n                # Merge keys to existing dictionary\r\n                children_list[-1].update(child_data)\r\n            else:\r\n                # Add additional text\r\n                children_list.append(self.data(child))\r\n```\r\n\r\nWhen given the following XML data:\r\n```\r\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\r\n<Data\r\n   version=\"9.0\"\r\n   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n   xsi:noNamespaceSchemaLocation=\"comp.xsd\">\r\n    <Airport\r\n      country=\"Samoa\"\r\n      city=\"Apia\"\r\n      name=\"Faleolo Intl\"\r\n      lat=\"-13.8296668231487\"\r\n      lon=\"-171.997166723013\"\r\n      alt=\"17.678M\"\r\n      ident=\"NSFA\"\r\n      >\r\n      <Services>\r\n    \t <Fuel\r\n    \t\ttype=\"JETA\"\r\n    \t\tavailability=\"YES\"/>\r\n      </Services>\r\n      <Tower\r\n    \t lat=\"-13.8320958986878\"\r\n    \t lon=\"-171.998676359653\"\r\n    \t alt=\"0.0M\">\r\n      </Tower>\r\n      <Runway\r\n    \t lat=\"-13.8300792127848\"\r\n    \t lon=\"-172.008545994759\"\r\n    \t alt=\"17.678M\"\r\n    \t surface=\"ASPHALT\"\r\n    \t heading=\"89.3199996948242\"\r\n    \t length=\"2999.23M\"\r\n    \t width=\"45.11M\"\r\n    \t number=\"08\"\r\n    \t designator=\"NONE\">\r\n      </Runway>\r\n    </Airport>\r\n</Data>\r\n```\r\nI receive the following output from `ab.data(xml_file)`:\r\n```\r\n{\r\n    \"Data\": {\r\n        \"attributes\": {\r\n            \"version\": 9.0,\r\n            \"{http://www.w3.org/2001/XMLSchema-instance}noNamespaceSchemaLocation\": \"comp.xsd\"\r\n        },\r\n        \"children\": [\r\n            {\r\n                \"Airport\": {\r\n                    \"attributes\": {\r\n                        \"country\": \"Samoa\",\r\n                        \"city\": \"Apia\",\r\n                        \"name\": \"Faleolo Intl\",\r\n                        \"lat\": -13.8296668231487,\r\n                        \"lon\": -171.997166723013,\r\n                        \"alt\": \"17.678M\",\r\n                        \"ident\": \"NSFA\"\r\n                    },\r\n                    \"children\": [\r\n                        {\r\n                            \"Services\": {\r\n                                \"Fuel\": {\r\n                                    \"attributes\": {\r\n                                        \"type\": \"JETA\",\r\n                                        \"availability\": \"YES\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            \"Tower\": {\r\n                                \"attributes\": {\r\n                                    \"lat\": -13.8320958986878,\r\n                                    \"lon\": -171.998676359653,\r\n                                    \"alt\": \"0.0M\"\r\n                                }\r\n                            },\r\n                            \"Runway\": {\r\n                                \"attributes\": {\r\n                                    \"lat\": -13.8300792127848,\r\n                                    \"lon\": -172.008545994759,\r\n                                    \"alt\": \"17.678M\",\r\n                                    \"surface\": \"ASPHALT\",\r\n                                    \"heading\": 89.3199996948242,\r\n                                    \"length\": \"2999.23M\",\r\n                                    \"width\": \"45.11M\",\r\n                                    \"number\": 8,\r\n                                    \"designator\": \"NONE\"\r\n                                }\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\n```\r\n\r\nThe first child node, `Services`, is placed into a separate dictionary, while the rest of the children are placed in the same dictionary. Because multiple tags with the same keys can be present in XML, all children should probably be placed in separate dictionaries.\r\n\r\nI'm working on a PR for this, but if you happen to no what the problem is, let me know.", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/16", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/16/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/16/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/16/events", "html_url": "https://github.com/sanand0/xmljson/issues/16", "id": 226561490, "node_id": "MDU6SXNzdWUyMjY1NjE0OTA=", "number": 16, "title": "Add (Apache) Abdera and (Cisco) Cobra convention", "user": {"login": "dagwieers", "id": 388198, "node_id": "MDQ6VXNlcjM4ODE5OA==", "avatar_url": "https://avatars0.githubusercontent.com/u/388198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dagwieers", "html_url": "https://github.com/dagwieers", "followers_url": "https://api.github.com/users/dagwieers/followers", "following_url": "https://api.github.com/users/dagwieers/following{/other_user}", "gists_url": "https://api.github.com/users/dagwieers/gists{/gist_id}", "starred_url": "https://api.github.com/users/dagwieers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dagwieers/subscriptions", "organizations_url": "https://api.github.com/users/dagwieers/orgs", "repos_url": "https://api.github.com/users/dagwieers/repos", "events_url": "https://api.github.com/users/dagwieers/events{/privacy}", "received_events_url": "https://api.github.com/users/dagwieers/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-05-05T12:43:57Z", "updated_at": "2017-05-09T13:16:16Z", "closed_at": "2017-05-09T13:16:16Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "There is at least one other convention for handling XML attributes in JSON, which is also in use by Cisco for the ACI product.\r\n\r\n```xml\r\n<employees>\r\n    <person>\r\n        <name value=\"Alice\"/>\r\n    </person>\r\n    <person>\r\n        <name value=\"Bob\"/>\r\n    </person>\r\n</employees>\r\n```\r\nbecomes\r\n```json\r\n{ \"employees\": [\r\n    { \"person\": {\r\n        \"name\": {\r\n          \"attributes\": {\"value\": \"Alice\"}\r\n        }\r\n    } },\r\n    { \"person\": {\r\n        \"name\": {\r\n          \"attributes\": {\"value\": \"Alice\"}\r\n        }\r\n    } }\r\n] }\r\n```\r\nIt would be nice if this could be supported as well.\r\n\r\nYou can find more information related to this at: http://wiki.open311.org/JSON_and_XML_Conversion/\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/15", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/15/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/15/events", "html_url": "https://github.com/sanand0/xmljson/issues/15", "id": 211192265, "node_id": "MDU6SXNzdWUyMTExOTIyNjU=", "number": 15, "title": "Given JSON example does not convert to XML correctly", "user": {"login": "sidhire", "id": 4140821, "node_id": "MDQ6VXNlcjQxNDA4MjE=", "avatar_url": "https://avatars3.githubusercontent.com/u/4140821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sidhire", "html_url": "https://github.com/sidhire", "followers_url": "https://api.github.com/users/sidhire/followers", "following_url": "https://api.github.com/users/sidhire/following{/other_user}", "gists_url": "https://api.github.com/users/sidhire/gists{/gist_id}", "starred_url": "https://api.github.com/users/sidhire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sidhire/subscriptions", "organizations_url": "https://api.github.com/users/sidhire/orgs", "repos_url": "https://api.github.com/users/sidhire/repos", "events_url": "https://api.github.com/users/sidhire/events{/privacy}", "received_events_url": "https://api.github.com/users/sidhire/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-03-01T20:03:41Z", "updated_at": "2017-05-29T09:42:54Z", "closed_at": "2017-05-29T09:42:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "The code runs as:\r\n```\r\n>>> temp = {'employees': [{'person': {'name': {'@value': 'Alice'}}}, {'person': {'name': {'@value': 'Bob'}}}]}\r\n\r\n>>> tostring(bf.etree(temp, root=Element('root')))\r\n'<root><employees><person><name value=\"Alice\" /></person></employees><employees><person><name value=\"Bob\" /></person></employees></root>'\r\n```\r\n\r\nWhile the example says it should convert to:\r\n```\r\n'<root><employees><person><name value=\"Alice\" /></person><person><name value=\"Bob\" /></person></employees></root>'\r\n```\r\n\r\nConverting this using `tostring(bf.etree...)` results in the correct XML:\r\n```\r\n{\r\n  \"employees\": {\r\n    \"person\": [\r\n      {\r\n        \"name\": {\r\n          \"@value\": \"Alice\"\r\n        }\r\n      },\r\n      {\r\n        \"name\": {\r\n          \"@value\": \"Bob\"\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n```", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/12", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/12/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/12/events", "html_url": "https://github.com/sanand0/xmljson/issues/12", "id": 190606276, "node_id": "MDU6SXNzdWUxOTA2MDYyNzY=", "number": 12, "title": "gdata to json to xml", "user": {"login": "pandemicsyn", "id": 333354, "node_id": "MDQ6VXNlcjMzMzM1NA==", "avatar_url": "https://avatars0.githubusercontent.com/u/333354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pandemicsyn", "html_url": "https://github.com/pandemicsyn", "followers_url": "https://api.github.com/users/pandemicsyn/followers", "following_url": "https://api.github.com/users/pandemicsyn/following{/other_user}", "gists_url": "https://api.github.com/users/pandemicsyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pandemicsyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pandemicsyn/subscriptions", "organizations_url": "https://api.github.com/users/pandemicsyn/orgs", "repos_url": "https://api.github.com/users/pandemicsyn/repos", "events_url": "https://api.github.com/users/pandemicsyn/events{/privacy}", "received_events_url": "https://api.github.com/users/pandemicsyn/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-21T02:46:11Z", "updated_at": "2016-11-21T03:00:43Z", "closed_at": "2016-11-21T03:00:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi, In one of your stackoverflow answers referencing this library. You mention that: \r\n\r\n> It's possible to convert from XML to JSON and from JSON to XML using the same conventions\r\n\r\nBut how to best do that is a bit non-obvious to me. I'm dumping a gdata object to json using this library, but how do I convert back from json to an xml string.  I assume I json.loads into an ordered dict ? Is there a method that will then convert that back into an xml string I can feed atom.core.parse() or the like ?\r\n\r\nMy python's a bit rusty so this might be kind of a dumb question. As an aside, you should setup Gratipay or Paetron, this is a pretty useful library!\r\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/11", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/11/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/11/events", "html_url": "https://github.com/sanand0/xmljson/issues/11", "id": 187082464, "node_id": "MDU6SXNzdWUxODcwODI0NjQ=", "number": 11, "title": "Float silent NaN/Inf conversion", "user": {"login": "gregLibert", "id": 16623956, "node_id": "MDQ6VXNlcjE2NjIzOTU2", "avatar_url": "https://avatars2.githubusercontent.com/u/16623956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gregLibert", "html_url": "https://github.com/gregLibert", "followers_url": "https://api.github.com/users/gregLibert/followers", "following_url": "https://api.github.com/users/gregLibert/following{/other_user}", "gists_url": "https://api.github.com/users/gregLibert/gists{/gist_id}", "starred_url": "https://api.github.com/users/gregLibert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gregLibert/subscriptions", "organizations_url": "https://api.github.com/users/gregLibert/orgs", "repos_url": "https://api.github.com/users/gregLibert/repos", "events_url": "https://api.github.com/users/gregLibert/events{/privacy}", "received_events_url": "https://api.github.com/users/gregLibert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-03T14:54:01Z", "updated_at": "2016-11-04T10:50:35Z", "closed_at": "2016-11-04T10:50:35Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\r\nPython float function silently convert  string like \"NAN\" or \"Infinity\" to nan or inf.\r\nI would like to keep those value as string. If I fork your project and add a function parameter (as strick_number for instance) would you be interested ?\r\nBy the way, regarding the JSON specification true NaN or Inf should be converted to Null, I can also do that if you wish (strick_json?).\r\n\r\nGr\u00e9gory", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/10", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/10/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/10/events", "html_url": "https://github.com/sanand0/xmljson/issues/10", "id": 186480752, "node_id": "MDU6SXNzdWUxODY0ODA3NTI=", "number": 10, "title": "Remove prefiexes", "user": {"login": "Dean-Christian-Armada", "id": 9837087, "node_id": "MDQ6VXNlcjk4MzcwODc=", "avatar_url": "https://avatars3.githubusercontent.com/u/9837087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dean-Christian-Armada", "html_url": "https://github.com/Dean-Christian-Armada", "followers_url": "https://api.github.com/users/Dean-Christian-Armada/followers", "following_url": "https://api.github.com/users/Dean-Christian-Armada/following{/other_user}", "gists_url": "https://api.github.com/users/Dean-Christian-Armada/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dean-Christian-Armada/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dean-Christian-Armada/subscriptions", "organizations_url": "https://api.github.com/users/Dean-Christian-Armada/orgs", "repos_url": "https://api.github.com/users/Dean-Christian-Armada/repos", "events_url": "https://api.github.com/users/Dean-Christian-Armada/events{/privacy}", "received_events_url": "https://api.github.com/users/Dean-Christian-Armada/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-11-01T08:17:56Z", "updated_at": "2016-11-04T08:51:53Z", "closed_at": "2016-11-04T08:51:53Z", "author_association": "NONE", "active_lock_reason": null, "body": "I am aware that the default prefix is \"@\". but can we remove that?", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/8", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/8/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/8/events", "html_url": "https://github.com/sanand0/xmljson/issues/8", "id": 176318635, "node_id": "MDU6SXNzdWUxNzYzMTg2MzU=", "number": 8, "title": "XML namespaces", "user": {"login": "Charnelx", "id": 20394385, "node_id": "MDQ6VXNlcjIwMzk0Mzg1", "avatar_url": "https://avatars1.githubusercontent.com/u/20394385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Charnelx", "html_url": "https://github.com/Charnelx", "followers_url": "https://api.github.com/users/Charnelx/followers", "following_url": "https://api.github.com/users/Charnelx/following{/other_user}", "gists_url": "https://api.github.com/users/Charnelx/gists{/gist_id}", "starred_url": "https://api.github.com/users/Charnelx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Charnelx/subscriptions", "organizations_url": "https://api.github.com/users/Charnelx/orgs", "repos_url": "https://api.github.com/users/Charnelx/repos", "events_url": "https://api.github.com/users/Charnelx/events{/privacy}", "received_events_url": "https://api.github.com/users/Charnelx/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-09-12T08:20:08Z", "updated_at": "2016-11-21T03:03:22Z", "closed_at": "2016-11-21T03:03:22Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi.\n\nDoes this module actually have namespaces support?\n\nFor example i have such XML file with custom namespace prefix v8msg:\n\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<v8msg:Message xmlns:v8msg=\"http://v8.1c.ru/messages\">\n  <v8msg:Header>\n    <v8msg:ExchangePlan>\u041c\u043e\u0431\u0422\u043e\u0440\u0433\u043e\u0432\u043b\u044f</v8msg:ExchangePlan>\n    <v8msg:To>\u041c\u043e\u04311</v8msg:To>\n    <v8msg:From>\u0426\u0423</v8msg:From>\n    <v8msg:MessageNo>83</v8msg:MessageNo>\n    <v8msg:ReceivedNo>0</v8msg:ReceivedNo>\n  </v8msg:Header>\n  <v8msg:Body>\n    <CatalogObject.\u0422\u0438\u043f\u044b\u0426\u0435\u043d\u041d\u043e\u043c\u0435\u043d\u043a\u043b\u0430\u0442\u0443\u0440\u044b>\n      <Ref>ec986086-5ba8-11e4-ae81-74f06d6aab21</Ref>\n      <DeletionMark>false</DeletionMark>\n      <Code>000000001</Code>\n      <Description>\u0420\u043e\u0437\u0434\u0440\u0456\u0431</Description>\n    </CatalogObject.\u0422\u0438\u043f\u044b\u0426\u0435\u043d\u041d\u043e\u043c\u0435\u043d\u043a\u043b\u0430\u0442\u0443\u0440\u044b>\n  </v8msg:Body>\n</v8msg:Message>\n```\n\nAfter conversion XML - to - JSON and backwards i get this:\n\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ns0:Message xmlns:ns0=\"http://v8.1c.ru/messages>\n  <ns0:Header>\n    <ns0:ExchangePlan>\u041c\u043e\u0431\u0422\u043e\u0440\u0433\u043e\u0432\u043b\u044f</v8msg:ExchangePlan>\n    <ns0:To>\u041c\u043e\u04311</v8msg:To>\n    <ns0:From>\u0426\u0423</v8msg:From>\n    <ns0:MessageNo>83</v8msg:MessageNo>\n    <ns0:ReceivedNo>0</v8msg:ReceivedNo>\n  </ns0:Header>\n  <ns0:Body>\n    <CatalogObject.\u0422\u0438\u043f\u044b\u0426\u0435\u043d\u041d\u043e\u043c\u0435\u043d\u043a\u043b\u0430\u0442\u0443\u0440\u044b>\n      <Ref>ec986086-5ba8-11e4-ae81-74f06d6aab21</Ref>\n      <DeletionMark>false</DeletionMark>\n      <Code>000000001</Code>\n      <Description>\u0420\u043e\u0437\u0434\u0440\u0456\u0431</Description>\n    </CatalogObject.\u0422\u0438\u043f\u044b\u0426\u0435\u043d\u041d\u043e\u043c\u0435\u043d\u043a\u043b\u0430\u0442\u0443\u0440\u044b>\n  </ns0:Body>\n</ns0:Message>\n```\n\nSo is there any way to preserve real prefix for namespaces?\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/6", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/6/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/6/events", "html_url": "https://github.com/sanand0/xmljson/issues/6", "id": 166133376, "node_id": "MDU6SXNzdWUxNjYxMzMzNzY=", "number": 6, "title": "mapping to list of lists", "user": {"login": "bsdz", "id": 6608130, "node_id": "MDQ6VXNlcjY2MDgxMzA=", "avatar_url": "https://avatars0.githubusercontent.com/u/6608130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bsdz", "html_url": "https://github.com/bsdz", "followers_url": "https://api.github.com/users/bsdz/followers", "following_url": "https://api.github.com/users/bsdz/following{/other_user}", "gists_url": "https://api.github.com/users/bsdz/gists{/gist_id}", "starred_url": "https://api.github.com/users/bsdz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bsdz/subscriptions", "organizations_url": "https://api.github.com/users/bsdz/orgs", "repos_url": "https://api.github.com/users/bsdz/repos", "events_url": "https://api.github.com/users/bsdz/events{/privacy}", "received_events_url": "https://api.github.com/users/bsdz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-18T16:17:21Z", "updated_at": "2016-11-04T09:01:02Z", "closed_at": "2016-11-04T09:01:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi. Thanks for a great module.\n\nI notice when one does a round-trip from a dictionary containing a list of lists, the result is a dictionary containing a list of strings. This is using the Parker convention.\n\n```\nfrom xml.etree.ElementTree import Element, tostring, fromstring\nfrom xmljson import parker, Parker\n\nxml_str = tostring(parker.etree({'A':[[1,2],[3,4]]}, root=Element('data')))\nParker(dict_type=dict).data(fromstring(xml_str))\n{'A': ['[1, 2]', '[3, 4]']}\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/5", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/5/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/5/events", "html_url": "https://github.com/sanand0/xmljson/issues/5", "id": 160472445, "node_id": "MDU6SXNzdWUxNjA0NzI0NDU=", "number": 5, "title": "Does this project need a maintainer?", "user": {"login": "imaia", "id": 14771411, "node_id": "MDQ6VXNlcjE0NzcxNDEx", "avatar_url": "https://avatars1.githubusercontent.com/u/14771411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/imaia", "html_url": "https://github.com/imaia", "followers_url": "https://api.github.com/users/imaia/followers", "following_url": "https://api.github.com/users/imaia/following{/other_user}", "gists_url": "https://api.github.com/users/imaia/gists{/gist_id}", "starred_url": "https://api.github.com/users/imaia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/imaia/subscriptions", "organizations_url": "https://api.github.com/users/imaia/orgs", "repos_url": "https://api.github.com/users/imaia/repos", "events_url": "https://api.github.com/users/imaia/events{/privacy}", "received_events_url": "https://api.github.com/users/imaia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-15T16:57:31Z", "updated_at": "2016-11-04T08:52:34Z", "closed_at": "2016-11-04T08:52:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/3", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/3/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/3/events", "html_url": "https://github.com/sanand0/xmljson/issues/3", "id": 134306396, "node_id": "MDU6SXNzdWUxMzQzMDYzOTY=", "number": 3, "title": "typing issue", "user": {"login": "miverson", "id": 537909, "node_id": "MDQ6VXNlcjUzNzkwOQ==", "avatar_url": "https://avatars1.githubusercontent.com/u/537909?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miverson", "html_url": "https://github.com/miverson", "followers_url": "https://api.github.com/users/miverson/followers", "following_url": "https://api.github.com/users/miverson/following{/other_user}", "gists_url": "https://api.github.com/users/miverson/gists{/gist_id}", "starred_url": "https://api.github.com/users/miverson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miverson/subscriptions", "organizations_url": "https://api.github.com/users/miverson/orgs", "repos_url": "https://api.github.com/users/miverson/repos", "events_url": "https://api.github.com/users/miverson/events{/privacy}", "received_events_url": "https://api.github.com/users/miverson/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-02-17T15:14:18Z", "updated_at": "2016-02-18T21:59:20Z", "closed_at": "2016-02-18T03:26:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm having an issue where strings that appear to be numeric are being cast into integers.\n\nFor example: \n\n```\n<zip>01234</zip>\n```\n\nconverts to: \n\n```\n\"zip\": 1234\n```\n\nThis could be correctable with a simple test, shown below, or by passing an option to the constructor to bypass the _convert() method.\n\nstr(int('01234')) == '01234'\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/2", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/2/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/2/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/2/events", "html_url": "https://github.com/sanand0/xmljson/issues/2", "id": 107133629, "node_id": "MDU6SXNzdWUxMDcxMzM2Mjk=", "number": 2, "title": "travis failing for tests", "user": {"login": "pratapvardhan", "id": 3757165, "node_id": "MDQ6VXNlcjM3NTcxNjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3757165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pratapvardhan", "html_url": "https://github.com/pratapvardhan", "followers_url": "https://api.github.com/users/pratapvardhan/followers", "following_url": "https://api.github.com/users/pratapvardhan/following{/other_user}", "gists_url": "https://api.github.com/users/pratapvardhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pratapvardhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pratapvardhan/subscriptions", "organizations_url": "https://api.github.com/users/pratapvardhan/orgs", "repos_url": "https://api.github.com/users/pratapvardhan/repos", "events_url": "https://api.github.com/users/pratapvardhan/events{/privacy}", "received_events_url": "https://api.github.com/users/pratapvardhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-18T04:55:54Z", "updated_at": "2015-09-18T07:42:36Z", "closed_at": "2015-09-18T07:42:36Z", "author_association": "NONE", "active_lock_reason": null, "body": "https://travis-ci.org/sanand0/xmljson/jobs/80951823\n\n```\n\n======================================================================\nERROR: test_etree (tests.test_xmljson.TestBadgerFish)\nBadgerFish conversion from data to etree\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/travis/build/sanand0/xmljson/tests/test_xmljson.py\", line 77, in test_etree\n    eq({'x': 'a'}, '<x><a/></x>')\n  File \"/home/travis/build/sanand0/xmljson/tests/test_xmljson.py\", line 42, in assertEqual\n    self.assertEqual(decode(tostring(left)), ''.join(right))\n  File \"lxml.etree.pyx\", line 3236, in lxml.etree.tostring (src/lxml/lxml.etree.c:71960)\nTypeError: Type 'Element' cannot be serialized.\n======================================================================\nERROR: test_etree (tests.test_xmljson.TestGData)\nGData conversion from etree to data\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/travis/build/sanand0/xmljson/tests/test_xmljson.py\", line 232, in test_etree\n    eq({'x': 'a'}, '<x><a/></x>')\n  File \"/home/travis/build/sanand0/xmljson/tests/test_xmljson.py\", line 42, in assertEqual\n    self.assertEqual(decode(tostring(left)), ''.join(right))\n  File \"lxml.etree.pyx\", line 3236, in lxml.etree.tostring (src/lxml/lxml.etree.c:71960)\nTypeError: Type 'Element' cannot be serialized.\n======================================================================\nERROR: test_etree (tests.test_xmljson.TestParker)\nParker conversion from data to etree\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/travis/build/sanand0/xmljson/tests/test_xmljson.py\", line 151, in test_etree\n    eq({'x': 'a'}, '<x>a</x>')\n  File \"/home/travis/build/sanand0/xmljson/tests/test_xmljson.py\", line 42, in assertEqual\n    self.assertEqual(decode(tostring(left)), ''.join(right))\n  File \"lxml.etree.pyx\", line 3236, in lxml.etree.tostring (src/lxml/lxml.etree.c:71960)\nTypeError: Type 'Element' cannot be serialized.\n----------------------------------------------------------------------\nRan 15 tests in 0.010s\nFAILED (errors=3)\n```\n", "performed_via_github_app": null, "score": 1.0}, {"url": "https://api.github.com/repos/sanand0/xmljson/issues/1", "repository_url": "https://api.github.com/repos/sanand0/xmljson", "labels_url": "https://api.github.com/repos/sanand0/xmljson/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/sanand0/xmljson/issues/1/comments", "events_url": "https://api.github.com/repos/sanand0/xmljson/issues/1/events", "html_url": "https://github.com/sanand0/xmljson/issues/1", "id": 106807103, "node_id": "MDU6SXNzdWUxMDY4MDcxMDM=", "number": 1, "title": "Parker convention", "user": {"login": "pratapvardhan", "id": 3757165, "node_id": "MDQ6VXNlcjM3NTcxNjU=", "avatar_url": "https://avatars0.githubusercontent.com/u/3757165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pratapvardhan", "html_url": "https://github.com/pratapvardhan", "followers_url": "https://api.github.com/users/pratapvardhan/followers", "following_url": "https://api.github.com/users/pratapvardhan/following{/other_user}", "gists_url": "https://api.github.com/users/pratapvardhan/gists{/gist_id}", "starred_url": "https://api.github.com/users/pratapvardhan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pratapvardhan/subscriptions", "organizations_url": "https://api.github.com/users/pratapvardhan/orgs", "repos_url": "https://api.github.com/users/pratapvardhan/repos", "events_url": "https://api.github.com/users/pratapvardhan/events{/privacy}", "received_events_url": "https://api.github.com/users/pratapvardhan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-09-16T16:10:21Z", "updated_at": "2015-09-18T02:34:29Z", "closed_at": "2015-09-18T02:34:29Z", "author_association": "NONE", "active_lock_reason": null, "body": "If my understanding is right, for parker convention\n\n``` python\n# xml structure as \n <root><item>1</item><item>2</item><item>three</item></root>\n# gives json\n {\"item\":[\"1\",\"2\",\"three\"]} NOT [\"1\",\"2\",\"three\"]\n```\n\nright? (More [details](https://github.com/shamblett/xml2json/blob/master/lib/src/Xml2JsonParker.dart#L22))\nHowever, in the current implementation\n\n``` python\nparker.data(fromstring('<root><item>1</item><item>2</item><item>three</item></root>'))\n# gives\n{'root': {'item': [{}, {}, {}]}}\n```\n\nGives empty sets.\n", "performed_via_github_app": null, "score": 1.0}]}